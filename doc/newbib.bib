@inProceedings{VenVer04ICLP04IC,
   author = {J. Vennekens and S. Verbaeten and M. Bruynooghe},
   title = {Logic Programs With Annotated Disjunctions},
   booktitle = {International Conference on Logic Programming},
   year = {2004},
   series = {LNCS},
   volume = {3131},
   publisher = {Springer},
   pages = {195-209}   
}

@INPROCEEDINGS{DBLP:conf/ijcai/RaedtKT07,
  author = {De Raedt, L. and A. Kimmig and H. Toivonen},
  title = {{ProbLog}: A Probabilistic {P}rolog and Its Application in Link Discovery.},
  booktitle = {International Joint Conference on Artificial Intelligence},
  year = {2007},
  pages = {2462-2467},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  ee = {http://www.ijcai.org/papers07/Papers/IJCAI07-396.pdf}
}

@INPROCEEDINGS{DBLP:conf/ijcai/SatoK97,
  author = {Taisuke Sato and Yoshitaka Kameya},
  title = {PRISM: A Language for Symbolic-Statistical Modeling},
  booktitle = {International Joint Conference on Artificial Intelligence},
  year = {1997},
  pages = {1330-1339},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@Article{Nitti2016,
  author = {Nitti, Davide and De Laet, Tinne and De Raedt, Luc},
  title="Probabilistic logic programming for hybrid relational domains",
  journal= "Mach. Learn.",
  year="2016",
  volume="103",
  number="3",
  pages="407--449",
  abstract="We introduce a probabilistic language and an efficient inference algorithm based on distributional clauses for static and dynamic inference in hybrid relational domains. Static inference is based on sampling, where the samples represent (partial) worlds (with discrete and continuous variables). Furthermore, we use backward reasoning to determine which facts should be included in the partial worlds. For filtering in dynamic models we combine the static inference algorithm with particle filters and guarantee that the previous partial samples can be safely forgotten, a condition that does not hold in most logical filtering frameworks. Experiments show that the proposed framework can outperform classic sampling methods for static and dynamic inference and that it is promising for robotics and vision applications. In addition, it provides the correct results in domains in which most probabilistic programming languages fail.",
  issn="1573-0565",
  doi="10.1007/s10994-016-5558-8",
  url="http://dx.doi.org/10.1007/s10994-016-5558-8"
}

@article{DBLP:journals/ai/Poole97,
  author    = {David Poole},
  title     = {The Independent Choice Logic for Modelling Multiple Agents
               Under Uncertainty},
  journal   = {Artificial Intelligence},
  volume    = {94},
  number    = {1-2},
  year      = {1997},
  pages     = {7-56},
  ee        = {http://dx.doi.org/10.1016/S0004-3702(97)00027-1},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{DBLP:journals/jair/SatoK01,
  author    = {Taisuke Sato and
               Yoshitaka Kameya},
  title     = {Parameter Learning of Logic Programs for Symbolic-Statistical
               Modeling},
  journal   = {J. Artif. Intell. Res.},
  volume    = {15},
  year      = {2001},
  pages     = {391-454},
  ee        = {http://www.cs.washington.edu/research/jair/abstracts/sato01a.html},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{TLP:8688161,
  author = {Islam,Muhammad Asiful and Ramakrishnan,CR and Ramakrishnan,IV},
  title = {Inference in probabilistic logic programs with continuous random variables},
  journal = {Theory and Practice of Logic Programming},
  volume = {12},
  issue = {Special Issue 4-5},
  month = {7},
  year = {2012},
  issn = {1475-3081},
  pages = {505--523},
  numpages = {19},
  doi = {10.1017/S1471068412000154},
}

@inproceedings{RigSwi10-ICLP10-IC,
	author = {Fabrizio Riguzzi and Terrance Swift},
	title	= {{T}abling and {A}nswer {S}ubsumption for {R}easoning on {L}ogic {P}rograms with {A}nnotated {D}isjunctions},
  booktitle = {Technical Communications of the International Conference on Logic Programming},
  volume = {7},
  year = {2010},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  series = {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN = {978-3-939897-17-0},
  ISSN = {1868-8969},
  pages =	{162--171},
  doi = {10.4230/LIPIcs.ICLP.2010.162}
}

@article{Rig13-FI-IJ,
  author = {Fabrizio Riguzzi},
  title = {{MCINTYRE}: A {Monte Carlo} System for Probabilistic Logic Programming},
  journal = {Fundamenta Informaticae},
  abstract = {Probabilistic Logic Programming is receiving an increasing attention for its ability to model domains with complex and uncertain relations among entities. 
In this paper we concentrate on the problem of approximate inference in probabilistic logic programming languages based on the distribution semantics.
A successful approximate approach is based on Monte Carlo sampling, that consists in verifying the truth of the query in a normal program sampled from the probabilistic program.
The ProbLog system includes such an algorithm and so does the cplint suite.
In this paper we propose an approach for Monte Carlo inference that is based on a program transformation that translates a probabilistic program into a normal program to which the query can be posed.  The current sample is stored in the internal database of the Yap Prolog engine.
The resulting system, called MCINTYRE for Monte Carlo INference wiTh Yap REcord, is evaluated on various problems: biological networks, artificial datasets and a hidden Markov model.  MCINTYRE is compared with the Monte Carlo algorithms of ProbLog and  and with the  exact inference  of the PITA system. The results show  that MCINTYRE is faster than the other Monte Carlo systems.},
  keywords = {Probabilistic Logic Programming,
Monte Carlo Methods,
Logic Programs with Annotated Disjunctions,
ProbLog},
  year = {2013},
  publisher = {{IOS} Press},
  url = {http://ds.ing.unife.it/~friguzzi/Papers/Rig13-FI-IJ.pdf},
  volume = {124},
  number = {4},
  pages = {521-541},
  copyright = {IOS Press},
  doi = {10.3233/FI-2013-847}
}