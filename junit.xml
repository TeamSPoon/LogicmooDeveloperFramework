<testsuites>


<!--
Running Matching Tests: /opt/logicmoo_workspace/bin/test_prolog.sh -k boxlog_sanity_04.pfc.pl missing_count_04.pfc.pl poss_forall_exists_04.pfc.pl
-->

<testsuite name="boxlog_sanity_04.pfc.pl">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['boxlog_sanity_04.pfc.pl'])" -g "test_completed"
failure=info(why_was_true(\+baseKB:(\+ftAtom(iPlato7))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:quotedIsa(iPlato7,ftAtom)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for quotedIsa(iPlato7,ftAtom):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',590) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    2.1 mfl4([ 'I'=iPlato7, 
       'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',591) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:weak_test(weak1,"WeAK2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
catch/3: Unknown procedure: kbii:process_this_script/0Goal (directive) failed: kbii:process_this_script% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(SkXPuppy_1_0FnSk_SkF_X)) :-  
     
  not_in( SkXPuppy_1_0FnSk_SkF_X, 
    skF(1,skXPuppy_1_0FnSk,SkXPuppy_1_0FnSk_SkF_X,[a(puppy(SkXPuppy_1_0FnSk_SkF_X))=true])).
proven_tru( puppy(X)) :-  
     
  skolem(X,skF(1,skXPuppy_1_0FnSk,X,[a(puppy(X))=true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
make_existential(X,skF(1,skXPuppy_1_0FnSk,X,[a(puppy(X))=true])) :-  
     
  ensure_cond(X,puppy(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(SkXPuppy_1_0FnSk_SkF_X)) :-  
     
  not_in( SkXPuppy_1_0FnSk_SkF_X, 
    skF(1,skXPuppy_1_0FnSk,SkXPuppy_1_0FnSk_SkF_X,[a(puppy(SkXPuppy_1_0FnSk_SkF_X))=true])).
make_existential(X,skF(1,skXPuppy_1_0FnSk,X,[a(puppy(X))=true])) :-  
     
  ensure_cond(X,puppy(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(SkXPuppy_1_0FnSk_SkF_X)) :-  
     
  skolem( SkXPuppy_1_0FnSk_SkF_X, 
    skF(1,skXPuppy_1_0FnSk,SkXPuppy_1_0FnSk_SkF_X,[a(puppy(SkXPuppy_1_0FnSk_SkF_X))=true])).
make_existential(X,skF(1,skXPuppy_1_0FnSk,X,[a(puppy(X))=true])) :-  
     
  ensure_cond(X,puppy(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(SkXPuppy_5_0FnSk_SkF_X)) :-  
     
  not_in( SkXPuppy_5_0FnSk_SkF_X, 
    skF(5,skXPuppy_5_0FnSk,SkXPuppy_5_0FnSk_SkF_X,[a(puppy(SkXPuppy_5_0FnSk_SkF_X))=true])).
proven_tru( puppy(X)) :-  
     
  skolem(X,skF(5,skXPuppy_5_0FnSk,X,[a(puppy(X))=true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
make_existential(X,skF(5,skXPuppy_5_0FnSk,X,[a(puppy(X))=true])) :-  
     
  ensure_cond(X,puppy(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(SkXPuppy_5_0FnSk_SkF_X)) :-  
     
  not_in( SkXPuppy_5_0FnSk_SkF_X, 
    skF(5,skXPuppy_5_0FnSk,SkXPuppy_5_0FnSk_SkF_X,[a(puppy(SkXPuppy_5_0FnSk_SkF_X))=true])).
make_existential(X,skF(5,skXPuppy_5_0FnSk,X,[a(puppy(X))=true])) :-  
     
  ensure_cond(X,puppy(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(SkXPuppy_5_0FnSk_SkF_X)) :-  
     
  skolem( SkXPuppy_5_0FnSk_SkF_X, 
    skF(5,skXPuppy_5_0FnSk,SkXPuppy_5_0FnSk_SkF_X,[a(puppy(SkXPuppy_5_0FnSk_SkF_X))=true])).
make_existential(X,skF(5,skXPuppy_5_0FnSk,X,[a(puppy(X))=true])) :-  
     
  ensure_cond(X,puppy(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(SkXCutePuppy_1_0FnSk_SkF_X)) :- 
  nesc( puppy(SkXCutePuppy_1_0FnSk_SkF_X)) , 
  not_in( SkXCutePuppy_1_0FnSk_SkF_X, 
    skF( 1, 
      skXCutePuppy_1_0FnSk, 
      SkXCutePuppy_1_0FnSk_SkF_X, 
      [ a( cute(SkXCutePuppy_1_0FnSk_SkF_X)) =  
             
          true, 
        a( puppy(SkXCutePuppy_1_0FnSk_SkF_X)) =  
             
          true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  nesc( cute(X)) , 
  not_in( X, 
    skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
proven_tru( cute(X)) :-  
     
  skolem( X, 
    skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
make_existential( X, 
  skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])) :- 
  ensure_cond(X,puppy(X)) , 
  ensure_cond(X,cute(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(SkXCutePuppy_1_0FnSk_SkF_X)) :- 
  nesc( puppy(SkXCutePuppy_1_0FnSk_SkF_X)) , 
  not_in( SkXCutePuppy_1_0FnSk_SkF_X, 
    skF( 1, 
      skXCutePuppy_1_0FnSk, 
      SkXCutePuppy_1_0FnSk_SkF_X, 
      [ a( cute(SkXCutePuppy_1_0FnSk_SkF_X)) =  
             
          true, 
        a( puppy(SkXCutePuppy_1_0FnSk_SkF_X)) =  
             
          true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  nesc( cute(X)) , 
  not_in( X, 
    skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
make_existential( X, 
  skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])) :- 
  ensure_cond(X,puppy(X)) , 
  ensure_cond(X,cute(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( cute(SkXCutePuppy_1_0FnSk_SkF_X)) :-  
     
  skolem( SkXCutePuppy_1_0FnSk_SkF_X, 
    skF( 1, 
      skXCutePuppy_1_0FnSk, 
      SkXCutePuppy_1_0FnSk_SkF_X, 
      [ a( cute(SkXCutePuppy_1_0FnSk_SkF_X)) =  
             
          true, 
        a( puppy(SkXCutePuppy_1_0FnSk_SkF_X)) =  
             
          true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
make_existential( X, 
  skF(1,skXCutePuppy_1_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])) :- 
  ensure_cond(X,puppy(X)) , 
  ensure_cond(X,cute(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(SkXCutePuppy_5_0FnSk_SkF_X)) :- 
  nesc( puppy(SkXCutePuppy_5_0FnSk_SkF_X)) , 
  not_in( SkXCutePuppy_5_0FnSk_SkF_X, 
    skF( 5, 
      skXCutePuppy_5_0FnSk, 
      SkXCutePuppy_5_0FnSk_SkF_X, 
      [ a( cute(SkXCutePuppy_5_0FnSk_SkF_X)) =  
             
          true, 
        a( puppy(SkXCutePuppy_5_0FnSk_SkF_X)) =  
             
          true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  nesc( cute(X)) , 
  not_in( X, 
    skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
proven_tru( cute(X)) :-  
     
  skolem( X, 
    skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
make_existential( X, 
  skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])) :- 
  ensure_cond(X,puppy(X)) , 
  ensure_cond(X,cute(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(SkXCutePuppy_5_0FnSk_SkF_X)) :- 
  nesc( puppy(SkXCutePuppy_5_0FnSk_SkF_X)) , 
  not_in( SkXCutePuppy_5_0FnSk_SkF_X, 
    skF( 5, 
      skXCutePuppy_5_0FnSk, 
      SkXCutePuppy_5_0FnSk_SkF_X, 
      [ a( cute(SkXCutePuppy_5_0FnSk_SkF_X)) =  
             
          true, 
        a( puppy(SkXCutePuppy_5_0FnSk_SkF_X)) =  
             
          true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  nesc( cute(X)) , 
  not_in( X, 
    skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
make_existential( X, 
  skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])) :- 
  ensure_cond(X,puppy(X)) , 
  ensure_cond(X,cute(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( cute(SkXCutePuppy_5_0FnSk_SkF_X)) :-  
     
  skolem( SkXCutePuppy_5_0FnSk_SkF_X, 
    skF( 5, 
      skXCutePuppy_5_0FnSk, 
      SkXCutePuppy_5_0FnSk_SkF_X, 
      [ a( cute(SkXCutePuppy_5_0FnSk_SkF_X)) =  
             
          true, 
        a( puppy(SkXCutePuppy_5_0FnSk_SkF_X)) =  
             
          true])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])).
make_existential( X, 
  skF(5,skXCutePuppy_5_0FnSk,X,[a(cute(X))=true,a(puppy(X))=true])) :- 
  ensure_cond(X,puppy(X)) , 
  ensure_cond(X,cute(X)).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) :- 
  nesc( puppy(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) , 
  not_in( Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X, 
    skF( 1, 
      skXPuppyPossCute_1_0FnSk, 
      Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X, 
      [ a( puppy(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) =  
             
          true, 
        a( cute(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) =  
             
          poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  poss( cute(X)) , 
  not_in( X, 
    skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
proven_tru( poss( cute(X))) :-  
     
  skolem( X, 
    skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
make_existential( X, 
  skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])) :- 
  ensure_cond(X,puppy(X)) , 
  never_cond(X,nesc(~cute(X))).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) :- 
  nesc( puppy(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) , 
  not_in( Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X, 
    skF( 1, 
      skXPuppyPossCute_1_0FnSk, 
      Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X, 
      [ a( puppy(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) =  
             
          true, 
        a( cute(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) =  
             
          poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  poss( cute(X)) , 
  not_in( X, 
    skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
make_existential( X, 
  skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])) :- 
  ensure_cond(X,puppy(X)) , 
  never_cond(X,nesc(~cute(X))).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( poss( cute(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X))) :-  
     
  skolem( Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X, 
    skF( 1, 
      skXPuppyPossCute_1_0FnSk, 
      Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X, 
      [ a( puppy(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) =  
             
          true, 
        a( cute(Nesc_SkXPuppyPossCute_1_0FnSk_SkF_X)) =  
             
          poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
make_existential( X, 
  skF(1,skXPuppyPossCute_1_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])) :- 
  ensure_cond(X,puppy(X)) , 
  never_cond(X,nesc(~cute(X))).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) :- 
  nesc( puppy(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) , 
  not_in( Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X, 
    skF( 5, 
      skXPuppyPossCute_5_0FnSk, 
      Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X, 
      [ a( puppy(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) =  
             
          true, 
        a( cute(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) =  
             
          poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  poss( cute(X)) , 
  not_in( X, 
    skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
proven_tru( poss( cute(X))) :-  
     
  skolem( X, 
    skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
make_existential( X, 
  skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])) :- 
  ensure_cond(X,puppy(X)) , 
  never_cond(X,nesc(~cute(X))).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( cute(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) :- 
  nesc( puppy(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) , 
  not_in( Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X, 
    skF( 5, 
      skXPuppyPossCute_5_0FnSk, 
      Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X, 
      [ a( puppy(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) =  
             
          true, 
        a( cute(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) =  
             
          poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_neg( puppy(X)) :- 
  poss( cute(X)) , 
  not_in( X, 
    skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
make_existential( X, 
  skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])) :- 
  ensure_cond(X,puppy(X)) , 
  never_cond(X,nesc(~cute(X))).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( poss( cute(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X))) :-  
     
  skolem( Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X, 
    skF( 5, 
      skXPuppyPossCute_5_0FnSk, 
      Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X, 
      [ a( puppy(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) =  
             
          true, 
        a( cute(Nesc_SkXPuppyPossCute_5_0FnSk_SkF_X)) =  
             
          poss])).
% From /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:979
proven_tru( puppy(X)) :-  
     
  skolem( X, 
    skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])).
make_existential( X, 
  skF(5,skXPuppyPossCute_5_0FnSk,X,[a(puppy(X))=true,a(cute(X))=poss])) :- 
  ensure_cond(X,puppy(X)) , 
  never_cond(X,nesc(~cute(X))).
]]></system-out>

     <testcase name="\naf ftAtom(iPlato7). @ 1246" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" time="0.00008416175842285156">

      <failure message="failure = &quot;failure=info(why_was_true(\\\\+baseKB:(\\\\+ftAtom(iPlato7))))\\n\\x1B\\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m&quot;.\nfailure = [].\n" ><system-err><![CDATA[  failure = "failure=info(why_was_true(\\+baseKB:(\\+ftAtom(iPlato7))))\n\x1B\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m".
failure = [].
  ]]></system-err></failure>

    <system-err><![CDATA[
	goal 	= baseKB:(\+ftAtom(iPlato7)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:1246.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl#L1246</pre>
	failure 	= failure=info(why_was_true(\+baseKB:(\+ftAtom(iPlato7))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 8.416175842285156e-5.
	result 	= failure.

    ]]></system-err>

    </testcase>

     <testcase name="quotedIsa(iPlato7,ftAtom). @ 1250" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" time="0.00007462501525878906">


    <system-err><![CDATA[
	goal 	= baseKB:quotedIsa(iPlato7,ftAtom).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:1250.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl#L1250</pre>
	passed 	= passed=info(why_was_true(baseKB:quotedIsa(iPlato7,ftAtom)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for quotedIsa(iPlato7,ftAtom):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',590) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    2.1 mfl4([ 'I'=iPlato7, 
       'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',591) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 7.462501525878906e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(weak1,&quot;WeAK2&quot;). @ 114' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" time="0.24056744575500488281">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(weak1,WeAK2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:114.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L114</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test(weak1,"WeAK2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.24056744575500488.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(&quot;Weak1&quot;,&quot;Weak2&quot;). @ 116' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" time="0.00600886344909667969">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(Weak1,Weak2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:116.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L116</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test("Weak1","Weak2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for weak_test("Weak1","Weak2"):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl',96) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.00600886344909668.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(&quot;Weak1&quot;,&quot;wEak2&quot;). @ 117' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" time="0.00606298446655273438">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(Weak1,wEak2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:117.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L117</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test("Weak1","wEak2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.006062984466552734.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='Run TestSuite boxlog_sanity_04.pfc.pl' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.boxlog_sanity_04.pl" >

      <error message="error = &quot;catch/3: Unknown procedure: kbii:process_this_script/0&quot;.\nwarning = &quot;Goal (directive) failed: kbii:process_this_script&quot;.\n" ><system-err><![CDATA[  error = "catch/3: Unknown procedure: kbii:process_this_script/0".
warning = "Goal (directive) failed: kbii:process_this_script".
  ]]></system-err></error>

    <system-err><![CDATA[
	error 	= catch/3: Unknown procedure: kbii:process_this_script/0.
	warning 	= Goal (directive) failed: kbii:process_this_script.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite boxlog_sanity_04.pfc.pl" package='loader' time='29'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k boxlog_sanity_04.pfc.pl (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="missing_count_04.pfc.pl">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['missing_count_04.pfc.pl'])" -g "test_completed"
failure=info(why_was_true(\+baseKB:(\+ftAtom(iPlato7))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:quotedIsa(iPlato7,ftAtom)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for quotedIsa(iPlato7,ftAtom):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',590) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    2.1 mfl4([ 'I'=iPlato7, 
       'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',591) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:weak_test(weak1,"WeAK2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="\naf ftAtom(iPlato7). @ 1246" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" time="0.00008273124694824219">

      <failure message="failure = &quot;failure=info(why_was_true(\\\\+baseKB:(\\\\+ftAtom(iPlato7))))\\n\\x1B\\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m&quot;.\nfailure = [].\n" ><system-err><![CDATA[  failure = "failure=info(why_was_true(\\+baseKB:(\\+ftAtom(iPlato7))))\n\x1B\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m".
failure = [].
  ]]></system-err></failure>

    <system-err><![CDATA[
	goal 	= baseKB:(\+ftAtom(iPlato7)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:1246.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl#L1246</pre>
	failure 	= failure=info(why_was_true(\+baseKB:(\+ftAtom(iPlato7))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 8.273124694824219e-5.
	result 	= failure.

    ]]></system-err>

    </testcase>

     <testcase name="quotedIsa(iPlato7,ftAtom). @ 1250" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" time="0.00007390975952148438">


    <system-err><![CDATA[
	goal 	= baseKB:quotedIsa(iPlato7,ftAtom).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:1250.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl#L1250</pre>
	passed 	= passed=info(why_was_true(baseKB:quotedIsa(iPlato7,ftAtom)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for quotedIsa(iPlato7,ftAtom):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',590) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    2.1 mfl4([ 'I'=iPlato7, 
       'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',591) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 7.390975952148438e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(weak1,&quot;WeAK2&quot;). @ 114' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" time="0.15129089355468750000">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(weak1,WeAK2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:114.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L114</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test(weak1,"WeAK2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.1512908935546875.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(&quot;Weak1&quot;,&quot;Weak2&quot;). @ 116' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" time="0.00367641448974609375">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(Weak1,Weak2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:116.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L116</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test("Weak1","Weak2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for weak_test("Weak1","Weak2"):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl',96) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.0036764144897460938.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(&quot;Weak1&quot;,&quot;wEak2&quot;). @ 117' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.missing_count_04.pl" time="0.00382709503173828125">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(Weak1,wEak2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:117.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L117</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test("Weak1","wEak2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.0038270950317382812.
	result 	= passed.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite missing_count_04.pfc.pl" package='loader' time='24'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k missing_count_04.pfc.pl (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="poss_forall_exists_04.pfc.pl">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['poss_forall_exists_04.pfc.pl'])" -g "test_completed"
failure=info(why_was_true(\+baseKB:(\+ftAtom(iPlato7))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:quotedIsa(iPlato7,ftAtom)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for quotedIsa(iPlato7,ftAtom):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',590) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    2.1 mfl4([ 'I'=iPlato7, 
       'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',591) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:weak_test(weak1,"WeAK2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
junit:generate_doc/0, which is referenced by
	/root/.local/share/swi-prolog/pack/instant_prolog_docs/prolog/junit.pl:24: 2-nd clause of junit:run_junit_tests/1
mpred_type_constraints:#=/2, which is referenced by
	/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:804:67: 1-st clause of mpred_type_constraints:not_rejected_cond/2
mpred_type_constraints:#\=/2, which is referenced by
	/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:791:62: 1-st clause of mpred_type_constraints:rejects_cond/2
snark_theorist:explain_cmd/1, which is referenced by
	/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/common_logic/common_logic_theorist.pl:1798:25: 1-st clause of snark_theorist:th_call/1
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1Goal (directive) failed: baseKB:must(~possible(livesAt(joe,green_house)))
 /* found 0 for baseKB:mpred_why(~possible(livesAt(joe,green_house)),_522054). 
 */ 
error(error(instantiation_error,_136312))=info(why_was_true(baseKB:livesAt(_134920,green_house)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for livesAt(_134920,green_house):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/t/examples/fol/poss_forall_exists_04.pfc.pl',55) 
    1.2 ax  % [mfl4(_143054,_143056,_143058,_143060)] 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
failure=info(why_was_true(\+baseKB: ~possible(livesAt(_144110,green_house))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB: ~possible(livesAt(_144110,green_house)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB: ~possible(livesAt(_144110,green_house)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB: ~possible(livesAt(_144110,green_house)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="\naf ftAtom(iPlato7). @ 1246" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.00008392333984375000">

      <failure message="failure = &quot;failure=info(why_was_true(\\\\+baseKB:(\\\\+ftAtom(iPlato7))))\\n\\x1B\\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:(\\\\+ftAtom(iPlato7)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m&quot;.\nfailure = [].\n" ><system-err><![CDATA[  failure = "failure=info(why_was_true(\\+baseKB:(\\+ftAtom(iPlato7))))\n\x1B\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:(\\+ftAtom(iPlato7)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m".
failure = [].
  ]]></system-err></failure>

    <system-err><![CDATA[
	goal 	= baseKB:(\+ftAtom(iPlato7)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:1246.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl#L1246</pre>
	failure 	= failure=info(why_was_true(\+baseKB:(\+ftAtom(iPlato7))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:(\+ftAtom(iPlato7)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 8.392333984375e-5.
	result 	= failure.

    ]]></system-err>

    </testcase>

     <testcase name="quotedIsa(iPlato7,ftAtom). @ 1250" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.00010728836059570312">


    <system-err><![CDATA[
	goal 	= baseKB:quotedIsa(iPlato7,ftAtom).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl:1250.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl#L1250</pre>
	passed 	= passed=info(why_was_true(baseKB:quotedIsa(iPlato7,ftAtom)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for quotedIsa(iPlato7,ftAtom):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',590) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    2.1 mfl4([ 'I'=iPlato7, 
       'C'=ftAtom],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_common.pfc.pl',591) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.00010728836059570312.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(weak1,&quot;WeAK2&quot;). @ 114' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.15675449371337890625">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(weak1,WeAK2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:114.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L114</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test(weak1,"WeAK2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test(weak1,"WeAK2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.1567544937133789.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(&quot;Weak1&quot;,&quot;Weak2&quot;). @ 116' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.00516915321350097656">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(Weak1,Weak2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:116.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L116</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test("Weak1","Weak2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for weak_test("Weak1","Weak2"):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl',96) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.0051691532135009766.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='weak_test(&quot;Weak1&quot;,&quot;wEak2&quot;). @ 117' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.00505089759826660156">


    <system-err><![CDATA[
	goal 	= baseKB:weak_test(Weak1,wEak2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl:117.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/prolog/logicmoo/pfc/system_constraints.pfc.pl#L117</pre>
	passed 	= passed=info(why_was_true(baseKB:weak_test("Weak1","wEak2")))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for weak_test("Weak1","wEak2"). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.0050508975982666016.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name='Run TestSuite poss_forall_exists_04.pfc.pl' package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" >

      <error message="warning = &quot;The predicates below are not defined. If these are defined\\nat runtime using assert/1, use :- dynamic Name/Arity.\\n\\nbutterfly:bflyz/1, which is referenced by\\n\\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1\\nbutterfly:send_tokens/1, which is referenced by\\n\\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2\\njunit:generate_doc/0, which is referenced by\\n\\t/root/.local/share/swi-prolog/pack/instant_prolog_docs/prolog/junit.pl:24: 2-nd clause of junit:run_junit_tests/1\\nmpred_type_constraints:#=/2, which is referenced by\\n\\t/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:804:67: 1-st clause of mpred_type_constraints:not_rejected_cond/2\\nmpred_type_constraints:#\\\\=/2, which is referenced by\\n\\t/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:791:62: 1-st clause of mpred_type_constraints:rejects_cond/2\\nsnark_theorist:explain_cmd/1, which is referenced by\\n\\t/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/common_logic/common_logic_theorist.pl:1798:25: 1-st clause of snark_theorist:th_call/1\\nswish_config:json_config/2, which is referenced by\\n\\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1\\nswish_config:reply_json/1, which is referenced by\\n\\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1&quot;.\nwarning = &quot;Goal (directive) failed: baseKB:must(~possible(livesAt(joe,green_house)))&quot;.\n" ><system-err><![CDATA[  warning = "The predicates below are not defined. If these are defined\nat runtime using assert/1, use :- dynamic Name/Arity.\n\nbutterfly:bflyz/1, which is referenced by\n\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1\nbutterfly:send_tokens/1, which is referenced by\n\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2\njunit:generate_doc/0, which is referenced by\n\t/root/.local/share/swi-prolog/pack/instant_prolog_docs/prolog/junit.pl:24: 2-nd clause of junit:run_junit_tests/1\nmpred_type_constraints:#=/2, which is referenced by\n\t/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:804:67: 1-st clause of mpred_type_constraints:not_rejected_cond/2\nmpred_type_constraints:#\\=/2, which is referenced by\n\t/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:791:62: 1-st clause of mpred_type_constraints:rejects_cond/2\nsnark_theorist:explain_cmd/1, which is referenced by\n\t/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/common_logic/common_logic_theorist.pl:1798:25: 1-st clause of snark_theorist:th_call/1\nswish_config:json_config/2, which is referenced by\n\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1\nswish_config:reply_json/1, which is referenced by\n\t/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1".
warning = "Goal (directive) failed: baseKB:must(~possible(livesAt(joe,green_house)))".
  ]]></system-err></error>

    <system-err><![CDATA[
	warning 	= The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
junit:generate_doc/0, which is referenced by
	/root/.local/share/swi-prolog/pack/instant_prolog_docs/prolog/junit.pl:24: 2-nd clause of junit:run_junit_tests/1
mpred_type_constraints:#=/2, which is referenced by
	/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:804:67: 1-st clause of mpred_type_constraints:not_rejected_cond/2
mpred_type_constraints:#\=/2, which is referenced by
	/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/typesystem/mpred_type_constraints.pl:791:62: 1-st clause of mpred_type_constraints:rejects_cond/2
snark_theorist:explain_cmd/1, which is referenced by
	/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/prolog/logicmoo/common_logic/common_logic_theorist.pl:1798:25: 1-st clause of snark_theorist:th_call/1
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1.
	warning 	= Goal (directive) failed: baseKB:must(~possible(livesAt(joe,green_house))).

    ]]></system-err>

    </testcase>

     <testcase name="livesAt(_134920,green_house). @ 82" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.00006270408630371094">

      <error message="error = [error(instantiation_error,_159644)].\n" ><system-err><![CDATA[  error = [error(instantiation_error,_159644)].
  ]]></system-err></error>

    <system-err><![CDATA[
	goal 	= baseKB:livesAt(_159728,green_house).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/t/examples/fol/poss_forall_exists_04.pfc.pl:82.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/t/examples/fol/poss_forall_exists_04.pfc.pl#L82</pre>
	error(error(instantiation_error,_159728)) 	= error(error(instantiation_error,_136312))=info(why_was_true(baseKB:livesAt(_134920,green_house)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for livesAt(_134920,green_house):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/t/examples/fol/poss_forall_exists_04.pfc.pl',55) 
    1.2 ax  % [mfl4(_143054,_143056,_143058,_143060)] 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 6.270408630371094e-5.
	error 	= [error(instantiation_error,_159730)].
	result 	= error.

    ]]></system-err>

    </testcase>

     <testcase name="~possible(livesAt(_144110,green_house)). @ 85" package=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sys.logicmoo_base.examples.fol.poss_forall_exists_04.pl" time="0.00013399124145507812">

      <failure message="failure = &quot;failure=info(why_was_true(\\\\+baseKB: ~possible(livesAt(_144110,green_house))))\\n\\x1B\\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB: ~possible(livesAt(_144110,green_house)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB: ~possible(livesAt(_144110,green_house)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB: ~possible(livesAt(_144110,green_house)). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m&quot;.\nfailure = [].\n" ><system-err><![CDATA[  failure = "failure=info(why_was_true(\\+baseKB: ~possible(livesAt(_144110,green_house))))\n\x1B\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB: ~possible(livesAt(_144110,green_house)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB: ~possible(livesAt(_144110,green_house)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB: ~possible(livesAt(_144110,green_house)). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m".
failure = [].
  ]]></system-err></failure>

    <system-err><![CDATA[
	goal 	= baseKB: ~possible(livesAt(_161170,green_house)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/logicmoo_base/t/examples/fol/poss_forall_exists_04.pfc.pl:85.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/logicmoo_base/t/examples/fol/poss_forall_exists_04.pfc.pl#L85</pre>
	failure 	= failure=info(why_was_true(\+baseKB: ~possible(livesAt(_144110,green_house))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB: ~possible(livesAt(_144110,green_house)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB: ~possible(livesAt(_144110,green_house)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB: ~possible(livesAt(_144110,green_house)). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.00013399124145507812.
	result 	= failure.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite poss_forall_exists_04.pfc.pl" package='loader' time='33'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k poss_forall_exists_04.pfc.pl (returned 0)'/>
</testcase>
</testsuite>







<!--
Running Matching Tests: /opt/logicmoo_workspace/bin/test_prolog.sh -k attvar_04.pl df_04.pfc fc_04.pfc hybrid_04.pfc if_missing_04.pfc mpred_pfc_test_04.pl mt_04.pl nd_04.pfc retry_inheritance_04.pfc retry_undefined_04.pfc verbatums_04.pfc
-->

<testsuite name="attvar_04.pl">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['attvar_04.pl'])" -g "test_completed"
Redefined static procedure baseKB:rtArgsVerbatum/1]]></system-out>

     <testcase name='Run TestSuite attvar_04.pl' package=".opt.logicmoo_workspace_linux.packs_sanity_base.attvar_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.attvar_04.pl" >

      <error message="warning = &quot;Redefined static procedure baseKB:rtArgsVerbatum/1&quot;.\n" ><system-err><![CDATA[  warning = "Redefined static procedure baseKB:rtArgsVerbatum/1".
  ]]></system-err></error>

    <system-err><![CDATA[
	warning 	= Redefined static procedure baseKB:rtArgsVerbatum/1.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite attvar_04.pl" package='loader' time='4'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k attvar_04.pl (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="df_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['df_04.pfc'])" -g "test_completed"
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(most,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(most,1) ,
%   support_fact = mfl4(_6558,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',32),ax ,
%   support_trig = mfl4(_7560,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',32) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(most,1)).
% % 	Found positive trigger: arity(most,1)
% % 		body: predicateConventionMt(most,PredicateConventionMt_Most)*->rhs([ { kb_global( _67212 :
% %
% %                                                                               most/1) }])
% % 	Found positive trigger: arity(most,1)
% % 		body: prologHybrid(most)*->rhs([ { kb_shared( most/1) }])
% % 	Found positive trigger: arity(most,1)
% % 		body: pfcControlled(most)*->rhs([ hybrid_support(most,1)])
% % 	Found positive trigger: arity(most,1)
% % 		body: mpred_positive_fact(arity(most,1))*->rhs([ \+( ~( arity(most,1)))])
% % still_supported(~arity(most,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(most,1)
% % still_supported(~arity(most,1))
% % 	Found positive trigger: arity(most,1)
% % 		body: singleValuedInArg(most,SingleValuedInArg_Most)*->rhs([ singleValuedInArgAX(most,1,SingleValuedInArgAX4)])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = meta_argtypes( most(ftAssertable)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = meta_argtypes( most(ftAssertable)) ,
%   support_fact = mfl4(_418,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',32) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( meta_argtypes( most(ftAssertable))).
% % 	Found positive trigger: meta_argtypes(most(ftAssertable))
% % 		body: mpred_positive_fact(meta_argtypes(most(ftAssertable)))*->rhs([ \+( ~( meta_argtypes( most(ftAssertable))))])
% % still_supported(~meta_argtypes(most(ftAssertable)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~meta_argtypes(most(ftAssertable))
% % still_supported(~meta_argtypes(most(ftAssertable)))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = most((_117170<-_117192))/mpred_literal(_117170)==>(_117170<-_117192,\+ ~_117170) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = most((_117170<-_117192))/mpred_literal(_117170)==>(_117170<-_117192,\+ ~_117170) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q,
%                       'P'=P],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 35) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( most((_22112<-_22114))/mpred_literal(Literal)==>(_22122<-_22128,\+ ~_22138)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q,
%                       'P'=P],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 35) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcLHS)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcLHS)
% % 		body: rhs([ arity(most,1),
% %       functorIsMacro(most),
% %       mpred_prop(baseKB,most,1,pfcWatches)])
% % 	RHS-Post1: arity(most,1)
% % 	Support: mpred_prop(baseKB,most,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcLHS),rhs([ arity(most,1),
% %                                                                                      functorIsMacro(most),
% %                                                                                      mpred_prop(baseKB,most,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = arity(most,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(most,1) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,most,1,pfcLHS),
%                    rhs( [ arity(most,1),
%                           functorIsMacro(most),
%                           mpred_prop(baseKB,most,1,pfcWatches)])) ,
%   ( simular( (   mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',32)  ,
%                ax ,
%                mfl4(BaseKB3,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',32))) is
%     support_status).
% % 	RHS-Post1: functorIsMacro(most)
% % 	Support: mpred_prop(baseKB,most,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcLHS),rhs([ arity(most,1),
% %                                                                                      functorIsMacro(most),
% %                                                                                      mpred_prop(baseKB,most,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(most) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(most) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,most,1,pfcLHS),
%                    rhs( [ arity(most,1),
%                           functorIsMacro(most),
%                           mpred_prop(baseKB,most,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(most)).
% % 	Found positive trigger: functorIsMacro(most)
% % 		body: mpred_positive_fact(functorIsMacro(most))*->rhs([ \+( ~( functorIsMacro(most)))])
% % still_supported(~functorIsMacro(most))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(most)
% % still_supported(~functorIsMacro(most))
% % 	RHS-Post1: mpred_prop(baseKB,most,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,most,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcLHS),rhs([ arity(most,1),
% %                                                                                      functorIsMacro(most),
% %                                                                                      mpred_prop(baseKB,most,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,most,1,pfcLHS),
%                    rhs( [ arity(most,1),
%                           functorIsMacro(most),
%                           mpred_prop(baseKB,most,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcWatches)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : most/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'Q'=Q,
%                         'P'=P],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 35) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'Q'=Q,
%                       'P'=P],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 35) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_23670:most/1))),
% %                                                               show_failure( on_x_fail( Call5 :
% %
% %                                                                                          call(kb_shared,_37906:most/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_28720:most/1))),
% %                           show_failure( on_x_fail( Call5 :
% %
% %                                                      call(kb_shared,_42956:most/1))) }])
% % 	 Support: mpred_prop(baseKB,most,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,most,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB6,baseKB),(BaseKB7\=baseKB*->rhs(
% %                         [ { nop( dmsg_pretty( Call8 :
% %
% %                                                 call(kb_shared,_79676:most/1))),
% %                             show_failure( on_x_fail( Call9 :
% %
% %                                                        call(kb_shared,_93914:most/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,most,1,kb_shared)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,most,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,most,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,most,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,most,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,most,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,most,1,pfcLHS))
% % 	Adding positive
% % 		trigger: most((_2452<-_2454))
% % 		body: mpred_literal(Literal)*->rhs([ _28338<-_28344,\+ ~_28354])
% % 	 Support: (most((_2462<-_2464))/mpred_literal(Literal3)==>(_2466<-_2468,\+ ~_2470)),mfl4([ 'Q'=Q,
% %                                                                                  'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',35)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q,
%                       'P'=P],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 35) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcPosTrigger)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,most,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,most,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,most,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcPosTrigger),rhs([ mpred_prop(baseKB,most,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,most,1,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,most,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,most,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,most,1,pfcLHS),
%                  rhs( [ arity(most,1),
%                         functorIsMacro(most),
%                         mpred_prop(baseKB,most,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,most,1,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,most,1,pfcPosTrigger))
% % 	Found positive trigger: most((_2320<-_2322))/mpred_literal(Literal)==>(_2324<-_2326,\+ ~_2328)
% % 		body: mpred_positive_fact((most((_2330<-_2332))/mpred_literal(Literal4)==>(_2334<-_2336,\+ ~_2338)))*->rhs([ \+( ~( most((_67970<-_67972))/mpred_literal(Literal5)==>(_67976<-_67982,\+ ~_67992)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   most((P==>Q))/nonvar(Q)  ==>
%             _71672 ==>
%             most(_71694)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   most((P==>Q))/nonvar(Q)  ==>
%          _71672 ==>
%          most(_71694)) ,
%   support_fact = mfl4(
%                     [ 'P'=P,
%                       'Q'=Q],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 38) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   most((_115920==>_115922))/nonvar(Nonvar)  ==>
%                        Most ==>
%                        most(Most4))).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcRHS) ,
%   support_fact = mfl4(
%                     [ 'P'=P,
%                       'Q'=Q],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 38) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcRHS)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,most,1,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,most,1,pfcCreates)
% % 	Support: mpred_prop(baseKB,most,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcRHS),rhs([ mpred_prop(baseKB,most,1,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcRHS) ,
%   support_trig = '$pt'(baseKB,mpred_prop(baseKB,most,1,pfcRHS),rhs([mpred_prop(baseKB,most,1,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcCreates)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(most,1) },
% %       { kb_shared( baseKB : most/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,most,1,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,pfcCreates)
% % still_supported(~mpred_prop(baseKB,most,1,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,most,1,pfcControlled)
% % 	Support: mpred_prop(baseKB,most,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs([ mpred_prop(baseKB,most,1,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,most,1,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,most,1,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcControlled)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : most/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,most,1,prologHybrid)
% % 	Support: mpred_prop(baseKB,most,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,most,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                   [ mpred_prop(baseKB,most,1,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,most,1,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,most,1,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,most,1,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,most,1,pfcControlled),
%                    genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,most,1,prologHybrid)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,most,1,prologHybrid)
% % 		body: \+ground(most/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,most,1,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,most,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,most,1,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,most,1,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,prologHybrid)
% % still_supported(~mpred_prop(baseKB,most,1,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,most,1,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,pfcControlled)
% % still_supported(~mpred_prop(baseKB,most,1,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,most,1,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,most,1,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,most,1,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,most,1,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,most,1,pfcRHS)
% % still_supported(~mpred_prop(baseKB,most,1,pfcRHS))
% % 	Adding positive
% % 		trigger: most((_78564==>_78566))
% % 		body: nonvar(Nonvar)*->rhs([ Most==>most(Most5)])
% % 	 Support: (most((_78634==>_78636))/nonvar(Nonvar6)==>(Most3==>most(Most7))),mfl4([ 'P'=P,
% %                                                                          'Q'=Q],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',38)
% % 	Found positive trigger: most((_27458==>_27460))/nonvar(Nonvar)==>(Most==>most(Most7))
% % 		body: mpred_positive_fact((most((_27510==>_27512))/nonvar(Nonvar8)==>(Most3==>most(Most9))))*->rhs([ \+( ~( (   most((_114052==>_114054))/nonvar(Nonvar10)  ==>
% %                                                                                                         Most4 ==>
% %                                                                                                         most(Most11))))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   most(~Q)/mpred_positive_literal(Q)  ==>
%             \+_119872 ==>
%             ~_462) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   most(~Q)/mpred_positive_literal(Q)  ==>
%          \+_462 ==>
%          ~_462) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   most(~_32086)/mpred_positive_literal(Literal)  ==>
%                        \+_28566 ==>
%                        ~_28570)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)).
% % 	Found positive trigger: mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)
% % 		body: \+ground(mpred_positive_literal/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)) }])
% % 	Found positive trigger: mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)
% % 		body: predicate_is_undefined_fa(mpred_positive_literal,1)*->rhs([ mpred_prop(baseKB,mpred_positive_literal,1,needsDefined)])
% % 	Found positive trigger: mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)
% % 		body: genlPreds(pfcCallCode,GenlPreds_PfcCallCode)*->rhs([ mpred_prop(baseKB,mpred_positive_literal,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode))*->rhs([ \+( ~( mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)))])
% % still_supported(~mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode)
% % still_supported(~mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode))
% % 	Adding positive
% % 		trigger: most(~_60150)
% % 		body: mpred_positive_literal(Literal)*->rhs([ \+_93678==> ~_93682])
% % 	 Support: (most(~_60222)/mpred_positive_literal(Literal2)==>(\+_60236==> ~_60240)),mfl4([ 'Q'=Q],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',41)
% % 	Found positive trigger: most(~_2250)/mpred_positive_literal(Literal)==>(\+_2252==> ~_2254)
% % 		body: mpred_positive_fact((most(~_2256)/mpred_positive_literal(Literal3)==>(\+_2258==> ~_2260)))*->rhs([ \+( ~( (   most(~_80936)/mpred_positive_literal(Literal4)  ==>
% %                                                                                                             \+_77392 ==>
% %                                                                                                             ~_77396)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
%             \+_87056/_87078,\+ ~_87034 ==>
%             _87034) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
%          \+_87056/_87078,\+ ~_87034 ==>
%          _87034) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q,
%                       'R'=R,
%                       'Test'=Test],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   ( most(Most) /
%                            ( mpred_positive_literal(Literal) ,
%                              if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
%                        \+_14912/_14914,\+ ~_14922 ==>
%                        _14898)).
% % 	Adding positive
% % 		trigger: most(Most)
% % 		body: mpred_positive_literal(Literal),if_missing_mask(If_missing_mask4,If_missing_mask,Mask)*->rhs([ \+_105154/_105156,\+ ~_105164==>_105140])
% % 	 Support: (most(Most10)/(mpred_positive_literal(Literal11),if_missing_mask(If_missing_mask6,If_missing_mask5,Mask12))==>(\+_59424/_59426,\+ ~_59434==>_59410)),mfl4(
% %                                   [ 'Q'=Q,
% %                                     'R'=R,
% %                                     'Test'=Test],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',44)
% % 	Found positive trigger: most(Most)/(mpred_positive_literal(Literal),if_missing_mask(If_missing_mask4,If_missing_mask,Mask))==>(\+_39206/_39208,\+ ~_39216==>_39192)
% % 		body: mpred_positive_fact((most(Most13)/(mpred_positive_literal(Literal14),if_missing_mask(If_missing_mask6,If_missing_mask5,Mask15))==>(\+_39286/_39288,\+ ~_39296==>_39272)))*->rhs(
% %                                                         [ \+( ~( (   ( most(Most16) /
% %                                                                        ( mpred_positive_literal(Literal17) ,
% %                                                                          if_missing_mask(If_missing_mask8,If_missing_mask7,Mask18)))  ==>
% %                                                                    \+_6014/_6016,\+ ~_6024 ==>
% %                                                                    _6000)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
%             _16694/(\+_16694=_16672,_16716) ==>
%             \+_16672) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
%          _16694/(\+_16694=_16672,_16716) ==>
%          \+_16672) ,
%   support_fact = mfl4(
%                     [ 'Q'=Q,
%                       'R'=R,
%                       'Test'=Test],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 47) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   ( most(Most) /
%                            ( mpred_positive_literal(Literal) ,
%                              if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
%                        _66370/(\+_66386=_66388,_66378) ==>
%                        \+_66392)).
% % 	Adding positive
% % 		trigger: most(Most)
% % 		body: mpred_positive_literal(Literal),if_missing_mask(If_missing_mask4,If_missing_mask,Mask)*->rhs([ _33054/(\+_33070=_33072,_33062)==> \+_33076])
% % 	 Support: (most(Most10)/(mpred_positive_literal(Literal11),if_missing_mask(If_missing_mask6,If_missing_mask5,Mask12))==>(_3270/(\+_3274=_3276,_3272)==> \+_3278)),mfl4(
% %                                      [ 'Q'=Q,
% %                                        'R'=R,
% %                                        'Test'=Test],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',47)
% % 	Found positive trigger: most(Most)/(mpred_positive_literal(Literal),if_missing_mask(If_missing_mask4,If_missing_mask,Mask))==>(_2890/(\+_2894=_2896,_2892)==> \+_2898)
% % 		body: mpred_positive_fact((most(Most13)/(mpred_positive_literal(Literal14),if_missing_mask(If_missing_mask6,If_missing_mask5,Mask15))==>(_2900/(\+_2904=_2906,_2902)==> \+_2908)))*->rhs(
% %                                                            [ \+( ~( (   ( most(Most16) /
% %                                                                           ( mpred_positive_literal(Literal17) ,
% %                                                                             if_missing_mask(If_missing_mask8,If_missing_mask7,Mask18)))  ==>
% %                                                                       _53052/(\+_53068=_53070,_53060) ==>
% %                                                                       \+_53074)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = most( test1_2_3(1,2,3)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = most( test1_2_3(1,2,3)) ,
%   support_fact = mfl4(_920,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',61) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( most( test1_2_3(1,2,3))).
% % 	Found positive trigger: most(test1_2_3(1,2,3))
% % 		body: mpred_positive_fact(most(test1_2_3(1,2,3)))*->rhs([ \+( ~( most( test1_2_3(1,2,3))))])
% % still_supported(~most(test1_2_3(1,2,3)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~most(test1_2_3(1,2,3))
% % still_supported(~most(test1_2_3(1,2,3)))
% % 	Found positive trigger: most(test1_2_3(1,2,3))
% % 		body: mpred_positive_literal(test1_2_3(1,2,3)),if_missing_mask(test1_2_3(1,2,3),Test1_2_3,Mask)*->rhs([ \+_106360/_106362,\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)])
% % 	RHS-Post1: \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)
% % 	Support: most(test1_2_3(1,2,3)),'$pt'(baseKB,most(test1_2_3(1,2,3)),(mpred_positive_literal(test1_2_3(1,2,3)),if_missing_mask(test1_2_3(1,2,3),~test1_2_3(1,2,3),\+test1_2_3(1,2,3))*->rhs(
% %                                                           [ \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3) ,
%   support_fact = most( test1_2_3(1,2,3)) ,
%   support_trig = '$pt'( baseKB,
%                    most( test1_2_3(1,2,3)),
%                    ( ( mpred_positive_literal( test1_2_3(1,2,3)) ,
%                        if_missing_mask(test1_2_3(1,2,3),~test1_2_3(1,2,3),\+test1_2_3(1,2,3))) *->
%                      rhs([(\+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3))]))) ,
%   none is support_status.
% baseKB : mpred_fwc1( \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcRHS) ,
%   support_fact = mfl4(
%                     [ 'BaseKB1'=BaseKB1,
%                       'BaseKB'=BaseKB],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 61) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcRHS)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,test1_2_3,3,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,test1_2_3,3,pfcCreates)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcRHS),rhs([ mpred_prop(baseKB,test1_2_3,3,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcRHS),
%                    rhs([mpred_prop(baseKB,test1_2_3,3,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCreates)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(test1_2_3,3) },
% %       { kb_shared( baseKB : test1_2_3/3) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,kb_shared) ,
%   support_fact = mfl4(_880,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',61),ax ,
%   support_trig = mfl4(
%                     [ 'BaseKB1'=BaseKB1,
%                       'BaseKB'=BaseKB],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 61) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB2,baseKB),(BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                    call(kb_shared,_93480:test1_2_3/3))),
% %                                                                show_failure( on_x_fail( Call5 :
% %
% %                                                                                           call(kb_shared,_107722:test1_2_3/3))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB2,baseKB)
% % 		body: BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_103054:test1_2_3/3))),
% %                           show_failure( on_x_fail( Call5 :
% %
% %                                                      call(kb_shared,_14062:test1_2_3/3))) }])
% % 	 Support: mpred_prop(baseKB,test1_2_3,3,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,kb_shared),'$pt'(baseKB,genlMt(BaseKB6,baseKB),(BaseKB7\=baseKB*->rhs(
% %                                   [ { nop( dmsg_pretty( Call8 :
% %
% %                                                           call(kb_shared,_50786:test1_2_3/3))),
% %                                       show_failure( on_x_fail( Call9 :
% %
% %                                                                  call(kb_shared,_65028:test1_2_3/3))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,kb_shared)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,kb_shared)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcCreates)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,test1_2_3,3,pfcControlled)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %         [ mpred_prop(baseKB,test1_2_3,3,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,test1_2_3,3,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcControlled)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : test1_2_3/3) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,test1_2_3,3,prologHybrid)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                             [ mpred_prop(baseKB,test1_2_3,3,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcControlled),
%                    ( genlPreds(pfcControlled,prologHybrid) *->
%                      rhs([mpred_prop(baseKB,test1_2_3,3,prologHybrid)]))) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,prologHybrid)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,prologHybrid)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcControlled)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcRHS)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'BaseKB1'=BaseKB1,
%                       'BaseKB'=BaseKB],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 61) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcLHS)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcLHS)
% % 		body: rhs([ arity(test1_2_3,3),
% %       functorIsMacro(test1_2_3),
% %       mpred_prop(baseKB,test1_2_3,3,pfcWatches)])
% % 	RHS-Post1: arity(test1_2_3,3)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcLHS),rhs([ arity(test1_2_3,3),
% %                                                                                                functorIsMacro(test1_2_3),
% %                                                                                                mpred_prop(baseKB,test1_2_3,3,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(test1_2_3,3) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(test1_2_3,3) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcLHS),
%                    rhs( [ arity(test1_2_3,3),
%                           functorIsMacro(test1_2_3),
%                           mpred_prop(baseKB,test1_2_3,3,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(test1_2_3,3)).
% % 	Found positive trigger: arity(test1_2_3,3)
% % 		body: predicateConventionMt(test1_2_3,PredicateConventionMt_Test1_2_3)*->rhs([ { kb_global( _12834 :
% %
% %                                                                                         test1_2_3/3) }])
% % 	Found positive trigger: arity(test1_2_3,3)
% % 		body: prologHybrid(test1_2_3)*->rhs([ { kb_shared( test1_2_3/3) }])
% % 	Found positive trigger: arity(test1_2_3,3)
% % 		body: pfcControlled(test1_2_3)*->rhs([ hybrid_support(test1_2_3,3)])
% % 	RHS-Post1: hybrid_support(test1_2_3,3)
% % 	Support: arity(test1_2_3,3),'$pt'(baseKB,arity(test1_2_3,3),(pfcControlled(test1_2_3)*->rhs([ hybrid_support(test1_2_3,3)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = hybrid_support(test1_2_3,3) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = hybrid_support(test1_2_3,3) ,
%   support_fact = arity(test1_2_3,3) ,
%   support_trig = '$pt'( baseKB,
%                    arity(test1_2_3,3),
%                    pfcControlled(test1_2_3)*->rhs([hybrid_support(test1_2_3,3)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( hybrid_support(test1_2_3,3)).
% % 	Found positive trigger: hybrid_support(test1_2_3,3)
% % 		body: mpred_positive_fact(hybrid_support(test1_2_3,3))*->rhs([ \+( ~( hybrid_support(test1_2_3,3)))])
% % still_supported(~hybrid_support(test1_2_3,3))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~hybrid_support(test1_2_3,3)
% % still_supported(~hybrid_support(test1_2_3,3))
% % 	Found positive trigger: arity(test1_2_3,3)
% % 		body: mpred_positive_fact(arity(test1_2_3,3))*->rhs([ \+( ~( arity(test1_2_3,3)))])
% % still_supported(~arity(test1_2_3,3))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(test1_2_3,3)
% % still_supported(~arity(test1_2_3,3))
% % 	Found positive trigger: arity(test1_2_3,3)
% % 		body: singleValuedInArg(test1_2_3,SingleValuedInArg_Test1_2_3)*->rhs([ singleValuedInArgAX(test1_2_3,3,SingleValuedInArgAX6)])
% % 	RHS-Post1: functorIsMacro(test1_2_3)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcLHS),rhs([ arity(test1_2_3,3),
% %                                                                                                functorIsMacro(test1_2_3),
% %                                                                                                mpred_prop(baseKB,test1_2_3,3,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(test1_2_3) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(test1_2_3) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcLHS),
%                    rhs( [ arity(test1_2_3,3),
%                           functorIsMacro(test1_2_3),
%                           mpred_prop(baseKB,test1_2_3,3,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(test1_2_3)).
% % 	Found positive trigger: functorIsMacro(test1_2_3)
% % 		body: mpred_positive_fact(functorIsMacro(test1_2_3))*->rhs([ \+( ~( functorIsMacro(test1_2_3)))])
% % still_supported(~functorIsMacro(test1_2_3))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(test1_2_3)
% % still_supported(~functorIsMacro(test1_2_3))
% % 	RHS-Post1: mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcLHS),rhs([ arity(test1_2_3,3),
% %                                                                                                functorIsMacro(test1_2_3),
% %                                                                                                mpred_prop(baseKB,test1_2_3,3,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcLHS),
%                    rhs( [ arity(test1_2_3,3),
%                           functorIsMacro(test1_2_3),
%                           mpred_prop(baseKB,test1_2_3,3,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : test1_2_3/3) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcLHS)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcLHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcCallCode) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcCallCode) ,
%   support_fact = mfl4(
%                     [ 'BaseKB1'=BaseKB1,
%                       'BaseKB'=BaseKB],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 61) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcCallCode)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCallCode)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcCallCode)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCallCode)
% % 		body: predicate_is_undefined_fa(test1_2_3,3)*->rhs([ mpred_prop(baseKB,test1_2_3,3,needsDefined)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCallCode)
% % 		body: genlPreds(pfcCallCode,GenlPreds_PfcCallCode)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcCallCode)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcCallCode))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcCallCode)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcCallCode))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcCallCode)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcCallCode))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger) ,
%   support_fact = mfl4(
%                     [ 'BaseKB1'=BaseKB1,
%                       'BaseKB'=BaseKB],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc', 61) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)
% % 		body: \+ground(test1_2_3/3)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)
% % 		body: rhs([ mpred_prop(baseKB,test1_2_3,3,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,test1_2_3,3,pfcWatches)
% % 	Support: mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger),'$pt'(baseKB,mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger),rhs([ mpred_prop(baseKB,test1_2_3,3,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,test1_2_3,3,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,test1_2_3,3,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger),
%                    rhs([mpred_prop(baseKB,test1_2_3,3,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,test1_2_3,3,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,test1_2_3,3,pfcLHS),
%                  rhs( [ arity(test1_2_3,3),
%                         functorIsMacro(test1_2_3),
%                         mpred_prop(baseKB,test1_2_3,3,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)
% % 		body: genlPreds(pfcNegTrigger,GenlPreds_PfcNegTrigger)*->rhs([ mpred_prop(baseKB,test1_2_3,3,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)))])
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger)
% % still_supported(~mpred_prop(baseKB,test1_2_3,3,pfcNegTrigger))
% % 	Adding negative
% % 		trigger: ~test1_2_3(1,2,3)
% % 		test: call_u_no_bc(~test1_2_3(1,2,3)),\+test1_2_3(1,2,3)
% % 		body: '$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs([ test1_2_3(1,2,3)]))
% % 	 Support: (\+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)),mfl4([ 'BaseKB1'=BaseKB1,
% %                                                                                            'BaseKB'=BaseKB],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',61)
% % 	Adding negative
% % 		trigger: ~test1_2_3(1,2,3)
% % 		test: call_u_no_bc(~test1_2_3(1,2,3))
% % 		body: rhs([ test1_2_3(1,2,3)])
% % 	 Support: \+ ~test1_2_3(1,2,3),'$nt'(~test1_2_3(1,2,3),(call_u_no_bc(~test1_2_3(1,2,3)),\+test1_2_3(1,2,3)),'$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs(
% %                                       [ test1_2_3(1,2,3)])))
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: ~test1_2_3(1,2,3)
% % 		cond: call_u_no_bc(~test1_2_3(1,2,3)),\+test1_2_3(1,2,3)
% % 		action: '$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs([ test1_2_3(1,2,3)]))
% % 	 from: mpred_add_support_fast('$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs([ test1_2_3(1,2,3)])),(\+ ~test1_2_3(1,2,3),'$nt'(~test1_2_3(1,2,3),(call_u_no_bc(~test1_2_3(1,2,3)),\+test1_2_3(1,2,3)),'$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs(
% %                         [ test1_2_3(1,2,3)])))))
% % 	RHS-Post1: test1_2_3(1,2,3)
% % 	Support: \+ ~test1_2_3(1,2,3),'$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs([ test1_2_3(1,2,3)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = test1_2_3(1,2,3) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = test1_2_3(1,2,3) ,
%   support_fact = \+( ~( test1_2_3(1,2,3))) ,
%   support_trig = '$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs([test1_2_3(1,2,3)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: ~test1_2_3(1,2,3)
% % 		cond: call_u_no_bc(~test1_2_3(1,2,3))
% % 		action: rhs([ test1_2_3(1,2,3)])
% % 	 from: mpred_add_support_fast(test1_2_3(1,2,3),(\+ ~test1_2_3(1,2,3),'$nt'(~test1_2_3(1,2,3),call_u_no_bc(~test1_2_3(1,2,3)),rhs(
% %   [ test1_2_3(1,2,3)]))))
% baseKB : mpred_fwc1( test1_2_3(1,2,3)).
% % 	Found positive trigger: test1_2_3(1,2,3)
% % 		body: mpred_positive_fact(test1_2_3(1,2,3))*->rhs([ \+( ~( test1_2_3(1,2,3)))])
% % still_supported(~test1_2_3(1,2,3))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~test1_2_3(1,2,3)
% % still_supported(~test1_2_3(1,2,3))
% % 	Found positive trigger: \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)
% % 		body: mpred_positive_fact((\+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)))*->rhs([ \+( ~( \+ ~test1_2_3(1,2,3)/(\+test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)==>test1_2_3(1,2,3)))])
% % 	Found positive trigger: most(test1_2_3(1,2,3))
% % 		body: mpred_positive_literal(test1_2_3(1,2,3)),if_missing_mask(test1_2_3(1,2,3),Test1_2_3,Mask)*->rhs([ _58486/(\+Test1_2_3_Num1_Num2_Num3=test1_2_3(1,2,3),_58494)==> \+test1_2_3(1,2,3)])
% % 	RHS-Post1: ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)
% % 	Support: most(test1_2_3(1,2,3)),'$pt'(baseKB,most(test1_2_3(1,2,3)),(mpred_positive_literal(test1_2_3(1,2,3)),if_missing_mask(test1_2_3(1,2,3),~test1_2_3(1,2,3),\+test1_2_3(1,2,3))*->rhs(
% %                                                           [ ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ( ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3)) ==>
%             \+( test1_2_3(1,2,3))) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ( ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3)) ==>
%          \+( test1_2_3(1,2,3))) ,
%   support_fact = most( test1_2_3(1,2,3)) ,
%   support_trig = '$pt'( baseKB,
%                    most( test1_2_3(1,2,3)),
%                    ( ( mpred_positive_literal( test1_2_3(1,2,3)) ,
%                        if_missing_mask(test1_2_3(1,2,3),~test1_2_3(1,2,3),\+test1_2_3(1,2,3))) *->
%                      rhs([(~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3))]))) ,
%   none is support_status.
% baseKB : mpred_fwc1( ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)).
% % 	Adding negative
% % 		trigger: ~test1_2_3(1,2,3)
% % 		test: call_u_no_bc(~test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3)
% % 		body: rhs([ \+( test1_2_3(1,2,3))])
% % 	 Support: (~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)),mfl4([ 'BaseKB1'=BaseKB1,
% %                                                                                                             'BaseKB'=BaseKB],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc',61)
% % 		RHS-Withdrawing-Neg: test1_2_3(1,2,3)
% % 	Support: \+ ~test1_2_3(1,2,3),'$nt'(~test1_2_3(1,2,3),(call_u_no_bc(~test1_2_3(1,2,3)),\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3)),rhs(
% %                     [ \+( test1_2_3(1,2,3))]))
% % 	Found positive trigger: ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)
% % 		body: mpred_positive_fact((~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)))*->rhs(
% %         [ \+( ~( ~test1_2_3(1,2,3)/(\+ ~test1_2_3(1,2,3)=test1_2_3(1,2,3),\+test1_2_3(1,2,3))==> \+test1_2_3(1,2,3)))])
failure=info(why_was_true(\+baseKB:test1_2_3(1,2,3)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:test1_2_3(1,2,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:test1_2_3(1,2,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:test1_2_3(1,2,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="test1_2_3(1,2,3). @ 63" package=".opt.logicmoo_workspace_linux.packs_sanity_base.df_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.df_04" time="0.00003576278686523438">

      <failure message="failure = &quot;failure=info(why_was_true(\\\\+baseKB:test1_2_3(1,2,3)))\\n\\x1B\\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:test1_2_3(1,2,3). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:test1_2_3(1,2,3). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m No justifications for \\\\+baseKB:test1_2_3(1,2,3). \\n\\n\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m\\x1B\\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\\x1B\\[0m&quot;.\nfailure = [].\n" ><system-err><![CDATA[  failure = "failure=info(why_was_true(\\+baseKB:test1_2_3(1,2,3)))\n\x1B\[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:test1_2_3(1,2,3). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:test1_2_3(1,2,3). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m No justifications for \\+baseKB:test1_2_3(1,2,3). \n\n\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m\x1B\[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\x1B\[0m".
failure = [].
  ]]></system-err></failure>

    <system-err><![CDATA[
	goal 	= baseKB:test1_2_3(1,2,3).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_04.pfc:63.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/df_04.pfc#L63</pre>
	failure 	= failure=info(why_was_true(\+baseKB:test1_2_3(1,2,3)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:test1_2_3(1,2,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:test1_2_3(1,2,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+baseKB:test1_2_3(1,2,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.5762786865234375e-5.
	result 	= failure.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite df_04.pfc" package='loader' time='7'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k df_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="fc_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['fc_04.pfc'])" -g "test_completed"
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = a4(_73026)==>b4(_73026) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = a4(_73026)==>b4(_73026) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( a4(A4)==>b4(B4)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,b4,1,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,b4,1,pfcRHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,b4,1,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcRHS)
% % 		body: \+ground(b4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,b4,1,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,b4,1,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,b4,1,pfcCreates)
% % 	Support: mpred_prop(baseKB,b4,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,b4,1,pfcRHS),rhs([ mpred_prop(baseKB,b4,1,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,b4,1,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,b4,1,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,b4,1,pfcRHS) ,
%   support_trig = '$pt'(baseKB,mpred_prop(baseKB,b4,1,pfcRHS),rhs([mpred_prop(baseKB,b4,1,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,b4,1,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcCreates)
% % 		body: \+ground(b4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,b4,1,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(b4,1) },
% %       { kb_shared( baseKB : b4/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,b4,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,b4,1,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'X'=X],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,b4,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_33636:b4/1))),
% %                                                               show_failure( on_x_fail( Call4 :
% %
% %                                                                                          call(kb_shared,_47872:b4/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_37370:b4/1))),
% %                           show_failure( on_x_fail( Call4 :
% %
% %                                                      call(kb_shared,_51606:b4/1))) }])
% % 	 Support: mpred_prop(baseKB,b4,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,b4,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB5,baseKB),(BaseKB6\=baseKB*->rhs(
% %                     [ { nop( dmsg_pretty( Call7 :
% %
% %                                             call(kb_shared,_88326:b4/1))),
% %                         show_failure( on_x_fail( Call8 :
% %
% %                                                    call(kb_shared,_102562:b4/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,kb_shared)
% % 		body: \+ground(b4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,b4,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,b4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,b4,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,b4,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,b4,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,b4,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,b4,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,b4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,b4,1,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,b4,1,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,b4,1,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,b4,1,pfcCreates)
% % still_supported(~mpred_prop(baseKB,b4,1,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,b4,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,b4,1,pfcControlled)
% % 	Support: mpred_prop(baseKB,b4,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,b4,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs([ mpred_prop(baseKB,b4,1,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,b4,1,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,b4,1,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,b4,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,b4,1,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b4,1,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,b4,1,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcControlled)
% % 		body: \+ground(b4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,b4,1,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : b4/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,b4,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,b4,1,prologHybrid)
% % 	Support: mpred_prop(baseKB,b4,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,b4,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %               [ mpred_prop(baseKB,b4,1,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,b4,1,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,b4,1,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,b4,1,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,b4,1,pfcControlled),
%                    genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b4,1,prologHybrid)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,b4,1,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,prologHybrid)
% % 		body: \+ground(b4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,b4,1,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,b4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,b4,1,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,b4,1,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,b4,1,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,b4,1,prologHybrid)
% % still_supported(~mpred_prop(baseKB,b4,1,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,b4,1,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,b4,1,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,b4,1,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,b4,1,pfcControlled)
% % still_supported(~mpred_prop(baseKB,b4,1,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,b4,1,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,b4,1,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,b4,1,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,b4,1,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,b4,1,pfcRHS)
% % still_supported(~mpred_prop(baseKB,b4,1,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,a4,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,a4,1,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,a4,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcLHS)
% % 		body: \+ground(a4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,a4,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcLHS)
% % 		body: rhs([ arity(a4,1),
% %       functorIsMacro(a4),
% %       mpred_prop(baseKB,a4,1,pfcWatches)])
% % 	RHS-Post1: arity(a4,1)
% % 	Support: mpred_prop(baseKB,a4,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,a4,1,pfcLHS),rhs([ arity(a4,1),
% %                                                                                  functorIsMacro(a4),
% %                                                                                  mpred_prop(baseKB,a4,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(a4,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(a4,1) ,
%   support_fact = mpred_prop(baseKB,a4,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,a4,1,pfcLHS),
%                    rhs( [ arity(a4,1),
%                           functorIsMacro(a4),
%                           mpred_prop(baseKB,a4,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(a4,1)).
% % 	Found positive trigger: arity(a4,1)
% % 		body: predicateConventionMt(a4,PredicateConventionMt_A4)*->rhs([ { kb_global( _40838 :
% %
% %                                                                           a4/1) }])
% % 	Found positive trigger: arity(a4,1)
% % 		body: prologHybrid(a4)*->rhs([ { kb_shared( a4/1) }])
% % 	Found positive trigger: arity(a4,1)
% % 		body: pfcControlled(a4)*->rhs([ hybrid_support(a4,1)])
% % 	Found positive trigger: arity(a4,1)
% % 		body: mpred_positive_fact(arity(a4,1))*->rhs([ \+( ~( arity(a4,1)))])
% % still_supported(~arity(a4,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(a4,1)
% % still_supported(~arity(a4,1))
% % 	Found positive trigger: arity(a4,1)
% % 		body: singleValuedInArg(a4,SingleValuedInArg_A4)*->rhs([ singleValuedInArgAX(a4,1,SingleValuedInArgAX5)])
% % 	RHS-Post1: functorIsMacro(a4)
% % 	Support: mpred_prop(baseKB,a4,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,a4,1,pfcLHS),rhs([ arity(a4,1),
% %                                                                                  functorIsMacro(a4),
% %                                                                                  mpred_prop(baseKB,a4,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(a4) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(a4) ,
%   support_fact = mpred_prop(baseKB,a4,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,a4,1,pfcLHS),
%                    rhs( [ arity(a4,1),
%                           functorIsMacro(a4),
%                           mpred_prop(baseKB,a4,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(a4)).
% % 	Found positive trigger: functorIsMacro(a4)
% % 		body: mpred_positive_fact(functorIsMacro(a4))*->rhs([ \+( ~( functorIsMacro(a4)))])
% % still_supported(~functorIsMacro(a4))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(a4)
% % still_supported(~functorIsMacro(a4))
% % 	RHS-Post1: mpred_prop(baseKB,a4,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,a4,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,a4,1,pfcLHS),rhs([ arity(a4,1),
% %                                                                                  functorIsMacro(a4),
% %                                                                                  mpred_prop(baseKB,a4,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,a4,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,a4,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,a4,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,a4,1,pfcLHS),
%                    rhs( [ arity(a4,1),
%                           functorIsMacro(a4),
%                           mpred_prop(baseKB,a4,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,a4,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcWatches)
% % 		body: \+ground(a4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,a4,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : a4/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,a4,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,a4,1,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'X'=X],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,a4,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_18432:a4/1))),
% %                                                               show_failure( on_x_fail( Call4 :
% %
% %                                                                                          call(kb_shared,_32668:a4/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_28222:a4/1))),
% %                           show_failure( on_x_fail( Call4 :
% %
% %                                                      call(kb_shared,_42458:a4/1))) }])
% % 	 Support: mpred_prop(baseKB,a4,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,a4,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB5,baseKB),(BaseKB6\=baseKB*->rhs(
% %                     [ { nop( dmsg_pretty( Call7 :
% %
% %                                             call(kb_shared,_79178:a4/1))),
% %                         show_failure( on_x_fail( Call8 :
% %
% %                                                    call(kb_shared,_93414:a4/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,kb_shared)
% % 		body: \+ground(a4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,a4,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,a4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,a4,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,a4,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,a4,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,a4,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,a4,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,a4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,a4,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,a4,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,a4,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,a4,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,a4,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,a4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,a4,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,a4,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,a4,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,a4,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,a4,1,pfcLHS))
% % 	Adding positive
% % 		trigger: a4(A4)
% % 		body: rhs([ b4(B43)])
% % 	 Support: (a4(A44)==>b4(B45)),mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',24)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,a4,1,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,a4,1,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc', 24) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,a4,1,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcPosTrigger)
% % 		body: \+ground(a4/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,a4,1,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,a4,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,a4,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,a4,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,a4,1,pfcPosTrigger),rhs([ mpred_prop(baseKB,a4,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,a4,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,a4,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,a4,1,pfcPosTrigger) ,
%   support_trig = '$pt'(baseKB,mpred_prop(baseKB,a4,1,pfcPosTrigger),rhs([mpred_prop(baseKB,a4,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,a4,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,a4,1,pfcLHS),
%                  rhs( [ arity(a4,1),
%                         functorIsMacro(a4),
%                         mpred_prop(baseKB,a4,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,a4,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,a4,1,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,a4,1,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,a4,1,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,a4,1,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,a4,1,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,a4,1,pfcPosTrigger))
% % 	Found positive trigger: a4(A4)==>b4(B4)
% % 		body: mpred_positive_fact((a4(A44)==>b4(B45)))*->rhs([ \+( ~( a4(A46)==>b4(B47)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = a4(1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = a4(1) ,
%   support_fact = mfl4(_75652,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',29) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( a4(1)).
% % 	Found positive trigger: a4(1)
% % 		body: mpred_positive_fact(a4(1))*->rhs([ \+( ~( a4(1)))])
% % still_supported(~a4(1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~a4(1)
% % still_supported(~a4(1))
% % 	Found positive trigger: a4(1)
% % 		body: rhs([ b4(1)])
% % 	RHS-Post1: b4(1)
% % 	Support: a4(1),'$pt'(baseKB,a4(1),rhs([ b4(1)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = b4(1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = b4(1) ,
%   support_fact = a4(1) ,
%   support_trig = '$pt'(baseKB,a4(1),rhs([b4(1)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( b4(1)).
% % 	Found positive trigger: b4(1)
% % 		body: mpred_positive_fact(b4(1))*->rhs([ \+( ~( b4(1)))])
% % still_supported(~b4(1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~b4(1)
% % still_supported(~b4(1))
passed=info(why_was_true(baseKB:a4(1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for a4(1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',29) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:b4(1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for b4(1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 a4(1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc:29] 
    1.2 a4(W4)==>b4(W4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc:24] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',29) 
    1.4 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',24) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="a4(1). @ 32" package=".opt.logicmoo_workspace_linux.packs_sanity_base.fc_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.fc_04" time="0.00003576278686523438">


    <system-err><![CDATA[
	goal 	= baseKB:a4(1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc:32.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc#L32</pre>
	passed 	= passed=info(why_was_true(baseKB:a4(1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for a4(1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',29) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.5762786865234375e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="b4(1). @ 33" package=".opt.logicmoo_workspace_linux.packs_sanity_base.fc_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.fc_04" time="0.00003504753112792969">


    <system-err><![CDATA[
	goal 	= baseKB:b4(1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc:33.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc#L33</pre>
	passed 	= passed=info(why_was_true(baseKB:b4(1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for b4(1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 a4(1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc:29] 
    1.2 a4(W4)==>b4(W4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc:24] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',29) 
    1.4 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_04.pfc',24) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.504753112792969e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite fc_04.pfc" package='loader' time='5'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k fc_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="hybrid_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['hybrid_04.pfc'])" -g "test_completed"
]]></system-out>
<testcase name="Run TestSuite hybrid_04.pfc" package='loader' time='5'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k hybrid_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="if_missing_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['if_missing_04.pfc'])" -g "test_completed"
passed=info(why_was_true(baseKB:foob(az)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for foob(az):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+ ~foob(az)  % [/boot/init.pl:512] 
    1.2 \+foob(_)  % [/boot/init.pl:512] 
    1.3 \+foob(W4)/(foob(W4)\=@=foob(az)),\+ ~foob(az)==>foob(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_20840] 
    1.4 if_missing(foob(_),foob(az))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:_22026] 
    1.5 if_missing(W4,X4)==>(\+W4/(W4\=@=X4),\+ ~X4==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:19] 
    1.6 good(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:24] 
    1.7 good(W4)==>if_missing(foob(_),foob(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:22] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',19) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',24) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',22) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:(\+foob(az))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:foob(az)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for foob(az):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+ ~foob(az)  % [/boot/init.pl:512] 
    1.2 \+foob(b)  % [/boot/init.pl:512] 
    1.3 \+foob(W4)/(foob(W4)\=@=foob(az)),\+ ~foob(az)==>foob(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1246] 
    1.4 if_missing(foob(_),foob(az))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:_2426] 
    1.5 if_missing(W4,X4)==>(\+W4/(W4\=@=X4),\+ ~X4==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:19] 
    1.6 good(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:24] 
    1.7 good(W4)==>if_missing(foob(_),foob(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:22] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',19) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',24) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',22) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:(\+foob(az))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:(\+foob(b))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~foob(b):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',42) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:foob(az)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for foob(az):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+ ~foob(az)  % [/boot/init.pl:512] 
    1.2 \+foob(b)  % [/boot/init.pl:512] 
    1.3 \+foob(W4)/(foob(W4)\=@=foob(az)),\+ ~foob(az)==>foob(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1260] 
    1.4 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',42) 
    1.5 if_missing(foob(_),foob(az))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:_2810] 
    1.6 if_missing(W4,X4)==>(\+W4/(W4\=@=X4),\+ ~X4==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:19] 
    1.7 good(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:24] 
    1.8 good(W4)==>if_missing(foob(_),foob(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:22] 
    1.9 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',19) 
    1.10 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',24) 
    1.11 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',22) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="foob(az). @ 26" package=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" time="0.00003290176391601562">


    <system-err><![CDATA[
	goal 	= baseKB:foob(az).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:26.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc#L26</pre>
	passed 	= passed=info(why_was_true(baseKB:foob(az)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for foob(az):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+ ~foob(az)  % [/boot/init.pl:512] 
    1.2 \+foob(_)  % [/boot/init.pl:512] 
    1.3 \+foob(W4)/(foob(W4)\=@=foob(az)),\+ ~foob(az)==>foob(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_20840] 
    1.4 if_missing(foob(_),foob(az))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:_22026] 
    1.5 if_missing(W4,X4)==>(\+W4/(W4\=@=X4),\+ ~X4==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:19] 
    1.6 good(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:24] 
    1.7 good(W4)==>if_missing(foob(_),foob(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:22] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',19) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',24) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',22) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.2901763916015625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf foob(az). @ 30" package=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" time="0.00004458427429199219">


    <system-err><![CDATA[
	goal 	= baseKB:(\+foob(az)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:30.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc#L30</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+foob(az))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 4.458427429199219e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="foob(az). @ 34" package=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" time="0.00004816055297851562">


    <system-err><![CDATA[
	goal 	= baseKB:foob(az).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:34.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc#L34</pre>
	passed 	= passed=info(why_was_true(baseKB:foob(az)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for foob(az):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+ ~foob(az)  % [/boot/init.pl:512] 
    1.2 \+foob(b)  % [/boot/init.pl:512] 
    1.3 \+foob(W4)/(foob(W4)\=@=foob(az)),\+ ~foob(az)==>foob(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1246] 
    1.4 if_missing(foob(_),foob(az))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:_2426] 
    1.5 if_missing(W4,X4)==>(\+W4/(W4\=@=X4),\+ ~X4==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:19] 
    1.6 good(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:24] 
    1.7 good(W4)==>if_missing(foob(_),foob(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:22] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',19) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',24) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',22) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 4.8160552978515625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf foob(az). @ 40" package=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" time="0.00003910064697265625">


    <system-err><![CDATA[
	goal 	= baseKB:(\+foob(az)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:40.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc#L40</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+foob(az))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+foob(az). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.910064697265625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf foob(b). @ 44" package=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" time="0.00003504753112792969">


    <system-err><![CDATA[
	goal 	= baseKB:(\+foob(b)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:44.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc#L44</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+foob(b))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~foob(b):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',42) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.504753112792969e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="foob(az). @ 49" package=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.if_missing_04" time="0.00005221366882324219">


    <system-err><![CDATA[
	goal 	= baseKB:foob(az).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:49.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc#L49</pre>
	passed 	= passed=info(why_was_true(baseKB:foob(az)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for foob(az):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+ ~foob(az)  % [/boot/init.pl:512] 
    1.2 \+foob(b)  % [/boot/init.pl:512] 
    1.3 \+foob(W4)/(foob(W4)\=@=foob(az)),\+ ~foob(az)==>foob(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1260] 
    1.4 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',42) 
    1.5 if_missing(foob(_),foob(az))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:_2810] 
    1.6 if_missing(W4,X4)==>(\+W4/(W4\=@=X4),\+ ~X4==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:19] 
    1.7 good(az)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:24] 
    1.8 good(W4)==>if_missing(foob(_),foob(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc:22] 
    1.9 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',19) 
    1.10 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',24) 
    1.11 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/if_missing_04.pfc',22) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 5.221366882324219e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite if_missing_04.pfc" package='loader' time='4'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k if_missing_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="mpred_pfc_test_04.pl">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['mpred_pfc_test_04.pl'])" -g "test_completed"
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ2(booQ2) ,
%   support_fact = mfl4(_1396,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',30) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ2(booQ2)).
% % 	Found positive trigger: default_ooQ2(booQ2)
% % 		body: mpred_positive_fact(default_ooQ2(booQ2))*->rhs([ \+( ~( default_ooQ2(booQ2)))])
% % still_supported(~default_ooQ2(booQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooQ2(booQ2)
% % still_supported(~default_ooQ2(booQ2))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for default_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',30) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:default_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for default_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',30) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   if_mooQ2(Missing,Create)  ==>
%             \+( Missing/(Missing\=@=Create)) ==>
%             _1024) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   if_mooQ2(Missing,Create)  ==>
%          \+( Missing/(Missing\=@=Create)) ==>
%          _1024) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   if_mooQ2(If_mooQ2,MooQ2)  ==>
%                        \+( _48680/(_48686\=@=_48688)) ==>
%                        _43054)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,\=@=,2,pfcCallCode) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,\=@=,2,pfcCallCode) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,\=@=,2,pfcCallCode)).
% % 	Found positive trigger: mpred_prop(baseKB,\=@=,2,pfcCallCode)
% % 		body: \+ground(\=@= / 2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,\=@=,2,pfcCallCode)) }])
% % 	Found positive trigger: mpred_prop(baseKB,\=@=,2,pfcCallCode)
% % 		body: predicate_is_undefined_fa(\=@=,2)*->rhs([ mpred_prop(baseKB,\=@=,2,needsDefined)])
% % 	Found positive trigger: mpred_prop(baseKB,\=@=,2,pfcCallCode)
% % 		body: genlPreds(pfcCallCode,GenlPreds_PfcCallCode)*->rhs([ mpred_prop(baseKB,\=@=,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,\=@=,2,pfcCallCode)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,\=@=,2,pfcCallCode))*->rhs([ \+( ~( mpred_prop(baseKB,\=@=,2,pfcCallCode)))])
% % still_supported(~mpred_prop(baseKB,\=@=,2,pfcCallCode))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,\=@=,2,pfcCallCode)
% % still_supported(~mpred_prop(baseKB,\=@=,2,pfcCallCode))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcLHS)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcLHS)
% % 		body: rhs([ arity(if_mooQ2,2),
% %       functorIsMacro(if_mooQ2),
% %       mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])
% % 	RHS-Post1: arity(if_mooQ2,2)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcLHS),rhs([ arity(if_mooQ2,2),
% %                                                                                              functorIsMacro(if_mooQ2),
% %                                                                                              mpred_prop(baseKB,if_mooQ2,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(if_mooQ2,2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(if_mooQ2,2) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcLHS),
%                    rhs( [ arity(if_mooQ2,2),
%                           functorIsMacro(if_mooQ2),
%                           mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(if_mooQ2,2)).
% % 	Found positive trigger: arity(if_mooQ2,2)
% % 		body: predicateConventionMt(if_mooQ2,PredicateConventionMt_If_mooQ2)*->rhs([ { kb_global( _94744 :
% %
% %                                                                                       if_mooQ2/2) }])
% % 	Found positive trigger: arity(if_mooQ2,2)
% % 		body: prologHybrid(if_mooQ2)*->rhs([ { kb_shared( if_mooQ2/2) }])
% % 	Found positive trigger: arity(if_mooQ2,2)
% % 		body: pfcControlled(if_mooQ2)*->rhs([ hybrid_support(if_mooQ2,2)])
% % 	Found positive trigger: arity(if_mooQ2,2)
% % 		body: mpred_positive_fact(arity(if_mooQ2,2))*->rhs([ \+( ~( arity(if_mooQ2,2)))])
% % still_supported(~arity(if_mooQ2,2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(if_mooQ2,2)
% % still_supported(~arity(if_mooQ2,2))
% % 	Found positive trigger: arity(if_mooQ2,2)
% % 		body: singleValuedInArg(if_mooQ2,SingleValuedInArg_If_mooQ2)*->rhs([ singleValuedInArgAX(if_mooQ2,2,SingleValuedInArgAX6)])
% % 	RHS-Post1: functorIsMacro(if_mooQ2)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcLHS),rhs([ arity(if_mooQ2,2),
% %                                                                                              functorIsMacro(if_mooQ2),
% %                                                                                              mpred_prop(baseKB,if_mooQ2,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(if_mooQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(if_mooQ2) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcLHS),
%                    rhs( [ arity(if_mooQ2,2),
%                           functorIsMacro(if_mooQ2),
%                           mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(if_mooQ2)).
% % 	Found positive trigger: functorIsMacro(if_mooQ2)
% % 		body: mpred_positive_fact(functorIsMacro(if_mooQ2))*->rhs([ \+( ~( functorIsMacro(if_mooQ2)))])
% % still_supported(~functorIsMacro(if_mooQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(if_mooQ2)
% % still_supported(~functorIsMacro(if_mooQ2))
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcLHS),rhs([ arity(if_mooQ2,2),
% %                                                                                              functorIsMacro(if_mooQ2),
% %                                                                                              mpred_prop(baseKB,if_mooQ2,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcLHS),
%                    rhs( [ arity(if_mooQ2,2),
%                           functorIsMacro(if_mooQ2),
%                           mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : if_mooQ2/2) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'Missing'=Missing,
%                         'Create'=Create],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 41) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 41) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_57464:if_mooQ2/2))),
% %                                                               show_failure( on_x_fail( Call5 :
% %
% %                                                                                          call(kb_shared,_71706:if_mooQ2/2))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_50060:if_mooQ2/2))),
% %                           show_failure( on_x_fail( Call5 :
% %
% %                                                      call(kb_shared,_64302:if_mooQ2/2))) }])
% % 	 Support: mpred_prop(baseKB,if_mooQ2,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,kb_shared),'$pt'(baseKB,genlMt(BaseKB6,baseKB),(BaseKB7\=baseKB*->rhs(
% %                                 [ { nop( dmsg_pretty( Call8 :
% %
% %                                                         call(kb_shared,_101026:if_mooQ2/2))),
% %                                     show_failure( on_x_fail( Call9 :
% %
% %                                                                call(kb_shared,_11470:if_mooQ2/2))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,kb_shared)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,kb_shared)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,pfcLHS)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcLHS))
% % 	Adding positive
% % 		trigger: if_mooQ2(If_mooQ2,MooQ2)
% % 		body: rhs([ \+_68196/(_68202\=@=_68204)==>_68188])
% % 	 Support: (if_mooQ2(If_mooQ23,MooQ25)==>(\+_31498/(_31504\=@=_31506)==>_31490)),mfl4([ 'Missing'=Missing,
% %                                                                              'Create'=Create],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ2,2,pfcWatches)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger),rhs([ mpred_prop(baseKB,if_mooQ2,2,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,if_mooQ2,2,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,if_mooQ2,2,pfcLHS),
%                  rhs( [ arity(if_mooQ2,2),
%                         functorIsMacro(if_mooQ2),
%                         mpred_prop(baseKB,if_mooQ2,2,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcPosTrigger))
% % 	Found positive trigger: if_mooQ2(If_mooQ2,MooQ2)==>(\+_32662/(_32668\=@=_32670)==>_32654)
% % 		body: mpred_positive_fact((if_mooQ2(If_mooQ23,MooQ27)==>(\+_32712/(_32718\=@=_32720)==>_32704)))*->rhs([ \+( ~( (   if_mooQ2(If_mooQ24,MooQ28)  ==>
% %                                                                                                             \+( _11562/(_11568\=@=_11570)) ==>
% %                                                                                                             _5928)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ2(_15170)==>if_mooQ2(current_ooQ2(_15192),current_ooQ2(_15170)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ2(_15170)==>if_mooQ2(current_ooQ2(_15192),current_ooQ2(_15170)) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ2(OoQ2)==>if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(OoQ23))).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcRHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcRHS)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,if_mooQ2,2,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ2,2,pfcCreates)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcRHS),rhs([ mpred_prop(baseKB,if_mooQ2,2,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcRHS),
%                    rhs([mpred_prop(baseKB,if_mooQ2,2,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcCreates)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(if_mooQ2,2) },
% %       { kb_shared( baseKB : if_mooQ2/2) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,pfcCreates)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ2,2,pfcControlled)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %       [ mpred_prop(baseKB,if_mooQ2,2,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,if_mooQ2,2,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcControlled)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : if_mooQ2/2) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ2,2,prologHybrid)
% % 	Support: mpred_prop(baseKB,if_mooQ2,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ2,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                           [ mpred_prop(baseKB,if_mooQ2,2,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ2,2,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ2,2,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,if_mooQ2,2,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ2,2,pfcControlled),
%                    genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,if_mooQ2,2,prologHybrid)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ2,2,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,prologHybrid)
% % 		body: \+ground(if_mooQ2/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ2,2,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,if_mooQ2,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,prologHybrid)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,pfcControlled)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ2,2,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ2,2,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ2,2,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ2,2,pfcRHS)
% % still_supported(~mpred_prop(baseKB,if_mooQ2,2,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ2,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ2,1,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ2,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcLHS)
% % 		body: \+ground(default_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ2,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcLHS)
% % 		body: rhs([ arity(default_ooQ2,1),
% %       functorIsMacro(default_ooQ2),
% %       mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])
% % 	RHS-Post1: arity(default_ooQ2,1)
% % 	Support: mpred_prop(baseKB,default_ooQ2,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ2,1,pfcLHS),rhs([ arity(default_ooQ2,1),
% %                                                                                                      functorIsMacro(default_ooQ2),
% %                                                                                                      mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(default_ooQ2,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(default_ooQ2,1) ,
%   support_fact = mpred_prop(baseKB,default_ooQ2,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ2,1,pfcLHS),
%                    rhs( [ arity(default_ooQ2,1),
%                           functorIsMacro(default_ooQ2),
%                           mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(default_ooQ2,1)).
% % 	Found positive trigger: arity(default_ooQ2,1)
% % 		body: predicateConventionMt(default_ooQ2,PredicateConventionMt_Default_ooQ2)*->rhs([ { kb_global( _41654 :
% %
% %                                                                                               default_ooQ2/1) }])
% % 	Found positive trigger: arity(default_ooQ2,1)
% % 		body: prologHybrid(default_ooQ2)*->rhs([ { kb_shared( default_ooQ2/1) }])
% % 	Found positive trigger: arity(default_ooQ2,1)
% % 		body: pfcControlled(default_ooQ2)*->rhs([ hybrid_support(default_ooQ2,1)])
% % 	Found positive trigger: arity(default_ooQ2,1)
% % 		body: mpred_positive_fact(arity(default_ooQ2,1))*->rhs([ \+( ~( arity(default_ooQ2,1)))])
% % still_supported(~arity(default_ooQ2,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(default_ooQ2,1)
% % still_supported(~arity(default_ooQ2,1))
% % 	Found positive trigger: arity(default_ooQ2,1)
% % 		body: singleValuedInArg(default_ooQ2,SingleValuedInArg_Default_ooQ2)*->rhs([ singleValuedInArgAX(default_ooQ2,1,SingleValuedInArgAX5)])
% % 	RHS-Post1: functorIsMacro(default_ooQ2)
% % 	Support: mpred_prop(baseKB,default_ooQ2,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ2,1,pfcLHS),rhs([ arity(default_ooQ2,1),
% %                                                                                                      functorIsMacro(default_ooQ2),
% %                                                                                                      mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(default_ooQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(default_ooQ2) ,
%   support_fact = mpred_prop(baseKB,default_ooQ2,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ2,1,pfcLHS),
%                    rhs( [ arity(default_ooQ2,1),
%                           functorIsMacro(default_ooQ2),
%                           mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(default_ooQ2)).
% % 	Found positive trigger: functorIsMacro(default_ooQ2)
% % 		body: mpred_positive_fact(functorIsMacro(default_ooQ2))*->rhs([ \+( ~( functorIsMacro(default_ooQ2)))])
% % still_supported(~functorIsMacro(default_ooQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(default_ooQ2)
% % still_supported(~functorIsMacro(default_ooQ2))
% % 	RHS-Post1: mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,default_ooQ2,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ2,1,pfcLHS),rhs([ arity(default_ooQ2,1),
% %                                                                                                      functorIsMacro(default_ooQ2),
% %                                                                                                      mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ2,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ2,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,default_ooQ2,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ2,1,pfcLHS),
%                    rhs( [ arity(default_ooQ2,1),
%                           functorIsMacro(default_ooQ2),
%                           mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ2,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % 		body: \+ground(default_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ2,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : default_ooQ2/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ2,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ2,1,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'X'=X],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ2,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_18556:default_ooQ2/1))),
% %                                                               show_failure( on_x_fail( Call4 :
% %
% %                                                                                          call(kb_shared,_32798:default_ooQ2/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_28346:default_ooQ2/1))),
% %                           show_failure( on_x_fail( Call4 :
% %
% %                                                      call(kb_shared,_42588:default_ooQ2/1))) }])
% % 	 Support: mpred_prop(baseKB,default_ooQ2,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ2,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB5,baseKB),(BaseKB6\=baseKB*->rhs(
% %                                         [ { nop( dmsg_pretty( Call7 :
% %
% %                                                                 call(kb_shared,_79312:default_ooQ2/1))),
% %                                             show_failure( on_x_fail( Call8 :
% %
% %                                                                        call(kb_shared,_93556:default_ooQ2/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,kb_shared)
% % 		body: \+ground(default_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ2,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,default_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ2,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ2,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ2,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,default_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ2,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ2,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,default_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ2,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ2,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ2,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,pfcLHS))
% % 	Adding positive
% % 		trigger: default_ooQ2(OoQ2)
% % 		body: rhs([ if_mooQ2(current_ooQ2(OoQ23),current_ooQ2(OoQ24))])
% % 	 Support: (default_ooQ2(OoQ25)==>if_mooQ2(current_ooQ2(OoQ26),current_ooQ2(OoQ27))),mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)
% % 		body: \+ground(default_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,default_ooQ2,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger),rhs([ mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ2,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ2,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,default_ooQ2,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,default_ooQ2,1,pfcLHS),
%                  rhs( [ arity(default_ooQ2,1),
%                         functorIsMacro(default_ooQ2),
%                         mpred_prop(baseKB,default_ooQ2,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,default_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger))
% % 	Found positive trigger: default_ooQ2(OoQ2)==>if_mooQ2(current_ooQ2(OoQ23),current_ooQ2(OoQ24))
% % 		body: mpred_positive_fact((default_ooQ2(OoQ25)==>if_mooQ2(current_ooQ2(OoQ26),current_ooQ2(OoQ27))))*->rhs([ \+( ~( default_ooQ2(OoQ28)==>if_mooQ2(current_ooQ2(OoQ29),current_ooQ2(OoQ210))))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ2(booQ2) ,
%   support_fact = mfl4(_114472,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ2(booQ2)).
% % 	Found positive trigger: default_ooQ2(booQ2)
% % 		body: mpred_positive_fact(default_ooQ2(booQ2))*->rhs([ \+( ~( default_ooQ2(booQ2)))])
% % still_supported(~default_ooQ2(booQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooQ2(booQ2)
% % still_supported(~default_ooQ2(booQ2))
% % 	Found positive trigger: default_ooQ2(booQ2)
% % 		body: rhs([ if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))])
% % 	RHS-Post1: if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % 	Support: default_ooQ2(booQ2),'$pt'(baseKB,default_ooQ2(booQ2),rhs([ if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(booQ2))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = if_mooQ2(current_ooQ2(_50356),current_ooQ2(booQ2)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = if_mooQ2(current_ooQ2(_50356),current_ooQ2(booQ2)) ,
%   support_fact = default_ooQ2(booQ2) ,
%   support_trig = '$pt'(baseKB,default_ooQ2(booQ2),rhs([if_mooQ2(current_ooQ2(_50356),current_ooQ2(booQ2))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))).
% % 	Found positive trigger: if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % 		body: mpred_positive_fact(if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(booQ2)))*->rhs([ \+( ~( if_mooQ2(current_ooQ2(OoQ23),current_ooQ2(booQ2))))])
% % still_supported(~if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % still_supported(~if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2)))
% % 	Found positive trigger: if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % 		body: rhs([ \+current_ooQ2(OoQ22)/(current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)])
% % 	RHS-Post1: \+current_ooQ2(OoQ2)/(current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)
% % 	Support: if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(booQ2)),'$pt'(baseKB,if_mooQ2(current_ooQ2(OoQ23),current_ooQ2(booQ2)),rhs([ \+current_ooQ2(OoQ24)/(current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = \+current_ooQ2(_2358)/(current_ooQ2(_2358)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = \+current_ooQ2(_2358)/(current_ooQ2(_2358)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2) ,
%   support_fact = if_mooQ2(current_ooQ2(_2130),current_ooQ2(booQ2)) ,
%   support_trig = '$pt'( baseKB,
%                    if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2)),
%                    rhs([(\+current_ooQ2(_2358)/(current_ooQ2(_2358)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( \+current_ooQ2(OoQ2)/(current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcRHS) ,
%   support_fact = mfl4(_67372,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcRHS)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,current_ooQ2,1,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ2,1,pfcCreates)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcRHS),rhs([ mpred_prop(baseKB,current_ooQ2,1,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcRHS),
%                    rhs([mpred_prop(baseKB,current_ooQ2,1,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcCreates)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(current_ooQ2,1) },
% %       { kb_shared( baseKB : current_ooQ2/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,kb_shared) ,
%   support_fact = ( mfl4(_984,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) ,
%                    ax) ,
%   support_trig = mfl4(_1474,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB1\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_19316:current_ooQ2/1))),
% %                                                               show_failure( on_x_fail( Call3 :
% %
% %                                                                                          call(kb_shared,_33558:current_ooQ2/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB1\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_35232:current_ooQ2/1))),
% %                           show_failure( on_x_fail( Call3 :
% %
% %                                                      call(kb_shared,_49474:current_ooQ2/1))) }])
% % 	 Support: mpred_prop(baseKB,current_ooQ2,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB4,baseKB),(BaseKB5\=baseKB*->rhs(
% %                                         [ { nop( dmsg_pretty( Call6 :
% %
% %                                                                 call(kb_shared,_86198:current_ooQ2/1))),
% %                                             show_failure( on_x_fail( Call7 :
% %
% %                                                                        call(kb_shared,_100442:current_ooQ2/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,kb_shared)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,pfcCreates)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ2,1,pfcControlled)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %               [ mpred_prop(baseKB,current_ooQ2,1,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,current_ooQ2,1,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcControlled)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : current_ooQ2/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ2,1,prologHybrid)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                                   [ mpred_prop(baseKB,current_ooQ2,1,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcControlled),
%                    ( genlPreds(pfcControlled,prologHybrid) *->
%                      rhs([mpred_prop(baseKB,current_ooQ2,1,prologHybrid)]))) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,prologHybrid)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,prologHybrid)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,pfcControlled)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,pfcRHS)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcLHS) ,
%   support_fact = mfl4(_11742,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcLHS)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcLHS)
% % 		body: rhs([ arity(current_ooQ2,1),
% %       functorIsMacro(current_ooQ2),
% %       mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])
% % 	RHS-Post1: arity(current_ooQ2,1)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcLHS),rhs([ arity(current_ooQ2,1),
% %                                                                                                      functorIsMacro(current_ooQ2),
% %                                                                                                      mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(current_ooQ2,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(current_ooQ2,1) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcLHS),
%                    rhs( [ arity(current_ooQ2,1),
%                           functorIsMacro(current_ooQ2),
%                           mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(current_ooQ2,1)).
% % 	Found positive trigger: arity(current_ooQ2,1)
% % 		body: predicateConventionMt(current_ooQ2,PredicateConventionMt_Current_ooQ2)*->rhs([ { kb_global( _44436 :
% %
% %                                                                                               current_ooQ2/1) }])
% % 	Found positive trigger: arity(current_ooQ2,1)
% % 		body: prologHybrid(current_ooQ2)*->rhs([ { kb_shared( current_ooQ2/1) }])
% % 	Found positive trigger: arity(current_ooQ2,1)
% % 		body: pfcControlled(current_ooQ2)*->rhs([ hybrid_support(current_ooQ2,1)])
% % 	RHS-Post1: hybrid_support(current_ooQ2,1)
% % 	Support: arity(current_ooQ2,1),'$pt'(baseKB,arity(current_ooQ2,1),(pfcControlled(current_ooQ2)*->rhs([ hybrid_support(current_ooQ2,1)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = hybrid_support(current_ooQ2,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = hybrid_support(current_ooQ2,1) ,
%   support_fact = arity(current_ooQ2,1) ,
%   support_trig = '$pt'( baseKB,
%                    arity(current_ooQ2,1),
%                    pfcControlled(current_ooQ2)*->rhs([hybrid_support(current_ooQ2,1)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( hybrid_support(current_ooQ2,1)).
% % 	Found positive trigger: hybrid_support(current_ooQ2,1)
% % 		body: mpred_positive_fact(hybrid_support(current_ooQ2,1))*->rhs([ \+( ~( hybrid_support(current_ooQ2,1)))])
% % still_supported(~hybrid_support(current_ooQ2,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~hybrid_support(current_ooQ2,1)
% % still_supported(~hybrid_support(current_ooQ2,1))
% % 	Found positive trigger: arity(current_ooQ2,1)
% % 		body: mpred_positive_fact(arity(current_ooQ2,1))*->rhs([ \+( ~( arity(current_ooQ2,1)))])
% % still_supported(~arity(current_ooQ2,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(current_ooQ2,1)
% % still_supported(~arity(current_ooQ2,1))
% % 	Found positive trigger: arity(current_ooQ2,1)
% % 		body: singleValuedInArg(current_ooQ2,SingleValuedInArg_Current_ooQ2)*->rhs([ singleValuedInArgAX(current_ooQ2,1,SingleValuedInArgAX4)])
% % 	RHS-Post1: functorIsMacro(current_ooQ2)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcLHS),rhs([ arity(current_ooQ2,1),
% %                                                                                                      functorIsMacro(current_ooQ2),
% %                                                                                                      mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(current_ooQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(current_ooQ2) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcLHS),
%                    rhs( [ arity(current_ooQ2,1),
%                           functorIsMacro(current_ooQ2),
%                           mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(current_ooQ2)).
% % 	Found positive trigger: functorIsMacro(current_ooQ2)
% % 		body: mpred_positive_fact(functorIsMacro(current_ooQ2))*->rhs([ \+( ~( functorIsMacro(current_ooQ2)))])
% % still_supported(~functorIsMacro(current_ooQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(current_ooQ2)
% % still_supported(~functorIsMacro(current_ooQ2))
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcLHS),rhs([ arity(current_ooQ2,1),
% %                                                                                                      functorIsMacro(current_ooQ2),
% %                                                                                                      mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcLHS),
%                    rhs( [ arity(current_ooQ2,1),
%                           functorIsMacro(current_ooQ2),
%                           mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : current_ooQ2/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcLHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger) ,
%   support_fact = mfl4(_76216,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)
% % 		body: \+ground(current_ooQ2/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)
% % 		body: rhs([ mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ2,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger),rhs([ mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ2,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ2,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger),
%                    rhs([mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,current_ooQ2,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,current_ooQ2,1,pfcLHS),
%                  rhs( [ arity(current_ooQ2,1),
%                         functorIsMacro(current_ooQ2),
%                         mpred_prop(baseKB,current_ooQ2,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)
% % 		body: genlPreds(pfcNegTrigger,GenlPreds_PfcNegTrigger)*->rhs([ mpred_prop(baseKB,current_ooQ2,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger)
% % still_supported(~mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger))
% % 	Adding negative
% % 		trigger: current_ooQ2(OoQ2)
% % 		test: call_u_no_bc(current_ooQ2(OoQ22)),current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2)
% % 		body: rhs([ current_ooQ2(booQ2)])
% % 	 Support: (\+current_ooQ2(OoQ24)/(current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)),mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46)
% % 	RHS-Post1: current_ooQ2(booQ2)
% % 	Support: \+current_ooQ2(OoQ2),'$nt'(current_ooQ2(OoQ21),(call_u_no_bc(current_ooQ2(OoQ22)),current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2)),rhs(
% %           [ current_ooQ2(booQ2)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ2(booQ2) ,
%   support_fact = \+( current_ooQ2(OoQ2)) ,
%   support_trig = '$nt'( current_ooQ2(OoQ2),
%                    call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2),
%                    rhs([current_ooQ2(booQ2)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooQ2(OoQ2)
% % 		cond: call_u_no_bc(current_ooQ2(OoQ22)),current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2)
% % 		action: rhs([ current_ooQ2(booQ2)])
% % 	 from: mpred_add_support_fast(current_ooQ2(booQ2),(\+current_ooQ2(OoQ24),'$nt'(current_ooQ2(OoQ25),(call_u_no_bc(current_ooQ2(OoQ26)),current_ooQ2(OoQ27)\=@=current_ooQ2(booQ2)),rhs(
% %                                                        [ current_ooQ2(booQ2)]))))
% baseKB : mpred_fwc1( current_ooQ2(booQ2)).
% % 	Found positive trigger: current_ooQ2(booQ2)
% % 		body: mpred_positive_fact(current_ooQ2(booQ2))*->rhs([ \+( ~( current_ooQ2(booQ2)))])
% % still_supported(~current_ooQ2(booQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ2(booQ2)
% % still_supported(~current_ooQ2(booQ2))
% % 	Found negative trigger: current_ooQ2(booQ2)
% % 		cond: call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2)
% % 		body: rhs([ current_ooQ2(booQ2)])
% % 	Support: '$spft'(baseKB,current_ooQ2(booQ2),\+current_ooQ2(OoQ23),'$nt'(current_ooQ2(booQ2),(call_u_no_bc(current_ooQ2(OoQ24)),current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2)),rhs(
% %                                               [ current_ooQ2(booQ2)])))
% % 	Found positive trigger: \+current_ooQ2(OoQ2)/(current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)
% % 		body: mpred_positive_fact((\+current_ooQ2(OoQ23)/(current_ooQ2(OoQ24)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)))*->rhs([ \+( ~( \+current_ooQ2(OoQ25)/(current_ooQ2(OoQ26)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)))])
passed=info(why_was_true(baseKB:current_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ2(_)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ2(W4)/(current_ooQ2(W4)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_80524] 
    1.3 if_mooQ2(current_ooQ2(_),current_ooQ2(booQ2))  % [mfl4(_81704,_81706,_81708,_81710)] 
    1.4 if_mooQ2(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:41] 
    1.5 default_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:46] 
    1.6 default_ooQ2(W4)==>if_mooQ2(current_ooQ2(_),current_ooQ2(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ2(fooQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ2(fooQ2) ,
%   support_fact = mfl4(_91716,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',52) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( current_ooQ2(fooQ2)).
% % 	Found positive trigger: current_ooQ2(fooQ2)
% % 		body: mpred_positive_fact(current_ooQ2(fooQ2))*->rhs([ \+( ~( current_ooQ2(fooQ2)))])
% % still_supported(~current_ooQ2(fooQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ2(fooQ2)
% % still_supported(~current_ooQ2(fooQ2))
% % 	Found negative trigger: current_ooQ2(fooQ2)
% % 		cond: call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2)
% % 		body: rhs([ current_ooQ2(booQ2)])
% % 	Support: '$spft'(baseKB,current_ooQ2(booQ2),\+current_ooQ2(OoQ23),'$nt'(current_ooQ2(fooQ2),(call_u_no_bc(current_ooQ2(OoQ24)),current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2)),rhs(
% %                                               [ current_ooQ2(booQ2)])))
% %     Removing support: \+current_ooQ2(fooQ2),'$nt'(current_ooQ2(fooQ2),(call_u_no_bc(current_ooQ2(fooQ2)),current_ooQ2(fooQ2)\=@=current_ooQ2(booQ2)),rhs(
% %                                  [ current_ooQ2(booQ2)]))
% %      Which was for: current_ooQ2(booQ2)
passed=info(why_was_true(baseKB:(\+current_ooQ2(booQ2))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% % 	RHS-Post1: current_ooQ2(booQ2)
% % 	Support: \+current_ooQ2(fooQ2),'$nt'(current_ooQ2(fooQ2),(call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2)),rhs(
% %           [ current_ooQ2(booQ2)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ2(booQ2) ,
%   support_fact = \+( current_ooQ2(fooQ2)) ,
%   support_trig = '$nt'( current_ooQ2(fooQ2),
%                    call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2),
%                    rhs([current_ooQ2(booQ2)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooQ2(fooQ2)
% % 		cond: call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2)
% % 		action: rhs([ current_ooQ2(booQ2)])
% % 	 from: mpred_add_support_fast(current_ooQ2(booQ2),(\+current_ooQ2(fooQ2),'$nt'(current_ooQ2(fooQ2),(call_u_no_bc(current_ooQ2(OoQ23)),current_ooQ2(OoQ24)\=@=current_ooQ2(booQ2)),rhs(
% %                                                        [ current_ooQ2(booQ2)]))))
% baseKB : mpred_fwc1( current_ooQ2(booQ2)).
% % 	Found positive trigger: current_ooQ2(booQ2)
% % 		body: mpred_positive_fact(current_ooQ2(booQ2))*->rhs([ \+( ~( current_ooQ2(booQ2)))])
% % still_supported(~current_ooQ2(booQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ2(booQ2)
% % still_supported(~current_ooQ2(booQ2))
passed=info(why_was_true(baseKB:current_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ2(fooQ2)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ2(W4)/(current_ooQ2(W4)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_89034] 
    1.3 if_mooQ2(current_ooQ2(_),current_ooQ2(booQ2))  % [mfl4(_90214,_90216,_90218,_90220)] 
    1.4 if_mooQ2(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:41] 
    1.5 default_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:46] 
    1.6 default_ooQ2(W4)==>if_mooQ2(current_ooQ2(_),current_ooQ2(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% %     Removing support: mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46),ax
% %      Which was for: default_ooQ2(booQ2)
% success( mpred_undo1_nt_unfwc,
%   (   '$nt'( current_ooQ2(OoQ2),
%         call_u_no_bc(current_ooQ2(OoQ21)),current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2),
%         rhs([current_ooQ2(booQ2)]))  ,
%     dmsg_pretty( mpred_undo1( '$nt'( current_ooQ2(OoQ23),
%                                 call_u_no_bc(current_ooQ2(OoQ24)),current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2),
%                                 rhs([current_ooQ2(booQ2)])))) ,
%     retract_u( '$nt'( current_ooQ2(OoQ26),
%                  call_u_no_bc(current_ooQ2(OoQ27)),current_ooQ2(OoQ28)\=@=current_ooQ2(booQ2),
%                  rhs([current_ooQ2(booQ2)]))))).
% Fileinfo: unk: -1

baseKB : '$spft'( baseKB, 
           default_ooQ2(OoQ2)==>if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(OoQ23)), 
           mfl4( 
              [ 'X'=X], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
           mfl4( 
              [ 'X'=X], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           arity(default_ooQ2,1), 
           mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
             rhs( [ arity(default_ooQ2,1), 
                    functorIsMacro(default_ooQ2), 
                    mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           functorIsMacro(default_ooQ2), 
           mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
             rhs( [ arity(default_ooQ2,1), 
                    functorIsMacro(default_ooQ2), 
                    mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooQ2,1,pfcWatches), 
           mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooQ2,1,pfcLHS), 
             rhs( [ arity(default_ooQ2,1), 
                    functorIsMacro(default_ooQ2), 
                    mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooQ2,1,kb_shared), 
           ( mfl4( 
                [ 'X'=X], 
                 baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44) , 
             ax), 
           mfl4( 
              [ 'X'=X1], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           '$pt'( baseKB, 
             genlMt(BaseKB,baseKB), 
             ( BaseKB3\=baseKB *-> 
               rhs([{nop(dmsg_pretty(Call:call(kb_shared,_82088:default_ooQ2/1))),show_failure(on_x_fail(Call5:call(kb_shared,_82114:default_ooQ2/1)))}]))), 
           mpred_prop(baseKB,default_ooQ2,1,kb_shared), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooQ2,1,kb_shared), 
             '$pt'( baseKB, 
               genlMt(BaseKB6,baseKB), 
               ( BaseKB7\=baseKB *-> 
                 rhs([{nop(dmsg_pretty(Call8:call(kb_shared,_82194:default_ooQ2/1))),show_failure(on_x_fail(Call9:call(kb_shared,_82220:default_ooQ2/1)))}]))))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger), 
           mfl4( 
              [ 'X'=X10], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooQ2,1,pfcWatches), 
           mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger), 
             rhs([mpred_prop(baseKB,default_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           '$pt'( baseKB, 
             default_ooQ2(OoQ2), 
             rhs([if_mooQ2(current_ooQ2(OoQ213),current_ooQ2(OoQ214))])), 
           default_ooQ2(OoQ215)==>if_mooQ2(current_ooQ2(OoQ216),current_ooQ2(OoQ217)), 
           mfl4( 
              [ 'X'=X11], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 44)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcRHS), 
           mfl4(BaseKB10,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcCreates), 
           mpred_prop(baseKB,current_ooQ2,1,pfcRHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcRHS), 
             rhs([mpred_prop(baseKB,current_ooQ2,1,pfcCreates)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,kb_shared), 
           ( mfl4(BaseKB10,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) , 
             ax), 
           mfl4(BaseKB11,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           '$pt'( baseKB, 
             genlMt(BaseKB12,baseKB), 
             ( BaseKB13\=baseKB *-> 
               rhs([{nop(dmsg_pretty(Call14:call(kb_shared,_101310:current_ooQ2/1))),show_failure(on_x_fail(Call15:call(kb_shared,_101336:current_ooQ2/1)))}]))), 
           mpred_prop(baseKB,current_ooQ2,1,kb_shared), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,kb_shared), 
             '$pt'( baseKB, 
               genlMt(BaseKB16,baseKB), 
               ( BaseKB17\=baseKB *-> 
                 rhs([{nop(dmsg_pretty(Call18:call(kb_shared,_101416:current_ooQ2/1))),show_failure(on_x_fail(Call19:call(kb_shared,_101442:current_ooQ2/1)))}]))))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcControlled), 
           mpred_prop(baseKB,current_ooQ2,1,pfcRHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcRHS), 
             genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,current_ooQ2,1,pfcControlled)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,prologHybrid), 
           mpred_prop(baseKB,current_ooQ2,1,pfcControlled), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcControlled), 
             genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,current_ooQ2,1,prologHybrid)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
           mfl4(BaseKB20,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           arity(current_ooQ2,1), 
           mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
             rhs( [ arity(current_ooQ2,1), 
                    functorIsMacro(current_ooQ2), 
                    mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           hybrid_support(current_ooQ2,1), 
           arity(current_ooQ2,1), 
           '$pt'( baseKB, 
             arity(current_ooQ2,1), 
             pfcControlled(current_ooQ2)*->rhs([hybrid_support(current_ooQ2,1)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           functorIsMacro(current_ooQ2), 
           mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
             rhs( [ arity(current_ooQ2,1), 
                    functorIsMacro(current_ooQ2), 
                    mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcWatches), 
           mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcLHS), 
             rhs( [ arity(current_ooQ2,1), 
                    functorIsMacro(current_ooQ2), 
                    mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger), 
           mfl4(BaseKB20,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooQ2,1,pfcWatches), 
           mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger), 
             rhs([mpred_prop(baseKB,current_ooQ2,1,pfcWatches)]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$pt'( baseKB, 
           genlMt(BaseKB20,baseKB), 
           ( BaseKB21\=baseKB *-> 
             rhs([{nop(dmsg_pretty(Call22:call(kb_shared,_82654:default_ooQ2/1))),show_failure(on_x_fail(Call23:call(kb_shared,_82680:default_ooQ2/1)))}]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$pt'( baseKB, 
           default_ooQ2(OoQ2), 
           rhs([if_mooQ2(current_ooQ2(OoQ226),current_ooQ2(OoQ227))])).
% Fileinfo: unk: -1
baseKB : '$pt'( baseKB, 
           genlMt(BaseKB24,baseKB), 
           ( BaseKB25\=baseKB *-> 
             rhs([{nop(dmsg_pretty(Call26:call(kb_shared,_17400:current_ooQ2/1))),show_failure(on_x_fail(Call27:call(kb_shared,_17426:current_ooQ2/1)))}]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : functorIsMacro(default_ooQ2).
% Fileinfo: unk: -1
baseKB : functorIsMacro(current_ooQ2).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : arity(default_ooQ2,1).
% Fileinfo: unk: -1
baseKB : arity(current_ooQ2,1).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : hybrid_support(current_ooQ2,1).
% Fileinfo: unk: -1

baseKB : safe_wrap(baseKB,default_ooQ2,1,ereq).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : safe_wrap(baseKB,current_ooQ2,1,ereq).
% Fileinfo: unk: -1

baseKB : default_ooQ2(OoQ2)==>if_mooQ2(current_ooQ2(OoQ229),current_ooQ2(OoQ230)).

 /*  portray_hb1( print_tree_stop, 
       $predicate_property( default_ooQ2(OoQ2)), 
       [ interpreted, visible,public,dynamic,multifile,discontiguous,transparent
         , 
         number_of_clauses(0), 
         number_of_rules(0), 
         last_modified_generation(96447), 
         defined, 
         size(112)]).
 */
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61

 /*  portray_hb1( print_tree_stop, 
       $predicate_property( current_ooQ2(OoQ2)), 
       [ interpreted, visible,public,dynamic,multifile,discontiguous,transparent
         , 
         number_of_clauses(0), 
         number_of_rules(0), 
         last_modified_generation(96899), 
         defined, 
         size(112)]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,default_ooQ2,1,pfcLHS).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,default_ooQ2,1,pfcWatches).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,default_ooQ2,1,kb_shared).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,default_ooQ2,1,pfcPosTrigger).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooQ2,1,pfcRHS).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooQ2,1,pfcCreates).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,current_ooQ2,1,kb_shared).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooQ2,1,pfcControlled).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooQ2,1,prologHybrid).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,current_ooQ2,1,pfcLHS).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooQ2,1,pfcWatches).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooQ2,1,pfcNegTrigger).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
j_u : junit_prop("default_ooQ2(booQ2). @ 36",goal,baseKB:default_ooQ2(booQ2)).
% Fileinfo: unk: -1
j_u : junit_prop("current_ooQ2(booQ2). @ 48",goal,baseKB:current_ooQ2(booQ2)).
% Fileinfo: unk: -1
j_u : junit_prop("\naf current_ooQ2(booQ2). @ 54",goal,baseKB:(\+current_ooQ2(booQ2))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
j_u : junit_prop("current_ooQ2(booQ2). @ 58",goal,baseKB:current_ooQ2(booQ2)).
% Fileinfo: unk: -1

t_l : shown_why( (\+current_ooQ2(fooQ2))+[]).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
t_l : shown_why( (\+current_ooQ2(A)/(current_ooQ2(A)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2))+[]).
% Fileinfo: unk: -1
t_l : shown_why( if_mooQ2(current_ooQ2(A),current_ooQ2(booQ2))+[]).
% Fileinfo: unk: -1
t_l : shown_why( default_ooQ2(booQ2)+[]).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
t_l : shown_why( (default_ooQ2(A)==>if_mooQ2(current_ooQ2(B),current_ooQ2(A)))+[]).
% Fileinfo: unk: -1

rdf_rewrite : arity(default_ooQ2,1).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
rdf_rewrite : arity(current_ooQ2,1).
passed=info(why_was_true(baseKB:(\+current_ooQ2(booQ2))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ~( current_ooQ2(fooQ2)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ~( current_ooQ2(fooQ2)) ,
%   support_fact = mfl4(_1328,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',66) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( ~( current_ooQ2(fooQ2))).
% % 	Found positive trigger: ~current_ooQ2(fooQ2)
% % 		body: mpred_positive_fact(~current_ooQ2(fooQ2))*->rhs([ \+( ~( ~( current_ooQ2(fooQ2))))])
passed=info(why_was_true(baseKB: ~current_ooQ2(fooQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~current_ooQ2(fooQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',66) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ2(booQ2) ,
%   support_fact = mfl4(_41592,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',72) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ2(booQ2)).
% % 	Found positive trigger: default_ooQ2(booQ2)
% % 		body: mpred_positive_fact(default_ooQ2(booQ2))*->rhs([ \+( ~( default_ooQ2(booQ2)))])
% % still_supported(~default_ooQ2(booQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooQ2(booQ2)
% % still_supported(~default_ooQ2(booQ2))
% % 	Found positive trigger: default_ooQ2(booQ2)
% % 		body: rhs([ if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))])
% % 	RHS-Post1: if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % 	Support: default_ooQ2(booQ2),'$pt'(baseKB,default_ooQ2(booQ2),rhs([ if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(booQ2))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = if_mooQ2(current_ooQ2(_2362),current_ooQ2(booQ2)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = if_mooQ2(current_ooQ2(_2362),current_ooQ2(booQ2)) ,
%   support_fact = default_ooQ2(booQ2) ,
%   support_trig = '$pt'(baseKB,default_ooQ2(booQ2),rhs([if_mooQ2(current_ooQ2(_2362),current_ooQ2(booQ2))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))).
% % 	Found positive trigger: if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % 		body: mpred_positive_fact(if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(booQ2)))*->rhs([ \+( ~( if_mooQ2(current_ooQ2(OoQ23),current_ooQ2(booQ2))))])
% % still_supported(~if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % still_supported(~if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2)))
% % 	Found positive trigger: if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2))
% % 		body: rhs([ \+current_ooQ2(OoQ22)/(current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)])
% % 	RHS-Post1: \+current_ooQ2(OoQ2)/(current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)
% % 	Support: if_mooQ2(current_ooQ2(OoQ22),current_ooQ2(booQ2)),'$pt'(baseKB,if_mooQ2(current_ooQ2(OoQ23),current_ooQ2(booQ2)),rhs([ \+current_ooQ2(OoQ24)/(current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = \+current_ooQ2(_2834)/(current_ooQ2(_2834)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = \+current_ooQ2(_2834)/(current_ooQ2(_2834)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2) ,
%   support_fact = if_mooQ2(current_ooQ2(_2606),current_ooQ2(booQ2)) ,
%   support_trig = '$pt'( baseKB,
%                    if_mooQ2(current_ooQ2(OoQ2),current_ooQ2(booQ2)),
%                    rhs([(\+current_ooQ2(_2834)/(current_ooQ2(_2834)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( \+current_ooQ2(OoQ2)/(current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)).
% % 	Adding negative
% % 		trigger: current_ooQ2(OoQ2)
% % 		test: call_u_no_bc(current_ooQ2(OoQ22)),current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2)
% % 		body: rhs([ current_ooQ2(booQ2)])
% % 	 Support: (\+current_ooQ2(OoQ24)/(current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)),mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',72)
% % 	RHS-Post1: current_ooQ2(booQ2)
% % 	Support: \+current_ooQ2(OoQ2),'$nt'(current_ooQ2(OoQ21),(call_u_no_bc(current_ooQ2(OoQ22)),current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2)),rhs(
% %           [ current_ooQ2(booQ2)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ2(booQ2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ2(booQ2) ,
%   support_fact = \+( current_ooQ2(OoQ2)) ,
%   support_trig = '$nt'( current_ooQ2(OoQ2),
%                    call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ21)\=@=current_ooQ2(booQ2),
%                    rhs([current_ooQ2(booQ2)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooQ2(OoQ2)
% % 		cond: call_u_no_bc(current_ooQ2(OoQ22)),current_ooQ2(OoQ23)\=@=current_ooQ2(booQ2)
% % 		action: rhs([ current_ooQ2(booQ2)])
% % 	 from: mpred_add_support_fast(current_ooQ2(booQ2),(\+current_ooQ2(OoQ24),'$nt'(current_ooQ2(OoQ25),(call_u_no_bc(current_ooQ2(OoQ26)),current_ooQ2(OoQ27)\=@=current_ooQ2(booQ2)),rhs(
% %                                                        [ current_ooQ2(booQ2)]))))
% baseKB : mpred_fwc1( current_ooQ2(booQ2)).
% % 	Found positive trigger: current_ooQ2(booQ2)
% % 		body: mpred_positive_fact(current_ooQ2(booQ2))*->rhs([ \+( ~( current_ooQ2(booQ2)))])
% % still_supported(~current_ooQ2(booQ2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ2(booQ2)
% % still_supported(~current_ooQ2(booQ2))
% % 	Found negative trigger: current_ooQ2(booQ2)
% % 		cond: call_u_no_bc(current_ooQ2(OoQ2)),current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2)
% % 		body: rhs([ current_ooQ2(booQ2)])
% % 	Support: '$spft'(baseKB,current_ooQ2(booQ2),\+current_ooQ2(OoQ23),'$nt'(current_ooQ2(booQ2),(call_u_no_bc(current_ooQ2(OoQ24)),current_ooQ2(OoQ25)\=@=current_ooQ2(booQ2)),rhs(
% %                                               [ current_ooQ2(booQ2)])))
% % 	Found positive trigger: \+current_ooQ2(OoQ2)/(current_ooQ2(OoQ22)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)
% % 		body: mpred_positive_fact((\+current_ooQ2(OoQ23)/(current_ooQ2(OoQ24)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)))*->rhs([ \+( ~( \+current_ooQ2(OoQ25)/(current_ooQ2(OoQ26)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)))])
passed=info(why_was_true(baseKB:current_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ2(fooQ2)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ2(W4)/(current_ooQ2(W4)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_83388] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',66) 
    1.4 if_mooQ2(current_ooQ2(_),current_ooQ2(booQ2))  % [mfl4(_84938,_84940,_84942,_84944)] 
    1.5 if_mooQ2(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:41] 
    1.6 default_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:72] 
    1.7 default_ooQ2(W4)==>if_mooQ2(current_ooQ2(_),current_ooQ2(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:44] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',72) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   if_mooTt(Missing,Create)  ==>
%             \+( Missing/(Missing\=@=Create)) ==>
%             _95202) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   if_mooTt(Missing,Create)  ==>
%          \+( Missing/(Missing\=@=Create)) ==>
%          _95202) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 84) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   if_mooTt(If_mooTt,MooTt)  ==>
%                        \+( _16334/(_16340\=@=_16342)) ==>
%                        _10708)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 84) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcLHS)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcLHS)
% % 		body: rhs([ arity(if_mooTt,2),
% %       functorIsMacro(if_mooTt),
% %       mpred_prop(baseKB,if_mooTt,2,pfcWatches)])
% % 	RHS-Post1: arity(if_mooTt,2)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcLHS),rhs([ arity(if_mooTt,2),
% %                                                                                              functorIsMacro(if_mooTt),
% %                                                                                              mpred_prop(baseKB,if_mooTt,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(if_mooTt,2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(if_mooTt,2) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcLHS),
%                    rhs( [ arity(if_mooTt,2),
%                           functorIsMacro(if_mooTt),
%                           mpred_prop(baseKB,if_mooTt,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(if_mooTt,2)).
% % 	Found positive trigger: arity(if_mooTt,2)
% % 		body: predicateConventionMt(if_mooTt,PredicateConventionMt_If_mooTt)*->rhs([ { kb_global( _50436 :
% %
% %                                                                                       if_mooTt/2) }])
% % 	Found positive trigger: arity(if_mooTt,2)
% % 		body: prologHybrid(if_mooTt)*->rhs([ { kb_shared( if_mooTt/2) }])
% % 	Found positive trigger: arity(if_mooTt,2)
% % 		body: pfcControlled(if_mooTt)*->rhs([ hybrid_support(if_mooTt,2)])
% % 	Found positive trigger: arity(if_mooTt,2)
% % 		body: mpred_positive_fact(arity(if_mooTt,2))*->rhs([ \+( ~( arity(if_mooTt,2)))])
% % still_supported(~arity(if_mooTt,2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(if_mooTt,2)
% % still_supported(~arity(if_mooTt,2))
% % 	Found positive trigger: arity(if_mooTt,2)
% % 		body: singleValuedInArg(if_mooTt,SingleValuedInArg_If_mooTt)*->rhs([ singleValuedInArgAX(if_mooTt,2,SingleValuedInArgAX6)])
% % 	RHS-Post1: functorIsMacro(if_mooTt)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcLHS),rhs([ arity(if_mooTt,2),
% %                                                                                              functorIsMacro(if_mooTt),
% %                                                                                              mpred_prop(baseKB,if_mooTt,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(if_mooTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(if_mooTt) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcLHS),
%                    rhs( [ arity(if_mooTt,2),
%                           functorIsMacro(if_mooTt),
%                           mpred_prop(baseKB,if_mooTt,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(if_mooTt)).
% % 	Found positive trigger: functorIsMacro(if_mooTt)
% % 		body: mpred_positive_fact(functorIsMacro(if_mooTt))*->rhs([ \+( ~( functorIsMacro(if_mooTt)))])
% % still_supported(~functorIsMacro(if_mooTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(if_mooTt)
% % still_supported(~functorIsMacro(if_mooTt))
% % 	RHS-Post1: mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcLHS),rhs([ arity(if_mooTt,2),
% %                                                                                              functorIsMacro(if_mooTt),
% %                                                                                              mpred_prop(baseKB,if_mooTt,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcLHS),
%                    rhs( [ arity(if_mooTt,2),
%                           functorIsMacro(if_mooTt),
%                           mpred_prop(baseKB,if_mooTt,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : if_mooTt/2) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'Missing'=Missing,
%                         'Create'=Create],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 84) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 84) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_18688:if_mooTt/2))),
% %                                                               show_failure( on_x_fail( Call5 :
% %
% %                                                                                          call(kb_shared,_32930:if_mooTt/2))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_29710:if_mooTt/2))),
% %                           show_failure( on_x_fail( Call5 :
% %
% %                                                      call(kb_shared,_43952:if_mooTt/2))) }])
% % 	 Support: mpred_prop(baseKB,if_mooTt,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,kb_shared),'$pt'(baseKB,genlMt(BaseKB6,baseKB),(BaseKB7\=baseKB*->rhs(
% %                                 [ { nop( dmsg_pretty( Call8 :
% %
% %                                                         call(kb_shared,_80676:if_mooTt/2))),
% %                                     show_failure( on_x_fail( Call9 :
% %
% %                                                                call(kb_shared,_94918:if_mooTt/2))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,kb_shared)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,kb_shared)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,pfcLHS)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcLHS))
% % 	Adding positive
% % 		trigger: if_mooTt(If_mooTt,MooTt)
% % 		body: rhs([ \+_32734/(_32740\=@=_32742)==>_32726])
% % 	 Support: (if_mooTt(If_mooTt3,MooTt5)==>(\+_3268/(_3270\=@=_3272)==>_3266)),mfl4([ 'Missing'=Missing,
% %                                                                          'Create'=Create],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 84) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,if_mooTt,2,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooTt,2,pfcWatches)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger),rhs([ mpred_prop(baseKB,if_mooTt,2,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,if_mooTt,2,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,if_mooTt,2,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,if_mooTt,2,pfcLHS),
%                  rhs( [ arity(if_mooTt,2),
%                         functorIsMacro(if_mooTt),
%                         mpred_prop(baseKB,if_mooTt,2,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcPosTrigger))
% % 	Found positive trigger: if_mooTt(If_mooTt,MooTt)==>(\+_3176/(_3178\=@=_3180)==>_3174)
% % 		body: mpred_positive_fact((if_mooTt(If_mooTt3,MooTt7)==>(\+_3184/(_3186\=@=_3188)==>_3182)))*->rhs([ \+( ~( (   if_mooTt(If_mooTt4,MooTt8)  ==>
% %                                                                                                         \+( _94532/(_94538\=@=_94540)) ==>
% %                                                                                                         _88898)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooTt(_98132)==>if_mooTt(current_ooTt(_98154),current_ooTt(_98132)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooTt(_98132)==>if_mooTt(current_ooTt(_98154),current_ooTt(_98132)) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooTt(Tt)==>if_mooTt(current_ooTt(Tt2),current_ooTt(Tt3))).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcRHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcRHS)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,if_mooTt,2,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooTt,2,pfcCreates)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcRHS),rhs([ mpred_prop(baseKB,if_mooTt,2,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcRHS),
%                    rhs([mpred_prop(baseKB,if_mooTt,2,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcCreates)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(if_mooTt,2) },
% %       { kb_shared( baseKB : if_mooTt/2) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,pfcCreates)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooTt,2,pfcControlled)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %       [ mpred_prop(baseKB,if_mooTt,2,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,if_mooTt,2,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcControlled)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : if_mooTt/2) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooTt,2,prologHybrid)
% % 	Support: mpred_prop(baseKB,if_mooTt,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,if_mooTt,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                           [ mpred_prop(baseKB,if_mooTt,2,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooTt,2,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooTt,2,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,if_mooTt,2,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooTt,2,pfcControlled),
%                    genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,if_mooTt,2,prologHybrid)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooTt,2,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,prologHybrid)
% % 		body: \+ground(if_mooTt/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooTt,2,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,if_mooTt,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,prologHybrid)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,pfcControlled)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooTt,2,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooTt,2,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooTt,2,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooTt,2,pfcRHS)
% % still_supported(~mpred_prop(baseKB,if_mooTt,2,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooTt,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooTt,1,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooTt,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcLHS)
% % 		body: \+ground(default_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooTt,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcLHS)
% % 		body: rhs([ arity(default_ooTt,1),
% %       functorIsMacro(default_ooTt),
% %       mpred_prop(baseKB,default_ooTt,1,pfcWatches)])
% % 	RHS-Post1: arity(default_ooTt,1)
% % 	Support: mpred_prop(baseKB,default_ooTt,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooTt,1,pfcLHS),rhs([ arity(default_ooTt,1),
% %                                                                                                      functorIsMacro(default_ooTt),
% %                                                                                                      mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(default_ooTt,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(default_ooTt,1) ,
%   support_fact = mpred_prop(baseKB,default_ooTt,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooTt,1,pfcLHS),
%                    rhs( [ arity(default_ooTt,1),
%                           functorIsMacro(default_ooTt),
%                           mpred_prop(baseKB,default_ooTt,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(default_ooTt,1)).
% % 	Found positive trigger: arity(default_ooTt,1)
% % 		body: predicateConventionMt(default_ooTt,PredicateConventionMt_Default_ooTt)*->rhs([ { kb_global( _114924 :
% %
% %                                                                                               default_ooTt/1) }])
% % 	Found positive trigger: arity(default_ooTt,1)
% % 		body: prologHybrid(default_ooTt)*->rhs([ { kb_shared( default_ooTt/1) }])
% % 	Found positive trigger: arity(default_ooTt,1)
% % 		body: pfcControlled(default_ooTt)*->rhs([ hybrid_support(default_ooTt,1)])
% % 	Found positive trigger: arity(default_ooTt,1)
% % 		body: mpred_positive_fact(arity(default_ooTt,1))*->rhs([ \+( ~( arity(default_ooTt,1)))])
% % still_supported(~arity(default_ooTt,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(default_ooTt,1)
% % still_supported(~arity(default_ooTt,1))
% % 	Found positive trigger: arity(default_ooTt,1)
% % 		body: singleValuedInArg(default_ooTt,SingleValuedInArg_Default_ooTt)*->rhs([ singleValuedInArgAX(default_ooTt,1,SingleValuedInArgAX5)])
% % 	RHS-Post1: functorIsMacro(default_ooTt)
% % 	Support: mpred_prop(baseKB,default_ooTt,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooTt,1,pfcLHS),rhs([ arity(default_ooTt,1),
% %                                                                                                      functorIsMacro(default_ooTt),
% %                                                                                                      mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(default_ooTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(default_ooTt) ,
%   support_fact = mpred_prop(baseKB,default_ooTt,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooTt,1,pfcLHS),
%                    rhs( [ arity(default_ooTt,1),
%                           functorIsMacro(default_ooTt),
%                           mpred_prop(baseKB,default_ooTt,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(default_ooTt)).
% % 	Found positive trigger: functorIsMacro(default_ooTt)
% % 		body: mpred_positive_fact(functorIsMacro(default_ooTt))*->rhs([ \+( ~( functorIsMacro(default_ooTt)))])
% % still_supported(~functorIsMacro(default_ooTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(default_ooTt)
% % still_supported(~functorIsMacro(default_ooTt))
% % 	RHS-Post1: mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,default_ooTt,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooTt,1,pfcLHS),rhs([ arity(default_ooTt,1),
% %                                                                                                      functorIsMacro(default_ooTt),
% %                                                                                                      mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooTt,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooTt,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,default_ooTt,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooTt,1,pfcLHS),
%                    rhs( [ arity(default_ooTt,1),
%                           functorIsMacro(default_ooTt),
%                           mpred_prop(baseKB,default_ooTt,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooTt,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % 		body: \+ground(default_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooTt,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : default_ooTt/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooTt,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooTt,1,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'X'=X],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooTt,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_79270:default_ooTt/1))),
% %                                                               show_failure( on_x_fail( Call4 :
% %
% %                                                                                          call(kb_shared,_93512:default_ooTt/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_85618:default_ooTt/1))),
% %                           show_failure( on_x_fail( Call4 :
% %
% %                                                      call(kb_shared,_99860:default_ooTt/1))) }])
% % 	 Support: mpred_prop(baseKB,default_ooTt,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,default_ooTt,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB5,baseKB),(BaseKB6\=baseKB*->rhs(
% %                                         [ { nop( dmsg_pretty( Call7 :
% %
% %                                                                 call(kb_shared,_30542:default_ooTt/1))),
% %                                             show_failure( on_x_fail( Call8 :
% %
% %                                                                        call(kb_shared,_44786:default_ooTt/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,kb_shared)
% % 		body: \+ground(default_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooTt,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,default_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooTt,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooTt,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooTt,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,default_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooTt,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooTt,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,default_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooTt,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooTt,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooTt,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,pfcLHS))
% % 	Adding positive
% % 		trigger: default_ooTt(Tt)
% % 		body: rhs([ if_mooTt(current_ooTt(Tt3),current_ooTt(Tt4))])
% % 	 Support: (default_ooTt(Tt5)==>if_mooTt(current_ooTt(Tt6),current_ooTt(Tt7))),mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)
% % 		body: \+ground(default_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,default_ooTt,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,default_ooTt,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger),rhs([ mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooTt,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooTt,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,default_ooTt,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,default_ooTt,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,default_ooTt,1,pfcLHS),
%                  rhs( [ arity(default_ooTt,1),
%                         functorIsMacro(default_ooTt),
%                         mpred_prop(baseKB,default_ooTt,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,default_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger))
% % 	Found positive trigger: default_ooTt(Tt)==>if_mooTt(current_ooTt(Tt3),current_ooTt(Tt4))
% % 		body: mpred_positive_fact((default_ooTt(Tt5)==>if_mooTt(current_ooTt(Tt6),current_ooTt(Tt7))))*->rhs([ \+( ~( default_ooTt(Tt8)==>if_mooTt(current_ooTt(Tt9),current_ooTt(Tt10))))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooTt(defaultValueTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooTt(defaultValueTt) ,
%   support_fact = mfl4(_50728,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooTt(defaultValueTt)).
% % 	Found positive trigger: default_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact(default_ooTt(defaultValueTt))*->rhs([ \+( ~( default_ooTt(defaultValueTt)))])
% % still_supported(~default_ooTt(defaultValueTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooTt(defaultValueTt)
% % still_supported(~default_ooTt(defaultValueTt))
% % 	Found positive trigger: default_ooTt(defaultValueTt)
% % 		body: rhs([ if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))])
% % 	RHS-Post1: if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % 	Support: default_ooTt(defaultValueTt),'$pt'(baseKB,default_ooTt(defaultValueTt),rhs([ if_mooTt(current_ooTt(Tt2),current_ooTt(defaultValueTt))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = if_mooTt(current_ooTt(_2362),current_ooTt(defaultValueTt)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = if_mooTt(current_ooTt(_2362),current_ooTt(defaultValueTt)) ,
%   support_fact = default_ooTt(defaultValueTt) ,
%   support_trig = '$pt'( baseKB,
%                    default_ooTt(defaultValueTt),
%                    rhs([if_mooTt(current_ooTt(_2362),current_ooTt(defaultValueTt))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))).
% % 	Found positive trigger: if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % 		body: mpred_positive_fact(if_mooTt(current_ooTt(Tt2),current_ooTt(defaultValueTt)))*->rhs([ \+( ~( if_mooTt(current_ooTt(Tt3),current_ooTt(defaultValueTt))))])
% % still_supported(~if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % still_supported(~if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt)))
% % 	Found positive trigger: if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % 		body: rhs([ ( \+( current_ooTt(Tt2)/(current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt))) ==>
% %         current_ooTt(defaultValueTt))])
% % 	RHS-Post1: \+current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)
% % 	Support: if_mooTt(current_ooTt(Tt2),current_ooTt(defaultValueTt)),'$pt'(baseKB,if_mooTt(current_ooTt(Tt3),current_ooTt(defaultValueTt)),rhs(
% %            [ ( \+( current_ooTt(Tt4)/(current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt))) ==>
% %                current_ooTt(defaultValueTt))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ( \+( current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))) ==>
%             current_ooTt(defaultValueTt)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ( \+( current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))) ==>
%          current_ooTt(defaultValueTt)) ,
%   support_fact = if_mooTt(current_ooTt(_2606),current_ooTt(defaultValueTt)) ,
%   support_trig = '$pt'( baseKB,
%                    if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt)),
%                    rhs([(\+current_ooTt(_2834)/(current_ooTt(_2834)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( ( \+( current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))) ==>
%                        current_ooTt(defaultValueTt))).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcRHS) ,
%   support_fact = mfl4(_37592,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcRHS)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,current_ooTt,1,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooTt,1,pfcCreates)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcRHS),rhs([ mpred_prop(baseKB,current_ooTt,1,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcRHS),
%                    rhs([mpred_prop(baseKB,current_ooTt,1,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcCreates)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(current_ooTt,1) },
% %       { kb_shared( baseKB : current_ooTt/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,kb_shared) ,
%   support_fact = ( mfl4(_1320,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) ,
%                    ax) ,
%   support_trig = mfl4(_1860,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB1\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_89840:current_ooTt/1))),
% %                                                               show_failure( on_x_fail( Call3 :
% %
% %                                                                                          call(kb_shared,_104082:current_ooTt/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB1\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_104378:current_ooTt/1))),
% %                           show_failure( on_x_fail( Call3 :
% %
% %                                                      call(kb_shared,_18516:current_ooTt/1))) }])
% % 	 Support: mpred_prop(baseKB,current_ooTt,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB4,baseKB),(BaseKB5\=baseKB*->rhs(
% %                                         [ { nop( dmsg_pretty( Call6 :
% %
% %                                                                 call(kb_shared,_55240:current_ooTt/1))),
% %                                             show_failure( on_x_fail( Call7 :
% %
% %                                                                        call(kb_shared,_69484:current_ooTt/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,kb_shared)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,pfcCreates)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooTt,1,pfcControlled)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %               [ mpred_prop(baseKB,current_ooTt,1,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,current_ooTt,1,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcControlled)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : current_ooTt/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooTt,1,prologHybrid)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                                   [ mpred_prop(baseKB,current_ooTt,1,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcControlled),
%                    ( genlPreds(pfcControlled,prologHybrid) *->
%                      rhs([mpred_prop(baseKB,current_ooTt,1,prologHybrid)]))) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,prologHybrid)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,prologHybrid)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,pfcControlled)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,pfcRHS)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcLHS) ,
%   support_fact = mfl4(_3628,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcLHS)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcLHS)
% % 		body: rhs([ arity(current_ooTt,1),
% %       functorIsMacro(current_ooTt),
% %       mpred_prop(baseKB,current_ooTt,1,pfcWatches)])
% % 	RHS-Post1: arity(current_ooTt,1)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcLHS),rhs([ arity(current_ooTt,1),
% %                                                                                                      functorIsMacro(current_ooTt),
% %                                                                                                      mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(current_ooTt,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(current_ooTt,1) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcLHS),
%                    rhs( [ arity(current_ooTt,1),
%                           functorIsMacro(current_ooTt),
%                           mpred_prop(baseKB,current_ooTt,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(current_ooTt,1)).
% % 	Found positive trigger: arity(current_ooTt,1)
% % 		body: predicateConventionMt(current_ooTt,PredicateConventionMt_Current_ooTt)*->rhs([ { kb_global( _43046 :
% %
% %                                                                                               current_ooTt/1) }])
% % 	Found positive trigger: arity(current_ooTt,1)
% % 		body: prologHybrid(current_ooTt)*->rhs([ { kb_shared( current_ooTt/1) }])
% % 	Found positive trigger: arity(current_ooTt,1)
% % 		body: pfcControlled(current_ooTt)*->rhs([ hybrid_support(current_ooTt,1)])
% % 	RHS-Post1: hybrid_support(current_ooTt,1)
% % 	Support: arity(current_ooTt,1),'$pt'(baseKB,arity(current_ooTt,1),(pfcControlled(current_ooTt)*->rhs([ hybrid_support(current_ooTt,1)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = hybrid_support(current_ooTt,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = hybrid_support(current_ooTt,1) ,
%   support_fact = arity(current_ooTt,1) ,
%   support_trig = '$pt'( baseKB,
%                    arity(current_ooTt,1),
%                    pfcControlled(current_ooTt)*->rhs([hybrid_support(current_ooTt,1)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( hybrid_support(current_ooTt,1)).
% % 	Found positive trigger: hybrid_support(current_ooTt,1)
% % 		body: mpred_positive_fact(hybrid_support(current_ooTt,1))*->rhs([ \+( ~( hybrid_support(current_ooTt,1)))])
% % still_supported(~hybrid_support(current_ooTt,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~hybrid_support(current_ooTt,1)
% % still_supported(~hybrid_support(current_ooTt,1))
% % 	Found positive trigger: arity(current_ooTt,1)
% % 		body: mpred_positive_fact(arity(current_ooTt,1))*->rhs([ \+( ~( arity(current_ooTt,1)))])
% % still_supported(~arity(current_ooTt,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(current_ooTt,1)
% % still_supported(~arity(current_ooTt,1))
% % 	Found positive trigger: arity(current_ooTt,1)
% % 		body: singleValuedInArg(current_ooTt,SingleValuedInArg_Current_ooTt)*->rhs([ singleValuedInArgAX(current_ooTt,1,SingleValuedInArgAX4)])
% % 	RHS-Post1: functorIsMacro(current_ooTt)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcLHS),rhs([ arity(current_ooTt,1),
% %                                                                                                      functorIsMacro(current_ooTt),
% %                                                                                                      mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(current_ooTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(current_ooTt) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcLHS),
%                    rhs( [ arity(current_ooTt,1),
%                           functorIsMacro(current_ooTt),
%                           mpred_prop(baseKB,current_ooTt,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(current_ooTt)).
% % 	Found positive trigger: functorIsMacro(current_ooTt)
% % 		body: mpred_positive_fact(functorIsMacro(current_ooTt))*->rhs([ \+( ~( functorIsMacro(current_ooTt)))])
% % still_supported(~functorIsMacro(current_ooTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(current_ooTt)
% % still_supported(~functorIsMacro(current_ooTt))
% % 	RHS-Post1: mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcLHS),rhs([ arity(current_ooTt,1),
% %                                                                                                      functorIsMacro(current_ooTt),
% %                                                                                                      mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcLHS),
%                    rhs( [ arity(current_ooTt,1),
%                           functorIsMacro(current_ooTt),
%                           mpred_prop(baseKB,current_ooTt,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : current_ooTt/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcLHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger) ,
%   support_fact = mfl4(_76846,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)
% % 		body: \+ground(current_ooTt/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)
% % 		body: rhs([ mpred_prop(baseKB,current_ooTt,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooTt,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger),'$pt'(baseKB,mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger),rhs([ mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooTt,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooTt,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger),
%                    rhs([mpred_prop(baseKB,current_ooTt,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,current_ooTt,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,current_ooTt,1,pfcLHS),
%                  rhs( [ arity(current_ooTt,1),
%                         functorIsMacro(current_ooTt),
%                         mpred_prop(baseKB,current_ooTt,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)
% % 		body: genlPreds(pfcNegTrigger,GenlPreds_PfcNegTrigger)*->rhs([ mpred_prop(baseKB,current_ooTt,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)))])
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger)
% % still_supported(~mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger))
% % 	Adding negative
% % 		trigger: current_ooTt(Tt)
% % 		test: call_u_no_bc(current_ooTt(Tt2)),current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt)
% % 		body: rhs([ current_ooTt(defaultValueTt)])
% % 	 Support: (\+current_ooTt(Tt4)/(current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)),mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89)
% % 	RHS-Post1: current_ooTt(defaultValueTt)
% % 	Support: \+current_ooTt(Tt),'$nt'(current_ooTt(Tt1),(call_u_no_bc(current_ooTt(Tt2)),current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt)),rhs(
% %            [ current_ooTt(defaultValueTt)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooTt(defaultValueTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooTt(defaultValueTt) ,
%   support_fact = \+( current_ooTt(Tt)) ,
%   support_trig = '$nt'( current_ooTt(Tt),
%                    call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt),
%                    rhs([current_ooTt(defaultValueTt)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooTt(Tt)
% % 		cond: call_u_no_bc(current_ooTt(Tt2)),current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt)
% % 		action: rhs([ current_ooTt(defaultValueTt)])
% % 	 from: mpred_add_support_fast(current_ooTt(defaultValueTt),(\+current_ooTt(Tt4),'$nt'(current_ooTt(Tt5),(call_u_no_bc(current_ooTt(Tt6)),current_ooTt(Tt7)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                                                  [ current_ooTt(defaultValueTt)]))))
% baseKB : mpred_fwc1( current_ooTt(defaultValueTt)).
% % 	Found positive trigger: current_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact(current_ooTt(defaultValueTt))*->rhs([ \+( ~( current_ooTt(defaultValueTt)))])
% % still_supported(~current_ooTt(defaultValueTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooTt(defaultValueTt)
% % still_supported(~current_ooTt(defaultValueTt))
% % 	Found negative trigger: current_ooTt(defaultValueTt)
% % 		cond: call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt)
% % 		body: rhs([ current_ooTt(defaultValueTt)])
% % 	Support: '$spft'(baseKB,current_ooTt(defaultValueTt),\+current_ooTt(Tt3),'$nt'(current_ooTt(defaultValueTt),(call_u_no_bc(current_ooTt(Tt4)),current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                                                    [ current_ooTt(defaultValueTt)])))
% % 	Found positive trigger: \+current_ooTt(Tt)/(current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact((\+current_ooTt(Tt3)/(current_ooTt(Tt4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)))*->rhs(
% %             [ \+( ~( ( \+( current_ooTt(Tt5)/(current_ooTt(Tt6)\=@=current_ooTt(defaultValueTt))) ==>
% %                        current_ooTt(defaultValueTt))))])
passed=info(why_was_true(baseKB:current_ooTt(defaultValueTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooTt(defaultValueTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooTt(_)  % [/boot/init.pl:512] 
    1.2 \+current_ooTt(W4)/(current_ooTt(W4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_90796] 
    1.3 if_mooTt(current_ooTt(_),current_ooTt(defaultValueTt))  % [mfl4(_91976,_91978,_91980,_91982)] 
    1.4 if_mooTt(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:84] 
    1.5 default_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:89] 
    1.6 default_ooTt(W4)==>if_mooTt(current_ooTt(_),current_ooTt(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:87] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooTt(fooTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooTt(fooTt) ,
%   support_fact = mfl4(_101988,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',93) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( current_ooTt(fooTt)).
% % 	Found positive trigger: current_ooTt(fooTt)
% % 		body: mpred_positive_fact(current_ooTt(fooTt))*->rhs([ \+( ~( current_ooTt(fooTt)))])
% % still_supported(~current_ooTt(fooTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooTt(fooTt)
% % still_supported(~current_ooTt(fooTt))
% % 	Found negative trigger: current_ooTt(fooTt)
% % 		cond: call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt)
% % 		body: rhs([ current_ooTt(defaultValueTt)])
% % 	Support: '$spft'(baseKB,current_ooTt(defaultValueTt),\+current_ooTt(Tt3),'$nt'(current_ooTt(fooTt),(call_u_no_bc(current_ooTt(Tt4)),current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                                           [ current_ooTt(defaultValueTt)])))
% %     Removing support: \+current_ooTt(fooTt),'$nt'(current_ooTt(fooTt),(call_u_no_bc(current_ooTt(fooTt)),current_ooTt(fooTt)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                           [ current_ooTt(defaultValueTt)]))
% %      Which was for: current_ooTt(defaultValueTt)
passed=info(why_was_true(baseKB:(\+current_ooTt(defaultValueTt))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% % 	RHS-Post1: current_ooTt(defaultValueTt)
% % 	Support: \+current_ooTt(fooTt),'$nt'(current_ooTt(fooTt),(call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt)),rhs(
% %                [ current_ooTt(defaultValueTt)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooTt(defaultValueTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooTt(defaultValueTt) ,
%   support_fact = \+( current_ooTt(fooTt)) ,
%   support_trig = '$nt'( current_ooTt(fooTt),
%                    call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt),
%                    rhs([current_ooTt(defaultValueTt)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooTt(fooTt)
% % 		cond: call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt)
% % 		action: rhs([ current_ooTt(defaultValueTt)])
% % 	 from: mpred_add_support_fast(current_ooTt(defaultValueTt),(\+current_ooTt(fooTt),'$nt'(current_ooTt(fooTt),(call_u_no_bc(current_ooTt(Tt3)),current_ooTt(Tt4)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                                                      [ current_ooTt(defaultValueTt)]))))
% baseKB : mpred_fwc1( current_ooTt(defaultValueTt)).
% % 	Found positive trigger: current_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact(current_ooTt(defaultValueTt))*->rhs([ \+( ~( current_ooTt(defaultValueTt)))])
% % still_supported(~current_ooTt(defaultValueTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooTt(defaultValueTt)
% % still_supported(~current_ooTt(defaultValueTt))
passed=info(why_was_true(baseKB:current_ooTt(defaultValueTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooTt(defaultValueTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooTt(fooTt)  % [/boot/init.pl:512] 
    1.2 \+current_ooTt(W4)/(current_ooTt(W4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_97780] 
    1.3 if_mooTt(current_ooTt(_),current_ooTt(defaultValueTt))  % [mfl4(_98960,_98962,_98964,_98966)] 
    1.4 if_mooTt(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:84] 
    1.5 default_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:89] 
    1.6 default_ooTt(W4)==>if_mooTt(current_ooTt(_),current_ooTt(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:87] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% %     Removing support: mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89),ax
% %      Which was for: default_ooTt(defaultValueTt)
% success( mpred_undo1_nt_unfwc,
%   (   '$nt'( current_ooTt(Tt),
%         call_u_no_bc(current_ooTt(Tt1)),current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt),
%         rhs([current_ooTt(defaultValueTt)]))  ,
%     dmsg_pretty( mpred_undo1( '$nt'( current_ooTt(Tt3),
%                                 call_u_no_bc(current_ooTt(Tt4)),current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt),
%                                 rhs([current_ooTt(defaultValueTt)])))) ,
%     retract_u( '$nt'( current_ooTt(Tt6),
%                  call_u_no_bc(current_ooTt(Tt7)),current_ooTt(Tt8)\=@=current_ooTt(defaultValueTt),
%                  rhs([current_ooTt(defaultValueTt)]))))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           default_ooTt(Tt)==>if_mooTt(current_ooTt(Tt2),current_ooTt(Tt3)), 
           mfl4( 
              [ 'X'=X], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
           mfl4( 
              [ 'X'=X], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           arity(default_ooTt,1), 
           mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
             rhs( [ arity(default_ooTt,1), 
                    functorIsMacro(default_ooTt), 
                    mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           functorIsMacro(default_ooTt), 
           mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
             rhs( [ arity(default_ooTt,1), 
                    functorIsMacro(default_ooTt), 
                    mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooTt,1,pfcWatches), 
           mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooTt,1,pfcLHS), 
             rhs( [ arity(default_ooTt,1), 
                    functorIsMacro(default_ooTt), 
                    mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooTt,1,kb_shared), 
           ( mfl4( 
                [ 'X'=X], 
                 baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) , 
             ax), 
           mfl4( 
              [ 'X'=X1], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           '$pt'( baseKB, 
             genlMt(BaseKB,baseKB), 
             ( BaseKB3\=baseKB *-> 
               rhs([{nop(dmsg_pretty(Call:call(kb_shared,_82138:default_ooTt/1))),show_failure(on_x_fail(Call5:call(kb_shared,_82164:default_ooTt/1)))}]))), 
           mpred_prop(baseKB,default_ooTt,1,kb_shared), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooTt,1,kb_shared), 
             '$pt'( baseKB, 
               genlMt(BaseKB6,baseKB), 
               ( BaseKB7\=baseKB *-> 
                 rhs([{nop(dmsg_pretty(Call8:call(kb_shared,_82244:default_ooTt/1))),show_failure(on_x_fail(Call9:call(kb_shared,_82270:default_ooTt/1)))}]))))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger), 
           mfl4( 
              [ 'X'=X10], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,default_ooTt,1,pfcWatches), 
           mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger), 
             rhs([mpred_prop(baseKB,default_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           '$pt'( baseKB, 
             default_ooTt(Tt), 
             rhs([if_mooTt(current_ooTt(Tt13),current_ooTt(Tt14))])), 
           default_ooTt(Tt15)==>if_mooTt(current_ooTt(Tt16),current_ooTt(Tt17)), 
           mfl4( 
              [ 'X'=X11], 
               baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcRHS), 
           mfl4(BaseKB10,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcCreates), 
           mpred_prop(baseKB,current_ooTt,1,pfcRHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcRHS), 
             rhs([mpred_prop(baseKB,current_ooTt,1,pfcCreates)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,kb_shared), 
           ( mfl4(BaseKB10,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) , 
             ax), 
           mfl4(BaseKB11,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           '$pt'( baseKB, 
             genlMt(BaseKB12,baseKB), 
             ( BaseKB13\=baseKB *-> 
               rhs([{nop(dmsg_pretty(Call14:call(kb_shared,_101310:current_ooTt/1))),show_failure(on_x_fail(Call15:call(kb_shared,_101336:current_ooTt/1)))}]))), 
           mpred_prop(baseKB,current_ooTt,1,kb_shared), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,kb_shared), 
             '$pt'( baseKB, 
               genlMt(BaseKB16,baseKB), 
               ( BaseKB17\=baseKB *-> 
                 rhs([{nop(dmsg_pretty(Call18:call(kb_shared,_101416:current_ooTt/1))),show_failure(on_x_fail(Call19:call(kb_shared,_101442:current_ooTt/1)))}]))))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcControlled), 
           mpred_prop(baseKB,current_ooTt,1,pfcRHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcRHS), 
             genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,current_ooTt,1,pfcControlled)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,prologHybrid), 
           mpred_prop(baseKB,current_ooTt,1,pfcControlled), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcControlled), 
             genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,current_ooTt,1,prologHybrid)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
           mfl4(BaseKB20,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           arity(current_ooTt,1), 
           mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
             rhs( [ arity(current_ooTt,1), 
                    functorIsMacro(current_ooTt), 
                    mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           hybrid_support(current_ooTt,1), 
           arity(current_ooTt,1), 
           '$pt'( baseKB, 
             arity(current_ooTt,1), 
             pfcControlled(current_ooTt)*->rhs([hybrid_support(current_ooTt,1)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           functorIsMacro(current_ooTt), 
           mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
             rhs( [ arity(current_ooTt,1), 
                    functorIsMacro(current_ooTt), 
                    mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcWatches), 
           mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcLHS), 
             rhs( [ arity(current_ooTt,1), 
                    functorIsMacro(current_ooTt), 
                    mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger), 
           mfl4(BaseKB20,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89), 
           ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$spft'( baseKB, 
           mpred_prop(baseKB,current_ooTt,1,pfcWatches), 
           mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger), 
           '$pt'( baseKB, 
             mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger), 
             rhs([mpred_prop(baseKB,current_ooTt,1,pfcWatches)]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$pt'( baseKB, 
           genlMt(BaseKB20,baseKB), 
           ( BaseKB21\=baseKB *-> 
             rhs([{nop(dmsg_pretty(Call22:call(kb_shared,_82654:default_ooTt/1))),show_failure(on_x_fail(Call23:call(kb_shared,_82680:default_ooTt/1)))}]))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : '$pt'( baseKB, 
           default_ooTt(Tt), 
           rhs([if_mooTt(current_ooTt(Tt26),current_ooTt(Tt27))])).
% Fileinfo: unk: -1
baseKB : '$pt'( baseKB, 
           genlMt(BaseKB24,baseKB), 
           ( BaseKB25\=baseKB *-> 
             rhs([{nop(dmsg_pretty(Call26:call(kb_shared,_17400:current_ooTt/1))),show_failure(on_x_fail(Call27:call(kb_shared,_17426:current_ooTt/1)))}]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : functorIsMacro(default_ooTt).
% Fileinfo: unk: -1
baseKB : functorIsMacro(current_ooTt).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : arity(default_ooTt,1).
% Fileinfo: unk: -1
baseKB : arity(current_ooTt,1).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : hybrid_support(current_ooTt,1).
% Fileinfo: unk: -1

baseKB : safe_wrap(baseKB,default_ooTt,1,ereq).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : safe_wrap(baseKB,current_ooTt,1,ereq).

 /*  portray_hb1( print_tree_stop, 
       $predicate_property( default_ooTt(Tt)), 
       [ interpreted, visible,public,dynamic,multifile,discontiguous,transparent
         , 
         number_of_clauses(0), 
         number_of_rules(0), 
         last_modified_generation(164618), 
         defined, 
         size(112)]).
 */
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61

 /*  portray_hb1( print_tree_stop, 
       $predicate_property( current_ooTt(Tt)), 
       [ interpreted, visible,public,dynamic,multifile,discontiguous,transparent
         , 
         number_of_clauses(0), 
         number_of_rules(0), 
         last_modified_generation(165070), 
         defined, 
         size(112)]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : default_ooTt(Tt)==>if_mooTt(current_ooTt(Tt29),current_ooTt(Tt30)).
% Fileinfo: unk: -1

baseKB : mpred_prop(baseKB,default_ooTt,1,pfcLHS).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,default_ooTt,1,pfcWatches).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,default_ooTt,1,kb_shared).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,default_ooTt,1,pfcPosTrigger).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,current_ooTt,1,pfcRHS).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooTt,1,pfcCreates).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooTt,1,kb_shared).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,current_ooTt,1,pfcControlled).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooTt,1,prologHybrid).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooTt,1,pfcLHS).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
baseKB : mpred_prop(baseKB,current_ooTt,1,pfcWatches).
% Fileinfo: unk: -1
baseKB : mpred_prop(baseKB,current_ooTt,1,pfcNegTrigger).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
j_u : junit_prop("current_ooTt(defaultValueTt). @ 91",goal,baseKB:current_ooTt(defaultValueTt)).
% Fileinfo: unk: -1
j_u : junit_prop("\naf current_ooTt(defaultValueTt). @ 95",goal,baseKB:(\+current_ooTt(defaultValueTt))).
% Fileinfo: unk: -1
j_u : junit_prop("current_ooTt(defaultValueTt). @ 99",goal,baseKB:current_ooTt(defaultValueTt)).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
t_l : shown_why( (\+current_ooTt(fooTt))+[]).
% Fileinfo: unk: -1
t_l : shown_why( ( ( \+( current_ooTt(A)/(current_ooTt(A)\=@=current_ooTt(defaultValueTt))) ==> 
                     current_ooTt(defaultValueTt)))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
t_l : shown_why( if_mooTt(current_ooTt(A),current_ooTt(defaultValueTt))+[]).
% Fileinfo: unk: -1
t_l : shown_why( default_ooTt(defaultValueTt)+[]).
% Fileinfo: unk: -1
t_l : shown_why( (default_ooTt(A)==>if_mooTt(current_ooTt(B),current_ooTt(A)))+[]).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:61
rdf_rewrite : arity(default_ooTt,1).
% Fileinfo: unk: -1
rdf_rewrite : arity(current_ooTt,1).
passed=info(why_was_true(baseKB:(\+current_ooTt(defaultValueTt))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ~( current_ooTt(fooTt)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ~( current_ooTt(fooTt)) ,
%   support_fact = mfl4(_1328,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',107) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( ~( current_ooTt(fooTt))).
% % 	Found positive trigger: ~current_ooTt(fooTt)
% % 		body: mpred_positive_fact(~current_ooTt(fooTt))*->rhs([ \+( ~( ~( current_ooTt(fooTt))))])
passed=info(why_was_true(baseKB: ~current_ooTt(fooTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~current_ooTt(fooTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',107) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooTt(defaultValueTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooTt(defaultValueTt) ,
%   support_fact = mfl4(_38838,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',113) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooTt(defaultValueTt)).
% % 	Found positive trigger: default_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact(default_ooTt(defaultValueTt))*->rhs([ \+( ~( default_ooTt(defaultValueTt)))])
% % still_supported(~default_ooTt(defaultValueTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooTt(defaultValueTt)
% % still_supported(~default_ooTt(defaultValueTt))
% % 	Found positive trigger: default_ooTt(defaultValueTt)
% % 		body: rhs([ if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))])
% % 	RHS-Post1: if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % 	Support: default_ooTt(defaultValueTt),'$pt'(baseKB,default_ooTt(defaultValueTt),rhs([ if_mooTt(current_ooTt(Tt2),current_ooTt(defaultValueTt))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = if_mooTt(current_ooTt(_2362),current_ooTt(defaultValueTt)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = if_mooTt(current_ooTt(_2362),current_ooTt(defaultValueTt)) ,
%   support_fact = default_ooTt(defaultValueTt) ,
%   support_trig = '$pt'( baseKB,
%                    default_ooTt(defaultValueTt),
%                    rhs([if_mooTt(current_ooTt(_2362),current_ooTt(defaultValueTt))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))).
% % 	Found positive trigger: if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % 		body: mpred_positive_fact(if_mooTt(current_ooTt(Tt2),current_ooTt(defaultValueTt)))*->rhs([ \+( ~( if_mooTt(current_ooTt(Tt3),current_ooTt(defaultValueTt))))])
% % still_supported(~if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % still_supported(~if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt)))
% % 	Found positive trigger: if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt))
% % 		body: rhs([ ( \+( current_ooTt(Tt2)/(current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt))) ==>
% %         current_ooTt(defaultValueTt))])
% % 	RHS-Post1: \+current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)
% % 	Support: if_mooTt(current_ooTt(Tt2),current_ooTt(defaultValueTt)),'$pt'(baseKB,if_mooTt(current_ooTt(Tt3),current_ooTt(defaultValueTt)),rhs(
% %            [ ( \+( current_ooTt(Tt4)/(current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt))) ==>
% %                current_ooTt(defaultValueTt))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ( \+( current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))) ==>
%             current_ooTt(defaultValueTt)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ( \+( current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))) ==>
%          current_ooTt(defaultValueTt)) ,
%   support_fact = if_mooTt(current_ooTt(_2606),current_ooTt(defaultValueTt)) ,
%   support_trig = '$pt'( baseKB,
%                    if_mooTt(current_ooTt(Tt),current_ooTt(defaultValueTt)),
%                    rhs([(\+current_ooTt(_2834)/(current_ooTt(_2834)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( ( \+( current_ooTt(Tt)/(current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt))) ==>
%                        current_ooTt(defaultValueTt))).
% % 	Adding negative
% % 		trigger: current_ooTt(Tt)
% % 		test: call_u_no_bc(current_ooTt(Tt2)),current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt)
% % 		body: rhs([ current_ooTt(defaultValueTt)])
% % 	 Support: (\+current_ooTt(Tt4)/(current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)),mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',113)
% % 	RHS-Post1: current_ooTt(defaultValueTt)
% % 	Support: \+current_ooTt(Tt),'$nt'(current_ooTt(Tt1),(call_u_no_bc(current_ooTt(Tt2)),current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt)),rhs(
% %            [ current_ooTt(defaultValueTt)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooTt(defaultValueTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooTt(defaultValueTt) ,
%   support_fact = \+( current_ooTt(Tt)) ,
%   support_trig = '$nt'( current_ooTt(Tt),
%                    call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt1)\=@=current_ooTt(defaultValueTt),
%                    rhs([current_ooTt(defaultValueTt)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooTt(Tt)
% % 		cond: call_u_no_bc(current_ooTt(Tt2)),current_ooTt(Tt3)\=@=current_ooTt(defaultValueTt)
% % 		action: rhs([ current_ooTt(defaultValueTt)])
% % 	 from: mpred_add_support_fast(current_ooTt(defaultValueTt),(\+current_ooTt(Tt4),'$nt'(current_ooTt(Tt5),(call_u_no_bc(current_ooTt(Tt6)),current_ooTt(Tt7)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                                                  [ current_ooTt(defaultValueTt)]))))
% baseKB : mpred_fwc1( current_ooTt(defaultValueTt)).
% % 	Found positive trigger: current_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact(current_ooTt(defaultValueTt))*->rhs([ \+( ~( current_ooTt(defaultValueTt)))])
% % still_supported(~current_ooTt(defaultValueTt))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooTt(defaultValueTt)
% % still_supported(~current_ooTt(defaultValueTt))
% % 	Found negative trigger: current_ooTt(defaultValueTt)
% % 		cond: call_u_no_bc(current_ooTt(Tt)),current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt)
% % 		body: rhs([ current_ooTt(defaultValueTt)])
% % 	Support: '$spft'(baseKB,current_ooTt(defaultValueTt),\+current_ooTt(Tt3),'$nt'(current_ooTt(defaultValueTt),(call_u_no_bc(current_ooTt(Tt4)),current_ooTt(Tt5)\=@=current_ooTt(defaultValueTt)),rhs(
% %                                                                    [ current_ooTt(defaultValueTt)])))
% % 	Found positive trigger: \+current_ooTt(Tt)/(current_ooTt(Tt2)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)
% % 		body: mpred_positive_fact((\+current_ooTt(Tt3)/(current_ooTt(Tt4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)))*->rhs(
% %             [ \+( ~( ( \+( current_ooTt(Tt5)/(current_ooTt(Tt6)\=@=current_ooTt(defaultValueTt))) ==>
% %                        current_ooTt(defaultValueTt))))])
passed=info(why_was_true(baseKB:current_ooTt(defaultValueTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooTt(defaultValueTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooTt(fooTt)  % [/boot/init.pl:512] 
    1.2 \+current_ooTt(W4)/(current_ooTt(W4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_2134] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',107) 
    1.4 if_mooTt(current_ooTt(_),current_ooTt(defaultValueTt))  % [mfl4(_3678,_3680,_3682,_3684)] 
    1.5 if_mooTt(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:84] 
    1.6 default_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:113] 
    1.7 default_ooTt(W4)==>if_mooTt(current_ooTt(_),current_ooTt(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:87] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',113) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-%   unique is assertion_status ,%   post1 = default_ooQ1(whenMissingQ1) ,%   fix_mp=baseKB ,%   mz=baseKB ,%   p0 = default_ooQ1(whenMissingQ1) ,%   support_fact = mfl4(_14376,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',26) ,%   support_trig=ax ,%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ1(whenMissingQ1)).
% % 	Found positive trigger: default_ooQ1(whenMissingQ1)% 		body: mpred_positive_fact(default_ooQ1(whenMissingQ1))*->rhs([\+ ~default_ooQ1(whenMissingQ1)])
% % still_supported(~default_ooQ1(whenMissingQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooQ1(whenMissingQ1)
% % still_supported(~default_ooQ1(whenMissingQ1))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for default_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',26) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:default_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for default_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',26) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = (   if_mooQ1(Missing,Create)  ==>
%             \+( Missing/(Missing\=@=Create)) ==>
%             _170054) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   if_mooQ1(Missing,Create)  ==>
%          \+( Missing/(Missing\=@=Create)) ==>
%          _170054) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( (   if_mooQ1(If_mooQ1,MooQ1)  ==>
%                        \+( _218270/(_218276\=@=_218278)) ==>
%                        _212644)).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcLHS)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcLHS)
% % 		body: rhs([ arity(if_mooQ1,2),
% %       functorIsMacro(if_mooQ1),
% %       mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])
% % 	RHS-Post1: arity(if_mooQ1,2)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcLHS),rhs([ arity(if_mooQ1,2),
% %                                                                                              functorIsMacro(if_mooQ1),
% %                                                                                              mpred_prop(baseKB,if_mooQ1,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(if_mooQ1,2) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(if_mooQ1,2) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcLHS),
%                    rhs( [ arity(if_mooQ1,2),
%                           functorIsMacro(if_mooQ1),
%                           mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(if_mooQ1,2)).
% % 	Found positive trigger: arity(if_mooQ1,2)
% % 		body: predicateConventionMt(if_mooQ1,PredicateConventionMt_If_mooQ1)*->rhs([ { kb_global( _122934 :
% %
% %                                                                                       if_mooQ1/2) }])
% % 	Found positive trigger: arity(if_mooQ1,2)
% % 		body: prologHybrid(if_mooQ1)*->rhs([ { kb_shared( if_mooQ1/2) }])
% % 	Found positive trigger: arity(if_mooQ1,2)
% % 		body: pfcControlled(if_mooQ1)*->rhs([ hybrid_support(if_mooQ1,2)])
% % 	Found positive trigger: arity(if_mooQ1,2)
% % 		body: mpred_positive_fact(arity(if_mooQ1,2))*->rhs([ \+( ~( arity(if_mooQ1,2)))])
% % still_supported(~arity(if_mooQ1,2))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(if_mooQ1,2)
% % still_supported(~arity(if_mooQ1,2))
% % 	Found positive trigger: arity(if_mooQ1,2)
% % 		body: singleValuedInArg(if_mooQ1,SingleValuedInArg_If_mooQ1)*->rhs([ singleValuedInArgAX(if_mooQ1,2,SingleValuedInArgAX6)])
% % 	RHS-Post1: functorIsMacro(if_mooQ1)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcLHS),rhs([ arity(if_mooQ1,2),
% %                                                                                              functorIsMacro(if_mooQ1),
% %                                                                                              mpred_prop(baseKB,if_mooQ1,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(if_mooQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(if_mooQ1) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcLHS),
%                    rhs( [ arity(if_mooQ1,2),
%                           functorIsMacro(if_mooQ1),
%                           mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(if_mooQ1)).
% % 	Found positive trigger: functorIsMacro(if_mooQ1)
% % 		body: mpred_positive_fact(functorIsMacro(if_mooQ1))*->rhs([ \+( ~( functorIsMacro(if_mooQ1)))])
% % still_supported(~functorIsMacro(if_mooQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(if_mooQ1)
% % still_supported(~functorIsMacro(if_mooQ1))
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcLHS),rhs([ arity(if_mooQ1,2),
% %                                                                                              functorIsMacro(if_mooQ1),
% %                                                                                              mpred_prop(baseKB,if_mooQ1,2,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcLHS),
%                    rhs( [ arity(if_mooQ1,2),
%                           functorIsMacro(if_mooQ1),
%                           mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : if_mooQ1/2) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'Missing'=Missing,
%                         'Create'=Create],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 41) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 41) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_79362:if_mooQ1/2))),
% %                                                               show_failure( on_x_fail( Call5 :
% %
% %                                                                                          call(kb_shared,_93604:if_mooQ1/2))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB3\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_67278:if_mooQ1/2))),
% %                           show_failure( on_x_fail( Call5 :
% %
% %                                                      call(kb_shared,_81520:if_mooQ1/2))) }])
% % 	 Support: mpred_prop(baseKB,if_mooQ1,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,kb_shared),'$pt'(baseKB,genlMt(BaseKB6,baseKB),(BaseKB7\=baseKB*->rhs(
% %                                 [ { nop( dmsg_pretty( Call8 :
% %
% %                                                         call(kb_shared,_118244:if_mooQ1/2))),
% %                                     show_failure( on_x_fail( Call9 :
% %
% %                                                                call(kb_shared,_132486:if_mooQ1/2))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,kb_shared)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,kb_shared)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,pfcLHS)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcLHS))
% % 	Adding positive
% % 		trigger: if_mooQ1(If_mooQ1,MooQ1)
% % 		body: rhs([ \+_174602/(_174608\=@=_174610)==>_174594])
% % 	 Support: (if_mooQ1(If_mooQ13,MooQ15)==>(\+_137898/(_137904\=@=_137906)==>_137890)),mfl4([ 'Missing'=Missing,
% %                                                                                  'Create'=Create],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 41) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ1,2,pfcWatches)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger),rhs([ mpred_prop(baseKB,if_mooQ1,2,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,if_mooQ1,2,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,if_mooQ1,2,pfcLHS),
%                  rhs( [ arity(if_mooQ1,2),
%                         functorIsMacro(if_mooQ1),
%                         mpred_prop(baseKB,if_mooQ1,2,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcPosTrigger))
% % 	Found positive trigger: if_mooQ1(If_mooQ1,MooQ1)==>(\+_131984/(_131990\=@=_131992)==>_131976)
% % 		body: mpred_positive_fact((if_mooQ1(If_mooQ13,MooQ17)==>(\+_132034/(_132040\=@=_132042)==>_132026)))*->rhs([ \+( ~( (   if_mooQ1(If_mooQ14,MooQ18)  ==>
% %                                                                                                                 \+( _226468/(_226474\=@=_226476)) ==>
% %                                                                                                                 _220834)))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ1(_230088)==>if_mooQ1(current_ooQ1(_230110),current_ooQ1(_230088)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ1(_230088)==>if_mooQ1(current_ooQ1(_230110),current_ooQ1(_230088)) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ1(OoQ1)==>if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(OoQ13))).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcRHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcRHS)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,if_mooQ1,2,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ1,2,pfcCreates)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcRHS),rhs([ mpred_prop(baseKB,if_mooQ1,2,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcRHS),
%                    rhs([mpred_prop(baseKB,if_mooQ1,2,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcCreates)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(if_mooQ1,2) },
% %       { kb_shared( baseKB : if_mooQ1/2) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,pfcCreates)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ1,2,pfcControlled)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %       [ mpred_prop(baseKB,if_mooQ1,2,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,if_mooQ1,2,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcControlled)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : if_mooQ1/2) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,if_mooQ1,2,prologHybrid)
% % 	Support: mpred_prop(baseKB,if_mooQ1,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,if_mooQ1,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                           [ mpred_prop(baseKB,if_mooQ1,2,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,if_mooQ1,2,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,if_mooQ1,2,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,if_mooQ1,2,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,if_mooQ1,2,pfcControlled),
%                    genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,if_mooQ1,2,prologHybrid)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,if_mooQ1,2,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,prologHybrid)
% % 		body: \+ground(if_mooQ1/2)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,if_mooQ1,2,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,if_mooQ1,2,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,prologHybrid)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,pfcControlled)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,if_mooQ1,2,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,if_mooQ1,2,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,if_mooQ1,2,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,if_mooQ1,2,pfcRHS)
% % still_supported(~mpred_prop(baseKB,if_mooQ1,2,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ1,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ1,1,pfcLHS) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ1,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcLHS)
% % 		body: \+ground(default_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ1,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcLHS)
% % 		body: rhs([ arity(default_ooQ1,1),
% %       functorIsMacro(default_ooQ1),
% %       mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])
% % 	RHS-Post1: arity(default_ooQ1,1)
% % 	Support: mpred_prop(baseKB,default_ooQ1,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ1,1,pfcLHS),rhs([ arity(default_ooQ1,1),
% %                                                                                                      functorIsMacro(default_ooQ1),
% %                                                                                                      mpred_prop(baseKB,default_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(default_ooQ1,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(default_ooQ1,1) ,
%   support_fact = mpred_prop(baseKB,default_ooQ1,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ1,1,pfcLHS),
%                    rhs( [ arity(default_ooQ1,1),
%                           functorIsMacro(default_ooQ1),
%                           mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(default_ooQ1,1)).
% % 	Found positive trigger: arity(default_ooQ1,1)
% % 		body: predicateConventionMt(default_ooQ1,PredicateConventionMt_Default_ooQ1)*->rhs([ { kb_global( _228240 :
% %
% %                                                                                               default_ooQ1/1) }])
% % 	Found positive trigger: arity(default_ooQ1,1)
% % 		body: prologHybrid(default_ooQ1)*->rhs([ { kb_shared( default_ooQ1/1) }])
% % 	Found positive trigger: arity(default_ooQ1,1)
% % 		body: pfcControlled(default_ooQ1)*->rhs([ hybrid_support(default_ooQ1,1)])
% % 	Found positive trigger: arity(default_ooQ1,1)
% % 		body: mpred_positive_fact(arity(default_ooQ1,1))*->rhs([ \+( ~( arity(default_ooQ1,1)))])
% % still_supported(~arity(default_ooQ1,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(default_ooQ1,1)
% % still_supported(~arity(default_ooQ1,1))
% % 	Found positive trigger: arity(default_ooQ1,1)
% % 		body: singleValuedInArg(default_ooQ1,SingleValuedInArg_Default_ooQ1)*->rhs([ singleValuedInArgAX(default_ooQ1,1,SingleValuedInArgAX5)])
% % 	RHS-Post1: functorIsMacro(default_ooQ1)
% % 	Support: mpred_prop(baseKB,default_ooQ1,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ1,1,pfcLHS),rhs([ arity(default_ooQ1,1),
% %                                                                                                      functorIsMacro(default_ooQ1),
% %                                                                                                      mpred_prop(baseKB,default_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(default_ooQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(default_ooQ1) ,
%   support_fact = mpred_prop(baseKB,default_ooQ1,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ1,1,pfcLHS),
%                    rhs( [ arity(default_ooQ1,1),
%                           functorIsMacro(default_ooQ1),
%                           mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(default_ooQ1)).
% % 	Found positive trigger: functorIsMacro(default_ooQ1)
% % 		body: mpred_positive_fact(functorIsMacro(default_ooQ1))*->rhs([ \+( ~( functorIsMacro(default_ooQ1)))])
% % still_supported(~functorIsMacro(default_ooQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(default_ooQ1)
% % still_supported(~functorIsMacro(default_ooQ1))
% % 	RHS-Post1: mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,default_ooQ1,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ1,1,pfcLHS),rhs([ arity(default_ooQ1,1),
% %                                                                                                      functorIsMacro(default_ooQ1),
% %                                                                                                      mpred_prop(baseKB,default_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ1,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ1,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,default_ooQ1,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ1,1,pfcLHS),
%                    rhs( [ arity(default_ooQ1,1),
%                           functorIsMacro(default_ooQ1),
%                           mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ1,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % 		body: \+ground(default_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ1,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : default_ooQ1/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ1,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ1,1,kb_shared) ,
%   support_fact = ( mfl4(
%                       [ 'X'=X],
%                        baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 44) ,
%                    ax) ,
%   support_trig = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 44) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ1,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_161720:default_ooQ1/1))),
% %                                                               show_failure( on_x_fail( Call4 :
% %
% %                                                                                          call(kb_shared,_175964:default_ooQ1/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB2\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_145804:default_ooQ1/1))),
% %                           show_failure( on_x_fail( Call4 :
% %
% %                                                      call(kb_shared,_160048:default_ooQ1/1))) }])
% % 	 Support: mpred_prop(baseKB,default_ooQ1,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ1,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB5,baseKB),(BaseKB6\=baseKB*->rhs(
% %                                         [ { nop( dmsg_pretty( Call7 :
% %
% %                                                                 call(kb_shared,_196772:default_ooQ1/1))),
% %                                             show_failure( on_x_fail( Call8 :
% %
% %                                                                        call(kb_shared,_211016:default_ooQ1/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,kb_shared)
% % 		body: \+ground(default_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ1,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,default_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ1,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ1,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ1,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,default_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ1,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ1,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,default_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ1,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ1,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ1,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,pfcLHS))
% % 	Adding positive
% % 		trigger: default_ooQ1(OoQ1)
% % 		body: rhs([ if_mooQ1(current_ooQ1(OoQ13),current_ooQ1(OoQ14))])
% % 	 Support: (default_ooQ1(OoQ15)==>if_mooQ1(current_ooQ1(OoQ16),current_ooQ1(OoQ17))),mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44)
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 44) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)
% % 		body: \+ground(default_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)
% % 		body: rhs([ mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,default_ooQ1,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger),rhs([ mpred_prop(baseKB,default_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,default_ooQ1,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,default_ooQ1,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger),
%                    rhs([mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,default_ooQ1,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,default_ooQ1,1,pfcLHS),
%                  rhs( [ arity(default_ooQ1,1),
%                         functorIsMacro(default_ooQ1),
%                         mpred_prop(baseKB,default_ooQ1,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)
% % 		body: genlPreds(pfcPosTrigger,GenlPreds_PfcPosTrigger)*->rhs([ mpred_prop(baseKB,default_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)))])
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger)
% % still_supported(~mpred_prop(baseKB,default_ooQ1,1,pfcPosTrigger))
% % 	Found positive trigger: default_ooQ1(OoQ1)==>if_mooQ1(current_ooQ1(OoQ13),current_ooQ1(OoQ14))
% % 		body: mpred_positive_fact((default_ooQ1(OoQ15)==>if_mooQ1(current_ooQ1(OoQ16),current_ooQ1(OoQ17))))*->rhs([ \+( ~( default_ooQ1(OoQ18)==>if_mooQ1(current_ooQ1(OoQ19),current_ooQ1(OoQ110))))])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ1(whenMissingQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ1(whenMissingQ1) ,
%   support_fact = mfl4(_220626,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ1(whenMissingQ1)).
% % 	Found positive trigger: default_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact(default_ooQ1(whenMissingQ1))*->rhs([ \+( ~( default_ooQ1(whenMissingQ1)))])
% % still_supported(~default_ooQ1(whenMissingQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooQ1(whenMissingQ1)
% % still_supported(~default_ooQ1(whenMissingQ1))
% % 	Found positive trigger: default_ooQ1(whenMissingQ1)
% % 		body: rhs([ if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))])
% % 	RHS-Post1: if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % 	Support: default_ooQ1(whenMissingQ1),'$pt'(baseKB,default_ooQ1(whenMissingQ1),rhs([ if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(whenMissingQ1))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = if_mooQ1(current_ooQ1(_27372),current_ooQ1(whenMissingQ1)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = if_mooQ1(current_ooQ1(_27372),current_ooQ1(whenMissingQ1)) ,
%   support_fact = default_ooQ1(whenMissingQ1) ,
%   support_trig = '$pt'( baseKB,
%                    default_ooQ1(whenMissingQ1),
%                    rhs([if_mooQ1(current_ooQ1(_27372),current_ooQ1(whenMissingQ1))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))).
% % 	Found positive trigger: if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % 		body: mpred_positive_fact(if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(whenMissingQ1)))*->rhs([ \+( ~( if_mooQ1(current_ooQ1(OoQ13),current_ooQ1(whenMissingQ1))))])
% % still_supported(~if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % still_supported(~if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1)))
% % 	Found positive trigger: if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % 		body: rhs([ ( \+( current_ooQ1(OoQ12)/(current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1))) ==>
% %         current_ooQ1(whenMissingQ1))])
% % 	RHS-Post1: \+current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)
% % 	Support: if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(whenMissingQ1)),'$pt'(baseKB,if_mooQ1(current_ooQ1(OoQ13),current_ooQ1(whenMissingQ1)),rhs(
% %              [ ( \+( current_ooQ1(OoQ14)/(current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1))) ==>
% %                  current_ooQ1(whenMissingQ1))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ( \+( current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))) ==>
%             current_ooQ1(whenMissingQ1)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ( \+( current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))) ==>
%          current_ooQ1(whenMissingQ1)) ,
%   support_fact = if_mooQ1(current_ooQ1(_2318),current_ooQ1(whenMissingQ1)) ,
%   support_trig = '$pt'( baseKB,
%                    if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1)),
%                    rhs([(\+current_ooQ1(_2546)/(current_ooQ1(_2546)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( ( \+( current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))) ==>
%                        current_ooQ1(whenMissingQ1))).
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcRHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcRHS) ,
%   support_fact = mfl4(_62070,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,pfcRHS)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcRHS)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,pfcRHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcRHS)
% % 		body: rhs([ mpred_prop(baseKB,current_ooQ1,1,pfcCreates)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ1,1,pfcCreates)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcRHS),rhs([ mpred_prop(baseKB,current_ooQ1,1,pfcCreates)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcCreates) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcCreates) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcRHS),
%                    rhs([mpred_prop(baseKB,current_ooQ1,1,pfcCreates)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,pfcCreates)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcCreates)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,pfcCreates)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcCreates)
% % 		body: rhs([ { baseKB : warn_if_static(current_ooQ1,1) },
% %       { kb_shared( baseKB : current_ooQ1/1) }])
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,kb_shared) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,kb_shared) ,
%   support_fact = ( mfl4(_1194,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) ,
%                    ax) ,
%   support_trig = mfl4(_1684,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,kb_shared)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,kb_shared)
% % 		body: '$pt'(baseKB,genlMt(BaseKB,baseKB),(BaseKB1\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                                                                   call(kb_shared,_106432:current_ooQ1/1))),
% %                                                               show_failure( on_x_fail( Call3 :
% %
% %                                                                                          call(kb_shared,_120676:current_ooQ1/1))) }])))
% % 	Adding positive
% % 		trigger: genlMt(BaseKB,baseKB)
% % 		body: BaseKB1\=baseKB*->rhs([ { nop( dmsg_pretty( Call :
% %
% %                                               call(kb_shared,_92568:current_ooQ1/1))),
% %                           show_failure( on_x_fail( Call3 :
% %
% %                                                      call(kb_shared,_106810:current_ooQ1/1))) }])
% % 	 Support: mpred_prop(baseKB,current_ooQ1,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,kb_shared),'$pt'(baseKB,genlMt(BaseKB4,baseKB),(BaseKB5\=baseKB*->rhs(
% %                                         [ { nop( dmsg_pretty( Call6 :
% %
% %                                                                 call(kb_shared,_143534:current_ooQ1/1))),
% %                                             show_failure( on_x_fail( Call7 :
% %
% %                                                                        call(kb_shared,_157778:current_ooQ1/1))) }]))))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,kb_shared)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,kb_shared)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,kb_shared)
% % 		body: genlPreds(kb_shared,GenlPreds_Kb_shared)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,kb_shared)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,kb_shared))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,kb_shared)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,kb_shared))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,kb_shared)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,kb_shared))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcCreates)
% % 		body: genlPreds(pfcCreates,GenlPreds_PfcCreates)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcCreates)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,pfcCreates))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,pfcCreates)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcCreates))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,pfcCreates)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcCreates))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcRHS)
% % 		body: genlPreds(pfcRHS,GenlPreds_PfcRHS)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ1,1,pfcControlled)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
% %               [ mpred_prop(baseKB,current_ooQ1,1,pfcControlled)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcControlled) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcControlled) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcRHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcRHS),
%                    genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,current_ooQ1,1,pfcControlled)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,pfcControlled)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcControlled)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,pfcControlled)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcControlled)
% % 		body: rhs([ { kb_shared( baseKB : current_ooQ1/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcControlled)
% % 		body: genlPreds(pfcControlled,GenlPreds_PfcControlled)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ1,1,prologHybrid)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
% %                                   [ mpred_prop(baseKB,current_ooQ1,1,prologHybrid)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,prologHybrid) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,prologHybrid) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcControlled) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcControlled),
%                    ( genlPreds(pfcControlled,prologHybrid) *->
%                      rhs([mpred_prop(baseKB,current_ooQ1,1,prologHybrid)]))) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,prologHybrid)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,prologHybrid)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,prologHybrid)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,prologHybrid)
% % 		body: genlPreds(prologHybrid,GenlPreds_PrologHybrid)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,prologHybrid)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,prologHybrid))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,prologHybrid)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,prologHybrid))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,prologHybrid)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,prologHybrid))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcControlled)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,pfcControlled))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,pfcControlled)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcControlled))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,pfcControlled)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcControlled))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcRHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,pfcRHS))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,pfcRHS)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcRHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,pfcRHS)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcRHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcLHS) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcLHS) ,
%   support_fact = mfl4(_185022,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,pfcLHS)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcLHS)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,pfcLHS)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcLHS)
% % 		body: rhs([ arity(current_ooQ1,1),
% %       functorIsMacro(current_ooQ1),
% %       mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])
% % 	RHS-Post1: arity(current_ooQ1,1)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcLHS),rhs([ arity(current_ooQ1,1),
% %                                                                                                      functorIsMacro(current_ooQ1),
% %                                                                                                      mpred_prop(baseKB,current_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = arity(current_ooQ1,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = arity(current_ooQ1,1) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcLHS),
%                    rhs( [ arity(current_ooQ1,1),
%                           functorIsMacro(current_ooQ1),
%                           mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( arity(current_ooQ1,1)).
% % 	Found positive trigger: arity(current_ooQ1,1)
% % 		body: predicateConventionMt(current_ooQ1,PredicateConventionMt_Current_ooQ1)*->rhs([ { kb_global( _82050 :
% %
% %                                                                                               current_ooQ1/1) }])
% % 	Found positive trigger: arity(current_ooQ1,1)
% % 		body: prologHybrid(current_ooQ1)*->rhs([ { kb_shared( current_ooQ1/1) }])
% % 	Found positive trigger: arity(current_ooQ1,1)
% % 		body: pfcControlled(current_ooQ1)*->rhs([ hybrid_support(current_ooQ1,1)])
% % 	RHS-Post1: hybrid_support(current_ooQ1,1)
% % 	Support: arity(current_ooQ1,1),'$pt'(baseKB,arity(current_ooQ1,1),(pfcControlled(current_ooQ1)*->rhs([ hybrid_support(current_ooQ1,1)])))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = hybrid_support(current_ooQ1,1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = hybrid_support(current_ooQ1,1) ,
%   support_fact = arity(current_ooQ1,1) ,
%   support_trig = '$pt'( baseKB,
%                    arity(current_ooQ1,1),
%                    pfcControlled(current_ooQ1)*->rhs([hybrid_support(current_ooQ1,1)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( hybrid_support(current_ooQ1,1)).
% % 	Found positive trigger: hybrid_support(current_ooQ1,1)
% % 		body: mpred_positive_fact(hybrid_support(current_ooQ1,1))*->rhs([ \+( ~( hybrid_support(current_ooQ1,1)))])
% % still_supported(~hybrid_support(current_ooQ1,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~hybrid_support(current_ooQ1,1)
% % still_supported(~hybrid_support(current_ooQ1,1))
% % 	Found positive trigger: arity(current_ooQ1,1)
% % 		body: mpred_positive_fact(arity(current_ooQ1,1))*->rhs([ \+( ~( arity(current_ooQ1,1)))])
% % still_supported(~arity(current_ooQ1,1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~arity(current_ooQ1,1)
% % still_supported(~arity(current_ooQ1,1))
% % 	Found positive trigger: arity(current_ooQ1,1)
% % 		body: singleValuedInArg(current_ooQ1,SingleValuedInArg_Current_ooQ1)*->rhs([ singleValuedInArgAX(current_ooQ1,1,SingleValuedInArgAX4)])
% % 	RHS-Post1: functorIsMacro(current_ooQ1)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcLHS),rhs([ arity(current_ooQ1,1),
% %                                                                                                      functorIsMacro(current_ooQ1),
% %                                                                                                      mpred_prop(baseKB,current_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = functorIsMacro(current_ooQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = functorIsMacro(current_ooQ1) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcLHS),
%                    rhs( [ arity(current_ooQ1,1),
%                           functorIsMacro(current_ooQ1),
%                           mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( functorIsMacro(current_ooQ1)).
% % 	Found positive trigger: functorIsMacro(current_ooQ1)
% % 		body: mpred_positive_fact(functorIsMacro(current_ooQ1))*->rhs([ \+( ~( functorIsMacro(current_ooQ1)))])
% % still_supported(~functorIsMacro(current_ooQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~functorIsMacro(current_ooQ1)
% % still_supported(~functorIsMacro(current_ooQ1))
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcLHS),rhs([ arity(current_ooQ1,1),
% %                                                                                                      functorIsMacro(current_ooQ1),
% %                                                                                                      mpred_prop(baseKB,current_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcLHS) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcLHS),
%                    rhs( [ arity(current_ooQ1,1),
%                           functorIsMacro(current_ooQ1),
%                           mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])) ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,pfcWatches)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,pfcWatches)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % 		body: rhs([ { kb_shared( baseKB : current_ooQ1/1) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % 		body: genlPreds(pfcWatches,GenlPreds_PfcWatches)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,pfcWatches))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,pfcWatches)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcWatches))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcWatches))
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcLHS)
% % 		body: genlPreds(pfcLHS,GenlPreds_PfcLHS)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcLHS)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,pfcLHS))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,pfcLHS)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcLHS))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,pfcLHS)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcLHS))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger) ,
%   support_fact = mfl4(_109782,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)
% % 		body: \+ground(current_ooQ1/1)*->rhs([ { trace_or_throw_ex( mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)) }])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)
% % 		body: rhs([ mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])
% % 	RHS-Post1: mpred_prop(baseKB,current_ooQ1,1,pfcWatches)
% % 	Support: mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger),'$pt'(baseKB,mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger),rhs([ mpred_prop(baseKB,current_ooQ1,1,pfcWatches)]))
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = mpred_prop(baseKB,current_ooQ1,1,pfcWatches) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = mpred_prop(baseKB,current_ooQ1,1,pfcWatches) ,
%   support_fact = mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger) ,
%   support_trig = '$pt'( baseKB,
%                    mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger),
%                    rhs([mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])) ,
%   ( simular( ( mpred_prop(baseKB,current_ooQ1,1,pfcLHS) ,
%                '$pt'( baseKB,
%                  mpred_prop(baseKB,current_ooQ1,1,pfcLHS),
%                  rhs( [ arity(current_ooQ1,1),
%                         functorIsMacro(current_ooQ1),
%                         mpred_prop(baseKB,current_ooQ1,1,pfcWatches)])))) is
%     support_status).
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)
% % 		body: genlPreds(pfcNegTrigger,GenlPreds_PfcNegTrigger)*->rhs([ mpred_prop(baseKB,current_ooQ1,1,Prop)])
% % 	Found positive trigger: mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)
% % 		body: mpred_positive_fact(mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger))*->rhs([ \+( ~( mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)))])
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger)
% % still_supported(~mpred_prop(baseKB,current_ooQ1,1,pfcNegTrigger))
% % 	Adding negative
% % 		trigger: current_ooQ1(OoQ1)
% % 		test: call_u_no_bc(current_ooQ1(OoQ12)),current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1)
% % 		body: rhs([ current_ooQ1(whenMissingQ1)])
% % 	 Support: (\+current_ooQ1(OoQ14)/(current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)),mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46)
% % 	RHS-Post1: current_ooQ1(whenMissingQ1)
% % 	Support: \+current_ooQ1(OoQ1),'$nt'(current_ooQ1(OoQ11),(call_u_no_bc(current_ooQ1(OoQ12)),current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                   [ current_ooQ1(whenMissingQ1)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ1(whenMissingQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ1(whenMissingQ1) ,
%   support_fact = \+( current_ooQ1(OoQ1)) ,
%   support_trig = '$nt'( current_ooQ1(OoQ1),
%                    call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1),
%                    rhs([current_ooQ1(whenMissingQ1)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooQ1(OoQ1)
% % 		cond: call_u_no_bc(current_ooQ1(OoQ12)),current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1)
% % 		action: rhs([ current_ooQ1(whenMissingQ1)])
% % 	 from: mpred_add_support_fast(current_ooQ1(whenMissingQ1),(\+current_ooQ1(OoQ14),'$nt'(current_ooQ1(OoQ15),(call_u_no_bc(current_ooQ1(OoQ16)),current_ooQ1(OoQ17)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                                                        [ current_ooQ1(whenMissingQ1)]))))
% baseKB : mpred_fwc1( current_ooQ1(whenMissingQ1)).
% % 	Found positive trigger: current_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact(current_ooQ1(whenMissingQ1))*->rhs([ \+( ~( current_ooQ1(whenMissingQ1)))])
% % still_supported(~current_ooQ1(whenMissingQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ1(whenMissingQ1)
% % still_supported(~current_ooQ1(whenMissingQ1))
% % 	Found negative trigger: current_ooQ1(whenMissingQ1)
% % 		cond: call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1)
% % 		body: rhs([ current_ooQ1(whenMissingQ1)])
% % 	Support: '$spft'(baseKB,current_ooQ1(whenMissingQ1),\+current_ooQ1(OoQ13),'$nt'(current_ooQ1(whenMissingQ1),(call_u_no_bc(current_ooQ1(OoQ14)),current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                                                       [ current_ooQ1(whenMissingQ1)])))
% % 	Found positive trigger: \+current_ooQ1(OoQ1)/(current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact((\+current_ooQ1(OoQ13)/(current_ooQ1(OoQ14)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)))*->rhs(
% %               [ \+( ~( ( \+( current_ooQ1(OoQ15)/(current_ooQ1(OoQ16)\=@=current_ooQ1(whenMissingQ1))) ==>
% %                          current_ooQ1(whenMissingQ1))))])
passed=info(why_was_true(baseKB:current_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ1(_)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ1(W4)/(current_ooQ1(W4)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_109640] 
    1.3 if_mooQ1(current_ooQ1(_),current_ooQ1(whenMissingQ1))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:_110826] 
    1.4 if_mooQ1(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:41] 
    1.5 default_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:46] 
    1.6 default_ooQ1(W4)==>if_mooQ1(current_ooQ1(_),current_ooQ1(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ1(fooQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ1(fooQ1) ,
%   support_fact = mfl4(_121014,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',52) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( current_ooQ1(fooQ1)).
% % 	Found positive trigger: current_ooQ1(fooQ1)
% % 		body: mpred_positive_fact(current_ooQ1(fooQ1))*->rhs([ \+( ~( current_ooQ1(fooQ1)))])
% % still_supported(~current_ooQ1(fooQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ1(fooQ1)
% % still_supported(~current_ooQ1(fooQ1))
% % 	Found negative trigger: current_ooQ1(fooQ1)
% % 		cond: call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1)
% % 		body: rhs([ current_ooQ1(whenMissingQ1)])
% % 	Support: '$spft'(baseKB,current_ooQ1(whenMissingQ1),\+current_ooQ1(OoQ13),'$nt'(current_ooQ1(fooQ1),(call_u_no_bc(current_ooQ1(OoQ14)),current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                                               [ current_ooQ1(whenMissingQ1)])))
% %     Removing support: \+current_ooQ1(fooQ1),'$nt'(current_ooQ1(fooQ1),(call_u_no_bc(current_ooQ1(fooQ1)),current_ooQ1(fooQ1)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                          [ current_ooQ1(whenMissingQ1)]))
% %      Which was for: current_ooQ1(whenMissingQ1)
passed=info(why_was_true(baseKB:(\+current_ooQ1(whenMissingQ1))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% % 	RHS-Post1: current_ooQ1(whenMissingQ1)
% % 	Support: \+current_ooQ1(fooQ1),'$nt'(current_ooQ1(fooQ1),(call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                   [ current_ooQ1(whenMissingQ1)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ1(whenMissingQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ1(whenMissingQ1) ,
%   support_fact = \+( current_ooQ1(fooQ1)) ,
%   support_trig = '$nt'( current_ooQ1(fooQ1),
%                    call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1),
%                    rhs([current_ooQ1(whenMissingQ1)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooQ1(fooQ1)
% % 		cond: call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1)
% % 		action: rhs([ current_ooQ1(whenMissingQ1)])
% % 	 from: mpred_add_support_fast(current_ooQ1(whenMissingQ1),(\+current_ooQ1(fooQ1),'$nt'(current_ooQ1(fooQ1),(call_u_no_bc(current_ooQ1(OoQ13)),current_ooQ1(OoQ14)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                                                        [ current_ooQ1(whenMissingQ1)]))))
% baseKB : mpred_fwc1( current_ooQ1(whenMissingQ1)).
% % 	Found positive trigger: current_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact(current_ooQ1(whenMissingQ1))*->rhs([ \+( ~( current_ooQ1(whenMissingQ1)))])
% % still_supported(~current_ooQ1(whenMissingQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ1(whenMissingQ1)
% % still_supported(~current_ooQ1(whenMissingQ1))
passed=info(why_was_true(baseKB:current_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ1(fooQ1)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ1(W4)/(current_ooQ1(W4)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1996] 
    1.3 if_mooQ1(current_ooQ1(_),current_ooQ1(whenMissingQ1))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:_3176] 
    1.4 if_mooQ1(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:41] 
    1.5 default_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:46] 
    1.6 default_ooQ1(W4)==>if_mooQ1(current_ooQ1(_),current_ooQ1(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% %     Removing support: mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46),ax
% %      Which was for: default_ooQ1(whenMissingQ1)
% success( mpred_undo1_nt_unfwc,
%   (   '$nt'( current_ooQ1(OoQ1),
%         call_u_no_bc(current_ooQ1(OoQ11)),current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1),
%         rhs([current_ooQ1(whenMissingQ1)]))  ,
%     dmsg_pretty( mpred_undo1( '$nt'( current_ooQ1(OoQ13),
%                                 call_u_no_bc(current_ooQ1(OoQ14)),current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1),
%                                 rhs([current_ooQ1(whenMissingQ1)])))) ,
%     retract_u( '$nt'( current_ooQ1(OoQ16),
%                  call_u_no_bc(current_ooQ1(OoQ17)),current_ooQ1(OoQ18)\=@=current_ooQ1(whenMissingQ1),
%                  rhs([current_ooQ1(whenMissingQ1)]))))).
passed=info(why_was_true(baseKB:(\+current_ooQ1(whenMissingQ1))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ~( current_ooQ1(fooQ1)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ~( current_ooQ1(fooQ1)) ,
%   support_fact = mfl4(_140898,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',66) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( ~( current_ooQ1(fooQ1))).
% % 	Found positive trigger: ~current_ooQ1(fooQ1)
% % 		body: mpred_positive_fact(~current_ooQ1(fooQ1))*->rhs([ \+( ~( ~( current_ooQ1(fooQ1))))])
passed=info(why_was_true(baseKB: ~current_ooQ1(fooQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~current_ooQ1(fooQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',66) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = default_ooQ1(whenMissingQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooQ1(whenMissingQ1) ,
%   support_fact = mfl4(_189066,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',72) ,
%   support_trig=ax ,
%   none is support_status.
% baseKB : mpred_fwc1( default_ooQ1(whenMissingQ1)).
% % 	Found positive trigger: default_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact(default_ooQ1(whenMissingQ1))*->rhs([ \+( ~( default_ooQ1(whenMissingQ1)))])
% % still_supported(~default_ooQ1(whenMissingQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~default_ooQ1(whenMissingQ1)
% % still_supported(~default_ooQ1(whenMissingQ1))
% % 	Found positive trigger: default_ooQ1(whenMissingQ1)
% % 		body: rhs([ if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))])
% % 	RHS-Post1: if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % 	Support: default_ooQ1(whenMissingQ1),'$pt'(baseKB,default_ooQ1(whenMissingQ1),rhs([ if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(whenMissingQ1))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = if_mooQ1(current_ooQ1(_2236),current_ooQ1(whenMissingQ1)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = if_mooQ1(current_ooQ1(_2236),current_ooQ1(whenMissingQ1)) ,
%   support_fact = default_ooQ1(whenMissingQ1) ,
%   support_trig = '$pt'( baseKB,
%                    default_ooQ1(whenMissingQ1),
%                    rhs([if_mooQ1(current_ooQ1(_2236),current_ooQ1(whenMissingQ1))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))).
% % 	Found positive trigger: if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % 		body: mpred_positive_fact(if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(whenMissingQ1)))*->rhs([ \+( ~( if_mooQ1(current_ooQ1(OoQ13),current_ooQ1(whenMissingQ1))))])
% % still_supported(~if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1)))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % still_supported(~if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1)))
% % 	Found positive trigger: if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1))
% % 		body: rhs([ ( \+( current_ooQ1(OoQ12)/(current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1))) ==>
% %         current_ooQ1(whenMissingQ1))])
% % 	RHS-Post1: \+current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)
% % 	Support: if_mooQ1(current_ooQ1(OoQ12),current_ooQ1(whenMissingQ1)),'$pt'(baseKB,if_mooQ1(current_ooQ1(OoQ13),current_ooQ1(whenMissingQ1)),rhs(
% %              [ ( \+( current_ooQ1(OoQ14)/(current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1))) ==>
% %                  current_ooQ1(whenMissingQ1))]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = ( \+( current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))) ==>
%             current_ooQ1(whenMissingQ1)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = ( \+( current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))) ==>
%          current_ooQ1(whenMissingQ1)) ,
%   support_fact = if_mooQ1(current_ooQ1(_2478),current_ooQ1(whenMissingQ1)) ,
%   support_trig = '$pt'( baseKB,
%                    if_mooQ1(current_ooQ1(OoQ1),current_ooQ1(whenMissingQ1)),
%                    rhs([(\+current_ooQ1(_2706)/(current_ooQ1(_2706)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1))])) ,
%   none is support_status.
% baseKB : mpred_fwc1( ( \+( current_ooQ1(OoQ1)/(current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1))) ==>
%                        current_ooQ1(whenMissingQ1))).
% % 	Adding negative
% % 		trigger: current_ooQ1(OoQ1)
% % 		test: call_u_no_bc(current_ooQ1(OoQ12)),current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1)
% % 		body: rhs([ current_ooQ1(whenMissingQ1)])
% % 	 Support: (\+current_ooQ1(OoQ14)/(current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)),mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',72)
% % 	RHS-Post1: current_ooQ1(whenMissingQ1)
% % 	Support: \+current_ooQ1(OoQ1),'$nt'(current_ooQ1(OoQ11),(call_u_no_bc(current_ooQ1(OoQ12)),current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                   [ current_ooQ1(whenMissingQ1)]))
% call_mpred_post4 :-
%   unique is assertion_status ,
%   post1 = current_ooQ1(whenMissingQ1) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = current_ooQ1(whenMissingQ1) ,
%   support_fact = \+( current_ooQ1(OoQ1)) ,
%   support_trig = '$nt'( current_ooQ1(OoQ1),
%                    call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ11)\=@=current_ooQ1(whenMissingQ1),
%                    rhs([current_ooQ1(whenMissingQ1)])) ,
%   none is support_status.
% % 	Adding NEG mpred_do_fcnt via support
% % 		trigger: current_ooQ1(OoQ1)
% % 		cond: call_u_no_bc(current_ooQ1(OoQ12)),current_ooQ1(OoQ13)\=@=current_ooQ1(whenMissingQ1)
% % 		action: rhs([ current_ooQ1(whenMissingQ1)])
% % 	 from: mpred_add_support_fast(current_ooQ1(whenMissingQ1),(\+current_ooQ1(OoQ14),'$nt'(current_ooQ1(OoQ15),(call_u_no_bc(current_ooQ1(OoQ16)),current_ooQ1(OoQ17)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                                                        [ current_ooQ1(whenMissingQ1)]))))
% baseKB : mpred_fwc1( current_ooQ1(whenMissingQ1)).
% % 	Found positive trigger: current_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact(current_ooQ1(whenMissingQ1))*->rhs([ \+( ~( current_ooQ1(whenMissingQ1)))])
% % still_supported(~current_ooQ1(whenMissingQ1))
% % mpred_withdraw/2 Could not find support unKnown_suppoRt to remove (fact): ~current_ooQ1(whenMissingQ1)
% % still_supported(~current_ooQ1(whenMissingQ1))
% % 	Found negative trigger: current_ooQ1(whenMissingQ1)
% % 		cond: call_u_no_bc(current_ooQ1(OoQ1)),current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1)
% % 		body: rhs([ current_ooQ1(whenMissingQ1)])
% % 	Support: '$spft'(baseKB,current_ooQ1(whenMissingQ1),\+current_ooQ1(OoQ13),'$nt'(current_ooQ1(whenMissingQ1),(call_u_no_bc(current_ooQ1(OoQ14)),current_ooQ1(OoQ15)\=@=current_ooQ1(whenMissingQ1)),rhs(
% %                                                                       [ current_ooQ1(whenMissingQ1)])))
% % 	Found positive trigger: \+current_ooQ1(OoQ1)/(current_ooQ1(OoQ12)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)
% % 		body: mpred_positive_fact((\+current_ooQ1(OoQ13)/(current_ooQ1(OoQ14)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)))*->rhs(
% %               [ \+( ~( ( \+( current_ooQ1(OoQ15)/(current_ooQ1(OoQ16)\=@=current_ooQ1(whenMissingQ1))) ==>
% %                          current_ooQ1(whenMissingQ1))))])
passed=info(why_was_true(baseKB:current_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ1(fooQ1)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ1(W4)/(current_ooQ1(W4)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_123824] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',66) 
    1.4 if_mooQ1(current_ooQ1(_),current_ooQ1(whenMissingQ1))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:_125380] 
    1.5 if_mooQ1(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:41] 
    1.6 default_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:72] 
    1.7 default_ooQ1(W4)==>if_mooQ1(current_ooQ1(_),current_ooQ1(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:44] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',72) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = (   if_mooTt(Missing,Create)  ==>
%             \+( Missing/(Missing\=@=Create)) ==>
%             _135820) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = (   if_mooTt(Missing,Create)  ==>
%          \+( Missing/(Missing\=@=Create)) ==>
%          _135820) ,
%   support_fact = mfl4(
%                     [ 'Missing'=Missing,
%                       'Create'=Create],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 84) ,
%   support_trig=ax ,
%   ( simular( ( mfl4(
%                   [ 'Missing'=Missing2,
%                     'Create'=Create3],
%                    baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 84) ,
%                ax)) is
%     support_status).
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = default_ooTt(_196308)==>if_mooTt(current_ooTt(_196330),current_ooTt(_196308)) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooTt(_196308)==>if_mooTt(current_ooTt(_196330),current_ooTt(_196308)) ,
%   support_fact = mfl4(
%                     [ 'X'=X],
%                      baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl', 87) ,
%   support_trig=ax ,
%   ( simular( ( mfl4(
%                   [ 'X'=X1],
%                    baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl', 87) ,
%                ax)) is
%     support_status).
% call_mpred_post4 :-
%   identical is assertion_status ,
%   post1 = default_ooTt(defaultValueTt) ,
%   fix_mp=baseKB ,
%   mz=baseKB ,
%   p0 = default_ooTt(defaultValueTt) ,
%   support_fact = mfl4(_242624,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',89) ,
%   support_trig=ax ,
%   ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',113) ,
%                ax)) is
%     support_status).
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1passed=info(why_was_true(baseKB:make))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
check:check :-
    checker(Checker, Message),
    print_message(informational, check(pass(Message))),
    catch(Checker, E, print_message(error, E)),
    fail.
check:check.

passed=info(why_was_true(baseKB:listing(check)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
check:check :-
    checker(Checker, Message),
    print_message(informational, check(pass(Message))),
    catch(Checker, E, print_message(error, E)),
    fail.
check:check.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1passed=info(why_was_true(baseKB:check))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1passed=info(why_was_true(baseKB:make))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
check:check :-
    checker(Checker, Message),
    print_message(informational, check(pass(Message))),
    catch(Checker, E, print_message(error, E)),
    fail.
check:check.

passed=info(why_was_true(baseKB:listing(check)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
check:check :-
    checker(Checker, Message),
    print_message(informational, check(pass(Message))),
    catch(Checker, E, print_message(error, E)),
    fail.
check:check.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1passed=info(why_was_true(baseKB:check))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="default_ooQ2(booQ2). @ 36" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003552436828613281">


    <system-err><![CDATA[
	goal 	= baseKB:default_ooQ2(booQ2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:36.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L36</pre>
	passed 	= passed=info(why_was_true(baseKB:default_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for default_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',30) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.552436828613281e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooQ2(booQ2). @ 48" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003147125244140625">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooQ2(booQ2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:48.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L48</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ2(_)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ2(W4)/(current_ooQ2(W4)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_80524] 
    1.3 if_mooQ2(current_ooQ2(_),current_ooQ2(booQ2))  % [mfl4(_81704,_81706,_81708,_81710)] 
    1.4 if_mooQ2(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:41] 
    1.5 default_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:46] 
    1.6 default_ooQ2(W4)==>if_mooQ2(current_ooQ2(_),current_ooQ2(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.147125244140625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf current_ooQ2(booQ2). @ 54" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003099441528320312">


    <system-err><![CDATA[
	goal 	= baseKB:(\+current_ooQ2(booQ2)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:54.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L54</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+current_ooQ2(booQ2))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0994415283203125e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooQ2(booQ2). @ 58" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003170967102050781">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooQ2(booQ2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:58.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L58</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ2(fooQ2)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ2(W4)/(current_ooQ2(W4)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_89034] 
    1.3 if_mooQ2(current_ooQ2(_),current_ooQ2(booQ2))  % [mfl4(_90214,_90216,_90218,_90220)] 
    1.4 if_mooQ2(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:41] 
    1.5 default_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:46] 
    1.6 default_ooQ2(W4)==>if_mooQ2(current_ooQ2(_),current_ooQ2(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.170967102050781e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf current_ooQ2(booQ2). @ 64" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00004816055297851562">


    <system-err><![CDATA[
	goal 	= baseKB:(\+current_ooQ2(booQ2)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:64.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L64</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+current_ooQ2(booQ2))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ2(booQ2). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 4.8160552978515625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="~current_ooQ2(fooQ2). @ 70" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00011134147644042969">


    <system-err><![CDATA[
	goal 	= baseKB: ~current_ooQ2(fooQ2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:70.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L70</pre>
	passed 	= passed=info(why_was_true(baseKB: ~current_ooQ2(fooQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~current_ooQ2(fooQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',66) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.00011134147644042969.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooQ2(booQ2). @ 74" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003099441528320312">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooQ2(booQ2).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:74.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L74</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooQ2(booQ2)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ2(booQ2):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ2(fooQ2)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ2(W4)/(current_ooQ2(W4)\=@=current_ooQ2(booQ2))==>current_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_83388] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',66) 
    1.4 if_mooQ2(current_ooQ2(_),current_ooQ2(booQ2))  % [mfl4(_84938,_84940,_84942,_84944)] 
    1.5 if_mooQ2(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:41] 
    1.6 default_ooQ2(booQ2)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:72] 
    1.7 default_ooQ2(W4)==>if_mooQ2(current_ooQ2(_),current_ooQ2(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:44] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',41) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',72) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0994415283203125e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooTt(defaultValueTt). @ 91" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003027915954589844">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooTt(defaultValueTt).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:91.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L91</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooTt(defaultValueTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooTt(defaultValueTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooTt(_)  % [/boot/init.pl:512] 
    1.2 \+current_ooTt(W4)/(current_ooTt(W4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_90796] 
    1.3 if_mooTt(current_ooTt(_),current_ooTt(defaultValueTt))  % [mfl4(_91976,_91978,_91980,_91982)] 
    1.4 if_mooTt(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:84] 
    1.5 default_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:89] 
    1.6 default_ooTt(W4)==>if_mooTt(current_ooTt(_),current_ooTt(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:87] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0279159545898438e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf current_ooTt(defaultValueTt). @ 95" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003218650817871094">


    <system-err><![CDATA[
	goal 	= baseKB:(\+current_ooTt(defaultValueTt)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:95.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L95</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+current_ooTt(defaultValueTt))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.218650817871094e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooTt(defaultValueTt). @ 99" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003361701965332031">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooTt(defaultValueTt).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:99.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L99</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooTt(defaultValueTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooTt(defaultValueTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooTt(fooTt)  % [/boot/init.pl:512] 
    1.2 \+current_ooTt(W4)/(current_ooTt(W4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_97780] 
    1.3 if_mooTt(current_ooTt(_),current_ooTt(defaultValueTt))  % [mfl4(_98960,_98962,_98964,_98966)] 
    1.4 if_mooTt(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:84] 
    1.5 default_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:89] 
    1.6 default_ooTt(W4)==>if_mooTt(current_ooTt(_),current_ooTt(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:87] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',89) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.361701965332031e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf current_ooTt(defaultValueTt). @ 105" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00004625320434570312">


    <system-err><![CDATA[
	goal 	= baseKB:(\+current_ooTt(defaultValueTt)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:105.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L105</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+current_ooTt(defaultValueTt))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooTt(defaultValueTt). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 4.6253204345703125e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="~current_ooTt(fooTt). @ 111" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00010013580322265625">


    <system-err><![CDATA[
	goal 	= baseKB: ~current_ooTt(fooTt).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:111.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L111</pre>
	passed 	= passed=info(why_was_true(baseKB: ~current_ooTt(fooTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~current_ooTt(fooTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',107) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.00010013580322265625.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooTt(defaultValueTt). @ 115" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003147125244140625">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooTt(defaultValueTt).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:115.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl#L115</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooTt(defaultValueTt)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooTt(defaultValueTt):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooTt(fooTt)  % [/boot/init.pl:512] 
    1.2 \+current_ooTt(W4)/(current_ooTt(W4)\=@=current_ooTt(defaultValueTt))==>current_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_2134] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',107) 
    1.4 if_mooTt(current_ooTt(_),current_ooTt(defaultValueTt))  % [mfl4(_3678,_3680,_3682,_3684)] 
    1.5 if_mooTt(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:84] 
    1.6 default_ooTt(defaultValueTt)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:113] 
    1.7 default_ooTt(W4)==>if_mooTt(current_ooTt(_),current_ooTt(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl:87] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',84) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',113) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_03.pl',87) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.147125244140625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="default_ooQ1(whenMissingQ1). @ 34" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003266334533691406">


    <system-err><![CDATA[
	goal 	= baseKB:default_ooQ1(whenMissingQ1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:34.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L34</pre>
	passed 	= passed=info(why_was_true(baseKB:default_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for default_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',26) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.266334533691406e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooQ1(whenMissingQ1). @ 48" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00004220008850097656">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooQ1(whenMissingQ1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:48.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L48</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ1(_)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ1(W4)/(current_ooQ1(W4)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_109640] 
    1.3 if_mooQ1(current_ooQ1(_),current_ooQ1(whenMissingQ1))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:_110826] 
    1.4 if_mooQ1(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:41] 
    1.5 default_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:46] 
    1.6 default_ooQ1(W4)==>if_mooQ1(current_ooQ1(_),current_ooQ1(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 4.220008850097656e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf current_ooQ1(whenMissingQ1). @ 54" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00002908706665039062">


    <system-err><![CDATA[
	goal 	= baseKB:(\+current_ooQ1(whenMissingQ1)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:54.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L54</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+current_ooQ1(whenMissingQ1))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 2.9087066650390625e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooQ1(whenMissingQ1). @ 58" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00002980232238769531">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooQ1(whenMissingQ1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:58.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L58</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ1(fooQ1)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ1(W4)/(current_ooQ1(W4)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1996] 
    1.3 if_mooQ1(current_ooQ1(_),current_ooQ1(whenMissingQ1))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:_3176] 
    1.4 if_mooQ1(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:41] 
    1.5 default_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:46] 
    1.6 default_ooQ1(W4)==>if_mooQ1(current_ooQ1(_),current_ooQ1(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:44] 
    1.7 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41) 
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',46) 
    1.9 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 2.9802322387695312e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf current_ooQ1(whenMissingQ1). @ 64" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00003647804260253906">


    <system-err><![CDATA[
	goal 	= baseKB:(\+current_ooQ1(whenMissingQ1)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:64.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L64</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+current_ooQ1(whenMissingQ1))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+current_ooQ1(whenMissingQ1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.647804260253906e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="~current_ooQ1(fooQ1). @ 70" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00010585784912109375">


    <system-err><![CDATA[
	goal 	= baseKB: ~current_ooQ1(fooQ1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:70.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L70</pre>
	passed 	= passed=info(why_was_true(baseKB: ~current_ooQ1(fooQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for ~current_ooQ1(fooQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',66) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.00010585784912109375.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="current_ooQ1(whenMissingQ1). @ 74" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00002956390380859375">


    <system-err><![CDATA[
	goal 	= baseKB:current_ooQ1(whenMissingQ1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:74.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L74</pre>
	passed 	= passed=info(why_was_true(baseKB:current_ooQ1(whenMissingQ1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for current_ooQ1(whenMissingQ1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 \+current_ooQ1(fooQ1)  % [/boot/init.pl:512] 
    1.2 \+current_ooQ1(W4)/(current_ooQ1(W4)\=@=current_ooQ1(whenMissingQ1))==>current_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_123824] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',66) 
    1.4 if_mooQ1(current_ooQ1(_),current_ooQ1(whenMissingQ1))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:_125380] 
    1.5 if_mooQ1(W4,X4)==>(\+W4/(W4\=@=X4)==>X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:41] 
    1.6 default_ooQ1(whenMissingQ1)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:72] 
    1.7 default_ooQ1(W4)==>if_mooQ1(current_ooQ1(_),current_ooQ1(W4))  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:44] 
    1.8 mfl4([ 'Missing'=_, 
       'Create'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',41) 
    1.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',72) 
    1.10 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl',44) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 2.956390380859375e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="make. @ 94" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.26843953132629394531">


    <system-err><![CDATA[
	goal 	= baseKB:make.
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:94.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L94</pre>
	warning 	= The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1.
	passed 	= passed=info(why_was_true(baseKB:make))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.26843953132629395.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="listing(check). @ 95" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.02005386352539062500">


    <system-err><![CDATA[
	goal 	= baseKB:listing(check).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:95.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L95</pre>
	passed 	= passed=info(why_was_true(baseKB:listing(check)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
check:check :-
    checker(Checker, Message),
    print_message(informational, check(pass(Message))),
    catch(Checker, E, print_message(error, E)),
    fail.
check:check.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.020053863525390625.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="check. @ 96" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.71235394477844238281">


    <system-err><![CDATA[
	goal 	= baseKB:check.
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:96.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L96</pre>
	warning 	= The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1.
	passed 	= passed=info(why_was_true(baseKB:check))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.7123539447784424.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="make. @ 100" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.11027932167053222656">


    <system-err><![CDATA[
	goal 	= baseKB:make.
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:100.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L100</pre>
	warning 	= The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1.
	passed 	= passed=info(why_was_true(baseKB:make))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for make. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.11027932167053223.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="listing(check). @ 101" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.00305056571960449219">


    <system-err><![CDATA[
	goal 	= baseKB:listing(check).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:101.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L101</pre>
	passed 	= passed=info(why_was_true(baseKB:listing(check)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
check:check :-
    checker(Checker, Message),
    print_message(informational, check(pass(Message))),
    catch(Checker, E, print_message(error, E)),
    fail.
check:check.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for listing(check). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.003050565719604492.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="check. @ 102" package=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.mpred_pfc_test_04.pl" time="0.26298332214355468750">


    <system-err><![CDATA[
	goal 	= baseKB:check.
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl:102.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/mpred_pfc_test_04.pl#L102</pre>
	warning 	= The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1.
	passed 	= passed=info(why_was_true(baseKB:check))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The predicates below are not defined. If these are defined
at runtime using assert/1, use :- dynamic Name/Arity.

butterfly:bflyz/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:322:11: 1-st clause of butterfly:bflyw/1
butterfly:send_tokens/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:201:16: 1-st clause of butterfly:print_html_term/2
swish_config:json_config/2, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
swish_config:reply_json/1, which is referenced by
	/root/.local/share/swi-prolog/pack/logicmoo_utils/prolog/logicmoo/butterfly_console.pl:454: 1-st clause of butterfly:swish_reply_config_root/1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for check. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 0.2629833221435547.
	result 	= passed.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite mpred_pfc_test_04.pl" package='loader' time='18'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k mpred_pfc_test_04.pl (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="mt_04.pl">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['mt_04.pl'])" -g "test_completed"
]]></system-out>
<testcase name="Run TestSuite mt_04.pl" package='loader' time='5'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k mt_04.pl (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="nd_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['nd_04.pfc'])" -g "test_completed"
passed=info(why_was_true(baseKB:a(t)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for a(t):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',25) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:b(t,1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for b(t,1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 a(t)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:25] 
    1.2 a(W4)/member(X4,[1,2,3])==>b(W4,X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:24] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',25) 
    1.4 mfl4([ 'X'=_, 
       'Y'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',24) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:b(t,3)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for b(t,3):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 a(t)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:25] 
    1.2 a(W4)/member(X4,[1,2,3])==>b(W4,X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:24] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',25) 
    1.4 mfl4([ 'X'=_, 
       'Y'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',24) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:(\+a(t))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+a(t). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+a(t). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+a(t). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:(\+b(t,1))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
passed=info(why_was_true(baseKB:(\+b(t,3))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
]]></system-out>

     <testcase name="a(t). @ 27" package=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" time="0.00003170967102050781">


    <system-err><![CDATA[
	goal 	= baseKB:a(t).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:27.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc#L27</pre>
	passed 	= passed=info(why_was_true(baseKB:a(t)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for a(t):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',25) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.170967102050781e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="b(t,1). @ 28" package=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" time="0.00003099441528320312">


    <system-err><![CDATA[
	goal 	= baseKB:b(t,1).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:28.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc#L28</pre>
	passed 	= passed=info(why_was_true(baseKB:b(t,1)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for b(t,1):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 a(t)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:25] 
    1.2 a(W4)/member(X4,[1,2,3])==>b(W4,X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:24] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',25) 
    1.4 mfl4([ 'X'=_, 
       'Y'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',24) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0994415283203125e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="b(t,3). @ 29" package=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" time="0.00003027915954589844">


    <system-err><![CDATA[
	goal 	= baseKB:b(t,3).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:29.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc#L29</pre>
	passed 	= passed=info(why_was_true(baseKB:b(t,3)))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Justifications for b(t,3):
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    1.1 a(t)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:25] 
    1.2 a(W4)/member(X4,[1,2,3])==>b(W4,X4)  % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:24] 
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',25) 
    1.4 mfl4([ 'X'=_, 
       'Y'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc',24) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0279159545898438e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf a(t). @ 33" package=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" time="0.00003099441528320312">


    <system-err><![CDATA[
	goal 	= baseKB:(\+a(t)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:33.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc#L33</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+a(t))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+a(t). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+a(t). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+a(t). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0994415283203125e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf b(t,1). @ 34" package=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" time="0.00002980232238769531">


    <system-err><![CDATA[
	goal 	= baseKB:(\+b(t,1)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:34.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc#L34</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+b(t,1))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,1). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 2.9802322387695312e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>

     <testcase name="\naf b(t,3). @ 35" package=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.nd_04" time="0.00003051757812500000">


    <system-err><![CDATA[
	goal 	= baseKB:(\+b(t,3)).
	src 	= /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc:35.
	url 	= <pre>https://logicmoo.org:2082/gitlab/logicmoo/logicmoo_workspace/-/blob/master_linux/packs_sys/pfc/t/sanity_base/nd_04.pfc#L35</pre>
	passed 	= passed=info(why_was_true(baseKB:(\+b(t,3))))
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 No justifications for \+b(t,3). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
.
	time 	= 3.0517578125e-5.
	result 	= passed.

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite nd_04.pfc" package='loader' time='5'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k nd_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="retry_inheritance_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['retry_inheritance_04.pfc'])" -g "test_completed"
'<meta-call>'/1: Unknown procedure: baseKB:a_01/0Goal (directive) failed: baseKB:(\+a_01)]]></system-out>

     <testcase name='Run TestSuite retry_inheritance_04.pfc' package=".opt.logicmoo_workspace_linux.packs_sanity_base.retry_inheritance_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.retry_inheritance_04" >

      <error message="error = &quot;'&lt;meta-call&gt;'/1: Unknown procedure: baseKB:a_01/0&quot;.\nwarning = &quot;Goal (directive) failed: baseKB:(\\\\+a_01)&quot;.\n" ><system-err><![CDATA[  error = "'<meta-call>'/1: Unknown procedure: baseKB:a_01/0".
warning = "Goal (directive) failed: baseKB:(\\+a_01)".
  ]]></system-err></error>

    <system-err><![CDATA[
	error 	= '<meta-call>'/1: Unknown procedure: baseKB:a_01/0.
	warning 	= Goal (directive) failed: baseKB:(\+a_01).

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite retry_inheritance_04.pfc" package='loader' time='4'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k retry_inheritance_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="retry_undefined_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['retry_undefined_04.pfc'])" -g "test_completed"
'<meta-call>'/1: Unknown procedure: baseKB:a/0
  However, there are definitions for:
        baseKB:a/2
        pfc_lib:a/2
        a/2
        a/2Goal (directive) failed: baseKB:(\+a)]]></system-out>

     <testcase name='Run TestSuite retry_undefined_04.pfc' package=".opt.logicmoo_workspace_linux.packs_sanity_base.retry_undefined_04" classname=".opt.logicmoo_workspace_linux.packs_sanity_base.retry_undefined_04" >

      <error message="error = &quot;'&lt;meta-call&gt;'/1: Unknown procedure: baseKB:a/0\\n  However, there are definitions for:\\n        baseKB:a/2\\n        pfc_lib:a/2\\n        a/2\\n        a/2&quot;.\nwarning = &quot;Goal (directive) failed: baseKB:(\\\\+a)&quot;.\n" ><system-err><![CDATA[  error = "'<meta-call>'/1: Unknown procedure: baseKB:a/0\n  However, there are definitions for:\n        baseKB:a/2\n        pfc_lib:a/2\n        a/2\n        a/2".
warning = "Goal (directive) failed: baseKB:(\\+a)".
  ]]></system-err></error>

    <system-err><![CDATA[
	error 	= '<meta-call>'/1: Unknown procedure: baseKB:a/0
  However, there are definitions for:
        baseKB:a/2
        pfc_lib:a/2
        a/2
        a/2.
	warning 	= Goal (directive) failed: baseKB:(\+a).

    ]]></system-err>

    </testcase>
<testcase name="Run TestSuite retry_undefined_04.pfc" package='loader' time='5'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k retry_undefined_04.pfc (returned 0)'/>
</testcase>
</testsuite>




<testsuite name="verbatums_04.pfc">
<system-out><![CDATA[
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['verbatums_04.pfc'])" -g "test_completed"
]]></system-out>
<testcase name="Run TestSuite verbatums_04.pfc" package='loader' time='4'>
 <failure message='FAILED: /opt/logicmoo_workspace/bin/test_prolog.sh -k verbatums_04.pfc (returned 0)'/>
</testcase>
</testsuite>





</testsuites>
