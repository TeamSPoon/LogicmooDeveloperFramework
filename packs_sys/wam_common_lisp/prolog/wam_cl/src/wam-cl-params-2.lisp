
(DEFPARAMETER EXT::*ED-FUNCTIONS* (SYS::DEFAULT-ED-FUNCTION))


(DEFCONSTANT CL::DOUBLE-FLOAT-EPSILON 1.1102230246251568d-16)
(DEFCONSTANT CL::DOUBLE-FLOAT-NEGATIVE-EPSILON 5.551115123125784d-17)
(DEFCONSTANT CL::LEAST-NEGATIVE-DOUBLE-FLOAT -4.9406564584124654d-324)
(DEFCONSTANT CL::LEAST-NEGATIVE-LONG-FLOAT -4.9406564584124654d-324)
(DEFCONSTANT CL::LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT -2.2250738585072014d-308)
(DEFCONSTANT CL::LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT -2.2250738585072014d-308)
(DEFCONSTANT CL::LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT -1.17549435f-38)
(DEFCONSTANT CL::LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT -1.17549435f-38)
(DEFCONSTANT CL::LEAST-NEGATIVE-SHORT-FLOAT -1.4012985f-45)
(DEFCONSTANT CL::LEAST-NEGATIVE-SINGLE-FLOAT -1.4012985f-45)
(DEFCONSTANT CL::LEAST-POSITIVE-DOUBLE-FLOAT 4.9406564584124654d-324)
(DEFCONSTANT CL::LEAST-POSITIVE-LONG-FLOAT 4.9406564584124654d-324)
(DEFCONSTANT CL::LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT 2.2250738585072014d-308)
(DEFCONSTANT CL::LEAST-POSITIVE-NORMALIZED-LONG-FLOAT 2.2250738585072014d-308)
(DEFCONSTANT CL::LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT 1.17549435s-38)
(DEFCONSTANT CL::LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT 1.17549435f-38)
(DEFCONSTANT CL::LEAST-POSITIVE-SHORT-FLOAT 1.4012985s-45)
(DEFCONSTANT CL::LEAST-POSITIVE-SINGLE-FLOAT 1.4012985f-45)
(DEFCONSTANT CL::LONG-FLOAT-EPSILON 1.1102230246251568d-16)
(DEFCONSTANT CL::LONG-FLOAT-NEGATIVE-EPSILON 5.551115123125784d-17)
(DEFCONSTANT CL::MOST-NEGATIVE-DOUBLE-FLOAT -1.7976931348623157d308)
(DEFCONSTANT CL::MOST-NEGATIVE-FIXNUM -4611686018427387904)
(DEFCONSTANT CL::MOST-NEGATIVE-LONG-FLOAT -1.7976931348623157d308)
(DEFCONSTANT CL::MOST-NEGATIVE-SHORT-FLOAT -3.4028235e38)
(DEFCONSTANT CL::MOST-NEGATIVE-SHORT-FLOAT -3.4028235f38)
(DEFCONSTANT CL::MOST-NEGATIVE-SHORT-FLOAT -3.4028s38)
(DEFCONSTANT CL::MOST-NEGATIVE-SINGLE-FLOAT -3.4028235e38)
(DEFCONSTANT CL::MOST-NEGATIVE-SINGLE-FLOAT -3.4028235f38)
(DEFCONSTANT CL::MOST-POSITIVE-DOUBLE-FLOAT 1.7976931348623157d308)
(DEFCONSTANT CL::MOST-POSITIVE-FIXNUM 2147483647)
(DEFCONSTANT CL::MOST-POSITIVE-FIXNUM 281474976710655)
(DEFCONSTANT CL::MOST-POSITIVE-FIXNUM 4611686018427387903)
(DEFCONSTANT CL::MOST-POSITIVE-LONG-FLOAT 1.7976931348623157d308)
(DEFCONSTANT CL::MOST-POSITIVE-SHORT-FLOAT 3.4028235e38)
(DEFCONSTANT CL::MOST-POSITIVE-SHORT-FLOAT 3.4028235f38)
(DEFCONSTANT CL::MOST-POSITIVE-SHORT-FLOAT 3.4028s38)
(DEFCONSTANT CL::MOST-POSITIVE-SINGLE-FLOAT 3.4028235e38)
(DEFCONSTANT CL::MOST-POSITIVE-SINGLE-FLOAT 3.4028235f38)

(DEFCONSTANT CL::SHORT-FLOAT-EPSILON 5.960465s-8)
(DEFCONSTANT CL::SHORT-FLOAT-NEGATIVE-EPSILON 2.9802326s-8)
(DEFCONSTANT CL::SINGLE-FLOAT-EPSILON 5.960465e-8)
(DEFCONSTANT CL::SINGLE-FLOAT-NEGATIVE-EPSILON 2.9802326f-8)
(DEFPARAMETER CL::LEAST-NEGATIVE-LONG-FLOAT -5.676615526003731344L-646456994)
(DEFPARAMETER CL::LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT -5.676615526003731344L-646456994)
(DEFPARAMETER CL::LEAST-POSITIVE-LONG-FLOAT 5.676615526003731344L-646456994)
(DEFPARAMETER CL::LEAST-POSITIVE-NORMALIZED-LONG-FLOAT 5.676615526003731344L-646456994)
(DEFPARAMETER CL::MOST-NEGATIVE-LONG-FLOAT -8.8080652584198167656L646456992)
(DEFPARAMETER CL::MOST-POSITIVE-LONG-FLOAT 8.8080652584198167656L646456992)

(DEFPARAMETER CL::LONG-FLOAT-EPSILON 5.4210108624275221706L-20)
(DEFPARAMETER CL::LONG-FLOAT-NEGATIVE-EPSILON 2.7105054312137610853L-20)
 (DEFCONSTANT CL::PI 3.141592653589793d0)
(DEFPARAMETER CL::PI 3.1415926535897932385L0)


#|

;; (DEFPARAMETER SYS::SPECDECL #<SPECIAL REFERENCE>)
(DEFPARAMETER SYS::*KNOWN-TYPES* #<EQ HASH-TABLE 81 entries, 176 buckets {45A5B1D0}>)
(DEFCONSTANT EXT::DOUBLE-FLOAT-NEGATIVE-INFINITY #.EXT::DOUBLE-FLOAT-NEGATIVE-INFINITY)
(DEFCONSTANT EXT::DOUBLE-FLOAT-POSITIVE-INFINITY #.EXT::DOUBLE-FLOAT-POSITIVE-INFINITY)
(DEFCONSTANT EXT::SINGLE-FLOAT-NEGATIVE-INFINITY #.EXT::SINGLE-FLOAT-NEGATIVE-INFINITY)
(DEFCONSTANT EXT::SINGLE-FLOAT-POSITIVE-INFINITY #.EXT::SINGLE-FLOAT-POSITIVE-INFINITY)
(DEFCONSTANT SYS::*PROCLAIMED-FTYPES* #<EQUAL HASH-TABLE 0 entries, 11 buckets {186AE00F}>)
(DEFPARAMETER SYS::*COMPILER-MACROS* #<EQUAL HASH-TABLE 15 entries, 22 buckets {1B4B370A}>)
(DEFPARAMETER CL::*PRINT-PPRINT-DISPATCH* #S(XP::PPRINT-DISPATCH-TABLE :CONSES-WITH-CARS #<EQ HASH-TABLE 57 entries, 114 buckets {5438921F}> :STRUCTURES #<EQ HASH-TABLE 1 entry, 32 buckets {4F66E4EF}> :OTHERS (#S(XP::ENTRY :TEST (CL::LAMBDA (XP::X) (CL::FUNCALL (CL::FUNCTION XP::FUNCTION-CALL-P) XP::X)) :FN XP::FN-CALL :FULL-SPEC ((-5) (CL::SATISFIES XP::FUNCTION-CALL-P))) #S(XP::ENTRY :TEST #<CL::COMPILED-FUNCTION CONSP> {77813CB2}> :FN CL::PPRINT-FILL :FULL-SPEC ((-10) CL::CONS)))))
(DEFCONSTANT SYS::+CL-PACKAGE+ #<PACKAGE COMMON-LISP>)
(DEFCONSTANT SYS::+KEYWORD-PACKAGE+ #<PACKAGE KEYWORD>)
(DEFCONSTANT SYS::+SLOT-UNBOUND+ #<UNBOUND>)
(DEFCONSTANT SYS::+STANDARD-READTABLE+ #<org.armedbear.lisp.Readtable@5bc92458>)
(DEFPARAMETER CLOS::*EQ-SPECIALIZER-TABLE* #<CL::HASH-TABLE :TEST EXT:STABLEHASH-EQ :WEAK :KEY (:HTTP . #1=#<CLOS:EQL-SPECIALIZER :HTTP>) (:TTY . #2=#<CLOS:EQL-SPECIALIZER :TTY>) (EXT:CLHS . #3=#<CLOS:EQL-SPECIALIZER EXT:CLHS>) (SYS::IMPNOTES . #4=#<CLOS:EQL-SPECIALIZER SYS::IMPNOTES>) (#5=#<CLOS:BUILT-IN-CLASS CL::STREAM> . #6=#<CLOS:EQL-SPECIALIZER #5#>) (CLOS:METHOD-COMBINATION . #7=#<CLOS:EQL-SPECIALIZER CLOS:METHOD-COMBINATION>) (CLOS:CLASS . #8=#<CLOS:EQL-SPECIALIZER CLOS:CLASS>) (CL::STRUCTURE . #9=#<CLOS:EQL-SPECIALIZER CL::STRUCTURE>) (CL::TYPE . #10=#<CLOS:EQL-SPECIALIZER CL::TYPE>) (CL::COMPILER-MACRO . #11=#<CLOS:EQL-SPECIALIZER CL::COMPILER-MACRO>) (CL::FUNCTION . #12=#<CLOS:EQL-SPECIALIZER CL::FUNCTION>) (T . #13=#<CLOS:EQL-SPECIALIZER T>) (#14=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:FIND-METHOD-COMBINATION> . #15=#<CLOS:EQL-SPECIALIZER #14#>) (#16=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:FINALIZE-INHERITANCE> . #17=#<CLOS:EQL-SPECIALIZER #16#>) (#18=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-FINALIZED-P> . #19=#<CLOS:EQL-SPECIALIZER #18#>) (#20=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-PROTOTYPE> . #21=#<CLOS:EQL-SPECIALIZER #20#>) (#22=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-DEFAULT-INITARGS> . #23=#<CLOS:EQL-SPECIALIZER #22#>) (#24=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-DIRECT-DEFAULT-INITARGS> . #25=#<CLOS:EQL-SPECIALIZER #24#>) (#26=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-SLOTS> . #27=#<CLOS:EQL-SPECIALIZER #26#>) (#28=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-DIRECT-SLOTS> . #29=#<CLOS:EQL-SPECIALIZER #28#>) (#30=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-PRECEDENCE-LIST> . #31=#<CLOS:EQL-SPECIALIZER #30#>) (#32=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:CLASS-DIRECT-SUPERCLASSES> . #33=#<CLOS:EQL-SPECIALIZER #32#>) (#34=#<CLOS:STANDARD-GENERIC-FUNCTION (CL::SETF CLOS:CLASS-NAME)> . #35=#<CLOS:EQL-SPECIALIZER #34#>) (#36=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-LOCATION> . #37=#<CLOS:EQL-SPECIALIZER #36#>) (#38=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-WRITERS> . #39=#<CLOS:EQL-SPECIALIZER #38#>) (#40=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-READERS> . #41=#<CLOS:EQL-SPECIALIZER #40#>) (#42=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-ALLOCATION> . #43=#<CLOS:EQL-SPECIALIZER #42#>) (#44=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-TYPE> . #45=#<CLOS:EQL-SPECIALIZER #44#>) (#46=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-INITARGS> . #47=#<CLOS:EQL-SPECIALIZER #46#>) (#48=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-INITFUNCTION> . #49=#<CLOS:EQL-SPECIALIZER #48#>) (#50=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-INITFORM> . #51=#<CLOS:EQL-SPECIALIZER #50#>) (#52=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-DEFINITION-NAME> . #53=#<CLOS:EQL-SPECIALIZER #52#>) (#54=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:ACCESSOR-METHOD-SLOT-DEFINITION> . #55=#<CLOS:EQL-SPECIALIZER #54#>) (#56=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-GENERIC-FUNCTION> . #57=#<CLOS:EQL-SPECIALIZER #56#>) (#58=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-SPECIALIZERS> . #59=#<CLOS:EQL-SPECIALIZER #58#>) (#60=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-LAMBDA-LIST> . #61=#<CLOS:EQL-SPECIALIZER #60#>) (#62=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-FUNCTION> . #63=#<CLOS:EQL-SPECIALIZER #62#>) (#64=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-DECLARATIONS> . #65=#<CLOS:EQL-SPECIALIZER #64#>) (#66=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER> . #67=#<CLOS:EQL-SPECIALIZER #66#>) (#68=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHOD-COMBINATION> . #69=#<CLOS:EQL-SPECIALIZER #68#>) (#70=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-LAMBDA-LIST> . #71=#<CLOS:EQL-SPECIALIZER #70#>) (#72=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHOD-CLASS> . #73=#<CLOS:EQL-SPECIALIZER #72#>) (#74=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHODS> . #75=#<CLOS:EQL-SPECIALIZER #74#>) (#76=#<CLOS:STANDARD-GENERIC-FUNCTION (CL::SETF CLOS:GENERIC-FUNCTION-NAME)> . #77=#<CLOS:EQL-SPECIALIZER #76#>) (#78=#<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-NAME> . #79=#<CLOS:EQL-SPECIALIZER #78#>) (() . #80=#<CLOS:EQL-SPECIALIZER ()>)>)
(DEFPARAMETER CLOS::*EQL-SPECIALIZER-TABLE* #S(CL::HASH-TABLE :TEST EXT::FASTHASH-EQL :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::*EXTENDED-METHOD-CHECK-METHOD* #1=#<CLOS:STANDARD-METHOD ((CL::EQL ()) #2=#<CLOS:BUILT-IN-CLASS T> #2#)>)
(DEFPARAMETER CLOS::*MAKE-INSTANCE-TABLE* #S(CL::HASH-TABLE :TEST EXT:STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T (#1=#<CLOS:STANDARD-CLASS SYS::SIMPLE-PRINT-NOT-READABLE> . #((:OBJECT :FORMAT-CONTROL :FORMAT-ARGUMENTS) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%INITIALIZE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#2=#<CLOS:STANDARD-CLASS EXT:FILL-STREAM> . #((:STREAM :SEXP-INDENT :TEXT-INDENT) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%INITIALIZE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#3=#<CLOS:STANDARD-CLASS CL::SIMPLE-WARNING> . #((:FORMAT-CONTROL :FORMAT-ARGUMENTS) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%INITIALIZE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#4=#<CLOS:STANDARD-CLASS CL::SIMPLE-ERROR> . #((:FORMAT-CONTROL :FORMAT-ARGUMENTS) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%INITIALIZE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#5=#<CLOS:STANDARD-CLASS CLOS:STRUCTURE-CLASS> . #(T #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<COMPILED-FUNCTION CLOS::INITIALIZE-INSTANCE-<EMF-3>-1> #6=#<COMPILED-FUNCTION #:|39 56 (DEFMETHOD SHARED-INITIALIZE (# SITUATION &REST ..) ..)-6-1-1|>)) (#7=#<CLOS:STANDARD-CLASS CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION> . #((:NAME :INITARGS :TYPE :ALLOCATION CLOS::INHERITABLE-INITER CLOS::INHERITABLE-DOC :READERS :WRITERS :INITFORM :INITFUNCTION :DOCUMENTATION CLOS::DEFCLASS-FORM) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #8=#<COMPILED-FUNCTION #:|62 65 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS) ..)-8-1-1|> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#9=#<CLOS:STANDARD-CLASS CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION> . #((:NAME :INITARGS :TYPE :ALLOCATION CLOS::INHERITABLE-INITER CLOS::INHERITABLE-DOC CLOS::LOCATION CLOS::READONLY :INITFORM :INITFUNCTION :DOCUMENTATION) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #10=#<COMPILED-FUNCTION #:|73 74 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS) ..)-11-1-1|> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#11=#<CLOS:STANDARD-CLASS CLOS:STANDARD-READER-METHOD> . #(T #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #12=#<COMPILED-FUNCTION #:|38 42 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS ..) ..)-4-1-1|> #13=#<COMPILED-FUNCTION #:|8 14 (DEFMETHOD SHARED-INITIALIZE (# SITUATION &REST ..) ..)-2-1-1|>)) (#14=#<CLOS:STANDARD-CLASS CLOS:STANDARD-EFFECTIVE-SLOT-DEFINITION> . #((:NAME :INITARGS :TYPE :ALLOCATION CLOS::INHERITABLE-INITER CLOS::INHERITABLE-DOC CLOS::LOCATION :INITFORM :INITFUNCTION :DOCUMENTATION) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #15=#<COMPILED-FUNCTION #:|57 60 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS) ..)-7-1-1|> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#16=#<CLOS:STANDARD-CLASS CLOS:STANDARD-DIRECT-SLOT-DEFINITION> . #((:NAME :INITARGS :TYPE :ALLOCATION CLOS::INHERITABLE-INITER CLOS::INHERITABLE-DOC :READERS :WRITERS :INITFORM :INITFUNCTION :DOCUMENTATION CLOS::DEFCLASS-FORM) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #17=#<COMPILED-FUNCTION #:|48 55 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS) ..)-6-1-1|> #<SYSTEM-FUNCTION CLOS::%SHARED-INITIALIZE>)) (#18=#<CLOS:STANDARD-CLASS CLOS:STANDARD-CLASS> . #((:NAME :DIRECT-SUPERCLASSES :DIRECT-SLOTS :DIRECT-DEFAULT-INITARGS :DOCUMENTATION :FIXED-SLOT-LOCATIONS :GENERIC-ACCESSORS) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<COMPILED-FUNCTION CLOS::INITIALIZE-INSTANCE-<EMF-2>-1> #19=#<COMPILED-FUNCTION #:|58 68 (DEFMETHOD SHARED-INITIALIZE (# SITUATION &REST ..) ..)-7-1-1|>)) (#20=#<CLOS:STANDARD-CLASS CLOS:EQL-SPECIALIZER> . #((CLOS::SINGLETON) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #<SYSTEM-FUNCTION CLOS::%INITIALIZE-INSTANCE> #21=#<COMPILED-FUNCTION #:|18 23 (DEFMETHOD SHARED-INITIALIZE (# SITUATION &REST ..) ..)-4-1-1|>)) (#22=#<CLOS:FUNCALLABLE-STANDARD-CLASS CLOS:STANDARD-GENERIC-FUNCTION> . #((:NAME :LAMBDA-LIST :ARGUMENT-PRECEDENCE-ORDER :METHOD-CLASS :METHOD-COMBINATION :DOCUMENTATION :DECLARATIONS :DECLARE CLOS::METHODS) #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #23=#<COMPILED-FUNCTION #:|33 46 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS ..) ..)-4-1-1|> #24=#<COMPILED-FUNCTION #:|20 31 (DEFMETHOD SHARED-INITIALIZE (# SITUATION &REST ..) ..)-3-1-1|>)) (#25=#<CLOS:STANDARD-CLASS CLOS:STANDARD-METHOD> . #(T #<SYSTEM-FUNCTION CLOS::%ALLOCATE-INSTANCE> #26=#<COMPILED-FUNCTION #:|20 36 (DEFMETHOD INITIALIZE-INSTANCE (# &REST ARGS ..) ..)-3-1-1|> #13#))))
(DEFPARAMETER CLOS::*MAKE-INSTANCES-OBSOLETE-CALLER* CLOS::MAKE-INSTANCES-OBSOLETE)
(DEFCONSTANT SYS::C-FORM-TABLE #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T (CL::DEPOSIT-FIELD . SYS::C-DEPOSIT-FIELD) (CL::DPB . SYS::C-DPB) (CL::MASK-FIELD . SYS::C-MASK-FIELD) (CL::LDB-TEST . SYS::C-LDB-TEST) (CL::LDB . SYS::C-LDB) (CL::CONCATENATE . SYS::C-CONCATENATE) (CL::REMOVE-DUPLICATES . SYS::C-TEST/TEST-NOT) (CL::NINTERSECTION . SYS::C-TEST/TEST-NOT) (CL::UNION . SYS::C-TEST/TEST-NOT) (CL::REMOVE . SYS::C-TEST/TEST-NOT) (CL::MISMATCH . SYS::C-TEST/TEST-NOT) (CL::TREE-EQUAL . SYS::C-TEST/TEST-NOT) (CL::RASSOC . SYS::C-TEST/TEST-NOT) (CL::MEMBER . SYS::C-TEST/TEST-NOT) (CL::SUBSTITUTE . SYS::C-TEST/TEST-NOT) (CL::POSITION . SYS::C-TEST/TEST-NOT) (CL::INTERSECTION . SYS::C-TEST/TEST-NOT) (CL::SUBST . SYS::C-TEST/TEST-NOT) (CL::NUNION . SYS::C-TEST/TEST-NOT) (CL::FIND . SYS::C-TEST/TEST-NOT) (CL::SUBSETP . SYS::C-TEST/TEST-NOT) (CL::NSUBSTITUTE . SYS::C-TEST/TEST-NOT) (CL::DELETE-DUPLICATES . SYS::C-TEST/TEST-NOT) (CL::SUBLIS . SYS::C-TEST/TEST-NOT) (CL::NSUBST . SYS::C-TEST/TEST-NOT) (CL::DELETE . SYS::C-TEST/TEST-NOT) (CL::SET-EXCLUSIVE-OR . SYS::C-TEST/TEST-NOT) (CL::NSUBLIS . SYS::C-TEST/TEST-NOT) (CL::COUNT . SYS::C-TEST/TEST-NOT) (CL::SET-DIFFERENCE . SYS::C-TEST/TEST-NOT) (CL::NSET-EXCLUSIVE-OR . SYS::C-TEST/TEST-NOT) (CL::ASSOC . SYS::C-TEST/TEST-NOT) (CL::SEARCH . SYS::C-TEST/TEST-NOT) (CL::NSET-DIFFERENCE . SYS::C-TEST/TEST-NOT) (CL::ADJOIN . SYS::C-TEST/TEST-NOT) (CL::RASSOC-IF-NOT . SYS::C-RASSOC-IF-NOT) (CL::RASSOC-IF . SYS::C-RASSOC-IF) (CL::ASSOC-IF-NOT . SYS::C-ASSOC-IF-NOT) (CL::ASSOC-IF . SYS::C-ASSOC-IF) (CL::MEMBER-IF-NOT . SYS::C-MEMBER-IF-NOT) (CL::MEMBER-IF . SYS::C-MEMBER-IF) (CL::NSUBST-IF-NOT . SYS::C-NSUBST-IF-NOT) (CL::NSUBST-IF . SYS::C-NSUBST-IF) (CL::SUBST-IF-NOT . SYS::C-SUBST-IF-NOT) (CL::SUBST-IF . SYS::C-SUBST-IF) (CL::COUNT-IF-NOT . SYS::C-COUNT-IF-NOT) (CL::COUNT-IF . SYS::C-COUNT-IF) (CL::POSITION-IF-NOT . SYS::C-POSITION-IF-NOT) (CL::POSITION-IF . SYS::C-POSITION-IF) (CL::FIND-IF-NOT . SYS::C-FIND-IF-NOT) (CL::FIND-IF . SYS::C-FIND-IF) (CL::NSUBSTITUTE-IF-NOT . SYS::C-NSUBSTITUTE-IF-NOT) (CL::NSUBSTITUTE-IF . SYS::C-NSUBSTITUTE-IF) (CL::SUBSTITUTE-IF-NOT . SYS::C-SUBSTITUTE-IF-NOT) (CL::SUBSTITUTE-IF . SYS::C-SUBSTITUTE-IF) (CL::DELETE-IF-NOT . SYS::C-DELETE-IF-NOT) (CL::DELETE-IF . SYS::C-DELETE-IF) (CL::REMOVE-IF-NOT . SYS::C-REMOVE-IF-NOT) (CL::REMOVE-IF . SYS::C-REMOVE-IF) (CL::NOTEVERY . SYS::C-NOTEVERY) (CL::NOTANY . SYS::C-NOTANY) (CL::EVERY . SYS::C-EVERY) (CL::SOME . SYS::C-SOME) (CL::MAP-INTO . SYS::C-MAP-INTO) (CL::MAP . SYS::C-MAP) (SETNTH . SYS::C-SETNTH) (CL::NTH . SYS::C-NTH) (CL::STABLE-SORT . SYS::C-SORT) (CL::SORT . SYS::C-SORT) (CL::FORMAT . SYS::C-FORMAT) (CL::TYPEP . SYS::C-TYPEP) (EXT::MAPLAP . SYS::C-MAPLAP) (EXT::MAPCAP . SYS::C-MAPCAP) (CL::MAPCON . SYS::C-MAPCON) (CL::MAPCAN . SYS::C-MAPCAN) (CL::MAPL . SYS::C-MAPL) (CL::MAPC . SYS::C-MAPC) (CL::MAPLIST . SYS::C-MAPLIST) (CL::MAPCAR . SYS::C-MAPCAR) (CL::EQUAL . SYS::C-EQUAL) (CL::EQL . SYS::C-EQL) (CL::EQ . SYS::C-EQ) (SYS::SVSTORE . SYS::C-SVSTORE) (CL::>= . SYS::C-COMPARE-NUMBERS) (CL::> . SYS::C-COMPARE-NUMBERS) (CL::<= . SYS::C-COMPARE-NUMBERS) (CL::< . SYS::C-COMPARE-NUMBERS) (CL::/= . SYS::C-COMPARE-NUMBERS) (CL::= . SYS::C-COMPARE-NUMBERS) (CL::/ . SYS::C-SLASH) (CL::- . SYS::C-MINUS) (CL::* . SYS::C-STAR) (CL::+ . SYS::C-PLUS) (CL::APPLY . SYS::C-APPLY) (CL::FUNCALL . SYS::C-FUNCALL) (EXT::WITHOUT-PACKAGE-LOCK . SYS::C-WITHOUT-PACKAGE-LOCK) (SYS::CONSTANT-EQL . SYS::C-CONSTANT-EQL) (HANDLER-BIND . SYS::C-HANDLER-BIND) (CLOS::GENERIC-LABELS . SYS::C-GENERIC-LABELS) (CLOS::GENERIC-FLET . SYS::C-GENERIC-FLET) (OPTIMIZE-FUNCTION-LAMBDA . SYS::C-%OPTIMIZE-FUNCTION-LAMBDA) (GENERIC-FUNCTION-LAMBDA . SYS::C-%GENERIC-FUNCTION-LAMBDA) (CL::LOCALLY . SYS::C-LOCALLY) (EXT::COMPILE-TIME-VALUE . SYS::C-COMPILE-TIME-VALUE) (CL::LOAD-TIME-VALUE . SYS::C-LOAD-TIME-VALUE) (CL::DECLARE . SYS::C-DECLARE) (CL::EVAL-WHEN . SYS::C-EVAL-WHEN) (EXT::COMPILER-LET . SYS::C-COMPILER-LET) (CL::SYMBOL-MACROLET . SYS::C-SYMBOL-MACROLET) (SYS::FUNCTION-MACRO-LET . SYS::C-FUNCTION-MACRO-LET) (CL::MACROLET . SYS::C-MACROLET) (CL::LABELS . SYS::C-LABELS) (CL::FLET . SYS::C-FLET) (CL::MULTIPLE-VALUE-PROG1 . SYS::C-MULTIPLE-VALUE-PROG1) (CL::MULTIPLE-VALUE-LIST . SYS::C-MULTIPLE-VALUE-LIST) (CL::PROGV . SYS::C-PROGV) (CL::UNWIND-PROTECT . SYS::C-UNWIND-PROTECT) (CL::THROW . SYS::C-THROW) (CL::CATCH . SYS::C-CATCH) (CL::THE . SYS::C-THE) (CL::PROG2 . SYS::C-PROG2) (CL::PROG1 . SYS::C-PROG1) (CL::MULTIPLE-VALUE-CALL . SYS::C-MULTIPLE-VALUE-CALL) (CL::PSETQ . SYS::C-PSETQ) (EXT::FCASE . SYS::C-CASE) (CL::CASE . SYS::C-CASE) (CL::COND . SYS::C-COND) (CL::UNLESS . SYS::C-UNLESS) (CL::WHEN . SYS::C-WHEN) (CL::OR . SYS::C-OR) (CL::AND . SYS::C-AND) (CL::MULTIPLE-VALUE-SETQ . SYS::C-MULTIPLE-VALUE-SETQ) (CL::MULTIPLE-VALUE-BIND . SYS::C-MULTIPLE-VALUE-BIND) (CL::FUNCTION . SYS::C-FUNCTION) (CL::GO . SYS::C-GO) (CL::TAGBODY . SYS::C-TAGBODY) (CL::RETURN-FROM . SYS::C-RETURN-FROM) (CL::BLOCK . SYS::C-BLOCK) (CL::SETQ . SYS::C-SETQ) (CL::IF . SYS::C-IF) (CL::LET* . #Y(#:2105 2263 (DEFCONSTANT C-FORM-TABLE (LET # # ..))-172-2 #15Y(00 00 00 00 00 00 00 00 00 01 64 2F 00 19 01) (SYS::C-LET/LET*) (T T T))) (CL::LET . #Y(#:2105 2263 (DEFCONSTANT C-FORM-TABLE (LET # # ..))-172-1 #15Y(00 00 00 00 00 00 00 00 00 01 63 2F 00 19 01) (SYS::C-LET/LET*) (T T T))) (CL::PROGN . SYS::C-PROGN) (CL::QUOTE . SYS::C-QUOTE)))

;; (DEFCONSTANT CL::CHAR-CODE-LIMIT 1114112)

|#

;;(DEFCONSTANT SYS::FOR-VALUE-TABLE #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T (SYS::UNWIND-PROTECT-NORMAL-EXIT . SYS::ALL) (CL::THROW . SYS::ALL) (SYS::RETURN-FROM-I . SYS::ALL) (CL::RETURN-FROM . SYS::ALL) (SYS::MV-TO-LIST . SYS::ALL) (SYS::NV-TO-STACK . SYS::ALL) (SYS::MV-TO-STACK . SYS::ALL) (CL::LIST* . SYS::ONE) (SYS::SVSET . SYS::ONE) (CL::SVREF . SYS::ONE) (CL::SYMBOL-FUNCTION . SYS::ONE) (CL::CONSP . SYS::ONE) (CL::ATOM . SYS::ONE) (CL::CONS . SYS::ONE) (CL::CDR . SYS::ONE) (CL::CAR . SYS::ONE) (CL::EQ . SYS::ONE) (CL::NOT . SYS::ONE) (SYS::CATCH-OPEN . SYS::ONE) (SYS::MVCALLP . SYS::ONE) (SYS::LIST-TO-MV . SYS::ONE) (SYS::VALUES1 . SYS::ONE) (SYS::UNLIST* . SYS::ONE) (SYS::UNLIST . SYS::ONE) (CL::APPLY . SYS::ONE) (SYS::CALLCKEY . SYS::ONE) (SYS::CALLC . SYS::ONE) (SYS::CALL2 . SYS::ONE) (SYS::CALL1 . SYS::ONE) (SYS::MAKE-VECTOR1&PUSH . SYS::ONE) (CL::PUSH . SYS::ONE) (CL::PROGV . SYS::ONE) (SYS::BIND . SYS::ONE) (SYS::SETVALUE . SYS::ONE) (SYS::STOREIC . SYS::ONE) (SYS::STOREV . SYS::ONE) (SYS::STOREC . SYS::ONE) (SYS::STOREI . SYS::ONE) (SYS::STORE . SYS::ONE) (CL::LIST . ()) (SYS::HANDLER-BEGIN . ()) (SYS::HANDLER-OPEN . ()) (SYS::UNWIND-PROTECT-CLOSE . ()) (SYS::UNWIND-PROTECT-OPEN . ()) (SYS::GO-I . ()) (CL::GO . ()) (SYS::TAGBODY-CLOSE-NIL . ()) (SYS::TAGBODY-OPEN . ()) (SYS::BLOCK-OPEN . ()) (SYS::MVCALL . ()) (SYS::STACK-TO-MV . ()) (SYS::VALUES0 . ()) (CL::BOUNDP . ()) (SYS::JMPIFBOUNDP . ()) (SYS::PUSH-UNBOUND . ()) (CL::FUNCALL . ()) (SYS::CALLSR . ()) (SYS::CALLS2 . ()) (SYS::CALLS1 . ()) (SYS::CALL0 . ()) (SYS::CALL . ()) (SYS::COPY-CLOSURE . ()) (SYS::VENV . ()) (SYS::BARRIER . ()) (SYS::JMPTAIL . ()) (SYS::JSR . ()) (CL::POP . ()) (SYS::GETVALUE . ()) (SYS::LOADIC . ()) (SYS::LOADV . ()) (SYS::LOADC . ()) (SYS::LOADI . ()) (CL::LOAD . ()) (SYS::CONST . ()) (T . ()) (SYS::PUSH-NIL . ()) (() . ())))
;;(DEFCONSTANT SYS::INSTRUCTION-CODES #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T (SYS::FUNCALL&SKIP&RETGF . 156) (SYS::APPLY&SKIP&RET . 155) (SYS::CONST&SYMBOL-FUNCTION&STORE . 154) (SYS::CONST&SYMBOL-FUNCTION&PUSH . 153) (SYS::CONST&SYMBOL-FUNCTION . 152) (SYS::LOAD&DEC&PUSH . 151) (SYS::LOAD&INC&PUSH . 150) (SYS::LOAD&CDR&PUSH . 149) (SYS::LOAD&CAR&PUSH . 148) (SYS::LOAD&JMPIFNOT . 147) (SYS::LOAD&JMPIF . 146) (SYS::CALLSR&JMPIFNOT . 145) (SYS::CALLSR&JMPIF . 144) (SYS::CALLS2&JMPIFNOT . 143) (SYS::CALLS2&JMPIF . 142) (SYS::CALLS1&JMPIFNOT . 141) (SYS::CALLS1&JMPIF . 140) (SYS::CALL2&JMPIFNOT . 139) (SYS::CALL2&JMPIF . 138) (SYS::CALL1&JMPIFNOT . 137) (SYS::CALL1&JMPIF . 136) (SYS::LOAD&CAR&STORE . 135) (SYS::LOAD&DEC&STORE . 134) (SYS::LOAD&INC&STORE . 133) (SYS::LOAD&CONS&STORE . 132) (SYS::LOAD&CDR&STORE . 131) (SYS::CALLSR&STORE . 130) (SYS::CALLS2&STORE . 129) (SYS::CALLS1&STORE . 128) (SYS::LOAD&STOREC . 127) (SYS::T&STORE . 126) (SYS::NIL&STORE . 125) (SYS::LIST*&PUSH . 124) (SYS::LIST&PUSH . 123) (SYS::CONS&PUSH . 122) (SYS::CDR&PUSH . 121) (SYS::CAR&PUSH . 120) (SYS::APPLY&PUSH . 119) (SYS::FUNCALL&PUSH . 118) (SYS::CALLCKEY&PUSH . 117) (SYS::CALLC&PUSH . 116) (SYS::CALLSR&PUSH . 115) (SYS::CALLS2&PUSH . 114) (SYS::CALLS1&PUSH . 113) (SYS::CALL2&PUSH . 112) (SYS::CALL1&PUSH . 111) (SYS::CALL&PUSH . 110) (SYS::COPY-CLOSURE&PUSH . 109) (SYS::JSR&PUSH . 108) (SYS::GETVALUE&PUSH . 107) (SYS::POP&STORE . 106) (SYS::LOADV&PUSH . 105) (SYS::LOADC&PUSH . 104) (SYS::LOADI&PUSH . 103) (SYS::LOAD&PUSH . 102) (SYS::CONST&PUSH . 101) (SYS::T&PUSH . 100) (SYS::NIL&PUSH . 99) (CL::LIST* . 98) (CL::LIST . 97) (SYS::SVSET . 96) (CL::SVREF . 95) (CL::SYMBOL-FUNCTION . 94) (CL::CONS . 93) (CL::CDR . 92) (CL::CAR . 91) (CL::EQ . 90) (CL::NOT . 89) (SYS::HANDLER-BEGIN&PUSH . 88) (SYS::HANDLER-OPEN . 87) (SYS::UNWIND-PROTECT-CLEANUP . 86) (SYS::UNWIND-PROTECT-CLOSE . 85) (SYS::UNWIND-PROTECT-NORMAL-EXIT . 84) (SYS::UNWIND-PROTECT-OPEN . 83) (CL::THROW . 82) (SYS::CATCH-CLOSE . 81) (SYS::CATCH-OPEN . 80) (SYS::GO-I . 79) (CL::GO . 78) (SYS::TAGBODY-CLOSE . 77) (SYS::TAGBODY-CLOSE-NIL . 76) (SYS::TAGBODY-OPEN . 75) (SYS::RETURN-FROM-I . 74) (CL::RETURN-FROM . 73) (SYS::BLOCK-CLOSE . 72) (SYS::BLOCK-OPEN . 71) (SYS::MVCALL . 70) (SYS::MVCALLP . 69) (SYS::LIST-TO-MV . 68) (SYS::MV-TO-LIST . 67) (SYS::NV-TO-STACK . 66) (SYS::MV-TO-STACK . 65) (SYS::STACK-TO-MV . 64) (SYS::VALUES1 . 63) (SYS::VALUES0 . 62) (SYS::UNBOUND->NIL . 61) (CL::BOUNDP . 60) (SYS::JMPIFBOUNDP . 59) (SYS::UNLIST* . 58) (SYS::UNLIST . 57) (SYS::PUSH-UNBOUND . 56) (CL::APPLY . 55) (CL::FUNCALL . 54) (SYS::CALLCKEY . 53) (SYS::CALLC . 52) (SYS::CALLSR . 51) (SYS::CALLS2 . 50) (SYS::CALLS1 . 49) (SYS::CALL2 . 48) (SYS::CALL1 . 47) (SYS::CALL0 . 46) (SYS::CALL . 45) (SYS::COPY-CLOSURE . 44) (SYS::MAKE-VECTOR1&PUSH . 43) (SYS::VENV . 42) (SYS::JMPTAIL . 41) (SYS::JSR . 40) (SYS::JMPHASHV . 39) (SYS::JMPHASH . 38) (SYS::JMPIFNOTEQTO . 37) (SYS::JMPIFEQTO . 36) (SYS::JMPIFNOTEQ . 35) (SYS::JMPIFEQ . 34) (SYS::JMPIFCONSP . 33) (SYS::JMPIFATOM . 32) (SYS::JMPIFNOT1 . 31) (SYS::JMPIF1 . 30) (SYS::JMPIFNOT . 29) (SYS::JMPIF . 28) (SYS::JMP . 27) (SYS::SKIP&RETGF . 26) (SYS::SKIP&RET . 25) (SYS::SKIPSP . 24) (SYS::SKIPI . 23) (SYS::SKIP . 22) (CL::POP . 21) (CL::PUSH . 20) (CL::PROGV . 19) (SYS::UNBIND . 18) (SYS::UNBIND1 . 17) (SYS::BIND . 16) (SYS::SETVALUE . 15) (SYS::GETVALUE . 14) (SYS::STOREIC . 13) (SYS::STOREV . 12) (SYS::STOREC . 11) (SYS::STOREI . 10) (SYS::STORE . 9) (SYS::LOADIC . 8) (SYS::LOADV . 7) (SYS::LOADC . 6) (SYS::LOADI . 5) (CL::LOAD . 4) (SYS::CONST . 3) (T . 2) (SYS::PUSH-NIL . 1) (() . 0)))
;;(DEFCONSTANT SYS::INSTRUCTION-TABLE #((() SYS::O) (SYS::PUSH-NIL SYS::N) (T SYS::O) (SYS::CONST SYS::K) (CL::LOAD SYS::K) (SYS::LOADI SYS::NNN) (SYS::LOADC SYS::NN) (SYS::LOADV SYS::NN) (SYS::LOADIC SYS::NNNN) (SYS::STORE SYS::K) (SYS::STOREI SYS::NNN) (SYS::STOREC SYS::NN) (SYS::STOREV SYS::NN) (SYS::STOREIC SYS::NNNN) (SYS::GETVALUE SYS::N) (SYS::SETVALUE SYS::N) (SYS::BIND SYS::N) (SYS::UNBIND1 SYS::O) (SYS::UNBIND SYS::N) (CL::PROGV SYS::O) (CL::PUSH SYS::O) (CL::POP SYS::O) (SYS::SKIP SYS::N) (SYS::SKIPI SYS::NNN) (SYS::SKIPSP SYS::NN) (SYS::SKIP&RET SYS::N) (SYS::SKIP&RETGF SYS::N) (SYS::JMP SYS::L) (SYS::JMPIF SYS::L) (SYS::JMPIFNOT SYS::L) (SYS::JMPIF1 SYS::L) (SYS::JMPIFNOT1 SYS::L) (SYS::JMPIFATOM SYS::L) (SYS::JMPIFCONSP SYS::L) (SYS::JMPIFEQ SYS::L) (SYS::JMPIFNOTEQ SYS::L) (SYS::JMPIFEQTO SYS::NL) (SYS::JMPIFNOTEQTO SYS::NL) (SYS::JMPHASH SYS::NHL) (SYS::JMPHASHV SYS::NHL) (SYS::JSR SYS::L) (SYS::JMPTAIL SYS::NNL) (SYS::VENV SYS::O) (SYS::MAKE-VECTOR1&PUSH SYS::N) (SYS::COPY-CLOSURE SYS::NN) (SYS::CALL SYS::NN) (SYS::CALL0 SYS::N) (SYS::CALL1 SYS::N) (SYS::CALL2 SYS::N) (SYS::CALLS1 SYS::B) (SYS::CALLS2 SYS::B) (SYS::CALLSR SYS::NB) (SYS::CALLC SYS::O) (SYS::CALLCKEY SYS::O) (CL::FUNCALL SYS::N) (CL::APPLY SYS::N) (SYS::PUSH-UNBOUND SYS::N) (SYS::UNLIST SYS::NN) (SYS::UNLIST* SYS::NN) (SYS::JMPIFBOUNDP SYS::NL) (CL::BOUNDP SYS::N) (SYS::UNBOUND->NIL SYS::N) (SYS::VALUES0 SYS::O) (SYS::VALUES1 SYS::O) (SYS::STACK-TO-MV SYS::N) (SYS::MV-TO-STACK SYS::O) (SYS::NV-TO-STACK SYS::N) (SYS::MV-TO-LIST SYS::O) (SYS::LIST-TO-MV SYS::O) (SYS::MVCALLP SYS::O) (SYS::MVCALL SYS::O) (SYS::BLOCK-OPEN SYS::NL) (SYS::BLOCK-CLOSE SYS::O) (CL::RETURN-FROM SYS::N) (SYS::RETURN-FROM-I SYS::NNN) (SYS::TAGBODY-OPEN SYS::NLX) (SYS::TAGBODY-CLOSE-NIL SYS::O) (SYS::TAGBODY-CLOSE SYS::O) (CL::GO SYS::NN) (SYS::GO-I SYS::NNNN) (SYS::CATCH-OPEN SYS::L) (SYS::CATCH-CLOSE SYS::O) (CL::THROW SYS::O) (SYS::UNWIND-PROTECT-OPEN SYS::L) (SYS::UNWIND-PROTECT-NORMAL-EXIT SYS::O) (SYS::UNWIND-PROTECT-CLOSE SYS::O) (SYS::UNWIND-PROTECT-CLEANUP SYS::O) (SYS::HANDLER-OPEN SYS::NC) (SYS::HANDLER-BEGIN&PUSH SYS::O) (CL::NOT SYS::O) (CL::EQ SYS::O) (CL::CAR SYS::O) (CL::CDR SYS::O) (CL::CONS SYS::O) (CL::SYMBOL-FUNCTION SYS::O) (CL::SVREF SYS::O) (SYS::SVSET SYS::O) (CL::LIST SYS::N) (CL::LIST* SYS::N) (SYS::NIL&PUSH SYS::O) (SYS::T&PUSH SYS::O) (SYS::CONST&PUSH SYS::K) (SYS::LOAD&PUSH SYS::K) (SYS::LOADI&PUSH SYS::NNN) (SYS::LOADC&PUSH SYS::NN) (SYS::LOADV&PUSH SYS::NN) (SYS::POP&STORE SYS::N) (SYS::GETVALUE&PUSH SYS::N) (SYS::JSR&PUSH SYS::L) (SYS::COPY-CLOSURE&PUSH SYS::NN) (SYS::CALL&PUSH SYS::NN) (SYS::CALL1&PUSH SYS::N) (SYS::CALL2&PUSH SYS::N) (SYS::CALLS1&PUSH SYS::B) (SYS::CALLS2&PUSH SYS::B) (SYS::CALLSR&PUSH SYS::NB) (SYS::CALLC&PUSH SYS::O) (SYS::CALLCKEY&PUSH SYS::O) (SYS::FUNCALL&PUSH SYS::N) (SYS::APPLY&PUSH SYS::N) (SYS::CAR&PUSH SYS::O) (SYS::CDR&PUSH SYS::O) (SYS::CONS&PUSH SYS::O) (SYS::LIST&PUSH SYS::N) (SYS::LIST*&PUSH SYS::N) (SYS::NIL&STORE SYS::N) (SYS::T&STORE SYS::N) (SYS::LOAD&STOREC SYS::NNN) (SYS::CALLS1&STORE SYS::BN) (SYS::CALLS2&STORE SYS::BN) (SYS::CALLSR&STORE SYS::NBN) (SYS::LOAD&CDR&STORE SYS::N) (SYS::LOAD&CONS&STORE SYS::N) (SYS::LOAD&INC&STORE SYS::N) (SYS::LOAD&DEC&STORE SYS::N) (SYS::LOAD&CAR&STORE SYS::NN) (SYS::CALL1&JMPIF SYS::NL) (SYS::CALL1&JMPIFNOT SYS::NL) (SYS::CALL2&JMPIF SYS::NL) (SYS::CALL2&JMPIFNOT SYS::NL) (SYS::CALLS1&JMPIF SYS::BL) (SYS::CALLS1&JMPIFNOT SYS::BL) (SYS::CALLS2&JMPIF SYS::BL) (SYS::CALLS2&JMPIFNOT SYS::BL) (SYS::CALLSR&JMPIF SYS::NBL) (SYS::CALLSR&JMPIFNOT SYS::NBL) (SYS::LOAD&JMPIF SYS::NL) (SYS::LOAD&JMPIFNOT SYS::NL) (SYS::LOAD&CAR&PUSH SYS::N) (SYS::LOAD&CDR&PUSH SYS::N) (SYS::LOAD&INC&PUSH SYS::N) (SYS::LOAD&DEC&PUSH SYS::N) (SYS::CONST&SYMBOL-FUNCTION SYS::N) (SYS::CONST&SYMBOL-FUNCTION&PUSH SYS::N) (SYS::CONST&SYMBOL-FUNCTION&STORE SYS::NN) (SYS::APPLY&SKIP&RET SYS::NN) (SYS::FUNCALL&SKIP&RETGF SYS::NN)))
;;(DEFCONSTANT SYS::INSTRUCTION-TABLE-K #(CL::LOAD SYS::LOAD&PUSH SYS::CONST SYS::CONST&PUSH SYS::STORE))
;;(DEFCONSTANT SYS::ONE-VALUE-OPS #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T (CL::LIST* . T) (CL::LIST . T) (SYS::SVSET . T) (CL::SVREF . T) (CL::SYMBOL-FUNCTION . T) (CL::CONSP . T) (CL::ATOM . T) (CL::CONS . T) (CL::CDR . T) (CL::CAR . T) (CL::EQ . T) (CL::NOT . T) (SYS::TAGBODY-CLOSE-NIL . T) (SYS::MV-TO-LIST . T) (SYS::VALUES1 . T) (CL::BOUNDP . T) (SYS::COPY-CLOSURE . T) (SYS::VENV . T) (CL::POP . T) (SYS::SETVALUE . T) (SYS::GETVALUE . T) (SYS::STOREIC . T) (SYS::STOREV . T) (SYS::STOREC . T) (SYS::STOREI . T) (SYS::STORE . T) (SYS::LOADIC . T) (SYS::LOADV . T) (SYS::LOADC . T) (SYS::LOADI . T) (CL::LOAD . T) (SYS::CONST . T) (T . T) (() . T)))
;;(DEFPARAMETER SYS::*ACTIVE-RESTARTS* (#S(CL::RESTART :NAME CL::ABORT :TEST #<COMPILED-FUNCTION SYS::DEFAULT-RESTART-TEST> :INVOKE-TAG () :INVOKE-FUNCTION #<COMPILED-FUNCTION SYS::MAIN-LOOP-1-1> :REPORT #<COMPILED-FUNCTION SYS::MAIN-LOOP-1-2> :INTERACTIVE #<COMPILED-FUNCTION SYS::DEFAULT-RESTART-INTERACTIVE> :MEANINGFULP T)))
;;(DEFPARAMETER SYS::*SAVED-DEBUG-READTABLE* #<READTABLE #x000334C011C0>)
;;(DEFPARAMETER SYS::*RESTART-CLUSTERS* ((#<CL::RESTART TOP-LEVEL::TOP-LEVEL {7142D09}>)))
;;(DEFPARAMETER SYS::*BQ-AT-FLAG* '(SYS::|,@|))
;;(DEFPARAMETER SYS::*BQ-COMMA-FLAG* '(SYS::|,|))
;;(DEFPARAMETER SYS::*BQ-DOT-FLAG* '(SYS::|,.|))
;;(DEFPARAMETER SYS::*BQ-VECTOR-FLAG* '(#:|bqv|))
;;(DEFPARAMETER SYS::*HTML-CHARS* ((#\< . "&lt;") (#\> . "&gt;") (#\& . "&amp;")))
;;(DEFPARAMETER SYS::*HTTP-ENCODING* #<ENCODING CHARSET:UTF-8 :DOS>)
;;(DEFPARAMETER SYS::*INLINE-DECLARATIONS* (((CL::SETF MOP:SLOT-DEFINITION-DOCUMENTATION) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-TYPE) . CL::NOTINLINE) ((CL::SETF MOP::SLOT-DEFINITION-LOCATION-CLASS) . CL::NOTINLINE) ((CL::SETF MOP::SLOT-DEFINITION-ALLOCATION-CLASS) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-WRITERS) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-READERS) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-NAME) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-INITFUNCTION) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-INITFORM) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-INITARGS) . CL::NOTINLINE) ((CL::SETF MOP:SLOT-DEFINITION-ALLOCATION) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-DIRECT-DEFAULT-INITARGS) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-DEFAULT-INITARGS) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-FINALIZED-P) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-PRECEDENCE-LIST) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-DIRECT-METHODS) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-DIRECT-SUBCLASSES) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-DIRECT-SUPERCLASSES) . CL::NOTINLINE) ((CL::SETF MOP::CLASS-LAYOUT) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-DIRECT-SLOTS) . CL::NOTINLINE) ((CL::SETF MOP:CLASS-SLOTS) . CL::NOTINLINE) ((CL::SETF CL::CLASS-NAME) . CL::NOTINLINE)))
(DEFPARAMETER CL::*MACROEXPAND-HOOK* CL::FUNCALL)
(DEFPARAMETER CL::*MACROEXPAND-HOOK* #.(FIND-SUBR 'CL::FUNCALL))

#|
(DEFPARAMETER CLOS::*<BUILT-IN-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::BUILT-IN-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<BUILT-IN-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::BUILT-IN-CLASS (CLOS::DEFINED-CLASS) ((CLOS::$PROTOTYPE :TYPE T)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<DEFINED-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::DEFINED-CLASS (CLOS::POTENTIAL-CLASS) ((CLOS::$DIRECT-SUPERCLASSES :TYPE CL::LIST :INITARG :DIRECT-SUPERCLASSES) (CLOS::$ALL-SUPERCLASSES :TYPE CL::HASH-TABLE) (CLOS::$PRECEDENCE-LIST :TYPE CL::LIST) (CLOS::$DIRECT-SLOTS :TYPE CL::LIST :INITARG :DIRECT-SLOTS) (CLOS::$SLOTS :TYPE CL::LIST) (CLOS::$SLOT-LOCATION-TABLE :TYPE CL::HASH-TABLE :INITFORM CLOS::EMPTY-HT) (CLOS::$DIRECT-DEFAULT-INITARGS :TYPE CL::LIST :INITARG :DIRECT-DEFAULT-INITARGS) (CLOS::$DEFAULT-INITARGS) (CLOS::$DOCUMENTATION :TYPE (CL::OR CL::STRING CL::NULL) :INITARG :DOCUMENTATION) (CLOS::$LISTENERS :TYPE CL::LIST :INITFORM ()) (CLOS::$INITIALIZED :TYPE (CL::INTEGER 0. 6) :INITFORM 0)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<DIRECT-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::DIRECT-SLOT-DEFINITION (CLOS::SLOT-DEFINITION) ((CLOS::$READERS :TYPE CL::LIST :INITARG :READERS) (CLOS::$WRITERS :TYPE CL::LIST :INITARG :WRITERS)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<EFFECTIVE-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::EFFECTIVE-SLOT-DEFINITION (CLOS::SLOT-DEFINITION) ((CLOS::$LOCATION :TYPE (CL::OR CL::NULL CL::INTEGER CL::CONS) :INITARG CLOS::LOCATION) (CLOS::$EFM-SVUC :TYPE CL::FUNCTION) (CLOS::$EFM-SSVUC :TYPE CL::FUNCTION) (CLOS::$EFM-SBUC :TYPE CL::FUNCTION) (CLOS::$EFM-SMUC :TYPE CL::FUNCTION)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<EQL-SPECIALIZER>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::EQL-SPECIALIZER) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<EQL-SPECIALIZER>-DEFCLASS* (CLOS::DEFCLASS CLOS::EQL-SPECIALIZER (CLOS::SPECIALIZER) ((CLOS::$SINGLETON :INITARG CLOS::SINGLETON)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<FORWARD-REFERENCE-TO-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::FORWARD-REFERENCE-TO-CLASS (CLOS::SUPER-CLASS) () (:FIXED-SLOT-LOCATIONS ())))
(DEFPARAMETER CLOS::*<FORWARD-REFERENCED-CLASS>-UNDER-<CLASS>* ())
(DEFPARAMETER CLOS::*<FUNCALLABLE-STANDARD-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::FUNCALLABLE-STANDARD-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<INHERITABLE-SLOT-DEFINITION-DOC>-DEFCLASS* (CLOS::DEFCLASS CLOS::INHERITABLE-SLOT-DEFINITION-DOC () ((CLOS::DOCUMENTATION :TYPE (CL::OR CL::NULL CL::STRING) :INITARG :DOCUMENTATION)) (:METACLASS CLOS::STRUCTURE-CLASS)))
(DEFPARAMETER CLOS::*<INHERITABLE-SLOT-DEFINITION-INITER>-DEFCLASS* (CLOS::DEFCLASS CLOS::INHERITABLE-SLOT-DEFINITION-INITER () ((CLOS::INITFORM :TYPE T :INITARG :INITFORM) (CLOS::INITFUNCTION :TYPE (CL::OR CL::NULL CL::FUNCTION) :INITARG :INITFUNCTION)) (:METACLASS CLOS::STRUCTURE-CLASS)))
(DEFPARAMETER CLOS::*<METAOBJECT>-DEFCLASS* (CLOS::DEFCLASS CLOS::METAOBJECT () ()))
(DEFPARAMETER CLOS::*<MISDESIGNED-FORWARD-REFERENCED-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::MISDESIGNED-FORWARD-REFERENCED-CLASS (CLOS::FORWARD-REFERENCE-TO-CLASS CLOS::POTENTIAL-CLASS) () (:FIXED-SLOT-LOCATIONS ())))
(DEFPARAMETER CLOS::*<POTENTIAL-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::POTENTIAL-CLASS (CLOS::SPECIALIZER CLOS::SUPER-CLASS) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<SEMI-STANDARD-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::SEMI-STANDARD-CLASS (CLOS::SLOTTED-CLASS) ((CLOS::$CURRENT-VERSION :TYPE CL::SIMPLE-VECTOR) (CLOS::$FUNCALLABLEP :TYPE CL::BOOLEAN) (CLOS::$FIXED-SLOT-LOCATIONS :INITARG :FIXED-SLOT-LOCATIONS) (CLOS::$INSTANTIATED :TYPE CL::BOOLEAN :INITFORM ()) (CLOS::$DIRECT-INSTANCE-SPECIALIZERS :TYPE (CL::OR CL::HASH-TABLE CLOS::WEAK-LIST CL::NULL) :INITFORM ()) (CLOS::$FINALIZED-DIRECT-SUBCLASSES :TYPE (CL::OR CL::HASH-TABLE CLOS::WEAK-LIST CL::NULL) :INITFORM '()) (CLOS::$PROTOTYPE :TYPE (CL::OR CL::STANDARD-OBJECT CL::NULL))) (:DEFAULT-INITARGS :FIXED-SLOT-LOCATIONS ()) (:FIXED-SLOT-LOCATIONS T)))
;;;(DEFPARAMETER CLOS::*<SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::SLOT-DEFINITION (CLOS::METAOBJECT) ((CLOS::$NAME :TYPE CL::SYMBOL :INITARG :NAME) (CLOS::$INITARGS :TYPE CL::LIST :INITARG :INITARGS) (CLOS::$TYPE :TYPE T :INITARG :TYPE) (CLOS::$ALLOCATION :TYPE CL::SYMBOL :INITARG :ALLOCATION) (CLOS::$INHERITABLE-INITER :TYPE CL::CONS :INITARG CLOS::INHERITABLE-INITER) (CLOS::$INHERITABLE-DOC :TYPE CL::CONS :INITARG CLOS::INHERITABLE-DOC)) (:FIXED-SLOT-LOCATIONS T)))

(DEFPARAMETER CLOS::*<SLOTTED-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::SLOTTED-CLASS (CLOS::DEFINED-CLASS) ((CLOS::$SUBCLASS-OF-STABLEHASH-P :TYPE CL::BOOLEAN) (CLOS::$GENERIC-ACCESSORS :INITFORM T) (CLOS::$DIRECT-ACCESSORS :TYPE CL::LIST :INITFORM '()) (CLOS::$VALID-INITARGS-FROM-SLOTS :TYPE CL::LIST) (CLOS::$INSTANCE-SIZE :TYPE (CL::INTEGER 1. CL::*))) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<SPECIALIZER>-DEFCLASS* (CLOS::DEFCLASS CLOS::SPECIALIZER (CLOS::STANDARD-STABLEHASH CLOS::METAOBJECT) ((CLOS::$DIRECT-METHODS :INITFORM ())) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STANDARD-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-CLASS (CLOS::SEMI-STANDARD-CLASS) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-DIRECT-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-DIRECT-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STANDARD-DIRECT-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-DIRECT-SLOT-DEFINITION (CLOS::DIRECT-SLOT-DEFINITION CLOS::STANDARD-SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-EFFECTIVE-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STANDARD-EFFECTIVE-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION (CLOS::EFFECTIVE-SLOT-DEFINITION CLOS::STANDARD-SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-SLOT-DEFINITION (CLOS::SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-STABLEHASH>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-STABLEHASH () ((CLOS::$HASHCODE :INITFORM (SYS::RANDOM-POSFIXNUM))) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STRUCTURE-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STRUCTURE-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::STRUCTURE-CLASS (CLOS::SLOTTED-CLASS) ((CLOS::$NAMES :TYPE CL::CONS) (CLOS::$KCONSTRUCTOR :TYPE CL::SYMBOL) (CLOS::$BOA-CONSTRUCTORS :TYPE CL::LIST) (CLOS::$COPIER :TYPE CL::SYMBOL) (CLOS::$PREDICATE :TYPE CL::SYMBOL) (CLOS::$PROTOTYPE :TYPE (CL::OR CL::STRUCTURE-OBJECT CL::NULL))) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STRUCTURE-DIRECT-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STRUCTURE-DIRECT-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION (CLOS::DIRECT-SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION (CLOS::EFFECTIVE-SLOT-DEFINITION) ((CLOS::$EFM-SVUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SLOT-VALUE-USING-CLASS) (CLOS::$EFM-SSVUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SET-SLOT-VALUE-USING-CLASS) (CLOS::$EFM-SBUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SLOT-BOUNDP-USING-CLASS) (CLOS::$EFM-SMUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SLOT-MAKUNBOUND-USING-CLASS) (CLOS::$READONLY :TYPE CL::BOOLEAN :INITARG CLOS::READONLY)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<SUPER-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::SUPER-CLASS (CLOS::STANDARD-STABLEHASH CLOS::METAOBJECT) ((CLOS::$CLASSNAME :TYPE CL::SYMBOL :INITARG :NAME) (CLOS::$DIRECT-SUBCLASSES :TYPE (CL::OR CL::HASH-TABLE CLOS::WEAK-LIST CL::NULL) :INITFORM ())) (:FIXED-SLOT-LOCATIONS ())))

(DEFPARAMETER CLOS::*ALLOW-MAKING-GENERIC* ())
(DEFPARAMETER CLOS::*ALLOW-MIXING-METACLASSES* ())
(DEFPARAMETER CLOS::*CLASSES-FINISHED* T)
(DEFPARAMETER CLOS::*COMPILE-ACCESSOR-FUNCTIONS* T)
(DEFPARAMETER CLOS::*DUMMY-CLASS* #(() () () () () () () () () () () () () () () () T () () () ()))
(DEFPARAMETER CLOS::*DYNAMICALLY-MODIFIABLE-GENERIC-FUNCTION-NAMES* (CLOS::ADD-METHOD CLOS::ALLOCATE-INSTANCE CLOS::CHANGE-CLASS CLOS::CLASS-NAME (CL::SETF CLOS::CLASS-NAME) CLOS::COMPUTE-APPLICABLE-METHODS CLOS::DESCRIBE-OBJECT CLOS::DOCUMENTATION (CL::SETF CLOS::DOCUMENTATION) CLOS::FIND-METHOD CLOS::FUNCTION-KEYWORDS CLOS::INITIALIZE-INSTANCE CLOS::MAKE-INSTANCE CLOS::MAKE-INSTANCES-OBSOLETE CLOS::MAKE-LOAD-FORM CLOS::METHOD-QUALIFIERS CLOS::NO-APPLICABLE-METHOD CLOS::NO-NEXT-METHOD CLOS::PRINT-OBJECT CLOS::REINITIALIZE-INSTANCE CLOS::REMOVE-METHOD CLOS::SHARED-INITIALIZE CLOS::SLOT-MISSING CLOS::SLOT-UNBOUND CLOS::UPDATE-INSTANCE-FOR-DIFFERENT-CLASS CLOS::UPDATE-INSTANCE-FOR-REDEFINED-CLASS CLOS::ADD-DEPENDENT CLOS::REMOVE-DEPENDENT CLOS::MAP-DEPENDENTS CLOS::ADD-DIRECT-METHOD CLOS::REMOVE-DIRECT-METHOD CLOS::SPECIALIZER-DIRECT-GENERIC-FUNCTIONS CLOS::SPECIALIZER-DIRECT-METHODS CLOS::ADD-DIRECT-SUBCLASS CLOS::REMOVE-DIRECT-SUBCLASS CLOS::CLASS-DIRECT-SUBCLASSES CLOS::COMPUTE-APPLICABLE-METHODS-USING-CLASSES CLOS::COMPUTE-CLASS-PRECEDENCE-LIST CLOS::COMPUTE-DEFAULT-INITARGS CLOS::COMPUTE-DIRECT-SLOT-DEFINITION-INITARGS CLOS::COMPUTE-DISCRIMINATING-FUNCTION CLOS::COMPUTE-EFFECTIVE-METHOD CLOS::COMPUTE-EFFECTIVE-SLOT-DEFINITION CLOS::COMPUTE-EFFECTIVE-SLOT-DEFINITION-INITARGS CLOS::COMPUTE-SLOTS CLOS::DIRECT-SLOT-DEFINITION-CLASS CLOS::EFFECTIVE-SLOT-DEFINITION-CLASS CLOS::ENSURE-CLASS-USING-CLASS CLOS::ENSURE-GENERIC-FUNCTION-USING-CLASS CLOS::READER-METHOD-CLASS CLOS::SLOT-VALUE-USING-CLASS (CL::SETF CLOS::SLOT-VALUE-USING-CLASS) CLOS::SLOT-BOUNDP-USING-CLASS CLOS::SLOT-MAKUNBOUND-USING-CLASS CLOS::VALIDATE-SUPERCLASS CLOS::WRITER-METHOD-CLASS (CL::SETF CLOS::METHOD-GENERIC-FUNCTION) CLOS::NO-PRIMARY-METHOD))
(DEFPARAMETER CLOS::*ENABLE-CLOS-WARNINGS* T)
(DEFPARAMETER CLOS::*METHOD-COMBINATION* ())
(DEFPARAMETER CLOS::*METHOD-COMBINATION-ARGUMENTS* ())
(DEFPARAMETER CLOS::*METHOD-COMBINATION-GENERIC-FUNCTION* ())
(DEFPARAMETER CLOS::*MOP-STANDARDIZED-PACKAGES* (#.(FIND-PACKAGE "COMMON-LISP") #.(FIND-PACKAGE "CLOS")))
(DEFPARAMETER CLOS::*REINITIALIZE-INSTANCE-TABLE* #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::*STRICT-MOP* ())
(DEFPARAMETER CLOS::*UPDATE-INSTANCE-FOR-DIFFERENT-CLASS-TABLE* #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQUAL :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::*UPDATE-INSTANCE-FOR-REDEFINED-CLASS-TABLE* #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::<ARRAY> #1=#.(CLOS::FIND-CLASS 'CL::ARRAY))
(DEFPARAMETER CLOS::<BIT-VECTOR> #1=#.(CLOS::FIND-CLASS 'CL::BIT-VECTOR))
(DEFPARAMETER CLOS::<BROADCAST-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::BROADCAST-STREAM))
(DEFPARAMETER CLOS::<BUILT-IN-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::BUILT-IN-CLASS))
(DEFPARAMETER CLOS::<CHARACTER> #1=#.(CLOS::FIND-CLASS 'CL::CHARACTER))
(DEFPARAMETER CLOS::<COMPLEX> #1=#.(CLOS::FIND-CLASS 'CL::COMPLEX))
(DEFPARAMETER CLOS::<CONCATENATED-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::CONCATENATED-STREAM))
(DEFPARAMETER CLOS::<CONS> #1=#.(CLOS::FIND-CLASS 'CL::CONS))
(DEFPARAMETER CLOS::<DEFINED-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::CLASS))
(DEFPARAMETER CLOS::<DIRECT-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::DIRECT-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<ECHO-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::ECHO-STREAM))
(DEFPARAMETER CLOS::<EFFECTIVE-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<EQL-SPECIALIZER> #1=#.(CLOS::FIND-CLASS 'CLOS::EQL-SPECIALIZER))
(DEFPARAMETER CLOS::<FILE-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::FILE-STREAM))
(DEFPARAMETER CLOS::<FLOAT> #1=#.(CLOS::FIND-CLASS 'CL::FLOAT))
(DEFPARAMETER CLOS::<FORWARD-REFERENCE-TO-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::FORWARD-REFERENCED-CLASS))
(DEFPARAMETER CLOS::<FUNCALLABLE-STANDARD-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::FUNCALLABLE-STANDARD-CLASS))
(DEFPARAMETER CLOS::<FUNCALLABLE-STANDARD-OBJECT> #1=#.(CLOS::FIND-CLASS 'CLOS::FUNCALLABLE-STANDARD-OBJECT))
(DEFPARAMETER CLOS::<FUNCTION> #1=#.(CLOS::FIND-CLASS 'CL::FUNCTION))
(DEFPARAMETER CLOS::<GENERIC-FUNCTION> #1=#.(CLOS::FIND-CLASS 'CLOS::GENERIC-FUNCTION))
(DEFPARAMETER CLOS::<HASH-TABLE> #1=#.(CLOS::FIND-CLASS 'CL::HASH-TABLE))
(DEFPARAMETER CLOS::<INTEGER> #1=#.(CLOS::FIND-CLASS 'CL::INTEGER))
(DEFPARAMETER CLOS::<LIST> #1=#.(CLOS::FIND-CLASS 'CL::LIST))
(DEFPARAMETER CLOS::<LOGICAL-PATHNAME> #1=#.(CLOS::FIND-CLASS 'CL::LOGICAL-PATHNAME))
(DEFPARAMETER CLOS::<METAOBJECT> #1=#.(CLOS::FIND-CLASS 'CLOS::METAOBJECT))
(DEFPARAMETER CLOS::<METHOD-COMBINATION> #1=#.(CLOS::FIND-CLASS 'CLOS::METHOD-COMBINATION))
(DEFPARAMETER CLOS::<METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::METHOD))
(DEFPARAMETER CLOS::<MISDESIGNED-FORWARD-REFERENCED-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::MISDESIGNED-FORWARD-REFERENCED-CLASS))
(DEFPARAMETER CLOS::<NULL> #1=#.(CLOS::FIND-CLASS 'CL::NULL))
(DEFPARAMETER CLOS::<NUMBER> #1=#.(CLOS::FIND-CLASS 'CL::NUMBER))
(DEFPARAMETER CLOS::<PACKAGE> #1=#.(CLOS::FIND-CLASS 'CL::PACKAGE))
(DEFPARAMETER CLOS::<PATHNAME> #1=#.(CLOS::FIND-CLASS 'CL::PATHNAME))
(DEFPARAMETER CLOS::<POTENTIAL-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::POTENTIAL-CLASS))
(DEFPARAMETER CLOS::<RANDOM-STATE> #1=#.(CLOS::FIND-CLASS 'CL::RANDOM-STATE))
(DEFPARAMETER CLOS::<RATIO> #1=#.(CLOS::FIND-CLASS 'CL::RATIO))
(DEFPARAMETER CLOS::<RATIONAL> #1=#.(CLOS::FIND-CLASS 'CL::RATIONAL))
(DEFPARAMETER CLOS::<READTABLE> #1=#.(CLOS::FIND-CLASS 'CL::READTABLE))
(DEFPARAMETER CLOS::<REAL> #1=#.(CLOS::FIND-CLASS 'CL::REAL))
(DEFPARAMETER CLOS::<SEMI-STANDARD-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::SEMI-STANDARD-CLASS))
(DEFPARAMETER CLOS::<SEQUENCE> #1=#.(CLOS::FIND-CLASS 'CL::SEQUENCE))
(DEFPARAMETER CLOS::<STANDARD-ACCESSOR-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-ACCESSOR-METHOD))
(DEFPARAMETER CLOS::<STANDARD-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-CLASS))
(DEFPARAMETER CLOS::<STANDARD-DIRECT-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-DIRECT-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STANDARD-EFFECTIVE-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STANDARD-GENERIC-FUNCTION> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-GENERIC-FUNCTION))
(DEFPARAMETER CLOS::<STANDARD-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-METHOD))
(DEFPARAMETER CLOS::<STANDARD-OBJECT> #1=#.(CLOS::FIND-CLASS 'CL::STANDARD-OBJECT))
(DEFPARAMETER CLOS::<STANDARD-READER-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-READER-METHOD))
(DEFPARAMETER CLOS::<STANDARD-WRITER-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-WRITER-METHOD))
(DEFPARAMETER CLOS::<STREAM> #1=#.(CLOS::FIND-CLASS 'CL::STREAM))
(DEFPARAMETER CLOS::<STRING-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::STRING-STREAM))
(DEFPARAMETER CLOS::<STRING> #1=#.(CLOS::FIND-CLASS 'CL::STRING))
(DEFPARAMETER CLOS::<STRUCTURE-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-CLASS))
(DEFPARAMETER CLOS::<STRUCTURE-DIRECT-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STRUCTURE-EFFECTIVE-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STRUCTURE-OBJECT> #1=#.(CLOS::FIND-CLASS 'CL::STRUCTURE-OBJECT))
(DEFPARAMETER CLOS::<SYMBOL> #1=#.(CLOS::FIND-CLASS 'CL::SYMBOL))
(DEFPARAMETER CLOS::<SYNONYM-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::SYNONYM-STREAM))
(DEFPARAMETER CLOS::<T> #1=#.(CLOS::FIND-CLASS 'T))
(DEFPARAMETER CLOS::<TWO-WAY-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::TWO-WAY-STREAM))
(DEFPARAMETER CLOS::<VECTOR> #1=#.(CLOS::FIND-CLASS 'CL::VECTOR))
(DEFPARAMETER CLOS::|#'(setf slot-value-using-class)| #<CLOS:STANDARD-GENERIC-FUNCTION (CL::SETF CLOS:SLOT-VALUE-USING-CLASS)>)
(DEFPARAMETER CLOS::|#'allocate-instance| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:ALLOCATE-INSTANCE>)
(DEFPARAMETER CLOS::|#'compute-applicable-methods-using-classes| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-APPLICABLE-METHODS-USING-CLASSES>)
(DEFPARAMETER CLOS::|#'compute-applicable-methods| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-APPLICABLE-METHODS>)
(DEFPARAMETER CLOS::|#'compute-discriminating-function| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-DISCRIMINATING-FUNCTION>)
(DEFPARAMETER CLOS::|#'compute-effective-method| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-EFFECTIVE-METHOD>)
(DEFPARAMETER CLOS::|#'generic-function-argorder| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS::GENERIC-FUNCTION-ARGORDER>)
(DEFPARAMETER CLOS::|#'generic-function-declarations| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-DECLARATIONS>)
(DEFPARAMETER CLOS::|#'generic-function-method-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHOD-CLASS>)
(DEFPARAMETER CLOS::|#'generic-function-method-combination| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHOD-COMBINATION>)
(DEFPARAMETER CLOS::|#'generic-function-methods| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHODS>)
(DEFPARAMETER CLOS::|#'generic-function-signature| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS::GENERIC-FUNCTION-SIGNATURE>)
(DEFPARAMETER CLOS::|#'generic-function-undeterminedp| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS::GENERIC-FUNCTION-UNDETERMINEDP>)
(DEFPARAMETER CLOS::|#'initialize-instance| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:INITIALIZE-INSTANCE>)
(DEFPARAMETER CLOS::|#'method-qualifiers| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-QUALIFIERS>)
(DEFPARAMETER CLOS::|#'method-specializers| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-SPECIALIZERS>)
(DEFPARAMETER CLOS::|#'reinitialize-instance| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:REINITIALIZE-INSTANCE>)
(DEFPARAMETER CLOS::|#'shared-initialize| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SHARED-INITIALIZE>)
(DEFPARAMETER CLOS::|#'slot-boundp-using-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-BOUNDP-USING-CLASS>)
(DEFPARAMETER CLOS::|#'slot-makunbound-using-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-MAKUNBOUND-USING-CLASS>)
(DEFPARAMETER CLOS::|#'slot-value-using-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-VALUE-USING-CLASS>)
(DEFPARAMETER CLOS::|#'update-instance-for-different-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:UPDATE-INSTANCE-FOR-DIFFERENT-CLASS>)
(DEFPARAMETER CLOS::|#'update-instance-for-redefined-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:UPDATE-INSTANCE-FOR-REDEFINED-CLASS>)

;;;(DEFPARAMETER EXT::*BREAK-DRIVER* #Y(SYS::BREAK-LOOP #613Y(01 00 01 00 01 00 02 00 00 0D 00 2B 03 7F 04 00 00 3B 03 01 00 0B 00 01 3B 02 80 50 7D 02 06 00 00 1D 80 4D 1B 80 61 15 1B 80 5D CF 0F 0C DE 31 5B 11 1B 80 8D E7 6B 0B 38 02 31 95 E8 6F 0F 6B 0B 30 10 6B 0B 31 97 1B 80 8A CF 0F 12 ED 6F 0F 6B 0B 38 02 31 95 1B 80 9B 03 15 1B 80 92 6B 04 31 98 F2 6F 0F 6B 04 30 10 1B 80 AA 06 00 00 1C 17 06 00 01 1D 12 DA 68 01 01 70 01 93 00 07 DC AD DD 8E 43 FF A1 16 01 0B 00 02 6B 04 6F 05 63 93 04 81 38 68 02 01 E0 38 02 72 3A 8B 07 81 2C 6B 08 32 B1 10 08 6B 08 E3 91 01 32 15 CF 0F 08 E5 31 5B 6B 0C 32 B1 10 0C 6B 0C E3 90 01 32 FF 6A 11 6B 0B 31 97 11 06 02 02 1C FF 68 EB 6B 0B 38 02 31 95 6B 12 32 B1 10 12 6B 12 E3 90 01 32 FF 68 68 05 01 6B 0B EE 06 08 02 1C FF 6B 03 16 14 2D 04 17 11 06 02 02 1D 80 D1 06 02 00 1C 80 C7 6B 04 31 98 93 01 07 F3 6F 0F 6B 04 30 10 68 02 02 6B 04 31 90 6B 04 31 99 06 02 01 1D 80 CE 1B 80 AE 03 1B 1B 80 BD 93 03 0D 6B 04 31 98 AC 6B 04 30 10 6B 04 31 99 E4 AE 63 1B 80 72 87 01 00 A4 2B 01 F7 85 04 14 72 AB 73 02 13 DC AF 65 1E 72 43 71 51 38 02 72 8F B0 71 93 AE AE 31 90 AD 01 02 65 1F 63 2D 05 20 AF AE 31 90 AD 01 02 65 21 63 2D 05 20 AC AE 31 90 16 01 AC 81 90 00 7F 04 03 00 AF 6D 22 01 93 0B 0D 6B 04 31 98 AD 6B 04 30 10 6B 04 31 99 65 23 71 51 AE 73 02 13 84 0A AF 9E 7A 84 0A AE 9E 7A 84 0A 16 05 83 01 AD 8D 9F FF 89 16 02 65 23 71 51 AE 73 02 13 B0 32 64 5D FB 16 03 1B 26 92 01 FE 92 06 02 01 1D 1D 68 02 02 68 03 01 6F 1A 38 07 72 69 06 03 02 1C FF 40 03 1C 14 6F 0F 92 01 FF 3C 16 02 6B 04 31 9B 4B 24 80 6C 80 66 80 61 65 25 31 5B 65 26 31 5B 6B 04 31 88 A5 2B 02 6B 27 32 B1 10 27 DE 72 85 9D 10 28 A0 10 29 2E 2A 14 2E 2B 14 2E 2C 14 2E 2D 14 33 04 13 0B 0A 00 65 2E 2F 2F 10 30 2E 31 10 32 0E 33 10 33 6B 30 6B 33 30 34 10 35 0E 36 10 36 0E 37 10 37 68 25 02 66 24 30 38 0B 1C 01 66 1C 66 20 6D 39 02 31 5D 00 1B 01 02 14 31 5E 4C 19 07) (CL::CONTINUE CL::FIND-RESTART CL::RESTART 7. CL::*DEBUG-IO* CL::INTERACTIVE-STREAM-P CL::CONDITION CL::TYPEP SYS::*RECURSE-COUNT-ERROR-OUTPUT* 3. 0. CL::*ERROR-OUTPUT* SYS::*RECURSE-COUNT-DEBUG-IO* "** - " "Continuable Error" SYS::TEXT SYS::SAFE-WR-ST "*** - " SYS::*RECURSIVE-ERROR-COUNT* "Unprintable error message" :TEXT-INDENT 5. 6. SYS::PRETTY-PRINT-CONDITION "You can continue (by typing 'continue')." "If you continue (by typing 'continue'): " CL::COMPUTE-RESTARTS "The following restarts are also available:" "The following restarts are available:" ":R" 1. 15. SYS::FORMAT-TABULATE 24. #Y(SYS::BREAK-LOOP-1 #17Y(00 00 00 00 01 00 00 00 00 02 69 00 01 2F 01 19 02) (() CL::INVOKE-RESTART-INTERACTIVELY) (T T T)) #\Newline #(EXT::QUIT SYS::ABORT-TO-TOP SYS::UNWIND) SYS::*TERMINAL-READ-STREAM* SYS::*TERMINAL-READ-OPEN-OBJECT* SYS::*BREAK-COUNT* CL::*STANDARD-INPUT* CL::*STANDARD-OUTPUT* SYS::PROMPT-START SYS::PROMPT-BREAK SYS::PROMPT-BODY SYS::PROMPT-FINISH 13. SYS::FRAME-LIMIT-DOWN SYS::*FRAME-LIMIT-DOWN* SYS::FRAME-LIMIT-UP SYS::*FRAME-LIMIT-UP* SYS::*STACK-MODE* SYS::FRAME-UP-DOWN SYS::*DEBUG-FRAME* SYS::*SAVED-DEBUG-PACKAGE* SYS::*SAVED-DEBUG-READTABLE* SYS::COMMANDS #Y(SYS::BREAK-LOOP-2 #104Y(03 00 02 00 00 00 00 00 00 01 C7 50 29 2A 2B 01 00 0B 00 00 4B 03 22 DE DF E0 B3 B2 6D 07 02 E2 E3 6E 06 0A 0E 0B 5D 10 0B 6B 0C B4 6D 0D 01 30 0E 11 4D 16 01 51 26 10 2C 06 04 00 39 00 00 DC D4 52 69 01 02 2F 11 19 01 69 01 02 2F 12 19 01 4E 01 02 4E 01 01 4E 01 00 07 01 01 1C 78 69 01 03 2F 13 19 01 00 19 01) (() () CL::DEBUG #(()) :NAME CL::ABORT :INVOKE-FUNCTION #Y(SYS::BREAK-LOOP-2-1 #17Y(00 00 00 00 00 00 00 00 01 16 9E 0C 00 01 4E 01 00) (() ()) (T T T)) :REPORT #Y(SYS::BREAK-LOOP-2-2 #20Y(00 00 00 00 01 00 00 00 00 02 DA 6F 01 AE 38 02 31 95 19 02) ("Abort debug loop" SYS::TEXT) (T T T)) SYS::MAKE-RESTART SYS::*ACTIVE-RESTARTS* SYS::*DEBUG-FRAME* #Y(SYS::BREAK-LOOP-2-3 #32Y(00 00 00 00 00 00 00 00 00 01 69 01 01 69 01 02 30 01 1F 0A DC 07 02 03 1C 02 C9 52 C8 52 19 01) (() SYS::READ-EVAL-PRINT CL::DEBUG EXT::QUIT SYS::UNWIND) (T T T)) SYS::SAME-ENV-AS CL::CONTINUE #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ (SYS::PRINT-ERROR . 10) (SYS::INSPECT-ERROR . 17) (SYS::UNWIND . 24) (SYS::ABORT-TO-TOP . 27) (EXT::QUIT . 33)) SYS::PRINT-ERROR CL::INSPECT CL::INVOKE-RESTART-INTERACTIVELY) (T T T))) (T T T)))
(DEFPARAMETER EXT::*DRIVER* #Y(SYS::MAIN-LOOP #35Y(02 00 01 00 00 00 01 00 00 07 00 2B 01 3B 02 01 02 0B 00 00 47 00 0A C6 0F 02 AF AF 6D 03 02 31 5D 19 03) (SYS::MAIN-LOOP 0. SYS::*BREAK-COUNT* #Y(SYS::MAIN-LOOP-1 #133Y(05 00 03 00 00 00 00 00 00 01 C7 50 80 75 2A 2B 01 00 0B 00 00 4B 03 80 55 DE DF E0 B3 B2 6D 07 02 E2 E3 6E 06 0A 0E 0B 5D 10 0B 2E 0C 14 2E 0D 14 2E 0E 14 73 03 13 2E 0F 14 30 10 1F 3E 07 00 01 1C 18 D7 0F 13 4B 14 2F AE 6D 15 01 DB 6D 16 01 57 17 B0 36 00 16 06 4D 1B 21 2E 11 1B 1D 58 67 00 00 01 76 00 AD 36 01 18 05 03 19 02 06 04 00 39 00 00 DC 03 19 52 F2 2F 11 4D 11 4D 16 01 51 19 01 19 01) (() () CL::DEBUG #(()) :NAME CL::ABORT :INVOKE-FUNCTION #Y(SYS::MAIN-LOOP-1-1 #17Y(00 00 00 00 00 00 00 00 01 16 9E 0C 00 01 4E 01 00) (() ()) (T T T)) :REPORT #Y(SYS::MAIN-LOOP-1-2 #20Y(00 00 00 00 01 00 00 00 00 02 DA 6F 01 AE 38 02 31 95 19 02) ("Abort main loop" SYS::TEXT) (T T T)) SYS::MAKE-RESTART SYS::*ACTIVE-RESTARTS* SYS::PROMPT-START SYS::PROMPT-BODY SYS::PROMPT-FINISH SYS::COMMANDS0 SYS::READ-EVAL-PRINT EXT::EXIT 0. EXT::*COMMAND-INDEX* #(()) #Y(SYS::MAIN-LOOP-1-3 #16Y(00 00 00 00 00 00 00 00 00 01 DA 2C 01 01 19 01) (() #Y(SYS::MAIN-LOOP-1-3-1 #13Y(00 00 00 00 01 00 00 00 00 02 4E 00 00) (()) (T T T))) (() () ())) #Y(SYS::MAIN-LOOP-1-4 #13Y(00 00 00 00 00 00 00 00 00 01 00 49 00) (()) (T T T)) (#(CL::ERROR 85) 4. . 3) 1. CL::CONTINUE) (T T T))) (T T T)))
(DEFPARAMETER SYS::C-TYPEP-ALIST1 ((CL::ARRAY . CL::ARRAYP) (CL::ATOM . CL::ATOM) (CL::BASE-CHAR . CL::CHARACTERP) (CL::BIT-VECTOR . CL::BIT-VECTOR-P) (CL::BYTE . SYS::BYTEP) (CL::CHARACTER . CL::CHARACTERP) (CL::COMPILED-FUNCTION . CL::COMPILED-FUNCTION-P) (CL::COMPLEX . CL::COMPLEXP) (CL::CONS . CL::CONSP) (CL::DOUBLE-FLOAT . SYS::DOUBLE-FLOAT-P) (EXT::ENCODING . SYS::ENCODINGP) (CL::FIXNUM . SYS::FIXNUMP) (CL::FLOAT . CL::FLOATP) (CL::FUNCTION . CL::FUNCTIONP) (CL::HASH-TABLE . CL::HASH-TABLE-P) (CL::INTEGER . CL::INTEGERP) (CL::KEYWORD . CL::KEYWORDP) (CL::LIST . CL::LISTP) (CL::LOGICAL-PATHNAME . SYS::LOGICAL-PATHNAME-P) (CL::LONG-FLOAT . SYS::LONG-FLOAT-P) (CL::NULL . CL::NULL) (CL::NUMBER . CL::NUMBERP) (CL::PACKAGE . CL::PACKAGEP) (CL::PATHNAME . CL::PATHNAMEP) (CL::RANDOM-STATE . CL::RANDOM-STATE-P) (CL::RATIONAL . CL::RATIONALP) (CL::READTABLE . CL::READTABLEP) (CL::REAL . CL::REALP) (CL::SEQUENCE . SYS::SEQUENCEP) (CL::SHORT-FLOAT . SYS::SHORT-FLOAT-P) (CL::SIMPLE-ARRAY . SYS::SIMPLE-ARRAY-P) (CL::SIMPLE-BIT-VECTOR . CL::SIMPLE-BIT-VECTOR-P) (CL::SIMPLE-STRING . CL::SIMPLE-STRING-P) (CL::SIMPLE-VECTOR . CL::SIMPLE-VECTOR-P) (CL::SINGLE-FLOAT . SYS::SINGLE-FLOAT-P) (CL::STANDARD-CHAR . STANDARD-CHAR-P) (CL::STANDARD-OBJECT . CLOS::STD-INSTANCE-P) (CL::STREAM . CL::STREAMP) (CL::FILE-STREAM . SYS::FILE-STREAM-P) (CL::SYNONYM-STREAM . SYS::SYNONYM-STREAM-P) (CL::BROADCAST-STREAM . SYS::BROADCAST-STREAM-P) (CL::CONCATENATED-STREAM . SYS::CONCATENATED-STREAM-P) (CL::TWO-WAY-STREAM . SYS::TWO-WAY-STREAM-P) (CL::ECHO-STREAM . SYS::ECHO-STREAM-P) (CL::STRING-STREAM . SYS::STRING-STREAM-P) (CL::STRING . CL::STRINGP) (EXT::STRING-CHAR . CL::CHARACTERP) (CL::STRUCTURE-OBJECT . CLOS::STRUCTURE-OBJECT-P) (CL::SYMBOL . CL::SYMBOLP) (CL::VECTOR . CL::VECTORP) (CLOS::POTENTIAL-CLASS . CLOS::POTENTIAL-CLASS-P) (CLOS::DEFINED-CLASS . CLOS::DEFINED-CLASS-P) (CLOS::BUILT-IN-CLASS . CLOS::BUILT-IN-CLASS-P) (CLOS::STRUCTURE-CLASS . CLOS::STRUCTURE-CLASS-P) (CLOS::STANDARD-CLASS . CLOS::STANDARD-CLASS-P)))
(DEFPARAMETER SYS::C-TYPEP-ALIST2 ((CL::BASE-STRING (SYS::X) (CL::AND (CL::STRINGP SYS::X) (CL::EQ (CL::ARRAY-ELEMENT-TYPE SYS::X) 'CL::CHARACTER))) (CL::BIGNUM (SYS::X) (CL::AND (CL::INTEGERP SYS::X) (CL::NOT (SYS::FIXNUMP SYS::X)))) (CL::BIT (SYS::X) (CL::OR (CL::EQL SYS::X 0) (CL::EQL SYS::X 1))) (CL::BOOLEAN (SYS::X) (CL::OR (CL::EQ SYS::X '()) (CL::EQ SYS::X 'T))) (CL::EXTENDED-CHAR (SYS::X) (CL::DECLARE (CL::IGNORE SYS::X)) ()) (() (SYS::X) (CL::DECLARE (CL::IGNORE SYS::X)) ()) (CL::RATIO (SYS::X) (CL::AND (CL::RATIONALP SYS::X) (CL::NOT (CL::INTEGERP SYS::X)))) (CL::SIMPLE-BASE-STRING (SYS::X) (CL::AND (CL::SIMPLE-STRING-P SYS::X) (CL::EQ (CL::ARRAY-ELEMENT-TYPE SYS::X) 'CL::CHARACTER))) (T (SYS::X) (CL::DECLARE (CL::IGNORE SYS::X)) T) (FFI::FOREIGN-FUNCTION (SYS::X) (CL::EQ 'FFI::FOREIGN-FUNCTION (CL::TYPE-OF SYS::X))) (FFI::FOREIGN-VARIABLE (SYS::X) (CL::EQ 'FFI::FOREIGN-VARIABLE (CL::TYPE-OF SYS::X))) (FFI::FOREIGN-ADDRESS (SYS::X) (CL::EQ 'FFI::FOREIGN-ADDRESS (CL::TYPE-OF SYS::X))) (EXT::FOREIGN-POINTER (SYS::X) (CL::EQ 'EXT::FOREIGN-POINTER (CL::TYPE-OF SYS::X))) (SYS::PLIST (SYS::X) (CL::MULTIPLE-VALUE-BIND (CL::LENGTH SYS::TAIL) (EXT::LIST-LENGTH-DOTTED SYS::X) (CL::AND (CL::NULL SYS::TAIL) (CL::EVENP CL::LENGTH))))))
(DEFPARAMETER SYS::C-TYPEP-ALIST3 ((CL::ARRAY . #Y(#:440 457 (DEF-COMPOUND-TYPE ARRAY (&OPTIONAL # #) ..)-87-2-1 #109Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA AE 24 00 80 4B AE 8E 1A 27 AE 63 AD 8C 9F 3F 87 01 00 14 24 00 33 AC 8F 1E 0A AC 8E AE 06 E1 AD 90 01 32 25 E2 6F 03 DE AE 2D 03 05 CB 14 00 52 AE 8F 1E 0A AE 8E AE 06 DB AF 90 01 32 12 DC 6F 03 DE B0 2D 03 05 CB 1B 64 83 01 1B FF BD 16 02 E3 B0 B0 B3 2D 04 0A 19 05) (CL::* 4096. "~S: rank ~S is invalid" SYS::TEXT CL::ARRAY SYS::C-WARN SYS::C-TYPEP 4294967296. "~S: dimension ~S is invalid" CL::ARRAYP SYS::C-TYPEP-ARRAY) (T T T))) (CL::SIMPLE-ARRAY . #Y(#:458 475 (DEF-COMPOUND-TYPE SIMPLE-ARRAY (&OPTIONAL # #) ..)-88-2-1 #109Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA AE 24 00 80 4B AE 8E 1A 27 AE 63 AD 8C 9F 3F 87 01 00 14 24 00 33 AC 8F 1E 0A AC 8E AE 06 E1 AD 90 01 32 25 E2 6F 03 DE AE 2D 03 05 CB 14 00 52 AE 8F 1E 0A AE 8E AE 06 DB AF 90 01 32 12 DC 6F 03 DE B0 2D 03 05 CB 1B 64 83 01 1B FF BD 16 02 E3 B0 B0 B3 2D 04 0A 19 05) (CL::* 4096. "~S: rank ~S is invalid" SYS::TEXT CL::SIMPLE-ARRAY SYS::C-WARN SYS::C-TYPEP 4294967296. "~S: dimension ~S is invalid" SYS::SIMPLE-ARRAY-P SYS::C-TYPEP-ARRAY) (T T T))) (CL::VECTOR . #Y(#:476 494 (DEF-COMPOUND-TYPE VECTOR (&OPTIONAL # #) ..)-89-2-1 #106Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 3D AE 8E AE 39 DB AF 91 01 32 33 E1 E2 B2 7B 02 B1 24 00 35 E3 E4 B4 7B 02 E5 B4 6F 0C 7B 02 7B 03 61 01 14 B1 24 00 24 E7 E8 B5 D4 5D 7A E5 B4 7B 02 7B 03 61 01 14 33 02 23 5D 5D 19 05 DC 6F 03 DE B0 2D 03 05 E0 00 52 00 1B 57 00 1B 67) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::VECTOR SYS::C-WARN SYS::C-TYPEP CL::AND CL::VECTORP CL::EQUAL CL::ARRAY-ELEMENT-TYPE CL::QUOTE CL::UPGRADED-ARRAY-ELEMENT-TYPE CL::EQL CL::ARRAY-DIMENSION (0)) (T T T))) (CL::SIMPLE-VECTOR . #Y(#:495 501 (DEF-COMPOUND-TYPE SIMPLE-VECTOR (&OPTIONAL #) ..)-90-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-VECTOR SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-VECTOR-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::COMPLEX . #Y(#:502 515 (DEF-COMPOUND-TYPE COMPLEX (&OPTIONAL # #) ..)-91-2-1 #78Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 A0 FA DB DC B2 7B 02 B1 24 00 2B DD DE B4 7B 02 DF B4 6F 06 7B 02 7B 03 61 01 14 B1 24 00 1A DD E1 B5 7B 02 DF B4 6F 06 7B 02 7B 03 61 01 14 33 02 23 5D 5D 19 05 00 1B 61 00 1B 72) (CL::* CL::AND CL::COMPLEXP CL::TYPEP CL::REALPART CL::QUOTE CL::UPGRADED-COMPLEX-PART-TYPE CL::IMAGPART) (T T T))) (CL::INTEGER . #Y(#:516 520 (DEF-COMPOUND-TYPE INTEGER (&OPTIONAL # #) ..)-92-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::INTEGER CL::INTEGERP SYS::C-TYPEP-NUMBER) (T T T))) (CL::MOD . #Y(#:521 528 (DEF-COMPOUND-TYPE MOD (N) ..)-93-2-1 #46Y(00 00 00 00 02 00 00 00 01 18 AE 8F 1E 15 DF E0 B1 7B 02 E1 E2 B3 7B 02 7B 02 E3 B3 B3 7B 03 61 04 19 04 DA 6F 01 DC B0 2D 03 03 DE 00 52) ("~S: argument to MOD must be an integer: ~S" SYS::TEXT CL::TYPEP SYS::C-WARN SYS::C-TYPEP CL::AND CL::INTEGERP CL::NOT CL::MINUSP CL::<) (T T T))) (CL::SIGNED-BYTE . #Y(#:529 537 (DEF-COMPOUND-TYPE SIGNED-BYTE (&OPTIONAL #) ..)-94-2-1 #61Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 04 AE 8F 1E 17 E1 E2 B1 7B 02 B0 24 00 1A E3 E4 B3 7B 02 B2 7B 03 61 01 5D 5D 19 04 DB 6F 02 DD DE B1 2D 04 05 E0 00 52 00 1B 6D) (CL::* "~S: argument to ~S must be an integer or * : ~S" SYS::TEXT CL::TYPEP CL::SIGNED-BYTE SYS::C-WARN SYS::C-TYPEP CL::AND CL::INTEGERP CL::< CL::INTEGER-LENGTH) (T T T))) (CL::UNSIGNED-BYTE . #Y(#:538 549 (DEF-COMPOUND-TYPE UNSIGNED-BYTE (&OPTIONAL #) ..)-95-2-1 #69Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 04 AE 8F 1E 1F E1 E2 B1 7B 02 E3 E4 B3 7B 02 7B 02 B1 24 00 1B E5 E6 B4 7B 02 B3 7B 03 61 01 5D 5D 5D 19 04 DB 6F 02 DD DE B1 2D 04 05 E0 00 52 00 1B 6C) (CL::* "~S: argument to ~S must be an integer or * : ~S" SYS::TEXT CL::TYPEP CL::UNSIGNED-BYTE SYS::C-WARN SYS::C-TYPEP CL::AND CL::INTEGERP CL::NOT CL::MINUSP CL::<= CL::INTEGER-LENGTH) (T T T))) (CL::REAL . #Y(#:550 554 (DEF-COMPOUND-TYPE REAL (&OPTIONAL # #) ..)-96-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::REAL CL::REALP SYS::C-TYPEP-NUMBER) (T T T))) (CL::RATIONAL . #Y(#:555 559 (DEF-COMPOUND-TYPE RATIONAL (&OPTIONAL # #) ..)-97-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::RATIONAL CL::RATIONALP SYS::C-TYPEP-NUMBER) (T T T))) (CL::FLOAT . #Y(#:560 564 (DEF-COMPOUND-TYPE FLOAT (&OPTIONAL # #) ..)-98-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::FLOAT CL::FLOATP SYS::C-TYPEP-NUMBER) (T T T))) (CL::SHORT-FLOAT . #Y(#:565 569 (DEF-COMPOUND-TYPE SHORT-FLOAT (&OPTIONAL # #) ..)-99-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::SHORT-FLOAT SYS::SHORT-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::SINGLE-FLOAT . #Y(#:570 574 (DEF-COMPOUND-TYPE SINGLE-FLOAT (&OPTIONAL # #) ..)-100-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::SINGLE-FLOAT SYS::SINGLE-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::DOUBLE-FLOAT . #Y(#:575 579 (DEF-COMPOUND-TYPE DOUBLE-FLOAT (&OPTIONAL # #) ..)-101-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::DOUBLE-FLOAT SYS::DOUBLE-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::LONG-FLOAT . #Y(#:580 584 (DEF-COMPOUND-TYPE LONG-FLOAT (&OPTIONAL # #) ..)-102-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::LONG-FLOAT SYS::LONG-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::STRING . #Y(#:585 591 (DEF-COMPOUND-TYPE STRING (&OPTIONAL #) ..)-103-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::STRING SYS::C-WARN SYS::C-TYPEP CL::STRINGP SYS::C-TYPEP-VECTOR) (T T T))) (CL::SIMPLE-STRING . #Y(#:592 598 (DEF-COMPOUND-TYPE SIMPLE-STRING (&OPTIONAL #) ..)-104-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-STRING SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-STRING-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::BASE-STRING . #Y(#:599 605 (DEF-COMPOUND-TYPE BASE-STRING (&OPTIONAL #) ..)-105-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::BASE-STRING SYS::C-WARN SYS::C-TYPEP CL::STRINGP SYS::C-TYPEP-VECTOR) (T T T))) (CL::SIMPLE-BASE-STRING . #Y(#:606 612 (DEF-COMPOUND-TYPE SIMPLE-BASE-STRING (&OPTIONAL #) ..)-106-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-BASE-STRING SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-STRING-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::BIT-VECTOR . #Y(#:613 619 (DEF-COMPOUND-TYPE BIT-VECTOR (&OPTIONAL #) ..)-107-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::BIT-VECTOR SYS::C-WARN SYS::C-TYPEP CL::BIT-VECTOR-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::SIMPLE-BIT-VECTOR . #Y(#:620 626 (DEF-COMPOUND-TYPE SIMPLE-BIT-VECTOR (&OPTIONAL #) ..)-108-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-BIT-VECTOR SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-BIT-VECTOR-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::CONS . #Y(#:627 637 (DEF-COMPOUND-TYPE CONS (&OPTIONAL # #) ..)-109-2-1 #74Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B2 7B 02 B1 24 00 27 DD DE B4 7B 02 DF B4 7B 02 7B 03 61 01 14 B1 24 00 18 DD E0 B5 7B 02 DF B4 7B 02 7B 03 61 01 14 33 02 23 5D 5D 19 05 00 1B 63 00 1B 72) (CL::* CL::AND CL::CONSP CL::TYPEP CL::CAR CL::QUOTE CL::CDR) (T () ())))))



|#

