
(in-package "SI")

(ADD-CI "BUILT-IN-CLASS" ARRAY CLASS-NAME ARRAY)
(ADD-CI "BUILT-IN-CLASS" ARRAY SI:CLASS-PRECEDENCE-LIST (T))
;;;;(ADD-CI "BUILT-IN-CLASS" ARRAY SI::PROTOTYPE  #0A0)
(ADD-CI "BUILT-IN-CLASS" ARRAY :SUBCLASS SIMPLE-ARRAY)
(ADD-CI "BUILT-IN-CLASS" ARRAY :SUBCLASS VECTOR)
(ADD-CI "BUILT-IN-CLASS" ARRAY TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" BASE-STRING CLASS-NAME BASE-STRING)
(ADD-CI "BUILT-IN-CLASS" BASE-STRING SI:CLASS-PRECEDENCE-LIST (STRING VECTOR                     ARRAY                     SEQUENCE                     T))
(ADD-CI "BUILT-IN-CLASS" BASE-STRING SI:CLASS-PRECEDENCE-LIST (STRING VECTOR ARRAY SEQUENCE                     T))
;;(ADD-CI "BUILT-IN-CLASS" BASE-STRING SI::PROTOTYPE  "")
(ADD-CI "BUILT-IN-CLASS" BASE-STRING :SUBCLASS SIMPLE-BASE-STRING)
(ADD-CI "BUILT-IN-CLASS" BASE-STRING TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" BIGNUM CLASS-NAME BIGNUM)
(ADD-CI "BUILT-IN-CLASS" BIGNUM SI:CLASS-PRECEDENCE-LIST (INTEGER RATIONAL REAL NUMBER  T))
;;(ADD-CI "BUILT-IN-CLASS" BIGNUM SI::PROTOTYPE  79228162514264337593543950336)
(ADD-CI "BUILT-IN-CLASS" BIGNUM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" BIT-VECTOR CLASS-NAME BIT-VECTOR)
(ADD-CI "BUILT-IN-CLASS" BIT-VECTOR SI:CLASS-PRECEDENCE-LIST (VECTOR ARRAY SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" BIT-VECTOR SI::PROTOTYPE  #*)
(ADD-CI "BUILT-IN-CLASS" BIT-VECTOR :SUBCLASS SIMPLE-BIT-VECTOR)
(ADD-CI "BUILT-IN-CLASS" BIT-VECTOR TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" BROADCAST-STREAM CLASS-NAME BROADCAST-STREAM)
(ADD-CI "BUILT-IN-CLASS" BROADCAST-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" BROADCAST-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" BROADCAST-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" CHARACTER CLASS-NAME CHARACTER)
(ADD-CI "BUILT-IN-CLASS" CHARACTER SI:CLASS-PRECEDENCE-LIST (T))
;;(ADD-CI "BUILT-IN-CLASS" CHARACTER SI::PROTOTYPE  #\*)
(ADD-CI "BUILT-IN-CLASS" CHARACTER TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" COMPLEX CLASS-NAME COMPLEX)
(ADD-CI "BUILT-IN-CLASS" COMPLEX SI:CLASS-PRECEDENCE-LIST (NUMBER T))
;;;;(ADD-CI "BUILT-IN-CLASS" COMPLEX SI::PROTOTYPE  #C(42 42))
(ADD-CI "BUILT-IN-CLASS" COMPLEX TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" CONCATENATED-STREAM CLASS-NAME CONCATENATED-STREAM)
(ADD-CI "BUILT-IN-CLASS" CONCATENATED-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" CONCATENATED-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" CONCATENATED-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" CONS CLASS-NAME CONS)
(ADD-CI "BUILT-IN-CLASS" CONS SI:CLASS-PRECEDENCE-LIST (LIST SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" CONS SI::PROTOTYPE  (NIL))
(ADD-CI "BUILT-IN-CLASS" CONS TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" DOUBLE-FLOAT CLASS-NAME DOUBLE-FLOAT)
(ADD-CI "BUILT-IN-CLASS" DOUBLE-FLOAT SI:CLASS-PRECEDENCE-LIST (FLOAT REAL NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" DOUBLE-FLOAT SI::PROTOTYPE  42.0d0)
(ADD-CI "BUILT-IN-CLASS" DOUBLE-FLOAT TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" ECHO-STREAM CLASS-NAME ECHO-STREAM)
(ADD-CI "BUILT-IN-CLASS" ECHO-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" ECHO-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" ECHO-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS BROADCAST-STREAM)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS CONCATENATED-STREAM)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS ECHO-STREAM)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS FILE-STREAM)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS STRING-STREAM)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS SYNONYM-STREAM)
(ADD-CI "BUILT-IN-CLASS" EXT:ANSI-STREAM :SUBCLASS TWO-WAY-STREAM)
(ADD-CI "BUILT-IN-CLASS" FILE-STREAM CLASS-NAME FILE-STREAM)
(ADD-CI "BUILT-IN-CLASS" FILE-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" FILE-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" FILE-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" FIXNUM CLASS-NAME FIXNUM)
(ADD-CI "BUILT-IN-CLASS" FIXNUM SI:CLASS-PRECEDENCE-LIST (INTEGER RATIONAL REAL NUMBER  T))
;;(ADD-CI "BUILT-IN-CLASS" FIXNUM SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" FIXNUM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" FLOAT CLASS-NAME FLOAT)
(ADD-CI "BUILT-IN-CLASS" FLOAT SI:CLASS-PRECEDENCE-LIST (REAL NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" FLOAT SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" FLOAT :SUBCLASS DOUBLE-FLOAT)
(ADD-CI "BUILT-IN-CLASS" FLOAT :SUBCLASS SINGLE-FLOAT)
(ADD-CI "BUILT-IN-CLASS" FLOAT TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" FUNCTION CLASS-NAME FUNCTION)
(ADD-CI "BUILT-IN-CLASS" FUNCTION :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "BUILT-IN-CLASS" FUNCTION :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "BUILT-IN-CLASS" FUNCTION SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" FUNCTION :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "BUILT-IN-CLASS" FUNCTION TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" HASH-TABLE CLASS-NAME HASH-TABLE)
(ADD-CI "BUILT-IN-CLASS" HASH-TABLE SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" HASH-TABLE TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" INTEGER CLASS-NAME INTEGER)
(ADD-CI "BUILT-IN-CLASS" INTEGER SI:CLASS-PRECEDENCE-LIST (RATIONAL REAL NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" INTEGER SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" INTEGER :SUBCLASS BIGNUM)
(ADD-CI "BUILT-IN-CLASS" INTEGER :SUBCLASS FIXNUM)
(ADD-CI "BUILT-IN-CLASS" INTEGER TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" KEYWORD CLASS-NAME KEYWORD)
(ADD-CI "BUILT-IN-CLASS" KEYWORD SI:CLASS-PRECEDENCE-LIST (SYMBOL T))
(ADD-CI "BUILT-IN-CLASS" KEYWORD TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" LIST CLASS-NAME LIST)
(ADD-CI "BUILT-IN-CLASS" LIST :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "BUILT-IN-CLASS" LIST :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "BUILT-IN-CLASS" LIST SI:CLASS-PRECEDENCE-LIST (SEQUENCE T))
(ADD-CI "BUILT-IN-CLASS" LIST :SUBCLASS CONS)
(ADD-CI "BUILT-IN-CLASS" LIST :SUBCLASS NULL)
(ADD-CI "BUILT-IN-CLASS" LIST TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" LOGICAL-PATHNAME CLASS-NAME LOGICAL-PATHNAME)
(ADD-CI "BUILT-IN-CLASS" LOGICAL-PATHNAME SI:CLASS-PRECEDENCE-LIST (PATHNAME T))
(ADD-CI "BUILT-IN-CLASS" LOGICAL-PATHNAME TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" NULL CLASS-NAME NULL)
(ADD-CI "BUILT-IN-CLASS" NULL :method SI:ENSURE-CLASS-USING-CLASS :NAME SI:ENSURE-CLASS-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" NULL :method SI:ENSURE-GENERIC-FUNCTION-USING-CLASS :NAME SI:ENSURE-GENERIC-FUNCTION-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" NULL SI:CLASS-PRECEDENCE-LIST (SYMBOL LIST SEQUENCE T))
(ADD-CI "BUILT-IN-CLASS" NULL TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" NUMBER CLASS-NAME NUMBER)
(ADD-CI "BUILT-IN-CLASS" NUMBER SI:CLASS-PRECEDENCE-LIST (T))
;;(ADD-CI "BUILT-IN-CLASS" NUMBER SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" NUMBER :SUBCLASS COMPLEX)
(ADD-CI "BUILT-IN-CLASS" NUMBER :SUBCLASS REAL)
(ADD-CI "BUILT-IN-CLASS" NUMBER TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" PACKAGE CLASS-NAME PACKAGE)
(ADD-CI "BUILT-IN-CLASS" PACKAGE :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "BUILT-IN-CLASS" PACKAGE :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "BUILT-IN-CLASS" PACKAGE SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" PACKAGE TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" PATHNAME CLASS-NAME PATHNAME)
(ADD-CI "BUILT-IN-CLASS" PATHNAME SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" PATHNAME :SUBCLASS LOGICAL-PATHNAME)
(ADD-CI "BUILT-IN-CLASS" PATHNAME TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" RANDOM-STATE CLASS-NAME RANDOM-STATE)
(ADD-CI "BUILT-IN-CLASS" RANDOM-STATE SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" RANDOM-STATE TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" RATIO CLASS-NAME RATIO)
(ADD-CI "BUILT-IN-CLASS" RATIO SI:CLASS-PRECEDENCE-LIST (RATIONAL REAL NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" RATIO SI::PROTOTYPE  1/42)
(ADD-CI "BUILT-IN-CLASS" RATIO TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" RATIONAL CLASS-NAME RATIONAL)
(ADD-CI "BUILT-IN-CLASS" RATIONAL SI:CLASS-PRECEDENCE-LIST (REAL NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" RATIONAL SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" RATIONAL :SUBCLASS INTEGER)
(ADD-CI "BUILT-IN-CLASS" RATIONAL :SUBCLASS RATIO)
(ADD-CI "BUILT-IN-CLASS" RATIONAL TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" READTABLE CLASS-NAME READTABLE)
(ADD-CI "BUILT-IN-CLASS" READTABLE SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" READTABLE TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" REAL CLASS-NAME REAL)
(ADD-CI "BUILT-IN-CLASS" REAL SI:CLASS-PRECEDENCE-LIST (NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" REAL SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" REAL :SUBCLASS FLOAT)
(ADD-CI "BUILT-IN-CLASS" REAL :SUBCLASS RATIONAL)
(ADD-CI "BUILT-IN-CLASS" REAL TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SEQUENCE CLASS-NAME SEQUENCE)
(ADD-CI "BUILT-IN-CLASS" SEQUENCE SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" SEQUENCE :SUBCLASS LIST)
(ADD-CI "BUILT-IN-CLASS" SEQUENCE :SUBCLASS VECTOR)
(ADD-CI "BUILT-IN-CLASS" SEQUENCE TYPE-OF BUILT-IN-CLASS)
#|
(ADD-CI "BUILT-IN-CLASS" SI:SIMD-PACK CLASS-NAME SI:SIMD-PACK)
(ADD-CI "BUILT-IN-CLASS" SI:SIMD-PACK SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;(ADD-CI "BUILT-IN-CLASS" SI:SIMD-PACK SI::PROTOTYPE  #<SI:SIMD-PACK  2A 00 00 00  00 00 00 00  2A 00 00 00  00 00 00 00>)
(ADD-CI "BUILT-IN-CLASS" SI:SIMD-PACK TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SI:SYSTEM-AREA-POINTER CLASS-NAME SI:SYSTEM-AREA-POINTER)
(ADD-CI "BUILT-IN-CLASS" SI:SYSTEM-AREA-POINTER SI:CLASS-PRECEDENCE-LIST (T))
;;;;;(ADD-CI "BUILT-IN-CLASS" SI:SYSTEM-AREA-POINTER SI::PROTOTYPE  #.(SI:INT-SAP #X0000002A))
(ADD-CI "BUILT-IN-CLASS" SI:SYSTEM-AREA-POINTER TYPE-OF BUILT-IN-CLASS)
|#
(ADD-CI "BUILT-IN-CLASS" SI:WEAK-POINTER CLASS-NAME SI:WEAK-POINTER)
(ADD-CI "BUILT-IN-CLASS" SI:WEAK-POINTER SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;;(ADD-CI "BUILT-IN-CLASS" SI:WEAK-POINTER SI::PROTOTYPE  #<weak pointer: #<PACKAGE "COMMON-LISP">>)
(ADD-CI "BUILT-IN-CLASS" SI:WEAK-POINTER TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY CLASS-NAME SIMPLE-ARRAY)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY SI:CLASS-PRECEDENCE-LIST (ARRAY T))
;;;;(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY SI::PROTOTYPE  #0A0)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY :SUBCLASS SIMPLE-BIT-VECTOR)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY :SUBCLASS SIMPLE-STRING)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY :SUBCLASS SIMPLE-VECTOR)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-ARRAY TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-BASE-STRING CLASS-NAME SIMPLE-BASE-STRING)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-BASE-STRING SI:CLASS-PRECEDENCE-LIST (BASE-STRING SIMPLE-STRING STRING  VECTOR SIMPLE-ARRAY ARRAY  SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" SIMPLE-BASE-STRING SI::PROTOTYPE  "")
(ADD-CI "BUILT-IN-CLASS" SIMPLE-BASE-STRING TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-BIT-VECTOR CLASS-NAME SIMPLE-BIT-VECTOR)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-BIT-VECTOR SI:CLASS-PRECEDENCE-LIST (BIT-VECTOR VECTOR SIMPLE-ARRAY  ARRAY SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" SIMPLE-BIT-VECTOR SI::PROTOTYPE  #*)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-BIT-VECTOR TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-STRING CLASS-NAME SIMPLE-STRING)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-STRING SI:CLASS-PRECEDENCE-LIST (STRING VECTOR SIMPLE-ARRAY                     ARRAY SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" SIMPLE-STRING SI::PROTOTYPE  42)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-STRING :SUBCLASS SIMPLE-BASE-STRING)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-STRING TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-VECTOR CLASS-NAME SIMPLE-VECTOR)
(ADD-CI "BUILT-IN-CLASS" SIMPLE-VECTOR SI:CLASS-PRECEDENCE-LIST (VECTOR SIMPLE-ARRAY ARRAY                     SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" SIMPLE-VECTOR SI::PROTOTYPE  #())
(ADD-CI "BUILT-IN-CLASS" SIMPLE-VECTOR TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SINGLE-FLOAT CLASS-NAME SINGLE-FLOAT)
(ADD-CI "BUILT-IN-CLASS" SINGLE-FLOAT SI:CLASS-PRECEDENCE-LIST (FLOAT REAL NUMBER T))
;;(ADD-CI "BUILT-IN-CLASS" SINGLE-FLOAT SI::PROTOTYPE  42.0)
(ADD-CI "BUILT-IN-CLASS" SINGLE-FLOAT TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" STREAM CLASS-NAME STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM SI:CLASS-PRECEDENCE-LIST (T))
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS BROADCAST-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS CONCATENATED-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS ECHO-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS FILE-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS STRING-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS SYNONYM-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM :SUBCLASS TWO-WAY-STREAM)
(ADD-CI "BUILT-IN-CLASS" STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" STRING CLASS-NAME STRING)
(ADD-CI "BUILT-IN-CLASS" STRING SI:CLASS-PRECEDENCE-LIST (VECTOR ARRAY SEQUENCE T))
;;(ADD-CI "BUILT-IN-CLASS" STRING SI::PROTOTYPE  "")
(ADD-CI "BUILT-IN-CLASS" STRING :SUBCLASS BASE-STRING)
(ADD-CI "BUILT-IN-CLASS" STRING :SUBCLASS SIMPLE-STRING)
(ADD-CI "BUILT-IN-CLASS" STRING TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" STRING-STREAM CLASS-NAME STRING-STREAM)
(ADD-CI "BUILT-IN-CLASS" STRING-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" STRING-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" STRING-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SYMBOL CLASS-NAME SYMBOL)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method (SETF SI:SLOT-VALUE-USING-CLASS) :NAME (SETF SI:SLOT-VALUE-USING-CLASS))
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method CHANGE-CLASS :NAME CHANGE-CLASS)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method MAKE-INSTANCE :NAME MAKE-INSTANCE)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method MAKE-INSTANCES-OBSOLETE :NAME MAKE-INSTANCES-OBSOLETE)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method SI:FIND-METHOD-COMBINATION :NAME SI:FIND-METHOD-COMBINATION)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method SI:SLOT-BOUNDP-USING-CLASS :NAME SI:SLOT-BOUNDP-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method SI:SLOT-MAKUNBOUND-USING-CLASS :NAME SI:SLOT-MAKUNBOUND-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :method SI:SLOT-VALUE-USING-CLASS :NAME SI:SLOT-VALUE-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" SYMBOL SI:CLASS-PRECEDENCE-LIST (T))
;;(ADD-CI "BUILT-IN-CLASS" SYMBOL SI::PROTOTYPE  #:MU)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :SUBCLASS KEYWORD)
(ADD-CI "BUILT-IN-CLASS" SYMBOL :SUBCLASS NULL)
(ADD-CI "BUILT-IN-CLASS" SYMBOL TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" SYNONYM-STREAM CLASS-NAME SYNONYM-STREAM)
(ADD-CI "BUILT-IN-CLASS" SYNONYM-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" SYNONYM-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" SYNONYM-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" T CLASS-NAME T)
(ADD-CI "BUILT-IN-CLASS" T :method (SETF CLASS-NAME) :NAME (SETF CLASS-NAME))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI::CLASS-LAYOUT) :NAME (SETF SI::CLASS-LAYOUT))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI::SLOT-DEFINITION-ALLOCATION-CLASS) :NAME (SETF SI::SLOT-DEFINITION-ALLOCATION-CLASS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-DIRECT-METHODS) :NAME (SETF SI:CLASS-DIRECT-METHODS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-DIRECT-SLOTS) :NAME (SETF SI:CLASS-DIRECT-SLOTS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-DIRECT-SUBCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-DIRECT-SUPERCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-FINALIZED-P) :NAME (SETF SI:CLASS-FINALIZED-P))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-PRECEDENCE-LIST) :NAME (SETF SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:CLASS-SLOTS) :NAME (SETF SI:CLASS-SLOTS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:GENERIC-FUNCTION-NAME) :NAME (SETF SI:GENERIC-FUNCTION-NAME))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-ALLOCATION) :NAME (SETF SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-DOCUMENTATION) :NAME (SETF SI:SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-INITARGS) :NAME (SETF SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-INITFORM) :NAME (SETF SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-INITFUNCTION) :NAME (SETF SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-LOCATION) :NAME (SETF SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-NAME) :NAME (SETF SI:SLOT-DEFINITION-NAME))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-READERS) :NAME (SETF SI:SLOT-DEFINITION-READERS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-TYPE) :NAME (SETF SI:SLOT-DEFINITION-TYPE))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-DEFINITION-WRITERS) :NAME (SETF SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "BUILT-IN-CLASS" T :method (SETF SI:SLOT-VALUE-USING-CLASS) :NAME (SETF SI:SLOT-VALUE-USING-CLASS))
(ADD-CI "BUILT-IN-CLASS" T :method COMPUTE-APPLICABLE-METHODS :NAME COMPUTE-APPLICABLE-METHODS)
(ADD-CI "BUILT-IN-CLASS" T :method DESCRIBE-OBJECT :NAME DESCRIBE-OBJECT)
(ADD-CI "BUILT-IN-CLASS" T :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "BUILT-IN-CLASS" T :method FIND-METHOD :NAME FIND-METHOD)
(ADD-CI "BUILT-IN-CLASS" T :method MAKE-LOAD-FORM :NAME MAKE-LOAD-FORM)
(ADD-CI "BUILT-IN-CLASS" T :method NO-APPLICABLE-METHOD :NAME NO-APPLICABLE-METHOD)
(ADD-CI "BUILT-IN-CLASS" T :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "BUILT-IN-CLASS" T :method SHARED-INITIALIZE :NAME SHARED-INITIALIZE)
(ADD-CI "BUILT-IN-CLASS" T :method SI::METHOD-MORE-SPECIFIC-P :NAME SI::METHOD-MORE-SPECIFIC-P)
(ADD-CI "BUILT-IN-CLASS" T :method SI::SLOT-EXISTS-P-USING-CLASS :NAME SI::SLOT-EXISTS-P-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :method SI:ADD-DEPENDENT :NAME SI:ADD-DEPENDENT)
(ADD-CI "BUILT-IN-CLASS" T :method SI:CLASS-PROTOTYPE :NAME SI:CLASS-PROTOTYPE)
(ADD-CI "BUILT-IN-CLASS" T :method SI:COMPUTE-APPLICABLE-METHODS-USING-CLASSES :NAME SI:COMPUTE-APPLICABLE-METHODS-USING-CLASSES)
(ADD-CI "BUILT-IN-CLASS" T :method SI:COMPUTE-EFFECTIVE-METHOD :NAME SI:COMPUTE-EFFECTIVE-METHOD)
(ADD-CI "BUILT-IN-CLASS" T :method SI:COMPUTE-EFFECTIVE-SLOT-DEFINITION :NAME SI:COMPUTE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "BUILT-IN-CLASS" T :method SI:ENSURE-CLASS-USING-CLASS :NAME SI:ENSURE-CLASS-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :method SI:ENSURE-GENERIC-FUNCTION-USING-CLASS :NAME SI:ENSURE-GENERIC-FUNCTION-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :method SI:FIND-METHOD-COMBINATION :NAME SI:FIND-METHOD-COMBINATION)
(ADD-CI "BUILT-IN-CLASS" T :method SI:MAKE-METHOD-LAMBDA :NAME SI:MAKE-METHOD-LAMBDA)
(ADD-CI "BUILT-IN-CLASS" T :method SI:MAP-DEPENDENTS :NAME SI:MAP-DEPENDENTS)
(ADD-CI "BUILT-IN-CLASS" T :method SI:REMOVE-DEPENDENT :NAME SI:REMOVE-DEPENDENT)
(ADD-CI "BUILT-IN-CLASS" T :method SI:SLOT-BOUNDP-USING-CLASS :NAME SI:SLOT-BOUNDP-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :method SI:SLOT-MAKUNBOUND-USING-CLASS :NAME SI:SLOT-MAKUNBOUND-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :method SI:SLOT-VALUE-USING-CLASS :NAME SI:SLOT-VALUE-USING-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :method SLOT-MISSING :NAME SLOT-MISSING)
(ADD-CI "BUILT-IN-CLASS" T :method SLOT-UNBOUND :NAME SLOT-UNBOUND)
(ADD-CI "BUILT-IN-CLASS" T :method UPDATE-INSTANCE-FOR-REDEFINED-CLASS :NAME UPDATE-INSTANCE-FOR-REDEFINED-CLASS)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS ARRAY)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS CHARACTER)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS FUNCTION)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS HASH-TABLE)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS NUMBER)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS PACKAGE)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS PATHNAME)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS RANDOM-STATE)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS READTABLE)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SEQUENCE)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SI:CODE-BLOCK)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SI:FOREIGN-DATA)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SI:FRAME)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SI:SIMD-PACK)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SI:SYSTEM-AREA-POINTER)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SI:WEAK-POINTER)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS STANDARD-OBJECT)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS STREAM)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS STRUCTURE-OBJECT)
(ADD-CI "BUILT-IN-CLASS" T :SUBCLASS SYMBOL)
(ADD-CI "BUILT-IN-CLASS" T TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" TWO-WAY-STREAM CLASS-NAME TWO-WAY-STREAM)
(ADD-CI "BUILT-IN-CLASS" TWO-WAY-STREAM SI:CLASS-PRECEDENCE-LIST (EXT:ANSI-STREAM STREAM T))
(ADD-CI "BUILT-IN-CLASS" TWO-WAY-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
(ADD-CI "BUILT-IN-CLASS" TWO-WAY-STREAM TYPE-OF BUILT-IN-CLASS)
(ADD-CI "BUILT-IN-CLASS" VECTOR CLASS-NAME VECTOR)
(ADD-CI "BUILT-IN-CLASS" VECTOR SI:CLASS-PRECEDENCE-LIST (ARRAY SEQUENCE T))
(ADD-CI "BUILT-IN-CLASS" VECTOR :SUBCLASS BASE-STRING)
(ADD-CI "BUILT-IN-CLASS" VECTOR :SUBCLASS BIT-VECTOR)
(ADD-CI "BUILT-IN-CLASS" VECTOR :SUBCLASS SIMPLE-VECTOR)
(ADD-CI "BUILT-IN-CLASS" VECTOR :SUBCLASS STRING)
(ADD-CI "BUILT-IN-CLASS" VECTOR TYPE-OF BUILT-IN-CLASS)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR CLASS-NAME ARITHMETIC-ERROR)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;;(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR SI::PROTOTYPE  #<ARITHMETIC-ERROR {1005CC0633}>)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERANDS :INITARGS (:OPERANDS))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERANDS :READERS (ARITHMETIC-ERROR-OPERANDS))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERATION :INITARGS (:OPERATION))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERATION :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERATION :READERS (ARITHMETIC-ERROR-OPERATION))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERANDS :INITARGS (:OPERANDS))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERANDS :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERANDS :READERS (ARITHMETIC-ERROR-OPERANDS))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERATION :INITARGS (:OPERATION))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERATION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SLOT SI::OPERATION :READERS (ARITHMETIC-ERROR-OPERATION))
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SUBCLASS DIVISION-BY-ZERO)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SUBCLASS FLOATING-POINT-INEXACT)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SUBCLASS FLOATING-POINT-INVALID-OPERATION)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SUBCLASS FLOATING-POINT-OVERFLOW)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SUBCLASS FLOATING-POINT-UNDERFLOW)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR :SUBCLASS SI::SIMPLE-ARITHMETIC-ERROR)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" ARITHMETIC-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" CELL-ERROR CLASS-NAME CELL-ERROR)
(ADD-CI "CONDITION-CLASS" CELL-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" CELL-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" CELL-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" CELL-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" CELL-ERROR SI::PROTOTYPE  #<CELL-ERROR {1005CE0E03}>)
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI::NAME :READERS (CELL-ERROR-NAME))
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI::NAME :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI::NAME :READERS (CELL-ERROR-NAME))
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SLOT SI:NAME :READERS (CELL-ERROR-NAME))
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SUBCLASS SI::SIMPLE-CELL-ERROR)
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SUBCLASS UNBOUND-SLOT)
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SUBCLASS UNBOUND-VARIABLE)
(ADD-CI "CONDITION-CLASS" CELL-ERROR :SUBCLASS UNDEFINED-FUNCTION)
(ADD-CI "CONDITION-CLASS" CELL-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" CELL-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" CONDITION CLASS-NAME CONDITION)
(ADD-CI "CONDITION-CLASS" CONDITION SI:CLASS-PRECEDENCE-LIST (SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" CONDITION SI::PROTOTYPE  #<CONDITION {100123D6C3}>)
(ADD-CI "CONDITION-CLASS" CONDITION :SUBCLASS SERIOUS-CONDITION)
(ADD-CI "CONDITION-CLASS" CONDITION :SUBCLASS SI:COMPILER-NOTE)
(ADD-CI "CONDITION-CLASS" CONDITION :SUBCLASS SI:STEP-CONDITION)
(ADD-CI "CONDITION-CLASS" CONDITION :SUBCLASS SI:SYSTEM-CONDITION)
(ADD-CI "CONDITION-CLASS" CONDITION :SUBCLASS SIMPLE-CONDITION)
(ADD-CI "CONDITION-CLASS" CONDITION :SUBCLASS WARNING)
(ADD-CI "CONDITION-CLASS" CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR CLASS-NAME CONTROL-ERROR)
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" CONTROL-ERROR SI::PROTOTYPE  #<CONTROL-ERROR {1005C9D3D3}>)
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR :SUBCLASS SI::ABORT-FAILURE)
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR :SUBCLASS SI::SIMPLE-CONTROL-ERROR)
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" CONTROL-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO CLASS-NAME DIVISION-BY-ZERO)
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO SI::PROTOTYPE  #<DIVISION-BY-ZERO {1005CA1CB3}>)
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO :SUBCLASS SI::SIMPLE-DIVISION-BY-ZERO)
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" DIVISION-BY-ZERO TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" END-OF-FILE CLASS-NAME END-OF-FILE)
(ADD-CI "CONDITION-CLASS" END-OF-FILE :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" END-OF-FILE SI:CLASS-PRECEDENCE-LIST (STREAM-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" END-OF-FILE SI:CLASS-PRECEDENCE-LIST (STREAM-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" END-OF-FILE SI:CLASS-PRECEDENCE-LIST (STREAM-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" END-OF-FILE SI::PROTOTYPE  #<END-OF-FILE {1005D50DC3}>)
(ADD-CI "CONDITION-CLASS" END-OF-FILE :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "Unexpected end of file on ~S."                       (STREAM-ERROR-STREAM                        CONDITION))))
(ADD-CI "CONDITION-CLASS" END-OF-FILE :SUBCLASS SI::SIMPLE-END-OF-FILE)
(ADD-CI "CONDITION-CLASS" END-OF-FILE TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" END-OF-FILE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" ERROR CLASS-NAME ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" ERROR SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" ERROR SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
(ADD-CI "CONDITION-CLASS" ERROR SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" ERROR SI::PROTOTYPE  #<ERROR {1005D714A3}>)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS ARITHMETIC-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS CELL-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS CONTROL-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS FILE-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS PACKAGE-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS PARSE-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS PRINT-NOT-READABLE)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::CPL-PROTOCOL-VIOLATION)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::INVALID-SUPERCLASS)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::MISSING-LOAD-FORM)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::NEW-VALUE-SPECIALIZATION)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::NO-PRIMARY-METHOD)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::OBSOLETE-STRUCTURE)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI::SLOTD-INITIALIZATION-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI:BREAKPOINT-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI:COMPILER-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI:DEFCONSTANT-UNEQL)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI:DEPRECATION-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI:INVALID-FASL)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SI:MEMORY-FAULT-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS SIMPLE-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS STREAM-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR :SUBCLASS TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" EXT:OS-ERROR :SUBCLASS SI::SIMPLE-OS-ERROR)
(ADD-CI "CONDITION-CLASS" EXT:SOURCE-PROGRAM-ERROR :SUBCLASS SI::SIMPLE-SOURCE-PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" FILE-ERROR CLASS-NAME FILE-ERROR)
(ADD-CI "CONDITION-CLASS" FILE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" FILE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" FILE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" FILE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" FILE-ERROR SI::PROTOTYPE  #<FILE-ERROR {1005D6D153}>)
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SLOT PATHNAME :INITARGS (:PATHNAME))
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SLOT PATHNAME :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SLOT PATHNAME :READERS (FILE-ERROR-PATHNAME))
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SLOT SI::PATHNAME :INITARGS (:PATHNAME))
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SLOT SI::PATHNAME :READERS (FILE-ERROR-PATHNAME))
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "Filesystem error with pathname ~S.~%Either 1) the file does not exist, or 2) we are not allowed to access the file, or 3) the pathname points to a broken symbolic link."                       (FILE-ERROR-PATHNAME                        CONDITION))))
(ADD-CI "CONDITION-CLASS" FILE-ERROR :SUBCLASS SI::SIMPLE-FILE-ERROR)
(ADD-CI "CONDITION-CLASS" FILE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" FILE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT CLASS-NAME FLOATING-POINT-INEXACT)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT SI::PROTOTYPE  #<FLOATING-POINT-INEXACT {1005CAEA53}>)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INEXACT TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION CLASS-NAME FLOATING-POINT-INVALID-OPERATION)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION SI::PROTOTYPE  #<FLOATING-POINT-INVALID-OPERATION {1005CB2ED3}>)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-INVALID-OPERATION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW CLASS-NAME FLOATING-POINT-OVERFLOW)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW SI::PROTOTYPE  #<FLOATING-POINT-OVERFLOW {1005CA6133}>)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW :SUBCLASS SI::SIMPLE-FLOATING-POINT-OVERFLOW)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-OVERFLOW TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW CLASS-NAME FLOATING-POINT-UNDERFLOW)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW SI:CLASS-PRECEDENCE-LIST (ARITHMETIC-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW SI::PROTOTYPE  #<FLOATING-POINT-UNDERFLOW {1005CAA5D3}>)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW :SUBCLASS SI::SIMPLE-FLOATING-POINT-UNDERFLOW)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" FLOATING-POINT-UNDERFLOW TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR CLASS-NAME PACKAGE-ERROR)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR SI::PROTOTYPE  #<PACKAGE-ERROR {1005D0C2A3}>)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SLOT PACKAGE :INITARGS (:PACKAGE))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SLOT PACKAGE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SLOT PACKAGE :READERS (PACKAGE-ERROR-PACKAGE))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SLOT SI::PACKAGE :INITARGS (:PACKAGE))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SLOT SI::PACKAGE :READERS (PACKAGE-ERROR-PACKAGE))
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SUBCLASS SI::SIMPLE-PACKAGE-ERROR)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SUBCLASS SI:NAME-CONFLICT)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR :SUBCLASS SI:PACKAGE-LOCK-VIOLATION)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" PACKAGE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" PARSE-ERROR CLASS-NAME PARSE-ERROR)
(ADD-CI "CONDITION-CLASS" PARSE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" PARSE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" PARSE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" PARSE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" PARSE-ERROR SI::PROTOTYPE  #<PARSE-ERROR {1005D46AE3}>)
(ADD-CI "CONDITION-CLASS" PARSE-ERROR :SUBCLASS READER-ERROR)
(ADD-CI "CONDITION-CLASS" PARSE-ERROR :SUBCLASS SI::SIMPLE-PARSE-ERROR)
(ADD-CI "CONDITION-CLASS" PARSE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" PARSE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE CLASS-NAME PRINT-NOT-READABLE)
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE SI::PROTOTYPE  #<PRINT-NOT-READABLE {1005D426D3}>)
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SLOT SI::OBJECT :INITARGS (:OBJECT))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SLOT SI::OBJECT :READERS (PRINT-NOT-READABLE-OBJECT))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SLOT SI::OBJECT :INITARGS (:OBJECT))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SLOT SI::OBJECT :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SLOT SI::OBJECT :READERS (PRINT-NOT-READABLE-OBJECT))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "Cannot print object ~A readably."                       (PRINT-NOT-READABLE-OBJECT                        CONDITION))))
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE :SUBCLASS SI::SIMPLE-PRINT-NOT-READABLE)
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" PRINT-NOT-READABLE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR CLASS-NAME PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR SI::PROTOTYPE  #<PROGRAM-ERROR {1005C86F73}>)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR :SUBCLASS SI::ARGUMENT-LIST-DOTTED)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR :SUBCLASS SI::INITARG-ERROR)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR :SUBCLASS SI::KEYWORD-ERROR)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR :SUBCLASS SI::SIMPLE-PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" PROGRAM-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" READER-ERROR CLASS-NAME READER-ERROR)
(ADD-CI "CONDITION-CLASS" READER-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" READER-ERROR SI:CLASS-PRECEDENCE-LIST (PARSE-ERROR STREAM-ERROR ERROR  SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" READER-ERROR SI:CLASS-PRECEDENCE-LIST (PARSE-ERROR STREAM-ERROR ERROR  SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
(ADD-CI "CONDITION-CLASS" READER-ERROR SI:CLASS-PRECEDENCE-LIST (PARSE-ERROR STREAM-ERROR ERROR SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" READER-ERROR SI:CLASS-PRECEDENCE-LIST (PARSE-ERROR STREAM-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" READER-ERROR SI::PROTOTYPE  #<READER-ERROR {1005D4C763}>)
(ADD-CI "CONDITION-CLASS" READER-ERROR :SUBCLASS SI::SIMPLE-READER-ERROR)
(ADD-CI "CONDITION-CLASS" READER-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" READER-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION CLASS-NAME SERIOUS-CONDITION)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION SI:CLASS-PRECEDENCE-LIST (CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION SI:CLASS-PRECEDENCE-LIST (CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION SI::PROTOTYPE  #<SERIOUS-CONDITION {1005E50D63}>)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :SUBCLASS ERROR)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :SUBCLASS SI::INTERRUPT-CONDITION)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :SUBCLASS SI::SIMPLE-SERIOUS-CONDITION)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :SUBCLASS SI:INTERACTIVE-INTERRUPT)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :SUBCLASS SI:TIMEOUT)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION :SUBCLASS STORAGE-CONDITION)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SERIOUS-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::ABORT-FAILURE CLASS-NAME SI::ABORT-FAILURE)
(ADD-CI "CONDITION-CLASS" SI::ABORT-FAILURE SI:CLASS-PRECEDENCE-LIST (CONTROL-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::ABORT-FAILURE :SLOT SI:REPORT-FUNCTION :INITFORM "Abort failed.")
(ADD-CI "CONDITION-CLASS" SI::ABORT-FAILURE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::ARGUMENT-LIST-DOTTED CLASS-NAME SI::ARGUMENT-LIST-DOTTED)
(ADD-CI "CONDITION-CLASS" SI::ARGUMENT-LIST-DOTTED SI:CLASS-PRECEDENCE-LIST (PROGRAM-ERROR TYPE-ERROR ERROR SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::ARGUMENT-LIST-DOTTED :SUBCLASS SI::SIMPLE-ARGUMENT-LIST-DOTTED)
(ADD-CI "CONDITION-CLASS" SI::ARGUMENT-LIST-DOTTED TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE CLASS-NAME SI::CASE-FAILURE)
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE SI:CLASS-PRECEDENCE-LIST (TYPE-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI::NAME :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI::NAME :READERS (SI::CASE-FAILURE-NAME))
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI::POSSIBILITIES :INITARGS (:POSSIBILITIES))
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI::POSSIBILITIES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI::POSSIBILITIES :READERS (SI::CASE-FAILURE-POSSIBILITIES))
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "~S fell through ~S expression.~%Wanted one of ~:S."                       (TYPE-ERROR-DATUM CONDITION)                       (SI::CASE-FAILURE-NAME CONDITION)                       (SI::CASE-FAILURE-POSSIBILITIES CONDITION))))
(ADD-CI "CONDITION-CLASS" SI::CASE-FAILURE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::CHARSET-TYPE-ERROR CLASS-NAME SI::CHARSET-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::CHARSET-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (TYPE-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::CHARSET-TYPE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::COMPILER-UNSUPPORTED-FEATURE-ERROR CLASS-NAME SI::COMPILER-UNSUPPORTED-FEATURE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::COMPILER-UNSUPPORTED-FEATURE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SI::COMPILER-UNSUPPORTED-FEATURE-ERROR SI:CLASS-PRECEDENCE-LIST (SI:COMPILER-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::COMPILER-UNSUPPORTED-FEATURE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION CLASS-NAME SI::CPL-PROTOCOL-VIOLATION)
;;;;;;(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION :direct-initargs ((:REFERENCES (LIST '(:SBCL :NODE "Metaobject Protocol"))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/std-class.lisp")     {1001D50D4B}>)))
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION SI::PROTOTYPE  #<SI::CPL-PROTOCOL-VIOLATION {1005D9BC83}>)
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION :SLOT CLASS :INITARGS (:CLASS))
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION :SLOT CLASS :READERS (SI::CPL-PROTOCOL-VIOLATION-CLASS))
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION :SLOT SI::CPL :INITARGS (:CPL))
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION :SLOT SI::CPL :READERS (SI::CPL-PROTOCOL-VIOLATION-CPL))
(ADD-CI "CONDITION-CLASS" SI::CPL-PROTOCOL-VIOLATION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::FIND-METHOD-LENGTH-MISMATCH CLASS-NAME SI::FIND-METHOD-LENGTH-MISMATCH)
;;;;(ADD-CI "CONDITION-CLASS" SI::FIND-METHOD-LENGTH-MISMATCH :direct-initargs ((:REFERENCES (LIST '(:ANSI-CL :FUNCTION FIND-METHOD))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/methods.lisp")     {1001D51B5B}>)))
(ADD-CI "CONDITION-CLASS" SI::FIND-METHOD-LENGTH-MISMATCH SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION SIMPLE-ERROR  SIMPLE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::FIND-METHOD-LENGTH-MISMATCH SI::PROTOTYPE  #<SI::FIND-METHOD-LENGTH-MISMATCH {1005E360B3}>)
(ADD-CI "CONDITION-CLASS" SI::FIND-METHOD-LENGTH-MISMATCH TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR CLASS-NAME SI::INITARG-ERROR)
;;;;(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR :direct-initargs ((:REFERENCES (LIST '(:ANSI-CL :SECTION (7 1 2)))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/init.lisp")     {1001D502BB}>)))
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION PROGRAM-ERROR ERROR  SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR SI::PROTOTYPE  #<SI::INITARG-ERROR {1005C98BA3}>)
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR :SLOT CLASS :INITARGS (:CLASS))
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR :SLOT CLASS :READERS (SI::INITARG-ERROR-CLASS))
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR :SLOT SI::INITARGS :READERS (SI::INITARG-ERROR-INITARGS))
(ADD-CI "CONDITION-CLASS" SI::INITARG-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR CLASS-NAME SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR)
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR SI::PROTOTYPE  #<SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR {1005DE9363}>)
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR :SLOT SI::FUN :INITARGS (:FUN))
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR :SLOT SI::FUN :READERS (SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR-FUN))
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR :SLOT SI::SLOTD :INITARGS (:SLOTD))
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR :SLOT SI::SLOTD :READERS (SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR-SLOTD))
(ADD-CI "CONDITION-CLASS" SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::INTERRUPT-CONDITION CLASS-NAME SI::INTERRUPT-CONDITION)
(ADD-CI "CONDITION-CLASS" SI::INTERRUPT-CONDITION SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::INTERRUPT-CONDITION :SUBCLASS SI::SIMPLE-INTERRUPT-CONDITION)
(ADD-CI "CONDITION-CLASS" SI::INTERRUPT-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS CLASS-NAME SI::INVALID-SUPERCLASS)
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS SI::PROTOTYPE  #<SI::INVALID-SUPERCLASS {1005DAC2E3}>)
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS :SLOT CLASS :INITARGS (:CLASS))
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS :SLOT CLASS :READERS (SI::INVALID-SUPERCLASS-CLASS))
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS :SLOT SI::SUPERCLASS :INITARGS (:SUPERCLASS))
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS :SLOT SI::SUPERCLASS :READERS (SI::INVALID-SUPERCLASS-SUPERCLASS))
(ADD-CI "CONDITION-CLASS" SI::INVALID-SUPERCLASS TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::KEYWORD-ERROR CLASS-NAME SI::KEYWORD-ERROR)
(ADD-CI "CONDITION-CLASS" SI::KEYWORD-ERROR SI:CLASS-PRECEDENCE-LIST (PROGRAM-ERROR TYPE-ERROR ERROR SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::KEYWORD-ERROR :SUBCLASS SI::SIMPLE-KEYWORD-ERROR)
(ADD-CI "CONDITION-CLASS" SI::KEYWORD-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::LONG-METHOD-COMBINATION-ERROR CLASS-NAME SI::LONG-METHOD-COMBINATION-ERROR)
;;;;(ADD-CI "CONDITION-CLASS" SI::LONG-METHOD-COMBINATION-ERROR :direct-initargs ((:REFERENCES   (LIST '(:ANSI-CL :MACRO DEFINE-METHOD-COMBINATION))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defcombin.lisp")     {1001D526BB}>)))
(ADD-CI "CONDITION-CLASS" SI::LONG-METHOD-COMBINATION-ERROR SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION SIMPLE-ERROR  SIMPLE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::LONG-METHOD-COMBINATION-ERROR SI::PROTOTYPE  #<SI::LONG-METHOD-COMBINATION-ERROR {1005E2CC43}>)
(ADD-CI "CONDITION-CLASS" SI::LONG-METHOD-COMBINATION-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::METAOBJECT-INITIALIZATION-VIOLATION CLASS-NAME SI::METAOBJECT-INITIALIZATION-VIOLATION)
(ADD-CI "CONDITION-CLASS" SI::METAOBJECT-INITIALIZATION-VIOLATION SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION SIMPLE-ERROR  SIMPLE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::METAOBJECT-INITIALIZATION-VIOLATION SI::PROTOTYPE  #<SI::METAOBJECT-INITIALIZATION-VIOLATION {1005E3DC23}>)
(ADD-CI "CONDITION-CLASS" SI::METAOBJECT-INITIALIZATION-VIOLATION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::MISSING-LOAD-FORM CLASS-NAME SI::MISSING-LOAD-FORM)
(ADD-CI "CONDITION-CLASS" SI::MISSING-LOAD-FORM SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::MISSING-LOAD-FORM :SLOT SI::OBJECT :INITARGS (:OBJECT))
(ADD-CI "CONDITION-CLASS" SI::MISSING-LOAD-FORM :SLOT SI::OBJECT :READERS (SI::MISSING-LOAD-FORM-OBJECT))
(ADD-CI "CONDITION-CLASS" SI::MISSING-LOAD-FORM :SUBCLASS SI::SIMPLE-MISSING-LOAD-FORM)
(ADD-CI "CONDITION-CLASS" SI::MISSING-LOAD-FORM TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION CLASS-NAME SI::NEW-VALUE-SPECIALIZATION)
;;;;(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION :direct-initargs ((:REFERENCES   (LIST '(:SBCL :NODE "Metaobject Protocol")                     '(:AMOP :GENERIC-FUNCTION                       (SETF SI:SLOT-VALUE-USING-CLASS)))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/methods.lisp")     {1001D51FCB}>)))
(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION SI::PROTOTYPE  #<SI::NEW-VALUE-SPECIALIZATION {1005D7EF53}>)
(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION :SLOT SI::%METHOD :INITARGS (:METHOD))
(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION :SLOT SI::%METHOD :READERS (SI::NEW-VALUE-SPECIALIZATION-METHOD))
(ADD-CI "CONDITION-CLASS" SI::NEW-VALUE-SPECIALIZATION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD CLASS-NAME SI::NO-PRIMARY-METHOD)
;;;;(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD :direct-initargs ((:REFERENCES (LIST '(:ANSI-CL :SECTION (7 6 6 2)))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/braid.lisp")     {1001D4EC5B}>)))
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD SI::PROTOTYPE  #<SI::NO-PRIMARY-METHOD {1005DD8383}>)
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD :SLOT GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD :SLOT GENERIC-FUNCTION :READERS (SI::NO-PRIMARY-METHOD-GENERIC-FUNCTION))
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD :SLOT SI::ARGS :INITARGS (:ARGS))
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD :SLOT SI::ARGS :READERS (SI::NO-PRIMARY-METHOD-ARGS))
(ADD-CI "CONDITION-CLASS" SI::NO-PRIMARY-METHOD TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::OBSOLETE-STRUCTURE CLASS-NAME SI::OBSOLETE-STRUCTURE)
(ADD-CI "CONDITION-CLASS" SI::OBSOLETE-STRUCTURE SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::OBSOLETE-STRUCTURE SI::PROTOTYPE  #<SI::OBSOLETE-STRUCTURE {1005D89D53}>)
(ADD-CI "CONDITION-CLASS" SI::OBSOLETE-STRUCTURE :SLOT SI::DATUM :INITARGS (:DATUM))
(ADD-CI "CONDITION-CLASS" SI::OBSOLETE-STRUCTURE :SLOT SI::DATUM :READERS (SI::OBSOLETE-STRUCTURE-DATUM))
(ADD-CI "CONDITION-CLASS" SI::OBSOLETE-STRUCTURE TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::PRINT-OBJECT-STREAM-SPECIALIZER CLASS-NAME SI::PRINT-OBJECT-STREAM-SPECIALIZER)
;;;;(ADD-CI "CONDITION-CLASS" SI::PRINT-OBJECT-STREAM-SPECIALIZER :direct-initargs ((:FORMAT-ARGUMENTS (LIST 'PRINT-OBJECT)   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/methods.lisp")     {1001D5226B}>)  (:FORMAT-CONTROL "~@<Specializing on the second argument to ~S has ~                    unportable effects, and also interferes with ~                    precomputation of print functions for exceptional ~                    situations.~@:>"   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/methods.lisp")     {1001D5233B}>)  (:REFERENCES   (LIST '(:ANSI-CL :FUNCTION PRINT-OBJECT))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/methods.lisp")     {1001D523EB}>)))
(ADD-CI "CONDITION-CLASS" SI::PRINT-OBJECT-STREAM-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION SIMPLE-WARNING  SIMPLE-CONDITION WARNING CONDITION  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::PRINT-OBJECT-STREAM-SPECIALIZER SI::PROTOTYPE  #<SI::PRINT-OBJECT-STREAM-SPECIALIZER   "~@<Specializing on the second argument to ~S has ~                    unportable effects, and also interferes with ~                    precomputation of print functions for exceptional ~                    situations.~@:>"   {1005E8B863}>)
(ADD-CI "CONDITION-CLASS" SI::PRINT-OBJECT-STREAM-SPECIALIZER TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-ARGUMENT-LIST-DOTTED CLASS-NAME SI::SIMPLE-ARGUMENT-LIST-DOTTED)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-ARGUMENT-LIST-DOTTED SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION SI::ARGUMENT-LIST-DOTTED PROGRAM-ERROR TYPE-ERROR  ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-ARGUMENT-LIST-DOTTED TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-ARITHMETIC-ERROR CLASS-NAME SI::SIMPLE-ARITHMETIC-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-ARITHMETIC-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION ARITHMETIC-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-ARITHMETIC-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CELL-ERROR CLASS-NAME SI::SIMPLE-CELL-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CELL-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CELL-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CLOS-WARNING CLASS-NAME SI::SIMPLE-CLOS-WARNING)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CLOS-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION SI:CLOS-WARNING WARNING CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CLOS-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CONTROL-ERROR CLASS-NAME SI::SIMPLE-CONTROL-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CONTROL-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION CONTROL-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-CONTROL-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-DIVISION-BY-ZERO CLASS-NAME SI::SIMPLE-DIVISION-BY-ZERO)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-DIVISION-BY-ZERO SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION DIVISION-BY-ZERO ARITHMETIC-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-DIVISION-BY-ZERO TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-END-OF-FILE CLASS-NAME SI::SIMPLE-END-OF-FILE)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-END-OF-FILE SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION END-OF-FILE STREAM-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-END-OF-FILE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FILE-ERROR CLASS-NAME SI::SIMPLE-FILE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FILE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION FILE-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FILE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FLOATING-POINT-OVERFLOW CLASS-NAME SI::SIMPLE-FLOATING-POINT-OVERFLOW)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FLOATING-POINT-OVERFLOW SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION FLOATING-POINT-OVERFLOW ARITHMETIC-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FLOATING-POINT-OVERFLOW TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FLOATING-POINT-UNDERFLOW CLASS-NAME SI::SIMPLE-FLOATING-POINT-UNDERFLOW)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FLOATING-POINT-UNDERFLOW SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION FLOATING-POINT-UNDERFLOW ARITHMETIC-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-FLOATING-POINT-UNDERFLOW TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-GF-ALREADY-CALLED-WARNING CLASS-NAME SI::SIMPLE-GF-ALREADY-CALLED-WARNING)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-GF-ALREADY-CALLED-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION SI:GF-ALREADY-CALLED-WARNING SI:CLOS-WARNING WARNING CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-GF-ALREADY-CALLED-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-GF-REPLACING-METHOD-WARNING CLASS-NAME SI::SIMPLE-GF-REPLACING-METHOD-WARNING)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-GF-REPLACING-METHOD-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION SI:GF-REPLACING-METHOD-WARNING SI:CLOS-WARNING WARNING CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-GF-REPLACING-METHOD-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-INTERRUPT-CONDITION CLASS-NAME SI::SIMPLE-INTERRUPT-CONDITION)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-INTERRUPT-CONDITION SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION SI::INTERRUPT-CONDITION SERIOUS-CONDITION CONDITION STANDARD-OBJECT  T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-INTERRUPT-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-KEYWORD-ERROR CLASS-NAME SI::SIMPLE-KEYWORD-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-KEYWORD-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION SI::KEYWORD-ERROR PROGRAM-ERROR TYPE-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-KEYWORD-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-MISSING-LOAD-FORM CLASS-NAME SI::SIMPLE-MISSING-LOAD-FORM)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-MISSING-LOAD-FORM SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION SI::MISSING-LOAD-FORM ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-MISSING-LOAD-FORM TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-OS-ERROR CLASS-NAME SI::SIMPLE-OS-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-OS-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION EXT:OS-ERROR ERROR SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-OS-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PACKAGE-ERROR CLASS-NAME SI::SIMPLE-PACKAGE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PACKAGE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION PACKAGE-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PACKAGE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PARSE-ERROR CLASS-NAME SI::SIMPLE-PARSE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PARSE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION PARSE-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PARSE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PRINT-NOT-READABLE CLASS-NAME SI::SIMPLE-PRINT-NOT-READABLE)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PRINT-NOT-READABLE SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION PRINT-NOT-READABLE ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PRINT-NOT-READABLE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PROGRAM-ERROR CLASS-NAME SI::SIMPLE-PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PROGRAM-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION PROGRAM-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-PROGRAM-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-READER-ERROR CLASS-NAME SI::SIMPLE-READER-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-READER-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION READER-ERROR PARSE-ERROR STREAM-ERROR  ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-READER-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-SERIOUS-CONDITION CLASS-NAME SI::SIMPLE-SERIOUS-CONDITION)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-SERIOUS-CONDITION SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-SERIOUS-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-SOURCE-PROGRAM-ERROR CLASS-NAME SI::SIMPLE-SOURCE-PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-SOURCE-PROGRAM-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION EXT:SOURCE-PROGRAM-ERROR PROGRAM-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-SOURCE-PROGRAM-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STORAGE-CONDITION CLASS-NAME SI::SIMPLE-STORAGE-CONDITION)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STORAGE-CONDITION SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION STORAGE-CONDITION SERIOUS-CONDITION CONDITION STANDARD-OBJECT  T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STORAGE-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STREAM-ERROR CLASS-NAME SI::SIMPLE-STREAM-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STREAM-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION STREAM-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STREAM-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STYLE-WARNING CLASS-NAME SI::SIMPLE-STYLE-WARNING)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STYLE-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION STYLE-WARNING WARNING CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STYLE-WARNING SI:CLASS-PRECEDENCE-LIST (STYLE-WARNING WARNING SIMPLE-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-STYLE-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNBOUND-SLOT CLASS-NAME SI::SIMPLE-UNBOUND-SLOT)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNBOUND-SLOT SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION UNBOUND-SLOT CELL-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNBOUND-SLOT TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNBOUND-VARIABLE CLASS-NAME SI::SIMPLE-UNBOUND-VARIABLE)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNBOUND-VARIABLE SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION UNBOUND-VARIABLE CELL-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNBOUND-VARIABLE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNDEFINED-FUNCTION CLASS-NAME SI::SIMPLE-UNDEFINED-FUNCTION)
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNDEFINED-FUNCTION SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION UNDEFINED-FUNCTION CELL-ERROR ERROR  SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI::SIMPLE-UNDEFINED-FUNCTION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SLOT-OBJECT :SUBCLASS CONDITION)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR CLASS-NAME SI::SLOTD-INITIALIZATION-ERROR)
;;;;(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :direct-initargs ((:REFERENCES   (LIST '(:AMOP :INITIALIZATION SI:SLOT-DEFINITION))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/init.lisp")     {1001D4F8BB}>)))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR SI::PROTOTYPE  #<SI::SLOTD-INITIALIZATION-ERROR {1005DC5633}>)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::INITARG :INITARGS (:INITARG))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::INITARG :READERS (SI::SLOTD-INITIALIZATION-ERROR-INITARG))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::KIND :INITARGS (:KIND))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::KIND :READERS (SI::SLOTD-INITIALIZATION-ERROR-KIND))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::VALUE :INITARGS (:VALUE))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::VALUE :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SLOT SI::VALUE :READERS (SI::SLOTD-INITIALIZATION-ERROR-VALUE))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR :SUBCLASS SI::SLOTD-INITIALIZATION-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-TYPE-ERROR CLASS-NAME SI::SLOTD-INITIALIZATION-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (SI::SLOTD-INITIALIZATION-ERROR SI:REFERENCE-CONDITION  TYPE-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-TYPE-ERROR SI::PROTOTYPE  #<SI::SLOTD-INITIALIZATION-TYPE-ERROR {1005CFC913}>)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-TYPE-ERROR :SLOT SI::VALUE :INITARGS (:DATUM :VALUE))
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-TYPE-ERROR :SLOT SI::VALUE :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SI::SLOTD-INITIALIZATION-TYPE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION CLASS-NAME SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION)
;;;;(ADD-CI "CONDITION-CLASS" SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION :direct-initargs ((:REFERENCES   (LIST '(:AMOP :GENERIC-FUNCTION ALLOCATE-INSTANCE)                     '(:AMOP :FUNCTION                       SI:SET-FUNCALLABLE-INSTANCE-FUNCTION))   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/braid.lisp")     {1001D3D3EB}>)))
(ADD-CI "CONDITION-CLASS" SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION SIMPLE-ERROR  SIMPLE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION SI::PROTOTYPE  #<SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION {1005E478B3}>)
(ADD-CI "CONDITION-CLASS" SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:BREAKPOINT-ERROR CLASS-NAME SI:BREAKPOINT-ERROR)
(ADD-CI "CONDITION-CLASS" SI:BREAKPOINT-ERROR SI:CLASS-PRECEDENCE-LIST (SI:SYSTEM-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:BREAKPOINT-ERROR SI::PROTOTYPE  #<SI:BREAKPOINT-ERROR {1005DEF613}>)
(ADD-CI "CONDITION-CLASS" SI:BREAKPOINT-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:CLOS-WARNING CLASS-NAME SI:CLOS-WARNING)
(ADD-CI "CONDITION-CLASS" SI:CLOS-WARNING SI:CLASS-PRECEDENCE-LIST (WARNING CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:CLOS-WARNING :SUBCLASS SI::SIMPLE-CLOS-WARNING)
(ADD-CI "CONDITION-CLASS" SI:CLOS-WARNING :SUBCLASS SI:GF-ALREADY-CALLED-WARNING)
(ADD-CI "CONDITION-CLASS" SI:CLOS-WARNING :SUBCLASS SI:GF-REPLACING-METHOD-WARNING)
(ADD-CI "CONDITION-CLASS" SI:CLOS-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-ERROR CLASS-NAME SI:COMPILER-ERROR)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SI:COMPILER-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:COMPILER-ERROR :SUBCLASS SI::COMPILER-UNSUPPORTED-FEATURE-ERROR)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-ERROR :SUBCLASS SI:INTERNAL-COMPILER-ERROR)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-NOTE CLASS-NAME SI:COMPILER-NOTE)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-NOTE SI:CLASS-PRECEDENCE-LIST (CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:COMPILER-NOTE SI::PROTOTYPE  #<SI:COMPILER-NOTE {1005EB9043}>)
(ADD-CI "CONDITION-CLASS" SI:COMPILER-NOTE TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:DEADLINE-TIMEOUT CLASS-NAME SI:DEADLINE-TIMEOUT)
(ADD-CI "CONDITION-CLASS" SI:DEADLINE-TIMEOUT SI:CLASS-PRECEDENCE-LIST (SI:TIMEOUT SERIOUS-CONDITION CONDITION  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:DEADLINE-TIMEOUT SI::PROTOTYPE  #<SI:DEADLINE-TIMEOUT {1005E65A33}>)
(ADD-CI "CONDITION-CLASS" SI:DEADLINE-TIMEOUT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL CLASS-NAME SI:DEFCONSTANT-UNEQL)
;;;;(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :direct-initargs ((:REFERENCES   (LIST '(:ANSI-CL :MACRO DEFCONSTANT)                     '(:SBCL :NODE "Idiosyncrasies"))   #<FUNCTION (LAMBDA () :IN "SI:SRC;CODE;CONDITION.LISP")     {1001D1213B}>)))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL SI::PROTOTYPE  #<SI:DEFCONSTANT-UNEQL {1005E16EA3}>)
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :SLOT SI::NAME :READERS (SI:DEFCONSTANT-UNEQL-NAME))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :SLOT SI::NEW-VALUE :INITARGS (:NEW-VALUE))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :SLOT SI::NEW-VALUE :READERS (SI:DEFCONSTANT-UNEQL-NEW-VALUE))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :SLOT SI::OLD-VALUE :INITARGS (:OLD-VALUE))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL :SLOT SI::OLD-VALUE :READERS (SI:DEFCONSTANT-UNEQL-OLD-VALUE))
(ADD-CI "CONDITION-CLASS" SI:DEFCONSTANT-UNEQL TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR CLASS-NAME SI:FORMAT-ERROR)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION ERROR  SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::CONTROL-STRING :INITARGS (:CONTROL-STRING))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::CONTROL-STRING :INITFORM SI::*DEFAULT-FORMAT-ERROR-CONTROL-STRING*)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::CONTROL-STRING :READERS (SI::FORMAT-ERROR-CONTROL-STRING))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::FORMAT-ARGUMENTS :INITARGS (:ARGUMENTS))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::FORMAT-ARGUMENTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::FORMAT-CONTROL :INITARGS (:COMPLAINT))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::FORMAT-CONTROL :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::OFFSET :INITARGS (:OFFSET))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::OFFSET :INITFORM SI::*DEFAULT-FORMAT-ERROR-OFFSET*)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::OFFSET :READERS (SI::FORMAT-ERROR-OFFSET))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::PRINT-BANNER :INITARGS (:PRINT-BANNER))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::PRINT-BANNER :INITFORM T)
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI::PRINT-BANNER :READERS (SI::FORMAT-ERROR-PRINT-BANNER))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "~:[~;Error in format: ~]~                         ~?~@[~%  ~A~%  ~V@T^~]"                       (SI::FORMAT-ERROR-PRINT-BANNER CONDITION)                       (SIMPLE-CONDITION-FORMAT-CONTROL                        CONDITION)                       (SIMPLE-CONDITION-FORMAT-ARGUMENTS                        CONDITION)                       (SI::FORMAT-ERROR-CONTROL-STRING CONDITION)                       (SI::FORMAT-ERROR-OFFSET CONDITION))))
(ADD-CI "CONDITION-CLASS" SI:FORMAT-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:GF-ALREADY-CALLED-WARNING CLASS-NAME SI:GF-ALREADY-CALLED-WARNING)
(ADD-CI "CONDITION-CLASS" SI:GF-ALREADY-CALLED-WARNING SI:CLASS-PRECEDENCE-LIST (SI:CLOS-WARNING WARNING CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:GF-ALREADY-CALLED-WARNING :SUBCLASS SI::SIMPLE-GF-ALREADY-CALLED-WARNING)
(ADD-CI "CONDITION-CLASS" SI:GF-ALREADY-CALLED-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:GF-REPLACING-METHOD-WARNING CLASS-NAME SI:GF-REPLACING-METHOD-WARNING)
(ADD-CI "CONDITION-CLASS" SI:GF-REPLACING-METHOD-WARNING SI:CLASS-PRECEDENCE-LIST (SI:CLOS-WARNING WARNING CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:GF-REPLACING-METHOD-WARNING :SUBCLASS SI::SIMPLE-GF-REPLACING-METHOD-WARNING)
(ADD-CI "CONDITION-CLASS" SI:GF-REPLACING-METHOD-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:IMPLICIT-GENERIC-FUNCTION-WARNING CLASS-NAME SI:IMPLICIT-GENERIC-FUNCTION-WARNING)
(ADD-CI "CONDITION-CLASS" SI:IMPLICIT-GENERIC-FUNCTION-WARNING SI:CLASS-PRECEDENCE-LIST (STYLE-WARNING WARNING CONDITION  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:IMPLICIT-GENERIC-FUNCTION-WARNING SI::PROTOTYPE  #<SI:IMPLICIT-GENERIC-FUNCTION-WARNING {1005E75F73}>)
(ADD-CI "CONDITION-CLASS" SI:IMPLICIT-GENERIC-FUNCTION-WARNING :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "CONDITION-CLASS" SI:IMPLICIT-GENERIC-FUNCTION-WARNING :SLOT SI::NAME :READERS (SI:IMPLICIT-GENERIC-FUNCTION-NAME))
(ADD-CI "CONDITION-CLASS" SI:IMPLICIT-GENERIC-FUNCTION-WARNING TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:INTERACTIVE-INTERRUPT CLASS-NAME SI:INTERACTIVE-INTERRUPT)
(ADD-CI "CONDITION-CLASS" SI:INTERACTIVE-INTERRUPT SI:CLASS-PRECEDENCE-LIST (SI:SYSTEM-CONDITION SERIOUS-CONDITION CONDITION  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:INTERACTIVE-INTERRUPT SI::PROTOTYPE  #<SI:INTERACTIVE-INTERRUPT {1005E56953}>)
(ADD-CI "CONDITION-CLASS" SI:INTERACTIVE-INTERRUPT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:INTERNAL-COMPILER-ERROR CLASS-NAME SI:INTERNAL-COMPILER-ERROR)
(ADD-CI "CONDITION-CLASS" SI:INTERNAL-COMPILER-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SI:INTERNAL-COMPILER-ERROR SI:CLASS-PRECEDENCE-LIST (SI:COMPILER-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:INTERNAL-COMPILER-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL CLASS-NAME SI:INVALID-FASL)
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL SI::PROTOTYPE  #<SI:INVALID-FASL {1005E02623}>)
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL :SLOT SI::EXPECTED :INITARGS (:EXPECTED))
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL :SLOT SI::EXPECTED :READERS (SI::INVALID-FASL-EXPECTED))
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL :SLOT STREAM :INITARGS (:STREAM))
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL :SLOT STREAM :READERS (SI::INVALID-FASL-STREAM))
(ADD-CI "CONDITION-CLASS" SI:INVALID-FASL TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:IO-TIMEOUT CLASS-NAME SI:IO-TIMEOUT)
(ADD-CI "CONDITION-CLASS" SI:IO-TIMEOUT SI:CLASS-PRECEDENCE-LIST (STREAM-ERROR ERROR SI:TIMEOUT  SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:IO-TIMEOUT SI::PROTOTYPE  #<SI:IO-TIMEOUT {1005D63343}>)
(ADD-CI "CONDITION-CLASS" SI:IO-TIMEOUT :SLOT SI::DIRECTION :INITARGS (:DIRECTION))
(ADD-CI "CONDITION-CLASS" SI:IO-TIMEOUT :SLOT SI::DIRECTION :READERS (SI::IO-TIMEOUT-DIRECTION))
(ADD-CI "CONDITION-CLASS" SI:IO-TIMEOUT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:MEMORY-FAULT-ERROR CLASS-NAME SI:MEMORY-FAULT-ERROR)
(ADD-CI "CONDITION-CLASS" SI:MEMORY-FAULT-ERROR SI:CLASS-PRECEDENCE-LIST (SI:SYSTEM-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:MEMORY-FAULT-ERROR SI::PROTOTYPE  #<SI:MEMORY-FAULT-ERROR {1005DF5173}>)
(ADD-CI "CONDITION-CLASS" SI:MEMORY-FAULT-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR CLASS-NAME SI:METHOD-CALL-ERROR)
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-ERROR SIMPLE-CONDITION ERROR SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SLOT SI::ARGS :INITARGS (:ARGUMENT-LIST))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SLOT SI::ARGS :READERS (SI:METHOD-CALL-ERROR-ARGUMENT-LIST))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SLOT SI::GF :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SLOT SI::GF :READERS (SI:METHOD-CALL-ERROR-GENERIC-FUNCTION))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SLOT SI::METHOD :INITARGS (:METHOD))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SLOT SI::METHOD :READERS (SI:METHOD-CALL-ERROR-METHOD))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR :SUBCLASS SI:METHOD-CALL-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-TYPE-ERROR CLASS-NAME SI:METHOD-CALL-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-TYPE-ERROR SI:METHOD-CALL-ERROR SIMPLE-ERROR SIMPLE-CONDITION TYPE-ERROR  ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SI:METHOD-CALL-TYPE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT CLASS-NAME SI:NAME-CONFLICT)
;;;;(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :direct-initargs ((:REFERENCES (LIST '(:ANSI-CL :SECTION (11 1 1 2 5)))   #<FUNCTION (LAMBDA () :IN "SI:SRC;CODE;TARGET-PACKAGE.LISP")     {1001D2F06B}>)))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT SI:CLASS-PRECEDENCE-LIST (SI:REFERENCE-CONDITION PACKAGE-ERROR ERROR  SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT SI::PROTOTYPE  #<SI:NAME-CONFLICT {1005D20063}>)
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :SLOT FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :SLOT FUNCTION :READERS (SI:NAME-CONFLICT-FUNCTION))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :SLOT SI::DATUM :INITARGS (:DATUM))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :SLOT SI::DATUM :READERS (SI:NAME-CONFLICT-DATUM))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :SLOT SI::SYMBOLS :INITARGS (:SYMBOLS))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT :SLOT SI::SYMBOLS :READERS (SI:NAME-CONFLICT-SYMBOLS))
(ADD-CI "CONDITION-CLASS" SI:NAME-CONFLICT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION CLASS-NAME SI:PACKAGE-LOCK-VIOLATION)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION SI:CLASS-PRECEDENCE-LIST (PACKAGE-ERROR ERROR SERIOUS-CONDITION  SI:REFERENCE-CONDITION SIMPLE-CONDITION CONDITION  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION SI::PROTOTYPE  #<SI:PACKAGE-LOCK-VIOLATION {1005D2AD43}>)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION :SLOT SI::CURRENT-PACKAGE :INITFORM '*PACKAGE*)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION :SLOT SI::CURRENT-PACKAGE :READERS (SI::PACKAGE-LOCK-VIOLATION-IN-PACKAGE))
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION :SUBCLASS SI:PACKAGE-LOCKED-ERROR)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION :SUBCLASS SI:SYMBOL-PACKAGE-LOCKED-ERROR)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCK-VIOLATION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCKED-ERROR CLASS-NAME SI:PACKAGE-LOCKED-ERROR)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCKED-ERROR SI:CLASS-PRECEDENCE-LIST (SI:PACKAGE-LOCK-VIOLATION PACKAGE-ERROR ERROR                                SERIOUS-CONDITION                                SI:REFERENCE-CONDITION                                SIMPLE-CONDITION                                CONDITION SI::SLOT-OBJECT                                T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCKED-ERROR SI::PROTOTYPE  #<SI:PACKAGE-LOCKED-ERROR {1005D39B03}>)
(ADD-CI "CONDITION-CLASS" SI:PACKAGE-LOCKED-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::CPL-PROTOCOL-VIOLATION)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::FIND-METHOD-LENGTH-MISMATCH)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::INITARG-ERROR)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::INSTANCE-STRUCTURE-PROTOCOL-ERROR)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::INVALID-SUPERCLASS)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::LONG-METHOD-COMBINATION-ERROR)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::METAOBJECT-INITIALIZATION-VIOLATION)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::NEW-VALUE-SPECIALIZATION)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::NO-PRIMARY-METHOD)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::PRINT-OBJECT-STREAM-SPECIALIZER)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::SLOTD-INITIALIZATION-ERROR)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI:DEFCONSTANT-UNEQL)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI:NAME-CONFLICT)
(ADD-CI "CONDITION-CLASS" SI:REFERENCE-CONDITION :SUBCLASS SI:PACKAGE-LOCK-VIOLATION)
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION CLASS-NAME SI:STEP-CONDITION)
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION SI:CLASS-PRECEDENCE-LIST (CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION SI::PROTOTYPE  #<SI:STEP-CONDITION {1005EC2143}>)
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION :SLOT SI:FORM :INITARGS (:FORM))
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION :SLOT SI:FORM :READERS (SI:STEP-CONDITION-FORM))
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION :SUBCLASS SI:STEP-FINISHED-CONDITION)
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION :SUBCLASS SI:STEP-FORM-CONDITION)
(ADD-CI "CONDITION-CLASS" SI:STEP-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:STEP-FINISHED-CONDITION CLASS-NAME SI:STEP-FINISHED-CONDITION)
(ADD-CI "CONDITION-CLASS" SI:STEP-FINISHED-CONDITION SI:CLASS-PRECEDENCE-LIST (SI:STEP-CONDITION CONDITION SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:STEP-FINISHED-CONDITION SI::PROTOTYPE  #<SI:STEP-FINISHED-CONDITION {1005EC70F3}>)
(ADD-CI "CONDITION-CLASS" SI:STEP-FINISHED-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:STEP-FORM-CONDITION CLASS-NAME SI:STEP-FORM-CONDITION)
(ADD-CI "CONDITION-CLASS" SI:STEP-FORM-CONDITION SI:CLASS-PRECEDENCE-LIST (SI:STEP-CONDITION CONDITION SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:STEP-FORM-CONDITION SI::PROTOTYPE  #<SI:STEP-FORM-CONDITION {1005ED2063}>)
(ADD-CI "CONDITION-CLASS" SI:STEP-FORM-CONDITION :SLOT SI::ARGS :INITARGS (:ARGS))
(ADD-CI "CONDITION-CLASS" SI:STEP-FORM-CONDITION :SLOT SI::ARGS :READERS (SI:STEP-CONDITION-ARGS))
(ADD-CI "CONDITION-CLASS" SI:STEP-FORM-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:SYMBOL-PACKAGE-LOCKED-ERROR CLASS-NAME SI:SYMBOL-PACKAGE-LOCKED-ERROR)
(ADD-CI "CONDITION-CLASS" SI:SYMBOL-PACKAGE-LOCKED-ERROR SI:CLASS-PRECEDENCE-LIST (SI:PACKAGE-LOCK-VIOLATION PACKAGE-ERROR ERROR                                SERIOUS-CONDITION                                SI:REFERENCE-CONDITION                                SIMPLE-CONDITION                                CONDITION SI::SLOT-OBJECT                                T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:SYMBOL-PACKAGE-LOCKED-ERROR SI::PROTOTYPE  #<SI:SYMBOL-PACKAGE-LOCKED-ERROR {1005D34433}>)
(ADD-CI "CONDITION-CLASS" SI:SYMBOL-PACKAGE-LOCKED-ERROR :SLOT SYMBOL :INITARGS (:SYMBOL))
(ADD-CI "CONDITION-CLASS" SI:SYMBOL-PACKAGE-LOCKED-ERROR :SLOT SYMBOL :READERS (SI:PACKAGE-LOCKED-ERROR-SYMBOL))
(ADD-CI "CONDITION-CLASS" SI:SYMBOL-PACKAGE-LOCKED-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION CLASS-NAME SI:SYSTEM-CONDITION)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION SI:CLASS-PRECEDENCE-LIST (CONDITION SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION SI::PROTOTYPE  #<SI:SYSTEM-CONDITION {1005EB1F73}>)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SLOT SI::ADDRESS :INITARGS (:ADDRESS))
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SLOT SI::ADDRESS :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SLOT SI::ADDRESS :READERS (SI:SYSTEM-CONDITION-ADDRESS))
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SLOT SI::CONTEXT :INITARGS (:CONTEXT))
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SLOT SI::CONTEXT :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SLOT SI::CONTEXT :READERS (SI:SYSTEM-CONDITION-CONTEXT))
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SUBCLASS SI:BREAKPOINT-ERROR)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SUBCLASS SI:INTERACTIVE-INTERRUPT)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION :SUBCLASS SI:MEMORY-FAULT-ERROR)
(ADD-CI "CONDITION-CLASS" SI:SYSTEM-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT CLASS-NAME SI:TIMEOUT)
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "CONDITION-CLASS" SI:TIMEOUT SI::PROTOTYPE  #<SI:TIMEOUT {1005E60AD3}>)
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT :SLOT SI::SECONDS :INITARGS (:SECONDS))
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT :SLOT SI::SECONDS :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT :SLOT SI::SECONDS :READERS (SI::TIMEOUT-SECONDS))
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT :SUBCLASS SI:DEADLINE-TIMEOUT)
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT :SUBCLASS SI:IO-TIMEOUT)
(ADD-CI "CONDITION-CLASS" SI:TIMEOUT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION CLASS-NAME SIMPLE-CONDITION)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION SI:CLASS-PRECEDENCE-LIST (CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION SI:CLASS-PRECEDENCE-LIST (CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION SI::PROTOTYPE  #<SIMPLE-CONDITION {1005E9BA43}>)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :INITARGS (:FORMAT-ARGUMENTS))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :READERS (SIMPLE-CONDITION-FORMAT-ARGUMENTS))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI:FORMAT-CONTROL :INITARGS (:FORMAT-CONTROL))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI:FORMAT-CONTROL :INITFORM 'NIL)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI:FORMAT-CONTROL :READERS (SIMPLE-CONDITION-FORMAT-CONTROL))
;;;;(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :INITARGS (:FORMAT-ARGUMENTS))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :READERS (SIMPLE-CONDITION-FORMAT-ARGUMENTS))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-ARGUMENTS :WRITERS ((SETF SIMPLE-CONDITION-FORMAT-ARGUMENTS)))
;;;;(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-CONTROL :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-CONTROL :INITARGS (:FORMAT-CONTROL))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-CONTROL :INITFORM "")
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-CONTROL :READERS (EXT:SIMPLE-CONDITION-FORMAT-STRING SIMPLE-CONDITION-FORMAT-CONTROL))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-CONTROL :READERS (SIMPLE-CONDITION-FORMAT-CONTROL))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI::FORMAT-CONTROL :WRITERS ((SETF SIMPLE-CONDITION-FORMAT-CONTROL)))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "~?"                       (SIMPLE-CONDITION-FORMAT-CONTROL                        CONDITION)                       (SIMPLE-CONDITION-FORMAT-ARGUMENTS                        CONDITION))))
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-CLOS-WARNING)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-GF-ALREADY-CALLED-WARNING)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-GF-REPLACING-METHOD-WARNING)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-INTERRUPT-CONDITION)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-SERIOUS-CONDITION)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-STORAGE-CONDITION)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI::SIMPLE-STYLE-WARNING)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SI:PACKAGE-LOCK-VIOLATION)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SIMPLE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SIMPLE-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION :SUBCLASS SIMPLE-WARNING)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR CLASS-NAME SIMPLE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR SI::PROTOTYPE  #<SIMPLE-ERROR {1005E23D63}>)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::FIND-METHOD-LENGTH-MISMATCH)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::LONG-METHOD-COMBINATION-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::METAOBJECT-INITIALIZATION-VIOLATION)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-ARGUMENT-LIST-DOTTED)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-ARITHMETIC-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-CELL-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-CONTROL-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-DIVISION-BY-ZERO)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-END-OF-FILE)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-FILE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-FLOATING-POINT-OVERFLOW)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-FLOATING-POINT-UNDERFLOW)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-KEYWORD-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-MISSING-LOAD-FORM)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-OS-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-PACKAGE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-PARSE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-PRINT-NOT-READABLE)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-READER-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-SOURCE-PROGRAM-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-STREAM-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-UNBOUND-SLOT)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-UNBOUND-VARIABLE)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::SIMPLE-UNDEFINED-FUNCTION)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI::UNSET-FUNCALLABLE-INSTANCE-FUNCTION)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI:FORMAT-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR :SUBCLASS SI:METHOD-CALL-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR CLASS-NAME SIMPLE-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION TYPE-ERROR ERROR  SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION TYPE-ERROR ERROR  SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION TYPE-ERROR ERROR SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION TYPE-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR SI::PROTOTYPE  #<SIMPLE-TYPE-ERROR {1005D031A3}>)
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR :SUBCLASS SI:METHOD-CALL-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-TYPE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING CLASS-NAME SIMPLE-WARNING)
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION WARNING CONDITION  SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION WARNING CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING SI:CLASS-PRECEDENCE-LIST (SIMPLE-CONDITION WARNING CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING SI::PROTOTYPE  #<SIMPLE-WARNING {1005E81713}>)
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING :SUBCLASS SI::PRINT-OBJECT-STREAM-SPECIALIZER)
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" SIMPLE-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION CLASS-NAME STORAGE-CONDITION)
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION  STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION SI::SLOT-OBJECT  T))
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION SI:CLASS-PRECEDENCE-LIST (SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION SI::PROTOTYPE  #<STORAGE-CONDITION {1005E4CA03}>)
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION :SUBCLASS SI::SIMPLE-STORAGE-CONDITION)
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" STORAGE-CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR CLASS-NAME STREAM-ERROR)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" STREAM-ERROR SI::PROTOTYPE  #<STREAM-ERROR {1005D594E3}>)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SLOT SI::STREAM :INITARGS (:STREAM))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SLOT SI::STREAM :READERS (STREAM-ERROR-STREAM))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SLOT STREAM :INITARGS (:STREAM))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SLOT STREAM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SLOT STREAM :READERS (STREAM-ERROR-STREAM))
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SUBCLASS END-OF-FILE)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SUBCLASS READER-ERROR)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SUBCLASS SI::SIMPLE-STREAM-ERROR)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR :SUBCLASS SI:IO-TIMEOUT)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" STREAM-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING CLASS-NAME STYLE-WARNING)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" STYLE-WARNING SI:CLASS-PRECEDENCE-LIST (WARNING CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" STYLE-WARNING SI:CLASS-PRECEDENCE-LIST (WARNING CONDITION STANDARD-OBJECT  T))
(ADD-CI "CONDITION-CLASS" STYLE-WARNING SI:CLASS-PRECEDENCE-LIST (WARNING CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" STYLE-WARNING SI::PROTOTYPE  #<STYLE-WARNING {1005E6C023}>)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING :SUBCLASS SI::SIMPLE-STYLE-WARNING)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING :SUBCLASS SI:EARLY-DEPRECATION-WARNING)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING :SUBCLASS SI:IMPLICIT-GENERIC-FUNCTION-WARNING)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" STYLE-WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR CLASS-NAME TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION                    CONDITION                    STANDARD-OBJECT                    T))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION                    SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR SI:CLASS-PRECEDENCE-LIST (ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" TYPE-ERROR SI::PROTOTYPE  #<TYPE-ERROR {1005CF0083}>)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::DATUM :INITARGS (:DATUM))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::DATUM :READERS (TYPE-ERROR-DATUM))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::EXPECTED-TYPE :INITARGS (:EXPECTED-TYPE))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::EXPECTED-TYPE :READERS (TYPE-ERROR-EXPECTED-TYPE))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::DATUM :INITARGS (:DATUM))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::DATUM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::DATUM :READERS (TYPE-ERROR-DATUM))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::EXPECTED-TYPE :INITARGS (:EXPECTED-TYPE))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::EXPECTED-TYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI::EXPECTED-TYPE :READERS (TYPE-ERROR-EXPECTED-TYPE))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "~S is not of type ~S."                       (TYPE-ERROR-DATUM CONDITION)                       (TYPE-ERROR-EXPECTED-TYPE                        CONDITION))))
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SUBCLASS SI::ARGUMENT-LIST-DOTTED)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SUBCLASS SI::CASE-FAILURE)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SUBCLASS SI::CHARSET-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SUBCLASS SI::KEYWORD-ERROR)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SUBCLASS SI::SLOTD-INITIALIZATION-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR :SUBCLASS SIMPLE-TYPE-ERROR)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" TYPE-ERROR TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT CLASS-NAME UNBOUND-SLOT)
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT SI::PROTOTYPE  #<UNBOUND-SLOT {1005CD7823}>)
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT EXT:INSTANCE :INITARGS (:INSTANCE))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT EXT:INSTANCE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT EXT:INSTANCE :READERS (UNBOUND-SLOT-INSTANCE))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT SI:INSTANCE :INITARGS (:INSTANCE))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT SI:INSTANCE :READERS (UNBOUND-SLOT-INSTANCE))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT SI::INSTANCE :INITARGS (:INSTANCE))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT SI::INSTANCE :READERS (UNBOUND-SLOT-INSTANCE))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "The slot ~S in the object ~S is unbound."                       (CELL-ERROR-NAME CONDITION)                       (UNBOUND-SLOT-INSTANCE                        CONDITION))))
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT :SUBCLASS SI::SIMPLE-UNBOUND-SLOT)
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" UNBOUND-SLOT TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE CLASS-NAME UNBOUND-VARIABLE)
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE SI::PROTOTYPE  #<UNBOUND-VARIABLE {1005CC8593}>)
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "The variable ~S is unbound."                       (CELL-ERROR-NAME CONDITION))))
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE :SUBCLASS SI::SIMPLE-UNBOUND-VARIABLE)
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" UNBOUND-VARIABLE TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION CLASS-NAME UNDEFINED-FUNCTION)
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION  CONDITION STANDARD-OBJECT T))
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION SI:CLASS-PRECEDENCE-LIST (CELL-ERROR ERROR SERIOUS-CONDITION CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION SI::PROTOTYPE  #<UNDEFINED-FUNCTION {1005CCD0D3}>)
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION :SLOT SI:REPORT-FUNCTION :INITFORM (LAMBDA (CONDITION STREAM)   (FORMAT STREAM                       "The function ~S is undefined."                       (CELL-ERROR-NAME CONDITION))))
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION :SUBCLASS SI::SIMPLE-UNDEFINED-FUNCTION)
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" UNDEFINED-FUNCTION TYPE-OF STANDARD-CLASS)
(ADD-CI "CONDITION-CLASS" WARNING CLASS-NAME WARNING)
(ADD-CI "CONDITION-CLASS" WARNING :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "CONDITION-CLASS" WARNING SI:CLASS-PRECEDENCE-LIST (CONDITION SI::SLOT-OBJECT T))
(ADD-CI "CONDITION-CLASS" WARNING SI:CLASS-PRECEDENCE-LIST (CONDITION STANDARD-OBJECT T))
;;;;;;(ADD-CI "CONDITION-CLASS" WARNING SI::PROTOTYPE  #<WARNING {1005E7A193}>)
(ADD-CI "CONDITION-CLASS" WARNING :SUBCLASS SI:CLOS-WARNING)
(ADD-CI "CONDITION-CLASS" WARNING :SUBCLASS SI:FINAL-DEPRECATION-WARNING)
(ADD-CI "CONDITION-CLASS" WARNING :SUBCLASS SI:LATE-DEPRECATION-WARNING)
(ADD-CI "CONDITION-CLASS" WARNING :SUBCLASS SIMPLE-WARNING)
(ADD-CI "CONDITION-CLASS" WARNING :SUBCLASS STYLE-WARNING)
(ADD-CI "CONDITION-CLASS" WARNING TYPE-OF SI::CONDITION-CLASS)
(ADD-CI "CONDITION-CLASS" WARNING TYPE-OF STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" FUNCTION :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" FUNCTION :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION CLASS-NAME GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :method (SETF SI:GENERIC-FUNCTION-NAME) :NAME (SETF SI:GENERIC-FUNCTION-NAME))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :method ADD-METHOD :NAME ADD-METHOD)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :method REMOVE-METHOD :NAME REMOVE-METHOD)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :method SHARED-INITIALIZE :NAME SHARED-INITIALIZE)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :method SI:ENSURE-GENERIC-FUNCTION-USING-CLASS :NAME SI:ENSURE-GENERIC-FUNCTION-USING-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI:METAOBJECT  SI:FUNCALLABLE-STANDARD-OBJECT FUNCTION  STANDARD-OBJECT SI::SLOT-OBJECT T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT SI:FUNCALLABLE-STANDARD-OBJECT STANDARD-OBJECT  FUNCTION T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT SI:FUNCALLABLE-STANDARD-OBJECT STANDARD-OBJECT FUNCTION T))
;;;;;;(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION SI::PROTOTYPE  #<GENERIC-FUNCTION {100127F4BB}>)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :SLOT SI::%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :SLOT SI::ENCAPSULATIONS :READERS (SI::GENERIC-FUNCTION-ENCAPSULATIONS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :SLOT SI::ENCAPSULATIONS :WRITERS ((SETF SI::GENERIC-FUNCTION-ENCAPSULATIONS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :SLOT SI::INITIAL-METHODS :READERS (SI::GENERIC-FUNCTION-INITIAL-METHODS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :SLOT SI::INITIAL-METHODS :WRITERS ((SETF SI::GENERIC-FUNCTION-INITIAL-METHODS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION :SUBCLASS STANDARD-GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" GENERIC-FUNCTION TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT CLASS-NAME SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT SI:CLASS-PRECEDENCE-LIST (FUNCTION STANDARD-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT SI::PROTOTYPE  #<SI:FUNCALLABLE-STANDARD-OBJECT {100126230B}>)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:METAOBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT CLASS-NAME SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT SI:CLASS-PRECEDENCE-LIST (FUNCTION STANDARD-OBJECT T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT FUNCTION T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT :SLOT SI::NAME :READERS (SI::FUNCALLABLE-NAME))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT :SLOT SI::NAME :WRITERS ((SETF SI::FUNCALLABLE-NAME)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT :SUBCLASS SI:GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION CLASS-NAME SI:GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT SI:FUNCALLABLE-STANDARD-OBJECT FUNCTION STANDARD-OBJECT T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION :SLOT SI::LISTENERS :READERS (SI::GF-LISTENERS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION :SLOT SI::LISTENERS :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION :SLOT SI::LISTENERS :WRITERS ((SETF SI::GF-LISTENERS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION :SUBCLASS SI:STANDARD-GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:GENERIC-FUNCTION TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:METAOBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION CLASS-NAME SI:STANDARD-GENERIC-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (SI:GENERIC-FUNCTION SI:METAOBJECT SI:FUNCALLABLE-STANDARD-OBJECT FUNCTION STANDARD-OBJECT T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::ARGORDER :READERS (SI::STD-GF-ARGORDER))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::ARGORDER :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::ARGORDER :WRITERS ((SETF SI::STD-GF-ARGORDER)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DECLSPECS :READERS (SI::STD-GF-DECLSPECS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DECLSPECS :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DECLSPECS :WRITERS ((SETF SI::STD-GF-DECLSPECS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DEFAULT-METHOD-CLASS :READERS (SI::STD-GF-DEFAULT-METHOD-CLASS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DEFAULT-METHOD-CLASS :TYPE SI:CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DEFAULT-METHOD-CLASS :WRITERS ((SETF SI::STD-GF-DEFAULT-METHOD-CLASS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DOCUMENTATION :READERS (SI::STD-GF-DOCUMENTATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DOCUMENTATION :TYPE (OR NULL STRING))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::DOCUMENTATION :WRITERS ((SETF SI::STD-GF-DOCUMENTATION)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::EFFECTIVE-METHOD-CACHE :READERS (SI::STD-GF-EFFECTIVE-METHOD-CACHE))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::EFFECTIVE-METHOD-CACHE :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::EFFECTIVE-METHOD-CACHE :WRITERS ((SETF SI::STD-GF-EFFECTIVE-METHOD-CACHE)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::INITIALIZED :READERS (SI::STD-GF-INITIALIZED))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::INITIALIZED :TYPE BOOLEAN)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::INITIALIZED :WRITERS ((SETF SI::STD-GF-INITIALIZED)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :READERS (SI::STD-GF-LAMBDA-LIST))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI::STD-GF-LAMBDA-LIST)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-COMBINATION :READERS (SI::STD-GF-METHOD-COMBINATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-COMBINATION :TYPE SI:METHOD-COMBINATION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-COMBINATION :WRITERS ((SETF SI::STD-GF-METHOD-COMBINATION)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :READERS (SI::STD-GF-METHODS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :WRITERS ((SETF SI::STD-GF-METHODS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::SIGNATURE :READERS (SI::STD-GF-SIGNATURE))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::SIGNATURE :TYPE (SIMPLE-VECTOR 6))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION :SLOT SI::SIGNATURE :WRITERS ((SETF SI::STD-GF-SIGNATURE)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" SI:STANDARD-GENERIC-FUNCTION TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION CLASS-NAME STANDARD-GENERIC-FUNCTION)
;;;;(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :default-initargs ((:METHOD-CLASS SI::*THE-CLASS-STANDARD-METHOD*   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {100294207B}>)  (:METHOD-COMBINATION SI::*STANDARD-METHOD-COMBINATION*   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {100294211B}>)))
;;;;(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :direct-initargs ((:METHOD-CLASS SI::*THE-CLASS-STANDARD-METHOD*   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {100294207B}>)  (:METHOD-COMBINATION SI::*STANDARD-METHOD-COMBINATION*   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {100294211B}>)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method ADD-METHOD :NAME ADD-METHOD)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method COMPUTE-APPLICABLE-METHODS :NAME COMPUTE-APPLICABLE-METHODS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method FIND-METHOD :NAME FIND-METHOD)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method REINITIALIZE-INSTANCE :NAME REINITIALIZE-INSTANCE)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method REMOVE-METHOD :NAME REMOVE-METHOD)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SHARED-INITIALIZE :NAME SHARED-INITIALIZE)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI::GENERIC-FUNCTION-OPTIONAL-ARGUMENTS :NAME SI::GENERIC-FUNCTION-OPTIONAL-ARGUMENTS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI::GENERIC-FUNCTION-REQUIRED-ARGUMENTS :NAME SI::GENERIC-FUNCTION-REQUIRED-ARGUMENTS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI::METHOD-MORE-SPECIFIC-P :NAME SI::METHOD-MORE-SPECIFIC-P)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:ADD-DEPENDENT :NAME SI:ADD-DEPENDENT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:COMPUTE-APPLICABLE-METHODS-USING-CLASSES :NAME SI:COMPUTE-APPLICABLE-METHODS-USING-CLASSES)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:COMPUTE-DISCRIMINATING-FUNCTION :NAME SI:COMPUTE-DISCRIMINATING-FUNCTION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:COMPUTE-EFFECTIVE-METHOD :NAME SI:COMPUTE-EFFECTIVE-METHOD)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER :NAME SI:GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-DECLARATIONS :NAME SI:GENERIC-FUNCTION-DECLARATIONS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-LAMBDA-LIST :NAME SI:GENERIC-FUNCTION-LAMBDA-LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-METHOD-CLASS :NAME SI:GENERIC-FUNCTION-METHOD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-METHOD-COMBINATION :NAME SI:GENERIC-FUNCTION-METHOD-COMBINATION)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-METHODS :NAME SI:GENERIC-FUNCTION-METHODS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:GENERIC-FUNCTION-NAME :NAME SI:GENERIC-FUNCTION-NAME)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:MAKE-METHOD-LAMBDA :NAME SI:MAKE-METHOD-LAMBDA)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:MAP-DEPENDENTS :NAME SI:MAP-DEPENDENTS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :method SI:REMOVE-DEPENDENT :NAME SI:REMOVE-DEPENDENT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (GENERIC-FUNCTION SI::DEPENDENT-UPDATE-MIXIN  SI::PLIST-MIXIN SI::DEFINITION-SOURCE-MIXIN SI:METAOBJECT  SI:FUNCALLABLE-STANDARD-OBJECT FUNCTION  STANDARD-OBJECT SI::SLOT-OBJECT T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (GENERIC-FUNCTION SI:METAOBJECT SI:FUNCALLABLE-STANDARD-OBJECT  STANDARD-OBJECT FUNCTION T))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION SI:CLASS-PRECEDENCE-LIST (GENERIC-FUNCTION SI:METAOBJECT SI:FUNCALLABLE-STANDARD-OBJECT STANDARD-OBJECT FUNCTION T))
;;;;;;(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION SI::PROTOTYPE  #<STANDARD-GENERIC-FUNCTION {10012846CB}>)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT METHOD-COMBINATION :INITARGS (:METHOD-COMBINATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT METHOD-COMBINATION :INITFORM (SI:FIND-METHOD-COMBINATION  (SI:CLASS-PROTOTYPE   (FIND-CLASS 'STANDARD-GENERIC-FUNCTION))  'STANDARD  NIL))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT METHOD-COMBINATION :READERS (SI:GENERIC-FUNCTION-METHOD-COMBINATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT METHOD-COMBINATION :WRITERS ((SETF SI:GENERIC-FUNCTION-METHOD-COMBINATION)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::%LOCK :INITFORM (SI:MAKE-MUTEX :NAME "GF lock"))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::%LOCK :READERS (SI::GF-LOCK))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::%METHOD-COMBINATION :INITARGS (:METHOD-COMBINATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::%METHOD-COMBINATION :INITFORM SI::+THE-STANDARD-METHOD-COMBINATION+)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::%METHOD-COMBINATION :READERS (SI:GENERIC-FUNCTION-METHOD-COMBINATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::%METHOD-COMBINATION :WRITERS ((SETF SI:GENERIC-FUNCTION-METHOD-COMBINATION)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::A-P-O-FUNCTION :READERS (SI::GENERIC-FUNCTION-A-P-O-FUNCTION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::A-P-O-FUNCTION :WRITERS ((SETF SI::GENERIC-FUNCTION-A-P-O-FUNCTION)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::ARG-INFO :INITFORM (SI::MAKE-ARG-INFO))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::ARG-INFO :READERS (SI::GF-ARG-INFO))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::ARGUMENT-PRECEDENCE-ORDER :INITARGS (:ARGUMENT-PRECEDENCE-ORDER))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::ARGUMENT-PRECEDENCE-ORDER :READERS (SI:GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::ARGUMENT-PRECEDENCE-ORDER :WRITERS ((SETF SI:GENERIC-FUNCTION-ARGUMENT-PRECEDENCE-ORDER)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DECLARATIONS :INITARGS (:DECLARATIONS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DECLARATIONS :INITARGS (:DECLARE :DECLARATIONS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DECLARATIONS :READERS (SI:GENERIC-FUNCTION-DECLARATIONS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DECLARATIONS :READERS (SI:GENERIC-FUNCTION-DECLARATIONS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DECLARATIONS :WRITERS ((SETF SI:GENERIC-FUNCTION-DECLARATIONS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DECLARATIONS :WRITERS ((SETF SI:GENERIC-FUNCTION-DECLARATIONS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DEPENDENTS :READERS (SI::GENERIC-FUNCTION-DEPENDENTS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::GENERIC-FUNCTION-DEPENDENTS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DFUN-STATE :READERS (SI::GF-DFUN-STATE))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::DFUN-STATE :WRITERS ((SETF SI::GF-DFUN-STATE)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::INFO-NEEDS-UPDATE :READERS (SI::GF-INFO-NEEDS-UPDATE))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::INFO-NEEDS-UPDATE :WRITERS ((SETF SI::GF-INFO-NEEDS-UPDATE)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::INITIAL-METHODS :INITARGS (:INITIAL-METHODS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :READERS (SI:GENERIC-FUNCTION-LAMBDA-LIST))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:GENERIC-FUNCTION-LAMBDA-LIST)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-CLASS :INITARGS (:METHOD-CLASS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-CLASS :INITFORM (FIND-CLASS 'STANDARD-METHOD))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-CLASS :INITFORM SI::+THE-STANDARD-METHOD-CLASS+)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-CLASS :READERS (SI:GENERIC-FUNCTION-METHOD-CLASS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHOD-CLASS :WRITERS ((SETF SI:GENERIC-FUNCTION-METHOD-CLASS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :INITARGS (:METHODS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :READERS (SI:GENERIC-FUNCTION-METHODS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :READERS (SI:GENERIC-FUNCTION-METHODS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :TYPE LIST)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :WRITERS ((SETF SI:GENERIC-FUNCTION-METHODS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::METHODS :WRITERS ((SETF SI:GENERIC-FUNCTION-METHODS)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::NAME :READERS (SI:GENERIC-FUNCTION-NAME))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::NAME :READERS (SI:GENERIC-FUNCTION-NAME))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::OPTIONAL-ARGS :INITARGS (:OPTIONAL-ARGS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::REQUIRED-ARGS :INITARGS (:REQUIRED-ARGS))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::SPEC-LIST :READERS (SI::GENERIC-FUNCTION-SPEC-LIST))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI::SPEC-LIST :WRITERS ((SETF SI::GENERIC-FUNCTION-SPEC-LIST)))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-GENERIC-FUNCTION TYPE-OF SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "FUNCALLABLE-STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT CLASS-NAME SI::SLOT-OBJECT)
(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT SI::PROTOTYPE  #<SI::SLOT-OBJECT {1001242733}>)
(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT :SUBCLASS CONDITION)
(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT :SUBCLASS STANDARD-OBJECT)
(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT :SUBCLASS STRUCTURE-OBJECT)
(ADD-CI "SLOT-CLASS" SI::SLOT-OBJECT TYPE-OF SI::SLOT-CLASS)
(ADD-CI "SLOT-CLASS" T :SUBCLASS SI::SLOT-OBJECT)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS CLASS-NAME BUILT-IN-CLASS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF CLASS-NAME) :NAME (SETF CLASS-NAME))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI::CLASS-LAYOUT) :NAME (SETF SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-DIRECT-METHODS) :NAME (SETF SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-DIRECT-SLOTS) :NAME (SETF SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-DIRECT-SUBCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-DIRECT-SUPERCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-FINALIZED-P) :NAME (SETF SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-PRECEDENCE-LIST) :NAME (SETF SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method (SETF SI:CLASS-SLOTS) :NAME (SETF SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method ALLOCATE-INSTANCE :NAME ALLOCATE-INSTANCE)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method CLASS-NAME :NAME CLASS-NAME)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI::CLASS-LAYOUT :NAME SI::CLASS-LAYOUT)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-DEFAULT-INITARGS :NAME SI:CLASS-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-DIRECT-DEFAULT-INITARGS :NAME SI:CLASS-DIRECT-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-DIRECT-METHODS :NAME SI:CLASS-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-DIRECT-SLOTS :NAME SI:CLASS-DIRECT-SLOTS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-DIRECT-SUBCLASSES :NAME SI:CLASS-DIRECT-SUBCLASSES)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-DIRECT-SUPERCLASSES :NAME SI:CLASS-DIRECT-SUPERCLASSES)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-FINALIZED-P :NAME SI:CLASS-FINALIZED-P)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-PRECEDENCE-LIST :NAME SI:CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:CLASS-SLOTS :NAME SI:CLASS-SLOTS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:ENSURE-CLASS-USING-CLASS :NAME SI:ENSURE-CLASS-USING-CLASS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:VALIDATE-SUPERCLASS :DOCUMENTATION "This generic function is called to determine whether the class  superclass is suitable for use as a superclass of class.")
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :method SI:VALIDATE-SUPERCLASS :NAME SI:VALIDATE-SUPERCLASS)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS SI:CLASS-PRECEDENCE-LIST (SI:CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS SI:CLASS-PRECEDENCE-LIST (SI:SYSTEM-CLASS SI::PCL-CLASS CLASS  SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS SI::PROTOTYPE  #<BUILT-IN-CLASS {10012439C3}>)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::FORWARD :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::OPTIMIZE-SLOT-ACCESS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
;;(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" BUILT-IN-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS CLASS-NAME CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" CLASS :method ALLOCATE-INSTANCE :NAME ALLOCATE-INSTANCE)
(ADD-CI "STANDARD-CLASS" CLASS :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "STANDARD-CLASS" CLASS :method MAKE-INSTANCE :NAME MAKE-INSTANCE)
(ADD-CI "STANDARD-CLASS" CLASS :method MAKE-LOAD-FORM :NAME MAKE-LOAD-FORM)
(ADD-CI "STANDARD-CLASS" CLASS :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "STANDARD-CLASS" CLASS :method SHARED-INITIALIZE :NAME SHARED-INITIALIZE)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:ADD-DIRECT-METHOD :NAME SI:ADD-DIRECT-METHOD)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:ADD-DIRECT-SUBCLASS :NAME SI:ADD-DIRECT-SUBCLASS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:DIRECT-SLOT-DEFINITION-CLASS :NAME SI:DIRECT-SLOT-DEFINITION-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:EFFECTIVE-SLOT-DEFINITION-CLASS :NAME SI:EFFECTIVE-SLOT-DEFINITION-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:ENSURE-CLASS-USING-CLASS :NAME SI:ENSURE-CLASS-USING-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:REMOVE-DIRECT-METHOD :NAME SI:REMOVE-DIRECT-METHOD)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:REMOVE-DIRECT-SUBCLASS :NAME SI:REMOVE-DIRECT-SUBCLASS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS :NAME SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:SPECIALIZER-DIRECT-METHODS :NAME SI:SPECIALIZER-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" CLASS :method SI:VALIDATE-SUPERCLASS :DOCUMENTATION "This generic function is called to determine whether the class  superclass is suitable for use as a superclass of class.")
(ADD-CI "STANDARD-CLASS" CLASS :method SI:VALIDATE-SUPERCLASS :NAME SI:VALIDATE-SUPERCLASS)
(ADD-CI "STANDARD-CLASS" CLASS SI:CLASS-PRECEDENCE-LIST (SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STANDARD-CLASS" CLASS SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" CLASS SI::PROTOTYPE  #<CLASS {10012D0863}>)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::CLASS-EQ-SPECIALIZER :READERS (SI::CLASS-EQ-SPECIALIZER))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-METHODS :INITFORM (CONS NIL NIL))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::FINALIZED-P :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::NAME :READERS (CLASS-NAME))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
;;(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SAFE-P :INITARGS (SI::SAFE-P))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SAFE-P :READERS (SI::SAFE-P))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SAFE-P :WRITERS ((SETF SI::SAFE-P)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS BUILT-IN-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS SI::PCL-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS SI::STD-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS SI:FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS :SUBCLASS STRUCTURE-CLASS)
(ADD-CI "STANDARD-CLASS" CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" CONDITION CLASS-NAME CONDITION)
(ADD-CI "STANDARD-CLASS" CONDITION :default-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "STANDARD-CLASS" CONDITION :direct-initargs ((:FORMAT-ARGUMENTS NIL "FILTRACE")))
(ADD-CI "STANDARD-CLASS" CONDITION :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "STANDARD-CLASS" CONDITION SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" CONDITION :SLOT SI::FORMAT-ARGUMENTS :INITARGS (:FORMAT-ARGUMENTS))
(ADD-CI "STANDARD-CLASS" CONDITION :SLOT SI::FORMAT-ARGUMENTS :READERS (SIMPLE-CONDITION-FORMAT-ARGUMENTS))
(ADD-CI "STANDARD-CLASS" CONDITION :SLOT SI::FORMAT-CONTROL :INITARGS (:FORMAT-CONTROL))
(ADD-CI "STANDARD-CLASS" CONDITION :SLOT SI::FORMAT-CONTROL :READERS (SIMPLE-CONDITION-FORMAT-CONTROL))
(ADD-CI "STANDARD-CLASS" CONDITION :SLOT SI:REPORT-FUNCTION :ALLOCATION :CLASS)
(ADD-CI "STANDARD-CLASS" CONDITION :SLOT SI:REPORT-FUNCTION :LOCATION :CLASS)
(ADD-CI "STANDARD-CLASS" CONDITION :SUBCLASS SERIOUS-CONDITION)
(ADD-CI "STANDARD-CLASS" CONDITION :SUBCLASS SIMPLE-CONDITION)
(ADD-CI "STANDARD-CLASS" CONDITION :SUBCLASS WARNING)
(ADD-CI "STANDARD-CLASS" CONDITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" FUNCTION :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "STANDARD-CLASS" METHOD CLASS-NAME METHOD)
(ADD-CI "STANDARD-CLASS" METHOD :method ADD-METHOD :NAME ADD-METHOD)
(ADD-CI "STANDARD-CLASS" METHOD :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "STANDARD-CLASS" METHOD :method REMOVE-METHOD :NAME REMOVE-METHOD)
(ADD-CI "STANDARD-CLASS" METHOD :method SI:ADD-DIRECT-METHOD :NAME SI:ADD-DIRECT-METHOD)
(ADD-CI "STANDARD-CLASS" METHOD :method SI:REMOVE-DIRECT-METHOD :NAME SI:REMOVE-DIRECT-METHOD)
(ADD-CI "STANDARD-CLASS" METHOD SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT SI::SLOT-OBJECT  T))
(ADD-CI "STANDARD-CLASS" METHOD SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" METHOD SI::PROTOTYPE  #<METHOD {10012BDCD3}>)
(ADD-CI "STANDARD-CLASS" METHOD :SUBCLASS STANDARD-METHOD)
(ADD-CI "STANDARD-CLASS" METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION CLASS-NAME METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT SI::SLOT-OBJECT  T))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION SI::PROTOTYPE  #<METHOD-COMBINATION {1001244B73}>)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::COMPILER :INITARGS (:COMPILER))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::COMPILER :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::COMPILER :READERS (SI::METHOD-COMBINATION-COMPILER))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::COMPILER :WRITERS ((SETF SI::METHOD-COMBINATION-COMPILER)))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::NAME :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::NAME :READERS (SI::METHOD-COMBINATION-NAME))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::NAME :WRITERS ((SETF SI::METHOD-COMBINATION-NAME)))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::OPTIONS :INITARGS (:OPTIONS))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::OPTIONS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::OPTIONS :READERS (SI::METHOD-COMBINATION-OPTIONS))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI::OPTIONS :WRITERS ((SETF SI::METHOD-COMBINATION-OPTIONS)))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SUBCLASS SI::LONG-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SUBCLASS SI::SHORT-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION :SUBCLASS SI::STANDARD-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" METHOD-COMBINATION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION CLASS-NAME SI:DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION SI::PROTOTYPE  #<SI:DIRECT-SLOT-DEFINITION {10012AADF3}>)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SUBCLASS SI:STANDARD-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SUBCLASS SI::CONDITION-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION CLASS-NAME SI:EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION SI::PROTOTYPE  #<SI:EFFECTIVE-SLOT-DEFINITION {1001234973}>)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::ACCESSOR-FLAGS :INITFORM 0)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI:INFO :READERS (SI::SLOT-DEFINITION-INFO))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI:INFO :WRITERS ((SETF SI::SLOT-DEFINITION-INFO)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SUBCLASS SI:STANDARD-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SUBCLASS SI::CONDITION-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER CLASS-NAME SI:EQL-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI::STANDARD-SPECIALIZER SI::EXACT-CLASS-SPECIALIZER  SI::SPECIALIZER-WITH-OBJECT SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER SI::PROTOTYPE  #<SI:EQL-SPECIALIZER  {10012B48F3}>)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::DIRECT-METHODS :INITFORM (CONS NIL NIL))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::OBJECT :INITARGS (:OBJECT))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::OBJECT :READERS (SI:EQL-SPECIALIZER-OBJECT SI::SPECIALIZER-OBJECT))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS CLASS-NAME SI:FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS SI:CLASS-PRECEDENCE-LIST (SI::PCL-CLASS CLASS SI::DEPENDENT-UPDATE-MIXIN  SI::PLIST-MIXIN SI::DEFINITION-SOURCE-MIXIN  SI::STANDARD-SPECIALIZER SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS SI::PROTOTYPE  #<SI:FORWARD-REFERENCED-CLASS {1001277F03}>)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS CLASS-NAME SI:FUNCALLABLE-STANDARD-CLASS)
;;;;(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :default-initargs ((:DIRECT-SUPERCLASSES   (LIST SI::*THE-CLASS-FUNCALLABLE-STANDARD-OBJECT*)   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {1002941D9B}>)))
;;;;(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :direct-initargs ((:DIRECT-SUPERCLASSES   (LIST SI::*THE-CLASS-FUNCALLABLE-STANDARD-OBJECT*)   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {1002941D9B}>)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::STD-CLASS SI::SLOT-CLASS SI::PCL-CLASS CLASS  SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS SI::PROTOTYPE  #<SI:FUNCALLABLE-STANDARD-CLASS {10012B8DA3}>)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT CLASS-NAME SI:METAOBJECT)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:METAOBJECT SI::PROTOTYPE  #<SI:METAOBJECT {10012CE753}>)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS METHOD)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION CLASS-NAME SI:SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION SI::PROTOTYPE  #<SI:SLOT-DEFINITION {100122A743}>)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%CLASS :INITARGS (:CLASS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%CLASS :READERS (SI::SLOT-DEFINITION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%CLASS :WRITERS ((SETF SI::SLOT-DEFINITION-CLASS)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%DOCUMENTATION :READERS (SI::%SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::%TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::SOURCE :INITARGS (SI::SOURCE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::SOURCE :READERS (SI::DEFINITION-SOURCE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::SOURCE :WRITERS ((SETF SI::DEFINITION-SOURCE)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI:DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI:EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI:STANDARD-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI::CONDITION-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER CLASS-NAME SI:SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER SI::PROTOTYPE  #<SI:SPECIALIZER {1001271B33}>)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::%TYPE :READERS (SI::SPECIALIZER-TYPE))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SUBCLASS SI::EXACT-CLASS-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SUBCLASS SI::SPECIALIZER-WITH-OBJECT)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SUBCLASS SI::STANDARD-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD CLASS-NAME SI:STANDARD-ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD SI:CLASS-PRECEDENCE-LIST (SI::ACCESSOR-METHOD STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD SI::PROTOTYPE  #<SI:STANDARD-ACCESSOR-METHOD {10012ACCD3}>)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::%SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::%SLOT-DEFINITION :READERS (SI:ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SUBCLASS SI:STANDARD-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SUBCLASS SI:STANDARD-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SUBCLASS SI::STANDARD-BOUNDP-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION CLASS-NAME SI:STANDARD-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-SLOT-DEFINITION SI:DIRECT-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION SI::PROTOTYPE  #<SI:STANDARD-DIRECT-SLOT-DEFINITION {10012DE713}>)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION CLASS-NAME SI:STANDARD-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-SLOT-DEFINITION SI:EFFECTIVE-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION SI::PROTOTYPE  #<SI:STANDARD-EFFECTIVE-SLOT-DEFINITION {10012AD4F3}>)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD CLASS-NAME SI:STANDARD-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD SI::ACCESSOR-METHOD  STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD SI::PROTOTYPE  #<SI:STANDARD-READER-METHOD {1001280DB3}>)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION CLASS-NAME SI:STANDARD-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION SI::PROTOTYPE  #<SI:STANDARD-SLOT-DEFINITION {1001274533}>)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :INITARGS (:ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :READERS (SI::SLOT-DEFINITION-ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :WRITERS ((SETF SI::SLOT-DEFINITION-ALLOCATION-CLASS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SUBCLASS SI:STANDARD-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SUBCLASS SI:STANDARD-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD CLASS-NAME SI:STANDARD-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD SI::ACCESSOR-METHOD  STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD SI::PROTOTYPE  #<SI:STANDARD-WRITER-METHOD {10012487D3}>)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD CLASS-NAME SI::ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD SI:CLASS-PRECEDENCE-LIST (STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD SI::PROTOTYPE  #<SI::ACCESSOR-METHOD {100126AFF3}>)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD :SLOT SI::SLOT-NAME :INITARGS (:SLOT-NAME))
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD :SLOT SI::SLOT-NAME :READERS (SI::ACCESSOR-METHOD-SLOT-NAME))
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD :SUBCLASS SI:STANDARD-ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD :SUBCLASS SI::GLOBAL-BOUNDP-METHOD)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD :SUBCLASS SI::GLOBAL-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD :SUBCLASS SI::GLOBAL-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI::ACCESSOR-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CLASS-EQ-SPECIALIZER CLASS-NAME SI::CLASS-EQ-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::CLASS-EQ-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI::STANDARD-SPECIALIZER SI::EXACT-CLASS-SPECIALIZER  SI::SPECIALIZER-WITH-OBJECT SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::CLASS-EQ-SPECIALIZER SI::PROTOTYPE  #<SI::CLASS-EQ-SPECIALIZER {1001230EC3}>)
(ADD-CI "STANDARD-CLASS" SI::CLASS-EQ-SPECIALIZER :SLOT SI::OBJECT :INITARGS (:CLASS))
(ADD-CI "STANDARD-CLASS" SI::CLASS-EQ-SPECIALIZER :SLOT SI::OBJECT :READERS (SI::SPECIALIZER-OBJECT SI::SPECIALIZER-CLASS))
(ADD-CI "STANDARD-CLASS" SI::CLASS-EQ-SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CLASS-PROTOTYPE-SPECIALIZER CLASS-NAME SI::CLASS-PROTOTYPE-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::CLASS-PROTOTYPE-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI::STANDARD-SPECIALIZER SI::SPECIALIZER-WITH-OBJECT  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::CLASS-PROTOTYPE-SPECIALIZER SI::PROTOTYPE  #<SI::CLASS-PROTOTYPE-SPECIALIZER {1001276C63}>)
(ADD-CI "STANDARD-CLASS" SI::CLASS-PROTOTYPE-SPECIALIZER :SLOT SI::OBJECT :INITARGS (:CLASS))
(ADD-CI "STANDARD-CLASS" SI::CLASS-PROTOTYPE-SPECIALIZER :SLOT SI::OBJECT :READERS (SI::SPECIALIZER-OBJECT SI::SPECIALIZER-CLASS))
(ADD-CI "STANDARD-CLASS" SI::CLASS-PROTOTYPE-SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-CLASS CLASS-NAME SI::CONDITION-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SLOT-CLASS SI::PCL-CLASS CLASS  SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::CONDITION-CLASS SI::PROTOTYPE  #<SI::CONDITION-CLASS {100128DD63}>)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-DIRECT-SLOT-DEFINITION CLASS-NAME SI::CONDITION-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI::CONDITION-SLOT-DEFINITION SI:DIRECT-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::CONDITION-DIRECT-SLOT-DEFINITION SI::PROTOTYPE  #<SI::CONDITION-DIRECT-SLOT-DEFINITION {10012CEA73}>)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-DIRECT-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-EFFECTIVE-SLOT-DEFINITION CLASS-NAME SI::CONDITION-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI::CONDITION-SLOT-DEFINITION SI:EFFECTIVE-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::CONDITION-EFFECTIVE-SLOT-DEFINITION SI::PROTOTYPE  #<SI::CONDITION-EFFECTIVE-SLOT-DEFINITION {10012C9BF3}>)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-EFFECTIVE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION CLASS-NAME SI::CONDITION-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION SI::PROTOTYPE  #<SI::CONDITION-SLOT-DEFINITION {10012830B3}>)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :INITARGS (:ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :READERS (SI::SLOT-DEFINITION-ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :WRITERS ((SETF SI::SLOT-DEFINITION-ALLOCATION-CLASS)))
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SUBCLASS SI::CONDITION-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION :SUBCLASS SI::CONDITION-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::CONDITION-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN CLASS-NAME SI::DEFINITION-SOURCE-MIXIN)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN SI::PROTOTYPE  #<SI::DEFINITION-SOURCE-MIXIN {10012CD593}>)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SLOT SI::SOURCE :INITARGS (:DEFINITION-SOURCE))
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SLOT SI::SOURCE :READERS (SI::DEFINITION-SOURCE))
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SUBCLASS CLASS)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SUBCLASS SI::STANDARD-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN :SUBCLASS STANDARD-METHOD)
(ADD-CI "STANDARD-CLASS" SI::DEFINITION-SOURCE-MIXIN TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN CLASS-NAME SI::DEPENDENT-UPDATE-MIXIN)
(ADD-CI "STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN SI:CLASS-PRECEDENCE-LIST (SI::PLIST-MIXIN STANDARD-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN SI::PROTOTYPE  #<SI::DEPENDENT-UPDATE-MIXIN {10012A66D3}>)
(ADD-CI "STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN :SUBCLASS CLASS)
(ADD-CI "STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" SI::DEPENDENT-UPDATE-MIXIN TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::EXACT-CLASS-SPECIALIZER CLASS-NAME SI::EXACT-CLASS-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::EXACT-CLASS-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::EXACT-CLASS-SPECIALIZER SI::PROTOTYPE  #<SI::EXACT-CLASS-SPECIALIZER {10012D5803}>)
(ADD-CI "STANDARD-CLASS" SI::EXACT-CLASS-SPECIALIZER :SUBCLASS SI:EQL-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::EXACT-CLASS-SPECIALIZER :SUBCLASS SI::CLASS-EQ-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::EXACT-CLASS-SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-BOUNDP-METHOD CLASS-NAME SI::GLOBAL-BOUNDP-METHOD)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-BOUNDP-METHOD SI:CLASS-PRECEDENCE-LIST (SI::ACCESSOR-METHOD STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::GLOBAL-BOUNDP-METHOD SI::PROTOTYPE  #<SI::GLOBAL-BOUNDP-METHOD {1001288183}>)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-BOUNDP-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-READER-METHOD CLASS-NAME SI::GLOBAL-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-READER-METHOD SI:CLASS-PRECEDENCE-LIST (SI::ACCESSOR-METHOD STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::GLOBAL-READER-METHOD SI::PROTOTYPE  #<SI::GLOBAL-READER-METHOD {10012ADE93}>)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-READER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-WRITER-METHOD CLASS-NAME SI::GLOBAL-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-WRITER-METHOD SI:CLASS-PRECEDENCE-LIST (SI::ACCESSOR-METHOD STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::GLOBAL-WRITER-METHOD SI::PROTOTYPE  #<SI::GLOBAL-WRITER-METHOD {1001282243}>)
(ADD-CI "STANDARD-CLASS" SI::GLOBAL-WRITER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::INITARGS-UPDATER CLASS-NAME SI::INITARGS-UPDATER)
(ADD-CI "STANDARD-CLASS" SI::INITARGS-UPDATER SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::INITARGS-UPDATER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION CLASS-NAME SI::LONG-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (METHOD-COMBINATION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (SI::STANDARD-METHOD-COMBINATION SI::DEFINITION-SOURCE-MIXIN  METHOD-COMBINATION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION SI::PROTOTYPE  #<SI::LONG-METHOD-COMBINATION #<unbound slot> #<unbound slot>   {10012294C3}>)
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT FUNCTION :READERS (SI::LONG-METHOD-COMBINATION-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::ARGS-LAMBDA-LIST :INITARGS (:ARGS-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::ARGS-LAMBDA-LIST :READERS (SI::LONG-METHOD-COMBINATION-ARGS-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::ARGUMENTS :INITARGS (:ARGUMENTS))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::DECLARATIONS :INITARGS (:DECLARATIONS))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::FORMS :INITARGS (:FORMS))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::GENERIC-FUNCTION-SYMBOL :INITARGS (:GENERIC-FUNCTION-SYMBOL))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION :SLOT SI::METHOD-GROUP-SPECS :INITARGS (:METHOD-GROUP-SPECS))
(ADD-CI "STANDARD-CLASS" SI::LONG-METHOD-COMBINATION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::MISDESIGNED-FORWARD-REFERENCED-CLASS CLASS-NAME SI::MISDESIGNED-FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI::MISDESIGNED-FORWARD-REFERENCED-CLASS SI:CLASS-PRECEDENCE-LIST (SI:FORWARD-REFERENCED-CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::MISDESIGNED-FORWARD-REFERENCED-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS CLASS-NAME SI::PCL-CLASS)
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS SI::PROTOTYPE  #<SI::PCL-CLASS {1001291113}>)
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::%CLASS-PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::CAN-PRECEDE-LIST :READERS (SI::CLASS-CAN-PRECEDE-LIST))
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::CPL-AVAILABLE-P :READERS (SI::CPL-AVAILABLE-P))
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::INCOMPATIBLE-SUPERCLASS-LIST :READERS (SI::CLASS-INCOMPATIBLE-SUPERCLASS-LIST))
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::INCOMPATIBLE-SUPERCLASS-LIST :WRITERS ((SETF SI::CLASS-INCOMPATIBLE-SUPERCLASS-LIST)))
;;(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::PROTOTYPE :READERS (SI:CLASS-PROTOTYPE))
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SLOT SI::WRAPPER :READERS (SI::CLASS-WRAPPER))
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SUBCLASS SI:FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SUBCLASS SI::SLOT-CLASS)
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS :SUBCLASS SI:SYSTEM-CLASS)
(ADD-CI "STANDARD-CLASS" SI::PCL-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN CLASS-NAME SI::PLIST-MIXIN)
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN SI::PROTOTYPE  #<SI::PLIST-MIXIN {100123E003}>)
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN :SLOT SI::PLIST :INITARGS (SI::PLIST))
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN :SLOT SI::PLIST :READERS (SI::OBJECT-PLIST))
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN :SLOT SI::PLIST :WRITERS ((SETF SI::OBJECT-PLIST)))
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN :SUBCLASS SI::DEPENDENT-UPDATE-MIXIN)
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN :SUBCLASS STANDARD-METHOD)
(ADD-CI "STANDARD-CLASS" SI::PLIST-MIXIN TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::POTENTIAL-CLASS CLASS-NAME SI::POTENTIAL-CLASS)
(ADD-CI "STANDARD-CLASS" SI::POTENTIAL-CLASS SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::POTENTIAL-CLASS :SUBCLASS SI::MISDESIGNED-FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI::POTENTIAL-CLASS :SUBCLASS SI:CLASS)
(ADD-CI "STANDARD-CLASS" SI::POTENTIAL-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS CLASS-NAME SI::SEMI-STANDARD-CLASS)
;;;;(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :default-initargs ((:FIXED-SLOT-LOCATIONS NIL #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>)))
;;;;(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :direct-initargs ((:FIXED-SLOT-LOCATIONS NIL #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>)))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SLOTTED-CLASS SI:CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::CURRENT-VERSION :TYPE SIMPLE-VECTOR)
;;;;(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::DIRECT-INSTANCE-SPECIALIZERS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::DIRECT-INSTANCE-SPECIALIZERS :TYPE (OR HASH-TABLE SI::WEAK-LIST NULL))
;;;;(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::FINALIZED-DIRECT-SUBCLASSES :INHERITABLE-INITER ('NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::FINALIZED-DIRECT-SUBCLASSES :TYPE (OR HASH-TABLE SI::WEAK-LIST NULL))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::FIXED-SLOT-LOCATIONS :INITARGS (:FIXED-SLOT-LOCATIONS))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::FUNCALLABLEP :TYPE BOOLEAN)
;;;;(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::INSTANTIATED :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::INSTANTIATED :TYPE BOOLEAN)
;;(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SLOT SI::PROTOTYPE :TYPE (OR STANDARD-OBJECT NULL))
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SUBCLASS SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS :SUBCLASS STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SEMI-STANDARD-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION CLASS-NAME SI::SHORT-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (METHOD-COMBINATION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (SI::STANDARD-METHOD-COMBINATION SI::DEFINITION-SOURCE-MIXIN  METHOD-COMBINATION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION SI::PROTOTYPE  #<SI::SHORT-METHOD-COMBINATION #<unbound slot> #<unbound slot>   {1001269D93}>)
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION :SLOT SI::IDENTITY-WITH-ONE-ARGUMENT :INITARGS (:IDENTITY-WITH-ONE-ARGUMENT))
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION :SLOT SI::IDENTITY-WITH-ONE-ARGUMENT :READERS (SI::SHORT-COMBINATION-IDENTITY-WITH-ONE-ARGUMENT))
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION :SLOT SI::OPERATOR :INITARGS (:OPERATOR))
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION :SLOT SI::OPERATOR :READERS (SI::SHORT-COMBINATION-OPERATOR))
(ADD-CI "STANDARD-CLASS" SI::SHORT-METHOD-COMBINATION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS CLASS-NAME SI::SLOT-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS SI:CLASS-PRECEDENCE-LIST (SI::PCL-CLASS CLASS SI::DEPENDENT-UPDATE-MIXIN  SI::PLIST-MIXIN SI::DEFINITION-SOURCE-MIXIN  SI::STANDARD-SPECIALIZER SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS SI::PROTOTYPE  #<SI::SLOT-CLASS {1001224D93}>)
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS :SUBCLASS SI::CONDITION-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS :SUBCLASS SI::STD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS :SUBCLASS STRUCTURE-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOT-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOT-OBJECT :SUBCLASS STANDARD-OBJECT)
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS CLASS-NAME SI::SLOTTED-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS SI:CLASS-PRECEDENCE-LIST (SI:CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT  T))
;;;;(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SLOT SI::DIRECT-ACCESSORS :INHERITABLE-INITER ('NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SLOT SI::DIRECT-ACCESSORS :TYPE LIST)
;;;;(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SLOT SI::GENERIC-ACCESSORS :INHERITABLE-INITER (T . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SLOT SI::INSTANCE-SIZE :TYPE (INTEGER 1 *))
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SLOT SI::SUBCLASS-OF-STABLEHASH-P :TYPE BOOLEAN)
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SLOT SI::VALID-INITARGS-FROM-SLOTS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SUBCLASS SI::SEMI-STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS :SUBCLASS SI:STRUCTURE-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SLOTTED-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT CLASS-NAME SI::SPECIALIZER-WITH-OBJECT)
(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT SI::PROTOTYPE  #<SI::SPECIALIZER-WITH-OBJECT {1001269973}>)
(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT :SUBCLASS SI:EQL-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT :SUBCLASS SI::CLASS-EQ-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT :SUBCLASS SI::CLASS-PROTOTYPE-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::SPECIALIZER-WITH-OBJECT TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-BOUNDP-METHOD CLASS-NAME SI::STANDARD-BOUNDP-METHOD)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-BOUNDP-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD SI::ACCESSOR-METHOD  STANDARD-METHOD SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN METHOD SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STANDARD-BOUNDP-METHOD SI::PROTOTYPE  #<SI::STANDARD-BOUNDP-METHOD {10012ABA93}>)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-BOUNDP-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION CLASS-NAME SI::STANDARD-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (SI::DEFINITION-SOURCE-MIXIN METHOD-COMBINATION  SI:METAOBJECT STANDARD-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION SI::PROTOTYPE  #<SI::STANDARD-METHOD-COMBINATION #<unbound slot> #<unbound slot>   {10012BC723}>)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION :SLOT SI::OPTIONS :INITARGS (:OPTIONS))
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION :SLOT SI::OPTIONS :READERS (SI::METHOD-COMBINATION-OPTIONS))
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION :SLOT SI::TYPE-NAME :INITARGS (:TYPE-NAME))
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION :SLOT SI::TYPE-NAME :READERS (SI::METHOD-COMBINATION-TYPE-NAME))
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION :SUBCLASS SI::LONG-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION :SUBCLASS SI::SHORT-METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-METHOD-COMBINATION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER CLASS-NAME SI::STANDARD-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER SI::PROTOTYPE  #<SI::STANDARD-SPECIALIZER {1001271413}>)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER :SUBCLASS CLASS)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER :SUBCLASS SI:EQL-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER :SUBCLASS SI::CLASS-EQ-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER :SUBCLASS SI::CLASS-PROTOTYPE-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI::STANDARD-SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS CLASS-NAME SI::STD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SLOT-CLASS SI::PCL-CLASS CLASS  SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STD-CLASS SI::PROTOTYPE  #<SI::STD-CLASS {10012BBBC3}>)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::FORWARD :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::OPTIMIZE-SLOT-ACCESS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
;;(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SUBCLASS SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SUBCLASS SI:FUNCALLABLE-STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS :SUBCLASS STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STD-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-DIRECT-SLOT-DEFINITION CLASS-NAME SI::STRUCTURE-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI::STRUCTURE-SLOT-DEFINITION SI:DIRECT-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:DIRECT-SLOT-DEFINITION SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-DIRECT-SLOT-DEFINITION SI::PROTOTYPE  #<SI::STRUCTURE-DIRECT-SLOT-DEFINITION {10012DFA93}>)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-DIRECT-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION CLASS-NAME SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI::STRUCTURE-SLOT-DEFINITION SI:EFFECTIVE-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:EFFECTIVE-SLOT-DEFINITION SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION SI::PROTOTYPE  #<SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION {10012CEE43}>)
;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SBUC :INHERITABLE-INITER (#'SI::%SLOT-BOUNDP-USING-CLASS . #<COMPILED-FUNCTION SI::DEFAULT-$EFM-SBUC>))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SBUC :TYPE FUNCTION)
;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SMUC :INHERITABLE-INITER (#'SI::%SLOT-MAKUNBOUND-USING-CLASS . #<COMPILED-FUNCTION SI::DEFAULT-$EFM-SMUC>))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SMUC :TYPE FUNCTION)
;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SSVUC :INHERITABLE-INITER (#'SI::%SET-SLOT-VALUE-USING-CLASS . #<COMPILED-FUNCTION SI::DEFAULT-$EFM-SSVUC>))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SSVUC :TYPE FUNCTION)
;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SVUC :INHERITABLE-INITER (#'SI::%SLOT-VALUE-USING-CLASS . #<COMPILED-FUNCTION SI::DEFAULT-$EFM-SVUC>))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SVUC :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::READONLY :INITARGS (SI::READONLY))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION :SLOT SI::READONLY :TYPE BOOLEAN)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION CLASS-NAME SI::STRUCTURE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION SI::PROTOTYPE  #<SI::STRUCTURE-SLOT-DEFINITION {10012AF3E3}>)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::DEFSTRUCT-ACCESSOR-SYMBOL :INITARGS (:DEFSTRUCT-ACCESSOR-SYMBOL))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::DEFSTRUCT-ACCESSOR-SYMBOL :READERS (SI::SLOT-DEFINITION-DEFSTRUCT-ACCESSOR-SYMBOL))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::DEFSTRUCT-ACCESSOR-SYMBOL :WRITERS ((SETF SI::SLOT-DEFINITION-DEFSTRUCT-ACCESSOR-SYMBOL)))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::INTERNAL-READER-FUNCTION :INITARGS (:INTERNAL-READER-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::INTERNAL-READER-FUNCTION :READERS (SI::SLOT-DEFINITION-INTERNAL-READER-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::INTERNAL-READER-FUNCTION :WRITERS ((SETF SI::SLOT-DEFINITION-INTERNAL-READER-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::INTERNAL-WRITER-FUNCTION :INITARGS (:INTERNAL-WRITER-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::INTERNAL-WRITER-FUNCTION :READERS (SI::SLOT-DEFINITION-INTERNAL-WRITER-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SLOT SI::INTERNAL-WRITER-FUNCTION :WRITERS ((SETF SI::SLOT-DEFINITION-INTERNAL-WRITER-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI::STRUCTURE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS CLASS-NAME SI::SUPER-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS :SLOT SI::CLASSNAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS :SLOT SI::CLASSNAME :TYPE SYMBOL)
;;;;(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS :SLOT SI::DIRECT-SUBCLASSES :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS :SLOT SI::DIRECT-SUBCLASSES :TYPE (OR HASH-TABLE SI::WEAK-LIST NULL))
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS :SUBCLASS SI::POTENTIAL-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS :SUBCLASS SI:FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI::SUPER-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:CLASS CLASS-NAME SI:CLASS)
(ADD-CI "STANDARD-CLASS" SI:CLASS SI:CLASS-PRECEDENCE-LIST (SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::ALL-SUPERCLASSES :TYPE HASH-TABLE)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DIRECT-SLOTS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DIRECT-SUPERCLASSES :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::DOCUMENTATION :TYPE (OR STRING NULL))
;;;;(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::INITIALIZED :INHERITABLE-INITER (0 . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::INITIALIZED :TYPE (INTEGER 0 6))
;;;;(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::LISTENERS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::LISTENERS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::PRECEDENCE-LIST :TYPE LIST)
;;;;(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::SLOT-LOCATION-TABLE :INHERITABLE-INITER (SI::EMPTY-HT . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::SLOT-LOCATION-TABLE :TYPE HASH-TABLE)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SLOT SI::SLOTS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SUBCLASS BUILT-IN-CLASS)
(ADD-CI "STANDARD-CLASS" SI:CLASS :SUBCLASS SI::SLOTTED-CLASS)
(ADD-CI "STANDARD-CLASS" SI:CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION CLASS-NAME SI:DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT EXT:LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT EXT:LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT EXT:LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI:DOCSTRING :READERS (SI::SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SLOT SI:DOCSTRING :WRITERS ((SETF SI::SLOT-DEFINITION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION :SUBCLASS SI:STANDARD-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:DIRECT-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION CLASS-NAME SI:EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT EXT:LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT EXT:LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT EXT:LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SBUC :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SMUC :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SSVUC :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::EFM-SVUC :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::LOCATION :INITARGS (SI::LOCATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::LOCATION :TYPE (OR NULL INTEGER CONS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI:DOCSTRING :READERS (SI::SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SLOT SI:DOCSTRING :WRITERS ((SETF SI::SLOT-DEFINITION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SUBCLASS SI::STRUCTURE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION :SUBCLASS SI:STANDARD-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:EFFECTIVE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER CLASS-NAME SI:EQL-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :method SI:ADD-DIRECT-METHOD :NAME SI:ADD-DIRECT-METHOD)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :method SI:REMOVE-DIRECT-METHOD :NAME SI:REMOVE-DIRECT-METHOD)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :method SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS :NAME SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :method SI:SPECIALIZER-DIRECT-METHODS :NAME SI:SPECIALIZER-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:SPECIALIZER SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::FLAG :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::OBJECT :INITARGS (:OBJECT))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::OBJECT :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::OBJECT :READERS (SI:EQL-SPECIALIZER-OBJECT))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::OBJECT :WRITERS ((SETF SI:EQL-SPECIALIZER-OBJECT)))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER :SLOT SI::SINGLETON :INITARGS (SI::SINGLETON))
(ADD-CI "STANDARD-CLASS" SI:EQL-SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS CLASS-NAME SI:FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF CLASS-NAME) :NAME (SETF CLASS-NAME))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI::CLASS-LAYOUT) :NAME (SETF SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-DIRECT-METHODS) :NAME (SETF SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-DIRECT-SLOTS) :NAME (SETF SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-DIRECT-SUBCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-DIRECT-SUPERCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-FINALIZED-P) :NAME (SETF SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-PRECEDENCE-LIST) :NAME (SETF SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method (SETF SI:CLASS-SLOTS) :NAME (SETF SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method CLASS-NAME :NAME CLASS-NAME)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI::CLASS-LAYOUT :NAME SI::CLASS-LAYOUT)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-DEFAULT-INITARGS :NAME SI:CLASS-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-DIRECT-DEFAULT-INITARGS :NAME SI:CLASS-DIRECT-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-DIRECT-METHODS :NAME SI:CLASS-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-DIRECT-SLOTS :NAME SI:CLASS-DIRECT-SLOTS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-DIRECT-SUBCLASSES :NAME SI:CLASS-DIRECT-SUBCLASSES)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-DIRECT-SUPERCLASSES :NAME SI:CLASS-DIRECT-SUPERCLASSES)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-FINALIZED-P :NAME SI:CLASS-FINALIZED-P)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-PRECEDENCE-LIST :NAME SI:CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:CLASS-SLOTS :NAME SI:CLASS-SLOTS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:ENSURE-CLASS-USING-CLASS :NAME SI:ENSURE-CLASS-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:VALIDATE-SUPERCLASS :DOCUMENTATION "This generic function is called to determine whether the class  superclass is suitable for use as a superclass of class.")
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :method SI:VALIDATE-SUPERCLASS :NAME SI:VALIDATE-SUPERCLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
;;(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS :SUBCLASS SI::MISDESIGNED-FORWARD-REFERENCED-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FORWARD-REFERENCED-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS CLASS-NAME SI:FUNCALLABLE-STANDARD-CLASS)
;;;;(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :default-initargs ((:FIXED-SLOT-LOCATIONS NIL #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF CLASS-NAME) :NAME (SETF CLASS-NAME))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI::CLASS-LAYOUT) :NAME (SETF SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-METHODS) :NAME (SETF SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-SLOTS) :NAME (SETF SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-SUBCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-SUPERCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-FINALIZED-P) :NAME (SETF SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-PRECEDENCE-LIST) :NAME (SETF SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:CLASS-SLOTS) :NAME (SETF SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method (SETF SI:SLOT-VALUE-USING-CLASS) :NAME (SETF SI:SLOT-VALUE-USING-CLASS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method ALLOCATE-INSTANCE :NAME ALLOCATE-INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method CLASS-NAME :NAME CLASS-NAME)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method INITIALIZE-INSTANCE :NAME INITIALIZE-INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method MAKE-INSTANCE :NAME MAKE-INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method MAKE-INSTANCES-OBSOLETE :NAME MAKE-INSTANCES-OBSOLETE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method REINITIALIZE-INSTANCE :NAME REINITIALIZE-INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI::CLASS-LAYOUT :NAME SI::CLASS-LAYOUT)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI::SLOT-EXISTS-P-USING-CLASS :NAME SI::SLOT-EXISTS-P-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:ADD-DEPENDENT :NAME SI:ADD-DEPENDENT)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-DEFAULT-INITARGS :NAME SI:CLASS-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-DIRECT-DEFAULT-INITARGS :NAME SI:CLASS-DIRECT-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-DIRECT-METHODS :NAME SI:CLASS-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-DIRECT-SLOTS :NAME SI:CLASS-DIRECT-SLOTS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-DIRECT-SUBCLASSES :NAME SI:CLASS-DIRECT-SUBCLASSES)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-DIRECT-SUPERCLASSES :NAME SI:CLASS-DIRECT-SUPERCLASSES)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-FINALIZED-P :NAME SI:CLASS-FINALIZED-P)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-PRECEDENCE-LIST :NAME SI:CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-PROTOTYPE :NAME SI:CLASS-PROTOTYPE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:CLASS-SLOTS :NAME SI:CLASS-SLOTS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:COMPUTE-CLASS-PRECEDENCE-LIST :NAME SI:COMPUTE-CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:COMPUTE-DEFAULT-INITARGS :NAME SI:COMPUTE-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:COMPUTE-EFFECTIVE-SLOT-DEFINITION :NAME SI:COMPUTE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:COMPUTE-SLOTS :NAME SI:COMPUTE-SLOTS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:FINALIZE-INHERITANCE :NAME SI:FINALIZE-INHERITANCE)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:MAP-DEPENDENTS :NAME SI:MAP-DEPENDENTS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:READER-METHOD-CLASS :NAME SI:READER-METHOD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:REMOVE-DEPENDENT :NAME SI:REMOVE-DEPENDENT)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:SLOT-BOUNDP-USING-CLASS :NAME SI:SLOT-BOUNDP-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:SLOT-MAKUNBOUND-USING-CLASS :NAME SI:SLOT-MAKUNBOUND-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:SLOT-VALUE-USING-CLASS :NAME SI:SLOT-VALUE-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :method SI:WRITER-METHOD-CLASS :NAME SI:WRITER-METHOD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SEMI-STANDARD-CLASS SI::SLOTTED-CLASS SI:CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH  SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::STD-CLASS CLASS SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:%DOCUMENTATION :READERS (SI:CLASS-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::FORWARD :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::OPTIMIZE-SLOT-ACCESS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
;;(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DEFAULT-INITARGS :INITARGS (:DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT_INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT_INITARGS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-METHODS :INITARGS (:DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-METHODS :READERS (SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-SUBCLASSES :INITARGS (:DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:FINALIZED-P :INITARGS (:FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:FINALIZED-P :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:LAYOUT :INITARGS (:LAYOUT))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:LAYOUT :READERS (SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:NAME :READERS (CLASS-NAME))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:PRECEDENCE-LIST :INITARGS (:PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:SLOTS :INITARGS (:SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS :SLOT SI:SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT CLASS-NAME SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT FUNCTION T))
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:FUNCALLABLE-STANDARD-OBJECT TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT CLASS-NAME SI:METAOBJECT)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS METHOD)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI::SUPER-CLASS)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:METHOD)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT :SUBCLASS SI:SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:METAOBJECT TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:METHOD CLASS-NAME SI:METHOD)
(ADD-CI "STANDARD-CLASS" SI:METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:METHOD :SLOT SI::FROM-DEFGENERIC :READERS (SI::METHOD-FROM-DEFGENERIC))
(ADD-CI "STANDARD-CLASS" SI:METHOD :SLOT SI::FROM-DEFGENERIC :TYPE BOOLEAN)
(ADD-CI "STANDARD-CLASS" SI:METHOD :SLOT SI::FROM-DEFGENERIC :WRITERS ((SETF SI::METHOD-FROM-DEFGENERIC)))
(ADD-CI "STANDARD-CLASS" SI:METHOD :SUBCLASS SI:STANDARD-METHOD)
(ADD-CI "STANDARD-CLASS" SI:METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION CLASS-NAME SI:METHOD-COMBINATION)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::ARGUMENTS-LAMBDA-LIST :READERS (SI::METHOD-COMBINATION-ARGUMENTS-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::ARGUMENTS-LAMBDA-LIST :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::ARGUMENTS-LAMBDA-LIST :WRITERS ((SETF SI::METHOD-COMBINATION-ARGUMENTS-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CALL-NEXT-METHOD-ALLOWED :READERS (SI::METHOD-COMBINATION-CALL-NEXT-METHOD-ALLOWED))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CALL-NEXT-METHOD-ALLOWED :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CALL-NEXT-METHOD-ALLOWED :WRITERS ((SETF SI::METHOD-COMBINATION-CALL-NEXT-METHOD-ALLOWED)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CHECK-METHOD-QUALIFIERS :READERS (SI::METHOD-COMBINATION-CHECK-METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CHECK-METHOD-QUALIFIERS :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CHECK-METHOD-QUALIFIERS :WRITERS ((SETF SI::METHOD-COMBINATION-CHECK-METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CHECK-OPTIONS :READERS (SI::METHOD-COMBINATION-CHECK-OPTIONS))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CHECK-OPTIONS :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::CHECK-OPTIONS :WRITERS ((SETF SI::METHOD-COMBINATION-CHECK-OPTIONS)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::DECLARATIONS :READERS (SI::METHOD-COMBINATION-DECLARATIONS))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::DECLARATIONS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::DECLARATIONS :WRITERS ((SETF SI::METHOD-COMBINATION-DECLARATIONS)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::EXPANDER :READERS (SI::METHOD-COMBINATION-EXPANDER))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::EXPANDER :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::EXPANDER :WRITERS ((SETF SI::METHOD-COMBINATION-EXPANDER)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::IDENTITY-WITH-ONE-ARGUMENT :READERS (SI::METHOD-COMBINATION-IDENTITY-WITH-ONE-ARGUMENT))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::IDENTITY-WITH-ONE-ARGUMENT :TYPE BOOLEAN)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::IDENTITY-WITH-ONE-ARGUMENT :WRITERS ((SETF SI::METHOD-COMBINATION-IDENTITY-WITH-ONE-ARGUMENT)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::LONG-EXPANDER :READERS (SI::METHOD-COMBINATION-LONG-EXPANDER))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::LONG-EXPANDER :TYPE FUNCTION)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::LONG-EXPANDER :WRITERS ((SETF SI::METHOD-COMBINATION-LONG-EXPANDER)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::NAME :READERS (SI::METHOD-COMBINATION-NAME))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::NAME :TYPE SYMBOL)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::NAME :WRITERS ((SETF SI::METHOD-COMBINATION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::OPERATOR :READERS (SI::METHOD-COMBINATION-OPERATOR))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::OPERATOR :TYPE SYMBOL)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::OPERATOR :WRITERS ((SETF SI::METHOD-COMBINATION-OPERATOR)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::OPTIONS :READERS (SI::METHOD-COMBINATION-OPTIONS))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::OPTIONS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::OPTIONS :WRITERS ((SETF SI::METHOD-COMBINATION-OPTIONS)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::QUALIFIERS :READERS (SI::METHOD-COMBINATION-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::QUALIFIERS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI::QUALIFIERS :WRITERS ((SETF SI::METHOD-COMBINATION-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI:DOCUMENTATION :READERS (SI::METHOD-COMBINATION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI:DOCUMENTATION :TYPE (OR NULL STRING))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION :SLOT SI:DOCUMENTATION :WRITERS ((SETF SI::METHOD-COMBINATION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:METHOD-COMBINATION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION CLASS-NAME SI:SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI::SLOT-DEFINITION-ALLOCATION-CLASS) :NAME (SETF SI::SLOT-DEFINITION-ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-ALLOCATION) :NAME (SETF SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-DOCUMENTATION) :NAME (SETF SI:SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-INITARGS) :NAME (SETF SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-INITFORM) :NAME (SETF SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-INITFUNCTION) :NAME (SETF SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-LOCATION) :NAME (SETF SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-NAME) :NAME (SETF SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-READERS) :NAME (SETF SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-TYPE) :NAME (SETF SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method (SETF SI:SLOT-DEFINITION-WRITERS) :NAME (SETF SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SHARED-INITIALIZE :NAME SHARED-INITIALIZE)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI::SLOT-DEFINITION-ALLOCATION-CLASS :NAME SI::SLOT-DEFINITION-ALLOCATION-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-ALLOCATION :NAME SI:SLOT-DEFINITION-ALLOCATION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-DOCUMENTATION :NAME SI:SLOT-DEFINITION-DOCUMENTATION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-INITARGS :NAME SI:SLOT-DEFINITION-INITARGS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-INITFORM :NAME SI:SLOT-DEFINITION-INITFORM)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-INITFUNCTION :NAME SI:SLOT-DEFINITION-INITFUNCTION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-LOCATION :NAME SI:SLOT-DEFINITION-LOCATION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-NAME :NAME SI:SLOT-DEFINITION-NAME)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-READERS :NAME SI:SLOT-DEFINITION-READERS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-TYPE :NAME SI:SLOT-DEFINITION-TYPE)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :method SI:SLOT-DEFINITION-WRITERS :NAME SI:SLOT-DEFINITION-WRITERS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT EXT:LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT EXT:LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT EXT:LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::ALLOCATION :TYPE SYMBOL)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INHERITABLE-DOC :INITARGS (SI::INHERITABLE-DOC))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INHERITABLE-DOC :TYPE CONS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INHERITABLE-INITER :INITARGS (SI::INHERITABLE-INITER))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INHERITABLE-INITER :TYPE CONS)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :TYPE SYMBOL)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI:DOCSTRING :READERS (SI::SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SLOT SI:DOCSTRING :WRITERS ((SETF SI::SLOT-DEFINITION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI:DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI:EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION :SUBCLASS SI:STANDARD-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER CLASS-NAME SI:SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
;;;;(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::DIRECT-METHODS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SUBCLASS CLASS)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SUBCLASS SI::POTENTIAL-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER :SUBCLASS SI:EQL-SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:SPECIALIZER TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD CLASS-NAME SI:STANDARD-ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :method SI:ACCESSOR-METHOD-SLOT-DEFINITION :NAME SI:ACCESSOR-METHOD-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-METHOD SI:METHOD SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD SI:CLASS-PRECEDENCE-LIST (STANDARD-METHOD METHOD SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD SI:CLASS-PRECEDENCE-LIST (STANDARD-METHOD METHOD SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::%SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::KEYWORDS :READERS (SI::METHOD-KEYWORDS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::KEYWORDS :WRITERS ((SETF SI::METHOD-KEYWORDS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::PLIST :INITARGS (:PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::PLIST :READERS (SI::METHOD-PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::PLIST :WRITERS ((SETF SI::METHOD-PLIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::QUALIFIERS :INITARGS (:QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::QUALIFIERS :READERS (METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SLOT-DEFINITION :READERS (SI::%ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SLOT-DEFINITION :TYPE SI:DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SLOT-DEFINITION :WRITERS ((SETF SI::%ACCESSOR-METHOD-SLOT-DEFINITION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SPECIALIZERS :INITARGS (:SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SPECIALIZERS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI:METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-FUNCTION :WRITERS ((SETF SI:METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI::THE-GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI:SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI:SLOT-DEFINITION :READERS (SI:ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SLOT SI:SLOT-DEFINITION :WRITERS ((SETF SI:ACCESSOR-METHOD-SLOT-DEFINITION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SUBCLASS SI:STANDARD-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD :SUBCLASS SI:STANDARD-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-ACCESSOR-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION CLASS-NAME SI:STANDARD-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :method SI:READER-METHOD-CLASS :NAME SI:READER-METHOD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :method SI:WRITER-METHOD-CLASS :NAME SI:WRITER-METHOD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:DIRECT-SLOT-DEFINITION SI:STANDARD-SLOT-DEFINITION SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-SLOT-DEFINITION SI:DIRECT-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-SLOT-DEFINITION SI:DIRECT-SLOT-DEFINITION SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT EXT:LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT EXT:LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT EXT:LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::%TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :INITARGS (:ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI:DOCSTRING :READERS (SI::SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI:DOCSTRING :WRITERS ((SETF SI::SLOT-DEFINITION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-DIRECT-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION CLASS-NAME SI:STANDARD-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :method (SETF SI:SLOT-VALUE-USING-CLASS) :NAME (SETF SI:SLOT-VALUE-USING-CLASS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :method SI:SLOT-BOUNDP-USING-CLASS :NAME SI:SLOT-BOUNDP-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :method SI:SLOT-MAKUNBOUND-USING-CLASS :NAME SI:SLOT-MAKUNBOUND-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :method SI:SLOT-VALUE-USING-CLASS :NAME SI:SLOT-VALUE-USING-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:EFFECTIVE-SLOT-DEFINITION SI:STANDARD-SLOT-DEFINITION SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-SLOT-DEFINITION SI:EFFECTIVE-SLOT-DEFINITION  SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-SLOT-DEFINITION SI:EFFECTIVE-SLOT-DEFINITION SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT EXT:LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT EXT:LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT EXT:LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::%TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :INITARGS (:ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI:DOCSTRING :READERS (SI::SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI:DOCSTRING :WRITERS ((SETF SI::SLOT-DEFINITION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-EFFECTIVE-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD CLASS-NAME SI:STANDARD-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD SI:CLASS-PRECEDENCE-LIST (SI:METHOD SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::DOCUMENTATION :READERS (SI::STD-METHOD-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::DOCUMENTATION :TYPE (OR STRING NULL))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::DOCUMENTATION :WRITERS ((SETF SI::STD-METHOD-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::FAST-FUNCTION :READERS (SI::STD-METHOD-FAST-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::FAST-FUNCTION :TYPE (OR NULL FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::FAST-FUNCTION :WRITERS ((SETF SI::STD-METHOD-FAST-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::FUNCTION :READERS (SI::STD-METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::FUNCTION :TYPE (OR NULL FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::FUNCTION :WRITERS ((SETF SI::STD-METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::GF :READERS (SI::STD-METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::GF :TYPE (OR NULL SI:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::GF :WRITERS ((SETF SI::STD-METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI::STD-METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::LAMBDA-LIST :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI::STD-METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::QUALIFIERS :READERS (SI::STD-METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::QUALIFIERS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF SI::STD-METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::SIGNATURE :READERS (SI::STD-METHOD-SIGNATURE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::SIGNATURE :TYPE (SIMPLE-VECTOR 6))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::SIGNATURE :WRITERS ((SETF SI::STD-METHOD-SIGNATURE)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::SPECIALIZERS :READERS (SI::STD-METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::SPECIALIZERS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI::STD-METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::WANTS-NEXT-METHOD-P :READERS (SI::STD-METHOD-WANTS-NEXT-METHOD-P))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::WANTS-NEXT-METHOD-P :TYPE BOOLEAN)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SLOT SI::WANTS-NEXT-METHOD-P :WRITERS ((SETF SI::STD-METHOD-WANTS-NEXT-METHOD-P)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD :SUBCLASS SI:STANDARD-ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD CLASS-NAME SI:STANDARD-OPTIMIZED-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-READER-METHOD SI:STANDARD-ACCESSOR-METHOD  STANDARD-METHOD METHOD SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::KEYWORDS :READERS (SI::METHOD-KEYWORDS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::KEYWORDS :WRITERS ((SETF SI::METHOD-KEYWORDS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::PLIST :INITARGS (:PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::PLIST :READERS (SI::METHOD-PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::PLIST :WRITERS ((SETF SI::METHOD-PLIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::QUALIFIERS :INITARGS (:QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::QUALIFIERS :READERS (METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::SPECIALIZERS :INITARGS (:SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::SPECIALIZERS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI:METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-FUNCTION :WRITERS ((SETF SI:METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI:SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI:SLOT-DEFINITION :READERS (SI:ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD :SLOT SI:SLOT-DEFINITION :WRITERS ((SETF SI:ACCESSOR-METHOD-SLOT-DEFINITION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-READER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD CLASS-NAME SI:STANDARD-OPTIMIZED-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-WRITER-METHOD SI:STANDARD-ACCESSOR-METHOD  STANDARD-METHOD METHOD SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::KEYWORDS :READERS (SI::METHOD-KEYWORDS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::KEYWORDS :WRITERS ((SETF SI::METHOD-KEYWORDS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::PLIST :INITARGS (:PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::PLIST :READERS (SI::METHOD-PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::PLIST :WRITERS ((SETF SI::METHOD-PLIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::QUALIFIERS :INITARGS (:QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::QUALIFIERS :READERS (METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::SPECIALIZERS :INITARGS (:SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::SPECIALIZERS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI:METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-FUNCTION :WRITERS ((SETF SI:METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI:SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI:SLOT-DEFINITION :READERS (SI:ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD :SLOT SI:SLOT-DEFINITION :WRITERS ((SETF SI:ACCESSOR-METHOD-SLOT-DEFINITION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-OPTIMIZED-WRITER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD CLASS-NAME SI:STANDARD-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD SI:STANDARD-METHOD SI:METHOD SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD STANDARD-METHOD METHOD  SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD STANDARD-METHOD METHOD SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::KEYWORDS :READERS (SI::METHOD-KEYWORDS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::KEYWORDS :WRITERS ((SETF SI::METHOD-KEYWORDS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::PLIST :INITARGS (:PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::PLIST :READERS (SI::METHOD-PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::PLIST :WRITERS ((SETF SI::METHOD-PLIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::QUALIFIERS :INITARGS (:QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::QUALIFIERS :READERS (METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::SPECIALIZERS :INITARGS (:SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::SPECIALIZERS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI:METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-FUNCTION :WRITERS ((SETF SI:METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI:SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI:SLOT-DEFINITION :READERS (SI:ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SLOT SI:SLOT-DEFINITION :WRITERS ((SETF SI:ACCESSOR-METHOD-SLOT-DEFINITION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD :SUBCLASS SI:STANDARD-OPTIMIZED-READER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-READER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION CLASS-NAME SI:STANDARD-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION SI:CLASS-PRECEDENCE-LIST (SI:SLOT-DEFINITION SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT EXT:LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT EXT:LOCATION :READERS (SI:SLOT-DEFINITION-LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT EXT:LOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-LOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::%TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITARGS (:ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :INITFORM :INSTANCE)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :READERS (SI:SLOT-DEFINITION-ALLOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION :WRITERS ((SETF SI:SLOT-DEFINITION-ALLOCATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::ALLOCATION-CLASS :INITARGS (:ALLOCATION-CLASS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITARGS (:TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :INITFORM T)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :READERS (SI:SLOT-DEFINITION-TYPE))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::DECLARED-TYPE :WRITERS ((SETF SI:SLOT-DEFINITION-TYPE)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITARGS :INITARGS (:INITARGS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITARGS :READERS (SI:SLOT-DEFINITION-INITARGS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITARGS :WRITERS ((SETF SI:SLOT-DEFINITION-INITARGS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFORM :INITARGS (:INITFORM))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFORM :READERS (SI:SLOT-DEFINITION-INITFORM))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFORM :WRITERS ((SETF SI:SLOT-DEFINITION-INITFORM)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFUNCTION :INITARGS (:INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFUNCTION :READERS (SI:SLOT-DEFINITION-INITFUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::INITFUNCTION :WRITERS ((SETF SI:SLOT-DEFINITION-INITFUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::LOCATION :INITARGS (:LOCATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::NAME :READERS (SI:SLOT-DEFINITION-NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::NAME :WRITERS ((SETF SI:SLOT-DEFINITION-NAME)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::READERS :INITARGS (:READERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::READERS :READERS (SI:SLOT-DEFINITION-READERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::READERS :WRITERS ((SETF SI:SLOT-DEFINITION-READERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::WRITERS :INITARGS (:WRITERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::WRITERS :READERS (SI:SLOT-DEFINITION-WRITERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI::WRITERS :WRITERS ((SETF SI:SLOT-DEFINITION-WRITERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI:DOCSTRING :READERS (SI::SLOT-DEFINITION-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI:DOCSTRING :WRITERS ((SETF SI::SLOT-DEFINITION-DOCUMENTATION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SUBCLASS SI:STANDARD-DIRECT-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION :SUBCLASS SI:STANDARD-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-SLOT-DEFINITION TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH CLASS-NAME SI:STANDARD-STABLEHASH)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH SI:CLASS-PRECEDENCE-LIST (STANDARD-OBJECT T))
;;;;(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH :SLOT SI::HASHCODE :INHERITABLE-INITER ((SI::RANDOM-POSFIXNUM) . #<COMPILED-FUNCTION SI::DEFAULT-$HASHCODE>))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH :SUBCLASS SI::SUPER-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH :SUBCLASS SI:METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH :SUBCLASS SI:SPECIALIZER)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-STABLEHASH TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD CLASS-NAME SI:STANDARD-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD SI:STANDARD-METHOD SI:METHOD SI:STANDARD-STABLEHASH SI:METAOBJECT STANDARD-OBJECT  T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD STANDARD-METHOD METHOD  SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD SI:CLASS-PRECEDENCE-LIST (SI:STANDARD-ACCESSOR-METHOD STANDARD-METHOD METHOD SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::KEYWORDS :READERS (SI::METHOD-KEYWORDS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::KEYWORDS :WRITERS ((SETF SI::METHOD-KEYWORDS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::PLIST :INITARGS (:PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::PLIST :READERS (SI::METHOD-PLIST))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::PLIST :WRITERS ((SETF SI::METHOD-PLIST)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::QUALIFIERS :INITARGS (:QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::QUALIFIERS :READERS (METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::SPECIALIZERS :INITARGS (:SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::SPECIALIZERS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI:METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-FUNCTION :WRITERS ((SETF SI:METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI::THE-GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI:SLOT-DEFINITION :INITARGS (:SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI:SLOT-DEFINITION :READERS (SI:ACCESSOR-METHOD-SLOT-DEFINITION))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SLOT SI:SLOT-DEFINITION :WRITERS ((SETF SI:ACCESSOR-METHOD-SLOT-DEFINITION)))
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD :SUBCLASS SI:STANDARD-OPTIMIZED-WRITER-METHOD)
(ADD-CI "STANDARD-CLASS" SI:STANDARD-WRITER-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS CLASS-NAME SI:STRUCTURE-CLASS)
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SLOTTED-CLASS SI:CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS :SLOT SI::BOA-CONSTRUCTORS :TYPE LIST)
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS :SLOT SI::COPIER :TYPE SYMBOL)
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS :SLOT SI::KCONSTRUCTOR :TYPE SYMBOL)
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS :SLOT SI::NAMES :TYPE CONS)
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS :SLOT SI::PREDICATE :TYPE SYMBOL)
;;(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS :SLOT SI::PROTOTYPE :TYPE (OR STRUCTURE-OBJECT NULL))
(ADD-CI "STANDARD-CLASS" SI:STRUCTURE-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SYSTEM-CLASS CLASS-NAME SI:SYSTEM-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SYSTEM-CLASS SI:CLASS-PRECEDENCE-LIST (SI::PCL-CLASS CLASS SI::DEPENDENT-UPDATE-MIXIN  SI::PLIST-MIXIN SI::DEFINITION-SOURCE-MIXIN  SI::STANDARD-SPECIALIZER SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" SI:SYSTEM-CLASS SI::PROTOTYPE  #<SI:SYSTEM-CLASS {100123B8A3}>)
(ADD-CI "STANDARD-CLASS" SI:SYSTEM-CLASS :SUBCLASS BUILT-IN-CLASS)
(ADD-CI "STANDARD-CLASS" SI:SYSTEM-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS CLASS-NAME STANDARD-CLASS)
;;;;(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :default-initargs ((:DIRECT-SUPERCLASSES (LIST SI::*THE-CLASS-STANDARD-OBJECT*)   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {1002941E9B}>)))
;;;;(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :default-initargs ((:FIXED-SLOT-LOCATIONS NIL #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>)))
;;;;(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :direct-initargs ((:DIRECT-SUPERCLASSES (LIST SI::*THE-CLASS-STANDARD-OBJECT*)   #<FUNCTION (LAMBDA ()                :IN                "/build/sbcl-X2E_zI/sbcl-1.3.1/src/pcl/defs.lisp")     {1002941E9B}>)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF CLASS-NAME) :NAME (SETF CLASS-NAME))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI::CLASS-LAYOUT) :NAME (SETF SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-METHODS) :NAME (SETF SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-SLOTS) :NAME (SETF SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-SUBCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-DIRECT-SUPERCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-FINALIZED-P) :NAME (SETF SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-PRECEDENCE-LIST) :NAME (SETF SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:CLASS-SLOTS) :NAME (SETF SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method (SETF SI:SLOT-VALUE-USING-CLASS) :NAME (SETF SI:SLOT-VALUE-USING-CLASS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method ALLOCATE-INSTANCE :NAME ALLOCATE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method CHANGE-CLASS :NAME CHANGE-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method CLASS-NAME :NAME CLASS-NAME)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method INITIALIZE-INSTANCE :NAME INITIALIZE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method MAKE-INSTANCE :NAME MAKE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method MAKE-INSTANCES-OBSOLETE :NAME MAKE-INSTANCES-OBSOLETE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method REINITIALIZE-INSTANCE :NAME REINITIALIZE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI::CLASS-LAYOUT :NAME SI::CLASS-LAYOUT)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI::SLOT-EXISTS-P-USING-CLASS :NAME SI::SLOT-EXISTS-P-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:ADD-DEPENDENT :NAME SI:ADD-DEPENDENT)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-DEFAULT-INITARGS :NAME SI:CLASS-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-DIRECT-DEFAULT-INITARGS :NAME SI:CLASS-DIRECT-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-DIRECT-METHODS :NAME SI:CLASS-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-DIRECT-SLOTS :NAME SI:CLASS-DIRECT-SLOTS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-DIRECT-SUBCLASSES :NAME SI:CLASS-DIRECT-SUBCLASSES)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-DIRECT-SUPERCLASSES :NAME SI:CLASS-DIRECT-SUPERCLASSES)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-FINALIZED-P :NAME SI:CLASS-FINALIZED-P)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-PRECEDENCE-LIST :NAME SI:CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-PROTOTYPE :NAME SI:CLASS-PROTOTYPE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:CLASS-SLOTS :NAME SI:CLASS-SLOTS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:COMPUTE-CLASS-PRECEDENCE-LIST :NAME SI:COMPUTE-CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:COMPUTE-DEFAULT-INITARGS :NAME SI:COMPUTE-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:COMPUTE-EFFECTIVE-SLOT-DEFINITION :NAME SI:COMPUTE-EFFECTIVE-SLOT-DEFINITION)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:COMPUTE-SLOTS :NAME SI:COMPUTE-SLOTS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:FINALIZE-INHERITANCE :NAME SI:FINALIZE-INHERITANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:MAP-DEPENDENTS :NAME SI:MAP-DEPENDENTS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:READER-METHOD-CLASS :NAME SI:READER-METHOD-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:REMOVE-DEPENDENT :NAME SI:REMOVE-DEPENDENT)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:SLOT-BOUNDP-USING-CLASS :NAME SI:SLOT-BOUNDP-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:SLOT-MAKUNBOUND-USING-CLASS :NAME SI:SLOT-MAKUNBOUND-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:SLOT-VALUE-USING-CLASS :NAME SI:SLOT-VALUE-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :method SI:WRITER-METHOD-CLASS :NAME SI:WRITER-METHOD-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SEMI-STANDARD-CLASS SI::SLOTTED-CLASS SI:CLASS SI::POTENTIAL-CLASS SI:SPECIALIZER SI::SUPER-CLASS SI:STANDARD-STABLEHASH  SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::STD-CLASS CLASS SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS SI:CLASS-PRECEDENCE-LIST (SI::STD-CLASS SI::SLOT-CLASS SI::PCL-CLASS CLASS  SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" STANDARD-CLASS SI::PROTOTYPE  #<STANDARD-CLASS {10012870E3}>)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:%DOCUMENTATION :READERS (SI:CLASS-DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::FORWARD :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::OPTIMIZE-SLOT-ACCESS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
;;(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DEFAULT-INITARGS :INITARGS (:DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT_INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT_INITARGS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-METHODS :INITARGS (:DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-METHODS :READERS (SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-SUBCLASSES :INITARGS (:DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:FINALIZED-P :INITARGS (:FINALIZED-P))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:FINALIZED-P :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:LAYOUT :INITARGS (:LAYOUT))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:LAYOUT :READERS (SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:NAME :READERS (CLASS-NAME))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:PRECEDENCE-LIST :INITARGS (:PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:SLOTS :INITARGS (:SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS :SLOT SI:SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" STANDARD-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD CLASS-NAME STANDARD-METHOD)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method ADD-METHOD :NAME ADD-METHOD)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method FUNCTION-KEYWORDS :NAME FUNCTION-KEYWORDS)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method METHOD-QUALIFIERS :NAME METHOD-QUALIFIERS)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method REMOVE-METHOD :NAME REMOVE-METHOD)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method SI:MAKE-METHOD-LAMBDA :NAME SI:MAKE-METHOD-LAMBDA)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method SI:METHOD-FUNCTION :NAME SI:METHOD-FUNCTION)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method SI:METHOD-GENERIC-FUNCTION :NAME SI:METHOD-GENERIC-FUNCTION)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method SI:METHOD-LAMBDA-LIST :NAME SI:METHOD-LAMBDA-LIST)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :method SI:METHOD-SPECIALIZERS :NAME SI:METHOD-SPECIALIZERS)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD SI:CLASS-PRECEDENCE-LIST (METHOD SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD SI:CLASS-PRECEDENCE-LIST (SI::PLIST-MIXIN SI::DEFINITION-SOURCE-MIXIN METHOD  SI:METAOBJECT STANDARD-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STANDARD-CLASS" STANDARD-METHOD SI::PROTOTYPE  #<STANDARD-METHOD {10012446D3}>)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI:%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::%DOCUMENTATION :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::%FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::%FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::%GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::%GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::%GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::FAST-FUNCTION :INITARGS (:FAST-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::KEYWORDS :INITARGS (:KEYWORDS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::KEYWORDS :READERS (SI::METHOD-KEYWORDS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::KEYWORDS :WRITERS ((SETF SI::METHOD-KEYWORDS)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::LAMBDA-LIST :INITARGS (:LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::LAMBDA-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::LAMBDA-LIST :READERS (SI:METHOD-LAMBDA-LIST))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::LAMBDA-LIST :WRITERS ((SETF SI:METHOD-LAMBDA-LIST)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::OTHER-KEYWORDS-P :INITARGS (:OTHER-KEYWORDS-P))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::PLIST :INITARGS (:PLIST))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::PLIST :READERS (SI::METHOD-PLIST))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::PLIST :WRITERS ((SETF SI::METHOD-PLIST)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::QUALIFIERS :INITARGS (:QUALIFIERS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::QUALIFIERS :READERS (METHOD-QUALIFIERS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::QUALIFIERS :WRITERS ((SETF METHOD-QUALIFIERS)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SIMPLE-NEXT-METHOD-CALL :INITARGS (SI::SIMPLE-NEXT-METHOD-CALL))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SIMPLE-NEXT-METHOD-CALL :READERS (SI::SIMPLE-NEXT-METHOD-CALL-P))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SPECIALIZERS :INITARGS (:SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SPECIALIZERS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SPECIALIZERS :READERS (SI:METHOD-SPECIALIZERS))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::SPECIALIZERS :WRITERS ((SETF SI:METHOD-SPECIALIZERS)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-FUNCTION :READERS (SI:METHOD-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-FUNCTION :WRITERS ((SETF SI:METHOD-FUNCTION)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-GENERIC-FUNCTION :INITARGS (:GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-GENERIC-FUNCTION :READERS (SI:METHOD-GENERIC-FUNCTION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI::THE-GENERIC-FUNCTION :WRITERS ((SETF SI:METHOD-GENERIC-FUNCTION)))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SUBCLASS SI::ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD :SUBCLASS SI:STANDARD-ACCESSOR-METHOD)
(ADD-CI "STANDARD-CLASS" STANDARD-METHOD TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT CLASS-NAME STANDARD-OBJECT)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method CHANGE-CLASS :NAME CHANGE-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method INITIALIZE-INSTANCE :NAME INITIALIZE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method REINITIALIZE-INSTANCE :NAME REINITIALIZE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method SHARED-INITIALIZE :NAME SHARED-INITIALIZE)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method UPDATE-INSTANCE-FOR-DIFFERENT-CLASS :NAME UPDATE-INSTANCE-FOR-DIFFERENT-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :method UPDATE-INSTANCE-FOR-REDEFINED-CLASS :NAME UPDATE-INSTANCE-FOR-REDEFINED-CLASS)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT SI:CLASS-PRECEDENCE-LIST (SI::SLOT-OBJECT T))
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT SI::PROTOTYPE  #<STANDARD-OBJECT {1001230373}>)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS CONDITION)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:METAOBJECT)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI::DEFINITION-SOURCE-MIXIN)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI::INITARGS-UPDATER)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI::PLIST-MIXIN)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:METAOBJECT)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT :SUBCLASS SI:STANDARD-STABLEHASH)
(ADD-CI "STANDARD-CLASS" STANDARD-OBJECT TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS CLASS-NAME STRUCTURE-CLASS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF CLASS-NAME) :NAME (SETF CLASS-NAME))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF DOCUMENTATION) :NAME (SETF DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI::CLASS-LAYOUT) :NAME (SETF SI::CLASS-LAYOUT))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS) :NAME (SETF SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-DIRECT-METHODS) :NAME (SETF SI:CLASS-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-DIRECT-SLOTS) :NAME (SETF SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-DIRECT-SUBCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-DIRECT-SUPERCLASSES) :NAME (SETF SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-FINALIZED-P) :NAME (SETF SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-PRECEDENCE-LIST) :NAME (SETF SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:CLASS-SLOTS) :NAME (SETF SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method (SETF SI:SLOT-VALUE-USING-CLASS) :NAME (SETF SI:SLOT-VALUE-USING-CLASS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method ALLOCATE-INSTANCE :NAME ALLOCATE-INSTANCE)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method CLASS-NAME :NAME CLASS-NAME)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method DOCUMENTATION :NAME DOCUMENTATION)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI::CLASS-LAYOUT :NAME SI::CLASS-LAYOUT)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI::SLOT-EXISTS-P-USING-CLASS :NAME SI::SLOT-EXISTS-P-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-DEFAULT-INITARGS :NAME SI:CLASS-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-DIRECT-DEFAULT-INITARGS :NAME SI:CLASS-DIRECT-DEFAULT-INITARGS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-DIRECT-METHODS :NAME SI:CLASS-DIRECT-METHODS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-DIRECT-SLOTS :NAME SI:CLASS-DIRECT-SLOTS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-DIRECT-SUBCLASSES :NAME SI:CLASS-DIRECT-SUBCLASSES)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-DIRECT-SUPERCLASSES :NAME SI:CLASS-DIRECT-SUPERCLASSES)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-FINALIZED-P :NAME SI:CLASS-FINALIZED-P)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-PRECEDENCE-LIST :NAME SI:CLASS-PRECEDENCE-LIST)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-PROTOTYPE :NAME SI:CLASS-PROTOTYPE)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:CLASS-SLOTS :NAME SI:CLASS-SLOTS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:SLOT-BOUNDP-USING-CLASS :NAME SI:SLOT-BOUNDP-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:SLOT-MAKUNBOUND-USING-CLASS :NAME SI:SLOT-MAKUNBOUND-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :method SI:SLOT-VALUE-USING-CLASS :NAME SI:SLOT-VALUE-USING-CLASS)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT  STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS SI:CLASS-PRECEDENCE-LIST (CLASS SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT T))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS SI:CLASS-PRECEDENCE-LIST (SI::SLOT-CLASS SI::PCL-CLASS CLASS  SI::DEPENDENT-UPDATE-MIXIN SI::PLIST-MIXIN  SI::DEFINITION-SOURCE-MIXIN SI::STANDARD-SPECIALIZER  SI:SPECIALIZER SI:METAOBJECT STANDARD-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS SI::PROTOTYPE  #<STRUCTURE-CLASS {100127B323}>)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT DOCUMENTATION :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::CONSTRUCTORS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::COPIER :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFAULT-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFAULT-INITARGS :READERS (SI:CLASS-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFSTRUCT-CONSTRUCTOR :READERS (SI::CLASS-DEFSTRUCT-CONSTRUCTOR))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFSTRUCT-CONSTRUCTOR :WRITERS ((SETF SI::CLASS-DEFSTRUCT-CONSTRUCTOR)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFSTRUCT-FORM :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFSTRUCT-FORM :READERS (SI::CLASS-DEFSTRUCT-FORM))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEFSTRUCT-FORM :WRITERS ((SETF SI::CLASS-DEFSTRUCT-FORM)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEPENDENTS :READERS (SI::CLASS-DEPENDENTS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DEPENDENTS :WRITERS ((SETF SI::CLASS-DEPENDENTS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :INITARGS (:DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :READERS (SI:CLASS-DIRECT-DEFAULT-INITARGS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-DEFAULT-INITARGS :WRITERS ((SETF SI:CLASS-DIRECT-DEFAULT-INITARGS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :READERS (SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-GENERIC-FUNCTIONS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-GENERIC-FUNCTIONS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-METHODS :READERS (SI:SPECIALIZER-DIRECT-METHODS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-METHODS :WRITERS ((SETF SI:SPECIALIZER-DIRECT-METHODS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SLOTS :INITARGS (:DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SLOTS :READERS (SI:CLASS-DIRECT-SLOTS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SLOTS :WRITERS ((SETF SI:CLASS-DIRECT-SLOTS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SUBCLASSES :READERS (SI:CLASS-DIRECT-SUBCLASSES))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SUBCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUBCLASSES)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITARGS (:DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SUPERCLASSES :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SUPERCLASSES :READERS (SI:CLASS-DIRECT-SUPERCLASSES))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::DIRECT-SUPERCLASSES :WRITERS ((SETF SI:CLASS-DIRECT-SUPERCLASSES)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::FINALIZED :READERS (SI:CLASS-FINALIZED-P))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::FINALIZED :WRITERS ((SETF SI:CLASS-FINALIZED-P)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::FLAG :READERS (SI::EQL-SPECIALIZER-FLAG))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::FLAG :WRITERS ((SETF SI::EQL-SPECIALIZER-FLAG)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::FROM-DEFCLASS-P :INITARGS (:FROM-DEFCLASS-P))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::INITIAL-OFFSET :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::LOCATION-TABLE :READERS (SI::CLASS-LOCATION-TABLE))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::LOCATION-TABLE :WRITERS ((SETF SI::CLASS-LOCATION-TABLE)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::NAME :INITARGS (:NAME))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::NAME :READERS (SI::CLASS-ID))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::NAME :WRITERS ((SETF SI::CLASS-ID)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::PRECEDENCE-LIST :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::PRECEDENCE-LIST :READERS (SI:CLASS-PRECEDENCE-LIST))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::PRECEDENCE-LIST :WRITERS ((SETF SI:CLASS-PRECEDENCE-LIST)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::PREDICATE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::PRINT-FUNCTION :INITFORM SI::+INITFORM-UNSUPPLIED+)
;;(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::PROTOTYPE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SEALEDP :INITARGS (:SEALEDP))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SEALEDP :READERS (SI::CLASS-SEALEDP))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SEALEDP :WRITERS ((SETF SI::CLASS-SEALEDP)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SIZE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SIZE :READERS (SI::CLASS-SIZE))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SIZE :WRITERS ((SETF SI::CLASS-SIZE)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SLOT-DESCRIPTIONS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SLOTS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SLOTS :READERS (SI:CLASS-SLOTS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::SLOTS :WRITERS ((SETF SI:CLASS-SLOTS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::VALID-INITARGS :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::VALID-INITARGS :READERS (SI::CLASS-VALID-INITARGS))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI::VALID-INITARGS :WRITERS ((SETF SI::CLASS-VALID-INITARGS)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI:DOCSTRING :INITARGS (:DOCUMENTATION))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI:SLOT-TABLE :INITFORM SI::+INITFORM-UNSUPPLIED+)
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI:SLOT-TABLE :READERS (SI:SLOT-TABLE))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS :SLOT SI:SLOT-TABLE :WRITERS ((SETF SI:SLOT-TABLE)))
(ADD-CI "STANDARD-CLASS" STRUCTURE-CLASS TYPE-OF STANDARD-CLASS)
(ADD-CI "STANDARD-CLASS" T :SUBCLASS STANDARD-OBJECT)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM CLASS-NAME BROADCAST-STREAM)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM SI:CLASS-PRECEDENCE-LIST (SI:ANSI-STREAM STREAM STRUCTURE-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM SI::PROTOTYPE  #<BROADCAST-STREAM {100667AF23}>)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::BOUT :INITFORM #'SI::BROADCAST-BOUT)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::BOUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::MISC :INITFORM #'SI::BROADCAST-MISC)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::MISC :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::OUT :INITFORM #'SI::BROADCAST-OUT)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::OUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::SOUT :INITFORM #'SI::BROADCAST-SOUT)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::SOUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM :SLOT SI::STREAMS :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" BROADCAST-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM CLASS-NAME CONCATENATED-STREAM)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM SI:CLASS-PRECEDENCE-LIST (SI:ANSI-STREAM STREAM STRUCTURE-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM SI::PROTOTYPE  #<CONCATENATED-STREAM :STREAMS 0 {10066A9623}>)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::BIN :INITFORM #'SI::CONCATENATED-BIN)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::IN :INITFORM #'SI::CONCATENATED-IN)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::IN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::MISC :INITFORM #'SI::CONCATENATED-MISC)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::MISC :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::N-BIN :INITFORM #'SI::CONCATENATED-N-BIN)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::N-BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM :SLOT SI::STREAMS :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" CONCATENATED-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM CLASS-NAME ECHO-STREAM)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM SI:CLASS-PRECEDENCE-LIST (TWO-WAY-STREAM SI:ANSI-STREAM STREAM  STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM SI::PROTOTYPE  #<ECHO-STREAM :INPUT-STREAM 0 :OUTPUT-STREAM 0 {10067195F3}>)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::BIN :INITFORM #'SI::ECHO-BIN)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::IN :INITFORM #'SI::ECHO-IN)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::IN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::MISC :INITFORM #'SI::ECHO-MISC)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::MISC :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::N-BIN :INITFORM #'SI::ECHO-N-BIN)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::N-BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM :SLOT SI::UNREAD-STUFF :TYPE BOOLEAN)
(ADD-CI "STRUCTURE-CLASS" ECHO-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" FILE-STREAM CLASS-NAME FILE-STREAM)
(ADD-CI "STRUCTURE-CLASS" FILE-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" FILE-STREAM :SUBCLASS SI:FD-STREAM)
(ADD-CI "STRUCTURE-CLASS" FILE-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" FUNCTION :SUBCLASS SI::%METHOD-FUNCTION)
(ADD-CI "STRUCTURE-CLASS" FUNCTION :SUBCLASS SI::CTOR)
(ADD-CI "STRUCTURE-CLASS" FUNCTION :SUBCLASS SI::STANDARD-FUNCALLABLE-INSTANCE)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE CLASS-NAME HASH-TABLE)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" HASH-TABLE SI::PROTOTYPE  #<HASH-TABLE :TEST 0 :COUNT 0 :WEAKNESS 0 {10064DC313}>)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::CACHE :TYPE (OR NULL SI:INDEX))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::HASH-FUN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::HASH-VECTOR :TYPE (OR NULL                 (SIMPLE-ARRAY SI:WORD (*))))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::INDEX-VECTOR :TYPE (SIMPLE-ARRAY SI:WORD (*)))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::LOCK :INITFORM (SI:MAKE-MUTEX :NAME "hash-table lock"))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::LOCK :TYPE SI:MUTEX)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NEEDS-REHASH-P :TYPE (MEMBER NIL T))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NEXT-FREE-KV :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NEXT-FREE-KV :TYPE SI:INDEX)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NEXT-VECTOR :TYPE (SIMPLE-ARRAY SI:WORD (*)))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NEXT-WEAK-HASH-TABLE :TYPE NULL)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NUMBER-ENTRIES :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::NUMBER-ENTRIES :TYPE SI:INDEX)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::REHASH-SIZE :TYPE (OR SI:INDEX (SINGLE-FLOAT (1.0))))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::REHASH-THRESHOLD :TYPE (SINGLE-FLOAT (0.0) 1.0))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::REHASH-TRIGGER :TYPE SI:INDEX)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::SYNCHRONIZED-P :TYPE (MEMBER NIL T))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::TABLE :TYPE SIMPLE-VECTOR)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::TEST :TYPE SYMBOL)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::TEST-FUN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE :SLOT SI::WEAKNESS :TYPE (MEMBER NIL :KEY :VALUE :KEY-OR-VALUE :KEY-AND-VALUE))
(ADD-CI "STRUCTURE-CLASS" HASH-TABLE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" LOGICAL-PATHNAME CLASS-NAME LOGICAL-PATHNAME)
(ADD-CI "STRUCTURE-CLASS" LOGICAL-PATHNAME SI:CLASS-PRECEDENCE-LIST (PATHNAME STRUCTURE-OBJECT SI::SLOT-OBJECT                       T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" LOGICAL-PATHNAME SI::PROTOTYPE  #<LOGICAL-PATHNAME   (with no namestring)   :HOST 0   :DEVICE 0   :DIRECTORY 0   :NAME 0   :TYPE 0   :VERSION 0>)
(ADD-CI "STRUCTURE-CLASS" LOGICAL-PATHNAME TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" PACKAGE CLASS-NAME PACKAGE)
(ADD-CI "STRUCTURE-CLASS" PACKAGE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" PACKAGE SI::PROTOTYPE  #<PACKAGE 0>)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%IMPLEMENTATION-PACKAGES :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%LOCAL-NICKNAMES :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%LOCALLY-NICKNAMED-BY :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%NAME :TYPE (OR SIMPLE-STRING NULL))
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%NICKNAMES :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%SHADOWING-SYMBOLS :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%USE-LIST :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::%USED-BY-LIST :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::DOC-STRING :TYPE (OR SIMPLE-STRING NULL))
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::EXTERNAL-SYMBOLS :TYPE SI:PACKAGE-HASHTABLE)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::INTERNAL-SYMBOLS :TYPE SI:PACKAGE-HASHTABLE)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::LOCK :TYPE BOOLEAN)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::MRU-TABLE-INDEX :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::MRU-TABLE-INDEX :TYPE SI:INDEX)
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::SOURCE-LOCATION :TYPE (OR NULL SI:DEFINITION-SOURCE-LOCATION))
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::TABLES :INITFORM #())
(ADD-CI "STRUCTURE-CLASS" PACKAGE :SLOT SI::TABLES :TYPE SIMPLE-VECTOR)
(ADD-CI "STRUCTURE-CLASS" PACKAGE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" PATHNAME CLASS-NAME PATHNAME)
(ADD-CI "STRUCTURE-CLASS" PATHNAME SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" PATHNAME SI::PROTOTYPE  #<PATHNAME   (with no namestring)   :HOST 0   :DEVICE 0   :DIRECTORY 0   :NAME 0   :TYPE 0   :VERSION 0>)
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SLOT DIRECTORY :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SLOT SI::DEVICE :TYPE (OR SIMPLE-STRING SI::PATHNAME-COMPONENT-TOKENS))
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SLOT SI::NAME :TYPE (OR SIMPLE-STRING SI::PATTERN                 SI::PATHNAME-COMPONENT-TOKENS))
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SLOT SI::VERSION :TYPE (OR INTEGER SI::PATHNAME-COMPONENT-TOKENS                 (MEMBER :NEWEST)))
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SLOT SI:HOST :TYPE (OR SI:HOST NULL))
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SLOT TYPE :TYPE (OR SIMPLE-STRING SI::PATTERN                 SI::PATHNAME-COMPONENT-TOKENS))
(ADD-CI "STRUCTURE-CLASS" PATHNAME :SUBCLASS LOGICAL-PATHNAME)
(ADD-CI "STRUCTURE-CLASS" PATHNAME TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" READTABLE CLASS-NAME READTABLE)
(ADD-CI "STRUCTURE-CLASS" READTABLE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" READTABLE SI::PROTOTYPE  #<READTABLE {10064774C3}>)
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::%READTABLE-CASE :INITFORM :UPCASE)
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::%READTABLE-CASE :TYPE (MEMBER :UPCASE :DOWNCASE :PRESERVE :INVERT))
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::%READTABLE-NORMALIZATION :INITFORM T)
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::%READTABLE-NORMALIZATION :TYPE BOOLEAN)
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-ATTRIBUTE-ARRAY :INITFORM (MAKE-ARRAY SI:BASE-CHAR-CODE-LIMIT :ELEMENT-TYPE                         '(UNSIGNED-BYTE 8) :INITIAL-ELEMENT                         SI::+CHAR-ATTR-CONSTITUENT+))
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-ATTRIBUTE-ARRAY :TYPE SI::ATTRIBUTE-TABLE)
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-ATTRIBUTE-HASH-TABLE :INITFORM (MAKE-HASH-TABLE))
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-ATTRIBUTE-HASH-TABLE :TYPE HASH-TABLE)
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-MACRO-ARRAY :INITFORM (MAKE-ARRAY SI:BASE-CHAR-CODE-LIMIT :INITIAL-ELEMENT                         NIL))
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-MACRO-ARRAY :TYPE (SIMPLE-VECTOR 128))
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-MACRO-HASH-TABLE :INITFORM (MAKE-HASH-TABLE))
(ADD-CI "STRUCTURE-CLASS" READTABLE :SLOT SI::CHARACTER-MACRO-HASH-TABLE :TYPE HASH-TABLE)
(ADD-CI "STRUCTURE-CLASS" READTABLE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" RESTART CLASS-NAME RESTART)
(ADD-CI "STRUCTURE-CLASS" RESTART SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" RESTART SI::PROTOTYPE  #<RESTART 0 {1006093E03}>)
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT FUNCTION :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT FUNCTION :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::ASSOCIATED-CONDITIONS :INITFORM 'NIL)
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::ASSOCIATED-CONDITIONS :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::INTERACTIVE-FUNCTION :TYPE (OR NULL FUNCTION))
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::NAME :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::NAME :TYPE SYMBOL)
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::REPORT-FUNCTION :TYPE (OR NULL FUNCTION))
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::TEST-FUNCTION :INITFORM (LAMBDA (COND)   (DECLARE (IGNORE COND))   T))
(ADD-CI "STRUCTURE-CLASS" RESTART :SLOT SI::TEST-FUNCTION :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" RESTART TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI:ANSI-STREAM :SUBCLASS BROADCAST-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI:ANSI-STREAM :SUBCLASS CONCATENATED-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI:ANSI-STREAM :SUBCLASS SI:FD-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI:ANSI-STREAM :SUBCLASS SYNONYM-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI:ANSI-STREAM :SUBCLASS TWO-WAY-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::%METHOD-FUNCTION CLASS-NAME SI::%METHOD-FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI::%METHOD-FUNCTION SI:CLASS-PRECEDENCE-LIST #'T)
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::%METHOD-FUNCTION SI::PROTOTYPE  #<SI::%METHOD-FUNCTION {10065834FB}>)
(ADD-CI "STRUCTURE-CLASS" SI::%METHOD-FUNCTION TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ACCESSOR-DFUN-INFO CLASS-NAME SI::ACCESSOR-DFUN-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::ACCESSOR-DFUN-INFO SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::ACCESSOR-DFUN-INFO SI::PROTOTYPE  #<SI::ACCESSOR-DFUN-INFO {1006151D03}>)
(ADD-CI "STRUCTURE-CLASS" SI::ACCESSOR-DFUN-INFO :SUBCLASS SI::N-N)
(ADD-CI "STRUCTURE-CLASS" SI::ACCESSOR-DFUN-INFO :SUBCLASS SI::ONE-INDEX-DFUN-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::ACCESSOR-DFUN-INFO TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ANODE CLASS-NAME SI::ANODE)
(ADD-CI "STRUCTURE-CLASS" SI::ANODE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::CODE :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::CODE :INITARGS (:CODE))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::CODE :READERS (SI::ANODE-CODE))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::CODE :WRITERS ((SETF SI::ANODE-CODE)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::SECLASS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::SECLASS :INITARGS (:SECLASS))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::SECLASS :READERS (SI::ANODE-SECLASS))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT SI::SECLASS :WRITERS ((SETF SI::ANODE-SECLASS)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT TYPE :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT TYPE :INITARGS (:TYPE))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT TYPE :READERS (SI::ANODE-TYPE))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE :SLOT TYPE :WRITERS ((SETF SI::ANODE-TYPE)))
(ADD-CI "STRUCTURE-CLASS" SI::ANODE TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ARG-INFO CLASS-NAME SI::ARG-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::ARG-INFO SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::ARG-INFO SI::PROTOTYPE  #S(SI::ARG-INFO    :ARG-INFO-LAMBDA-LIST 0    :ARG-INFO-PRECEDENCE 0    :ARG-INFO-METATYPES 0    :ARG-INFO-NUMBER-OPTIONAL 0    :ARG-INFO-KEY/REST-P 0    :ARG-INFO-KEYS 0    :GF-INFO-SIMPLE-ACCESSOR-TYPE 0    :GF-PRECOMPUTE-DFUN-AND-EMF-P 0    :GF-INFO-STATIC-C-A-M-EMF 0    :GF-INFO-C-A-M-EMF-STD-P 0    :GF-INFO-FAST-MF-P 0))
(ADD-CI "STRUCTURE-CLASS" SI::ARG-INFO :SLOT SI::ARG-INFO-LAMBDA-LIST :INITFORM :NO-LAMBDA-LIST)
(ADD-CI "STRUCTURE-CLASS" SI::ARG-INFO :SLOT SI::GF-INFO-C-A-M-EMF-STD-P :INITFORM T)
(ADD-CI "STRUCTURE-CLASS" SI::ARG-INFO TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END CLASS-NAME SI::BLOCK-END)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END SI:CLASS-PRECEDENCE-LIST (SI::QUEUED-OP STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END :SLOT SI::SUFFIX :INITARGS (:SUFFIX))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END :SLOT SI::SUFFIX :TYPE (OR NULL STRING))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-END TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START CLASS-NAME SI::BLOCK-START)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START SI:CLASS-PRECEDENCE-LIST (SI::SECTION-START SI::QUEUED-OP STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::BLOCK-END :INITARGS (:BLOCK-END))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::BLOCK-END :TYPE (OR NULL SI::BLOCK-END))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::DEPTH :INITARGS (:DEPTH))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::DEPTH :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::DEPTH :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::PREFIX :INITARGS (:PREFIX))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::PREFIX :TYPE (OR NULL STRING))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::SECTION-END :INITARGS (:SECTION-END))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::SECTION-END :TYPE (OR NULL SI::NEWLINE SI::BLOCK-END))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::SUFFIX :INITARGS (:SUFFIX))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START :SLOT SI::SUFFIX :TYPE (OR NULL STRING))
(ADD-CI "STRUCTURE-CLASS" SI::BLOCK-START TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT CLASS-NAME SI::C-SOURCE-POINT)
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::FILE :INHERITABLE-INITER (*COMPILE-FILE-TRUENAME* . #<COMPILED-FUNCTION SI::DEFAULT-FILE>))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::FILE :INITARGS (:FILE))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::FILE :READERS (SI::C-SOURCE-POINT-FILE))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::FILE :WRITERS ((SETF SI::C-SOURCE-POINT-FILE)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO1 :INHERITABLE-INITER (SI::*COMPILE-FILE-LINENO1* . #<COMPILED-FUNCTION SI::DEFAULT-LINENO1>))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO1 :INITARGS (:LINENO1))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO1 :READERS (SI::C-SOURCE-POINT-LINENO1))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO1 :WRITERS ((SETF SI::C-SOURCE-POINT-LINENO1)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO2 :INHERITABLE-INITER (SI::*COMPILE-FILE-LINENO2* . #<COMPILED-FUNCTION SI::DEFAULT-LINENO2>))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO2 :INITARGS (:LINENO2))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO2 :READERS (SI::C-SOURCE-POINT-LINENO2))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT :SLOT SI::LINENO2 :WRITERS ((SETF SI::C-SOURCE-POINT-LINENO2)))
(ADD-CI "STRUCTURE-CLASS" SI::C-SOURCE-POINT TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CACHING CLASS-NAME SI::CACHING)
(ADD-CI "STRUCTURE-CLASS" SI::CACHING SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CACHING SI::PROTOTYPE  #<SI::CACHING {10061157D3}>)
(ADD-CI "STRUCTURE-CLASS" SI::CACHING TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CHECKING CLASS-NAME SI::CHECKING)
(ADD-CI "STRUCTURE-CLASS" SI::CHECKING SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CHECKING SI::PROTOTYPE  #<SI::CHECKING {1006133863}>)
(ADD-CI "STRUCTURE-CLASS" SI::CHECKING TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CLASS-PRECEDENCE-DESCRIPTION CLASS-NAME SI::CLASS-PRECEDENCE-DESCRIPTION)
(ADD-CI "STRUCTURE-CLASS" SI::CLASS-PRECEDENCE-DESCRIPTION SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CLASS-PRECEDENCE-DESCRIPTION SI::PROTOTYPE  #<SI::CLASS-PRECEDENCE-DESCRIPTION 0>)
(ADD-CI "STRUCTURE-CLASS" SI::CLASS-PRECEDENCE-DESCRIPTION :SLOT SI::CPD-COUNT :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::CLASS-PRECEDENCE-DESCRIPTION TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CONST CLASS-NAME SI::CONST)
(ADD-CI "STRUCTURE-CLASS" SI::CONST SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::FORM :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::FORM :INITARGS (:FORM))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::FORM :READERS (SI::CONST-FORM))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::FORM :WRITERS ((SETF SI::CONST-FORM)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::HORIZON :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::HORIZON :INITARGS (:HORIZON))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::HORIZON :READERS (SI::CONST-HORIZON))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::HORIZON :WRITERS ((SETF SI::CONST-HORIZON)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::LTV-FORM :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::LTV-FORM :INITARGS (:LTV-FORM))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::LTV-FORM :READERS (SI::CONST-LTV-FORM))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::LTV-FORM :WRITERS ((SETF SI::CONST-LTV-FORM)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::VALUE :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::VALUE :INITARGS (:VALUE))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::VALUE :READERS (SI::CONST-VALUE))
(ADD-CI "STRUCTURE-CLASS" SI::CONST :SLOT SI::VALUE :WRITERS ((SETF SI::CONST-VALUE)))
(ADD-CI "STRUCTURE-CLASS" SI::CONST TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-FAST-METHOD-CALL CLASS-NAME SI::CONSTANT-FAST-METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-FAST-METHOD-CALL SI:CLASS-PRECEDENCE-LIST (SI::FAST-METHOD-CALL STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-FAST-METHOD-CALL SI::PROTOTYPE  #S(SI::CONSTANT-FAST-METHOD-CALL    :FUNCTION 0    :PV 0    :NEXT-METHOD-CALL 0    :ARG-INFO 0    :VALUE 0))
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-FAST-METHOD-CALL TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-METHOD-CALL CLASS-NAME SI::CONSTANT-METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-METHOD-CALL SI:CLASS-PRECEDENCE-LIST (SI::METHOD-CALL STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-METHOD-CALL SI::PROTOTYPE  #S(SI::CONSTANT-METHOD-CALL :FUNCTION 0 :CALL-METHOD-ARGS 0 :VALUE 0))
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-METHOD-CALL TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-VALUE CLASS-NAME SI::CONSTANT-VALUE)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-VALUE SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-VALUE SI::PROTOTYPE  #<SI::CONSTANT-VALUE {10060FA153}>)
(ADD-CI "STRUCTURE-CLASS" SI::CONSTANT-VALUE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE CLASS-NAME SI::CONTROL-STRING-DIRECTIVE)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::ATSIGN-P :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::ATSIGN-P :INITARGS (:ATSIGN-P))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::ATSIGN-P :READERS (SI::CSD-ATSIGN-P))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::ATSIGN-P :TYPE SYMBOL)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::ATSIGN-P :WRITERS ((SETF SI::CSD-ATSIGN-P)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CLAUSE-CHAIN :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CLAUSE-CHAIN :INITARGS (:CLAUSE-CHAIN))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CLAUSE-CHAIN :READERS (SI::CSD-CLAUSE-CHAIN))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CLAUSE-CHAIN :WRITERS ((SETF SI::CSD-CLAUSE-CHAIN)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::COLON-P :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::COLON-P :INITARGS (:COLON-P))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::COLON-P :READERS (SI::CSD-COLON-P))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::COLON-P :TYPE SYMBOL)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::COLON-P :WRITERS ((SETF SI::CSD-COLON-P)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CS-INDEX :INHERITABLE-INITER (0 . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CS-INDEX :INITARGS (:CS-INDEX))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CS-INDEX :READERS (SI::CSD-CS-INDEX))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CS-INDEX :TYPE FIXNUM)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::CS-INDEX :WRITERS ((SETF SI::CSD-CS-INDEX)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::DATA :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::DATA :INITARGS (:DATA))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::DATA :READERS (SI::CSD-DATA))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::DATA :WRITERS ((SETF SI::CSD-DATA)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::PARM-LIST :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::PARM-LIST :INITARGS (:PARM-LIST))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::PARM-LIST :READERS (SI::CSD-PARM-LIST))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::PARM-LIST :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::PARM-LIST :WRITERS ((SETF SI::CSD-PARM-LIST)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::V-OR-#-P :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
;;;;;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::V-OR-#-P :INITARGS (:V-OR-#-P))
;;;;;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::V-OR-#-P :READERS (SI::CSD-V-OR-#-P))
;;;;;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::V-OR-#-P :TYPE SYMBOL)
;;;;;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT SI::V-OR-#-P :WRITERS ((SETF SI::CSD-V-OR-#-P)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT TYPE :INHERITABLE-INITER (0 . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT TYPE :INITARGS (:TYPE))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT TYPE :READERS (SI::CSD-TYPE))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT TYPE :TYPE FIXNUM)
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE :SLOT TYPE :WRITERS ((SETF SI::CSD-TYPE)))
(ADD-CI "STRUCTURE-CLASS" SI::CONTROL-STRING-DIRECTIVE TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::CTOR CLASS-NAME SI::CTOR)
(ADD-CI "STRUCTURE-CLASS" SI::CTOR SI:CLASS-PRECEDENCE-LIST #'T)
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::CTOR SI::PROTOTYPE  #<SI::CTOR 0 0>)
(ADD-CI "STRUCTURE-CLASS" SI::CTOR TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::DEAD-BEEF-STRUCTURE-OBJECT CLASS-NAME SI::DEAD-BEEF-STRUCTURE-OBJECT)
(ADD-CI "STRUCTURE-CLASS" SI::DEAD-BEEF-STRUCTURE-OBJECT SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::DEAD-BEEF-STRUCTURE-OBJECT SI::PROTOTYPE  #S(SI::DEAD-BEEF-STRUCTURE-OBJECT))
(ADD-CI "STRUCTURE-CLASS" SI::DEAD-BEEF-STRUCTURE-OBJECT TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::DEFAULT-METHOD-ONLY CLASS-NAME SI::DEFAULT-METHOD-ONLY)
(ADD-CI "STRUCTURE-CLASS" SI::DEFAULT-METHOD-ONLY SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::DEFAULT-METHOD-ONLY SI::PROTOTYPE  #<SI::DEFAULT-METHOD-ONLY {10062003E3}>)
(ADD-CI "STRUCTURE-CLASS" SI::DEFAULT-METHOD-ONLY TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO CLASS-NAME SI::DFUN-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO SI::PROTOTYPE  #<SI::DFUN-INFO {10060DE7C3}>)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::ACCESSOR-DFUN-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::CACHING)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::CHECKING)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::CONSTANT-VALUE)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::DEFAULT-METHOD-ONLY)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::DISPATCH)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::INITIAL)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO :SUBCLASS SI::NO-METHODS)
(ADD-CI "STRUCTURE-CLASS" SI::DFUN-INFO TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::DISPATCH CLASS-NAME SI::DISPATCH)
(ADD-CI "STRUCTURE-CLASS" SI::DISPATCH SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::DISPATCH SI::PROTOTYPE  #<SI::DISPATCH {100621BB93}>)
(ADD-CI "STRUCTURE-CLASS" SI::DISPATCH TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-INSTANCE-BOUNDP CLASS-NAME SI::FAST-INSTANCE-BOUNDP)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-INSTANCE-BOUNDP SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::FAST-INSTANCE-BOUNDP SI::PROTOTYPE  #S(SI::FAST-INSTANCE-BOUNDP :INDEX 0))
(ADD-CI "STRUCTURE-CLASS" SI::FAST-INSTANCE-BOUNDP :SLOT SI:INDEX :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-INSTANCE-BOUNDP :SLOT SI:INDEX :TYPE FIXNUM)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-INSTANCE-BOUNDP TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL CLASS-NAME SI::FAST-METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL SI::PROTOTYPE  #S(SI::FAST-METHOD-CALL :FUNCTION 0 :PV 0 :NEXT-METHOD-CALL 0 :ARG-INFO 0))
(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL :SLOT FUNCTION :INITFORM #'IDENTITY)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL :SLOT FUNCTION :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL :SUBCLASS SI::CONSTANT-FAST-METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" SI::FAST-METHOD-CALL TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION CLASS-NAME SI::INDENTATION)
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION SI:CLASS-PRECEDENCE-LIST (SI::QUEUED-OP STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::AMOUNT :INITARGS (:AMOUNT))
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::AMOUNT :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::AMOUNT :TYPE FIXNUM)
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::KIND :INITARGS (:KIND))
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::KIND :INITFORM (SI::REQUIRED-ARGUMENT))
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::KIND :TYPE (MEMBER :BLOCK :CURRENT))
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::INDENTATION TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::INITIAL CLASS-NAME SI::INITIAL)
(ADD-CI "STRUCTURE-CLASS" SI::INITIAL SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::INITIAL SI::PROTOTYPE  #<SI::INITIAL {1006236FA3}>)
(ADD-CI "STRUCTURE-CLASS" SI::INITIAL TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER CLASS-NAME SI::INPUT-CHARACTER)
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT CHAR :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT CHAR :INITARGS (:CHAR))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT CHAR :READERS (SI::INPUT-CHARACTER-CHAR))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT CHAR :TYPE (OR NULL CHARACTER))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT CHAR :WRITERS ((SETF SI::INPUT-CHARACTER-CHAR)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::BITS :INHERITABLE-INITER (0 . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::BITS :INITARGS (:BITS))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::BITS :READERS (SI::INPUT-CHARACTER-BITS))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::BITS :TYPE (INTEGER 0 15))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::BITS :WRITERS ((SETF SI::INPUT-CHARACTER-BITS)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::FONT :INHERITABLE-INITER (0 . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::FONT :INITARGS (:FONT))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::FONT :READERS (SI::INPUT-CHARACTER-FONT))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::FONT :TYPE (INTEGER 0 15))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::FONT :WRITERS ((SETF SI::INPUT-CHARACTER-FONT)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::KEY :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::KEY :INITARGS (:KEY))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::KEY :READERS (SI::INPUT-CHARACTER-KEY))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::KEY :TYPE (OR NULL CHARACTER SYMBOL))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER :SLOT SI::KEY :WRITERS ((SETF SI::INPUT-CHARACTER-KEY)))
(ADD-CI "STRUCTURE-CLASS" SI::INPUT-CHARACTER TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK CLASS-NAME SI::LOGICAL-BLOCK)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::PER-LINE-PREFIX-END :INITARGS (:PER-LINE-PREFIX-END))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::PER-LINE-PREFIX-END :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::PER-LINE-PREFIX-END :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::PREFIX-LENGTH :INITARGS (:PREFIX-LENGTH))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::PREFIX-LENGTH :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::PREFIX-LENGTH :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SECTION-COLUMN :INITARGS (:SECTION-COLUMN))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SECTION-COLUMN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SECTION-COLUMN :TYPE SI::COLUMN)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SECTION-START-LINE :INITARGS (:SECTION-START-LINE))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SECTION-START-LINE :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SECTION-START-LINE :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::START-COLUMN :INITARGS (:START-COLUMN))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::START-COLUMN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::START-COLUMN :TYPE SI::COLUMN)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SUFFIX-LENGTH :INITARGS (:SUFFIX-LENGTH))
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SUFFIX-LENGTH :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK :SLOT SI::SUFFIX-LENGTH :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::LOGICAL-BLOCK TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION CLASS-NAME SI::LOOP-INITIALIZATION)
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::BINDINGS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::BINDINGS :INITARGS (:BINDINGS))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::BINDINGS :READERS (SI::LI-BINDINGS))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::BINDINGS :WRITERS ((SETF SI::LI-BINDINGS)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DECLSPECS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DECLSPECS :INITARGS (:DECLSPECS))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DECLSPECS :READERS (SI::LI-DECLSPECS))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DECLSPECS :WRITERS ((SETF SI::LI-DECLSPECS)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DEPENDS-PRECEDING :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DEPENDS-PRECEDING :INITARGS (:DEPENDS-PRECEDING))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DEPENDS-PRECEDING :READERS (SI::LI-DEPENDS-PRECEDING))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::DEPENDS-PRECEDING :WRITERS ((SETF SI::LI-DEPENDS-PRECEDING)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::ENDTEST-FORMS :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::ENDTEST-FORMS :INITARGS (:ENDTEST-FORMS))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::ENDTEST-FORMS :READERS (SI::LI-ENDTEST-FORMS))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::ENDTEST-FORMS :WRITERS ((SETF SI::LI-ENDTEST-FORMS)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::EVERYTIME :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::EVERYTIME :INITARGS (:EVERYTIME))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::EVERYTIME :READERS (SI::LI-EVERYTIME))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::EVERYTIME :WRITERS ((SETF SI::LI-EVERYTIME)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::LATER-DEPEND :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::LATER-DEPEND :INITARGS (:LATER-DEPEND))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::LATER-DEPEND :READERS (SI::LI-LATER-DEPEND))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::LATER-DEPEND :WRITERS ((SETF SI::LI-LATER-DEPEND)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::PREAMBLE :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::PREAMBLE :INITARGS (:PREAMBLE))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::PREAMBLE :READERS (SI::LI-PREAMBLE))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::PREAMBLE :WRITERS ((SETF SI::LI-PREAMBLE)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::REQUIRES-STEPBEFORE :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::REQUIRES-STEPBEFORE :INITARGS (:REQUIRES-STEPBEFORE))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::REQUIRES-STEPBEFORE :READERS (SI::LI-REQUIRES-STEPBEFORE))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::REQUIRES-STEPBEFORE :WRITERS ((SETF SI::LI-REQUIRES-STEPBEFORE)))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::SPECFORM :INHERITABLE-INITER (NIL . #<COMPILED-FUNCTION SI::CONSTANT-INITFUNCTION>))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::SPECFORM :INITARGS (:SPECFORM))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::SPECFORM :READERS (SI::LI-SPECFORM))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION :SLOT SI::SPECFORM :WRITERS ((SETF SI::LI-SPECFORM)))
(ADD-CI "STRUCTURE-CLASS" SI::LOOP-INITIALIZATION TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL CLASS-NAME SI::METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL SI::PROTOTYPE  #S(SI::METHOD-CALL :FUNCTION 0 :CALL-METHOD-ARGS 0))
(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL :SLOT FUNCTION :INITFORM #'IDENTITY)
(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL :SLOT FUNCTION :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL :SUBCLASS SI::CONSTANT-METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" SI::METHOD-CALL TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::N-N CLASS-NAME SI::N-N)
(ADD-CI "STRUCTURE-CLASS" SI::N-N SI:CLASS-PRECEDENCE-LIST (SI::ACCESSOR-DFUN-INFO SI::DFUN-INFO STRUCTURE-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::N-N SI::PROTOTYPE  #<SI::N-N {100616D3F3}>)
(ADD-CI "STRUCTURE-CLASS" SI::N-N TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE CLASS-NAME SI::NEWLINE)
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE SI:CLASS-PRECEDENCE-LIST (SI::SECTION-START SI::QUEUED-OP STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::DEPTH :INITARGS (:DEPTH))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::DEPTH :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::DEPTH :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::KIND :INITARGS (:KIND))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::KIND :INITFORM (SI::REQUIRED-ARGUMENT))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::KIND :TYPE (MEMBER :LINEAR :FILL :MISER :LITERAL :MANDATORY))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::SECTION-END :INITARGS (:SECTION-END))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE :SLOT SI::SECTION-END :TYPE (OR NULL SI::NEWLINE SI::BLOCK-END))
(ADD-CI "STRUCTURE-CLASS" SI::NEWLINE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::NO-METHODS CLASS-NAME SI::NO-METHODS)
(ADD-CI "STRUCTURE-CLASS" SI::NO-METHODS SI:CLASS-PRECEDENCE-LIST (SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::NO-METHODS SI::PROTOTYPE  #<SI::NO-METHODS {10062523F3}>)
(ADD-CI "STRUCTURE-CLASS" SI::NO-METHODS TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-CLASS CLASS-NAME SI::ONE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-CLASS SI:CLASS-PRECEDENCE-LIST (SI::ONE-INDEX-DFUN-INFO SI::ACCESSOR-DFUN-INFO SI::DFUN-INFO                              STRUCTURE-OBJECT SI::SLOT-OBJECT                              T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::ONE-CLASS SI::PROTOTYPE  #<SI::ONE-CLASS {10061C6263}>)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-CLASS :SUBCLASS SI::TWO-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-CLASS TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX CLASS-NAME SI::ONE-INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX SI:CLASS-PRECEDENCE-LIST (SI::ONE-INDEX-DFUN-INFO SI::ACCESSOR-DFUN-INFO SI::DFUN-INFO                              STRUCTURE-OBJECT SI::SLOT-OBJECT                              T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX SI::PROTOTYPE  #<SI::ONE-INDEX {10061A79A3}>)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX-DFUN-INFO CLASS-NAME SI::ONE-INDEX-DFUN-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX-DFUN-INFO SI:CLASS-PRECEDENCE-LIST (SI::ACCESSOR-DFUN-INFO SI::DFUN-INFO STRUCTURE-OBJECT  SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX-DFUN-INFO SI::PROTOTYPE  #<SI::ONE-INDEX-DFUN-INFO {100618BC53}>)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX-DFUN-INFO :SUBCLASS SI::ONE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX-DFUN-INFO :SUBCLASS SI::ONE-INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::ONE-INDEX-DFUN-INFO TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY CLASS-NAME SI::PPRINT-DISPATCH-ENTRY)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT FUNCTION :INITARGS (:FUNCTION))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT FUNCTION :INITFORM (SI::REQUIRED-ARGUMENT))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT FUNCTION :TYPE (OR FUNCTION SYMBOL))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT SI::INITIAL-P :INITARGS (:INITIAL-P))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT SI::INITIAL-P :INITFORM (NOT (BOUNDP 'SI::*INITIAL-PPRINT-DISPATCH*)))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT SI::INITIAL-P :TYPE (MEMBER T NIL))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT SI::PRIORITY :INITARGS (:PRIORITY))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT SI::PRIORITY :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT SI::PRIORITY :TYPE REAL)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT TYPE :INITARGS (:TYPE))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY :SLOT TYPE :INITFORM (SI::REQUIRED-ARGUMENT))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-ENTRY TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE CLASS-NAME SI::PPRINT-DISPATCH-TABLE)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE :SLOT SI::CONS-ENTRIES :INITARGS (:CONS-ENTRIES))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE :SLOT SI::CONS-ENTRIES :INITFORM (MAKE-HASH-TABLE :TEST #'EQL))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE :SLOT SI::ENTRIES :INITARGS (:ENTRIES))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE :SLOT SI::ENTRIES :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE :SLOT SI::READ-ONLY-P :INITARGS (:READ-ONLY-P))
(ADD-CI "STRUCTURE-CLASS" SI::PPRINT-DISPATCH-TABLE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE CLASS-NAME SI::PV-TABLE)
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE SI::PROTOTYPE  #S(SI::PV-TABLE :CACHE 0 :PV-SIZE 0 :SLOT-NAME-LISTS 0))
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE :SLOT SI::CACHE :TYPE (OR SI::CACHE NULL))
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE :SLOT SI::PV-SIZE :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE :SLOT SI::PV-SIZE :TYPE FIXNUM)
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE :SLOT SI::SLOT-NAME-LISTS :TYPE LIST)
(ADD-CI "STRUCTURE-CLASS" SI::PV-TABLE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP CLASS-NAME SI::QUEUED-OP)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SUBCLASS SI::BLOCK-END)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SUBCLASS SI::INDENTATION)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SUBCLASS SI::SECTION-START)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP :SUBCLASS SI::TAB)
(ADD-CI "STRUCTURE-CLASS" SI::QUEUED-OP TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START CLASS-NAME SI::SECTION-START)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START SI:CLASS-PRECEDENCE-LIST (SI::QUEUED-OP STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::DEPTH :INITARGS (:DEPTH))
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::DEPTH :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::DEPTH :TYPE SI::INDEX)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::SECTION-END :INITARGS (:SECTION-END))
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SLOT SI::SECTION-END :TYPE (OR NULL SI::NEWLINE SI::BLOCK-END))
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SUBCLASS SI::BLOCK-START)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START :SUBCLASS SI::NEWLINE)
(ADD-CI "STRUCTURE-CLASS" SI::SECTION-START TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO CLASS-NAME SI::SLOT-INFO)
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO SI::PROTOTYPE  #S(SI::SLOT-INFO :TYPECHECK 0 :READER 0 :WRITER 0 :BOUNDP 0))
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT BOUNDP :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT BOUNDP :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT SI::READER :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT SI::READER :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT SI::TYPECHECK :TYPE (OR NULL FUNCTION))
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT SI::WRITER :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO :SLOT SI::WRITER :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-INFO TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::SLOT-OBJECT :SUBCLASS STRUCTURE-OBJECT)
(ADD-CI "STRUCTURE-CLASS" SI::STANDARD-FUNCALLABLE-INSTANCE CLASS-NAME SI::STANDARD-FUNCALLABLE-INSTANCE)
(ADD-CI "STRUCTURE-CLASS" SI::STANDARD-FUNCALLABLE-INSTANCE SI:CLASS-PRECEDENCE-LIST #'T)
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::STANDARD-FUNCALLABLE-INSTANCE SI::PROTOTYPE  #<SI::STANDARD-FUNCALLABLE-INSTANCE {10065793AB}>)
(ADD-CI "STRUCTURE-CLASS" SI::STANDARD-FUNCALLABLE-INSTANCE TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM CLASS-NAME SI::SYSTEM-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS BROADCAST-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS CONCATENATED-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS ECHO-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS FILE-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS STRING-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS SYNONYM-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM :SUBCLASS TWO-WAY-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI::SYSTEM-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::TAB CLASS-NAME SI::TAB)
(ADD-CI "STRUCTURE-CLASS" SI::TAB SI:CLASS-PRECEDENCE-LIST (SI::QUEUED-OP STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::COLINC :INITARGS (:COLINC))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::COLINC :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::COLINC :TYPE SI::COLUMN)
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::COLNUM :INITARGS (:COLNUM))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::COLNUM :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::COLNUM :TYPE SI::COLUMN)
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::POSN :INITARGS (:POSN))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::POSN :INITFORM 0)
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::POSN :TYPE SI::POSN)
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::RELATIVEP :INITARGS (:RELATIVEP))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::RELATIVEP :TYPE (MEMBER T NIL))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::SECTIONP :INITARGS (:SECTIONP))
(ADD-CI "STRUCTURE-CLASS" SI::TAB :SLOT SI::SECTIONP :TYPE (MEMBER T NIL))
(ADD-CI "STRUCTURE-CLASS" SI::TAB TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::TWO-CLASS CLASS-NAME SI::TWO-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI::TWO-CLASS SI:CLASS-PRECEDENCE-LIST (SI::ONE-CLASS SI::ONE-INDEX-DFUN-INFO SI::ACCESSOR-DFUN-INFO  SI::DFUN-INFO STRUCTURE-OBJECT SI::SLOT-OBJECT  T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI::TWO-CLASS SI::PROTOTYPE  #<SI::TWO-CLASS {10061E49B3}>)
(ADD-CI "STRUCTURE-CLASS" SI::TWO-CLASS TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM CLASS-NAME SI:FD-STREAM)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM SI:CLASS-PRECEDENCE-LIST (FILE-STREAM SI:ANSI-STREAM STREAM  STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM SI::PROTOTYPE  #<SI:FD-STREAM for 0 {1006600DD3}>)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT LISTEN :TYPE (MEMBER NIL T :EOF))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT PATHNAME :TYPE (OR PATHNAME NULL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::BIVALENT-P :TYPE BOOLEAN)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::BUFFERING :INITFORM :FULL)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::BUFFERING :TYPE (MEMBER :FULL :LINE :NONE))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::CHAR-SIZE :INITFORM 1)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::CHAR-SIZE :TYPE (OR FIXNUM FUNCTION))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::ELEMENT-SIZE :INITFORM 1)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::ELEMENT-SIZE :TYPE SI:INDEX)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::ELEMENT-TYPE :INITFORM 'BASE-CHAR)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::EOF-FORCED-P :TYPE (MEMBER T NIL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::EXTERNAL-FORMAT :INITFORM :LATIN-1)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::FD :INITFORM -1)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::FD :TYPE FIXNUM)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::FD-TYPE :INITFORM :UNKNOWN)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::FD-TYPE :TYPE KEYWORD)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::IBUF :TYPE (OR SI::BUFFER NULL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::INSTEAD :INITFORM (MAKE-ARRAY 0 :ELEMENT-TYPE 'CHARACTER :ADJUSTABLE                         T :FILL-POINTER T))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::INSTEAD :TYPE (ARRAY CHARACTER (*)))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::MISC :INITFORM #'SI::FD-STREAM-MISC-ROUTINE)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::MISC :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::OBUF :TYPE (OR SI::BUFFER NULL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::ORIGINAL :TYPE (OR SIMPLE-STRING NULL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::OUTPUT-BYTES :INITFORM #'SI:ILL-OUT)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::OUTPUT-BYTES :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::OUTPUT-COLUMN :TYPE (OR UNSIGNED-BYTE NULL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI::SERVE-EVENTS :TYPE BOOLEAN)
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM :SLOT SI:TIMEOUT :TYPE (OR SINGLE-FLOAT NULL))
(ADD-CI "STRUCTURE-CLASS" SI:FD-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE!OBJECT CLASS-NAME SI:STRUCTURE!OBJECT)
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE!OBJECT SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE!OBJECT SI::PROTOTYPE  #S(SI:STRUCTURE!OBJECT))
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE!OBJECT TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH CLASS-NAME SI:STRUCTURE-STABLEHASH)
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
;;;;(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH :SLOT SI::HASHCODE :INHERITABLE-INITER ((SI::RANDOM-POSFIXNUM) . #<COMPILED-FUNCTION SI::DEFAULT-HASHCODE>))
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH :SLOT SI::HASHCODE :INITARGS (:HASHCODE))
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH :SLOT SI::HASHCODE :READERS (SI::STRUCTURE-STABLEHASH-HASHCODE))
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH :SLOT SI::HASHCODE :WRITERS ((SETF SI::STRUCTURE-STABLEHASH-HASHCODE)))
(ADD-CI "STRUCTURE-CLASS" SI:STRUCTURE-STABLEHASH TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SI:TIMER CLASS-NAME SI:TIMER)
(ADD-CI "STRUCTURE-CLASS" SI:TIMER SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT SI::SLOT-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SI:TIMER SI::PROTOTYPE  #<SI:TIMER 0 {10063F78C3}>)
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::CANCEL-FUNCTION :TYPE (OR NULL FUNCTION))
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::CATCH-UP :TYPE BOOLEAN)
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::EXPIRE-TIME :INITFORM 1)
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::EXPIRE-TIME :TYPE (OR NULL REAL))
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::INTERRUPT-FUNCTION :TYPE (OR NULL FUNCTION))
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::REPEAT-INTERVAL :TYPE (OR NULL (REAL 0)))
(ADD-CI "STRUCTURE-CLASS" SI:TIMER :SLOT SI::THREAD :TYPE (OR SI:THREAD BOOLEAN))
(ADD-CI "STRUCTURE-CLASS" SI:TIMER TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" STREAM CLASS-NAME STREAM)
(ADD-CI "STRUCTURE-CLASS" STREAM SI:CLASS-PRECEDENCE-LIST (STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" STREAM :SUBCLASS SI::SYSTEM-STREAM)
(ADD-CI "STRUCTURE-CLASS" STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" STRING-STREAM CLASS-NAME STRING-STREAM)
(ADD-CI "STRUCTURE-CLASS" STRING-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" STRING-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT CLASS-NAME STRUCTURE-OBJECT)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :method PRINT-OBJECT :NAME PRINT-OBJECT)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT SI:CLASS-PRECEDENCE-LIST (SI::SLOT-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT SI:CLASS-PRECEDENCE-LIST (T))
;;;;(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT SI::PROTOTYPE  #S(SI::DEAD-BEEF-STRUCTURE-OBJECT))
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS HASH-TABLE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS PACKAGE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS PATHNAME)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS RANDOM-STATE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS READTABLE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS RESTART)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::ANODE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::ARG-INFO)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::C-SOURCE-POINT)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::CACHE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::CLASS-PRECEDENCE-DESCRIPTION)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::CONST)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::CONTROL-STRING-DIRECTIVE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::DEAD-BEEF-STRUCTURE-OBJECT)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::DFUN-INFO)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::FAST-INSTANCE-BOUNDP)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::FAST-METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::FGEN)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::FNODE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::INPUT-CHARACTER)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::INSPECTION)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::LOGICAL-BLOCK)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::LOOP-INITIALIZATION)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::METHOD-CALL)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::PPRINT-DISPATCH-ENTRY)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::PPRINT-DISPATCH-TABLE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::PV-TABLE)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::QUEUED-OP)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::SLOT-INFO)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI::VAR)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI:STRUCTURE!OBJECT)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI:STRUCTURE-STABLEHASH)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS SI:TIMER)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT :SUBCLASS STREAM)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT TYPE-OF SI:STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" STRUCTURE-OBJECT TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM CLASS-NAME SYNONYM-STREAM)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM SI:CLASS-PRECEDENCE-LIST (SI:ANSI-STREAM STREAM STRUCTURE-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM SI::PROTOTYPE  #<SYNONYM-STREAM :SYMBOL 0 {100663C6B3}>)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::BIN :INITFORM #'SI::SYNONYM-BIN)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::BOUT :INITFORM #'SI::SYNONYM-BOUT)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::BOUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::IN :INITFORM #'SI::SYNONYM-IN)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::IN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::MISC :INITFORM #'SI::SYNONYM-MISC)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::MISC :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::N-BIN :INITFORM #'SI::SYNONYM-N-BIN)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::N-BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::OUT :INITFORM #'SI::SYNONYM-OUT)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::OUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::SOUT :INITFORM #'SI::SYNONYM-SOUT)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SI::SOUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM :SLOT SYMBOL :TYPE SYMBOL)
(ADD-CI "STRUCTURE-CLASS" SYNONYM-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "STRUCTURE-CLASS" T :SUBCLASS STRUCTURE-OBJECT)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM CLASS-NAME TWO-WAY-STREAM)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM SI:CLASS-PRECEDENCE-LIST (SI:ANSI-STREAM STREAM STRUCTURE-OBJECT  SI::SLOT-OBJECT T))
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM SI:CLASS-PRECEDENCE-LIST (SI::SYSTEM-STREAM STREAM STRUCTURE-OBJECT T))
;;;;;;(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM SI::PROTOTYPE  #<TWO-WAY-STREAM :INPUT-STREAM 0 :OUTPUT-STREAM 0>)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::BIN :INITFORM #'SI::TWO-WAY-BIN)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::BOUT :INITFORM #'SI::TWO-WAY-BOUT)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::BOUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::IN :INITFORM #'SI::TWO-WAY-IN)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::IN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::INPUT-STREAM :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::INPUT-STREAM :TYPE STREAM)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::MISC :INITFORM #'SI::TWO-WAY-MISC)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::MISC :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::N-BIN :INITFORM #'SI::TWO-WAY-N-BIN)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::N-BIN :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::OUT :INITFORM #'SI::TWO-WAY-OUT)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::OUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::OUTPUT-STREAM :INITFORM (SI:MISSING-ARG))
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::OUTPUT-STREAM :TYPE STREAM)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::SOUT :INITFORM #'SI::TWO-WAY-SOUT)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SLOT SI::SOUT :TYPE FUNCTION)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM :SUBCLASS ECHO-STREAM)
(ADD-CI "STRUCTURE-CLASS" TWO-WAY-STREAM TYPE-OF STRUCTURE-CLASS)
(ADD-CI "SYSTEM-CLASS" FILE-STREAM CLASS-NAME FILE-STREAM)
(ADD-CI "SYSTEM-CLASS" FILE-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
;;;;;;(ADD-CI "SYSTEM-CLASS" FILE-STREAM SI::PROTOTYPE  #<FILE-STREAM {10012937D3}>)
(ADD-CI "SYSTEM-CLASS" FILE-STREAM :SUBCLASS SI:FD-STREAM)
(ADD-CI "SYSTEM-CLASS" FILE-STREAM TYPE-OF SI:SYSTEM-CLASS)
(ADD-CI "SYSTEM-CLASS" FUNCTION CLASS-NAME FUNCTION)
(ADD-CI "SYSTEM-CLASS" FUNCTION SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;(ADD-CI "SYSTEM-CLASS" FUNCTION SI::PROTOTYPE  #<FUNCTION {10012C5CE3}>)
(ADD-CI "SYSTEM-CLASS" FUNCTION :SUBCLASS SI:FUNCALLABLE-STANDARD-OBJECT)
(ADD-CI "SYSTEM-CLASS" FUNCTION :SUBCLASS SI::%METHOD-FUNCTION)
(ADD-CI "SYSTEM-CLASS" FUNCTION :SUBCLASS SI::CTOR)
(ADD-CI "SYSTEM-CLASS" FUNCTION :SUBCLASS SI::STANDARD-FUNCALLABLE-INSTANCE)
(ADD-CI "SYSTEM-CLASS" FUNCTION TYPE-OF SI:SYSTEM-CLASS)
(ADD-CI "SYSTEM-CLASS" SEQUENCE CLASS-NAME SEQUENCE)
(ADD-CI "SYSTEM-CLASS" SEQUENCE SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;(ADD-CI "SYSTEM-CLASS" SEQUENCE SI::PROTOTYPE  #<SEQUENCE {100128E103}>)
(ADD-CI "SYSTEM-CLASS" SEQUENCE :SUBCLASS LIST)
(ADD-CI "SYSTEM-CLASS" SEQUENCE :SUBCLASS VECTOR)
(ADD-CI "SYSTEM-CLASS" SEQUENCE TYPE-OF SI:SYSTEM-CLASS)
(ADD-CI "SYSTEM-CLASS" STREAM CLASS-NAME STREAM)
(ADD-CI "SYSTEM-CLASS" STREAM SI:CLASS-PRECEDENCE-LIST (T))
;;;;;;(ADD-CI "SYSTEM-CLASS" STREAM SI::PROTOTYPE  #<STREAM {10012C4AB3}>)
(ADD-CI "SYSTEM-CLASS" STREAM :SUBCLASS FILE-STREAM)
(ADD-CI "SYSTEM-CLASS" STREAM :SUBCLASS STRING-STREAM)
(ADD-CI "SYSTEM-CLASS" STREAM TYPE-OF SI:SYSTEM-CLASS)
(ADD-CI "SYSTEM-CLASS" STRING-STREAM CLASS-NAME STRING-STREAM)
(ADD-CI "SYSTEM-CLASS" STRING-STREAM SI:CLASS-PRECEDENCE-LIST (STREAM T))
;;;;;;(ADD-CI "SYSTEM-CLASS" STRING-STREAM SI::PROTOTYPE  #<STRING-STREAM {10012CA8A3}>)
(ADD-CI "SYSTEM-CLASS" STRING-STREAM TYPE-OF SI:SYSTEM-CLASS)
(ADD-CI "SYSTEM-CLASS" T CLASS-NAME T)
;;;;;;(ADD-CI "SYSTEM-CLASS" T SI::PROTOTYPE  #<T {10001DC4F3}>)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS ARRAY)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS CHARACTER)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS FUNCTION)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS NUMBER)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS SEQUENCE)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS SI::SLOT-OBJECT)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS SI:SIMD-PACK)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS SI:SYSTEM-AREA-POINTER)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS SI:WEAK-POINTER)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS STREAM)
(ADD-CI "SYSTEM-CLASS" T :SUBCLASS SYMBOL)
(ADD-CI "SYSTEM-CLASS" T TYPE-OF SI:SYSTEM-CLASS)
