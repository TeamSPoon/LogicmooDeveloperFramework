% From E: 
% 
% ':-'(call_pel_directive(translate(unskipped,'/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e.lps'))).
:- call_pel_directive(translate(unskipped,
                                '/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e.lps')).
:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(lps).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example3.e',25).
% From E: 
% 
% ':-'(call_pel_directive(translate(begining,'/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e.lps'))).
:- call_pel_directive(translate(begining,
                                '/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e.lps')).
% Sun, 21 Mar 2021 23:28:44 GMT File: <stream>(0x555567431b00)%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',11).
% load foundations/Root.e
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/Root.e'))).
:- call_pel_directive(load('foundations/Root.e')).

% load foundations/EC.e
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',11).
% From E: 
% 
% ':-'(call_pel_directive(load('foundations/EC.e'))).
:- call_pel_directive(load('foundations/EC.e')).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',14).
% sort agent
% From E: 
% 
% sort(agent).
sort(agent).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',16).
% fluent Awake(agent)
% From E: 
% 
% fluent(awake(agent)).
mpred_prop(awake(agent), fluent).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',16).
fluents([awake/1]).

% event WakeUp(agent)
% From E: 
% 
% event(wakeUp(agent)).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',16).
events([wakeUp/1]).
mpred_prop(wakeUp(agent), action).
actions([wakeUp/1]).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',19).
% [agent,time]
 % Initiates(WakeUp(agent),Awake(agent),time).
% From E: 
% 
% initiates_at(
%    wakeUp(Agent), 
%    awake(Agent), 
%    Time).
 %   [Time].
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',19).
initiates(wakeUp(Agent),awake(Agent)).


% [agent,time]
 % Happens(WakeUp(agent),time) -> !HoldsAt(Awake(agent),time).
% From E: 
% 
% '->'(
%    happens(
%       wakeUp(Agent), 
%       Time), 
%    holds(
%       not(awake(Agent)), 
%       Time)).
 %   [Time].
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',19).
if(awake(Agent),not(wakeUp(Agent))).

% agent James, Jessie
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',21).
% From E: 
% 
% t(agent,james).
agent(james).
% From E: 
% 
% t(agent,jessie).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',21).
agent(jessie).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',23).
% !HoldsAt(Awake(James),0).
% From E: 
% 
% holds(
%    not(awake(james)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',23).
initially(not(awake(james))).


% !HoldsAt(Awake(Jessie),0).
% From E: 
% 
% holds(
%    not(awake(jessie)), 0).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',23).
initially(not(awake(jessie))).


:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',25).
% HoldsAt(Awake(James),1).
% From E: 
% 
% holds(
%    awake(james), 1).
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',25).
holds(awake(james),1).

:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',27).
% range time 0 1
% From E: 
% 
% ':-'(call_pel_directive(range(time,0,1))).
:- call_pel_directive(range(time, 0, 1)).

% range offset 1 1
:-was_s_l('/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e',27).
% From E: 
% 
% ':-'(call_pel_directive(range(offset,1,1))).
:- call_pel_directive(range(offset, 1, 1)).
% From E: 
% 
% ':-'(call_pel_directive(translate(ending,'/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e.lps'))).
:- call_pel_directive(translate(ending,
                                '/mnt/sdc1/logicmoo_workspace.1/packs_sys/logicmoo_ec/test/ec_planner/ectest/Example4.e.lps')).
