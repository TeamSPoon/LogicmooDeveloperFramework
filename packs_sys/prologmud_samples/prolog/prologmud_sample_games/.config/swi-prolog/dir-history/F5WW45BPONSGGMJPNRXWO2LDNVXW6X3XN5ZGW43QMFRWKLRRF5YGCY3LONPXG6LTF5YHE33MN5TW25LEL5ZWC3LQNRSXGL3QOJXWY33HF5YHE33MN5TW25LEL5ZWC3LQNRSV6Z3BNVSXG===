_HiStOrY_V2_
listing(localityOfObject).\040
listing(mudAtLoc).\040
baseKB:lst.\040
logicmoo_i_cyc_xform.\040
test_logicmoo_cg_clif.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
_29890=(loves(_29902,_29904),~knows(_29904,tHuman(_29902))),must(args_enforce_bound(_29890,_29934)),writeq(_29934).\040
_29890=(loves(_29902,_29904),~knows(_29904,tHuman(_29902))),must(args_constrain(_29890,_29934)),writeq(_29934).\040
_29890=(loves(_29902,_29904),~knows(_29904,tHuman(_29902))),must(args_enforce(_29890,_29934)),writeq(_29934).\040
_29890=(loves(_29902,_29904),~knows(_29904,tHuman(_29902))),args_enforce(_29890,_29930),writeq(_29930),args_remove_constraints(_29890,_29952),writeq(_29952).\040
normalize_and_save_imports.
forall(current_module(M),forall(import_module(M,Inherits),\012\040\040(assertz(lmconfig:has_import_module(M,Inherits)),format('mi(~q,~q).~n',[Inherits,M])))).
cls.
forall(current_module(M),forall(import_module(M,Inherits),\012\040\040(assertz(lmconfig:has_import_module(M,Inherits)),format('mi(~q,~q).~n',[Inherits,M])))).
delete_import_module(user,pfc_lib).
qsave_logicmoo.
listing('/').
listing(yall:(?)/0).
listing(yall:(?)).
listing(yall:?).
listing(\040yall:?\040).
listing(\040yall\040:\040?\040).
listing(\040\040?/0\040).
listing(\040\040(?)/0\040).
listing(\040\040_:(?)/0\040).
abolish(\040yall:(?)/0\040).
abolish(\040(?)/0\040).
listing('/').
abolish(\040'?'()\040).
abolish(\040'?'(_\040)\040).
abolish(\040'?'(\040_\040)\040).
abolish(\040'\134?'(\040_\040)\040).
abolish(\040'(?)'(\040_\040)\040).
listing('/').
predicate_property(\040yall:(?),\040PP).
predicate_property(\040yall:(?)/0,\040PP).
functor(\040yall:(?)/0,\040F,A).
functor(\040(?)/0,\040F,A).
functor(\040(?)/0,\040F,A),\040\040functor(\040X,\040F,A).
listing((_112624/_112626)).
unload_file(library(yall)).
predicate_property(\040yall:(?)/0,\040PP).
listing('/').
unload_file(library(listing)).
ensure_loaded(library(listing)).
isting:ensure_loaded(library(listing)).
load_before_compile.\040
start_network.\040
load_before_compile.\040
start_network.\040
mu:srv_mu.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
lar.\040
profile(ain(tAgent(foofy))).\040
listing(inRegion).\040
listing(localityOfObject).\040
listing(mudAtLoc).\040
baseKB:lst.\040
logicmoo_i_cyc_xform.\040
test_logicmoo_cg_clif.\040
srv_mu_main.\040
mu:srv_mu.\040
start_network.\040
try_zebra.\040
start_all.\040
qsave_logicmoo.\040
_29896=(loves(_29908,_29910),~knows(_29910,tHuman(_29908))),must(args_enforce_bound(_29896,_29940)),writeq(_29940).\040
_29896=(loves(_29908,_29910),~knows(_29910,tHuman(_29908))),must(args_constrain(_29896,_29940)),writeq(_29940).\040
_29896=(loves(_29908,_29910),~knows(_29910,tHuman(_29908))),must(args_enforce(_29896,_29940)),writeq(_29940).\040
_29896=(loves(_29908,_29910),~knows(_29910,tHuman(_29908))),args_enforce(_29896,_29936),writeq(_29936),args_remove_constraints(_29896,_29958),writeq(_29958).\040
qsave_logicmoo.
start_all.\040
xlisting(lazy_read_lines).
qsave_logicmoo.
volatile(prolog_listing:opened_source/3).
qsave_logicmoo.
start_all.\040
qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(error),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(true)]).
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(error),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(true)]).
unload_file('/mnt/sdc1/logicmoo_workspace.1/packs_lib/trill/prolog/utility_translation.pl').
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(error),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(true)]).
unload_file('/mnt/sdc1/logicmoo_workspace.1/packs_lib/trill/prolog/trill.pl').
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(error),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(true)]).
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(ignore),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(true)]).
reconsult(library(qsave)).
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(ignore),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(true)]).
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(development),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(ignore),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(false)]).
current_prolog_flag(stack_limit,Stack_limit),\012\040\040\040qsave_program(logicmoo_server,\012\040\040\040[\040\040\040class(runtime),\040\012\040\040\040\040\040\040\040verbose(true),\012\040\040\040\040\040\040\040stack_limit(Stack_limit),\012\040\040\040\040\040\040\040toplevel(prolog),\012\040\040\040\040\040\040\040goal(prolog),\012\040\040\040\040\040\040\040undefined(ignore),\040\012\040\040\040\040\040\040\040op(save),\012\040\040\040\040\040\040\040map('logicmoo_server.map'),\012\040\040\040\040\040\040\040foreign(no_save),\012\040\040\040\040\040\040\040autoload(true),\040\040\040\040\040\040\040\012\040\040\040\040\040\040\040stand_alone(false)]).
load_before_compile.\040
start_network.\040
