(in-microtheory FrameNetSemTransMt)
(genlMt EANLU FrameNetSemTransMt)

(FNNounSemtrans (TheList "10" "speed") Bicycle-TheWord
 (and (isa :NOUN Bicycle-10Speed)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "12" "speed") Bicycle-TheWord
 (and (isa :NOUN Bicycle-12Speed)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "12" "string") Guitar-TheWord
 (and (isa :NOUN Guitar-12String)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "120" "volt") Device-TheWord
 (and (isa :NOUN 120VoltDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "22" "caliber") Rifle-TheWord
 (and (isa :NOUN Rifle-22)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "240" "volt") Device-TheWord
 (and (isa :NOUN 240VoltDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "3" "ring") Binder-TheWord
 (and (isa :NOUN Binder-ThreeRing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "35" "millimeter") Camera-TheWord
 (and (isa :NOUN Camera-35mm)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "45" "phonograph") Record-TheWord
 (and (isa :NOUN PhonographRecord-45)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "47" "rack" "unit" "blade" "server") Cabinet-TheWord
 (and (isa :NOUN BladeServerCabinet-47RU)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "8" "mm") Cassette-TheWord
 (and (isa :NOUN 8MMCassette)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "8mm") Camcorder-TheWord
 (and (isa :NOUN 8MMCamcorder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aba-TheWord (and (isa :NOUN Aba-Garment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aba-TheWord (and (isa :NOUN AbaCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abandonment-TheWord
 (and (isa :NOUN AbandoningSomething)) (frame FN_Abandonment)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn of) topicOfStatusChange)
    ((PPFn in) temporallyIntersects) ((PPFn after) temporallyIntersects))
   (:GAP (DNI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 2 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Abaya-TheWord (and (isa :NOUN Tunic))
 (frame FN_Clothing)
 (bindingTemplate (TheList (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Abbreviation-TheWord (and (isa :NOUN Abbreviation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abdomen-TheWord (and (isa :NOUN Abdomen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "abdominal") Aorta-TheWord
 (and (isa :NOUN AbdominalAorta)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abducent-TheWord (and (isa :NOUN AbducensNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abduction-TheWord (and (isa :NOUN AbductingSomeone))
 (frame FN_Kidnapping)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic) ((PPFn at) by-Underspecified)
    (AJP perpetrator) ((PPFn by) perpetrator) ((PPFn from) from-Generic)
    (Sub temporallyIntersects) ((PPFn on) temporallyIntersects)
    ((PPFn in) temporallyIntersects) ((PPFn of) victim) (N perpetrator victim))
   (:GAP (INI perpetrator victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((1 3 0)) ((3 0 0)) ((1 8 0)) ((1 9 1)) ((1 2 0)) ((1 3 0) (3 0 0))
   ((1 3 0) (1 8 0)) ((0 0 0) (1 8 0)) ((0 0 0) (1 9 1)) ((1 9 0) (3 0 0))
   ((1 7 0) (1 8 0)) ((1 4 0) (3 0 0)) ((0 0 0) (0 0 0)) ((1 0 0) (3 0 0))
   ((1 3 0) (1 7 0) (3 0 0)) ((1 4 0) (1 6 0) (3 0 0))
   ((0 0 0) (0 0 0) (3 0 0)) ((1 1 0) (1 5 0) (3 0 0)))))

(FNNounSemtrans (TheList) Abductor-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance perpetrator AbductingSomeone :NOUN))
 (frame FN_Kidnapping)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator victim)) (:OBLIQUE-OBJECT (N victim))
   (:GAP (DEN perpetrator) (INI victim) (DNI victim)) (:GEN (Poss victim))))
 (groupPatterns (TheSet ((0 0 0)) ((3 0 0)) ((0 0 1)) ((1 0 0)))))

(FNNounSemtrans (TheList) Ability-TheWord (and (isa :NOUN Capability))
 (frame FN_Capability)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBJECT (NP fe_event))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (VPto fe_event)
    (A fe_degree fe_event) (N fe_event) ((PPFn to) fe_event) (Srel fe_status))
   (:GAP (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 1 0)) ((2 1 0) (4 0 0)) ((2 4 0) (4 0 0)) ((1 0 0) (4 0 0))
   ((2 0 0) (2 1 0)) ((2 0 0) (2 2 1)) ((0 0 0) (2 1 0))
   ((2 3 0) (2 5 0) (4 0 0)) ((2 1 0) (2 2 0) (4 0 0)))))

(FNNounSemtrans (TheList) Ability-TheWord
 (and (isa :NOUN AgentCapacityQuantity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "able") Seaman-TheWord
 (and (isa :NOUN AbleBodiedSeaman)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ablution-TheWord (and (isa :NOUN Washing))
 (frame FN_Grooming) (bindingTemplate (TheList (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "abominable") Snowman-TheWord
 (and (isa :NOUN AbominableSnowman)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abortifacient-TheWord (and (isa :NOUN Abortifacient))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Absinth-TheWord (and (isa :NOUN Absinthe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "absolute") Pathname-TheWord
 (and (isa :NOUN AbsolutePathname)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Absorbency-TheWord (and (isa :NOUN Absorbency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abstention-TheWord (and (isa :NOUN Refraining))
 (frame FN_Forgoing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn outside) situationConstituents)
    ((PPFn from) fe_desirable) ((PPingFn from) fe_desirable)
    (AJP fe_degree fe_desirable (InverseBinaryPredicateFn explains-Generic))
    ((PPFn of) performedBy) ((PPFn by) performedBy))
   (:GAP (INI fe_desirable) (DNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 1 0)) ((2 0 0)) ((0 2 0) (0 5 0)) ((0 1 0) (2 0 0))
   ((0 3 1) (0 4 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 3 1)))))

(FNNounSemtrans (TheList) Abstinence-TheWord (and (isa :NOUN Refraining))
 (frame FN_Forgoing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_desirable) (AJP fe_degree fe_desirable))
   (:GAP (INI fe_desirable performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 1 1) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Abstract-TheWord (and (isa :NOUN Summary-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abstraction-TheWord
 (and (isa :NOUN ConceptualAbstraction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Absurdity-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectOfCritique)
    ((PPingFn of) objectOfCritique) (Sfin objectOfCritique))
   (:GAP (INI objectOfCritique) (DNI objectOfCritique affectedAgent))
   (:GEN (Poss objectOfCritique affectedAgent))))
 (groupPatterns (TheSet ((2 0 1)) ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Abundance-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) fe_individuals)
    ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Abuse-TheWord (and (isa :NOUN AnimalAbuse))
 (frame FN_Abusing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) perpetrator) ((PPFn from) perpetrator)
    (AJP activeIngredientsOfType) (N victim) ((PPFn of) victim))
   (:GAP (DNI perpetrator victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0))
   ((0 2 0) (2 0 0)) ((0 2 0) (0 4 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Abuse-TheWord (and (isa :NOUN ChildAbuse))
 (frame FN_Abusing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) perpetrator) ((PPFn from) perpetrator)
    (AJP activeIngredientsOfType) (N victim) ((PPFn of) victim))
   (:GAP (DNI perpetrator victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0))
   ((0 2 0) (2 0 0)) ((0 2 0) (0 4 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Abuse-TheWord (and (isa :NOUN SexualAbuse))
 (frame FN_Abusing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) perpetrator) ((PPFn from) perpetrator)
    (AJP activeIngredientsOfType) (N victim) ((PPFn of) victim))
   (:GAP (DNI perpetrator victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0))
   ((0 2 0) (2 0 0)) ((0 2 0) (0 4 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Abuse-TheWord (and (isa :NOUN DomesticViolence))
 (frame FN_Abusing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) perpetrator) ((PPFn from) perpetrator)
    (AJP activeIngredientsOfType) (N victim) ((PPFn of) victim))
   (:GAP (DNI perpetrator victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0))
   ((0 2 0) (2 0 0)) ((0 2 0) (0 4 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Acacia-TheWord (and (isa :NOUN Acacia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "academic") Degree-TheWord
 (and (isa :NOUN EducationalDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Academy-TheWord (and (isa :NOUN HonorarySociety))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acceleration-TheWord (and (isa :NOUN Acceleration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accelerator-TheWord (and (isa :NOUN GasPedal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accelerometer-TheWord (and (isa :NOUN Accelerometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "accent") Furniture-TheWord
 (and (isa :NOUN AccentFurniture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acceptance-TheWord
 (and (isa :NOUN Replying) (relationInstanceExists inReplyTo :NOUN Proposal))
 (frame FN_Respond_to_proposal) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Access-TheWord
 (and (isa :NOUN HavingPhysicalAccessToSomething))
 (frame FN_Having_or_lacking_access)
 (bindingTemplate
  (TheList (:SUBJECT (N obstacles) (NP obstacles accessor))
   (:OBLIQUE-OBJECT ((PPFn to) locationUse)
    (AJP fe_degree accessor locationUse) (N locationUse))
   (:GAP (CNI obstacles) (DNI obstacles accessor locationUse)
    (INI obstacles accessor locationUse))
   (:GEN (Poss accessor))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((0 1 1)) ((1 1 1)) ((1 1 0)) ((1 0 0)) ((0 1 0))
   ((0 0 0)) ((0 1 0) (1 0 0)) ((0 1 1) (1 1 2)) ((0 1 1) (1 0 0))
   ((0 1 1) (0 1 1) (1 0 0)) ((0 1 1) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "accessory" "hemiazygos") Vein-TheWord
 (and (isa :NOUN AccessoryHemiAzygosVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "accessory") Nerve-TheWord
 (and (isa :NOUN AccessoryNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accident-TheWord (and (isa :NOUN Accident))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N causes-Underspecified) ((PPFn in) eventOccursAt))
   (:GAP (DEN fe_undesirable_event))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Accident-TheWord (and (isa :NOUN Accident))
 (frame FN_Coincidence)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (Sfin fe_state_of_affairs))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Acclaim-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo objectOfEvaluation))
   (:OBLIQUE-OBJECT (A communicatorOfInfo) ((PPFn from) communicatorOfInfo)
    ((PPFn of) communicatorOfInfo) (N communicatorOfInfo fe_extent_of_acclaim)
    (AJP communicatorOfInfo fe_degree fe_extent_of_acclaim fe_manner)
    ((PPFn by) by-Underspecified) ((PPingFn by) by-Underspecified)
    ((PPFn for) fe_reason) ((PPingFn for) fe_reason)
    ((PPFn as) fe_reason (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GAP (DNI objectOfEvaluation)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 4 3)) ((1 4 2)) ((1 4 1)) ((3 0 0)) ((1 2 0)) ((1 4 0))
   ((1 4 2) (1 9 1)) ((0 0 1) (1 8 0)) ((0 0 1) (1 6 0)) ((0 0 1) (1 4 1))
   ((1 3 0) (1 7 0)) ((0 0 1) (1 2 0)) ((0 0 1) (1 1 0)) ((0 0 1) (1 4 0))
   ((0 0 1) (1 4 2) (1 7 0)) ((0 0 1) (1 3 1) (1 5 0))
   ((0 0 1) (0 0 1) (1 9 0)) ((0 0 0) (1 4 3) (1 7 0))
   ((0 0 1) (1 2 0) (1 7 0)) ((0 0 1) (0 0 1) (1 0 0))
   ((0 0 1) (0 0 1) (1 4 2) (1 7 0)) ((0 0 1) (1 1 0) (1 4 2) (1 7 0))
   ((0 0 1) (1 4 0) (1 4 1) (1 7 0)))))

(FNNounSemtrans (TheList) Accolade-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT (N subjectOfMentalSituation)
    ((PPFn from) subjectOfMentalSituation) ((PPFn of) subjectOfMentalSituation)
    ((PPFn to) objectOfEvaluation) (AJP fe_reason) ((PPingFn in) fe_reason)
    ((PPFn as) fe_reason) ((PPFn for) objectOfEvaluation fe_reason))
   (:GAP (INI subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation objectOfEvaluation))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 7 0)) ((3 0 0)) ((1 2 0)) ((1 6 0) (3 0 1))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 2 0)) ((1 1 0) (3 0 1)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((1 3 0) (1 4 0) (3 0 0)))))

(FNNounSemtrans (TheList) Accommodation-TheWord
 (and (isa :NOUN Accommodating-HelpingAnAgent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accomplishment-TheWord
 (and (isa :NOUN AchievingSomething)) (frame FN_Accomplishment)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_domain)) (:GAP (DEN to-Generic))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Accord-TheWord
 (and (isa :NOUN DecidingToDoSomething) (isa :NOUN Deciding-Collectively))
 (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N agreeingAgents situationTopic))
   (:GAP (DEN obligationsCreated))))
 (groupPatterns (TheSet ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Accord-TheWord (and (isa :NOUN Treaty))
 (frame FN_Documents) (bindingTemplate (TheList (:GAP (DEN fe_document))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accord-TheWord (and (isa :NOUN Agreement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "account") Manager-TheWord
 (and (isa :NOUN AccountManager)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Account-TheWord
 (and (isa :NOUN Account-LegalAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Account-TheWord (and (isa :NOUN ComputerAccount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Account-TheWord (and (isa :NOUN BankAccount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Account-TheWord
 (and (isa :NOUN WrittenReportOnSituation-CW)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N authorOfLiteraryWork-CW)
    ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections)) (A fe_text)
    (AJP fe_genre startingDate) ((PPFn of) situationTopic)
    ((PPingFn of) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 3 0)) ((0 4 0)) ((0 2 0)) ((2 0 0)) ((0 1 0))
   ((0 0 0)) ((0 5 0) (2 0 0)) ((0 1 0) (0 4 0)) ((0 2 0) (2 0 0))
   ((0 4 1) (0 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Accountancy-TheWord
 (and (isa :NOUN PreparingFinancialRecords)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accountant-TheWord (and (isa :NOUN Accountant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "accounts") Payable-TheWord
 (and (isa :NOUN AccountsPayableDepartment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "accounts") Payable-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance accountsPayable IntelligentAgent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "accounts") Receivable-TheWord
 (and (isa :NOUN AccountsReceivableDepartment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "accounts") Receivable-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance accountsReceivable IntelligentAgent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accoutrement-TheWord
 (and (isa :NOUN SomethingToWear)) (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent deviceUse)
    ((PPFn of) deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 2)) ((0 0 0)) ((0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Accumulation-TheWord
 (and (isa :NOUN Accumulation-Profits)) (frame FN_Amassing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accuracy-TheWord (and (isa :NOUN Accuracy))
 (frame FN_Accuracy) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accusation-TheWord (and (isa :NOUN Accusing))
 (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn against) objectOfEvaluation)
    (AJP communicatorOfInfo fe_manner) ((PPFn over) fe_reason)
    (N communicatorOfInfo fe_reason)
    ((PPFn about) objectOfEvaluation fe_reason) ((PPFn of) fe_reason)
    ((PPingFn of) fe_reason) (Sfin fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI objectOfEvaluation fe_reason)
    (INI fe_reason) (DEN fe_reason))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 6 0)) ((1 3 0)) ((1 7 0)) ((1 10 0))
   ((1 9 0)) ((1 8 0)) ((1 7 1)) ((1 6 1)) ((1 10 0) (3 0 0))
   ((1 2 0) (1 10 0)) ((1 1 0) (1 10 0)) ((1 1 0) (1 8 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 7 1)) ((1 4 0) (1 5 0)) ((0 0 0) (1 3 0) (1 4 1))
   ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Ace-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (AJP hasSkill) (N hasSkill)) (:GAP (DEN affectedAgent))
   (:NOUN (N affectedAgent) (NP affectedAgent))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 0 0) (3 1 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((1 1 0) (3 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Acetaminophen-TheWord (and (isa :NOUN Acetaminophen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acetate-TheWord (and (isa :NOUN Acetate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acetic") Acid-TheWord (and (isa :NOUN AceticAcid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Achievement-TheWord
 (and (isa :NOUN AchievingSomething)) (frame FN_Accomplishment)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "achilles") Tendon-TheWord
 (and (isa :NOUN AchillesTendon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acid") Indigestion-TheWord
 (and (isa :NOUN AcidIndigestion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acid") Rain-TheWord (and (isa :NOUN AcidRainProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acid-TheWord (and (isa :NOUN LSD))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))
   (:GEN (Poss fe_descriptor))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Acid-TheWord (and (isa :NOUN AcidType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acid-TheWord
 (and (isa :NOUN ChemicallyAcidicSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acknowledgment-TheWord
 (and (isa :NOUN Acknowledging-CommunicationAct)) (frame FN_Statement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Sfin infoTransferred) ((PPFn by) performedBy))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Acme-TheWord (and (isa :NOUN Extreme))
 (frame FN_Extreme_value)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_attribute objectActedOn)
    ((PPFn in) duration))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)) ((0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList "acne") Concealer-TheWord (and (isa :NOUN Concealer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acne") Rosacea-TheWord (and (isa :NOUN Rosacea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acne-TheWord (and (isa :NOUN Acne))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing)) (:GAP (DEN markCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "acne" "treatment") Product-TheWord
 (and (isa :NOUN AcneProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acorn-TheWord (and (isa :NOUN Acorn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acoustic" "electric") Guitar-TheWord
 (and (isa :NOUN Guitar-AcousticElectric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acoustic" "electric") Instrument-TheWord
 (and (isa :NOUN MusicalInstrument-AcousticElectric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acoustic") Guitar-TheWord
 (and (isa :NOUN Guitar-Acoustic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acoustic") Instrument-TheWord
 (and (isa :NOUN MusicalInstrument-Acoustic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acoustic") Nerve-TheWord
 (and (isa :NOUN AuditoryNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acquisition-TheWord
 (and (isa :NOUN GainingUserRights)) (frame FN_Getting)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acquittal-TheWord (and (isa :NOUN NotGuiltyVerdict))
 (frame FN_Verdict)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_charges) ((PPFn of) fe_charges defendants)
    (N justiceOfCourt) ((PPFn by) justiceOfCourt) ((PPFn under) justiceOfCourt)
    ((PPFn in) fe_case temporallyIntersects))
   (:GAP (DNI fe_charges defendants) (DEN fe_finding))
   (:GEN (Poss defendants temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 4 0)) ((2 0 1)) ((0 3 0)) ((0 2 0)) ((2 0 0)) ((0 1 1)) ((0 5 0))
   ((0 1 1) (0 5 1)) ((0 1 1) (0 2 0)) ((0 0 0) (2 0 0)) ((0 1 0) (0 1 1))
   ((0 3 0) (0 5 1) (2 0 0)) ((0 5 0) (2 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Acre-TheWord (and (isa :NOUN Acre))
 (frame FN_Measure_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_count) (Num fe_count)
    ((PPFn of) situationLocation fe_occupant))
   (:GAP (DNI fe_occupant) (DEN fe_unit)) (:NOUN (N situationLocation))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((2 0 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Acromegaly-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acronym-TheWord (and (isa :NOUN Acronym))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acrostic-TheWord (and (isa :NOUN Acrostic-IBO))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acrylic") Paint-TheWord
 (and (isa :NOUN AcrylicPaint)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acrylic-TheWord (and (isa :NOUN AcrylicCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acrylic-TheWord (and (isa :NOUN AcrylicPaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Act-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) fe_act))
   (:OBLIQUE-OBJECT (N fe_act) ((PPFn by) performedBy)
    ((PPFn of) fe_act performedBy) (A fe_domain by-Underspecified)
    (AJP fe_domain fe_particular_iteration)
    ((PPFn in) purposeOfEvent temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (DEN fe_act) (DNI performedBy) (INI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 3 0)) ((1 4 0)) ((3 0 0)) ((1 2 1)) ((1 1 0)) ((0 0 0))
   ((1 2 0)) ((1 2 0) (1 6 0)) ((1 2 0) (1 5 1)) ((1 2 0) (1 5 0))
   ((1 4 1) (3 0 0)) ((1 1 0) (1 2 0) (1 4 1)) ((1 0 0) (1 4 1) (3 0 0)))))

(FNNounSemtrans (TheList) Act-TheWord (and (isa :NOUN Law)) (frame FN_Law)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Act-TheWord (and (isa :NOUN HumanActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Act-TheWord (and (isa :NOUN Act-Dramatic))
 (frame FN_Part_ordered_segments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Actinium-TheWord (and (isa :NOUN Actinium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "action") Figure-TheWord
 (and (isa :NOUN ActionFigure-Toy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Action-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) (A performedBy fe_domain by-Underspecified)
    (VPto purposeOfEvent) ((PPFn against) purposeOfEvent)
    (N performedBy purposeOfEvent) (NP temporallyIntersects))
   (:GAP (DEN fe_act) (DNI performedBy) (INI performedBy purposeOfEvent))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((3 0 0)) ((0 0 0)) ((1 4 0)) ((1 1 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 0 0)) ((1 2 0) (1 4 0))
   ((0 0 0) (1 1 1)) ((0 0 0) (1 1 2) (1 3 0)) ((0 0 0) (0 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Action-TheWord (and (isa :NOUN Action))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "active" "matrix") Display-TheWord
 (and (isa :NOUN ActiveMatrixDisplay)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "active" "sound" "navigation" "ranging")
 Device-TheWord (and (isa :NOUN ActiveSonar-Device)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Activism-TheWord (and (isa :NOUN Activism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Activity-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate
  (TheList (:SUBJECT (N performedBy) (NP fe_act performedBy))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy)
    ((PPFn of) fe_act performedBy fe_domain) (Sfin fe_manner)
    ((PPFn at) eventOccursAt) ((PPFn around) eventOccursAt)
    ((PPFn for) purposeOfEvent) (A fe_act fe_domain fe_manner purposeOfEvent)
    (AJP fe_act performedBy fe_domain frequencyOfEvent fe_manner purposeOfEvent
     temporallyIntersects)
    ((PPFn on) fe_act temporallyIntersects)
    ((PPFn in) fe_domain fe_manner eventOccursAt temporallyIntersects)
    (N fe_act performedBy fe_domain fe_manner eventOccursAt purposeOfEvent
     temporallyIntersects))
   (:GAP (DNI fe_act performedBy) (INI performedBy purposeOfEvent)
    (DEN fe_act temporallyIntersects))
   (:GEN (Poss performedBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 6 3)) ((1 2 0)) ((1 10 6)) ((1 10 5)) ((1 4 0)) ((1 10 4))
   ((1 7 4)) ((1 6 2)) ((1 10 2)) ((1 6 1)) ((1 7 5)) ((1 3 0)) ((3 0 0))
   ((1 1 1)) ((1 10 1)) ((1 1 0)) ((0 1 0)) ((1 10 0)) ((1 7 0))
   ((1 3 0) (1 10 5)) ((1 7 5) (3 0 0)) ((1 6 3) (3 0 0)) ((1 6 0) (1 7 6))
   ((1 6 0) (1 9 2)) ((1 7 4) (1 7 5)) ((0 1 0) (1 7 4)) ((1 7 2) (1 7 4))
   ((1 6 1) (1 7 4)) ((1 7 6) (3 0 0)) ((0 1 1) (1 8 1)) ((1 7 1) (3 0 1))
   ((1 9 2) (3 0 0)) ((1 1 1) (1 10 3)) ((0 1 1) (1 7 4)) ((1 1 1) (1 7 3))
   ((1 10 2) (3 0 0)) ((1 7 2) (3 0 0)) ((1 6 1) (3 0 0)) ((1 1 1) (1 7 2))
   ((1 0 0) (1 6 1)) ((0 1 1) (1 1 2)) ((1 10 0) (3 0 0)) ((0 1 1) (1 10 0))
   ((1 8 0) (1 10 0)) ((1 0 0) (1 9 2) (1 10 0)) ((1 7 0) (1 7 1) (1 9 2))
   ((0 1 1) (1 5 0) (1 7 4)) ((1 3 0) (1 7 4) (3 0 0))
   ((1 6 1) (1 9 3) (3 0 0)) ((1 7 4) (1 9 0) (3 0 0))
   ((0 1 1) (1 7 2) (1 9 1)) ((0 0 0) (1 7 2) (1 7 4))
   ((1 0 0) (1 6 1) (1 7 4) (1 9 3)) ((0 1 1) (1 7 2) (1 7 4) (1 9 2))
   ((0 1 1) (1 6 2) (1 7 2) (1 9 2)))))

(FNNounSemtrans (TheList) Activity-TheWord (and (isa :NOUN Action))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Activity-TheWord (and (isa :NOUN AnimalActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Actor-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationInstanceExists performedBy :NOUN PurposefulAction))
 (frame FN_Intentionally_act) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Actor-TheWord (and (isa :NOUN Actor))
 (frame FN_Performers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Actress-TheWord (and (isa :NOUN (FemaleFn Actor)))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Actress-TheWord (and (isa :NOUN (FemaleFn Actor)))
 (frame FN_Performers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acupressure-TheWord (and (isa :NOUN Acupressure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acupuncture") Needle-TheWord
 (and (isa :NOUN AcupunctureNeedle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acupuncture-TheWord (and (isa :NOUN Acupuncture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "acute") Accent-TheWord
 (and (isa :NOUN AcuteAccent-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acyclovir-TheWord (and (isa :NOUN Acyclovir))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ad-TheWord
 (and (isa :NOUN Advertisement-Commercial-IBT)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adaptation-TheWord (and (isa :NOUN Adaptation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Addict-TheWord
 (and (isa :NOUN Person)
      (hasPhysiologicalConditionType :NOUN (AddictionFn AddictiveSubstance)))
 (frame FN_Addiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_addict fe_addictant))
   (:OBLIQUE-OBJECT (N fe_addictant) (AJP fe_addictant))
   (:GAP (DEN fe_addict) (INI fe_addictant))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 1)) ((1 0 0)) ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Addiction-TheWord (and (isa :NOUN Addiction))
 (frame FN_Addiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_addict fe_addictant))
   (:OBLIQUE-OBJECT (N fe_addictant) ((PPFn to) fe_addictant)
    (VPto fe_addictant) ((PPFn for) fe_addictant) (AJP influencingAgent))
   (:GAP (INI fe_addict fe_addictant) (DNI fe_addict fe_addictant))
   (:GEN (Poss fe_addict))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 0)) ((1 1 0)) ((0 0 1)) ((1 0 0)) ((3 0 0))
   ((1 2 0) (1 4 0)) ((1 4 0) (3 0 0)) ((1 2 0) (3 0 0)) ((1 1 0) (3 0 0))
   ((0 0 1) (3 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "adding") Machine-TheWord
 (and (isa :NOUN AddingMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Addition-TheWord (and (isa :NOUN DoingAddition))
 (frame FN_Commutative_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Addition-TheWord
 (and (isa :NOUN DoingMultiplication)) (frame FN_Commutative_process)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "address") Label-TheWord
 (and (isa :NOUN AddressLabel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Address-TheWord
 (and (isa :NOUN Address-PhysicalLocationDesignator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Address-TheWord (and (isa :NOUN PublicSpeaking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Address-TheWord (and (isa :NOUN ExpoundingSomething))
 (frame FN_Speak_on_topic)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy situationTopic))
   (:OBLIQUE-OBJECT ((PPFn to) spectators) (QUO fe_manner)
    ((PPFn by) performedBy) ((PPFn from) performedBy) (NP temporallyIntersects)
    (AJP spectators fe_manner genericPathway-Partial temporallyIntersects)
    ((PPFn on) genericPathway-Partial situationTopic)
    ((PPingFn for) situationTopic) ((PPFn about) situationTopic)
    (N genericPathway-Partial fe_occasion situationTopic))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 8 0)) ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 6 0)) ((1 9 0))
   ((1 5 1)) ((1 0 0)) ((1 9 2) (3 0 0)) ((0 0 0) (1 9 2)) ((1 5 3) (3 0 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (0 0 0)) ((1 5 1) (1 8 0)) ((1 3 0) (1 5 1))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((1 0 0) (1 1 0)) ((1 0 0) (1 5 1))
   ((0 0 0) (1 9 2) (3 0 0)) ((1 4 0) (1 9 1) (3 0 0))
   ((1 3 0) (1 5 1) (1 7 0)) ((0 0 1) (1 0 0) (3 0 0))
   ((0 0 0) (1 0 0) (1 6 1)) ((0 0 0) (1 5 0) (1 6 1))
   ((1 0 0) (1 5 1) (1 5 2)))))

(FNNounSemtrans (TheList) Adept-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (N hasSkill) ((PPFn at) hasSkill)
    ((PPFn of) fe_knowledge hasSkill))
   (:GAP (DEN affectedAgent) (DNI fe_knowledge hasSkill))))
 (groupPatterns (TheSet ((1 2 1)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Adeptness-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_focal_participant) (N fe_knowledge)
    (AJP affectedAgent) ((PPFn in) hasSkill) ((PPingFn in) hasSkill))
   (:GAP (DNI affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 0 0)) ((0 2 0) (0 3 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Adherence-TheWord (and (isa :NOUN Compliant))
 (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) fe_norm) (VPto fe_norm) (N affectedAgent)
    ((PPFn by) affectedAgent) ((PPFn of) affectedAgent)
    (AJP fe_manner affectedAgent))
   (:GAP (DNI fe_norm affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 5 1)) ((0 0 0) (2 0 0)) ((0 0 0) (0 3 0))
   ((0 0 0) (0 5 0)) ((0 0 0) (0 5 0) (2 0 0)) ((0 0 0) (0 4 0) (0 5 0))
   ((0 0 0) (0 3 0) (0 5 0)) ((0 0 0) (0 2 0) (0 5 0)))))

(FNNounSemtrans (TheList) Adherence-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) fe_norm) (VPto fe_norm) (N affectedAgent)
    ((PPFn by) affectedAgent) ((PPFn of) affectedAgent)
    (AJP fe_manner affectedAgent))
   (:GAP (DNI fe_norm affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 5 1)) ((0 0 0) (2 0 0)) ((0 0 0) (0 3 0))
   ((0 0 0) (0 5 0)) ((0 0 0) (0 5 0) (2 0 0)) ((0 0 0) (0 4 0) (0 5 0))
   ((0 0 0) (0 3 0) (0 5 0)) ((0 0 0) (0 2 0) (0 5 0)))))

(FNNounSemtrans (TheList) Adhesion-TheWord (and (isa :NOUN Attachment))
 (frame FN_Being_attached)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_connector))
   (:OBLIQUE-OBJECT ((PPFn on) to-Generic) ((PPFn to) to-Generic)
    (N objectOfStateChange) ((PPFn of) objectOfStateChange) (AJP fe_manner))))
 (groupPatterns
  (TheSet ((1 1 0) (1 3 0)) ((1 1 0) (1 2 0)) ((1 1 0) (1 3 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Adhesive-TheWord (and (isa :NOUN Glue))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_connector))
   (:OBLIQUE-OBJECT (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse)
    ((PPFn for) deviceUse) ((PPingFn for) deviceUse))
   (:GAP (DEN fe_connector))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 2)) ((1 1 1)) ((1 0 1)) ((1 1 0)) ((1 0 0))
   ((0 0 0) (1 2 0)) ((1 1 0) (1 1 2)))))

(FNNounSemtrans (TheList "adipose") Tissue-TheWord
 (and (isa :NOUN FattyTissue)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adjective-TheWord (and (isa :NOUN Adjective))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adjudicator-TheWord (and (isa :NOUN JudicialAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "adjustable") Wrench-TheWord
 (and (isa :NOUN AdjustableWrench)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adjustment-TheWord (and (isa :NOUN HandlingAnObject))
 (frame FN_Adjusting)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A fe_feature) ((PPFn with) instrument-Generic)
    ((PPFn via) by-Underspecified) ((PPFn by) by-Underspecified)
    ((PPFn to) fe_feature parts)
    (AJP fe_degree fe_feature fe_manner by-Underspecified parts)
    ((PPFn for) fe_feature parts) ((PPFn of) fe_feature parts)
    (VPto purposeOfEvent) ((PPFn in) purposeOfEvent)
    (AVP fe_degree by-Underspecified temporallyIntersects)
    (NP temporallyIntersects) (N fe_feature parts temporallyIntersects)
    (Sub fe_degree temporallyIntersects))
   (:GAP (CNI doneBy) (INI fe_feature parts) (DNI fe_feature parts)
    (2nd parts))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 12 1)) ((1 6 0)) ((1 0 0)) ((1 7 0)) ((1 12 0))
   ((1 5 0)) ((1 4 1)) ((1 10 1)) ((1 1 0)) ((1 3 0) (1 12 1))
   ((1 5 3) (1 6 1)) ((1 4 1) (1 5 2)) ((1 2 0) (1 5 2)) ((1 7 0) (1 13 1))
   ((1 4 1) (1 5 0)) ((1 4 1) (1 8 0)) ((0 0 0) (1 11 0)) ((0 0 0) (1 5 1))
   ((0 0 0) (1 5 0)) ((1 4 0) (1 5 0)) ((1 4 0) (1 5 0) (1 12 2))
   ((0 0 0) (1 4 1) (1 5 2)) ((0 0 0) (1 4 1) (1 5 0))
   ((1 4 1) (1 5 0) (1 8 0) (1 9 0)) ((0 0 0) (1 7 0) (1 10 0) (1 13 0))
   ((0 0 0) (1 5 0) (1 5 4) (1 8 0) (1 10 2)))))

(FNNounSemtrans (TheList) Adjutant-TheWord (and (isa :NOUN Batman-AideDeCamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Administration-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Administration-TheWord
 (and (isa :NOUN AdministeringADrug)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Administration-TheWord
 (and (isa :NOUN Administration-Management)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Administration-TheWord
 (and (isa :NOUN AdministrativeDepartment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "administrative") District-TheWord
 (and (isa :NOUN AdministrativeDistrict)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "administrative") Unit-TheWord
 (and (isa :NOUN AdministrativeUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Administrator-TheWord (and (isa :NOUN Administrator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Admiral-TheWord (and (isa :NOUN Admiral-Rank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Admiration-TheWord (and (isa :NOUN Admiration))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn among) subjectOfMentalSituation)
    ((PPFn from) subjectOfMentalSituation) (NP objectOfEvaluation)
    (AJP subjectOfMentalSituation objectOfEvaluation fe_manner)
    (Sfin fe_manner)
    ((PPFn of) subjectOfMentalSituation objectOfEvaluation fe_reason)
    ((PPFn at) fe_reason) ((PPFn for) objectOfEvaluation fe_reason)
    ((PPingFn for) fe_reason))
   (:GAP (DNI objectOfEvaluation) (CNI objectOfEvaluation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 8 0)) ((1 5 1)) ((1 5 0)) ((1 1 0)) ((1 3 0)) ((3 0 0))
   ((1 3 2) (1 4 0)) ((1 5 2) (3 0 0)) ((1 7 1) (3 0 0)) ((1 6 0) (3 0 0))
   ((0 0 0) (1 5 2)) ((1 1 0) (1 3 2)) ((1 5 1) (3 0 0)) ((1 7 0) (3 0 0))
   ((1 3 1) (3 0 0)) ((1 0 0) (1 7 0)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 3 2) (1 7 0)) ((1 2 0) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Admission-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) infoTransferred) ((PPFn over) infoTransferred)
    ((PPFn past) infoTransferred) (Sfin infoTransferred) (AJP performedBy)
    (N performedBy) ((PPFn by) performedBy) ((PPFn from) performedBy)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn concerning) situationTopic))
   (:GAP (DNI infoTransferred) (INI infoTransferred) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 3 0)) ((1 0 0)) ((3 0 0)) ((1 7 0)) ((1 6 0)) ((0 0 0))
   ((1 5 0)) ((1 4 0)) ((1 9 0) (3 0 0)) ((0 0 0) (1 9 0)) ((1 5 0) (1 8 1))
   ((1 3 0) (3 0 0)) ((1 3 0) (1 7 0)) ((1 3 0) (1 6 0)) ((1 2 0) (3 0 0))
   ((1 1 0) (3 0 0)) ((1 0 0) (1 5 0)) ((1 8 0) (3 0 0)))))

(FNNounSemtrans (TheList) Admonishment-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (VPto recipientOfInfo)
    (AJP situationTopic) ((PPFn in) situationTopic)
    ((PPFn for) recipientOfInfo situationTopic))
   (:GAP (CNI communicatorOfInfo)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 4 1)) ((3 0 0)) ((1 4 0)) ((1 0 0) (1 2 0))
   ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Admonition-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT (NP recipientOfInfo) ((PPFn of) communicatorOfInfo)
    (AJP fe_degree) ((PPFn from) communicatorOfInfo eventAffectsBodyPart)
    (VPing fe_reason) ((PPFn to) recipientOfInfo situationTopic)
    (VPto situationTopic) ((PPingFn about) situationTopic))
   (:GAP (2nd communicatorOfInfo)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 3 1)) ((3 0 0)) ((1 1 0)) ((1 5 0)) ((1 7 0) (3 0 0))
   ((1 3 0) (1 4 0)) ((1 5 0) (1 6 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 2 0) (1 5 0) (1 5 1)))))

(FNNounSemtrans (TheList) Adobe-TheWord (and (isa :NOUN AdobeBrick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adobe-TheWord (and (isa :NOUN AdobeClay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adolescent-TheWord (and (isa :NOUN HumanTeenager))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn in) fe_descriptor)
    (VPing fe_descriptor) ((PPFn of) fe_ethnicity)
    (AJP age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    (N fe_ethnicity comesFrom-Generic fe_persistent_characteristic))
   (:GAP (DEN age fe_person))))
 (groupPatterns
  (TheSet ((1 5 2)) ((1 4 4)) ((1 5 1)) ((1 4 2)) ((1 2 0)) ((1 4 1)) ((0 0 0))
   ((1 4 0)) ((1 5 0)) ((1 4 2) (1 4 4)) ((1 0 0) (1 4 4)) ((1 1 0) (1 4 2))
   ((1 4 1) (1 4 1)) ((1 3 0) (1 4 2) (1 4 3)) ((0 0 0) (1 0 0) (1 4 4)))))

(FNNounSemtrans (TheList) Adolescent-TheWord (and (isa :NOUN PubescentHuman))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn in) fe_descriptor)
    (VPing fe_descriptor) ((PPFn of) fe_ethnicity)
    (AJP age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    (N fe_ethnicity comesFrom-Generic fe_persistent_characteristic))
   (:GAP (DEN age fe_person))))
 (groupPatterns
  (TheSet ((1 5 2)) ((1 4 4)) ((1 5 1)) ((1 4 2)) ((1 2 0)) ((1 4 1)) ((0 0 0))
   ((1 4 0)) ((1 5 0)) ((1 4 2) (1 4 4)) ((1 0 0) (1 4 4)) ((1 1 0) (1 4 2))
   ((1 4 1) (1 4 1)) ((1 3 0) (1 4 2) (1 4 3)) ((0 0 0) (1 0 0) (1 4 4)))))

(FNNounSemtrans (TheList) Adoration-TheWord (and (isa :NOUN Love))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) topicOfIndividual)
    ((PPFn of) topicOfIndividual) (AVP fe_degree)
    ((PPFn in) topicOfIndividual eventAffectsBodyPart)
    (AJP fe_degree fe_manner fe_parameter) (N fe_parameter))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 2)) ((1 4 1)) ((1 3 1)) ((2 0 0)) ((0 0 0))
   ((0 0 0) (1 4 1)) ((0 0 0) (1 4 0)) ((1 0 0) (1 4 1)) ((1 1 0) (2 0 0))
   ((1 0 0) (2 0 0)) ((1 1 0) (1 2 0)) ((1 1 0) (1 4 0)) ((1 3 0) (1 4 0))
   ((0 0 0) (1 1 0) (1 4 1)) ((1 1 0) (1 4 1) (1 4 1) (2 0 0)))))

(FNNounSemtrans (TheList) Adp-TheWord (and (isa :NOUN AdenosineDiphosphate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "adrenal") Gland-TheWord
 (and (isa :NOUN AdrenalGland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "adrenocorticotropic") Hormone-TheWord
 (and (isa :NOUN AdrenocorticotropicHormone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adrenosterone-TheWord (and (isa :NOUN Adrenosterone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adult-TheWord (and (isa :NOUN AdultAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adult-TheWord (and (isa :NOUN HumanAdult))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn below) age) ((PPFn over) age) ((PPingFn of) age)
    ((PPFn in) fe_descriptor) (VPing fe_descriptor)
    ((PPFn of) age fe_descriptor) ((PPFn from) fe_descriptor fe_ethnicity)
    ((PPingFn with) fe_persistent_characteristic)
    (N age fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic
     fe_person))
   (:GAP (INI age) (DEN age fe_persistent_characteristic fe_person))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 8 2)) ((1 10 3)) ((1 6 1)) ((1 8 1)) ((1 10 2))
   ((1 9 0)) ((1 5 1)) ((1 3 0)) ((1 6 0)) ((1 10 1)) ((1 5 0)) ((0 0 0))
   ((1 1 0)) ((1 10 2) (1 10 3)) ((1 10 1) (1 10 2)) ((1 4 0) (1 10 1))
   ((1 3 0) (1 10 1)) ((1 0 0) (1 10 4)) ((1 2 0) (1 10 3)) ((1 7 0) (1 10 0))
   ((1 10 0) (1 10 3)) ((0 0 0) (1 10 1)) ((1 1 0) (1 10 1) (1 10 3))
   ((0 0 0) (1 10 1) (1 10 1)) ((1 8 0) (1 10 1) (1 10 1) (1 10 1)))))

(FNNounSemtrans (TheList "adult") Film-TheWord (and (isa :NOUN XRating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "adult") Movie-TheWord (and (isa :NOUN XRating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adultery-TheWord
 (and (isa :NOUN ExtraMaritalSexualBehavior)) (frame FN_Personal_relationship)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advance-TheWord
 (and (isa :NOUN AccumulatingSteadily)) (frame FN_Progression)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_domain))
   (:GAP (CNI objectActedOn) (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Advance-TheWord (and (isa :NOUN ImprovementEvent))
 (frame FN_Progression)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_domain))
   (:GAP (CNI objectActedOn) (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Advancement-TheWord
 (and (isa :NOUN AccumulatingSteadily)) (frame FN_Progression)
 (bindingTemplate (TheList (:GAP (DNI objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advancement-TheWord
 (and (isa :NOUN ImprovementEvent)) (frame FN_Progression)
 (bindingTemplate (TheList (:GAP (DNI objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "advent") Sunday-TheWord
 (and (isa :NOUN AdventSunday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adventure-TheWord (and (isa :NOUN Adventure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adverb-TheWord (and (isa :NOUN Adverb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advertisement-TheWord
 (and (isa :NOUN Advertisement-IBT)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advertisement-TheWord
 (and (isa :NOUN Advertisement-PCW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advertising-TheWord
 (and (isa :NOUN Advertisement-IBT)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advertising-TheWord
 (and (isa :NOUN Advertisement-PCW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advertising-TheWord (and (isa :NOUN Advertising))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advertiser-TheWord (and (isa :NOUN Advertiser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advice-TheWord (and (isa :NOUN Advice-IBT))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advisor-TheWord (and (isa :NOUN Advisor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advocate-TheWord (and (isa :NOUN Advocate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aerial") Lift-TheWord (and (isa :NOUN AerialLift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aerialist-TheWord (and (isa :NOUN Acrobat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aeronautical") Engineer-TheWord
 (and (isa :NOUN AerospaceEngineer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aeroplane-TheWord (and (isa :NOUN Airplane))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aerosol") Can-TheWord (and (isa :NOUN AerosolCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aerosol") Powder-TheWord
 (and (isa :NOUN AerosolThePowder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aerosol") Solution-TheWord
 (and (isa :NOUN AerosolTheSolution)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affair-TheWord (and (isa :NOUN SocialGathering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affair-TheWord
 (and (isa :NOUN ExtraMaritalSexualBehavior)) (frame FN_Personal_relationship)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affection-TheWord (and (isa :NOUN Affection))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affenpinscher-TheWord (and (isa :NOUN Affenpinscher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affidavit-TheWord (and (isa :NOUN Affidavit))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affirmation-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affliction-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affordability-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance cost TemporalThing :NOUN))
 (frame FN_Expensiveness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affront-TheWord (and (isa :NOUN InsultingSomeone))
 (frame FN_Cause_emotion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_event))
   (:OBLIQUE-OBJECT (Sforto fe_event) (VPto fe_event) ((PPFn to) objectActedOn)
    (A activeIngredientsOfType) (AJP activeIngredientsOfType))
   (:GAP (DNI doneBy objectActedOn))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 2 0)) ((1 0 0) (1 4 0)) ((0 0 0) (1 3 0))
   ((1 1 0) (1 2 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList "afghan") Hound-TheWord (and (isa :NOUN AfghanHound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "african") Country-TheWord
 (and (isa :NOUN AfricanCountry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "african") Elephant-TheWord
 (and (isa :NOUN AfricanElephant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) African-TheWord
 (and (isa :NOUN AfricanCitizenOrSubject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "african") Violet-TheWord
 (and (isa :NOUN AfricanViolet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Afrikaans-TheWord (and (isa :NOUN AfrikaansLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Afrikaner-TheWord
 (and (isa :NOUN EthnicGroupOfWhiteSouthAfricans)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aftershock-TheWord (and (isa :NOUN Aftershock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "after" "sun" "care") Product-TheWord
 (and (isa :NOUN AfterSunCare)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Afterbirth-TheWord (and (isa :NOUN Placenta))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Afternoon-TheWord (and (isa :NOUN Afternoon))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    (AVP fe_relative_time)
    (N fe_relative_time (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 1 0)) ((0 3 0)) ((0 2 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "agar" "culture") Medium-TheWord
 (and (isa :NOUN AgarCultureMedium)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agar-TheWord (and (isa :NOUN AgarCultureMedium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agaric-TheWord (and (isa :NOUN GilledMushroom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Age-TheWord
 (and (isa :NOUN HumanTypeByLifeStageType)) (frame FN_Age)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP age) ((PPFn of) age objectActedOn))
   (:GAP (DEN age) (INI objectActedOn) (DNI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Age-TheWord (and (isa :NOUN Era))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)) ((PPFn of) fe_salient_event)
    (A (InverseBinaryPredicateFn nameString) fe_salient_event))
   (:GAP (DEN fe_unit) (2nd fe_relative_time fe_unit))
   (:NOUN (NP (InverseBinaryPredicateFn parts)))
   (:GEN (Poss fe_relative_time))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 1)) ((2 0 0)) ((3 0 0)) ((0 1 0)) ((0 3 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Agency-TheWord (and (isa :NOUN GovernmentAgency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agency-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString) purposeOfEvent)
    (A fe_container_possessor purposeOfEvent))
   (:GAP (INI hasMembers) (2nd (InverseBinaryPredicateFn nameString))
    (DEN hasMembers fe_organization))))
 (groupPatterns (TheSet ((0 0 1)) ((0 1 1)) ((0 0 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList "agent") Orange-TheWord (and (isa :NOUN AgentOrange))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agent-TheWord (and (isa :NOUN PharmaceuticalType))
 (frame FN_Active_substance)
 (bindingTemplate
  (TheList (:SUBJECT (NP stuffUsed) (N activeIngredientsOfType))
   (:OBLIQUE-OBJECT ((PPFn of) fe_descriptor fe_effect)
    (AJP fe_descriptor fe_effect activeIngredientsOfType)
    (N fe_descriptor fe_effect (InverseBinaryPredicateFn nameString) stuffUsed
     activeIngredientsOfType)
    (A fe_effect activeIngredientsOfType) (VPed activeIngredientsOfType)
    (NP activeIngredientsOfType))
   (:GAP (DNI fe_effect) (INI fe_effect) (DEN fe_effect stuffUsed))
   (:APPOSITIVE (NP fe_descriptor stuffUsed))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 2 3)) ((1 1 2)) ((1 2 4)) ((1 3 1)) ((1 1 1)) ((1 3 0))
   ((1 2 1)) ((1 2 0)) ((1 1 0)) ((1 5 0) (1 5 0)) ((1 1 2) (3 0 1))
   ((1 2 2) (1 2 4)) ((1 3 1) (1 3 1)) ((0 1 0) (1 2 1)) ((1 2 1) (1 2 4))
   ((1 3 0) (1 3 1)) ((0 0 0) (1 2 1)) ((1 2 1) (3 0 1)) ((0 0 0) (1 1 1))
   ((0 0 0) (1 3 0)) ((1 2 4) (3 0 0)) ((1 1 0) (1 2 4)) ((1 1 0) (1 1 2))
   ((1 0 0) (1 3 1)) ((1 0 1) (1 1 0)) ((0 0 0) (1 1 0)) ((1 1 0) (1 1 1))
   ((0 0 0) (1 1 1) (1 2 0)) ((0 0 0) (1 0 1) (1 1 0))
   ((1 1 0) (1 2 1) (3 0 1)))))

(FNNounSemtrans (TheList) Agent-TheWord (and (isa :NOUN Agent-Generic))
 (frame FN_Intentionally_act) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agent-TheWord (and (isa :NOUN Broker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agent-TheWord
 (and (isa :NOUN EfficaciousSubstanceTypeByComposition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agent-TheWord (and (isa :NOUN MediaAgent))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Aggrandizement-TheWord (and (isa :NOUN Boasting))
 (frame FN_Cause_expansion)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfStateChange)
    (AJP objectOfStateChange by-Underspecified) ((PPFn to) fe_result_size))
   (:GAP (DNI objectOfStateChange))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 0 0)) ((0 0 0)) ((1 1 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Aggravation-TheWord (and (isa :NOUN Frustration))
 (frame FN_Stimulus_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT (AJP fe_degree)
    ((PPFn of) (InverseBinaryPredicateFn explaines-Generic)))
   (:GAP (DEN (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Agnomen-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Agreement-TheWord (and (isa :NOUN Agreement))
 (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP obligationsCreated meetingParticipants))
   (:OBLIQUE-OBJECT ((PPFn under) situationConstituents)
    ((PPFn to) obligationsCreated) (Sfin obligationsCreated)
    (VPto obligationsCreated) ((PPFn between) agreeingAgents)
    ((PPFn with) meetingParticipants) (AJP fe_manner temporallyIntersects)
    (NP temporallyIntersects) ((PPFn on) situationTopic)
    (N agreeingAgents meetingParticipants situationTopic)
    ((PPFn for) situationTopic))
   (:GAP (DEN obligationsCreated) (INC agreeingAgents)
    (INI obligationsCreated agreeingAgents meetingParticipants)
    (DNI agreeingAgents situationTopic))
   (:GEN (Poss meetingParticipants temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 10 0)) ((1 9 2)) ((0 0 0)) ((1 8 0)) ((1 9 0)) ((1 3 0))
   ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 5 0) (1 9 2)) ((1 9 1) (1 9 2))
   ((1 9 2) (3 0 1)) ((1 1 0) (3 0 1)) ((1 5 0) (1 6 1)) ((1 5 0) (3 0 0))
   ((0 0 1) (1 5 0)) ((1 1 0) (3 0 0)) ((1 4 0) (1 8 0)) ((1 4 0) (1 9 2))
   ((1 6 0) (3 0 0)) ((1 1 0) (1 7 0) (3 0 0)) ((0 0 1) (1 5 0) (1 9 2))
   ((0 0 1) (1 5 0) (1 6 1)))))

(FNNounSemtrans (TheList) Agreement-TheWord
 (and (isa :NOUN Deciding-Collectively)) (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP obligationsCreated meetingParticipants))
   (:OBLIQUE-OBJECT ((PPFn under) situationConstituents)
    ((PPFn to) obligationsCreated) (Sfin obligationsCreated)
    (VPto obligationsCreated) ((PPFn between) agreeingAgents)
    ((PPFn with) meetingParticipants) (AJP fe_manner temporallyIntersects)
    (NP temporallyIntersects) ((PPFn on) situationTopic)
    (N agreeingAgents meetingParticipants situationTopic)
    ((PPFn for) situationTopic))
   (:GAP (DEN obligationsCreated) (INC agreeingAgents)
    (INI obligationsCreated agreeingAgents meetingParticipants)
    (DNI agreeingAgents situationTopic))
   (:GEN (Poss meetingParticipants temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 10 0)) ((1 9 2)) ((0 0 0)) ((1 8 0)) ((1 9 0)) ((1 3 0))
   ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 5 0) (1 9 2)) ((1 9 1) (1 9 2))
   ((1 9 2) (3 0 1)) ((1 1 0) (3 0 1)) ((1 5 0) (1 6 1)) ((1 5 0) (3 0 0))
   ((0 0 1) (1 5 0)) ((1 1 0) (3 0 0)) ((1 4 0) (1 8 0)) ((1 4 0) (1 9 2))
   ((1 6 0) (3 0 0)) ((1 1 0) (1 7 0) (3 0 0)) ((0 0 1) (1 5 0) (1 9 2))
   ((0 0 1) (1 5 0) (1 6 1)))))

(FNNounSemtrans (TheList) Agreement-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPto obligationsCreated) (A fe_specification)
    (AJP fe_specification) (N obligationsCreated fe_specification))
   (:GAP (DEN fe_document) (DNI fe_bearer obligationsCreated)
    (INI fe_bearer fe_issuer obligationsCreated))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0) (0 3 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "agricultural") Implement-TheWord
 (and (isa :NOUN AgriculturalImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aid-TheWord (and (isa :NOUN HelpingAnAgent))
 (frame FN_Assistance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aids-TheWord (and (isa :NOUN AIDS))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aikido-TheWord (and (isa :NOUN AikidoEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ailment-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N actorPartsInvolved) (AJP duration)
    ((PPFn in) objectActedOn))
   (:GAP (DEN infects) (INI objectActedOn symptomTypeOfAilmentType))))
 (groupPatterns (TheSet ((1 2 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Aim-TheWord (and (isa :NOUN AimingSomething))
 (frame FN_Aiming)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy instrument-Generic))
   (:OBLIQUE-OBJECT ((PPFn at) intendedToLocation)
    ((PPFn during) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (INI intendedToLocation))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (1 0 0)) ((0 0 1) (1 0 0) (1 2 1))
   ((0 0 0) (1 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Aim-TheWord (and (isa :NOUN Goal)) (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (VPto to-Generic) (NP performedBy to-Generic))
   (:OBJECT (NP to-Generic))
   (:OBLIQUE-OBJECT (N performedBy) (NP performedBy) (AJP fe_attribute)
    (VPto to-Generic) ((PPingFn of) to-Generic) (Sfin to-Generic)
    (Sforto to-Generic) ((PPFn of) performedBy to-Generic by-Underspecified)
    (A performedBy fe_domain temporallyIntersects))
   (:GAP (DNI performedBy fe_attribute) (DEN to-Generic)
    (2nd performedBy by-Underspecified) (INI by-Underspecified))
   (:GEN (Poss performedBy by-Underspecified))))
 (groupPatterns
  (TheSet ((2 3 0)) ((2 6 0)) ((2 5 0)) ((2 4 0)) ((2 7 1)) ((0 1 1)) ((2 8 1))
   ((4 0 0)) ((0 1 0)) ((2 8 0)) ((2 4 0) (2 8 2)) ((2 3 0) (4 0 1))
   ((2 4 0) (4 0 1)) ((0 1 1) (2 7 2)) ((2 0 0) (2 3 0)) ((2 3 0) (2 7 2))
   ((0 0 0) (4 0 0)) ((2 3 0) (4 0 0)) ((2 4 0) (4 0 0)) ((1 0 0) (4 0 0))
   ((2 3 0) (2 7 0)) ((0 1 0) (2 3 0)) ((0 1 0) (2 4 0)) ((2 8 1) (4 0 0))
   ((2 1 0) (2 7 1)) ((2 2 0) (2 4 0)) ((0 1 0) (2 3 0) (4 0 0))
   ((0 1 0) (0 1 0) (2 8 1)))))

(FNNounSemtrans (TheList "air") Base-TheWord
 (and (isa :NOUN AirForceBase-Grounds)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Compressor-TheWord
 (and (isa :NOUN AirCompressor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Conditioner-TheWord
 (and (isa :NOUN AirConditioner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Ejector-TheWord
 (and (isa :NOUN AirEjector-LaboratoryEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Filter-TheWord (and (isa :NOUN AirFilter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Force-TheWord (and (isa :NOUN AirForce))
 (frame FN_Military)
 (bindingTemplate
  (TheList
   (:GAP (DEN impactForce) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:NOUN (N impactForce) (NP impactForce))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "air") Force-TheWord (and (isa :NOUN AirForce))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Molecule-TheWord
 (and (isa :NOUN (MoleculeFn Air))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Pollution-TheWord
 (and (isa :NOUN AirPollutionProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Pump-TheWord (and (isa :NOUN AirPump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Purifier-TheWord (and (isa :NOUN AirPurifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Sac-TheWord (and (isa :NOUN AlveolarSac))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Terminal-TheWord
 (and (isa :NOUN AirportTerminalBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Air-TheWord (and (isa :NOUN Air)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Air-TheWord (and (isa :NOUN Broadcasting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Travel-TheWord
 (and (isa :NOUN (TransportViaFn AirTransportationDevice))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air") Vent-TheWord (and (isa :NOUN AirVentSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "air" "warning") Light-TheWord
 (and (isa :NOUN AirWarningLight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airbag-TheWord (and (isa :NOUN AutoAirbag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airbrush-TheWord (and (isa :NOUN AirBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aircraft" "arresting") Gear-TheWord
 (and (isa :NOUN AircraftArrestingGear)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aircraft") Cabin-TheWord
 (and (isa :NOUN AircraftCabin)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aircraft") Carrier-TheWord
 (and (isa :NOUN AircraftCarrier)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aircraft") Engine-TheWord
 (and (isa :NOUN AircraftEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aircraft-TheWord
 (and (isa :NOUN AirTransportationDevice)) (frame FN_Vehicle)
 (bindingTemplate (TheList (:GAP (DEN transporter)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airdock-TheWord (and (isa :NOUN AircraftHangar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airfield-TheWord (and (isa :NOUN Airfield))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_container_possessor) (AJP locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Airlift-TheWord (and (isa :NOUN Airlift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airline-TheWord (and (isa :NOUN AirlineCompany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airliner-TheWord (and (isa :NOUN PassengerAirplane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airman-TheWord (and (isa :NOUN Aviator))
 (frame FN_Member_of_military) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "airplane") Part-TheWord
 (and (isa :NOUN AirplanePart)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airplane-TheWord (and (isa :NOUN Airplane))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn from) fe_itinerary)
    (Srel deviceUse))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "airplane") Ticket-TheWord
 (and (isa :NOUN AirplaneTicket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "airport") Terminal-TheWord
 (and (isa :NOUN AirportTerminalBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airport-TheWord (and (isa :NOUN Airport-Physical))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Airspace-TheWord (and (isa :NOUN AirspaceRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airstrike-TheWord (and (isa :NOUN AerialAttack))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (A performedBy) ((PPFn by) performedBy) (AVP eventOccursAt)
    ((PPFn along) eventOccursAt) ((PPFn in) eventOccursAt)
    ((PPFn of) eventOccursAt) (AJP fe_manner eventOccursAt)
    (NP eventOccursAt temporallyIntersects)
    (N performedBy temporallyIntersects) ((PPFn on) victim)
    ((PPFn against) victim))
   (:GAP (2nd victim))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 1)) ((1 4 0)) ((1 7 0)) ((1 1 0)) ((1 8 0)) ((1 0 0))
   ((1 6 1) (1 10 0)) ((0 0 0) (1 9 0)) ((1 8 0) (1 9 0)) ((1 7 1) (1 8 0))
   ((1 0 0) (1 7 1)) ((1 3 0) (1 8 0)) ((1 2 0) (1 8 0)) ((1 5 0) (1 8 0))
   ((1 4 0) (1 8 0)) ((1 6 0) (1 8 0)) ((1 4 0) (1 8 0) (1 9 0)))))

(FNNounSemtrans (TheList) Aisle-TheWord (and (isa :NOUN Aisle-PathArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ak-47-TheWord (and (isa :NOUN AssaultRifle-AK47))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (NP activeIngredientsOfType deviceUse instrument-UsedAsWeapon))
   (:GAP (DEN activeIngredientsOfType instrument-UsedAsWeapon))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 1 2)) ((0 1 1) (0 1 2)) ((0 1 0) (0 1 1) (0 1 2)))))

(FNNounSemtrans (TheList) Akan-TheWord (and (isa :NOUN AkanLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alarm") Clock-TheWord (and (isa :NOUN AlarmClock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alarm-TheWord (and (isa :NOUN AlarmDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alarm-TheWord (and (isa :NOUN AlarmDevice))
 (frame FN_Noise_makers) (bindingTemplate (TheList (:GAP (DEN deviceUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alb-TheWord (and (isa :NOUN OuterGarment))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Albanian-TheWord (and (isa :NOUN AlbanianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Albino-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance physiologicalConditionAffects Albinism :NOUN))
 (frame FN_Body_description_part)
 (bindingTemplate (TheList (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Album-TheWord (and (isa :NOUN Album-IBO))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alcohol") Still-TheWord
 (and (isa :NOUN Still-Device)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alcohol-TheWord (and (isa :NOUN AlcoholicBeverage))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Alcohol-TheWord (and (isa :NOUN Alcohol-Compound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alcoholic-TheWord (and (isa :NOUN Alcoholic))
 (frame FN_Addiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_addict)) (:GAP (DEN fe_addict))
   (:NOUN (N fe_addict))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Alcoholism-TheWord
 (and (isa :NOUN (AddictionFn Alcohol-Compound))) (frame FN_Addiction)
 (bindingTemplate (TheList (:GEN (Poss fe_addict))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Alder-TheWord (and (isa :NOUN (WoodFn AlderTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alder-TheWord (and (isa :NOUN AlderTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aldosterone-TheWord (and (isa :NOUN Aldosterone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aleut-TheWord (and (isa :NOUN AleutLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alfalfa-TheWord (and (isa :NOUN Alfalfa))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alga-TheWord (and (isa :NOUN Algae)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "algebraic") Number-TheWord
 (and (isa :NOUN AlgebraicNumber)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "algerian") Dinar-TheWord
 (and (isa :NOUN Dinar-Algeria)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "algerian" "monetary") Unit-TheWord
 (and (isa :NOUN (UnitOfMoneyOfGeopoliticalEntityFn Algeria))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alga-TheWord (and (isa :NOUN Algae)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Algol-TheWord (and (isa :NOUN ALGOL)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Algorithm-TheWord (and (isa :NOUN Algorithm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alias-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "alimentary") Canal-TheWord
 (and (isa :NOUN AlimentaryCanal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alimentary") Canal-TheWord
 (and (isa :NOUN DigestiveSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alkaline") Battery-TheWord
 (and (isa :NOUN AlkalineBattery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alkaloid-TheWord (and (isa :NOUN Alkaloid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "all") Fours-TheWord
 (and (isa :NOUN AllFours-CardGame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "all" "in" "one" "business") Machine-TheWord
 (and (isa :NOUN MultiFunctionMachine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "all" "weather") Tire-TheWord
 (and (isa :NOUN AllWeatherTire)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allegation-TheWord (and (isa :NOUN Allegation))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn on) genericPathway-Partial) (Sfin infoTransferred)
    ((PPingFn of) infoTransferred) ((PPingFn over) infoTransferred)
    (Srel infoTransferred) ((PPFn by) performedBy)
    (AJP fe_degree fe_manner performedBy) (N infoTransferred performedBy)
    ((PPFn from) performedBy) (AVP temporallyIntersects)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn against) recipientOfInfo situationTopic)
    ((PPFn concerning) situationTopic)
    ((PPFn to) recipientOfInfo situationTopic)
    ((PPFn in) genericPathway-Partial situationTopic)
    ((PPFn of) infoTransferred situationTopic)
    ((PPFn regarding) situationTopic))
   (:GAP (DEN infoTransferred) (CNI performedBy)
    (DNI infoTransferred situationTopic)
    (INI infoTransferred performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 16 0)) ((1 15 1)) ((1 8 0)) ((1 13 1)) ((1 10 1)) ((1 12 0))
   ((1 11 1)) ((1 3 0)) ((1 2 0)) ((1 15 0)) ((1 10 0)) ((1 7 0)) ((1 7 1))
   ((3 0 0)) ((1 5 0)) ((1 4 0)) ((1 1 0)) ((1 11 1) (1 15 0))
   ((1 14 1) (3 0 0)) ((1 11 1) (3 0 0)) ((1 10 1) (3 0 0)) ((1 8 0) (1 12 0))
   ((1 8 0) (1 11 1)) ((1 5 0) (1 11 1)) ((0 0 0) (1 12 0)) ((0 0 0) (1 11 1))
   ((0 0 0) (1 10 1)) ((1 7 1) (1 10 1)) ((1 6 2) (1 10 1)) ((1 1 0) (3 0 0))
   ((1 1 0) (1 8 0)) ((1 1 0) (1 5 0)) ((1 1 0) (1 7 1)) ((1 15 0) (3 0 0))
   ((1 10 1) (1 14 0)) ((1 0 0) (1 15 0)) ((1 1 0) (1 14 0)) ((1 5 0) (1 6 1))
   ((1 1 0) (1 6 1)) ((0 0 0) (1 13 0)) ((1 5 0) (1 7 0) (1 11 1))
   ((1 6 0) (1 9 0) (1 11 0)))))

(FNNounSemtrans (TheList) Allegory-TheWord
 (and (isa :NOUN AllegorizingSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "allergic") Reaction-TheWord
 (and (isa :NOUN AllergicReaction)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allergist-TheWord (and (isa :NOUN Allergist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allergy-TheWord (and (isa :NOUN AllergicReaction))
 (frame FN_Health_response)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent fe_trigger))
   (:OBLIQUE-OBJECT (N fe_trigger) ((PPFn to) fe_trigger) (VPto fe_trigger))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((0 0 1)) ((2 0 0)) ((0 0 1) (2 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Alleviation-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_affliction))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Alley-TheWord (and (isa :NOUN Alley)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alliance-TheWord
 (and (isa :NOUN Alliance-Organization)) (frame FN_Alliance)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_member_1 hasMembers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_member_2) ((PPFn between) hasMembers)
    ((PPFn of) hasMembers) (AJP fe_descriptor duration purposeOfEvent)
    ((PPFn to) purposeOfEvent) (N fe_descriptor purposeOfEvent))
   (:GAP (DEN fe_alliance) (DNI fe_member_1 hasMembers) (INI hasMembers))
   (:GEN (Poss fe_member_1))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 2 0)) ((1 1 0)) ((0 0 1)) ((1 0 0)) ((1 5 0)) ((1 3 0))
   ((1 1 0) (1 3 2)) ((1 1 0) (1 3 1)) ((1 2 0) (1 3 0)) ((1 1 0) (1 3 0))
   ((1 5 0) (1 5 0)) ((1 0 0) (1 4 0) (3 0 0)) ((0 0 0) (1 0 0) (1 3 2))
   ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Alligator-TheWord (and (isa :NOUN Alligator))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allonym-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allopathy-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allowance-TheWord (and (isa :NOUN Allowance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alloy-TheWord (and (isa :NOUN MetalAlloy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alluvium-TheWord (and (isa :NOUN Alluvium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alluvial") Fan-TheWord (and (isa :NOUN AlluvialFan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ally-TheWord
 (and (isa :NOUN Country) (relationExistsInstance allies Agent-Generic :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Almond-TheWord (and (isa :NOUN (FruitFn AlmondTree)))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Aloe-TheWord (and (isa :NOUN Aloe-Plant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alphabet-TheWord
 (and (isa :NOUN WritingSymbolCharacterSet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alpine") Skiing-TheWord
 (and (isa :NOUN DownhillSkiing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Altar-TheWord (and (isa :NOUN AltarTable))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) activeIngredientsOfType))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Alteration-TheWord
 (and (isa :NOUN (CausingFn IntrinsicStateChangeEvent)))
 (frame FN_Cause_change) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Altercation-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1 fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn over) fe_issue))
   (:GEN (Poss fe_arguer1 fe_arguers))))
 (groupPatterns
  (TheSet ((1 2 0)) ((2 0 1)) ((1 1 0)) ((0 0 1)) ((1 0 0)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Altercation-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1 fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn over) fe_issue))
   (:GEN (Poss fe_arguer1 fe_arguers))))
 (groupPatterns
  (TheSet ((1 2 0)) ((2 0 1)) ((1 1 0)) ((0 0 1)) ((1 0 0)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "alternating") Current-TheWord
 (and (isa :NOUN AlternatingCurrent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alternative") Medicine-TheWord
 (and (isa :NOUN AlternativeMedicine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alternative-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance
       (Kappa (?evt ?poss)
        (and (actors ?evt ?actor)
             (optionsAvailable ?actor ?evt objectSelected ?poss)))
       Event :NOUN))
 (frame FN_Alternatives)
 (bindingTemplate (TheList (:GAP (DNI doneBy fe_situation))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alternator-TheWord (and (isa :NOUN Alternator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Altimeter-TheWord (and (isa :NOUN Altimeter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Altitude-TheWord (and (isa :NOUN Altitude))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Altocumulus-TheWord
 (and (isa :NOUN AltoCumulusCloud)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Altostratus-TheWord
 (and (isa :NOUN AltoStratusCloud)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alumina-TheWord (and (isa :NOUN AluminumOxide-Al2O3))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aluminum") Business-TheWord
 (and (isa :NOUN AluminumIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aluminum") Foil-TheWord
 (and (isa :NOUN AluminumFoil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aluminum-TheWord (and (isa :NOUN Aluminum))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alumnus-TheWord (and (isa :NOUN Graduate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alveolar") Sac-TheWord (and (isa :NOUN AlveolarSac))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alveolus-TheWord (and (isa :NOUN Alveolus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "alzheimer" "^s") Disease-TheWord
 (and (isa :NOUN AlzheimersDisease)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alzheimers-TheWord
 (and (isa :NOUN AlzheimersDisease)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amateur" "radio") Equipment-TheWord
 (and (isa :NOUN AmateurRadioEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amateur-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (VPbrst fe_knowledge) ((PPingFn at) hasSkill))
   (:GAP (DEN affectedAgent))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Amateur-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationInstanceExists amateurAtActionType :NOUN FirstOrderCollection))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amazement-TheWord (and (isa :NOUN Awe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amazon") Kindle-TheWord
 (and (isa :NOUN AmazonKindle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amber-TheWord (and (isa :NOUN Amber)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ambition-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_event objectActedOn) (Poss objectActedOn))
   (:OBLIQUE-OBJECT (VPing duration) (VPto fe_event) ((PPingFn for) fe_event)
    ((PPingFn of) fe_event) ((PPingFn to) fe_event)
    ((PPFn of) fe_event objectActedOn)
    ((PPFn for) objectActedOn fe_focal_participant)
    (AJP fe_degree objectActedOn fe_focal_participant)
    (A duration fe_focal_participant temporallyIntersects)
    (AVP duration temporallyIntersects))
   (:GAP (DNI fe_event objectActedOn fe_focal_participant eventOccursAt))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 8 1)) ((3 0 0)) ((1 6 1) (3 0 0)) ((1 7 1) (1 7 2))
   ((1 1 0) (3 0 0)) ((0 0 1) (1 1 0)) ((1 4 0) (3 0 0)) ((0 0 0) (3 0 0))
   ((1 9 0) (3 0 0)) ((0 0 1) (1 8 0)) ((1 1 0) (1 9 1) (3 0 0))
   ((1 1 0) (1 8 2) (3 0 0)) ((0 0 1) (1 1 0) (1 8 2))
   ((0 0 1) (1 3 0) (3 0 0)) ((0 0 0) (1 0 0) (1 5 1))
   ((1 2 0) (1 9 0) (3 0 0)) ((0 0 1) (1 1 0) (1 8 0))
   ((0 0 0) (1 6 0) (1 8 0)) ((0 0 1) (1 6 1) (1 7 0))
   ((1 1 0) (1 7 0) (3 0 0)) ((0 1 0) (1 1 0) (1 8 0) (3 0 0))
   ((0 0 1) (1 5 0) (1 8 0) (3 0 0)))))

(FNNounSemtrans (TheList) Ambulance-TheWord (and (isa :NOUN Ambulance))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ambush-TheWord (and (isa :NOUN AmbushingATangible))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy victim))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) (AVP eventOccursAt)
    ((PPFn about) eventOccursAt) ((PPFn across) eventOccursAt)
    ((PPFn between) eventOccursAt) ((PPFn near) eventOccursAt)
    (AJP fe_depictive fe_event_description fe_manner eventOutcomes
     from-Generic)
    ((PPFn at) temporallyIntersects) ((PPFn later) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects) (NP temporallyIntersects)
    (N performedBy fe_depictive fe_manner eventOccursAt temporallyIntersects)
    ((PPFn against) victim) ((PPFn on) eventOccursAt victim)
    ((PPFn of) victim))
   (:GAP (INI performedBy victim))))
 (groupPatterns
  (TheSet ((1 14 0)) ((0 0 1)) ((1 11 4)) ((1 5 0)) ((1 9 0)) ((1 4 0))
   ((1 3 0)) ((1 2 0)) ((1 11 3)) ((1 11 2)) ((1 6 2)) ((1 6 1)) ((1 11 1))
   ((1 6 0)) ((1 0 0)) ((0 0 0)) ((1 11 0)) ((1 9 0) (1 13 1))
   ((1 9 0) (1 10 0)) ((1 1 0) (1 6 3)) ((1 6 2) (1 11 3)) ((0 0 0) (1 12 0))
   ((1 0 0) (1 9 0)) ((0 0 1) (1 1 0) (1 10 0)) ((1 6 2) (1 6 4) (1 9 1))
   ((0 0 0) (1 6 0) (1 6 2) (1 7 0) (1 8 0) (1 13 0)))))

(FNNounSemtrans (TheList) Ameba-TheWord (and (isa :NOUN Amoeba))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amendment-TheWord (and (isa :NOUN Amendment-PCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amends-TheWord (and (isa :NOUN Compensation))
 (frame FN_Reparation)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn by) fe_benefiting_action)
    ((PPFn with) fe_benefiting_action fe_injured_party)
    ((PPFn to) fe_injured_party) ((PPFn for) fe_injury)
    ((PPFn at) eventOccursAt) ((PPFn before) temporallyIntersects)
    (AJP temporallyIntersects) (AVP temporallyIntersects)
    ((PPFn in) temporallyIntersects))
   (:GAP (INI fe_benefiting_action) (DNI fe_benefiting_action fe_injury)
    (CNI perpetrator))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 1 0) (1 8 0)) ((0 0 0) (1 1 0) (1 7 0))
   ((0 0 0) (1 4 0) (1 6 0)) ((0 0 0) (1 0 0) (1 2 0))
   ((0 0 0) (1 1 1) (1 3 0)))))

(FNNounSemtrans (TheList "american") Bison-TheWord
 (and (isa :NOUN AmericanBison)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american" "black") Bear-TheWord
 (and (isa :NOUN BlackBear)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american") Car-TheWord
 (and (isa :NOUN AmericanAutomobile)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american") Dollar-TheWord
 (and (isa :NOUN Dollar-UnitedStates)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american") Football-TheWord
 (and (isa :NOUN Football-American)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american") Larch-TheWord
 (and (isa :NOUN AmericanLarchTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american" "revolutionary") Leader-TheWord
 (and (isa :NOUN AmericanRevolutionaryLeader)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american" "staffordshire") Terrier-TheWord
 (and (isa :NOUN Terrier-AmericanStaffordshire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american" "standard" "code" "for" "information")
 Interchange-TheWord (and (isa :NOUN ASCII)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american") State-TheWord
 (and (isa :NOUN State-UnitedStates)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) American-TheWord (and (isa :NOUN UnitedStatesPerson))
 (frame FN_People_by_origin)
 (bindingTemplate
  (TheList
   (:GAP (DEN comesFrom-Generic fe_person) (2nd comesFrom-Generic fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "american" "water") Spaniel-TheWord
 (and (isa :NOUN AmericanWaterSpaniel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Americium-TheWord (and (isa :NOUN Americium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amerindian-TheWord
 (and (isa :NOUN EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amethyst-TheWord (and (isa :NOUN Amethyst-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amharic-TheWord (and (isa :NOUN AmharicLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amigo-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:GAP (DEN fe_partner_1 fe_partner_2))
   (:GEN (Poss fe_partner_1 fe_partner_2)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns (TheSet ((1 0 0)) ((1 0 1)) ((2 0 0)) ((1 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Amine-TheWord (and (isa :NOUN Amine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amino") Acid-TheWord (and (isa :NOUN AminoAcid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amish") Sect-TheWord (and (isa :NOUN AmishReligion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ammo-TheWord (and (isa :NOUN ProjectileWeapon))
 (frame FN_Ammunition)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) ((PPFn for) deviceUse))
   (:GAP (DEN typePrimaryFunction-DeviceUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Ammonia-TheWord (and (isa :NOUN Ammonia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ammonia") Water-TheWord
 (and (isa :NOUN (SolutionFn (LiquidFn Water) Ammonia))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ammonium-TheWord (and (isa :NOUN AmmoniumIon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ammunition") Belt-TheWord
 (and (isa :NOUN AmmunitionBelt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ammunition-TheWord (and (isa :NOUN ProjectileWeapon))
 (frame FN_Ammunition)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) deviceUse) (VPto deviceUse))
   (:GAP (DEN typePrimaryFunction-DeviceUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Amnesia-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amnion-TheWord (and (isa :NOUN AmnioticSac))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amount-TheWord (and (isa :NOUN Amount))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject)
    (AJP fe_q_prop fe_quantity))
   (:GAP (DNI massOfObject) (DEN massOfObject fe_quantity))
   (:APPOSITIVE (NP fe_quantity))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 0 1) (0 1 1)) ((0 0 1) (0 1 0)) ((0 0 0) (0 1 0))
   ((0 0 1) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Amount-TheWord (and (isa :NOUN Amount))
 (frame FN_Quantity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) objectActedOn)
    ((PPFn at) fe_value))
   (:GAP (DEN fe_quantity) (INI fe_value)) (:APPOSITIVE (NP fe_value))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (0 2 0))
   ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "amour") Propre-TheWord (and (isa :NOUN Vanity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ampere-TheWord (and (isa :NOUN Ampere))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ampersand-TheWord
 (and (isa :NOUN Ampersand-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphetamine-TheWord (and (isa :NOUN Amphetamine))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphibia-TheWord (and (isa :NOUN Amphibian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphibian-TheWord (and (isa :NOUN Amphibian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphibian-TheWord (and (isa :NOUN AmphibiousVehicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphibian-TheWord (and (isa :NOUN FloatPlane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amphibious") Assault-TheWord
 (and (isa :NOUN AmphibiousAssault)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amphibious") Operation-TheWord
 (and (isa :NOUN AmphibiousOperation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphitheater-TheWord (and (isa :NOUN Amphitheater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amphora-TheWord (and (isa :NOUN Jar))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (N activeIngredientsOfType))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Amplifier-TheWord (and (isa :NOUN Amplifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ampule-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ampule-TheWord (and (isa :NOUN Ampule))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amputation-TheWord (and (isa :NOUN Amputation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amusement") Park-TheWord
 (and (isa :NOUN AmusementPark)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "amyotrophic" "lateral") Sclerosis-TheWord
 (and (isa :NOUN AmyotrophicLateralSclerosis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anagrams-TheWord (and (isa :NOUN AnagramGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anal") Personality-TheWord
 (and (isa :NOUN AnalRetentivePersonality)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Analgesic-TheWord (and (isa :NOUN Analgesic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Analysis-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation) ((PPFn for) fe_ground)
    ((PPFn on) fe_ground) (A fe_ground fe_manner)
    (AJP subjectOfMentalSituation fe_manner)
    (N subjectOfMentalSituation fe_ground by-Underspecified)
    ((PPFn of) fe_ground fe_phenomenon))
   (:GAP (CNI subjectOfMentalSituation)
    (DNI subjectOfMentalSituation fe_ground)
    (INI subjectOfMentalSituation fe_ground))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 5 2)) ((3 0 0)) ((1 0 0)) ((1 5 0)) ((1 3 0)) ((1 2 0))
   ((1 6 0)) ((1 5 1)) ((1 4 1) (1 6 0)) ((1 0 0) (1 6 1)) ((1 1 0) (1 5 2))
   ((1 3 1) (1 6 0)) ((1 6 0) (3 0 0)) ((1 5 1) (3 0 0)) ((1 0 0) (1 6 0))
   ((1 4 0) (1 6 0)) ((0 0 0) (1 4 1) (1 6 0)))))

(FNNounSemtrans (TheList) Analyst-TheWord (and (isa :NOUN Analyst))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Analyst-TheWord (and (isa :NOUN Psychoanalyst))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Analyst-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation fe_ground))
   (:OBLIQUE-OBJECT (AJP fe_ground)
    (N fe_ground subjectOfInspection fe_phenomenon)
    ((PPFn of) fe_ground fe_phenomenon)
    (NP subjectOfMentalSituation fe_ground fe_phenomenon))
   (:GAP (DEN subjectOfMentalSituation) (DNI fe_ground) (2nd fe_ground)
    (INI fe_ground fe_phenomenon) (CNI fe_ground fe_phenomenon))
   (:GEN (Poss fe_ground)) (:APPOSITIVE (NP subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 1 2)) ((1 1 1)) ((1 2 0)) ((1 3 1)) ((0 0 1)) ((1 1 0)) ((1 0 0))
   ((0 0 0) (1 2 0)) ((1 2 0) (1 3 0)) ((1 2 1) (1 3 0)) ((1 1 2) (3 0 0))
   ((1 1 2) (1 3 1)) ((1 1 0) (4 0 0)) ((1 2 0) (1 3 0) (1 3 2)))))

(FNNounSemtrans (TheList) Anarchism-TheWord (and (isa :NOUN Anarchism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anarchy-TheWord (and (isa :NOUN Anarchy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anatomy-TheWord
 (and (isa :NOUN Anatomy-FieldOfStudy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ancestor-TheWord
 (and (isa :NOUN Organism-Whole)
      (relationInstanceExists ancestors :NOUN Organism-Whole))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_alter) (AJP fe_descriptor) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Anchor-TheWord (and (isa :NOUN Anchor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anchovy-TheWord (and (isa :NOUN Anchovy))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ancient") Greek-TheWord
 (and (isa :NOUN AncientGreekLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anconeous") Muscle-TheWord (and (isa :NOUN Anconeus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "and") Gate-TheWord (and (isa :NOUN AndGate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "and2") Gate-TheWord (and (isa :NOUN And2Gate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Androgen-TheWord (and (isa :NOUN Androgen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Android-TheWord (and (isa :NOUN Android))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Androsterone-TheWord (and (isa :NOUN Androsterone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anemia-TheWord (and (isa :NOUN Anemic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anesthesiologist-TheWord
 (and (isa :NOUN Anesthesiologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anesthetic-TheWord (and (isa :NOUN Anesthetic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angel-TheWord (and (isa :NOUN Angel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anger-TheWord (and (isa :NOUN Anger))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn eventAffectsBodyPart))
   (:OBLIQUE-OBJECT (VPing fe_degree) (AJP fe_degree objectActedOn)
    (N objectActedOn) ((PPFn among) objectActedOn) ((PPFn of) objectActedOn)
    ((PPingFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn in) eventAffectsBodyPart) ((PPFn on) eventAffectsBodyPart)
    ((PPFn towards) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn against) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn with) (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn over) (InverseBinaryPredicateFn explaines-Generic) situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (INI objectActedOn eventAffectsBodyPart))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 10 0)) ((1 9 0)) ((1 7 0)) ((1 6 0)) ((0 0 1))
   ((3 0 0)) ((1 4 0)) ((1 3 0)) ((0 0 0)) ((1 2 0)) ((0 0 0) (1 14 0))
   ((1 12 0) (3 0 0)) ((1 11 0) (3 0 0)) ((1 8 0) (3 0 0)) ((1 13 0) (3 0 0))
   ((1 9 0) (3 0 0)) ((0 0 0) (1 13 0)) ((0 0 0) (1 10 0)) ((1 1 1) (1 9 0))
   ((1 1 0) (1 13 1)) ((1 1 0) (1 8 0)) ((1 0 0) (3 0 0))
   ((1 5 0) (1 10 0) (3 0 0)) ((1 5 0) (1 9 0) (3 0 0)))))

(FNNounSemtrans (TheList) Angiosperm-TheWord (and (isa :NOUN FloweringPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angiospermae-TheWord (and (isa :NOUN FloweringPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "angiospermous") Tree-TheWord
 (and (isa :NOUN
       (CollectionIntersectionFn (TheSet FloweringPlant Tree-ThePlant))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angle-TheWord (and (isa :NOUN AngularDistance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anglicanism-TheWord
 (and (isa :NOUN AnglicanReligion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angolan-TheWord (and (isa :NOUN AngolaPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angora-TheWord (and (isa :NOUN AngoraRabbit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "angora") Wool-TheWord (and (isa :NOUN AngoraWool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angstrom-TheWord (and (isa :NOUN Angstrom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anguish-TheWord (and (isa :NOUN Anguish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "angular") Distance-TheWord
 (and (isa :NOUN AngularDistance)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "angular") Position-TheWord
 (and (isa :NOUN AngularPosition-SpatialPredicate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "angular") Unit-TheWord
 (and (isa :NOUN UnitOfAngularDistance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal") Container-TheWord
 (and (isa :NOUN AnimalContainer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal" "drawn") Cart-TheWord
 (and (isa :NOUN AnimalDrawnCart)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal" "drawn") Plow-TheWord
 (and (isa :NOUN AnimalDrawnPlow)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal") Foot-TheWord
 (and (isa :NOUN Foot-AnimalBodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal") Harness-TheWord
 (and (isa :NOUN Harness-Animal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal") Husbandry-TheWord
 (and (isa :NOUN HusbandryOfAnimal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal") Restraint-TheWord
 (and (isa :NOUN VeterinaryAnimalRestraint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animal") Soap-TheWord (and (isa :NOUN AnimalSoap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Animal-TheWord (and (isa :NOUN NonHumanAnimal))
 (frame FN_Animals)
 (bindingTemplate (TheList (:SUBJECT (NP fe_animal)) (:GAP (DEN fe_animal))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Animal-TheWord (and (isa :NOUN NonHumanAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Animal-TheWord (and (isa :NOUN NonPersonAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Animalia-TheWord (and (isa :NOUN Animal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "animation") Cel-TheWord
 (and (isa :NOUN AnimationCelAsArtForm)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Animation-TheWord
 (and (isa :NOUN Animation-MovingImage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Animation-TheWord (and (isa :NOUN Living))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anime-TheWord (and (isa :NOUN Anime)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anion-TheWord (and (isa :NOUN Anion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anise-TheWord (and (isa :NOUN Anise)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ankle") Bracelet-TheWord (and (isa :NOUN Anklet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ankle-TheWord (and (isa :NOUN Ankle))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 1) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Anklebone-TheWord (and (isa :NOUN Talus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anklet-TheWord (and (isa :NOUN Anklet))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) (N mainConstituent)
    (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 0 0) (0 2 1)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Annihilation-TheWord
 (and (isa :NOUN DestructionEvent)) (frame FN_Destroying)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Annihilation-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT (NP instrument-Generic) ((PPFn of) victim) (N victim))
   (:GAP (INI causes-Underspecified killers victim)
    (DNI causes-Underspecified victim))))
 (groupPatterns (TheSet ((1 2 0)) ((1 0 0)) ((0 0 0)) ((1 1 0)))))

(FNNounSemtrans (TheList) Announcement-TheWord (and (isa :NOUN Announcement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (VPbrst infoTransferred)
    (QUO infoTransferred) (Sfin infoTransferred) (VPing infoTransferred)
    (VPto infoTransferred) ((PPFn by) performedBy) (NP temporallyIntersects)
    ((PPFn at) temporallyIntersects)
    (N infoTransferred performedBy temporallyIntersects)
    (AJP temporallyIntersects) ((PPFn concerning) situationTopic)
    ((PPFn on) situationTopic) ((PPFn about) infoTransferred situationTopic)
    ((PPFn of) infoTransferred situationTopic))
   (:GAP (DNI recipientOfInfo) (CNI performedBy)
    (INI infoTransferred performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 12 0)) ((1 11 0)) ((1 3 0)) ((1 14 0)) ((1 13 0)) ((1 4 0))
   ((1 0 0)) ((1 10 0) (3 0 0)) ((1 6 0) (1 12 0)) ((0 0 0) (1 14 1))
   ((0 0 0) (1 13 1)) ((1 3 0) (1 9 2)) ((1 5 0) (3 0 0)) ((1 3 0) (3 0 0))
   ((1 3 0) (1 6 0)) ((1 14 0) (3 0 0)) ((1 6 0) (1 14 0)) ((1 9 1) (1 14 0))
   ((1 6 0) (1 9 0)) ((1 0 0) (1 6 0)) ((0 0 0) (1 0 0))
   ((1 3 0) (1 6 0) (1 9 2)) ((0 0 0) (1 14 0) (3 0 0))
   ((1 1 0) (1 7 0) (3 0 0)) ((0 0 0) (1 0 0) (1 2 0) (1 8 0)))))

(FNNounSemtrans (TheList) Annoyance-TheWord
 (and (isa :NOUN SomethingExisting)
      (evokes (PositiveAmountFn Irritation) :NOUN))
 (frame FN_Stimulus_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT (Sub situationConstituents) (AJP fe_degree)
    ((PPFn for) objectActedOn))
   (:GAP (DEN (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Anonymity-TheWord (and (isa :NOUN Anonymity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anorexia-TheWord (and (isa :NOUN AnorexiaNervosa))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Another-TheWord (and (isa :NOUN Bonus))
 (frame FN_Increment)
 (bindingTemplate
  (TheList (:SUBJECT (VPto fe_added_set))
   (:GAP (DNI fe_class fe_initial_set) (DEN fe_added_set fe_initial_set))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Answer-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn out) recipientOfInfo)
    ((PPFn in) genericPathway-Partial) (Sfin infoTransferred)
    (AJP infoTransferred) (NP recipientOfInfo infoTransferred)
    ((PPFn of) infoTransferred) (QUO infoTransferred) ((PPFn from) performedBy)
    ((PPFn about) situationTopic) ((PPFn regarding) situationTopic)
    ((PPFn as) situationTopic) ((PPFn on) situationTopic)
    (VPing infoTransferred situationTopic)
    ((PPFn to) situationTopic fe_trigger)
    ((PPFn for) recipientOfInfo fe_trigger))
   (:GAP (DEN infoTransferred) (DNI performedBy fe_trigger))
   (:GEN (Poss recipientOfInfo performedBy))))
 (groupPatterns
  (TheSet ((2 13 1)) ((2 14 1)) ((2 12 1)) ((2 13 0)) ((2 11 0)) ((2 10 0))
   ((2 8 0)) ((4 0 1)) ((2 7 0)) ((0 0 1)) ((2 12 0)) ((2 2 0)) ((2 6 0))
   ((2 5 0)) ((2 4 1)) ((2 0 0)) ((2 14 0)) ((2 13 1) (4 0 1))
   ((0 0 1) (2 13 1)) ((0 0 1) (2 14 1)) ((2 11 0) (4 0 1)) ((0 0 1) (2 10 0))
   ((2 6 0) (2 13 1)) ((2 3 0) (2 13 1)) ((2 2 0) (2 9 0)) ((0 0 1) (2 12 0))
   ((2 2 0) (4 0 1)) ((2 6 0) (2 7 0)) ((2 4 1) (4 0 1)) ((0 0 1) (2 1 0))
   ((0 0 0) (2 7 0)) ((0 0 1) (2 4 0)) ((0 0 0) (4 0 0))
   ((0 0 1) (1 0 0) (2 8 0)) ((0 0 0) (2 7 0) (4 0 0))
   ((0 0 1) (2 2 0) (2 14 0) (4 0 1)))))

(FNNounSemtrans (TheList) Answer-TheWord (and (isa :NOUN ReplyingToAQuestion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ant-TheWord (and (isa :NOUN Ant)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antacid-TheWord (and (isa :NOUN Antacid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anteater-TheWord (and (isa :NOUN Anteater))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antechamber-TheWord (and (isa :NOUN Lobby-Room))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antelope-TheWord (and (isa :NOUN Antelope))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "antenna") Cord-TheWord (and (isa :NOUN AntennaCord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "antenna" "pedestal") Mount-TheWord
 (and (isa :NOUN AntennaPedestalMount)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antenna-TheWord
 (and (isa :NOUN Antenna-AnimalBodyPart)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Antenna-TheWord (and (isa :NOUN Antenna))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anterior" "cerebral") Artery-TheWord
 (and (isa :NOUN AnteriorCerebralArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anterior" "cerebral") Vein-TheWord
 (and (isa :NOUN AnteriorCerebralVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anteroom-TheWord (and (isa :NOUN Lobby-Room))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anther-TheWord (and (isa :NOUN Anther))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anthracosis-TheWord
 (and (isa :NOUN BlackLungDisease)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anthrax") Infection-TheWord
 (and (isa :NOUN AnthraxInfection)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anthrax-TheWord (and (isa :NOUN Anthrax-Bacterium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anthropology-TheWord (and (isa :NOUN Anthropology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anti" "glare" "computer") Screen-TheWord
 (and (isa :NOUN AntiGlareComputerScreen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anti" "lock") Brake-TheWord
 (and (isa :NOUN AntilockBrakeSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anti" "submarine") Rocket-TheWord
 (and (isa :NOUN AntiSubmarineRocket)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "anti" "theft") Device-TheWord
 (and (isa :NOUN AntiTheftDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antiaircraft-TheWord
 (and (isa :NOUN AntiAircraftGun)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "antibacterial") Cleanser-TheWord
 (and (isa :NOUN AntibacterialCleanser)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antibiotic-TheWord (and (isa :NOUN Antibiotic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antic-TheWord (and (isa :NOUN Prank)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anticipation-TheWord
 (and (isa :NOUN Anticipation-Feeling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anticonvulsant-TheWord
 (and (isa :NOUN Anticonvulsant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antidepressant-TheWord
 (and (isa :NOUN Antidepressant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antidiarrheal-TheWord (and (isa :NOUN AntiDiarrheal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antiemetic-TheWord (and (isa :NOUN AntiEmetic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antifreeze-TheWord (and (isa :NOUN AntiFreeze))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antihistamine-TheWord (and (isa :NOUN Antihistamine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antihypertensive-TheWord
 (and (isa :NOUN AntihypertensiveDrugSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antimony-TheWord (and (isa :NOUN Antimony))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antiperspirant-TheWord
 (and (isa :NOUN Antiperspirant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antipyretic-TheWord (and (isa :NOUN Antipyretic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antique-TheWord (and (isa :NOUN Antique))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antiseptic-TheWord (and (isa :NOUN Antiseptic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Antler-TheWord (and (isa :NOUN Antler))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (AJP fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing) (N ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 3 0)) ((1 1 0)) ((1 1 0) (3 0 0))
   ((1 1 0) (1 2 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Anus-TheWord (and (isa :NOUN Anus))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Aorta-TheWord (and (isa :NOUN Aorta)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aortic") Arch-TheWord (and (isa :NOUN AorticArch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aortic") Valve-TheWord (and (isa :NOUN AorticValve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apache-TheWord (and (isa :NOUN ApacheLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apache-TheWord (and (isa :NOUN EthnicGroupOfApaches))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "apartment") Building-TheWord
 (and (isa :NOUN ApartmentBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apartment-TheWord (and (isa :NOUN ApartmentUnit))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) (AJP activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Apathy-TheWord (and (isa :NOUN Listlessness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ape-TheWord (and (isa :NOUN Ape)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apex-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts)) (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Apocalypse-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N objectActedOn) (AVP temporallyIntersects)
    ((PPFn of) fe_undesirable_event))
   (:GAP (INI objectActedOn) (DEN fe_undesirable_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)) ((1 2 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Aponeurosis-TheWord (and (isa :NOUN Aponeurosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apoptosis-TheWord (and (isa :NOUN Apoptosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apostrophe-TheWord
 (and (isa :NOUN Apostrophe-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) App-TheWord (and (isa :NOUN ApplicationProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apparatus-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP deviceUse) (N deviceUse) ((PPingFn for) deviceUse)
    (VPto deviceUse) ((PPFn for) deviceUse fe_user))
   (:GAP (DEN fe_gizmo) (DNI deviceUse fe_user)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 2 0)) ((0 4 0)) ((0 1 0)) ((0 0 0))
   ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "apparel") Industry-TheWord
 (and (isa :NOUN FashionIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apparel-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N clothingStyle) (AJP fe_descriptor wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 1)) ((2 0 0)) ((0 0 0)) ((0 1 0)) ((0 1 0) (2 0 1)))))

(FNNounSemtrans (TheList) Appeal-TheWord
 (and (isa :NOUN Requesting-CommunicationAct)) (frame FN_Appeal)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_convict))
   (:OBLIQUE-OBJECT (VPto caseTriedIn) ((PPFn to) caseTriedIn)
    ((PPFn against) fe_decision) ((PPFn by) fe_representative))
   (:GAP (DNI fe_convict caseTriedIn)
    (INI fe_convict caseTriedIn fe_representative))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Appeal-TheWord (and (isa :NOUN Charm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appeal-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP recipientOfInfo infoTransferred performedBy situationTopic))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPingFn to) recipientOfInfo)
    (AJP meansOfInfoTransfer) (N meansOfInfoTransfer)
    ((PPFn on) meansOfInfoTransfer) (VPto infoTransferred)
    (Sfin infoTransferred) (Sforto infoTransferred) ((PPFn by) performedBy)
    ((PPFn from) performedBy situationTopic)
    ((PPFn for) infoTransferred situationTopic) ((PPFn over) situationTopic)
    (NP situationTopic) ((PPFn against) situationTopic)
    ((PPFn concerning) situationTopic) ((PPingFn against) situationTopic)
    ((PPingFn for) situationTopic))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 16 0)) ((1 15 0)) ((1 14 0)) ((1 13 0)) ((0 0 3)) ((1 12 0))
   ((3 0 0)) ((1 9 0)) ((1 8 0)) ((1 5 0)) ((1 10 0)) ((1 3 0)) ((1 1 0))
   ((1 0 0)) ((0 0 3) (3 0 0)) ((1 9 0) (1 11 0)) ((1 7 0) (3 0 0))
   ((1 7 0) (1 8 0)) ((1 6 0) (3 0 0)) ((1 10 0) (3 0 0)) ((0 0 2) (1 10 0))
   ((0 0 3) (1 4 0)) ((1 2 0) (1 9 0)) ((1 4 0) (1 10 0)) ((0 0 1) (1 3 0))
   ((1 0 0) (1 9 1)) ((1 0 0) (1 5 0)) ((0 0 2) (1 2 0) (1 10 1))
   ((1 0 0) (1 5 0) (3 0 0)) ((1 0 0) (1 5 0) (1 8 0))
   ((1 0 0) (1 8 0) (1 10 0)) ((0 0 2) (1 0 0) (1 10 0))
   ((0 0 0) (1 5 0) (1 9 0)))))

(FNNounSemtrans (TheList) Appearance-TheWord
 (and (isa :NOUN SomethingAppearingSomewhere)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appellant-TheWord
 (and (isa :NOUN Requesting-CommunicationAct)
      (relationInstanceExists recipientOfInfo-Intended :NOUN AppealsCourt))
 (frame FN_Appeal) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appendage-TheWord
 (and (isa :NOUN Appendage-AnimalBodyPart)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn in) fe_attachment) (Sfin fe_attachment)
    (AJP fe_attachment fe_descriptor) ((PPFn of) ownerOfProprietaryThing)
    (N fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 4 1)) ((1 2 1)) ((1 4 0)) ((1 0 0)) ((1 2 0))
   ((1 2 1) (3 0 0)) ((0 0 0) (1 2 1)) ((0 0 0) (1 4 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 2 1) (1 2 1)) ((0 0 0) (1 2 0) (1 2 1))
   ((1 1 0) (1 2 1) (1 2 1)))))

(FNNounSemtrans (TheList) Appendectomy-TheWord (and (isa :NOUN Appendectomy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appendix-TheWord (and (isa :NOUN Appendix-OrganPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appetizer-TheWord (and (isa :NOUN Appetizer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Applause-TheWord
 (and (isa :NOUN (MassEventOfTypeFn Applauding-Clapping)))
 (frame FN_Performing_arts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "apple") Juice-TheWord
 (and (isa :NOUN (JuiceFn (FruitFn AppleTree)))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "apple") Pie-TheWord (and (isa :NOUN ApplePie))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apple-TheWord (and (isa :NOUN (FruitFn AppleTree)))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0) (0 1 0))
   ((0 0 0) (0 1 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "apple") Tree-TheWord (and (isa :NOUN AppleTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Applet-TheWord
 (and (isa :NOUN Applet-ComputerProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Applewood-TheWord
 (and (isa :NOUN (WoodFn AppleTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appliance-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_power_source) (AJP fe_power_source deviceUse)
    ((PPingFn for) deviceUse) (VPto deviceUse)
    (N fe_power_source deviceUse fe_user) ((PPFn for) fe_user))
   (:GAP (DEN fe_gizmo))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 2)) ((0 3 0)) ((0 2 0)) ((0 4 1)) ((0 1 1)) ((0 4 0))
   ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList "application") Form-TheWord
 (and (isa :NOUN ApplicationForm)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Application-TheWord
 (and (isa :NOUN ApplicationProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Application-TheWord
 (and (isa :NOUN ApplyingSomethingToSurface)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Application-TheWord
 (and (isa :NOUN ApplyingForSomething)) (frame FN_Purpose)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Application-TheWord (and (isa :NOUN UsingADevice))
 (frame FN_Using)
 (bindingTemplate
  (TheList (:SUBJECT (NP instrument-Generic))
   (:OBLIQUE-OBJECT (A doneBy) ((PPFn of) instrument-Generic)
    ((PPFn for) purposeOfEvent) (AJP doneBy fe_manner purposeOfEvent))
   (:GAP (INI doneBy) (DEN purposeOfEvent))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 0 0) (1 3 2)) ((0 0 0) (1 0 0)) ((1 1 0) (1 3 0))
   ((0 0 0) (1 2 0) (1 3 1)))))

(FNNounSemtrans (TheList "appointment") Book-TheWord
 (and (isa :NOUN AppointmentBook)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appointment-TheWord
 (and (isa :NOUN AppointingSomeoneToAPosition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appointment-TheWord (and (isa :NOUN Appointment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "appointment") Time-TheWord
 (and (isa :NOUN Date)
      (relationExistsInstance appointmentTime Appointment :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appraisal-TheWord (and (isa :NOUN Evaluating))
 (frame FN_Assessing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appraisal-TheWord (and (isa :NOUN Appraising))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appraiser-TheWord (and (isa :NOUN Appraiser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apprehension-TheWord
 (and (isa :NOUN ArrestingSomeone)) (frame FN_Arrest)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_manner) ((PPFn for) fe_offense)
    ((PPFn of) fe_suspect))
   (:GEN (Poss fe_suspect))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Apprehension-TheWord (and (isa :NOUN Fear))
 (frame FN_Fear) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apprehension-TheWord (and (isa :NOUN Dread))
 (frame FN_Fear) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apprenticeship-TheWord
 (and (isa :NOUN Apprenticeship)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Approach-TheWord (and (isa :NOUN Approaching))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP to-Generic))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    ((PPFn of) objectMoving))
   (:GAP (DNI to-Generic objectMoving) (CNI objectMoving))
   (:GEN (Poss objectMoving))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0)) ((3 0 0)) ((1 2 0)))))

(FNNounSemtrans (TheList) Approach-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A fe_descriptor) (N fe_descriptor)
    (VPed fe_descriptor) ((PPFn to) purposeOfEvent))
   (:GAP (DEN by-Underspecified) (DNI doneBy purposeOfEvent))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((3 0 0)) ((1 0 0))
   ((1 0 0) (1 4 0)) ((1 1 0) (1 4 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 4 0) (3 0 0)))))

(FNNounSemtrans (TheList) Appropriation-TheWord
 (and (isa :NOUN AppropriatingSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Approval-TheWord (and (isa :NOUN GrantingPermission))
 (frame FN_Grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Approval-TheWord (and (isa :NOUN Approval))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Approval-TheWord
 (and (isa :NOUN Approval-CommunicationAct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) April-TheWord (and (isa :NOUN April))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    (NP (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "april" "fool" "^s") Day-TheWord
 (and (isa :NOUN AprilFoolsDay)) (frame FN_Commemorative)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apron-TheWord (and (isa :NOUN Apron))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_descriptor) ((PPFn with) fe_descriptor)
    (AJP fe_descriptor itemWorn) (N mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss deviceUse wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 3 1)) ((0 3 0)) ((0 0 0)) ((0 2 0))
   ((0 3 0) (2 0 1)) ((0 3 0) (2 0 0)) ((0 2 1) (0 3 0)) ((0 2 0) (2 0 1))
   ((0 2 0) (2 0 0)) ((0 2 0) (0 3 1)) ((0 1 0) (0 3 0)) ((0 2 0) (0 3 0))
   ((0 2 0) (0 2 0)) ((0 2 0) (0 2 0) (2 0 1)))))

(FNNounSemtrans (TheList) Aquamarine-TheWord (and (isa :NOUN Aquamarine-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aquarium-TheWord (and (isa :NOUN Aquarium-Container))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aquarius-TheWord (and (isa :NOUN Aquarius-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aqueous") Humor-TheWord
 (and (isa :NOUN AqueousHumor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "arab") League-TheWord
 (and (isa :NOUN LeagueOfArabStates)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arab-TheWord (and (isa :NOUN EthnicGroupOfArabs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arabian-TheWord (and (isa :NOUN ArabianHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arabic-TheWord (and (isa :NOUN ArabicLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arachnid-TheWord (and (isa :NOUN Arachnid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arachnida-TheWord (and (isa :NOUN Arachnid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arachnoid-TheWord (and (isa :NOUN ArachnoidMater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arapaho-TheWord (and (isa :NOUN ArapahoLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arc-TheWord (and (isa :NOUN Arc)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arcadia-TheWord
 (and (isa :NOUN Arkadhia-DepartmentGreece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arch-TheWord (and (isa :NOUN Archway-PartOfBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Archaeologist-TheWord
 (and (isa :NOUN Researcher)
      (relationInstanceExists domainsOfSpecialization :NOUN
       (ResearchInFn Archaeology)))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_descriptor)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Archeology-TheWord (and (isa :NOUN Archaeology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Archipelago-TheWord (and (isa :NOUN Archipelago))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Architect-TheWord (and (isa :NOUN Architect))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Architecture-TheWord
 (and (isa :NOUN (DesignFn HumanShelterConstruction))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Architecture-TheWord
 (and (isa :NOUN ArchitecturalDesign)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Architecture-TheWord (and (isa :NOUN Building))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Archpriest-TheWord (and (isa :NOUN Archpriest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arctic-TheWord (and (isa :NOUN Galosh))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Are-TheWord (and (isa :NOUN Are-UnitOfArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "area") Code-TheWord (and (isa :NOUN AreaCode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Area-TheWord (and (isa :NOUN Area))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn areaOfObject)))
   (:OBLIQUE-OBJECT (NP eventOccursAt quantityMeasured)
    ((PPFn to) quantityMeasured) (N (InverseBinaryPredicateFn areaOfObject))
    ((PPFn of) quantityMeasured (InverseBinaryPredicateFn areaOfObject)))
   (:GAP (DEN hasPhysicalQuantity)
    (DNI (InverseBinaryPredicateFn areaOfObject)))))
 (groupPatterns
  (TheSet ((1 0 1)) ((1 3 0)) ((1 1 0) (1 3 1)) ((0 0 0) (1 3 0))
   ((1 2 0) (1 3 0)) ((1 0 1) (1 3 1)) ((0 0 0) (1 0 1)) ((1 0 1) (1 2 0))
   ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Area-TheWord (and (isa :NOUN FieldOfStudy))
 (frame FN_Fields)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) processTypeForAccomplishmentType))
   (:GAP (INI processTypeForAccomplishmentType fe_practitioner))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Area-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) (VPbrst fe_descriptor)
    (N fe_inherent_purpose (InverseBinaryPredicateFn nameString))
    ((PPFn of) parts fe_container_possessor fe_inherent_purpose
     fe_relative_location)
    (A fe_relative_location)
    (AJP fe_container_possessor fe_descriptor fe_relative_location)
    ((PPFn around) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 2)) ((0 4 0)) ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 5 1)) ((0 3 1)) ((0 5 0)) ((0 3 0)) ((0 3 2) (0 3 3))
   ((0 2 0) (0 5 1)))))

(FNNounSemtrans (TheList) Area-TheWord (and (isa :NOUN GeographicalRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "area") Unit-TheWord (and (isa :NOUN UnitOfArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arena-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arginine-TheWord (and (isa :NOUN Arginine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Argon-TheWord (and (isa :NOUN Argon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Argument-TheWord (and (isa :NOUN Debate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Argument-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn among) fe_arguers) ((PPFn amongst) fe_arguers)
    ((PPFn over) fe_issue) (AJP duration fe_issue) ((PPingFn about) fe_issue)
    ((PPFn about) fe_issue) ((PPingFn over) fe_issue))
   (:GAP (DNI fe_arguers))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 4 0)) ((1 1 0)) ((1 3 0)) ((1 0 0))
   ((1 1 0) (1 6 0)) ((1 2 0) (1 4 0)) ((0 0 0) (1 0 0)) ((1 1 0) (1 5 0))
   ((1 1 0) (1 4 0) (1 5 1)))))

(FNNounSemtrans (TheList) Argument-TheWord
 (and (isa :NOUN Evidence-Indication)) (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn among) fe_arguers) ((PPFn amongst) fe_arguers)
    ((PPFn over) fe_issue) (AJP duration fe_issue) ((PPingFn about) fe_issue)
    ((PPFn about) fe_issue) ((PPingFn over) fe_issue))
   (:GAP (DNI fe_arguers))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 4 0)) ((1 1 0)) ((1 3 0)) ((1 0 0))
   ((1 1 0) (1 6 0)) ((1 2 0) (1 4 0)) ((0 0 0) (1 0 0)) ((1 1 0) (1 5 0))
   ((1 1 0) (1 4 0) (1 5 1)))))

(FNNounSemtrans (TheList) Argument-TheWord (and (isa :NOUN Reasoning))
 (frame FN_Reasoning)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn from) performedBy)
    ((PPFn of) performedBy) ((PPFn about) resultantThought)
    ((PPingFn for) resultantThought) ((PPFn against) resultantThought)
    ((PPingFn against) resultantThought) (Sfin resultantThought)
    ((PPFn for) resultantThought))
   (:GAP (CNI performedBy) (INI performedBy) (DEN resultantThought)
    (DNI resultantThought))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 4 0)) ((1 6 0)) ((1 8 0)) ((1 5 0)) ((1 3 0)) ((3 0 0))
   ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 7 0) (3 0 0)) ((1 4 0) (3 0 0))
   ((1 6 0) (3 0 0)) ((1 5 0) (3 0 0)) ((0 0 0) (3 0 0))
   ((0 0 0) (0 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Argumentation-TheWord (and (isa :NOUN Reasoning))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aria-TheWord (and (isa :NOUN Aria)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aries-TheWord (and (isa :NOUN Aries-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aril-TheWord (and (isa :NOUN Aril)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aristocrat-TheWord (and (isa :NOUN Aristocrat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arithmetic-TheWord (and (isa :NOUN Arithmetic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "arm") Bone-TheWord (and (isa :NOUN ArmBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arm-TheWord (and (isa :NOUN Arm))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (VPing fe_descriptor) (AJP fe_descriptor orientation)
    (N fe_descriptor orientation) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((0 0 0)) ((1 0 0)) ((1 1 0)) ((1 2 1) (3 0 0))
   ((1 1 1) (3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0)) ((1 1 0) (1 2 0))
   ((1 0 0) (1 1 0)) ((0 0 0) (0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Arm-TheWord (and (isa :NOUN ShapedObject))
 (frame FN_Shaped_part) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "arm") Wrestling-TheWord
 (and (isa :NOUN ArmWrestling)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armadillo-TheWord (and (isa :NOUN Armadillo))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armband-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss deviceUse wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0) (2 0 1)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Armchair-TheWord (and (isa :NOUN ArmChair))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armchair-TheWord (and (isa :NOUN ArmChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "armed") Forces-TheWord
 (and (isa :NOUN MilitaryOrganization)) (frame FN_Military)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_domain))
   (:GAP (DEN impactForce) (INI ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Armenian-TheWord (and (isa :NOUN ArmenianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armistice-TheWord (and (isa :NOUN Holiday))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armistice-TheWord (and (isa :NOUN Commemoration))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armlet-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Armoire-TheWord (and (isa :NOUN Armoire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armor-TheWord
 (and (isa :NOUN ArmoredUnit-MilitarySpecialty)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Armor-TheWord (and (isa :NOUN Armor))
 (frame FN_Armor)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_armor fe_descriptor)
    (N fe_descriptor mainConstituent activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_armor)) (:GEN (Poss resourceInEvent))))
 (groupPatterns
  (TheSet ((0 1 2)) ((0 2 1)) ((0 1 1)) ((0 1 0)) ((0 2 0)) ((2 0 0))
   ((0 1 2) (0 2 1)) ((0 1 2) (0 2 0)) ((0 0 1) (0 2 0)) ((0 0 0) (0 2 0))
   ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Armpit-TheWord (and (isa :NOUN Armpit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "arms") Manufacturer-TheWord
 (and (isa :NOUN ArmsManufacturer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arms-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Army-TheWord (and (isa :NOUN Army-BranchOfService))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Army-TheWord (and (isa :NOUN MilitaryOrganization))
 (frame FN_Military)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A ownerOfProprietaryThing) (AJP ownerOfProprietaryThing)
    ((PPFn of) ownerOfProprietaryThing)
    (N fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN impactForce) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 1)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Aroma-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_perceptual_source)
    ((PPFn of) fe_perceptual_source) ((PPingFn of) fe_perceptual_source))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Aroma-TheWord (and (isa :NOUN PleasantOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_perceptual_source)
    ((PPFn of) fe_perceptual_source) ((PPingFn of) fe_perceptual_source))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Arousal-TheWord (and (isa :NOUN UrgeToHaveSex))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) eventAffectsBodyPart) (AJP fe_parameter)
    ((PPFn as) temporallyIntersects))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((2 0 0)) ((0 0 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Arraignment-TheWord
 (and (isa :NOUN AppearingInCourt)) (frame FN_Arraignment)
 (bindingTemplate
  (TheList (:SUBJECT (NP defendants))
   (:OBLIQUE-OBJECT ((PPFn of) defendants) ((PPFn in) eventOccursAt)
    ((PPFn before) eventOccursAt) (NP temporallyIntersects)
    ((PPFn on) fe_charges temporallyIntersects)
    ((PPFn until) temporallyIntersects))
   (:GAP (2nd fe_charges) (DNI fe_charges) (CNI defendants))
   (:GEN (Poss defendants))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 5 0) (3 0 0)) ((1 4 1) (3 0 0))
   ((0 0 0) (1 4 1)) ((1 3 0) (1 4 0)) ((0 0 0) (1 1 0)) ((1 4 0) (3 0 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 1 0) (1 4 1)) ((0 0 0) (1 3 0) (1 4 0))
   ((0 0 0) (1 1 0) (1 4 0) (1 4 1)) ((0 0 0) (1 1 0) (1 3 0) (1 4 0))
   ((0 0 0) (1 1 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Arrangement-TheWord
 (and (isa :NOUN ArrangingObjects)) (frame FN_Arranging)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_configuration objectConfiguredDuring))
   (:OBLIQUE-OBJECT ((PPFn into) fe_configuration)
    ((PPFn according to) fe_configuration) (VPfin fe_configuration)
    ((PPFn in) situationConstituents objectFoundInLocation)
    ((PPFn within) objectFoundInLocation) (VPing objectFoundInLocation)
    ((PPFn around) objectFoundInLocation) ((PPFn with) fe_manner)
    (Sub fe_manner) ((PPFn of) objectConfiguredDuring)
    (AJP fe_configuration fe_manner objectConfiguredDuring)
    (N objectConfiguredDuring))
   (:GAP (DEN fe_configuration) (2nd fe_manner)
    (INI doneBy fe_configuration objectConfiguredDuring)
    (DNI doneBy objectConfiguredDuring))
   (:GEN (Poss doneBy objectConfiguredDuring))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 10 2)) ((1 9 0)) ((1 4 0)) ((1 3 1)) ((1 8 0) (1 9 0))
   ((1 4 0) (1 10 2)) ((0 0 1) (1 10 0)) ((1 6 0) (1 9 0)) ((1 10 1) (3 0 1))
   ((1 0 0) (1 10 1)) ((1 2 0) (1 4 0)) ((1 5 0) (1 9 0)) ((1 3 1) (1 10 1))
   ((1 10 1) (1 11 0) (3 0 0)) ((0 0 1) (1 1 0) (1 7 0) (1 10 0))
   ((0 0 0) (1 3 0) (1 9 0) (1 10 1)))))

(FNNounSemtrans (TheList) Arrangement-TheWord (and (isa :NOUN System))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arrest-TheWord (and (isa :NOUN ArrestingSomeone))
 (frame FN_Detaining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arrival-TheWord (and (isa :NOUN ArrivingAtAPlace))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectMoving))
   (:OBLIQUE-OBJECT ((PPFn at) to-Generic) ((PPFn in) to-Generic)
    ((PPFn into) to-Generic) ((PPFn on) to-Generic) ((PPFn by) deviceTypeUsed)
    ((PPFn from) from-Generic) ((PPFn of) objectMoving)
    (NP temporallyIntersects))
   (:GAP (INI to-Generic) (DNI to-Generic objectMoving) (CNI objectMoving))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 6 0)) ((0 0 0)) ((1 5 0)) ((1 4 0)) ((1 1 0)) ((1 2 0))
   ((1 5 0) (3 0 0)) ((1 5 0) (1 6 0)) ((1 6 0) (1 7 0)) ((1 3 0) (3 0 0))
   ((1 3 0) (1 6 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 6 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Arrival-TheWord (and (isa :NOUN Landing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "arrow") Head-TheWord (and (isa :NOUN ArrowHead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arrow-TheWord (and (isa :NOUN Arrow)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arrowroot-TheWord (and (isa :NOUN Arrowroot-Starch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arrowroot-TheWord (and (isa :NOUN ArrowrootPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arroyo-TheWord (and (isa :NOUN DryCreekBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arsenal-TheWord (and (isa :NOUN Armory))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType) ((PPFn of) instrument-UsedAsWeapon))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Arsenic-TheWord (and (isa :NOUN Arsenic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arson-TheWord (and (isa :NOUN Arson))
 (frame FN_Arson)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn against) perpetrator) ((PPFn by) perpetrator)
    ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects victim))
   (:GAP (DEN fe_offense) (INI perpetrator))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 4 1)) ((1 1 0)) ((1 0 0)) ((0 0 0))
   ((1 2 0) (1 3 1)) ((1 4 0) (1 4 1)) ((1 3 0) (1 4 1)) ((0 0 0) (1 3 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Arsonist-TheWord (and (isa :NOUN Arsonist))
 (frame FN_Arson)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator)) (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "art") Supply-TheWord (and (isa :NOUN ArtSupplies))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Art-TheWord (and (isa :NOUN CraftActivity))
 (frame FN_Craft)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) processTypeForAccomplishmentType) (A fe_culture)
    (AJP fe_culture fe_descriptor))
   (:GAP (DEN processTypeForAccomplishmentType)
    (DNI processTypeForAccomplishmentType)
    (INI processTypeForAccomplishmentType fe_culture fe_practitioner))
   (:NOUN (N processTypeForAccomplishmentType))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Art-TheWord (and (isa :NOUN (StudyOfFn ArtObject)))
 (frame FN_Fields)
 (bindingTemplate
  (TheList (:GAP (DEN processTypeForAccomplishmentType topicOfIndividual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Art-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Artery-TheWord (and (isa :NOUN Artery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Artery-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic fe_frequency_of_use)
    ((PPFn to) to-Generic) ((PPFn of) trajectory-Complete fe_relative_location)
    ((PPFn out) from-Generic) ((PPFn for) deviceUse) (N deviceUse))
   (:GAP (DEN fe_roadway)) (:GEN (Poss trajectory-Complete))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 0 1) (0 5 0)) ((0 0 1) (0 2 1)) ((0 0 0) (0 4 0))
   ((0 0 0) (0 5 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList "artesian") Well-TheWord
 (and (isa :NOUN ArtesianWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arthritis-TheWord (and (isa :NOUN Arthritis))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn in) actorPartsInvolved)
    ((PPFn of) actorPartsInvolved) (AJP fe_degree)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN infects) (DNI objectActedOn) (INI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Arthropod-TheWord (and (isa :NOUN Arthropod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Arthropoda-TheWord (and (isa :NOUN Arthropod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Article-TheWord (and (isa :NOUN Determiner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Article-TheWord (and (isa :NOUN Article-PCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    (N (InverseBinaryPredicateFn textualPCWSubSections))
    ((PPFn for) (InverseBinaryPredicateFn textualPCWSubSections))
    ((PPFn of) startingDate) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic) ((PPingFn on) situationTopic)
    ((PPFn from) (InverseBinaryPredicateFn textualPCWSubSections) startingDate
     situationTopic)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections)
     languageWrittenIn situationTopic)
    (Sinterrog situationTopic))
   (:GAP (DEN fe_text) (2nd authorOfLiteraryWork-CW fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 6 0)) ((0 5 0)) ((0 8 2)) ((0 4 0)) ((0 3 0)) ((0 8 0))
   ((0 7 0)) ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)) ((0 8 1))
   ((0 7 1) (0 7 2)) ((0 1 0) (0 3 0)) ((0 6 0) (2 0 0)) ((0 5 0) (2 0 0))
   ((0 0 0) (0 4 0)) ((2 0 0) (3 0 0)) ((0 8 0) (2 0 0)) ((0 0 0) (0 8 0))
   ((0 5 0) (0 8 0) (2 0 0)))))

(FNNounSemtrans (TheList) Artifact-TheWord (and (isa :NOUN Artifact))
 (frame FN_Artifact)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) startingDate))
   (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "artificial" "christmas") Tree-TheWord
 (and (isa :NOUN ArtificialChristmasTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "artificial") Intelligence-TheWord
 (and (isa :NOUN ArtificialIntelligence)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "artificial") Language-TheWord
 (and (isa :NOUN ArtificialLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "artificial") Lens-TheWord
 (and (isa :NOUN Lens-Artificial)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Artillery-TheWord
 (and (isa :NOUN ArtilleryUnit-MilitarySpecialty)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Artillery-TheWord (and (isa :NOUN FieldArtillery))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn along) fe_descriptor))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Artist-TheWord (and (isa :NOUN Artist))
 (frame FN_Create_physical_artwork)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor)
    ((PPFn of) fe_descriptor))
   (:GAP (DEN performedBy)) (:GEN (Poss eventOccursAt))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Artist-TheWord (and (isa :NOUN Artist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "artistic") Movement-TheWord
 (and (isa :NOUN ArtisticMovement)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "artistic") Style-TheWord
 (and (isa :NOUN ArtisticTypeByStyle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "art") Studio-TheWord (and (isa :NOUN ArtStudio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asbestos-TheWord (and (isa :NOUN Asbestos))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asbestosis-TheWord (and (isa :NOUN Asbestosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ascending") Aorta-TheWord
 (and (isa :NOUN AscendingAorta)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ascending") Colon-TheWord
 (and (isa :NOUN AscendingColon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ascent-TheWord (and (isa :NOUN Path-Spatial))
 (frame FN_Path_shape)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP distanceTranslated) ((PPFn to) to-Generic)
    ((PPFn of) trajectory-Complete))
   (:GAP (DEN fe_road))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Ascent-TheWord
 (and (isa :NOUN Translation-LocationChange)) (frame FN_Path_shape)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP distanceTranslated) ((PPFn to) to-Generic)
    ((PPFn of) trajectory-Complete))
   (:GAP (DEN fe_road))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Ascii-TheWord (and (isa :NOUN ASCII)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ascii") Character-TheWord
 (and (isa :NOUN ASCIICompatibleCharacter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "asexual") Reproduction-TheWord
 (and (isa :NOUN AsexualReproductionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ash") Gray-TheWord (and (isa :NOUN SilverColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ash-TheWord (and (isa :NOUN Ash)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ash-TheWord (and (isa :NOUN (WoodFn AshTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ash-TheWord (and (isa :NOUN AshTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ash-Tray-TheWord (and (isa :NOUN Ashtray))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ash") Tree-TheWord (and (isa :NOUN AshTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ash") Wednesday-TheWord
 (and (isa :NOUN AshWednesday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ash") Cloud-TheWord
 (and (isa :NOUN DustCloud)
      (relationInstanceExists solute :NOUN (DustParticleFn Ash)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ashtray-TheWord (and (isa :NOUN Ashtray))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_relative_location)
    (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 1 1)) ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Ashtray-TheWord (and (isa :NOUN Ashtray))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "asian") Country-TheWord
 (and (isa :NOUN AsianCountry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asian-TheWord (and (isa :NOUN AsianCitizenOrSubject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asparagus-TheWord
 (and (isa :NOUN Asparagus-Foodstuff)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aspartame-TheWord (and (isa :NOUN Aspartame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aspen-TheWord (and (isa :NOUN Aspen))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aspen") Tree-TheWord (and (isa :NOUN Aspen))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asphalt-TheWord (and (isa :NOUN Asphalt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asphyxia-TheWord (and (isa :NOUN Asphyxiation))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aspiration-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPingFn of) fe_event) ((PPFn as) fe_event)
    (VPto fe_event) ((PPFn of) objectActedOn) (A objectActedOn)
    ((PPFn for) fe_event fe_focal_participant)
    (AJP duration fe_event objectActedOn fe_focal_participant)
    ((PPFn on) fe_focal_participant)
    (N fe_event objectActedOn fe_focal_participant)
    ((PPFn to) fe_focal_participant) ((PPFn towards) fe_focal_participant)
    (Sinterrog temporallyIntersects)
    ((PPFn in) fe_focal_participant temporallyIntersects)
    ((PPFn within) happensOnDate))
   (:GAP (2nd fe_event)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 6 1)) ((1 12 1) (3 0 0)) ((1 10 0) (3 0 0))
   ((1 9 0) (3 0 0)) ((1 12 0) (3 0 0)) ((1 5 1) (3 0 0)) ((1 8 2) (3 0 0))
   ((1 6 3) (3 0 0)) ((1 3 0) (1 7 0)) ((1 3 0) (1 5 1)) ((1 5 1) (1 6 2))
   ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0)) ((1 2 0) (1 6 2)) ((1 5 0) (3 0 0))
   ((0 0 0) (1 5 0)) ((1 5 0) (1 6 2)) ((1 4 0) (1 5 0)) ((1 1 0) (3 0 0))
   ((1 8 0) (3 0 0)) ((1 3 0) (1 8 0)) ((1 6 1) (3 0 0)) ((1 3 0) (1 6 1))
   ((1 6 1) (1 8 1)) ((0 0 0) (0 0 0) (1 6 3)) ((0 0 0) (1 2 0) (1 13 0))
   ((0 0 0) (1 2 0) (1 11 0)) ((0 0 0) (1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Aspirator-TheWord
 (and (isa :NOUN Aspirator-LaboratoryEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aspirin-TheWord (and (isa :NOUN AcetylsalicylicAcid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assailant-TheWord (and (isa :NOUN Assailant))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) fe_depictive))
   (:GAP (DEN performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Assassin-TheWord (and (isa :NOUN Assassin))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) victim)) (:GAP (DEN killers))
   (:GEN (Poss victim))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Assassination-TheWord
 (and (isa :NOUN AssassinatingSomeone)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers victim))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (NP eventOutcomes)
    ((PPFn of) victim) ((PPFn on) victim) ((PPingFn of) victim)
    (N killers victim))
   (:GAP (CNI killers) (INI killers by-Underspecified victim)
    (DNI killers by-Underspecified victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 5 0)) ((3 0 0)) ((1 4 0)) ((1 3 0)) ((1 2 0)) ((0 0 1))
   ((1 1 0)) ((0 0 0) (3 0 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "assault") Rifle-TheWord
 (and (isa :NOUN AssaultRifle)) (frame FN_Weapon) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assault-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (Poss performedBy) (NP performedBy victim))
   (:OBLIQUE-OBJECT (A performedBy) ((PPingFn by) by-Underspecified)
    ((PPFn up) trajectory-Complete) (NP temporallyIntersects)
    ((PPFn by) performedBy temporallyIntersects) (Sub temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn at) temporallyIntersects) ((PPFn on) victim) ((PPFn against) victim)
    (N performedBy fe_depictive fe_manner eventOccursAt from-Generic
     temporallyIntersects victim instrument-UsedAsWeapon)
    ((PPFn with) instrument-UsedAsWeapon)
    (AJP performedBy fe_depictive duration
     (InverseBinaryPredicateFn explains-Generic) frequencyOfEvent fe_manner
     fe_particular_iteration eventOutcomes from-Generic temporallyIntersects
     instrument-UsedAsWeapon))
   (:GAP (DEN eventOutcomes) (2nd instrument-UsedAsWeapon))
   (:GEN (Poss performedBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 8 0)) ((3 0 1)) ((1 10 5)) ((1 10 4)) ((1 12 7)) ((1 6 0))
   ((1 10 3)) ((1 12 5)) ((1 12 2)) ((3 0 0)) ((0 1 0)) ((1 10 0)) ((1 0 0))
   ((1 8 0) (1 10 7)) ((1 8 0) (1 12 10)) ((1 8 0) (1 10 5)) ((1 8 0) (1 12 9))
   ((1 8 0) (1 10 4)) ((1 3 0) (1 6 0)) ((1 6 0) (1 10 5)) ((1 8 0) (1 12 5))
   ((1 9 0) (1 12 5)) ((1 10 7) (3 0 0)) ((1 8 0) (3 0 0)) ((1 10 6) (3 0 0))
   ((1 4 0) (1 8 0)) ((0 1 0) (1 8 0)) ((1 8 0) (1 10 0)) ((0 1 1) (1 10 0))
   ((1 4 0) (1 10 5)) ((1 6 0) (1 10 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 10 2))
   ((1 4 0) (1 12 5)) ((0 1 0) (1 12 5)) ((1 10 0) (1 12 5)) ((0 1 0) (1 12 3))
   ((1 4 0) (1 12 1)) ((0 1 0) (1 12 1)) ((1 5 0) (1 8 0) (1 10 4))
   ((1 6 0) (1 8 0) (1 12 7)) ((1 6 0) (1 6 0) (1 8 0))
   ((1 8 0) (1 10 7) (1 12 5)) ((1 8 0) (1 10 0) (1 10 7))
   ((0 1 0) (1 5 0) (1 8 0)) ((0 1 0) (1 6 1) (1 8 0))
   ((0 1 0) (1 8 0) (1 10 5)) ((1 6 1) (1 8 0) (1 10 0))
   ((1 3 0) (1 8 0) (1 10 0)) ((1 4 0) (1 9 0) (1 12 8))
   ((0 1 0) (1 6 0) (1 8 0)) ((0 1 0) (1 6 0) (1 6 0))
   ((1 8 0) (1 10 0) (1 12 6)) ((0 1 0) (1 8 0) (1 12 5))
   ((1 8 0) (1 10 0) (1 12 5)) ((1 3 0) (1 10 0) (1 10 2))
   ((1 4 0) (1 12 5) (1 12 8)) ((0 1 0) (1 9 0) (1 12 4))
   ((0 1 0) (1 6 0) (1 10 0)) ((0 1 1) (1 4 1) (1 5 0) (1 10 0))
   ((1 8 0) (1 12 0) (1 12 5) (1 12 9)) ((0 1 0) (1 8 0) (1 12 2) (1 12 5))
   ((0 1 0) (1 3 0) (1 10 1) (1 12 3)) ((0 1 0) (1 3 0) (1 6 0) (3 0 0))
   ((0 1 0) (1 1 0) (1 3 0) (3 0 0)) ((0 1 0) (1 8 0) (1 10 0) (1 12 5))
   ((0 1 0) (1 3 0) (1 9 0) (1 10 7) (1 12 5))
   ((0 1 0) (1 3 0) (1 9 0) (1 12 5) (1 12 8))
   ((0 1 0) (1 7 0) (1 8 0) (1 11 0) (3 0 0)))))

(FNNounSemtrans (TheList) Assault-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_degree)
    ((PPFn with) fe_degree fe_specification) (VPing fe_specification))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Assay-TheWord (and (isa :NOUN MedicalTesting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "assembly") Line-TheWord
 (and (isa :NOUN AssemblyLine)) (frame FN_Manufacturing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assembly-TheWord
 (and (isa :NOUN Assembly-SocialGroup)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (2nd (InverseBinaryPredicateFn nameString)))
   (:GEN ((PPFn of) fe_individuals))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Assembly-TheWord (and (isa :NOUN MakingSomething))
 (frame FN_Building)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) outputsCreated) (N outputsCreated)
    ((PPFn of) ingredients outputsCreated) (AJP fe_manner by-Underspecified)
    ((PPFn in) eventOccursAt))
   (:GEN (Poss ingredients outputsCreated))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((1 0 1)) ((0 2 1)) ((0 1 0)) ((0 2 0))
   ((0 3 0) (1 0 0)) ((0 2 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Assertion-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner)
    ((PPFn in) recipientOfInfo genericPathway-Partial) (Sfin infoTransferred)
    ((PPFn from) performedBy) ((PPFn of) infoTransferred performedBy)
    ((PPFn by) performedBy) (N performedBy)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn regarding) situationTopic)
    ((PPFn to) infoTransferred situationTopic))
   (:GAP (INI infoTransferred) (DNI infoTransferred) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 8 0)) ((1 7 1)) ((1 2 0)) ((1 9 0)) ((1 4 0)) ((1 7 0))
   ((1 4 1)) ((1 3 0)) ((1 7 1) (3 0 0)) ((1 3 0) (1 7 1)) ((0 0 0) (1 7 1))
   ((1 2 0) (3 0 0)) ((1 2 0) (1 4 1)) ((1 2 0) (1 5 0)) ((1 2 0) (1 6 0))
   ((1 4 0) (3 0 0)) ((1 4 0) (1 5 0)) ((1 0 0) (1 7 1)) ((1 0 0) (1 4 0))
   ((0 0 0) (1 1 1) (1 7 1)) ((1 1 1) (1 2 0) (3 0 0))
   ((1 1 0) (1 2 0) (3 0 0)))))

(FNNounSemtrans (TheList) Assessment-TheWord (and (isa :NOUN AcademicTesting))
 (frame FN_Assessing)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy)
    (AJP performedBy fe_depictive fe_manner) (A fe_feature fe_manner)
    ((PPFn of) fe_feature fe_phenomenon) (Sfin fe_phenomenon)
    (VPed fe_standard) ((PPFn at) temporallyIntersects))
   (:GAP (DEN performedBy) (DNI performedBy fe_phenomenon))
   (:GEN (NP fe_phenomenon))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((1 3 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 1))
   ((1 1 2) (1 3 0)) ((0 0 0) (1 3 0)) ((1 1 1) (1 3 1)) ((1 1 0) (1 3 1))
   ((0 0 0) (1 1 2) (1 3 1)) ((1 0 0) (1 3 0) (1 6 0))
   ((0 0 0) (1 3 0) (1 5 0)) ((1 1 2) (1 2 0) (1 3 1))
   ((0 0 0) (1 2 1) (1 3 0)))))

(FNNounSemtrans (TheList) Assessment-TheWord (and (isa :NOUN Evaluating))
 (frame FN_Assessing)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy)
    (AJP performedBy fe_depictive fe_manner) (A fe_feature fe_manner)
    ((PPFn of) fe_feature fe_phenomenon) (Sfin fe_phenomenon)
    (VPed fe_standard) ((PPFn at) temporallyIntersects))
   (:GAP (DEN performedBy) (DNI performedBy fe_phenomenon))
   (:GEN (NP fe_phenomenon))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((1 3 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 1))
   ((1 1 2) (1 3 0)) ((0 0 0) (1 3 0)) ((1 1 1) (1 3 1)) ((1 1 0) (1 3 1))
   ((0 0 0) (1 1 2) (1 3 1)) ((1 0 0) (1 3 0) (1 6 0))
   ((0 0 0) (1 3 0) (1 5 0)) ((1 1 2) (1 2 0) (1 3 1))
   ((0 0 0) (1 2 1) (1 3 0)))))

(FNNounSemtrans (TheList) Asset-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance assets SocialBeing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asset-TheWord (and (isa :NOUN Assets-Possession))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assets-TheWord (and (isa :NOUN Assets-Possession))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner)) (:OBLIQUE-OBJECT ((PPFn of) owner))
   (:GAP (DNI owner) (DEN owns)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Assignment-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assistance-TheWord (and (isa :NOUN HelpingAnAgent))
 (frame FN_Assistance)
 (bindingTemplate
  (TheList (:SUBJECT (NP beneficiary fe_helper))
   (:OBJECT (NP beneficiary) ((PPFn to) beneficiary))
   (:OBLIQUE-OBJECT (AVP fe_degree) ((PPFn through) duration)
    ((PPFn to) beneficiary fe_focal_entity) ((PPingFn in) to-Generic)
    ((PPFn on) fe_focal_entity to-Generic)
    ((PPFn towards) beneficiary fe_focal_entity to-Generic)
    (VPto beneficiary to-Generic)
    ((PPFn for) beneficiary duration fe_focal_entity to-Generic)
    ((PPFn with) fe_focal_entity to-Generic) (A fe_domain to-Generic fe_helper)
    ((PPFn from) fe_helper) (N fe_domain fe_focal_entity to-Generic fe_helper)
    ((PPFn by) fe_helper) ((PPFn of) fe_helper)
    (AJP beneficiary fe_degree fe_domain fe_focal_entity to-Generic fe_helper
     fe_manner)
    ((PPFn during) eventOccursAt) ((PPFn within) eventOccursAt)
    ((PPFn in) fe_focal_entity to-Generic temporallyIntersects)
    (Sub temporallyIntersects))
   (:GAP (DEN to-Generic) (2nd to-Generic)
    (INI beneficiary fe_focal_entity to-Generic fe_helper)
    (CNI beneficiary fe_focal_entity fe_helper)
    (DNI beneficiary to-Generic fe_helper))
   (:GEN (Poss beneficiary fe_helper))))
 (groupPatterns
  (TheSet ((2 14 6)) ((2 10 0)) ((0 0 1)) ((2 11 3)) ((2 6 1)) ((2 3 0))
   ((2 5 1)) ((2 4 0)) ((2 17 0)) ((2 11 1)) ((2 9 0)) ((2 9 2)) ((2 17 1))
   ((2 11 2)) ((2 14 5)) ((2 14 0)) ((2 14 2)) ((4 0 0)) ((2 5 0)) ((2 2 0))
   ((2 14 5) (2 16 0)) ((2 10 0) (2 14 6)) ((0 0 1) (2 14 6))
   ((2 9 2) (2 14 6)) ((0 0 1) (2 3 0)) ((2 8 1) (2 10 0)) ((2 17 1) (4 0 1))
   ((2 7 3) (2 11 3)) ((2 9 2) (2 11 2)) ((2 8 0) (4 0 1)) ((2 8 0) (2 11 3))
   ((0 0 1) (2 2 1)) ((2 11 3) (2 17 0)) ((2 10 0) (2 11 1)) ((2 9 0) (2 10 0))
   ((2 7 3) (2 9 0)) ((2 1 0) (2 9 0)) ((0 0 1) (2 0 0)) ((2 7 2) (2 14 1))
   ((0 0 1) (2 6 0)) ((0 0 1) (2 2 0)) ((0 0 0) (2 13 0)) ((0 0 0) (2 11 3))
   ((0 0 1) (2 7 0)) ((2 7 0) (2 11 3)) ((2 3 0) (4 0 1)) ((0 0 1) (2 17 1))
   ((2 9 2) (2 17 1)) ((0 0 0) (2 5 2)) ((0 0 0) (2 4 1)) ((0 0 0) (2 8 0))
   ((0 0 1) (2 4 0)) ((2 2 0) (2 11 0)) ((2 7 0) (2 14 1))
   ((2 7 1) (2 9 2) (2 11 2)) ((2 9 0) (2 10 0) (2 10 0))
   ((2 6 1) (2 9 0) (4 0 1)) ((2 5 2) (2 9 0) (2 12 0))
   ((0 0 0) (2 12 0) (2 14 6)) ((0 0 1) (1 0 0) (2 9 1))
   ((0 0 0) (2 6 1) (2 9 2)) ((0 0 0) (2 10 0) (2 17 1))
   ((0 0 1) (1 1 0) (2 14 3)) ((0 0 0) (2 8 0) (2 10 0))
   ((2 2 0) (2 9 0) (2 9 2)) ((0 0 0) (2 10 0) (2 14 2))
   ((0 0 1) (2 2 0) (2 9 0)) ((0 0 1) (2 14 2) (2 17 2) (2 18 0))
   ((0 0 1) (2 7 3) (2 9 0) (2 14 6)) ((0 0 1) (2 2 0) (2 14 4) (2 15 0))
   ((2 2 0) (2 11 2) (2 14 6) (4 0 1)) ((0 0 1) (2 2 0) (2 14 1) (2 14 6))
   ((0 0 0) (2 3 0) (2 10 0) (2 14 1)))))

(FNNounSemtrans (TheList) Assistant-TheWord (and (isa :NOUN Assistant))
 (frame FN_Subordinates_and_superiors) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "associate") Degree-TheWord
 (and (isa :NOUN AssociatesDegree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "associate" "in") Arts-TheWord
 (and (isa :NOUN AssociateInArtsDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Associate-TheWord (and (isa :NOUN Associate))
 (frame FN_Co-association) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Associate-TheWord (and (isa :NOUN CooperationEvent))
 (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_1 fe_partner_2)
    ((PPFn at) eventOccursAt) ((PPFn from) eventOccursAt)
    (N fe_partner_2 fe_undertaking) ((PPFn by) fe_undertaking)
    ((PPFn in) eventOccursAt fe_undertaking) ((PPingFn in) fe_undertaking)
    (AJP fe_degree eventOccursAt temporallyIntersects fe_undertaking))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partner_2 fe_partners)
    (INI fe_undertaking))
   (:GEN (Poss fe_partner_2 eventOccursAt))
   (:APPOSITIVE (NP fe_partner_1 fe_partner_2))))
 (groupPatterns
  (TheSet ((1 3 1)) ((3 0 1)) ((1 2 0)) ((1 7 1)) ((3 0 0)) ((1 0 1)) ((1 3 0))
   ((1 6 0) (3 0 0)) ((1 5 1) (3 0 0)) ((1 4 0) (3 0 0)) ((1 3 1) (3 0 0))
   ((1 0 1) (1 3 1)) ((1 5 0) (3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 0 1))
   ((3 0 0) (4 0 0)) ((1 0 1) (4 0 0)) ((1 0 0) (1 7 0))
   ((0 0 0) (1 0 1) (1 7 3)) ((1 3 1) (3 0 0) (4 0 0))
   ((1 3 1) (1 7 2) (3 0 0)) ((0 0 0) (1 0 1) (1 5 0))
   ((0 0 0) (1 5 0) (4 0 1)))))

(FNNounSemtrans (TheList) Associate-TheWord (and (isa :NOUN Associate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Association-TheWord (and (isa :NOUN Association))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Association-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assortment-TheWord (and (isa :NOUN DiverseGroup))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Assortment-TheWord (and (isa :NOUN Diversity))
 (frame FN_Diversity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Assurance-TheWord (and (isa :NOUN Reassurance))
 (frame FN_Telling)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT
    (AJP fe_communicative_force fe_descriptor fe_manner iboCreated)
    ((PPFn against) infoTransferred) (Sfin infoTransferred) (N performedBy)
    ((PPFn from) performedBy) ((PPFn on) situationTopic)
    ((PPFn about) infoTransferred situationTopic) ((PPFn over) situationTopic)
    ((PPFn of) performedBy situationTopic))
   (:GAP (DNI recipientOfInfo) (CNI recipientOfInfo performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 8 0)) ((2 0 2)) ((2 6 1) (4 0 0)) ((0 0 1) (2 6 1))
   ((0 0 1) (2 2 0)) ((0 0 0) (2 7 0)) ((2 4 0) (2 6 1)) ((2 3 0) (2 5 0))
   ((0 0 1) (2 1 0)) ((0 0 0) (2 2 0)) ((0 0 0) (2 6 0))
   ((0 0 0) (2 4 0) (2 8 1)) ((0 0 0) (2 2 0) (4 0 0))
   ((0 0 0) (2 2 0) (2 4 0)) ((0 0 0) (2 0 3) (4 0 0))
   ((0 0 0) (2 0 0) (2 2 0)) ((0 0 1) (1 0 0) (2 0 1) (2 2 0)))))

(FNNounSemtrans (TheList) Astatine-TheWord (and (isa :NOUN Astatine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aster-TheWord (and (isa :NOUN Aster)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asterisk-TheWord (and (isa :NOUN Asterisk-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asterism-TheWord (and (isa :NOUN Asterism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "asteroid") Belt-TheWord
 (and (isa :NOUN AsteroidBelt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asteroid-TheWord (and (isa :NOUN Asteroid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "asthma") Attack-TheWord
 (and (isa :NOUN AsthmaAttack)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Asthma-TheWord (and (isa :NOUN Asthma))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (VPfin causes-Underspecified) (AJP fe_degree)
    (NP objectActedOn) ((PPFn in) eventOccursAt))
   (:GAP (DEN infects) (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 3 0)) ((3 0 0)) ((0 0 0)) ((1 2 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Astrologer-TheWord (and (isa :NOUN Astrologer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Astrology-TheWord (and (isa :NOUN Astrology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Astronaut-TheWord (and (isa :NOUN Astronaut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Astronomer-TheWord (and (isa :NOUN Astronomer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "astronomy") Satellite-TheWord
 (and (isa :NOUN AstronomicalSatellite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Astronomy-TheWord (and (isa :NOUN Astronomy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Astuteness-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn in) objectOfCritique) (AJP fe_practice)
    ((PPFn of) objectOfCritique affectedAgent))
   (:GAP (CNI affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "asw") Mortar-TheWord
 (and (isa :NOUN ASWMortarLauncher)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atelier-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atheist-TheWord (and (isa :NOUN Atheist))
 (frame FN_People_by_religion) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Athlete-TheWord (and (isa :NOUN Athlete))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "athletic") Clothing-TheWord
 (and (isa :NOUN AthleticClothing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "athletic") Contest-TheWord
 (and (isa :NOUN SportsCompetition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "athletic") Sock-TheWord (and (isa :NOUN SportsSock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "athletic") Supporter-TheWord
 (and (isa :NOUN AthleticSupporter-Clothing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atlas-TheWord (and (isa :NOUN AtlasVertebra))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atlas-TheWord (and (isa :NOUN Atlas)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atm-TheWord (and (isa :NOUN AutomaticTellerMachine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atmosphere-TheWord (and (isa :NOUN Atmosphere))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atmospheric") Layer-TheWord
 (and (isa :NOUN AtmosphericLayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atoll-TheWord (and (isa :NOUN Atoll))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP parts fe_descriptor) (N (InverseBinaryPredicateFn nameString))
    ((PPFn at) fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 2 0) (0 4 0))
   ((0 2 0) (0 2 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList "atom") Bomb-TheWord (and (isa :NOUN AtomicBomb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atom-TheWord (and (isa :NOUN Atom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic") Bomb-TheWord (and (isa :NOUN AtomicBomb))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic") Clock-TheWord (and (isa :NOUN AtomicClock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic" "force") Microscope-TheWord
 (and (isa :NOUN AtomicForceMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic" "mass") Unit-TheWord
 (and (isa :NOUN AtomicMassUnit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic") Number-TheWord
 (and (isa :NOUN PositiveInteger)
      (relationExistsInstance atomicNumber ElementStuffTypeByNumberOfProtons
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic") Warhead-TheWord
 (and (isa :NOUN NuclearWarhead)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "atomic") Weapon-TheWord
 (and (isa :NOUN NuclearWeapon)) (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atomizer-TheWord (and (isa :NOUN Atomizer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atonement-TheWord
 (and (isa :NOUN MakingAmendsForSomething)) (frame FN_Atonement)
 (bindingTemplate
  (TheList (:SUBJECT (NP inReactionTo))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy)
    ((PPFn for) doneBy inReactionTo obligationsViolated)
    ((PPFn of) obligationsViolated))
   (:GAP (DEN inReactionTo) (2nd doneBy obligationsViolated)
    (DNI inReactionTo obligationsViolated))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 1)) ((1 0 0)) ((1 1 2)) ((1 1 0)) ((0 0 0) (1 1 2)))))

(FNNounSemtrans (TheList) Atoner-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance performedBy MakingAmendsForSomething :NOUN))
 (frame FN_Atonement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atp-TheWord (and (isa :NOUN AdenosineTriphosphate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atropine-TheWord (and (isa :NOUN Atropine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Atropine-TheWord (and (isa :NOUN Atropine))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attache-TheWord (and (isa :NOUN Attache))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attachment-TheWord (and (isa :NOUN Attachment))
 (frame FN_Attaching) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attack-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy victim))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn with) fe_depictive)
    ((PPFn towards) directionOfAttack) (VPing by-Underspecified)
    ((PPFn from) performedBy directionOfAttack from-Generic)
    (AVP temporallyIntersects) (NP temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) fe_manner temporallyIntersects) ((PPFn on) victim)
    ((PPFn against) victim) ((PPFn upon) victim)
    (N performedBy fe_depictive fe_manner by-Underspecified purposeOfEvent
     temporallyIntersects instrument-UsedAsWeapon)
    (A performedBy instrument-UsedAsWeapon)
    (AJP performedBy fe_depictive directionOfAttack fe_event_description
     fe_manner by-Underspecified trajectory-Complete purposeOfEvent
     temporallyIntersects instrument-UsedAsWeapon))
   (:GAP (CNI performedBy) (2nd eventOccursAt) (INI performedBy victim)
    (DNI performedBy victim))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 12 5)) ((1 9 0)) ((1 12 2)) ((1 14 4)) ((1 13 1))
   ((1 14 9)) ((1 12 6)) ((0 0 0)) ((1 13 0)) ((1 7 1)) ((1 6 0)) ((1 4 2))
   ((1 4 1)) ((1 14 2)) ((3 0 0)) ((1 12 0)) ((1 11 0) (1 12 6))
   ((1 10 0) (1 12 6)) ((1 9 0) (1 12 5)) ((1 7 0) (1 9 0)) ((1 9 0) (1 12 3))
   ((1 9 0) (1 14 4)) ((1 14 3) (1 14 8)) ((1 2 0) (1 12 4)) ((1 2 0) (1 14 4))
   ((0 0 0) (1 13 1)) ((1 12 0) (1 13 1)) ((1 12 6) (1 14 0))
   ((1 12 6) (1 13 0)) ((1 9 0) (1 12 6)) ((0 0 1) (1 12 6)) ((1 9 0) (3 0 0))
   ((1 10 0) (3 0 0)) ((0 0 1) (1 0 0)) ((1 12 5) (1 12 6)) ((1 8 1) (1 12 0))
   ((1 0 0) (1 14 7)) ((1 7 0) (1 13 1)) ((1 9 0) (1 12 0)) ((1 12 2) (1 13 0))
   ((1 4 1) (3 0 0)) ((1 4 0) (1 4 1)) ((0 0 0) (1 10 0) (1 12 6))
   ((1 9 0) (1 12 0) (1 12 6)) ((0 0 0) (1 10 0) (1 14 4))
   ((0 0 1) (1 12 0) (1 14 4)) ((0 0 0) (1 4 1) (1 14 5))
   ((1 3 0) (1 4 1) (1 14 6)) ((1 4 1) (1 14 0) (1 14 1))
   ((1 8 0) (1 12 6) (1 14 4) (3 0 0)) ((0 0 0) (1 1 0) (1 9 0) (1 12 4))
   ((1 5 0) (1 7 0) (1 9 0) (1 12 1) (1 14 4)))))

(FNNounSemtrans (TheList) Attack-TheWord (and (isa :NOUN MilitaryAttack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attack-TheWord
 (and (isa :NOUN PhysicallyAttackingAnAgent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attacker-TheWord (and (isa :NOUN Assailant))
 (frame FN_Attack) (bindingTemplate (TheList (:OBJECT (NP performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Attempt-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy to-Generic))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn from) doneBy) ((PPFn of) doneBy)
    ((PPingFn of) doneBy) (VPto to-Generic) ((PPingFn at) to-Generic)
    ((PPFn on) to-Generic) ((PPFn to) to-Generic) ((PPFn at) to-Generic)
    ((PPingFn by) by-Underspecified) (N doneBy to-Generic by-Underspecified)
    ((PPFn in) eventOccursAt)
    (AJP doneBy fe_depictive fe_effort to-Generic by-Underspecified
     outcomeOfAction temporallyIntersects))
   (:GAP (CNI doneBy) (INI doneBy) (DNI doneBy to-Generic by-Underspecified))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 11 0)) ((1 1 0)) ((0 0 0)) ((1 4 0)) ((1 8 0))
   ((1 7 0)) ((0 0 1)) ((1 10 1)) ((3 0 0)) ((1 7 0) (1 10 2))
   ((1 6 0) (1 12 6)) ((1 8 0) (1 12 5)) ((1 4 0) (1 12 5)) ((1 10 1) (1 12 5))
   ((1 6 0) (1 10 1)) ((1 4 0) (3 0 0)) ((1 7 0) (3 0 0)) ((1 6 0) (3 0 0))
   ((1 8 0) (3 0 0)) ((0 0 1) (3 0 0)) ((1 10 1) (3 0 0)) ((1 12 3) (3 0 0))
   ((1 3 0) (1 4 0)) ((1 2 0) (1 4 0)) ((1 1 0) (1 4 0)) ((1 0 0) (1 4 0))
   ((1 0 0) (1 10 1)) ((0 0 0) (1 4 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 10 1)) ((0 0 1) (1 10 0)) ((1 4 0) (1 12 0)) ((1 5 0) (1 12 2))
   ((1 10 1) (1 12 2)) ((1 4 0) (1 12 5) (3 0 0)) ((1 5 0) (1 12 5) (3 0 0))
   ((1 10 1) (1 12 5) (3 0 0)) ((1 0 0) (1 4 0) (1 12 5))
   ((1 0 0) (1 10 1) (1 12 5)) ((0 0 0) (1 4 0) (1 12 5))
   ((0 0 0) (1 12 3) (1 12 5)) ((1 0 0) (1 4 0) (1 12 4))
   ((1 4 0) (1 9 0) (1 12 0)) ((0 0 1) (1 0 0) (1 6 0))
   ((1 5 0) (1 12 1) (3 0 0)))))

(FNNounSemtrans (TheList) Attendance-TheWord
 (and (isa :NOUN TakingCareOfSomething)) (frame FN_Attending)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn throughout) duration) (N fe_event)
    ((PPFn at) fe_event) (AJP doneBy frequencyOfEvent)
    ((PPFn on) temporallyIntersects))
   (:GAP (INI doneBy fe_event) (DNI fe_event)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 2 0)) ((1 1 0)) ((1 4 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 0 0))
   ((1 2 0) (1 3 1) (3 0 0)))))

(FNNounSemtrans (TheList) Attendant-TheWord
 (and (isa :NOUN BlueCollarWorker) (isa :NOUN UnskilledWorker))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn for) employer) ((PPFn of) employer)
    ((PPFn to) employer) ((PPFn at) employer) ((PPFn on) employer)
    ((PPFn in) employer) (A fe_rank)
    (N employer fe_rank activeIngredientsOfType)
    (AJP employer activeIngredientsOfType))
   (:GAP (DEN fe_person) (2nd activeIngredientsOfType)) (:GEN (Poss employer))
   (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 7 2)) ((1 8 1)) ((1 7 0)) ((3 0 0)) ((1 1 0)) ((0 0 0) (1 7 2))
   ((1 7 2) (4 0 0)) ((1 4 0) (1 7 2)) ((1 7 2) (3 0 0)) ((1 8 1) (3 0 0))
   ((1 7 0) (1 7 2)) ((0 0 0) (3 0 0)) ((0 0 0) (1 5 0) (1 7 2))
   ((0 0 0) (1 3 0) (1 7 2)) ((0 0 0) (1 4 0) (1 7 1))
   ((0 0 0) (1 3 0) (1 6 0)) ((0 0 0) (1 8 1) (3 0 0))
   ((0 0 0) (1 0 0) (1 7 2)) ((0 0 0) (1 7 2) (1 8 0))
   ((0 0 0) (1 3 0) (3 0 0)) ((0 0 0) (1 2 0) (1 8 1))
   ((0 0 0) (0 0 0) (1 3 0) (1 7 2)))))

(FNNounSemtrans (TheList) Attention-TheWord
 (and (isa :NOUN AlertMentalActivityLevel)) (frame FN_Attention)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn upon) focalSubject) (NP focalSubject doneBy))
   (:OBLIQUE-OBJECT (AVP fe_degree) ((PPFn to) fe_degree focalSubject)
    (VPto focalSubject) ((PPFn on) focalSubject) ((PPFn upon) focalSubject)
    ((PPingFn to) focalSubject) (N doneBy) (A doneBy) (AJP fe_degree doneBy)
    ((PPFn by) focalSubject doneBy) ((PPFn for) focalSubject doneBy)
    ((PPFn from) doneBy) ((PPFn of) doneBy) (Poss doneBy))
   (:GAP (DNI focalSubject) (CNI focalSubject doneBy)
    (INI eventAffectsBodyPart focalSubject doneBy))
   (:GEN (Poss eventAffectsBodyPart doneBy))))
 (groupPatterns
  (TheSet ((1 13 0)) ((1 12 0)) ((1 11 0)) ((1 10 1)) ((1 9 1)) ((1 6 0))
   ((1 8 1)) ((1 2 0)) ((1 1 1)) ((3 0 1)) ((1 4 0)) ((1 3 0)) ((1 10 0))
   ((1 1 1) (3 0 1)) ((0 1 1) (1 1 1)) ((1 3 0) (3 0 1)) ((0 1 1) (1 3 0))
   ((1 3 0) (1 7 0)) ((1 9 0) (3 0 1)) ((0 1 0) (3 0 1)) ((0 1 0) (1 6 0))
   ((0 0 0) (3 0 0)) ((1 6 0) (1 8 0)) ((1 1 1) (1 8 0)) ((1 8 0) (3 0 1))
   ((1 8 0) (1 8 0)) ((0 1 1) (1 5 0) (3 0 1)) ((0 1 1) (1 4 0) (3 0 1))
   ((0 1 1) (1 1 1) (3 0 1)) ((0 1 1) (1 3 0) (3 0 1))
   ((0 1 1) (1 1 1) (1 1 1)) ((0 1 0) (0 1 0) (3 0 1))
   ((0 1 1) (1 0 0) (1 1 1)) ((0 1 1) (1 2 0) (1 8 0))
   ((0 1 0) (1 6 0) (1 8 0)) ((0 1 1) (1 0 0) (1 1 0) (1 1 1)))))

(FNNounSemtrans (TheList) Attenuator-TheWord (and (isa :NOUN Attenuator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attic-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attire-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N clothingStyle) ((PPFn for) deviceUse)
    (AJP fe_descriptor clothingStyle wearer)
    ((PPFn of) fe_descriptor subRegions wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 2)) ((0 2 0)) ((0 0 0) (2 0 0)) ((0 1 0) (0 2 1))
   ((0 2 2) (0 3 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 3 2)) ((0 2 0) (0 2 2))
   ((0 0 0) (0 2 1) (2 0 0)) ((0 2 0) (0 3 1) (2 0 0)))))

(FNNounSemtrans (TheList) Attitude-TheWord (and (isa :NOUN Attitude))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attorney-TheWord (and (isa :NOUN Lawyer))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Attribute-TheWord
 (and (isa :NOUN AttributeCharacteristicOfAnEntity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Auction-TheWord (and (isa :NOUN Auction-Event))
 (frame FN_Commerce_sell)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N temporallyIntersects))
   (:GAP (INI buyer objectOfPossessionTransfer seller))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Auction-TheWord (and (isa :NOUN Auctioning))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Audience-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance spectators EntertainmentEvent :NOUN))
 (frame FN_Performing_arts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio") Cassette-TheWord
 (and (isa :NOUN AudioCassette)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio") Crossover-TheWord
 (and (isa :NOUN AudioCrossover)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio" "home" "theater") System-TheWord
 (and (isa :NOUN PackagedAudioHomeTheater)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio") Recording-TheWord
 (and (isa :NOUN AudioRecordedObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio") System-TheWord (and (isa :NOUN AudioSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio" "tape" "deck") Mechanism-TheWord
 (and (isa :NOUN AudioTapeDeckMechanism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio" "tape") Player-TheWord
 (and (isa :NOUN AudioTapePlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Audio-TheWord (and (isa :NOUN RecordedSoundPlaying))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio" "video") Device-TheWord
 (and (isa :NOUN AudioVideoEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audio" "visual" "ip") Device-TheWord
 (and (isa :NOUN AudioVisualDevice-InternetTelephony)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Audiocassette-TheWord (and (isa :NOUN AudioCassette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "audited") Account-TheWord
 (and (isa :NOUN AuditingFinancialRecords)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Auditor-TheWord (and (isa :NOUN Auditor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Auditorium-TheWord (and (isa :NOUN AuditoriumRoom))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auditory") Meatus-TheWord
 (and (isa :NOUN ExternalAuditoryMeatus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auditory") System-TheWord
 (and (isa :NOUN AuditorySystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) August-TheWord (and (isa :NOUN August))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_relative_time fe_unit)
    (NP (InverseBinaryPredicateFn parts)) (N (InverseBinaryPredicateFn parts)))
   (:GAP (DNI fe_relative_time)
    (DEN (InverseBinaryPredicateFn nameString) fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Aunt-TheWord
 (and (isa :NOUN FemaleHuman) (relationExistsInstance aunts Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Auntie-TheWord
 (and (isa :NOUN FemaleHuman) (relationExistsInstance aunts Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:GAP (DEN fe_alter) (DNI fe_ego))
   (:NOUN (N fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((2 0 0)) ((3 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Aura-TheWord (and (isa :NOUN Halo-Symbolic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Auricle-TheWord (and (isa :NOUN AuricleOfHeart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aurora") Australis-TheWord
 (and (isa :NOUN AuroraAustralis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "aurora") Borealis-TheWord
 (and (isa :NOUN AuroraBorealis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aurora-TheWord (and (isa :NOUN Aurora-Ionospheric))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Austerity-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_resource_controller) (N fe_resource_controller)
    ((PPFn of) objectOfCritique fe_resource_controller))
   (:NOUN (N objectOfCritique) (NP objectOfCritique))
   (:GEN (Poss fe_resource_controller))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((1 1 0))
   ((1 0 0)))))

(FNNounSemtrans (TheList "australian") Dollar-TheWord
 (and (isa :NOUN Dollar-Australia)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "australian") Terrier-TheWord
 (and (isa :NOUN Terrier-Australian)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Authority-TheWord (and (isa :NOUN Expert))
 (frame FN_Authority) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Authority-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed))
   (:OBLIQUE-OBJECT (VPfin processTypeForAccomplishmentType) (A fe_governed)
    (AJP fe_governed) ((PPFn on) fe_governed)
    (N fe_descriptor fe_domain fe_governed leadersOfMovement))
   (:GAP (DNI fe_governed) (INI processTypeForAccomplishmentType fe_governed)
    (DEN leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 4 3)) ((1 3 0)) ((1 4 2)) ((1 2 0)) ((1 1 0)) ((1 4 1)) ((1 4 0))
   ((1 0 0)) ((0 0 0) (1 4 3)))))

(FNNounSemtrans (TheList) Authorization-TheWord
 (and (isa :NOUN Document-CW)
      (relationInstanceExists authorizationFor :NOUN Action))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Autism-TheWord (and (isa :NOUN Autism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auto") Body-TheWord (and (isa :NOUN RoadVehicleBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auto") Paint-TheWord
 (and (isa :NOUN AutomotivePaint)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auto") Part-TheWord (and (isa :NOUN AutoPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auto") Ramp-TheWord (and (isa :NOUN AutoRamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "auto" "vacuum") Cleaner-TheWord
 (and (isa :NOUN AutoVacuumCleaner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Autobahn-TheWord (and (isa :NOUN Highway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) ((PPFn to) to-Generic)
    (N (InverseBinaryPredicateFn nameString))
    ((PPFn outside) fe_relative_location) ((PPFn around) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn from) from-Generic))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 4 0)) ((0 2 0)) ((0 1 0)) ((0 2 0) (0 3 0))
   ((0 1 0) (0 6 0)) ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Autobiography-TheWord (and (isa :NOUN Autobiography))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) (AJP fe_descriptor)
    (N authorOfLiteraryWork-CW startingDate fe_title)
    ((PPFn about) situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW startingDate situationTopic))
   (:GAP (DEN fe_text) (2nd authorOfLiteraryWork-CW fe_title situationTopic))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 4 0)) ((0 0 0)) ((0 2 0)) ((0 4 2)) ((0 3 0)) ((2 0 0))
   ((2 0 0) (3 0 0)) ((0 2 2) (2 0 0)) ((0 2 1) (2 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Autogiro-TheWord (and (isa :NOUN Autogyro))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Autograph-TheWord (and (isa :NOUN Autograph))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automated" "teller") Machine-TheWord
 (and (isa :NOUN AutomatedTellerMachine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatic") Firearm-TheWord
 (and (isa :NOUN AutomaticFirearm)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatic" "locking") Differential-TheWord
 (and (isa :NOUN AutomaticLockingDifferential)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatic" "seat") Belt-TheWord
 (and (isa :NOUN Seatbelt-Automatic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatic") Transmission-TheWord
 (and (isa :NOUN AutomaticTransmission)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatic") Weapon-TheWord
 (and (isa :NOUN AutomaticFirearm)) (frame FN_Weapon)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatic") Window-TheWord
 (and (isa :NOUN AutomaticCarWindow)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automatically" "adjustable" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-AutomaticallyAdjustable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Automaton-TheWord (and (isa :NOUN Robot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Alternator-TheWord
 (and (isa :NOUN AutomobileAlternator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Engine-TheWord
 (and (isa :NOUN AutoEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Hood-TheWord (and (isa :NOUN AutoHood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Industry-TheWord
 (and (isa :NOUN AutomobileIndustry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Insurance-TheWord
 (and (isa :NOUN AutomobileInsurance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Mechanic-TheWord
 (and (isa :NOUN CarMechanic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Race-TheWord (and (isa :NOUN CarRacing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile" "snow") Tire-TheWord
 (and (isa :NOUN AutomobileSnowTire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile" "suspension") System-TheWord
 (and (isa :NOUN AutomobileSuspensionSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Automobile-TheWord (and (isa :NOUN Automobile))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Wheel-TheWord
 (and (isa :NOUN AutomobileWheel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automobile") Window-TheWord
 (and (isa :NOUN AutomobileWindow)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automotive") Antenna-TheWord
 (and (isa :NOUN AutomotiveAntenna)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automotive") Equalizer-TheWord
 (and (isa :NOUN AutomobileEqualizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automotive") Subwoofer-TheWord
 (and (isa :NOUN AutomobileSubwoofer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "automotive" "suspension") Strut-TheWord
 (and (isa :NOUN AutomotiveSuspensionStrut)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Autophyte-TheWord (and (isa :NOUN Autotroph))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "autumn") Sky-TheWord
 (and (isa :NOUN PieceOfSky)
      (relationExistsInstance temporallySubsumes FallSeason :NOUN))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Autumn-TheWord (and (isa :NOUN CalendarAutumn))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    (NP fe_relative_time) ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Autumn-TheWord (and (isa :NOUN FallSeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "autumnal") Equinox-TheWord
 (and (isa :NOUN AutumnalEquinoxDay)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "av" "media" "internet") Gateway-TheWord
 (and (isa :NOUN AVMediaInternetGatewayDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "avalanche") Diode-TheWord
 (and (isa :NOUN AvalancheDiode)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Avalanche-TheWord (and (isa :NOUN Avalanche))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N massOfObject) ((PPFn of) fe_individuals massOfObject)
    (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Avenger-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy RevengeAction :NOUN))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_offender))
   (:GAP (DEN performedBy) (INI fe_injured_party))
   (:GEN (Poss fe_injured_party))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Avenue-TheWord (and (isa :NOUN Avenue))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP objectFoundInLocation)
    ((PPFn of) objectFoundInLocation) (AJP fe_characteristic)
    ((PPFn to) to-Generic) ((PPFn towards) to-Generic)
    ((PPingFn of) mainConstituent)
    (N objectFoundInLocation mainConstituent
     (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location))
   (:GAP (DEN fe_roadway))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 6 2)) ((0 5 0)) ((0 4 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 6 0)) ((0 6 2) (0 7 0)) ((0 2 0) (0 6 1)) ((0 2 0) (0 3 0))
   ((0 2 0) (0 2 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 6 1) (0 7 0)))))

(FNNounSemtrans (TheList) Aves-TheWord (and (isa :NOUN Bird)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aviator-TheWord (and (isa :NOUN Aviator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Avocado-TheWord (and (isa :NOUN AvocadoTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Avoidance-TheWord (and (isa :NOUN AvoidingSomething))
 (frame FN_Avoiding)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn at) eventOccursAt)
    ((PPFn in) temporallyIntersects) (AJP objectActedOn)
    ((PPFn of) objectActedOn) (N objectActedOn) ((PPingFn of) objectActedOn))
   (:GAP (INI doneBy)) (:GEN (Poss doneBy objectActedOn))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((2 0 1)) ((0 4 0)) ((0 4 0) (2 0 0))
   ((0 0 0) (0 5 0)) ((0 1 0) (0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Avowal-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) infoTransferred))))
 (groupPatterns (TheSet ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Award-TheWord (and (isa :NOUN AwardPractice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Awareness-TheWord (and (isa :NOUN AwarenessQuantity))
 (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation) (Sfin topicOfIndividual))
   (:OBLIQUE-OBJECT ((PPFn among) subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation) ((PPFn from) subjectOfMentalSituation)
    ((PPFn on) subjectOfMentalSituation) (Sfin topicOfIndividual)
    ((PPingFn of) topicOfIndividual) ((PPingFn for) topicOfIndividual)
    (Num fe_degree) ((PPFn through) fe_evidence) (AJP fe_degree fe_manner)
    (AVP fe_manner) ((PPFn towards) temporallyIntersects)
    ((PPFn about) situationTopic) ((PPFn concerning) situationTopic)
    (PPinterrog situationTopic) (N subjectOfMentalSituation situationTopic)
    (A subjectOfMentalSituation situationTopic)
    ((PPFn of) topicOfIndividual situationTopic))
   (:GAP (DNI topicOfIndividual)) (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 17 1)) ((1 12 0)) ((1 15 1)) ((1 16 1)) ((1 4 0)) ((1 5 0))
   ((1 6 0)) ((1 17 0)) ((1 16 0)) ((3 0 0)) ((1 2 0)) ((1 9 0) (1 16 1))
   ((1 4 0) (1 9 0)) ((1 9 0) (1 17 0)) ((1 15 1) (3 0 0)) ((1 0 0) (1 16 1))
   ((1 12 0) (1 15 0)) ((1 14 0) (1 16 0)) ((1 13 0) (1 16 0))
   ((1 12 0) (1 16 0)) ((1 8 0) (3 0 0)) ((1 9 0) (1 16 0)) ((1 5 0) (3 0 0))
   ((1 17 0) (3 0 0)) ((1 3 0) (1 17 0)) ((1 0 0) (1 17 0)) ((0 0 0) (1 5 0))
   ((0 0 0) (1 17 0)) ((1 16 0) (1 17 0)) ((1 4 0) (1 9 0) (1 11 0))
   ((0 0 0) (1 9 0) (1 15 1)) ((0 1 0) (1 10 0) (3 0 0))
   ((1 5 0) (1 9 1) (3 0 0)) ((1 3 0) (1 4 0) (1 9 0))
   ((1 1 0) (1 9 0) (1 17 0)) ((0 0 0) (1 7 0) (1 17 0))
   ((0 0 0) (1 9 0) (1 17 0)) ((1 4 0) (1 7 0) (1 16 0)))))

(FNNounSemtrans (TheList) Ax-TheWord (and (isa :NOUN Axe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "axillary") Artery-TheWord
 (and (isa :NOUN AxillaryArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "axillary") Vein-TheWord
 (and (isa :NOUN AxillaryVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Axis-TheWord (and (isa :NOUN Axis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "axis") Vertebra-TheWord
 (and (isa :NOUN AxisVertebra)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Axle-TheWord (and (isa :NOUN Axle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Axon-TheWord (and (isa :NOUN Axon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Azalea-TheWord (and (isa :NOUN Azalea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Azerbaijani-TheWord
 (and (isa :NOUN EthnicGroupOfAzerbaijani)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "azygos") Vein-TheWord (and (isa :NOUN AzygosVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) B-TheWord (and (isa :NOUN BloodTypeB))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bbq") Grill-TheWord (and (isa :NOUN BBQGrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baa-TheWord (and (isa :NOUN BleatingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Babble-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn EmittingSound doneBy
         HumanInfant))))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_component_sound emitter))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Babble-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_component_sound emitter))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Baboon-TheWord (and (isa :NOUN Baboon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby" "bath") Accessory-TheWord
 (and (isa :NOUN BabyToiletrySubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Bib-TheWord (and (isa :NOUN Bib))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Bottle-TheWord (and (isa :NOUN BabyBottle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Bouncer-TheWord (and (isa :NOUN BabyBouncer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Buggy-TheWord (and (isa :NOUN BabyCarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Carraige-TheWord
 (and (isa :NOUN BabyCarriage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Carrier-TheWord (and (isa :NOUN BabyCarrier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Doctor-TheWord (and (isa :NOUN Pediatrician))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby" "feeding") Product-TheWord
 (and (isa :NOUN BabyFeedingDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Food-TheWord (and (isa :NOUN BabyFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Gate-TheWord (and (isa :NOUN BabyGate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Mobile-TheWord (and (isa :NOUN InfantMobile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Monitor-TheWord (and (isa :NOUN BabyMonitor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Oil-TheWord (and (isa :NOUN BabyOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Pacifier-TheWord (and (isa :NOUN Pacifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby") Powder-TheWord (and (isa :NOUN TalcumPowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby" "product" "market") Category-TheWord
 (and (isa :NOUN BabyProductMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby" "soft") Carrier-TheWord
 (and (isa :NOUN BabySoftCarrier)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baby-TheWord (and (isa :NOUN JuvenileAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baby-TheWord (and (isa :NOUN HumanInfant))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn from) age) ((PPFn in) fe_descriptor)
    ((PPFn at) fe_descriptor) ((PPFn inside) fe_descriptor)
    ((PPFn within) fe_descriptor) (VPing fe_descriptor) (N fe_ethnicity)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN age fe_person))))
 (groupPatterns
  (TheSet ((1 7 3)) ((1 7 2)) ((1 5 0)) ((1 4 0)) ((1 8 0)) ((1 3 0)) ((1 1 0))
   ((1 2 0)) ((1 7 1)) ((1 0 0)) ((1 7 0)) ((1 7 3) (1 7 3)) ((0 0 0) (1 6 0))
   ((1 7 1) (1 7 3)) ((1 7 2) (1 8 0)) ((1 1 0) (1 7 1)) ((0 0 0) (1 7 3))
   ((0 0 0) (1 7 3) (1 8 1)))))

(FNNounSemtrans (TheList "baby") Walker-TheWord (and (isa :NOUN BabyWalker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baby" "^s") Rattle-TheWord
 (and (isa :NOUN Rattle-Toy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Babysitter-TheWord (and (isa :NOUN Babysitter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Babysitting-TheWord (and (isa :NOUN Babysitting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baccarat-TheWord (and (isa :NOUN Baccarat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "of" "arts" "in" "library") Science-TheWord
 (and (isa :NOUN (BachelorsDegreeInFn LibraryAndInformationScience)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "of" "arts" "in") Nursing-TheWord
 (and (isa :NOUN (BachelorsDegreeInFn Nursing-FieldOfStudy))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "of") Arts-TheWord
 (and (isa :NOUN BachelorOfArtsDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "of") Medicine-TheWord
 (and (isa :NOUN (BachelorsDegreeInFn Medicine-FieldOfStudy))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "of" "science" "in") Engineering-TheWord
 (and (isa :NOUN (BachelorsDegreeInFn EngineeringField))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "of") Science-TheWord
 (and (isa :NOUN BachelorOfScienceDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bachelor" "s") Degree-TheWord
 (and (isa :NOUN BachelorsDegree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bachelor-TheWord
 (and (isa :NOUN Unmarried) (isa :NOUN (MaleFn HumanAdult)))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT (N fe_partner_1) (NP fe_partner_1))
   (:GAP (DEN fe_partner_1) (INI fe_partner_2) (DNI fe_partner_2))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((1 1 0)))))

(FNNounSemtrans (TheList "back" "of") Beyond-TheWord
 (and (isa :NOUN RuralArea)) (frame FN_Isolated_places)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventOccursAt))
   (:OBLIQUE-OBJECT ((PPFn in) fe_relative_location))
   (:GAP (DEN eventOccursAt))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Back-TheWord (and (isa :NOUN Back-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Back-TheWord (and (isa :NOUN SeatingDeviceBack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Back-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Back_Then-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyIntersects TemporalThing :NOUN))
 (frame FN_Temporal_collocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backboard-TheWord (and (isa :NOUN BackBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backcountry-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationInstanceExists farFrom :NOUN HighPopulationRegionOrPolity))
 (frame FN_Isolated_places) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "backgammon") Board-TheWord
 (and (isa :NOUN Backgammon-Board)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "backgammon") Piece-TheWord
 (and (isa :NOUN Backgammon-Piece)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "backgammon") Set-TheWord
 (and (isa :NOUN Backgammon-EquipmentSet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backhoe-TheWord (and (isa :NOUN Backhoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backing-TheWord
 (and (isa :NOUN AllyingWithSomething)) (frame FN_Taking_sides)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "backlit" "liquid" "crystal") Display-TheWord
 (and (isa :NOUN BacklitLiquidCrystalDisplay)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backpack-TheWord (and (isa :NOUN Backpack))
 (frame FN_Containers)
 (bindingTemplate (TheList (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Backstay-TheWord (and (isa :NOUN Backstay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backstroke-TheWord (and (isa :NOUN Backstroke))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "backup" "power") Supply-TheWord
 (and (isa :NOUN BackupPowerSupply)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Backwater-TheWord (and (isa :NOUN RuralArea))
 (frame FN_Isolated_places)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventOccursAt) ((PPFn through) eventOccursAt))
   (:OBLIQUE-OBJECT (AJP fe_relative_location) (N fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn of) fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventOccursAt))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Backwoods-TheWord (and (isa :NOUN WildernessArea))
 (frame FN_Isolated_places)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_location) ((PPFn of) fe_relative_location))
   (:GAP (DEN eventOccursAt))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bacon-TheWord (and (isa :NOUN Bacon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bacteria-TheWord (and (isa :NOUN (MobFn Bacterium)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bacterial") Meningitis-TheWord
 (and (isa :NOUN (InfectionFn Meninges))) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bacteriologist-TheWord
 (and (isa :NOUN Bacteriologist)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bacteriology-TheWord (and (isa :NOUN Bacteriology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bacterium-TheWord (and (isa :NOUN Bacterium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bad") Breath-TheWord (and (isa :NOUN Halitosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bad") Idea-TheWord
 (and (isa :NOUN Idea)
      (hasEvaluativeQuantity :NOUN (HighToVeryHighAmountFn Badness-Generic)))
 (frame FN_Desirable_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_state_of_affairs))
   (:OBLIQUE-OBJECT (VPto fe_state_of_affairs))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bad-Luck
 (and (isa :NOUN (CollectionDifferenceFn Event PurposefulAction))
      (relationInstanceExists maleficiary :NOUN Agent-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bad-TheWord (and (isa :NOUN Badness-Moral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Badge-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    ((PPFn of) clothingStyle deviceUse) ((PPFn on) wearer)
    (N fe_descriptor mainConstituent clothingStyle wearer))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss fe_descriptor wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 3 3)) ((0 1 1)) ((0 1 0)) ((0 3 2)) ((0 0 2)) ((0 3 1))
   ((0 0 1)) ((0 3 0)) ((0 0 0)) ((0 1 1) (2 0 1)) ((0 3 2) (2 0 1))
   ((0 0 2) (2 0 1)) ((0 0 0) (0 3 2)) ((0 2 0) (0 3 2) (2 0 1))
   ((0 0 0) (0 3 2) (2 0 0)))))

(FNNounSemtrans (TheList) Badinage-TheWord (and (isa :NOUN Conversation))
 (frame FN_Chatting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_interlocutors)
    ((PPFn about) situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (1 0 1)) ((0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Badlands-TheWord
 (and (isa :NOUN Badlands-Topographical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "badminton") Birdie-TheWord
 (and (isa :NOUN BadmintonBirdie)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "badminton") Court-TheWord
 (and (isa :NOUN BadmintonCourt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "badminton") Racket-TheWord
 (and (isa :NOUN BadmintonRacket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Badminton-TheWord (and (isa :NOUN Badminton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bag-TheWord (and (isa :NOUN Bag))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) containedObject)
    ((PPFn of) containedObject activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse)
    (AJP activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 3 1)) ((0 1 1)) ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 1 0))
   ((0 2 2) (2 0 0)) ((0 2 1) (2 0 0)) ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0))
   ((0 1 0) (0 2 1)) ((0 1 0) (2 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Bag-TheWord (and (isa :NOUN (VolumeFn Bag)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT (AJP measurementResult) (N measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DNI (InverseBinaryPredicateFn volumeOfObject)) (DEN fe_unit))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 0 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Bag-TheWord (and (isa :NOUN Purse)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bag-TheWord (and (isa :NOUN Suitcase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bagatelle-TheWord (and (isa :NOUN BarBilliards))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bagel-TheWord (and (isa :NOUN Bagel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bagful-TheWord (and (isa :NOUN (VolumeFn Bag)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "baggage") Cart-TheWord (and (isa :NOUN BaggageCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baggage-TheWord (and (isa :NOUN Luggage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bahamian") Dollar-TheWord
 (and (isa :NOUN Dollar-Bahamas)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bahrain") Dinar-TheWord
 (and (isa :NOUN Dinar-Bahrain)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baht-TheWord (and (isa :NOUN Baht-Thailand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bail-TheWord (and (isa :NOUN BailAgreement))
 (frame FN_Bail_decision)
 (bindingTemplate
  (TheList (:SUBJECT (NP patient-GenericDirect justiceOfCourt))
   (:OBLIQUE-OBJECT (NP patient-GenericDirect) ((PPFn by) justiceOfCourt)
    (AJP fe_status) (N fe_status) ((PPFn at) fe_status)
    ((PPFn for) temporallyIntersects) ((PPFn in) temporallyIntersects)
    ((PPFn on) fe_status temporallyIntersects))
   (:GAP (CNI justiceOfCourt) (DNI justiceOfCourt))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 1) (1 0 0))
   ((0 0 0) (1 7 0) (1 7 1)) ((0 0 0) (1 1 0) (1 6 0))
   ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList "bake") Sale-TheWord (and (isa :NOUN BakeSale))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baker-TheWord (and (isa :NOUN Baker)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bakery-TheWord (and (isa :NOUN Bakery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baking") Powder-TheWord
 (and (isa :NOUN BakingPowder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baking") Sheet-TheWord (and (isa :NOUN BakingSheet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baking") Soda-TheWord
 (and (isa :NOUN SodiumBicarbonate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baking-TheWord (and (isa :NOUN BakingFood))
 (frame FN_Cooking_creation)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy foodItemPrepared))
   (:OBLIQUE-OBJECT ((PPFn with) ingredients) (N foodItemPrepared)
    ((PPFn for) purposeOfEvent to-Generic)
    (NP foodItemPrepared temporallyIntersects))
   (:GAP (CNI performedBy) (DNI foodItemPrepared) (INI foodItemPrepared))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 1)) ((1 0 0)) ((0 0 0) (1 2 1)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 1 0)) ((0 0 0) (0 0 1) (1 3 1)))))

(FNNounSemtrans (TheList) Balaclava-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn over) wornOn) (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 1 1))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "balance") Beam-TheWord
 (and (isa :NOUN GymBalanceBeam)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "balance") Sheet-TheWord
 (and (isa :NOUN BalanceSheet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balance-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance accountBalance FinancialAccount :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balance-TheWord
 (and (isa :NOUN Scale-MeasuringDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balboa-TheWord (and (isa :NOUN Balboa-Panama))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "balcony") Door-TheWord (and (isa :NOUN BalconyDoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "balcony") Doorway-TheWord
 (and (isa :NOUN BalconyDoorway)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balcony-TheWord
 (and (isa :NOUN BalconyLevelInAConstruction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bald") Eagle-TheWord (and (isa :NOUN BaldEagle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baldness-TheWord (and (isa :NOUN Bald))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baleen") Whale-TheWord (and (isa :NOUN BaleenWhale))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balinese-TheWord (and (isa :NOUN BalineseLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ball") Bearing-TheWord (and (isa :NOUN BallBearing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ball") Field-TheWord (and (isa :NOUN BaseballField))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ball") Game-TheWord (and (isa :NOUN BaseballGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ball") Gown-TheWord (and (isa :NOUN BallGown))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ball-TheWord (and (isa :NOUN Ball)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Ball-TheWord (and (isa :NOUN Ball-FormalDance))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host)) (:OBJECT (NP host))
   (:OBLIQUE-OBJECT ((PPFn for) fe_occasion) ((PPFn at) eventOccursAt)
    (N amongThosePresent host fe_occasion eventOccursAt clothingStyle)
    (AJP fe_occasion clothingStyle temporallyIntersects)
    ((PPFn on) temporallyIntersects) (NP temporallyIntersects)
    ((PPFn in) temporallyIntersects))
   (:GAP (2nd beneficiary) (DEN fe_social_event))
   (:GEN
    (Poss beneficiary host fe_occasion eventOccursAt temporallyIntersects))))
 (groupPatterns
  (TheSet ((4 0 4)) ((2 1 0)) ((2 2 3)) ((2 2 2)) ((4 0 1)) ((2 2 1)) ((0 0 0))
   ((2 2 4) (4 0 3)) ((2 2 4) (4 0 1)) ((2 2 2) (4 0 1)) ((0 0 0) (2 5 0))
   ((0 0 0) (2 3 1)) ((0 0 1) (2 3 1) (4 0 2)) ((2 3 0) (2 6 0) (4 0 0))
   ((0 0 0) (1 0 0) (2 1 0)) ((2 0 0) (2 1 0) (2 6 0) (4 0 1))
   ((0 0 1) (2 2 0) (2 3 2) (2 4 0) (4 0 1)))))

(FNNounSemtrans (TheList) Ballad-TheWord (and (isa :NOUN Ballad-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn for) beneficiary) (NP fe_text)
    (AJP authorOfLiteraryWork-CW fe_genre startingDate)
    ((PPFn of) startingDate situationTopic) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic) ((PPingFn about) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 0)) ((0 4 1)) ((0 5 0)) ((0 4 0)) ((0 1 0)) ((0 0 0))
   ((0 3 0)) ((0 2 0) (0 3 1)) ((0 4 1) (2 0 0)) ((0 3 0) (0 3 2))
   ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Ballerina-TheWord (and (isa :NOUN Ballerina))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ballet") Company-TheWord
 (and (isa :NOUN BalletCompany)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ballet-TheWord
 (and (isa :NOUN BalletDancePerformance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ballet") Skirt-TheWord (and (isa :NOUN Tutu))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ballgown-TheWord (and (isa :NOUN BallGown))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "ballistic") Missile-TheWord
 (and (isa :NOUN BallisticMissile)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP activeIngredientsOfType instrument-UsedAsWeapon))
   (:OBLIQUE-OBJECT ((PPFn including) parts)
    (AJP fe_descriptor parts activeIngredientsOfType)
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType)
    ((PPFn in) activeIngredientsOfType) (AVP activeIngredientsOfType)
    ((PPFn with) activeIngredientsOfType) (Srel deviceUse)
    (A fe_descriptor activeIngredientsOfType doneBy))
   (:GAP (2nd activeIngredientsOfType) (DEN instrument-UsedAsWeapon))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 2)) ((0 0 1)) ((1 6 0)) ((1 5 0)) ((1 2 1)) ((1 4 0))
   ((1 1 2)) ((1 7 1)) ((1 2 0)) ((1 1 0)) ((1 1 2) (3 0 0)) ((1 1 2) (1 3 0))
   ((0 0 0) (1 0 0)) ((1 2 0) (1 2 1)) ((1 1 2) (1 2 0)) ((1 7 0) (1 7 1))
   ((1 2 0) (1 2 1) (3 0 0)) ((1 1 1) (1 1 2) (1 2 0)))))

(FNNounSemtrans (TheList "balloon") Mortgage-TheWord
 (and (isa :NOUN BalloonMortgage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balloon-TheWord (and (isa :NOUN Balloon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balloon-TheWord (and (isa :NOUN ToyBalloon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ballpark") Figure-TheWord (and (isa :NOUN Estimate))
 (frame FN_Estimated_value) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ballpark-TheWord (and (isa :NOUN Estimate))
 (frame FN_Estimated_value) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ballplayer-TheWord (and (isa :NOUN BaseballPlayer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ballroom-TheWord (and (isa :NOUN Ballroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ballroom") Dance-TheWord
 (and (isa :NOUN BallroomDancing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Balochi-TheWord (and (isa :NOUN BaluchiLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bamboo-TheWord (and (isa :NOUN BambooPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bamboo-TheWord (and (isa :NOUN BambooWood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ban-TheWord (and (isa :NOUN Prohibition))
 (frame FN_Prohibiting_or_licensing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_principle) (N fe_state_of_affairs)
    ((PPFn on) fe_state_of_affairs))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Banana-TheWord (and (isa :NOUN (FruitFn BananaTree)))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Banana-TheWord (and (isa :NOUN BananaTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Band-TheWord (and (isa :NOUN Band-MusicGroup))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property)
    ((PPFn at) fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate)) (:NOUN (N fe_aggregate))
   (:GEN ((PPFn of) fe_individuals))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (3 0 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Band-TheWord (and (isa :NOUN GymRings))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "band") Aid-TheWord (and (isa :NOUN Bandage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bandage-TheWord (and (isa :NOUN Bandage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bandana-TheWord (and (isa :NOUN Bandana))
 (frame FN_Accoutrements) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bandanna-TheWord (and (isa :NOUN Bandana))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Srel wornOn) (AJP wornOn fe_descriptor))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Bandanna-TheWord (and (isa :NOUN Bandana))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bandleader-TheWord (and (isa :NOUN DanceBandLeader))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bandsaw") Blade-TheWord
 (and (isa :NOUN BandsawBlade)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bandsaw-TheWord (and (isa :NOUN Bandsaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bandwidth-TheWord (and (isa :NOUN Bandwidth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bang-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_manner))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bangle-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) (N mainConstituent)
    (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 2 1)) ((0 1 0) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Banjo-TheWord (and (isa :NOUN Banjo)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bank") Account-TheWord (and (isa :NOUN BankAccount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bank") Charge-TheWord (and (isa :NOUN BankCharge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bank-TheWord (and (isa :NOUN BankOrganization))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_business_name)) (:GAP (DEN fe_business))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bank-TheWord (and (isa :NOUN Bank-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bank-TheWord (and (isa :NOUN BankingTurn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bank-TheWord (and (isa :NOUN Riverbank))
 (frame FN_Relational_natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Banker-TheWord (and (isa :NOUN Banker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "banking") Game-TheWord (and (isa :NOUN BankingGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "banking") Industry-TheWord
 (and (isa :NOUN BankingIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bannister-TheWord (and (isa :NOUN Banister))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "banquet") Room-TheWord (and (isa :NOUN BanquetHall))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Banquet-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Banquet-TheWord (and (isa :NOUN Banquet))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn with) amongThosePresent)
    ((PPFn for) amongThosePresent beneficiary) ((PPFn to) beneficiary)
    (AJP host) ((PPFn by) host) (VPto fe_occasion) ((PPFn at) eventOccursAt)
    (N host fe_occasion clothingStyle)
    ((PPFn in) eventOccursAt temporallyIntersects) (AVP temporallyIntersects)
    (NP temporallyIntersects) ((PPFn on) temporallyIntersects))
   (:GAP (2nd beneficiary) (CNI host) (DEN fe_social_event))))
 (groupPatterns
  (TheSet ((1 7 1)) ((0 0 1)) ((1 7 0)) ((1 1 1)) ((1 2 0)) ((1 0 0))
   ((1 8 0) (1 11 0)) ((1 6 0) (1 10 0)) ((1 7 1) (1 10 0)) ((1 7 1) (1 8 0))
   ((1 7 0) (1 10 0)) ((0 0 1) (1 7 1)) ((1 1 1) (1 6 0)) ((1 1 0) (1 8 1))
   ((1 1 1) (1 7 2) (1 11 0)) ((0 0 1) (1 5 0) (1 6 0))
   ((1 2 0) (1 3 0) (1 4 0)) ((1 1 0) (1 8 0) (1 10 0))
   ((0 0 0) (1 3 0) (1 8 0) (1 10 0)) ((0 0 0) (1 3 0) (1 8 0) (1 9 0))
   ((0 0 0) (1 3 0) (1 5 0) (1 6 0) (1 8 1)))))

(FNNounSemtrans (TheList) Banshee-TheWord (and (isa :NOUN Banshee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Banter-TheWord (and (isa :NOUN Conversation))
 (frame FN_Chatting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors))
   (:OBLIQUE-OBJECT (NP fe_interlocutor_2) ((PPFn with) fe_interlocutor_2)
    (Sfin fe_interlocutor_2) (N fe_interlocutors)
    ((PPFn between) fe_interlocutors) ((PPFn on) fe_interlocutors))
   (:GEN (Poss fe_interlocutor_1))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((0 0 1)) ((1 3 0)) ((0 0 0)) ((1 2 0) (2 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Bantu-TheWord (and (isa :NOUN EthnicGroupOfBantus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baptism-TheWord (and (isa :NOUN Baptism))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT ((PPFn by) leadersOfMovement) ((PPFn for) groupMembers)
    ((PPFn of) groupMembers) ((PPFn into) fe_organization)
    ((PPFn at) eventOccursAt) ((PPFn on) temporallyIntersects)
    ((PPFn in) fe_manner eventOccursAt temporallyIntersects)
    (AJP fe_manner groupMembers activeIngredientsOfType)
    (N groupMembers activeIngredientsOfType))
   (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 7 2)) ((1 6 1)) ((1 3 0)) ((2 0 0)) ((1 2 0)) ((1 8 0))
   ((1 7 1)) ((1 6 0)) ((0 0 0) (1 6 2)) ((0 0 0) (1 4 0)) ((1 3 0) (1 7 0))
   ((1 1 0) (1 7 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 5 0) (1 6 1))
   ((1 2 0) (1 6 1) (1 7 0)))))

(FNNounSemtrans (TheList) Baptist-TheWord (and (isa :NOUN BaptistPerson))
 (frame FN_People_by_religion) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baptistic") Doctrine-TheWord
 (and (isa :NOUN BaptistReligion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bar") Code-TheWord (and (isa :NOUN Barcode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bar-TheWord (and (isa :NOUN Bar-Place))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn nameString)) ((PPFn on) fe_relative_location)
    (A activeIngredientsOfType))
   (:GAP (DEN fe_building))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 3 0)) ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Bar-TheWord (and (isa :NOUN Bar-Object))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bar-TheWord (and (isa :NOUN Bar-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bar-TheWord (and (isa :NOUN Bar-UnitOfPressure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bar-TheWord (and (isa :NOUN Shoal))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bar-TheWord (and (isa :NOUN Ritual)) (frame FN_Rite)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bar") Tool-TheWord (and (isa :NOUN ToolForBarArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barbadian-TheWord (and (isa :NOUN BarbadosPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "barbados") Dollar-TheWord
 (and (isa :NOUN Dollar-Barbados)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barbecue-TheWord (and (isa :NOUN BarbecuingFood))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn for) amongThosePresent fe_occasion)
    ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects)
    (N amongThosePresent eventOccursAt temporallyIntersects))
   (:GAP (2nd beneficiary) (CNI host) (DEN fe_social_event))
   (:GEN (Poss host))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 2)) ((1 2 0)) ((3 0 0)) ((0 0 1)) ((1 1 0)) ((0 0 0))
   ((1 1 0) (1 4 2)) ((0 0 1) (1 2 1)) ((1 0 1) (1 4 1)) ((1 0 0) (1 3 0))
   ((0 0 1) (1 4 0)) ((0 0 1) (1 1 0) (1 3 0)) ((0 0 0) (1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList "barbed") Wire-TheWord (and (isa :NOUN BarbedWire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barber-TheWord (and (isa :NOUN HairStylist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "barbie") Doll-TheWord
 (and (isa :NOUN Barbie-TheDoll)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barbiturate-TheWord (and (isa :NOUN Barbiturate))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bargain-TheWord (and (isa :NOUN Agreement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barge-TheWord (and (isa :NOUN Barge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baritone-TheWord (and (isa :NOUN Baritone-Singer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barium-TheWord (and (isa :NOUN Barium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bark-TheWord (and (isa :NOUN TreeBark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bark-TheWord (and (isa :NOUN BarkingSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter) ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((1 0 0) (2 0 0))
   ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Barkeeper-TheWord (and (isa :NOUN Bartender))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barley-TheWord (and (isa :NOUN Barley-TheGrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barley-TheWord (and (isa :NOUN BarleyPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barmaid-TheWord
 (and (isa :NOUN (FemaleFn Bartender))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barman-TheWord (and (isa :NOUN (MaleFn Bartender)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "barn") Owl-TheWord (and (isa :NOUN Owl-Barn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barn-TheWord (and (isa :NOUN Barn))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) (A fe_descriptor fe_function)
    ((PPFn of) mainConstituent) (NP eventOccursAt) (AVP eventOccursAt)
    ((PPFn on) eventOccursAt) ((PPFn in) startingDate)
    (AJP fe_descriptor activeIngredientsOfType)
    (N fe_function activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 7 0)) ((0 8 1)) ((0 7 1)) ((0 6 0)) ((0 5 0)) ((0 4 0))
   ((0 2 0)) ((0 0 0)) ((0 1 0) (0 3 0)) ((0 1 1) (0 7 0)))))

(FNNounSemtrans (TheList) Barnacle-TheWord (and (isa :NOUN Barnacle))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "barnes" "&" "noble") Nook-TheWord
 (and (isa :NOUN BarnesAndNobleNook)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "barometric") Pressure-TheWord
 (and (isa :NOUN Pressure)
      (relationExistsInstance barometricPressure GaseousTangibleThing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baron-TheWord (and (isa :NOUN Baron))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_governed) (N fe_governed) ((PPFn in) fe_governed)
    ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns (TheSet ((2 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Baroness-TheWord (and (isa :NOUN Baroness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baronet-TheWord (and (isa :NOUN Baronet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barony-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barrack-TheWord (and (isa :NOUN MilitaryBarrack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barracks-TheWord (and (isa :NOUN Dormitory))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barracuda-TheWord (and (isa :NOUN Barracuda))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barrel-TheWord (and (isa :NOUN Barrel-Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPingFn of) containedObject)
    (AJP mainConstituent) (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed) (DNI containedObject)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 3 1) (2 0 0)))))

(FNNounSemtrans (TheList) Barrel-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_count)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DNI (InverseBinaryPredicateFn volumeOfObject)) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Barrel-TheWord (and (isa :NOUN Barrel-Container))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barrel-TheWord (and (isa :NOUN GunBarrel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barrette-TheWord (and (isa :NOUN HairBarrette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "barrier") Island-TheWord
 (and (isa :NOUN BarrierIsland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barrier-TheWord
 (and (isa :NOUN Barrier-ConstructionArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barring-TheWord
 (and (isa :NOUN BarringSomeoneByANegativeVote)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barroom-TheWord
 (and (isa :NOUN Bar-DrinkingEstablishment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barrow-TheWord (and (isa :NOUN Wheelbarrow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bartender-TheWord (and (isa :NOUN Bartender))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bartender-TheWord (and (isa :NOUN Bartender))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barter-TheWord (and (isa :NOUN Bartering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Barye-TheWord (and (isa :NOUN Barye-UnitOfPressure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basal") Vein-TheWord (and (isa :NOUN BasalVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basalt-TheWord (and (isa :NOUN Basalt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Base-TheWord (and (isa :NOUN InfrastructureElement))
 (frame FN_Infrastructure)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP processTypeForAccomplishmentType)
    (VPto processTypeForAccomplishmentType) (A resourceInSystem))
   (:GAP (DNI ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Base-TheWord (and (isa :NOUN MilitaryBase-Grounds))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor fe_relative_location)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString)
     locationUse))
   (:GAP (DEN eventLocale) (DNI locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0) (0 1 2)) ((0 0 1) (0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Base-TheWord
 (and (isa :NOUN ChemicallyBasicSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Base-TheWord (and (isa :NOUN Pedestal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Base-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "baseball") Bat-TheWord (and (isa :NOUN BaseballBat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Cap-TheWord (and (isa :NOUN BaseballCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Card-TheWord
 (and (isa :NOUN BaseballCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Diamond-TheWord
 (and (isa :NOUN BaseballDiamond)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Equipment-TheWord
 (and (isa :NOUN (EquipmentTypeForStructuredActivityFn Baseball-TheGame)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Glove-TheWord
 (and (isa :NOUN BaseballMitt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Jersey-TheWord
 (and (isa :NOUN BaseballJersey)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Season-TheWord
 (and (isa :NOUN BaseballSeason)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Team-TheWord
 (and (isa :NOUN BaseballTeam)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "baseball") Team-TheWord
 (and (isa :NOUN BaseballTeam)) (frame FN_Team) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baseball-TheWord (and (isa :NOUN Baseball-Ball))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basement-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Basement-TheWord
 (and (isa :NOUN BasementLevelInAConstruction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basenji-TheWord (and (isa :NOUN Basenji))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bash-TheWord (and (isa :NOUN Party-Celebration))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) beneficiary) (N duration fe_occasion)
    ((PPFn at) eventOccursAt) (AJP duration clothingStyle)
    ((PPFn on) temporallyIntersects))
   (:GAP (DEN fe_social_event))
   (:GEN (Poss beneficiary host temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((2 0 1)) ((0 1 0)) ((0 3 0)) ((0 3 1) (0 4 0))
   ((0 1 1) (2 0 2)) ((0 1 1) (0 2 0)) ((0 2 0) (2 0 1)) ((0 3 0) (0 4 0))
   ((0 1 1) (2 0 0)) ((0 1 1) (0 2 0) (0 4 0)) ((0 0 0) (0 1 1) (0 2 0)))))

(FNNounSemtrans (TheList "basic" "cognitive") Process-TheWord
 (and (isa :NOUN ObtainingAndStoringKnowledge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basic" "office") Connector-TheWord
 (and (isa :NOUN BasicOfficeConnector)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basic-TheWord
 (and (isa :NOUN Basic-ComputerLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basidium-TheWord (and (isa :NOUN Basidiomycota))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basil-TheWord (and (isa :NOUN HerbPlant))
 (frame FN_Food)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "basilar") Artery-TheWord
 (and (isa :NOUN BasilarArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basilic") Vein-TheWord (and (isa :NOUN BasilicVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basilica-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basin-TheWord (and (isa :NOUN Basin))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) (AJP deviceUse)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 0)) ((0 3 1)) ((0 1 0)) ((0 3 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Basin-TheWord (and (isa :NOUN Basin-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basis-TheWord (and (isa :NOUN Motive))
 (frame FN_Reason) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basket-TheWord (and (isa :NOUN Basket))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn outputsCreated))
    ((PPFn with) containedObject) ((PPFn of) containedObject mainConstituent)
    (N containedObject mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 1)) ((0 3 1)) ((0 1 0)) ((0 2 0)) ((0 3 0))
   ((0 3 1) (0 3 1)) ((0 3 0) (2 0 0)) ((0 3 0) (0 3 1)) ((0 0 0) (0 3 2)))))

(FNNounSemtrans (TheList) Basket-TheWord (and (isa :NOUN Basket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basketball-TheWord
 (and (isa :NOUN (PlayingFn Basketball-TheGame))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basketball") Card-TheWord
 (and (isa :NOUN BasketballCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basketball") Court-TheWord
 (and (isa :NOUN BasketballCourt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basketball") Hoop-TheWord
 (and (isa :NOUN BasketballHoop)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basketball") Player-TheWord
 (and (isa :NOUN BasketballPlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basketball") Team-TheWord
 (and (isa :NOUN BasketballTeam)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "basketball") Team-TheWord
 (and (isa :NOUN BasketballTeam)) (frame FN_Team) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basketball-TheWord (and (isa :NOUN Basketball-Ball))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bass-TheWord (and (isa :NOUN Bass-Fish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bass-TheWord (and (isa :NOUN BassGuitar-Electric))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bass") Drum-TheWord (and (isa :NOUN BassDrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bass") Fiddle-TheWord (and (isa :NOUN BassViolin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bass") Horn-TheWord (and (isa :NOUN Tuba))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bass-TheWord (and (isa :NOUN Bass-Singer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bass") Violin-TheWord (and (isa :NOUN BassViolin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basset-TheWord (and (isa :NOUN BassetHound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bassinet-TheWord (and (isa :NOUN Bassinet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bassoon-TheWord (and (isa :NOUN Bassoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Basswood-TheWord
 (and (isa :NOUN (WoodFn LindenTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Device-TheWord (and (isa :NOUN Baster-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baster-TheWord (and (isa :NOUN Baster-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bat-TheWord (and (isa :NOUN Bat-Mammal))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bat-TheWord (and (isa :NOUN BaseballBat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bateau") Mouche-TheWord
 (and (isa :NOUN BateauMouche-Boat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Brush-TheWord (and (isa :NOUN BathBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Oil-TheWord (and (isa :NOUN BathOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Pillow-TheWord (and (isa :NOUN BathPillow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Product-TheWord
 (and (isa :NOUN BathAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Salt-TheWord (and (isa :NOUN BathSalt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Soap-TheWord (and (isa :NOUN BathSoapBar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bath-TheWord (and (isa :NOUN TakingABath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bath") Towel-TheWord (and (isa :NOUN BathTowel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bathhouse-TheWord
 (and (isa :NOUN Bathhouse-Facility)) (frame FN_Locale_by_use)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bathing") Cap-TheWord (and (isa :NOUN SwimmingCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bathrobe-TheWord (and (isa :NOUN Robe-Sleepwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle)
    (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 1 2) (2 0 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "bathroom") Scale-TheWord
 (and (isa :NOUN BathroomScale)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bathroom" "storage") Unit-TheWord
 (and (isa :NOUN StorageConstructForBathroom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bathroom-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bathroom-TheWord (and (isa :NOUN Bathroom-Home))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bathtub-TheWord (and (isa :NOUN Bathtub))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bathtub-TheWord (and (isa :NOUN Bathtub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baton-TheWord (and (isa :NOUN Baton-Musical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Baton-TheWord (and (isa :NOUN Baton-Sports))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battalion-TheWord
 (and (isa :NOUN Battalion-MilitaryEchelon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Batter-TheWord (and (isa :NOUN BaseballBatter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Batter-TheWord (and (isa :NOUN PancakeBatter))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battery-TheWord (and (isa :NOUN AutomobileBattery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battery-TheWord (and (isa :NOUN Battery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battery-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_degree) (AJP fe_specification) (NP fe_specification)
    ((PPFn against) victim))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Battery-TheWord
 (and (isa :NOUN TouchingEvent)
      (relationExistsInstance forbiddenActType ForbiddingSomething :NOUN))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_degree) (AJP fe_specification) (NP fe_specification)
    ((PPFn against) victim))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList "battle") Cruiser-TheWord
 (and (isa :NOUN BattleCruiser)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battle-TheWord (and (isa :NOUN Battle))
 (frame FN_Firefighting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_firefighter)) (:OBLIQUE-OBJECT (NP fe_fire))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Battle-TheWord (and (isa :NOUN Battle))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn over) fe_issue)
    ((PPFn of) eventOccursAt) ((PPFn near) eventOccursAt)
    ((PPFn at) eventOccursAt) ((PPFn off) eventOccursAt)
    ((PPFn for) purposeOfEvent) (Sforto purposeOfEvent) (VPto purposeOfEvent)
    ((PPFn with) fe_side_2) ((PPFn against) fe_side_2)
    (A duration fe_manner by-Underspecified fe_sides)
    (N fe_depictive instrument-Generic fe_issue by-Underspecified eventOccursAt
     purposeOfEvent fe_sides)
    ((PPFn in) by-Underspecified eventOccursAt temporallyIntersects)
    (NP temporallyIntersects)
    (AJP fe_depictive duration fe_manner eventOutcomes temporallyIntersects)
    ((PPFn between) fe_sides temporallyIntersects))
   (:GAP (DNI fe_issue fe_side_1 fe_side_2 fe_sides) (INI fe_side_2 fe_sides))
   (:GEN (Poss fe_side_1 fe_sides))))
 (groupPatterns
  (TheSet ((1 13 2)) ((1 10 0)) ((1 6 0)) ((1 2 0)) ((1 12 4)) ((1 12 3))
   ((1 15 2)) ((1 1 0)) ((1 12 0)) ((1 16 0) (1 16 1)) ((1 15 4) (1 16 0))
   ((0 0 0) (1 9 0)) ((1 15 3) (1 16 0)) ((1 8 0) (3 0 0)) ((1 7 0) (3 0 0))
   ((0 0 1) (1 13 0)) ((1 9 0) (1 12 3)) ((1 9 0) (1 11 1)) ((0 0 1) (1 1 0))
   ((1 1 0) (1 12 6)) ((1 1 0) (1 11 3)) ((1 0 0) (1 11 3)) ((1 1 0) (1 9 0))
   ((1 12 1) (1 16 0)) ((1 3 0) (1 12 1)) ((1 15 1) (3 0 1)) ((1 9 0) (1 11 0))
   ((1 10 0) (1 15 1)) ((1 12 5) (1 15 1)) ((0 0 0) (1 9 0) (1 15 2))
   ((1 9 0) (1 11 2) (1 15 2)) ((0 0 0) (1 1 0) (1 12 3))
   ((1 2 0) (1 13 2) (1 15 0)) ((0 0 0) (1 9 0) (1 13 1) (1 14 0))
   ((1 5 0) (1 10 0) (1 12 4) (1 13 2)) ((1 4 0) (1 10 0) (1 12 2) (1 14 0))
   ((0 0 0) (1 1 0) (1 9 0) (1 12 3)))))

(FNNounSemtrans (TheList) Battle-TheWord (and (isa :NOUN MilitaryBattle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battlefield-TheWord
 (and (isa :NOUN EnduringThing-Localized)
      (relationExistsInstance eventOccursAt Battle :NOUN))
 (frame FN_Locale_by_event) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battlefield-TheWord (and (isa :NOUN BattleZone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battlement-TheWord (and (isa :NOUN Battlement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Battleship-TheWord (and (isa :NOUN Battleship))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bauxite-TheWord (and (isa :NOUN BauxiteOre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bay-TheWord (and (isa :NOUN Bay))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn outside) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "bay") Window-TheWord (and (isa :NOUN BayWindow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bayou-TheWord (and (isa :NOUN Swamp))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor) (AJP fe_descriptor)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn near) fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 2 0)) ((0 2 1) (0 4 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Bazooka-TheWord (and (isa :NOUN Bazooka))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "beach") Chair-TheWord (and (isa :NOUN BeachChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beach-TheWord (and (isa :NOUN Beach))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn along) fe_relative_location) ((PPFn in) fe_relative_location)
    (N parts fe_descriptor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn near) fe_relative_location)
    (AJP parts fe_descriptor activeIngredientsOfType))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 7 2)) ((0 6 0)) ((0 3 0)) ((0 5 0)) ((0 4 3)) ((0 1 0)) ((0 4 2))
   ((0 7 1)) ((2 0 0)) ((0 7 0)) ((0 4 0)) ((0 3 0) (0 7 2)) ((0 4 1) (0 7 1))
   ((0 7 1) (2 0 0)) ((0 3 0) (0 4 0)) ((0 2 0) (0 4 0)) ((0 4 0) (2 0 0))
   ((0 0 0) (0 4 0)))))

(FNNounSemtrans (TheList "beach") Towel-TheWord (and (isa :NOUN BeachTowel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "beach") Wagon-TheWord (and (isa :NOUN StationWagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beacon-TheWord (and (isa :NOUN Lighthouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beagle-TheWord (and (isa :NOUN Beagle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beak-TheWord (and (isa :NOUN Beak))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) ownerOfProprietaryThing)
    (N fe_descriptor ownerOfProprietaryThing) (AJP fe_descriptor subRegions))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 2 1)) ((3 0 0)) ((1 0 0)) ((0 0 0)) ((1 1 1)) ((1 2 0))
   ((1 0 0) (1 1 0)) ((1 2 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 2 0))
   ((1 2 0) (1 2 0) (3 0 0)) ((0 0 0) (1 2 0) (1 2 0)))))

(FNNounSemtrans (TheList) Beak-TheWord (and (isa :NOUN Bill-Birds))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beaker-TheWord (and (isa :NOUN Beaker-LabGlassware))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 1 1)) ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Beaker-TheWord (and (isa :NOUN Beaker-LabGlassware))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beam-TheWord (and (isa :NOUN Beam-Construction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bean") Curd-TheWord (and (isa :NOUN Tofu))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bean-TheWord (and (isa :NOUN Bean-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bean-TheWord (and (isa :NOUN (SeedFn BeanPlant)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bean-TheWord (and (isa :NOUN BeanPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bear-TheWord (and (isa :NOUN Bear-Animal))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beard-TheWord (and (isa :NOUN Beard))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (0 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (3 0 0)) ((0 0 0) (1 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Bearing-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bearing-TheWord
 (and (isa :NOUN UnitVectorInterval)
      (relationExistsInstance directionOfTranslation-Throughout
       Movement-TranslationEvent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beast-TheWord (and (isa :NOUN NonPersonAnimal))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "beast" "of") Burden-TheWord
 (and (isa :NOUN BeastOfBurden)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beat-TheWord (and (isa :NOUN TemporalPattern))
 (frame FN_Temporal_pattern)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (A activeIngredientsOfType))
   (:GAP (INI fe_pattern) (DNI fe_process) (DEN subEvents))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Beau-TheWord (and (isa :NOUN InvolvedInRelationship))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT (A fe_depictive)) (:GAP (DEN fe_partner_1))
   (:GEN (Poss fe_partner_2))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 1)) ((1 0 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Beaver-TheWord (and (isa :NOUN Beaver))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beck-TheWord (and (isa :NOUN Stream))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_container_possessor)
    ((PPFn below) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "bed") Bug-TheWord (and (isa :NOUN Bedbug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedbug-TheWord (and (isa :NOUN Bedbug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bed") Frame-TheWord (and (isa :NOUN BedFrame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bed") Sheet-TheWord (and (isa :NOUN BedSheet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bed-TheWord (and (isa :NOUN Bed-PieceOfFurniture))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bed-TheWord (and (isa :NOUN PickupTruckBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedclothes-TheWord (and (isa :NOUN BedCovering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bedlington") Terrier-TheWord
 (and (isa :NOUN Terrier-Bedlington)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedouin-TheWord
 (and (isa :NOUN EthnicGroupOfBedouins)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedrail-TheWord (and (isa :NOUN BedRail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedrock-TheWord
 (and (isa :NOUN (SolidFn RockyPlanetaryStuff))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bedroom" "storage") System-TheWord
 (and (isa :NOUN StorageSystemForBedroom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedroom-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedroom-TheWord (and (isa :NOUN Bedroom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bedsore-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN markCreated))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bedstead-TheWord (and (isa :NOUN BedFrame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bee") Hive-TheWord (and (isa :NOUN NestForBees))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bee-TheWord (and (isa :NOUN Bee)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beech-TheWord (and (isa :NOUN Beech)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "beef") Roast-TheWord (and (isa :NOUN RoastBeef))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beef-TheWord (and (isa :NOUN Beef)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType) ((PPFn from) activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Beehive-TheWord (and (isa :NOUN NestForBees))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beep-TheWord (and (isa :NOUN AudioBeep))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_component_sound fe_manner) ((PPFn of) emitter)
    ((PPFn from) from-Generic emitter))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 2 1)) ((0 0 0)) ((1 0 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (1 0 1)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Beer-TheWord (and (isa :NOUN Beer)) (frame FN_Food)
 (bindingTemplate (TheList (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beet-TheWord (and (isa :NOUN Beet-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beet-TheWord (and (isa :NOUN BeetPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "beet") Root-TheWord
 (and (isa :NOUN (RootFn BeetPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beetle-TheWord (and (isa :NOUN Beetle))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beginner-TheWord (and (isa :NOUN Novice))
 (frame FN_Activity_start)
 (bindingTemplate
  (TheList (:GAP (DNI processTypeForAccomplishmentType) (DEN doneBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beginning-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyContains TemporalThing :NOUN))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) occursDuring))
   (:GAP (DEN parts) (INI occursDuring))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Begonia-TheWord (and (isa :NOUN Begonia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Behavior-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N performedBy) (AJP fe_manner) ((PPFn in) eventOccursAt))
   (:GAP (DNI performedBy fe_manner) (INI fe_manner))
   (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Beheading-TheWord
 (and (isa :NOUN Decapitation-Execution)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) victim)) (:GEN (Poss victim))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Beige-TheWord (and (isa :NOUN BeigeColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belfry-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "belgian") Franc-TheWord
 (and (isa :NOUN Franc-Belgium)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belief-TheWord
 (and (isa :NOUN CycLSentence-Assertible)) (frame FN_Opinion)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn among) subjectOfMentalSituation)
    ((PPFn amongst) subjectOfMentalSituation)
    ((PPFn of) subjectOfMentalSituation) (Sfin opinions)
    ((PPingFn about) opinions)
    (AJP subjectOfMentalSituation fe_domain opinions) ((PPFn to) opinions)
    ((PPFn about) situationTopic) (N subjectOfMentalSituation situationTopic)
    ((PPFn in) situationTopic) ((PPFn as) situationTopic)
    ((PPFn concerning) situationTopic) ((PPFn on) situationTopic)
    ((PPFn with) situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (DEN opinions)
    (INI subjectOfMentalSituation opinions)
    (DNI subjectOfMentalSituation opinions situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 2 0)) ((1 7 0)) ((3 0 0)) ((0 0 0)) ((1 5 2)) ((1 3 0))
   ((1 4 0)) ((1 13 0) (3 0 0)) ((1 12 0) (3 0 0)) ((1 11 0) (3 0 0))
   ((1 10 0) (3 0 0)) ((1 7 0) (3 0 0)) ((1 2 0) (1 8 1)) ((1 9 0) (3 0 0))
   ((1 3 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 2 0) (1 3 0)) ((1 1 0) (1 3 0))
   ((1 0 0) (1 3 0)) ((0 0 0) (1 3 0)) ((1 3 0) (1 8 0)) ((1 3 0) (1 5 0))
   ((1 5 1) (1 7 0)))))

(FNNounSemtrans (TheList) Belief-TheWord (and (isa :NOUN BeliefSystem))
 (frame FN_Religious_belief) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belittlement-TheWord
 (and (isa :NOUN CommunicationAct-Single)
      (topicOfInfoTransfer :NOUN ?Evaluating1) (isa ?Evaluating1 Evaluating))
 (frame FN_Judgment_communication) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belittling-TheWord
 (and (isa :NOUN Disapproving-CommunicationAct))
 (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) recipientOfInfo))
   (:GAP (2nd objectOfEvaluation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "belize") Dollar-TheWord
 (and (isa :NOUN Dollar-Belize)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bell") Pepper-TheWord (and (isa :NOUN BellPepper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bell-TheWord (and (isa :NOUN Bell)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bell-TheWord (and (isa :NOUN Bell))
 (frame FN_Noise_makers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType)
    (N mainConstituent (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType deviceUse))
   (:GAP (DEN deviceUsed))))
 (groupPatterns (TheSet ((0 1 3)) ((0 1 2)) ((0 0 0)) ((0 1 1)) ((0 1 0)))))

(FNNounSemtrans (TheList "bell") Tower-TheWord (and (isa :NOUN BellTower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bellow-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Shouting)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_component_sound fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 2)) ((0 0 0)) ((1 0 0)) ((1 2 0)) ((0 0 0) (1 0 0))
   ((1 1 0) (1 2 1)) ((0 0 0) (1 2 1)))))

(FNNounSemtrans (TheList) Belly-TheWord (and (isa :NOUN Abdomen))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Belongings-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) owner))
   (:GAP (DNI owner) (INI owner) (DEN owns)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "belt") Buckle-TheWord (and (isa :NOUN BeltBuckle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "belt") Loop-TheWord (and (isa :NOUN BeltLoop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "belt") Sander-TheWord (and (isa :NOUN BeltSander))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belt-TheWord (and (isa :NOUN Belt-Clothing))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn around) wornOn) ((PPFn at) wornOn)
    ((PPFn round) wornOn) ((PPFn with) fe_descriptor)
    ((PPFn of) mainConstituent)
    (N wornOn mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 3)) ((0 6 2)) ((0 6 1)) ((0 4 0)) ((0 5 1)) ((0 0 0))
   ((0 5 3) (2 0 0)) ((0 5 2) (2 0 0)) ((0 6 0) (2 0 0)) ((0 5 1) (0 6 0))
   ((0 6 0) (0 6 0)) ((0 2 0) (0 5 1)) ((0 1 0) (0 6 0))
   ((0 5 1) (0 5 3) (0 6 0)) ((0 5 1) (0 6 0) (0 6 0))
   ((0 3 0) (0 5 0) (0 6 0)))))

(FNNounSemtrans (TheList) Belt-TheWord (and (isa :NOUN Belt-Clothing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belt-TheWord (and (isa :NOUN Belt-Mechanical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Belt-TheWord (and (isa :NOUN Belt-Region))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ben-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bench" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Bench)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bench-TheWord
 (and (isa :NOUN Bench-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bench-TheWord
 (and (isa :NOUN Bench-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bench" "with" "a") Back-TheWord
 (and (isa :NOUN BenchWithBack)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bend-TheWord (and (isa :NOUN TurnInPath))
 (frame FN_Path_shape) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bending") Brake-TheWord
 (and (isa :NOUN BendingBrake)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Benediction-TheWord (and (isa :NOUN Oratory))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Benefactor-TheWord (and (isa :NOUN Benefactor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beneficiary-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance beneficiary Event :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Benefit-TheWord (and (isa :NOUN Gala))
 (frame FN_Social_event) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "benefits") Administrator-TheWord
 (and (isa :NOUN BenefitsAdministrator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "benign") Tumor-TheWord (and (isa :NOUN BenignTumor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bent-TheWord (and (isa :NOUN BentOverPosture))
 (frame FN_Posture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bequest-TheWord (and (isa :NOUN Gift))
 (frame FN_Giving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Berber-TheWord (and (isa :NOUN EthnicGroupOfBerbers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beret-TheWord (and (isa :NOUN Beret))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_descriptor mainConstituent clothingStyle) ((PPFn of) wearer))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 1 2)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Beret-TheWord (and (isa :NOUN Beret)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Berg-TheWord (and (isa :NOUN Iceberg))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Berkelium-TheWord (and (isa :NOUN Berkelium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bermudan-TheWord (and (isa :NOUN BermudaPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bernese" "mountain") Dog-TheWord
 (and (isa :NOUN BerneseMountainDog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Berry-TheWord (and (isa :NOUN Food)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 1)) ((0 2 0)) ((0 1 0)) ((0 1 0) (0 2 1))
   ((0 1 0) (0 1 1)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Berth-TheWord (and (isa :NOUN Berth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beryl-TheWord (and (isa :NOUN Beryl)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beryllium-TheWord (and (isa :NOUN Beryllium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Besiegement-TheWord
 (and (isa :NOUN IsolatingAnEnemy)) (frame FN_Besieging)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bestiality-TheWord (and (isa :NOUN Bestiality))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bet-TheWord (and (isa :NOUN Bet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Betrayal-TheWord (and (isa :NOUN Betrayal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Betrothal-TheWord (and (isa :NOUN EngagementEvent))
 (frame FN_Forming_relationships) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Betrothal-TheWord
 (and (isa :NOUN EngagementEventPart-BecomingEngaged)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Betrothed-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_2)) (:GAP (DEN fe_partner_1))
   (:NOUN (N fe_partner_1)) (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 0) (4 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList "beverage") Refrigerator-TheWord
 (and (isa :NOUN BeverageRefrigerator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Beverage-TheWord (and (isa :NOUN Drink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bevy-TheWord
 (and (isa :NOUN (LargeFn (GroupFn SomethingExisting)))) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bias-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationInstanceExists biases :NOUN CycLSentence-Assertible))
 (frame FN_Partiality)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn against) fe_side_2))
   (:GAP (INI fe_dispute fe_side_1))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Bias-TheWord (and (isa :NOUN Prejudice))
 (frame FN_Partiality)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn against) fe_side_2))
   (:GAP (INI fe_dispute fe_side_1))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Bib-TheWord (and (isa :NOUN Bib)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicarbonate" "of") Soda-TheWord
 (and (isa :NOUN SodiumBicarbonate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "biceps") Brachii-TheWord (and (isa :NOUN Biceps))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bicep-TheWord (and (isa :NOUN Biceps))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bickering-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguers))
   (:OBLIQUE-OBJECT (AJP fe_arguers) (N fe_arguers) ((PPFn between) fe_arguers)
    (NP fe_issue))))
 (groupPatterns (TheSet ((1 3 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "bicycle-multi") Gear-TheWord
 (and (isa :NOUN Bicycle-MultiGear)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle" "brake") Cable-TheWord
 (and (isa :NOUN BicycleBrakeCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle") Handlebar-TheWord
 (and (isa :NOUN BicycleHandleBar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle") Light-TheWord
 (and (isa :NOUN BicycleLight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle") Part-TheWord (and (isa :NOUN BicyclePart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle") Pump-TheWord
 (and (isa :NOUN BicycleAirPump)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle") Seat-TheWord (and (isa :NOUN BicycleSeat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bicycle-TheWord (and (isa :NOUN Bicycle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bicycle-TheWord (and (isa :NOUN Bicycle))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bicycle") Wheel-TheWord
 (and (isa :NOUN BicycleWheel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bicycling-TheWord
 (and (isa :NOUN (TransportViaFn Bicycle))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bicyclist-TheWord (and (isa :NOUN Cyclist-Athelete))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bifocals-TheWord (and (isa :NOUN Bifocals))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "big") Ben-TheWord (and (isa :NOUN BigBenTower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "big") Dipper-TheWord
 (and (isa :NOUN BigDipper-Asterism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "big") Eater-TheWord
 (and (isa :NOUN Person) (relationInstanceExists likesEvent :NOUN Eating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "big") Name-TheWord (and (isa :NOUN FamousHuman))
 (frame FN_Fame) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "big") Spender-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists likesEvent :NOUN SpendingMoney))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bighorn-TheWord (and (isa :NOUN BighornSheep))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bight-TheWord (and (isa :NOUN Bight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bike") Bag-TheWord (and (isa :NOUN BicycleBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bike") Carrier-TheWord
 (and (isa :NOUN BicycleRack-BikePart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bike") Chain-TheWord (and (isa :NOUN BicycleChain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bike-TheWord (and (isa :NOUN Bicycle))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN transporter))
   (:GEN (Poss fe_descriptor ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 1)) ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 1)))))

(FNNounSemtrans (TheList "bike") Wheel-TheWord (and (isa :NOUN BicycleWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bikini-TheWord (and (isa :NOUN Bikini))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn in) mainConstituent)
    (N fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (2 0 1))
   ((0 3 0) (0 3 2)) ((0 0 0) (0 3 2)) ((0 1 0) (0 3 1)) ((0 0 0) (0 3 1))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Bile-TheWord (and (isa :NOUN BileTheSecretion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bilingual-TheWord (and (isa :NOUN MultilingualAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bill-TheWord (and (isa :NOUN Bill-Birds))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Bill-TheWord (and (isa :NOUN Bill-Currency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bill-TheWord (and (isa :NOUN Bill-PaymentRequest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bill-TheWord (and (isa :NOUN Bill-ProposedLaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bill-TheWord (and (isa :NOUN HatBill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Billboard-TheWord (and (isa :NOUN Billboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Billiards-TheWord (and (isa :NOUN Billiards))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Billions-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) (AJP fe_q_prop))
   (:GAP (DNI fe_individuals massOfObject) (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Billy-TheWord (and (isa :NOUN (MaleFn Goat)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bin-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) parts)
    (AJP mainConstituent deviceUse)
    (N containedObject mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 1)) ((2 0 0)) ((0 3 1)) ((0 0 0)) ((0 3 0))
   ((0 1 0) (0 3 1)) ((0 3 0) (2 0 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList "binary") Star-TheWord
 (and (isa :NOUN BinaryStarSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bind-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn fe_situation))
   (:OBLIQUE-OBJECT ((PPFn over) (InverseBinaryPredicateFn explains-Generic))
    (Sub (InverseBinaryPredicateFn explains-Generic)))
   (:GAP (DEN fe_situation))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Binder-TheWord (and (isa :NOUN Binder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Binding-TheWord (and (isa :NOUN Binding-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Binocular-TheWord (and (isa :NOUN Binoculars))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Binoculars-TheWord (and (isa :NOUN Binoculars))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biochemist-TheWord (and (isa :NOUN Biochemist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biochemistry-TheWord (and (isa :NOUN Biochemistry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biodefense-TheWord
 (and (isa :NOUN DefendingSomethingAgainstAttack)
      (relationInstanceExists objectActedOn :NOUN BiologicalWeapon))
 (frame FN_Defending) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biodiversity-TheWord (and (isa :NOUN Biodiversity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bioenergy-TheWord (and (isa :NOUN Bioenergy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biofuel-TheWord (and (isa :NOUN Biofuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biographer-TheWord (and (isa :NOUN Biographer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biography-TheWord (and (isa :NOUN Biography))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic) (N situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW situationTopic))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 1)) ((0 3 0)) ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 0 0))
   ((0 1 1) (2 0 0)) ((0 2 0) (2 0 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList "biological") Process-TheWord
 (and (isa :NOUN BiologicalProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "biological") Weapon-TheWord
 (and (isa :NOUN BiologicalWeapon)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A deviceUse) (AJP deviceUse))
   (:GAP (2nd activeIngredientsOfType) (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Biologist-TheWord (and (isa :NOUN Biologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biologist-TheWord (and (isa :NOUN Biologist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biology-TheWord (and (isa :NOUN Biology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bios") Chip-TheWord (and (isa :NOUN BIOSChip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biotechnology-TheWord
 (and (isa :NOUN GeneticEngineering)) (frame FN_Artifact)
 (bindingTemplate (TheList (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biotechnology-TheWord (and (isa :NOUN Ergonomics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bioterrorism-TheWord
 (and (isa :NOUN TerroristAct)
      (relationInstanceExists deviceUsed :NOUN BiologicalWeapon))
 (frame FN_Terrorism) (bindingTemplate (TheList (:GAP (DEN fe_act))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bioterrorist-TheWord (and (isa :NOUN TerroristAgent))
 (frame FN_Terrorism) (bindingTemplate (TheList (:GAP (DEN fe_terrorist))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biplane-TheWord (and (isa :NOUN Biplane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birch-TheWord (and (isa :NOUN (WoodFn Birch)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birch-TheWord (and (isa :NOUN Birch))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birch") Tree-TheWord (and (isa :NOUN Birch))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird") Bath-TheWord (and (isa :NOUN BirdBath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird") Feeder-TheWord (and (isa :NOUN BirdFeeder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird") Food-TheWord (and (isa :NOUN BirdFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird" "of") Prey-TheWord (and (isa :NOUN BirdOfPrey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird" "s") Nest-TheWord
 (and (isa :NOUN NestForBirds)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird") Seed-TheWord (and (isa :NOUN BirdSeed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bird-TheWord (and (isa :NOUN Bird))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bird") Toy-TheWord (and (isa :NOUN BirdToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birdcall-TheWord (and (isa :NOUN Birdsong))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birdhouse-TheWord (and (isa :NOUN BirdHouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biretta-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_accoutrement))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Birr-TheWord (and (isa :NOUN Birr-Ethiopia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birth") Certificate-TheWord
 (and (isa :NOUN BirthCertificate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birth") Mark-TheWord (and (isa :NOUN Birthmark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birth-TheWord (and (isa :NOUN BirthEvent))
 (frame FN_Giving_birth)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) birthChild) (N birthChild fe_depictive)
    ((PPFn to) birthChild father mother) ((PPFn at) eventOccursAt)
    ((PPFn during) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:NOUN (N birthParent)) (:GEN (Poss birthChild))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 2 2)) ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 1 0))
   ((0 2 2) (0 5 1)) ((0 2 0) (0 5 1)) ((0 5 0) (2 0 0)) ((0 2 0) (0 5 0))
   ((0 0 0) (0 3 0)) ((0 1 1) (2 0 0)) ((0 1 0) (0 2 2) (0 4 0)))))

(FNNounSemtrans (TheList "birthday") Boy-TheWord
 (and (isa :NOUN MaleHuman) (birthDay :NOUN Today-Indexical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birthday") Girl-TheWord
 (and (isa :NOUN FemaleHuman) (birthDay :NOUN Today-Indexical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birthday") Cake-TheWord
 (and (isa :NOUN BirthdayCake)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birthday") Card-TheWord
 (and (isa :NOUN BirthdayCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "birthday") Party-TheWord
 (and (isa :NOUN BirthdayParty)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birthday-TheWord
 (and (isa :NOUN DayOfYearType) (relationInstanceExists birthDay :NOUN Person))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Birthmark-TheWord (and (isa :NOUN Birthmark))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn across) fe_attachment) ((PPFn on) fe_attachment)
    (AJP fe_descriptor) ((PPFn like) fe_descriptor))
   (:GAP (DEN markCreated)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 1 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Birthrate-TheWord
 (and (isa :NOUN RealNumber)
      (relationExistsInstance birthRate GeopoliticalEntity :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Biscuit-TheWord (and (isa :NOUN Food))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 1 0)) ((0 1 0) (0 1 1)) ((0 1 0) (0 1 0))
   ((0 0 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Biscuit-TheWord (and (isa :NOUN Biscuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bisexual-TheWord (and (isa :NOUN BisexualHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bishop-TheWord (and (isa :NOUN Bishop-Clerical))
 (frame FN_Appellations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bishop-TheWord (and (isa :NOUN Bishop-Clerical))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_governed) (NP fe_governed) ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Bishop-TheWord (and (isa :NOUN Bishop-ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bismuth-TheWord (and (isa :NOUN Bismuth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bit-TheWord (and (isa :NOUN Bit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bit-TheWord (and (isa :NOUN DrillBit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bitcoin-TheWord (and (isa :NOUN Bitcoin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bite-TheWord (and (isa :NOUN FistSized))
 (frame FN_Measure_by_action)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (AJP fe_particular_iteration))
   (:GAP (INI objectActedOn) (DNI objectActedOn) (DEN fe_event))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Bite-TheWord (and (isa :NOUN Snack)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bitmap-TheWord
 (and (isa :NOUN ComputerBitmapDisplay)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bitter") Chocolate-TheWord
 (and (isa :NOUN BakingChocolate-Unsweetened)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bitterness-TheWord (and (isa :NOUN Resentment))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT
    ((PPFn against) (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Bivouac-TheWord (and (isa :NOUN ResidingSomewhere))
 (frame FN_Residence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Bishop-TheWord
 (and (isa :NOUN BlackBishop-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black" "chess") Piece-TheWord
 (and (isa :NOUN BlackChessPiece)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Death-TheWord
 (and (isa :NOUN BlackDeath-Plague)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Eye-TheWord (and (isa :NOUN BruisedEye))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Hills-TheWord
 (and (isa :NOUN BlackHills-Mountains)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") King-TheWord
 (and (isa :NOUN BlackKing-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Knight-TheWord
 (and (isa :NOUN BlackKnight-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Pawn-TheWord
 (and (isa :NOUN BlackPawn-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Queen-TheWord
 (and (isa :NOUN BlackQueen-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Rook-TheWord
 (and (isa :NOUN BlackRook-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Sea-TheWord (and (isa :NOUN BlackSea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Black-TheWord (and (isa :NOUN BlackColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Black-TheWord (and (isa :NOUN EthnicGroupOfBlacks))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Tie-TheWord (and (isa :NOUN BlackTie))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "black") Widow-TheWord
 (and (isa :NOUN BlackWidowSpider)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blackberry") Plant-TheWord
 (and (isa :NOUN BlackberryPlant)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blackberry-TheWord
 (and (isa :NOUN (FruitFn BlackberryPlant))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blackboard") Eraser-TheWord
 (and (isa :NOUN Eraser-Board)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blackhead-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN markCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Blackjack-TheWord
 (and (isa :NOUN Blackjack-CardGame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blackmail-TheWord (and (isa :NOUN Blackmail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bladder-TheWord (and (isa :NOUN Bladder-Urinary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blade" "server") Cabinet-TheWord
 (and (isa :NOUN ComputerServerCabinet-BladeServer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blade" "server") Chassis-TheWord
 (and (isa :NOUN BladeComputerChassis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blade") Server-TheWord
 (and (isa :NOUN BladeServer-Computer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blade-TheWord (and (isa :NOUN BladeOfADevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blade-TheWord (and (isa :NOUN Vane)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blame-TheWord (and (isa :NOUN Blame))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    ((PPFn on) objectOfEvaluation) (NP objectOfEvaluation)
    ((PPFn upon) objectOfEvaluation) ((PPFn among) objectOfEvaluation)
    ((PPFn at) objectOfEvaluation) ((PPFn into) objectOfEvaluation)
    ((PPFn onto) objectOfEvaluation) ((PPFn of) objectOfEvaluation)
    ((PPFn with) objectOfEvaluation) ((PPFn for) fe_reason)
    ((PPingFn for) fe_reason))
   (:GEN (Poss subjectOfMentalSituation objectOfEvaluation))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 10 0)) ((2 0 1)) ((1 9 0) (1 10 0)) ((0 0 0) (1 10 0))
   ((0 0 0) (1 7 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 4 0))
   ((1 8 0) (1 10 0) (2 0 0)) ((0 0 0) (1 7 0) (1 11 0))
   ((0 0 0) (1 1 0) (1 11 0)) ((0 0 0) (1 1 0) (1 10 0))
   ((0 0 0) (1 5 0) (1 10 0)) ((0 0 1) (0 0 1) (1 0 0))
   ((0 0 0) (1 2 0) (1 3 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "blank" "audio") Cassette-TheWord
 (and (isa :NOUN AudioCassette-Blank)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blank" "video") Cassette-TheWord
 (and (isa :NOUN VideoCassette-Blank)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blanket-TheWord (and (isa :NOUN BedCovering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blare-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) from-Generic) (AJP fe_manner)
    ((PPFn of) fe_component_sound emitter) (NP emitter))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 3 0)) ((0 1 0)) ((0 1 0) (0 2 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "blast") Furnace-TheWord
 (and (isa :NOUN BlastFurnace)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blast-TheWord (and (isa :NOUN Explosion))
 (frame FN_Explosion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) explosiveDeviceUsed) ((PPFn in) eventOccursAt)
    ((PPFn at) eventOccursAt) ((PPFn outside) eventOccursAt)
    ((PPFn during) temporallyIntersects)
    (NP eventOccursAt temporallyIntersects)
    ((PPFn before) temporallyIntersects)
    (AJP fe_degree fe_manner temporallyIntersects)
    (N (InverseBinaryPredicateFn subEvents) explosiveDeviceUsed fe_manner
     eventOccursAt temporallyIntersects))
   (:GAP (2nd victim)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 0)) ((0 8 4)) ((0 7 2)) ((0 3 0)) ((0 2 0)) ((0 5 0))
   ((0 8 3)) ((0 7 1)) ((0 0 0)) ((0 8 1)) ((0 7 0)) ((0 8 0))
   ((0 3 0) (2 0 0)) ((0 1 0) (0 6 0)) ((0 1 0) (0 3 0)) ((0 6 0) (0 8 2))
   ((0 1 0) (0 8 2)) ((0 5 1) (0 8 1)) ((0 2 0) (0 8 1)) ((0 1 0) (0 8 1))
   ((0 1 0) (0 7 0)) ((0 7 0) (0 8 1)) ((0 2 0) (0 5 1) (0 8 1))
   ((0 1 0) (0 2 0) (0 8 1)) ((0 1 0) (0 1 0) (0 4 0) (0 7 0)))))

(FNNounSemtrans (TheList) Blast-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Explosion)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn in) fe_manner)
    ((PPFn like) fe_manner) ((PPFn from) from-Generic emitter)
    ((PPFn of) emitter) ((PPFn on) emitter) (N emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 6 0)) ((1 0 0)) ((1 0 0) (2 0 0)) ((1 0 0) (1 5 0))
   ((1 0 0) (1 4 0)) ((1 0 0) (1 3 1)) ((0 0 0) (1 0 0)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 0 0) (1 2 0)) ((1 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "blasting") Cap-TheWord (and (isa :NOUN BlastingCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blaze-TheWord (and (isa :NOUN Flame))
 (frame FN_Fire_burning)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Sub fe_fire) ((PPFn near) eventOccursAt)
    (N fe_depictive fe_fuel eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn in) eventOccursAt) (AVP temporallyIntersects))
   (:GAP (DEN fe_fire))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 2)) ((0 2 1)) ((0 4 0) (0 5 0))
   ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Blaze-TheWord (and (isa :NOUN Blaze-Fire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blazer-TheWord (and (isa :NOUN SuitJacket))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor)
    (AJP fe_descriptor clothingStyle) (N mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 1 1)) ((0 2 0)) ((0 1 0)) ((0 2 1) (2 0 1))
   ((0 1 0) (2 0 1)) ((0 1 0) (0 2 1)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 1 0)) ((0 1 0) (0 1 1) (0 2 0)) ((0 1 0) (0 1 0) (2 0 1))
   ((0 1 0) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Blazer-TheWord (and (isa :NOUN SportsJacket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bleaching") Agent-TheWord (and (isa :NOUN Bleach))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bleat-TheWord (and (isa :NOUN BleatingSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Bleeding-TheWord (and (isa :NOUN Bleeding-TheAction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bleeding-TheWord
 (and (isa :NOUN Bleeding-TheCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blemish-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_attachment ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN markCreated)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 1 0) (3 0 0)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Blender-TheWord (and (isa :NOUN FoodBlender))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blending-TheWord (and (isa :NOUN Blending))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blessing-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP activeIngredientsOfType))
   (:OBLIQUE-OBJECT ((PPFn by) leadersOfMovement)
    ((PPFn from) leadersOfMovement) ((PPFn of) leadersOfMovement)
    ((PPFn to) groupMembers) ((PPFn at) eventOccursAt)
    ((PPFn in) temporallyIntersects) ((PPFn on) temporallyIntersects)
    (N fe_organization activeIngredientsOfType)
    (AJP leadersOfMovement activeIngredientsOfType))
   (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 4 0)) ((1 7 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 8 0))
   ((0 0 0) (1 4 0)) ((1 4 0) (1 6 0)) ((1 3 0) (1 8 0))
   ((1 5 0) (1 7 1) (2 0 0)))))

(FNNounSemtrans (TheList) Blimp-TheWord (and (isa :NOUN Blimp)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blind") Alley-TheWord (and (isa :NOUN CulDeSac))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blind-TheWord (and (isa :NOUN FrontCompany))
 (frame FN_Front_for) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blind-TheWord (and (isa :NOUN BlindForWindow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blister-TheWord (and (isa :NOUN Blister))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn between) fe_attachment) ((PPFn by) fe_attachment)
    ((PPFn on) fe_attachment) ((PPFn in) causes-Underspecified)
    (AJP fe_descriptor) (N fe_attachment fe_descriptor))
   (:GAP (DEN markCreated)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 4 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 5 0))
   ((0 0 0) (0 0 0)) ((0 0 0) (1 4 0)) ((1 4 0) (1 5 1)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Blizzard-TheWord (and (isa :NOUN SnowstormAsObject))
 (frame FN_Weather)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt)
    (AJP eventOccursAt fe_specification)
    (N fe_specification temporallyIntersects))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 2 1)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 1 1) (0 2 0))
   ((0 1 1) (0 1 1)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Block-TheWord (and (isa :NOUN CityBlock))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_count)
    ((PPFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN fe_count fe_unit))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Block-TheWord (and (isa :NOUN ToyBlock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Block-TheWord (and (isa :NOUN Block))
 (frame FN_Shapes) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blockade-TheWord (and (isa :NOUN Interdiction))
 (frame FN_Change_accessibility)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy locationUse)) (:OBJECT (NP locationUse))
   (:OBLIQUE-OBJECT (A doneBy) (AJP fe_manner) ((PPFn along) subRegions)
    (N doneBy subRegions))
   (:GAP (2nd subRegions) (DNI locationUse)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 1 0)) ((4 0 0)) ((2 0 0)) ((0 0 1) (2 3 1)) ((2 1 0) (2 2 0))
   ((0 0 0) (1 0 0)) ((2 1 0) (2 3 0)) ((0 0 1) (0 0 1) (2 3 1)))))

(FNNounSemtrans (TheList) Blockchain-TheWord (and (isa :NOUN Blockchain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blockhouse-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blond-TheWord (and (isa :NOUN BlondeHairedHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blonde-TheWord (and (isa :NOUN BlondeHairedHuman))
 (frame FN_Body_description_part)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_individual)) (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Blood-Bath-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N eventOccursAt) ((PPFn in) eventOccursAt)
    ((PPingFn between) victim))
   (:GAP (2nd killers))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList "blood") Cell-TheWord (and (isa :NOUN BloodCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blood") Group-TheWord (and (isa :NOUN BloodType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blood" "on") Hands-TheWord (and (isa :NOUN Guilt))
 (frame FN_Guilt_or_innocence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blood" "pressure") Test-TheWord
 (and (isa :NOUN BloodPressureTest)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blood") Pressure-TheWord
 (and (isa :NOUN BloodPressureReading)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blood") Test-TheWord (and (isa :NOUN BloodTest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blood-TheWord (and (isa :NOUN Guilt))
 (frame FN_Guilt_or_innocence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blood-TheWord (and (isa :NOUN Blood))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blood") Vessel-TheWord (and (isa :NOUN BloodVessel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bloodbath-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bloodhound-TheWord (and (isa :NOUN Bloodhound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bloodshed-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP frequencyOfEvent) (A killers) ((PPFn between) killers)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (2nd victim))))
 (groupPatterns (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bloodstream-TheWord (and (isa :NOUN Bloodstream))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bloody-Mary-TheWord
 (and (isa :NOUN BloodyMaryCocktail)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bloomers-TheWord (and (isa :NOUN WomensUnderpants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blooming-TheWord (and (isa :NOUN FlowerOpeningEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blotch-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN markCreated))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Blouse-TheWord (and (isa :NOUN Blouse))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn of) fe_descriptor)
    (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle)
    ((PPFn with) fe_descriptor subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 2 0) (2 0 0))
   ((0 2 0) (0 4 1)) ((0 2 0) (0 3 2)) ((0 0 0) (0 3 1)) ((0 2 0) (0 3 1))
   ((0 1 0) (0 4 0)) ((0 2 0) (0 2 0)) ((0 2 0) (0 2 2) (0 2 2))
   ((0 2 0) (0 3 1) (2 0 0)) ((0 2 0) (0 2 0) (2 0 0))
   ((0 2 0) (0 2 1) (0 4 0)) ((0 2 0) (0 2 0) (0 3 1))
   ((0 0 0) (0 2 0) (0 3 0)) ((0 2 0) (0 2 2) (0 3 1) (0 4 1)))))

(FNNounSemtrans (TheList) Blowhole-TheWord (and (isa :NOUN Blowhole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blowout") Preventer-TheWord
 (and (isa :NOUN BlowoutPreventer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blowtorch-TheWord (and (isa :NOUN PropaneTorch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blubber-TheWord (and (isa :NOUN Blubber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blue") Book-TheWord
 (and (isa :NOUN BlueBook-Examination)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blue") Book-TheWord
 (and (isa :NOUN BlueBook-SocialRegistry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blue") Cheese-TheWord (and (isa :NOUN BlueCheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blue") Jay-TheWord (and (isa :NOUN Bluejay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blue-TheWord (and (isa :NOUN BlueColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blue") Whale-TheWord (and (isa :NOUN BlueWhale))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "blueberry") Bush-TheWord
 (and (isa :NOUN BlueberryBush)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blueberry-TheWord
 (and (isa :NOUN (FruitFn BlueberryBush))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bluejacket-TheWord (and (isa :NOUN NavyPersonnel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blueprint-TheWord (and (isa :NOUN Blueprint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blueprint-TheWord (and (isa :NOUN Design))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Blues-TheWord (and (isa :NOUN BluesMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bluish") Green-TheWord (and (isa :NOUN CyanColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bluntness-TheWord (and (isa :NOUN Reticence))
 (frame FN_Candidness)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree fe_manner)
    ((PPFn of) genericPathway-Partial infoTransferred))
   (:GAP (2nd performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 1) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Blusher-TheWord (and (isa :NOUN Rouge))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor)
    ((PPFn in) fe_decoration_descriptor))
   (:GAP (DEN decorativeObjectsApplied))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "boa") Constrictor-TheWord
 (and (isa :NOUN BoaConstrictor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "board" "game") Set-TheWord
 (and (isa :NOUN BoardGame-EquipmentSet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "board") Game-TheWord (and (isa :NOUN BoardGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Board-TheWord (and (isa :NOUN Board-PieceOfWood))
 (frame FN_Artifact)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Board-TheWord (and (isa :NOUN HumanMachineInterface))
 (frame FN_Controller_object)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN objectControlled))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Board-TheWord (and (isa :NOUN Board-PieceOfWood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Board-TheWord (and (isa :NOUN GameBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Board-TheWord (and (isa :NOUN SupervisoryCommittee))
 (frame FN_Organization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_container_possessor)
    ((PPFn of) fe_container_possessor fe_descriptor) (VPed hasMembers)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString))
    (AJP fe_container_possessor fe_descriptor purposeOfEvent))
   (:GAP (INI hasMembers) (DEN fe_organization)) (:NOUN (N hasMembers))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 2)) ((2 0 0)) ((0 3 1)) ((0 1 1)) ((0 4 1)) ((3 0 0)) ((0 1 0))
   ((0 3 0)) ((0 4 0)) ((0 2 0) (0 4 1)) ((0 1 1) (0 4 1)) ((0 1 0) (0 4 2))
   ((0 3 0) (0 4 2)) ((0 3 0) (2 0 0)) ((0 1 1) (3 0 0)) ((0 0 0) (0 1 1))
   ((0 1 1) (0 3 0)) ((0 1 1) (0 4 0)))))

(FNNounSemtrans (TheList) Board-TheWord (and (isa :NOUN BoardOfDirectors))
 (frame FN_Organization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_container_possessor)
    ((PPFn of) fe_container_possessor fe_descriptor) (VPed hasMembers)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString))
    (AJP fe_container_possessor fe_descriptor purposeOfEvent))
   (:GAP (INI hasMembers) (DEN fe_organization)) (:NOUN (N hasMembers))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 2)) ((2 0 0)) ((0 3 1)) ((0 1 1)) ((0 4 1)) ((3 0 0)) ((0 1 0))
   ((0 3 0)) ((0 4 0)) ((0 2 0) (0 4 1)) ((0 1 1) (0 4 1)) ((0 1 0) (0 4 2))
   ((0 3 0) (0 4 2)) ((0 3 0) (2 0 0)) ((0 1 1) (3 0 0)) ((0 0 0) (0 1 1))
   ((0 1 1) (0 3 0)) ((0 1 1) (0 4 0)))))

(FNNounSemtrans (TheList) Boast-TheWord (and (isa :NOUN Boasting))
 (frame FN_Bragging)
 (bindingTemplate
  (TheList
   (:SUBJECT (QUO infoTransferred) (Sfin infoTransferred) (NP performedBy))
   (:OBLIQUE-OBJECT ((PPingFn of) infoTransferred) (QUO infoTransferred)
    (Sfin infoTransferred) ((PPFn from) performedBy)
    ((PPFn of) infoTransferred performedBy) (N fe_manner situationTopic)
    ((PPFn about) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 4 1)) ((0 2 0)) ((1 2 0)) ((1 1 0)) ((1 4 0))
   ((1 6 0) (2 0 0)) ((0 2 0) (1 6 0)) ((0 2 0) (1 5 1)) ((0 1 0) (2 0 0))
   ((1 2 0) (2 0 0)) ((1 2 0) (1 3 0)) ((0 2 0) (1 2 0)) ((0 0 0) (2 0 0))
   ((1 0 0) (2 0 0)) ((0 2 0) (1 0 0)) ((1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList "boat") Rack-TheWord
 (and (isa :NOUN AutomobileBoatRack)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boat-TheWord (and (isa :NOUN Watercraft-Small))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boat-TheWord (and (isa :NOUN Boat))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor) (N fe_descriptor deviceUse))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Boater-TheWord (and (isa :NOUN StrawHat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 1) (2 0 0)) ((0 0 0) (2 0 0)) ((0 1 0) (0 1 1))
   ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Boating-TheWord (and (isa :NOUN Boating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boatload-TheWord (and (isa :NOUN (VolumeFn Boat)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Bobsled-TheWord (and (isa :NOUN Bobsled))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bobsledding-TheWord
 (and (isa :NOUN BobsledSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bodice-TheWord (and (isa :NOUN Lingerie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle)
    (N mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 1)) ((0 1 0)) ((0 0 0)) ((0 1 1) (2 0 0))
   ((0 0 1) (2 0 0)) ((0 0 0) (2 0 0)) ((0 0 1) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Bodice-TheWord (and (isa :NOUN BodiceOfGarment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bodily") Process-TheWord
 (and (isa :NOUN BodilyFunctionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Armor-TheWord (and (isa :NOUN BodyArmor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Brush-TheWord (and (isa :NOUN BodyBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Lotion-TheWord (and (isa :NOUN BodyLotion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body" "of") Water-TheWord
 (and (isa :NOUN BodyOfWater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Paint-TheWord (and (isa :NOUN Bodypaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Part-TheWord (and (isa :NOUN AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Powder-TheWord (and (isa :NOUN BodyPowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Shaper-TheWord (and (isa :NOUN BodyShaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Suit-TheWord (and (isa :NOUN BodySuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Body-TheWord (and (isa :NOUN (GroupFn Animal)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Body-TheWord (and (isa :NOUN WholeBody))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (Poss ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (NP actorPartsInvolved) ((PPFn of) ownerOfProprietaryThing)
    (AJP fe_descriptor subRegions))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 1 0)) ((2 2 1) (4 0 0)) ((1 0 0) (2 0 0))
   ((2 2 0) (4 0 0)) ((2 1 0) (2 2 0)) ((0 0 0) (2 2 0))
   ((0 0 0) (2 2 0) (2 2 0)))))

(FNNounSemtrans (TheList) Body-TheWord
 (and (isa :NOUN (DeadPhysicalRemainsFn Animal))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Body-TheWord (and (isa :NOUN Gathering-SocialGroup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Body-TheWord (and (isa :NOUN RoadVehicleBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "body") Waste-TheWord
 (and (isa :NOUN ExcretionSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bodybuilding-TheWord (and (isa :NOUN Bodybuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bodyguard-TheWord
 (and (isa :NOUN Bodyguard-Occupation)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bofors") Gun-TheWord (and (isa :NOUN BoforsGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bog-TheWord (and (isa :NOUN Bog))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn of) fe_container_possessor)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Boil-TheWord (and (isa :NOUN Boil-Infection))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn in) fe_attachment) ((PPFn on) fe_attachment)
    ((PPFn over) fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN markCreated)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 3 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "boiled") Egg-TheWord (and (isa :NOUN BoiledEgg))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boiler-TheWord (and (isa :NOUN Boiler-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boiling") Point-TheWord
 (and (isa :NOUN Temperature)
      (relationExistsInstance boilingPoint PartiallyTangible :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boiling-TheWord (and (isa :NOUN Boiling))
 (frame FN_Apply_heat) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bologna-TheWord (and (isa :NOUN Bologna))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bolshevik-TheWord (and (isa :NOUN Communist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bolt-TheWord (and (isa :NOUN Bolt))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) ((PPFn on) eventOccursAt)
    (AJP mainConstituent) (N mainConstituent deviceUse))
   (:GAP (DEN fe_connector)) (:GEN (Poss fe_connected_item))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((2 0 0))
   ((0 3 1) (2 0 0)))))

(FNNounSemtrans (TheList) Bolt-TheWord (and (isa :NOUN Bolt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bomb" "disposal") Kit-TheWord
 (and (isa :NOUN ExplosiveDeviceDisposalKit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bomb-TheWord (and (isa :NOUN Bomb)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn with) mainConstituent)
    (AJP performedBy mainConstituent activeIngredientsOfType)
    (A activeIngredientsOfType) (NP activeIngredientsOfType)
    (N mainConstituent (InverseBinaryPredicateFn nameString) startingDate
     activeIngredientsOfType deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss performedBy doneBy))))
 (groupPatterns
  (TheSet ((3 0 1)) ((0 0 0)) ((1 4 4)) ((1 3 0)) ((1 4 3)) ((1 1 2)) ((1 2 0))
   ((1 4 1)) ((1 4 0)) ((1 1 2) (1 4 3)) ((1 4 2) (1 4 3)) ((1 4 1) (1 4 3))
   ((1 0 0) (1 1 1)) ((1 2 0) (3 0 0)) ((1 1 0) (1 1 2)))))

(FNNounSemtrans (TheList) Bombardment-TheWord (and (isa :NOUN AerialAttack))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy victim))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn on) eventOccursAt)
    ((PPFn in) eventOccursAt) (AJP frequencyOfEvent fe_manner from-Generic)
    ((PPFn of) temporallyIntersects victim)
    (N performedBy from-Generic instrument-UsedAsWeapon))
   (:GEN (Poss performedBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 4 1)) ((0 0 1)) ((1 5 1)) ((1 3 2)) ((1 1 0)) ((1 3 1)) ((1 3 0))
   ((1 0 0)) ((1 5 0)) ((1 2 0) (2 0 1)) ((0 0 1) (1 3 1)) ((1 1 0) (1 3 1))
   ((0 0 0) (1 5 2)) ((1 4 1) (1 5 0)) ((1 3 1) (1 5 0))
   ((1 4 0) (1 5 2) (2 0 0)) ((1 3 1) (1 4 1) (1 5 0))
   ((1 0 0) (1 3 1) (1 3 2)))))

(FNNounSemtrans (TheList "bomber") Jacket-TheWord
 (and (isa :NOUN BomberJacket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bomber-TheWord (and (isa :NOUN BomberPlane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bombing-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy)
    ((PPFn over) directionOfAttack eventOccursAt) ((PPFn near) eventOccursAt)
    ((PPFn at) eventOccursAt) (A eventOccursAt) ((PPFn outside) eventOccursAt)
    (VPfin eventOccursAt eventOutcomes) (AVP temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects) (Sub temporallyIntersects)
    ((PPFn of) eventOccursAt victim) (NP temporallyIntersects victim)
    (N performedBy fe_manner by-Underspecified eventOccursAt from-Generic
     temporallyIntersects victim)
    (AJP fe_event_description frequencyOfEvent fe_manner eventOutcomes
     temporallyIntersects victim))
   (:GAP (DNI performedBy victim) (INI performedBy victim) (2nd victim))
   (:GEN (Poss performedBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 11 1)) ((1 13 6)) ((1 10 0)) ((3 0 1)) ((1 14 4)) ((1 5 0))
   ((1 9 0)) ((1 2 0)) ((1 8 0)) ((1 3 0)) ((1 13 3)) ((1 4 0)) ((1 13 2))
   ((1 14 1)) ((1 1 0)) ((3 0 0)) ((1 0 0)) ((0 0 0)) ((1 13 0))
   ((1 11 1) (3 0 1)) ((1 11 1) (1 13 5)) ((1 14 3) (1 14 5))
   ((1 12 0) (1 14 3)) ((1 13 4) (1 14 3)) ((1 1 1) (1 11 1))
   ((1 8 0) (1 13 6)) ((1 12 0) (1 13 3)) ((1 8 0) (3 0 1)) ((1 3 0) (3 0 1))
   ((1 9 0) (1 13 3)) ((1 3 0) (1 8 0)) ((1 8 0) (1 13 3)) ((1 13 2) (1 13 5))
   ((1 8 0) (1 13 2)) ((1 13 2) (1 13 3)) ((1 11 1) (1 14 2))
   ((1 13 1) (1 13 2)) ((1 11 1) (1 14 0)) ((1 11 1) (3 0 0))
   ((1 11 1) (1 13 0)) ((1 0 0) (1 13 3)) ((0 0 0) (1 8 0)) ((1 8 0) (1 13 0))
   ((1 0 0) (1 14 2)) ((0 0 0) (0 0 0)) ((1 11 1) (1 13 5) (1 14 4))
   ((1 8 0) (1 8 1) (1 13 3)) ((1 8 0) (1 9 1) (1 13 3))
   ((1 8 0) (1 13 3) (1 13 5)) ((1 8 1) (1 11 1) (1 13 2))
   ((1 11 1) (1 13 2) (1 13 5)) ((1 6 0) (1 13 2) (1 13 5))
   ((1 11 0) (1 13 2) (1 13 5)) ((1 8 0) (1 13 1) (1 13 2))
   ((1 3 0) (1 13 1) (1 13 2)) ((1 11 1) (1 13 0) (1 13 5))
   ((0 0 0) (1 8 0) (1 8 1)) ((1 8 0) (1 13 1) (3 0 0))
   ((0 0 0) (0 0 0) (1 2 0)) ((1 8 0) (1 12 0) (1 13 2) (1 14 4))
   ((1 0 0) (1 6 1) (1 8 0) (1 12 1))
   ((1 1 1) (1 11 1) (1 13 0) (1 13 5) (1 14 3))
   ((0 0 0) (0 0 0) (1 7 0) (1 8 0) (1 11 1))
   ((1 0 0) (1 8 0) (1 11 1) (1 12 0) (1 13 1) (1 13 2)))))

(FNNounSemtrans (TheList) Bombing-TheWord
 (and (isa :NOUN BombingMission-Aerial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bond-TheWord (and (isa :NOUN BailAgreement))
 (frame FN_Bail_decision)
 (bindingTemplate
  (TheList (:SUBJECT (NP patient-GenericDirect))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) (NP fe_status) (AJP fe_status)
    (N fe_status) ((PPFn of) fe_status))
   (:GEN (Poss patient-GenericDirect))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 1 0)) ((1 3 0)) ((2 0 0)) ((0 0 0)) ((1 1 0) (1 2 0))
   ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Bond-TheWord (and (isa :NOUN Bond-Agreement))
 (frame FN_Bail_decision)
 (bindingTemplate
  (TheList (:SUBJECT (NP patient-GenericDirect))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) (NP fe_status) (AJP fe_status)
    (N fe_status) ((PPFn of) fe_status))
   (:GEN (Poss patient-GenericDirect))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 1 0)) ((1 3 0)) ((2 0 0)) ((0 0 0)) ((1 1 0) (1 2 0))
   ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Bond-TheWord (and (isa :NOUN AdhesiveConnection))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) mainConstituent))
   (:GAP (DEN fe_connector)) (:GEN (Poss fe_connected_item))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Bond-TheWord
 (and (isa :NOUN IndividualAgent)
      (relationInstanceExists mutualAcquaintances :NOUN IndividualAgent))
 (frame FN_Social_connection) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bone-TheWord (and (isa :NOUN Bone-BodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bone-TheWord (and (isa :NOUN BoneTheStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bonfire-TheWord (and (isa :NOUN Bonfire))
 (frame FN_Fire_burning)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Sub fe_depictive) ((PPFn of) fe_fuel)
    ((PPFn with) fe_fuel) ((PPFn in) eventOccursAt) ((PPFn on) eventOccursAt)
    (NP temporallyIntersects) (AJP fe_depictive temporallyIntersects))
   (:GAP (DEN fe_fire fe_fuel))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 6 0))
   ((0 4 0) (0 5 0)) ((0 1 0) (0 6 0)))))

(FNNounSemtrans (TheList) Bong-TheWord (and (isa :NOUN Hookah)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bonnet-TheWord (and (isa :NOUN Bonnet))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 2 1)) ((0 2 0)) ((0 0 0)) ((0 2 2) (2 0 0))
   ((0 2 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 2 2)) ((0 0 0) (0 2 1))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Boo-Boo-TheWord (and (isa :NOUN Mistake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boo") Boo-TheWord (and (isa :NOUN Mistake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "book") Rack-TheWord (and (isa :NOUN BookRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Book-TheWord (and (isa :NOUN Book-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Book-TheWord (and (isa :NOUN BookCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Book-TheWord (and (isa :NOUN Record))
 (frame FN_Records)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn for) objectActedOn)
    (N fe_data objectActedOn activeIngredientsOfType))
   (:GAP (DEN fe_record))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 0 0)) ((0 1 0) (0 2 2)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Book-TheWord (and (isa :NOUN BookCopy))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP authorOfLiteraryWork-CW)) (:OBJECT (NP fe_text))
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) ((PPFn of) parts)
    (Sfin fe_text) (VPing fe_text)
    (AJP fe_descriptor fe_genre fe_text startingDate) (NP fe_text startingDate)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic)
    ((PPingFn about) situationTopic) ((PPingFn on) situationTopic)
    (N authorOfLiteraryWork-CW fe_descriptor fe_genre parts situationTopic
     deviceUse))
   (:GAP (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW fe_genre))
   (:APPOSITIVE (VPing fe_text) (NP fe_text fe_title))))
 (groupPatterns
  (TheSet ((2 10 5)) ((2 9 0)) ((2 8 0)) ((2 7 0)) ((2 6 0)) ((2 10 4))
   ((1 0 0)) ((5 1 0)) ((2 4 3)) ((2 1 0)) ((2 10 3)) ((4 0 1)) ((2 10 2))
   ((2 4 1)) ((2 4 0)) ((4 0 0)) ((2 0 0)) ((0 0 0)) ((2 10 0))
   ((2 4 3) (5 1 0)) ((2 7 0) (2 10 2)) ((2 4 1) (2 6 0)) ((2 1 0) (2 4 0))
   ((2 4 0) (2 4 1)) ((2 6 0) (4 0 0)) ((2 10 4) (4 0 0)) ((4 0 0) (5 0 0))
   ((2 5 0) (4 0 0)) ((4 0 0) (5 1 0)) ((2 4 2) (4 0 0)) ((2 0 0) (5 1 0))
   ((2 0 0) (5 1 1)) ((2 0 0) (2 1 0)) ((2 3 0) (2 4 3) (2 5 1))
   ((2 1 0) (2 4 0) (2 4 0)) ((2 4 0) (4 0 0) (5 1 0))
   ((2 2 0) (2 4 0) (2 10 1) (2 10 2)))))

(FNNounSemtrans (TheList) Book-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP authorOfLiteraryWork-CW)) (:OBJECT (NP fe_text))
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) ((PPFn of) parts)
    (Sfin fe_text) (VPing fe_text)
    (AJP fe_descriptor fe_genre fe_text startingDate) (NP fe_text startingDate)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic)
    ((PPingFn about) situationTopic) ((PPingFn on) situationTopic)
    (N authorOfLiteraryWork-CW fe_descriptor fe_genre parts situationTopic
     deviceUse))
   (:GAP (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW fe_genre))
   (:APPOSITIVE (VPing fe_text) (NP fe_text fe_title))))
 (groupPatterns
  (TheSet ((2 10 5)) ((2 9 0)) ((2 8 0)) ((2 7 0)) ((2 6 0)) ((2 10 4))
   ((1 0 0)) ((5 1 0)) ((2 4 3)) ((2 1 0)) ((2 10 3)) ((4 0 1)) ((2 10 2))
   ((2 4 1)) ((2 4 0)) ((4 0 0)) ((2 0 0)) ((0 0 0)) ((2 10 0))
   ((2 4 3) (5 1 0)) ((2 7 0) (2 10 2)) ((2 4 1) (2 6 0)) ((2 1 0) (2 4 0))
   ((2 4 0) (2 4 1)) ((2 6 0) (4 0 0)) ((2 10 4) (4 0 0)) ((4 0 0) (5 0 0))
   ((2 5 0) (4 0 0)) ((4 0 0) (5 1 0)) ((2 4 2) (4 0 0)) ((2 0 0) (5 1 0))
   ((2 0 0) (5 1 1)) ((2 0 0) (2 1 0)) ((2 3 0) (2 4 3) (2 5 1))
   ((2 1 0) (2 4 0) (2 4 0)) ((2 4 0) (4 0 0) (5 1 0))
   ((2 2 0) (2 4 0) (2 10 1) (2 10 2)))))

(FNNounSemtrans (TheList) Bookcase-TheWord (and (isa :NOUN Bookcase))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bookcase-TheWord (and (isa :NOUN Bookcase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bookend-TheWord (and (isa :NOUN Bookend))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "booking") Agent-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy Booking-MakingAReservation :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Booking-TheWord (and (isa :NOUN MakingAReservation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Booking-TheWord (and (isa :NOUN Reservation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Booking-TheWord (and (isa :NOUN MakingAReservation))
 (frame FN_Reserving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Booklet-TheWord (and (isa :NOUN Booklet))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_title) ((PPFn for) deviceUse))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Bookmark-TheWord (and (isa :NOUN BookmarkForBooks))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bookmark-TheWord (and (isa :NOUN Bookmark-WWW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bookshop-TheWord (and (isa :NOUN Bookstore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bookworm-TheWord
 (and (isa :NOUN Person) (relationInstanceExists likesEvent :NOUN Reading))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boom-TheWord (and (isa :NOUN Thunder))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_manner)
    ((PPFn of) fe_component_sound fe_noisy_event emitter objectMoving))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 1 0) (0 2 2))
   ((0 0 0) (0 2 3)))))

(FNNounSemtrans (TheList) Boom-TheWord (and (isa :NOUN Boom-BoatPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boomerang-TheWord (and (isa :NOUN Boomerang))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boondocks-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationInstanceExists farFrom :NOUN HighPopulationRegionOrPolity))
 (frame FN_Isolated_places) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boonies-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationInstanceExists farFrom :NOUN HighPopulationRegionOrPolity))
 (frame FN_Isolated_places) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "booster") Seat-TheWord (and (isa :NOUN BoosterSeat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Booster-TheWord (and (isa :NOUN RocketBooster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boot") Spur-TheWord (and (isa :NOUN BootSpur))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boot-TheWord (and (isa :NOUN Boot-Footwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor subRegions)
    (N mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse)
    ((PPFn of) fe_descriptor mainConstituent wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 2)) ((0 1 2)) ((0 1 1)) ((0 2 2)) ((0 1 0)) ((0 2 1))
   ((0 2 0)) ((0 1 2) (2 0 0)) ((0 1 1) (2 0 0)) ((0 2 2) (2 0 0))
   ((0 1 1) (0 2 2)) ((0 1 0) (2 0 0)) ((0 2 3) (0 3 1)) ((0 1 0) (0 1 1))
   ((0 1 0) (0 2 2)) ((0 2 0) (2 0 0)) ((0 1 2) (0 2 0)) ((0 1 1) (0 2 0))
   ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0)) ((0 0 1) (0 1 1) (0 2 0))
   ((0 1 0) (0 2 0) (2 0 0)) ((0 0 0) (0 2 0) (2 0 0))
   ((0 1 1) (0 2 0) (0 2 0)) ((0 2 0) (0 2 0) (0 2 2))
   ((0 1 0) (0 2 0) (0 2 0)) ((0 1 0) (0 1 2) (0 2 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Bootlace-TheWord (and (isa :NOUN ShoeLace))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN parts))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bordeaux-TheWord (and (isa :NOUN Bordeaux-Wine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "border") Collie-TheWord
 (and (isa :NOUN BorderCollie)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "border") Terrier-TheWord
 (and (isa :NOUN Terrier-Border)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Border-TheWord
 (and (isa :NOUN Boundary-Underspecified)) (frame FN_Boundary)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_entities) ((PPFn between) fe_entities)
    ((PPFn of) objectActedOn) (AJP fe_relative_location))
   (:GAP (DEN fe_boundary) (INI fe_entities) (DNI fe_entities objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Border-TheWord
 (and (isa :NOUN Border-StripNearTheBoundaryOfAnObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bore-TheWord (and (isa :NOUN Caliber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boredom-TheWord (and (isa :NOUN Boredom))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn eventAffectsBodyPart))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn for) objectActedOn)
    ((PPFn with) objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn of) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn of) objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn about) situationTopic) (A situationTopic))
   (:GEN (Poss objectActedOn (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns
  (TheSet ((1 6 0)) ((2 0 1)) ((1 3 0)) ((1 2 1)) ((1 4 1)) ((0 0 1)) ((2 0 0))
   ((1 2 0)) ((1 4 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 5 0) (2 0 0))
   ((1 2 1) (2 0 0)) ((1 0 0) (1 3 0)) ((1 0 0) (1 2 1)))))

(FNNounSemtrans (TheList) Boron-TheWord (and (isa :NOUN Boron)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Borough-TheWord (and (isa :NOUN Borough))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Borough-TheWord (and (isa :NOUN Borough))
 (frame FN_Political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Borrower-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance borrower BorrowingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Borzoi-TheWord (and (isa :NOUN Borzoi))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boss-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed))
   (:OBLIQUE-OBJECT (N fe_governed) ((PPFn at) fe_governed)
    ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList "boston") Bull-TheWord
 (and (isa :NOUN Terrier-Boston)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Botanist-TheWord (and (isa :NOUN Botanist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bottle") Brush-TheWord (and (isa :NOUN BottleBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bottle-TheWord (and (isa :NOUN Bottle))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) ((PPFn beside) fe_relative_location)
    ((PPFn on) fe_relative_location) (AJP deviceUse)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 2 0)) ((2 0 0)) ((0 5 0)) ((0 0 0)) ((0 3 0) (0 5 1))
   ((0 5 1) (2 0 0)) ((0 4 0) (2 0 0)) ((0 1 0) (0 5 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 5 0)))))

(FNNounSemtrans (TheList) Bottle-TheWord (and (isa :NOUN (VolumeFn Bottle)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DNI (InverseBinaryPredicateFn volumeOfObject)) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bottle-TheWord (and (isa :NOUN DrinkingBottle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bottlebrush-TheWord (and (isa :NOUN BottleBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bottled") Product-TheWord
 (and (isa :NOUN BottledProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bottom" "mount") Refrigerator-TheWord
 (and (isa :NOUN Refrigerator-FreezerOnBottom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bottom-TheWord (and (isa :NOUN BottomSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Botulism-TheWord (and (isa :NOUN Botulism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boudoir-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boulder-TheWord (and (isa :NOUN Boulder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boulevard-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing to-Generic)
    (AJP fe_characteristic (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn outside) fe_relative_location) ((PPFn of) fe_relative_location)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 1)) ((0 2 0)) ((0 5 0)) ((0 1 1)) ((0 0 0)) ((0 1 0))
   ((0 1 0) (2 0 0)) ((0 1 0) (0 4 0)) ((0 1 0) (0 5 0)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Bouncer-TheWord (and (isa :NOUN Bouncer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boundary") Line-TheWord (and (isa :NOUN Borderline))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boundary-TheWord
 (and (isa :NOUN Boundary-Underspecified)) (frame FN_Boundary)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_boundary))
   (:OBLIQUE-OBJECT (NP fe_boundary) ((PPFn between) fe_entities))
   (:GAP (DEN fe_boundary) (DNI fe_entities))))
 (groupPatterns (TheSet ((1 0 0)) ((1 1 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Boundary-TheWord (and (isa :NOUN Border))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boundary-TheWord (and (isa :NOUN BoundaryLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bouquet-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_perceptual_source)
    ((PPFn from) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bouquet-TheWord (and (isa :NOUN PleasantOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_perceptual_source)
    ((PPFn from) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bouquet-TheWord (and (isa :NOUN WeakOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_perceptual_source)
    ((PPFn from) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Bout-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_issue) ((PPFn in) eventOccursAt)
    (N by-Underspecified purposeOfEvent) ((PPFn with) fe_side_2)
    ((PPFn against) fe_side_2) ((PPFn between) fe_sides)
    ((PPFn during) temporallyIntersects))
   (:GAP (DNI fe_side_1 fe_sides) (INI fe_sides))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 1)) ((0 1 0)) ((0 2 0))
   ((0 2 0) (0 6 0)) ((0 0 0) (0 5 0)))))

(FNNounSemtrans (TheList) Boutique-TheWord (and (isa :NOUN Boutique))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) eventOccursAt)
    (NP eventOccursAt) ((PPFn near) eventOccursAt) ((PPFn on) eventOccursAt)
    (A eventOccursAt fe_product) (N fe_business_name fe_descriptor fe_product))
   (:GAP (DEN fe_business) (INI fe_product ownerOfProprietaryThing)
    (DNI fe_product ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing)) (:APPOSITIVE (NP fe_business_name))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 0)) ((0 0 0)) ((0 1 0) (0 6 2)) ((0 1 0) (0 5 1))
   ((0 1 0) (0 6 1)) ((0 2 0) (3 0 0)) ((0 1 0) (0 6 0))
   ((0 3 0) (0 6 2) (2 0 0)))))

(FNNounSemtrans (TheList "bouvier" "des") Flandres-TheWord
 (and (isa :NOUN BouvierDesFlandres)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bovine-TheWord (and (isa :NOUN Cattle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bow-TheWord (and (isa :NOUN BowForStringInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bow-TheWord (and (isa :NOUN Bow-Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (N activeIngredientsOfType)
    ((PPFn of) mainConstituent activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 2 0)) ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList "bow") Tie-TheWord (and (isa :NOUN BowTie))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bow-Tie-TheWord (and (isa :NOUN BowTie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "bowed" "stringed") Instrument-TheWord
 (and (isa :NOUN OrchestralStringInstrumentType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bowl-TheWord (and (isa :NOUN Bowl-Generic))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPingFn of) containedObject)
    ((PPFn on) fe_relative_location) (AJP mainConstituent deviceUse)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 1)) ((2 0 0)) ((0 4 0)) ((0 1 0)) ((0 0 0))
   ((0 4 1) (2 0 0)) ((0 3 1) (0 4 0)) ((0 3 0) (2 0 0)) ((0 0 0) (0 4 0))
   ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList) Bowl-TheWord (and (isa :NOUN Bowl-Eating))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bowl-TheWord (and (isa :NOUN (VolumeFn Bowl-Eating)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Bowler-TheWord (and (isa :NOUN Hat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP deviceUse) ((PPFn of) wearer))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "bowling") Alley-TheWord
 (and (isa :NOUN BowlingAlley)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bowling") Ball-TheWord (and (isa :NOUN BowlingBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bowling-TheWord (and (isa :NOUN BowlingActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "box") Office-TheWord (and (isa :NOUN TicketOffice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Box-TheWord (and (isa :NOUN Box-Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn on) fe_relative_location) (N mainConstituent deviceUse)
    (AJP mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 3 1)) ((0 1 0)) ((0 2 0)) ((0 3 0)) ((0 0 0))
   ((0 2 1) (2 0 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Box-TheWord
 (and (isa :NOUN (VolumeFn Box-Container))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Box-TheWord (and (isa :NOUN BoxTheContainer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boxed") Set-TheWord
 (and (isa :NOUN BoxedSet-TheProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boxer-TheWord (and (isa :NOUN Boxer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boxer-TheWord (and (isa :NOUN Boxer-TheDog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boxful-TheWord
 (and (isa :NOUN (VolumeFn Box-Container))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DNI (InverseBinaryPredicateFn volumeOfObject)) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "boxing") Day-TheWord
 (and (isa :NOUN BoxingDay-Holiday)) (frame FN_Commemorative)
 (bindingTemplate
  (TheList
   (:GAP (DEN fe_dedicated_entity) (2nd fe_dedicated_type fe_honored_entity))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boxing") Glove-TheWord (and (isa :NOUN BoxingGlove))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boxing") Ring-TheWord (and (isa :NOUN BoxingRing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "boxing") Day-TheWord
 (and (isa :NOUN BoxingDay-Holiday)) (frame FN_Commemorative)
 (bindingTemplate
  (TheList
   (:GAP (DEN fe_dedicated_entity) (2nd fe_dedicated_type fe_honored_entity))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boxing-TheWord (and (isa :NOUN Commemoration))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boxing-TheWord (and (isa :NOUN Boxing-SportCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Boy-TheWord (and (isa :NOUN MaleChild))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn under) age) ((PPFn in) fe_descriptor)
    (N fe_context_of_acquaintance fe_descriptor) ((PPFn at) fe_descriptor)
    ((PPFn of) age fe_descriptor) ((PPFn on) fe_descriptor)
    ((PPFn from) fe_descriptor comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    (Sub fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN age fe_person)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 7 3)) ((1 6 1)) ((1 7 2)) ((1 9 0)) ((1 5 0)) ((1 1 0))
   ((1 3 0)) ((1 2 1)) ((1 7 1)) ((1 2 0)) ((1 0 0)) ((1 4 0)) ((3 0 0))
   ((1 7 0)) ((1 7 3) (1 7 3)) ((1 7 1) (1 7 3)) ((1 2 1) (1 6 0))
   ((1 7 0) (1 7 3)) ((0 0 0) (1 1 0)) ((1 4 1) (1 7 2) (1 7 2))
   ((1 1 0) (1 3 0) (1 7 3)) ((0 0 0) (1 4 0) (1 7 3))
   ((0 0 0) (1 7 3) (1 8 0)))))

(FNNounSemtrans (TheList) Boyfriend-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_2))
   (:GAP (DNI fe_partner_2) (INI fe_partner_2) (DEN fe_partner_1 fe_partner_2))
   (:GEN (Poss fe_partner_1 fe_partner_2))))
 (groupPatterns
  (TheSet ((3 0 0)) ((3 0 1)) ((1 0 0)) ((0 0 1)) ((0 0 0) (3 0 1)))))

(FNNounSemtrans (TheList) Bra-TheWord (and (isa :NOUN Bra)) (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 1 1)) ((0 0 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (0 0 2)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Brace-TheWord (and (isa :NOUN Cardinal-Mathematical))
 (frame FN_Cardinal_numbers) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brace-TheWord
 (and (isa :NOUN Brace-StructuralMember)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brace-TheWord (and (isa :NOUN Suspenders))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bracelet-TheWord (and (isa :NOUN Bracelet))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn along) wornOn) ((PPFn on) wornOn)
    (N mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 2 1)) ((0 2 0)) ((0 3 1)) ((0 3 0)) ((0 0 0))
   ((0 2 2) (2 0 0)) ((0 3 3) (2 0 0)) ((0 2 2) (0 3 1)) ((0 2 0) (0 3 2))
   ((0 2 1) (0 3 1)) ((0 2 0) (0 3 0)) ((0 1 0) (0 3 0))
   ((0 3 0) (0 3 1) (0 3 2)) ((0 2 0) (0 3 0) (0 3 0) (0 3 2)))))

(FNNounSemtrans (TheList) Bracelet-TheWord (and (isa :NOUN Bracelet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brachial") Artery-TheWord
 (and (isa :NOUN BrachialArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brachial") Plexus-TheWord
 (and (isa :NOUN BrachialPlexus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brachial") Vein-TheWord
 (and (isa :NOUN BrachialVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brachiation-TheWord (and (isa :NOUN Brachiating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brachiocephalic") Vein-TheWord
 (and (isa :NOUN BrachiocephalicVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bracket-TheWord (and (isa :NOUN Bracket-Support))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Braggart-TheWord (and (isa :NOUN Boasting))
 (frame FN_Bragging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Braid-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) (InverseBinaryPredicateFn outfitParts))
    (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "brain") Surgeon-TheWord
 (and (isa :NOUN NeuroSurgeon)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brain") Surgery-TheWord
 (and (isa :NOUN BrainSurgery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brain-TheWord (and (isa :NOUN Brain))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brainstem-TheWord (and (isa :NOUN BrainStem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brake") Cable-TheWord (and (isa :NOUN BrakeCable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brake") Fluid-TheWord (and (isa :NOUN BrakeFluid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brake") Lever-TheWord (and (isa :NOUN BrakeLever))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brake") System-TheWord
 (and (isa :NOUN VehicleBrakeSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brake-TheWord (and (isa :NOUN VehicleBrake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brake-TheWord (and (isa :NOUN VehicleBrakeSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brake-TheWord (and (isa :NOUN VehicleBrake))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Branch-TheWord (and (isa :NOUN TreeBranch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brand-TheWord
 (and (isa :NOUN Branding-MarkingOnASurface)) (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) ((PPingFn of) fe_category)
    (A fe_item_property) (AJP fe_type_property)
    (N fe_category fe_type_property))
   (:GAP (DNI fe_category) (DEN fe_category fe_subtype))
   (:NOUN (N fe_category))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 4 0)) ((1 2 0)) ((1 0 0) (1 3 0))
   ((1 4 1) (3 0 0)) ((1 4 0) (1 4 1)) ((1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList "brass") Instrument-TheWord
 (and (isa :NOUN BrassInstrument)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brass-TheWord (and (isa :NOUN Brass)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brass-TheWord (and (isa :NOUN BrassInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brassiere-TheWord (and (isa :NOUN Bra))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Brattice-TheWord (and (isa :NOUN Brattice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brawl-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn over) fe_issue)
    ((PPFn on) eventOccursAt) (N eventOccursAt) ((PPFn in) eventOccursAt)
    ((PPingFn with) fe_side_2) ((PPFn against) fe_side_2)
    ((PPFn between) fe_sides) (NP temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects))
   (:GAP (INI fe_side_2) (DNI fe_side_1 fe_sides))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 7 0) (0 9 1)) ((0 6 0) (0 8 0)) ((0 5 0) (0 9 0))
   ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0) (0 7 0)))))

(FNNounSemtrans (TheList) Bray-TheWord (and (isa :NOUN BrayingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bray-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_component_sound emitter)
    ((PPingFn of) emitter))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 1 0)) ((1 0 0) (1 2 0)) ((1 0 0) (1 1 1))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Brazilian-TheWord (and (isa :NOUN BrazilianPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breach-TheWord (and (isa :NOUN NonCompliant))
 (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPto fe_act)
    (NP fe_act fe_norm affectedAgent fe_state_of_affairs))
   (:OBLIQUE-OBJECT ((PPingFn by) fe_act) ((PPFn of) fe_norm) (N fe_norm)
    (AJP fe_degree fe_manner affectedAgent) ((PPFn by) affectedAgent))
   (:GAP (DEN fe_act) (DNI fe_norm affectedAgent))
   (:GEN (Poss fe_norm affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 1)) ((3 0 0)) ((1 1 0)) ((0 1 1)) ((1 2 0)) ((1 3 0))
   ((0 1 3) (1 1 0)) ((1 4 0) (3 0 0)) ((1 1 0) (3 0 1)) ((1 1 0) (1 4 0))
   ((0 1 2) (1 1 0)) ((1 1 0) (1 3 2)) ((0 0 0) (1 1 0)) ((0 1 0) (1 1 0))
   ((1 1 0) (1 3 0)) ((0 1 3) (1 1 0) (1 3 1)) ((0 1 3) (1 1 0) (1 3 0))
   ((0 1 2) (1 1 0) (1 3 0)) ((0 1 2) (1 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Breach-TheWord
 (and (isa :NOUN ViolatingAnObligation)) (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPto fe_act)
    (NP fe_act fe_norm affectedAgent fe_state_of_affairs))
   (:OBLIQUE-OBJECT ((PPingFn by) fe_act) ((PPFn of) fe_norm) (N fe_norm)
    (AJP fe_degree fe_manner affectedAgent) ((PPFn by) affectedAgent))
   (:GAP (DEN fe_act) (DNI fe_norm affectedAgent))
   (:GEN (Poss fe_norm affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 1)) ((3 0 0)) ((1 1 0)) ((0 1 1)) ((1 2 0)) ((1 3 0))
   ((0 1 3) (1 1 0)) ((1 4 0) (3 0 0)) ((1 1 0) (3 0 1)) ((1 1 0) (1 4 0))
   ((0 1 2) (1 1 0)) ((1 1 0) (1 3 2)) ((0 0 0) (1 1 0)) ((0 1 0) (1 1 0))
   ((1 1 0) (1 3 0)) ((0 1 3) (1 1 0) (1 3 1)) ((0 1 3) (1 1 0) (1 3 0))
   ((0 1 2) (1 1 0) (1 3 0)) ((0 1 2) (1 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Bread-TheWord (and (isa :NOUN Bread)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Breadfruit-TheWord
 (and (isa :NOUN (FruitFn BreadfruitTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breadfruit-TheWord (and (isa :NOUN BreadfruitTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breadth-TheWord (and (isa :NOUN Width))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP quantityMeasured (InverseBinaryPredicateFn widthOfObject)))
   (:OBLIQUE-OBJECT (NP quantityMeasured) ((PPFn of) quantityMeasured))
   (:GAP (DEN hasPhysicalQuantity))
   (:GEN (Poss (InverseBinaryPredicateFn widthOfObject)))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((0 0 1) (1 1 0)) ((1 0 0) (3 0 0))
   ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Break-TheWord (and (isa :NOUN Opportunity))
 (frame FN_Opportunity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Break-Up-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_partner_2) ((PPFn with) fe_partner_2)
    ((PPFn to) fe_partner_2) (N fe_relationship) ((PPFn of) fe_relationship))
   (:GAP (DNI fe_partner_1 fe_partner_2 fe_partners)
    (INI fe_partner_2 fe_partners))
   (:GEN (Poss fe_partner_1 fe_partners))))
 (groupPatterns
  (TheSet ((0 3 0)) ((2 0 1)) ((0 4 0)) ((2 0 0)) ((0 0 0)) ((0 2 0) (0 4 0))
   ((0 3 0) (2 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Breakdown-TheWord
 (and (isa :NOUN DecompositionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "breakfast") Food-TheWord
 (and (isa :NOUN BreakfastFood)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breakfast-TheWord (and (isa :NOUN Breakfast))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breakwater-TheWord (and (isa :NOUN Breakwater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "breast") Cancer-TheWord
 (and (isa :NOUN (CancerFn Breast))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "breast") Implant-TheWord
 (and (isa :NOUN BreastImplant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breast-TheWord (and (isa :NOUN Breast))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) (N fe_descriptor)
    ((PPFn of) fe_descriptor ownerOfProprietaryThing)
    (AJP fe_descriptor subRegions))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 3 1)) ((3 0 0)) ((1 2 1)) ((1 3 0)) ((0 0 0) (1 2 0))
   ((1 1 0) (3 0 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 3 0) (1 3 1)) ((0 0 0) (1 0 0) (1 3 0))
   ((1 3 0) (1 3 0) (3 0 0)))))

(FNNounSemtrans (TheList) Breast-TheWord (and (isa :NOUN Chest-BodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breast-TheWord (and (isa :NOUN PoultryBreast))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breastplate-TheWord
 (and (isa :NOUN SomethingToWearPart)) (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN parts))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Breaststroke-TheWord (and (isa :NOUN Breaststroke))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breath-TheWord (and (isa :NOUN Breathing))
 (frame FN_Breathing)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn of) doneBy primaryObjectMoving)
    ((PPFn out) to-Generic) (AJP trajectory-Complete)
    ((PPFn over) trajectory-Complete) ((PPFn from) doneBy from-Generic))
   (:GAP (DEN primaryObjectMoving)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 2 0)) ((1 0 1)) ((3 0 0)) ((1 0 0)) ((1 4 0))
   ((1 1 0) (1 3 0)) ((1 2 0) (3 0 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Breathalyzer-TheWord (and (isa :NOUN Breathalyzer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breathing-TheWord (and (isa :NOUN AirRespiration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breechcloth-TheWord (and (isa :NOUN Loincloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breeches-TheWord (and (isa :NOUN Pants))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (NP deviceUse) (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 2 0)) ((0 0 0)) ((0 2 1) (2 0 0))
   ((0 0 2) (0 1 0)) ((0 0 0) (0 0 2)) ((0 0 0) (0 2 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Breeches-TheWord (and (isa :NOUN Knickers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breed-TheWord (and (isa :NOUN BiologicalSubspecies))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breed-TheWord (and (isa :NOUN Breed)) (frame FN_Type)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) (N fe_category fe_item_property)
    (AJP fe_item_property fe_type_property))
   (:GAP (DNI fe_category) (2nd fe_item_property) (DEN fe_subtype))
   (:NOUN (N fe_category)) (:GEN (Poss fe_item_property))))
 (groupPatterns
  (TheSet ((0 1 0)) ((3 0 0)) ((0 1 1)) ((0 2 0)) ((0 0 0)) ((0 2 1) (2 0 0))
   ((0 0 0) (0 2 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Bretagne-TheWord (and (isa :NOUN Brittany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Breve-TheWord (and (isa :NOUN Breve-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brewer-TheWord (and (isa :NOUN Brewer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brewery-TheWord (and (isa :NOUN Brewery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Briard-TheWord (and (isa :NOUN Briard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brick") Building-TheWord
 (and (isa :NOUN Building)
      (relationInstanceExists primaryConstituent :NOUN Brick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brick") House-TheWord
 (and (isa :NOUN HumanResidence)
      (relationInstanceExists primaryConstituent :NOUN Brick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brick-TheWord (and (isa :NOUN Brick)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bridal") Gown-TheWord (and (isa :NOUN BridalGown))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bridge-TheWord (and (isa :NOUN Bridge-TheGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bridge-TheWord (and (isa :NOUN Bridge))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_characteristic) ((PPFn between) fe_endpoints)
    (AJP fe_characteristic mainConstituent)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn across) trajectory-Complete) ((PPFn over) trajectory-Complete)
    ((PPFn of) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn above) fe_relative_location)
    ((PPFn on) fe_relative_location)
    (N fe_characteristic mainConstituent (InverseBinaryPredicateFn nameString)
     fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 11 4)) ((2 0 0)) ((0 7 0)) ((0 8 0)) ((0 11 3)) ((0 3 0))
   ((0 11 2)) ((0 11 1)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 10 0) (0 11 4))
   ((0 8 0) (0 11 4)) ((0 4 0) (0 9 0)) ((0 8 0) (0 11 1)) ((0 5 0) (0 11 1))
   ((0 11 0) (0 11 3)) ((0 2 0) (0 6 0)) ((0 2 0) (0 5 0)) ((0 2 0) (0 4 0))
   ((0 11 0) (0 11 1)) ((0 0 0) (0 2 1)) ((0 2 0) (0 11 1)) ((0 2 0) (0 2 1))
   ((0 2 0) (0 11 0)) ((0 7 0) (0 11 0) (0 11 2)) ((0 2 0) (0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList) Brie-TheWord (and (isa :NOUN Brie-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brief-TheWord (and (isa :NOUN ReportOnSituation-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Briefcase-TheWord (and (isa :NOUN Briefcase))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP containedObject) ((PPFn of) containedObject owner)
    ((PPFn under) fe_relative_location) ((PPFn in) fe_relative_location)
    (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 3 0)) ((2 0 0)) ((0 4 0)) ((0 1 0)) ((0 0 0))
   ((0 4 1) (2 0 0)) ((0 2 0) (2 0 0)) ((0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Briefcase-TheWord (and (isa :NOUN Briefcase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Briefs-TheWord (and (isa :NOUN Briefs))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor)
    (N fe_descriptor mainConstituent clothingStyle)
    (AJP fe_descriptor mainConstituent clothingStyle) ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 2 1)) ((0 1 0)) ((0 1 2) (0 2 0))
   ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0) (0 2 0))
   ((0 1 0) (0 2 1) (0 2 2) (0 3 0)))))

(FNNounSemtrans (TheList) Brig-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) objectFoundInLocation)
    (N directingAgent levelOfSecurity))
   (:GAP (DEN locationOfMaleficiaries))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Brigade-TheWord
 (and (isa :NOUN Brigade-MilitaryEchelon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brilliance-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn in) objectOfCritique) ((PPFn as) fe_practice)
    (AJP affectedAgent) ((PPFn of) objectOfCritique affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 1 0) (1 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Brim-TheWord (and (isa :NOUN HatBrim))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts)) (AJP mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Brim-TheWord (and (isa :NOUN HatBrim))
 (frame FN_Shaped_part) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bristle-TheWord (and (isa :NOUN Bristle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brit-TheWord (and (isa :NOUN BritishPerson))
 (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (Srel fe_context_of_acquaintance) (A fe_descriptor)
    (VPto fe_descriptor) (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    (VPing fe_descriptor))
   (:GAP (2nd comesFrom-Generic) (DEN comesFrom-Generic fe_person))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 4 0))
   ((1 3 0) (1 3 0)) ((1 1 0) (1 2 0)) ((1 3 0) (1 3 0) (1 3 0)))))

(FNNounSemtrans (TheList "british") Pound-TheWord
 (and (isa :NOUN Pound-GreatBritain)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Britisher-TheWord (and (isa :NOUN BritishPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bro-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "broad") Jump-TheWord
 (and (isa :NOUN LongJumpSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "broadcast") Antenna-TheWord
 (and (isa :NOUN BroadcastAntenna)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Broadcast-TheWord (and (isa :NOUN Broadcasting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Broadcast-TheWord (and (isa :NOUN TVShow-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Broadcasting-TheWord (and (isa :NOUN Broadcasting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "broca" "s") Area-TheWord (and (isa :NOUN BrocasArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brochure-TheWord (and (isa :NOUN Brochure))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N authorOfLiteraryWork-CW)) (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bromine-TheWord (and (isa :NOUN Bromine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bronchiole-TheWord (and (isa :NOUN Bronchiole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bronchitis-TheWord (and (isa :NOUN Bronchitis))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bronchoscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bronchus-TheWord (and (isa :NOUN BronchialTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bronze") Medal-TheWord
 (and (isa :NOUN BronzeMedal-Physical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bronze-TheWord (and (isa :NOUN Bronze-Stuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bronze-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Physical_artworks)
 (bindingTemplate (TheList (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brooch-TheWord (and (isa :NOUN Brooch))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) wornOn) (NP fe_descriptor)
    ((PPFn of) mainConstituent) ((PPFn with) parts)
    (N fe_descriptor mainConstituent clothingStyle)
    (AJP fe_descriptor mainConstituent clothingStyle) ((PPFn for) wearer))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 2)) ((0 5 2)) ((0 2 0)) ((0 4 1)) ((0 5 1)) ((0 5 0))
   ((0 0 0)) ((0 4 1) (2 0 0)) ((0 4 0) (2 0 0)) ((0 5 0) (0 6 0))
   ((0 4 2) (0 5 0)) ((0 3 0) (0 5 0)) ((0 1 0) (0 4 1))
   ((0 4 1) (0 5 0) (0 5 0)))))

(FNNounSemtrans (TheList) Brooch-TheWord (and (isa :NOUN Brooch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brood-TheWord
 (and (isa :NOUN (GroupFn (JuvenileFn Animal)))) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Brook-TheWord (and (isa :NOUN Creek))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    (N fe_container_possessor (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList "broom") Handle-TheWord (and (isa :NOUN BroomHandle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Broom-TheWord (and (isa :NOUN Broom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brother-In-Law-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance brotherInLaw Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (INI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Brother-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance brothers Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego relatives))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (VPbrst fe_descriptor)
    (A fe_descriptor) (NP fe_alter fe_ego) (N fe_ego) ((PPFn of) fe_ego))
   (:GAP (INI fe_alter) (DNI fe_ego) (DEN fe_alter fe_ego relatives))
   (:GEN (Poss fe_ego)) (:APPOSITIVE (NP fe_alter))))
 (groupPatterns
  (TheSet ((0 0 2)) ((1 2 0)) ((3 0 0)) ((1 5 0)) ((0 0 1)) ((1 3 1)) ((1 4 0))
   ((4 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (1 5 0)) ((1 3 0) (3 0 0))
   ((1 1 0) (1 3 1)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Brother-TheWord
 (and (isa :NOUN MaleAnimal) (relationExistsInstance brothers Animal :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brotherhood-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brow-TheWord (and (isa :NOUN Eyebrow))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Brow-TheWord (and (isa :NOUN Forehead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brown") Bear-TheWord (and (isa :NOUN BrownBear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brown-TheWord (and (isa :NOUN BrownColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brownish") Yellow-TheWord (and (isa :NOUN GoldColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Browser-TheWord
 (and (isa :NOUN WorldWideWebClientProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bruise-TheWord (and (isa :NOUN Bruise))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brunei") Dollar-TheWord
 (and (isa :NOUN Dollar-Brunei)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bruneian-TheWord (and (isa :NOUN BruneiPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brunet-TheWord (and (isa :NOUN BrownHairedHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brunette-TheWord (and (isa :NOUN BrownHairedHuman))
 (frame FN_Body_description_part)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_individual)) (:OBLIQUE-OBJECT (NP fe_individual))
   (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "brush") Fire-TheWord (and (isa :NOUN Fire-ClassA))
 (frame FN_Fire_burning) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brush-TheWord (and (isa :NOUN Brush)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brussels") Sprout-TheWord
 (and (isa :NOUN BrusselsSprout)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "brussels") Sprout-TheWord
 (and (isa :NOUN BrusselsSproutPlant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Brutality-TheWord (and (isa :NOUN Brutality))
 (frame FN_Violence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bryophyta-TheWord (and (isa :NOUN Bryophyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bryophyte-TheWord (and (isa :NOUN Bryophyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bryopsida-TheWord (and (isa :NOUN MusciClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bubble-TheWord (and (isa :NOUN Bubble))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bubble") Bath-TheWord (and (isa :NOUN BubbleBath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bubble") Gum-TheWord (and (isa :NOUN ChewingGum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bubonic") Plague-TheWord
 (and (isa :NOUN BubonicPlague)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buck-TheWord (and (isa :NOUN (MaleFn Deer)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bucket") Elevator-TheWord
 (and (isa :NOUN BucketElevator)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bucket-TheWord (and (isa :NOUN Bucket))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) containedObject)
    (AJP mainConstituent) (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 3 1) (2 0 0))
   ((0 1 0) (0 3 1)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Bucketful-TheWord (and (isa :NOUN (VolumeFn Bucket)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Buckle-TheWord (and (isa :NOUN Buckle-Fastener))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts))
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent)
    (AJP mainConstituent))
   (:GAP (DEN (InverseBinaryPredicateFn outfitParts) parts))
   (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((0 2 1))
   ((0 2 0) (2 0 0)) ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Buckle-TheWord (and (isa :NOUN Buckle-Fastener))
 (frame FN_Fastener) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buckle-TheWord (and (isa :NOUN Buckle-Fastener))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buddhism-TheWord (and (isa :NOUN Buddhism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buddhist-TheWord (and (isa :NOUN BuddhistPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buddhist-TheWord
 (and (isa :NOUN (BelieverFn Buddhism))) (frame FN_People_by_religion)
 (bindingTemplate (TheList (:GAP (INI fe_person) (DEN hasBeliefSystems))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buddy-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buddy-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partners))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_depictive) (N fe_depictive)
    (VPing fe_depictive) ((PPingFn in) by-Underspecified)
    ((PPFn of) fe_partner_2) ((PPFn with) fe_partner_2))
   (:GAP (DEN fe_partner_1) (DNI fe_partner_2)) (:NOUN (N fe_partner_1))
   (:GEN (Poss fe_partner_2)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 4 0)) ((1 0 1)) ((1 2 0)) ((1 1 0)) ((0 0 0) (4 0 0))
   ((0 0 0) (1 5 0)) ((4 0 0) (5 0 0)) ((3 0 0) (4 0 0)) ((0 0 1) (1 3 0))
   ((1 1 0) (4 0 0)) ((1 0 1) (4 0 0)) ((0 0 1) (1 0 0))
   ((1 1 0) (3 0 0) (4 0 0)) ((1 0 1) (4 0 0) (5 0 0)))))

(FNNounSemtrans (TheList) Buff-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_knowledge affectedAgent))
   (:OBLIQUE-OBJECT (N fe_knowledge)) (:GAP (DEN affectedAgent))
   (:NOUN (N affectedAgent)) (:APPOSITIVE (NP affectedAgent))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((0 0 1) (1 0 0)) ((1 0 0) (4 0 0))
   ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "buffalo") Wing-TheWord (and (isa :NOUN BuffaloWing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buffet-TheWord
 (and (isa :NOUN Buffet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buggy-TheWord (and (isa :NOUN HorseCarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buggy-TheWord (and (isa :NOUN HorseCarriage))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bugle-TheWord (and (isa :NOUN Bugle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Builder-TheWord (and (isa :NOUN BuildingConstructor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "building") Material-TheWord
 (and (isa :NOUN BuildingMaterial)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Building-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_descriptor) ((PPFn at) eventOccursAt)
    (AJP fe_descriptor fe_relative_location startingDate
     activeIngredientsOfType)
    (N fe_function (InverseBinaryPredicateFn nameString) startingDate
     activeIngredientsOfType)
    (A fe_descriptor startingDate activeIngredientsOfType)
    ((PPFn of) eventOccursAt activeIngredientsOfType))
   (:GAP (DEN fe_building)) (:GEN (Poss eventOccursAt))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 4 1)) ((0 2 1)) ((0 5 0)) ((0 1 0)) ((0 3 1)) ((0 3 0))
   ((0 0 0)) ((0 2 0)) ((0 3 1) (0 3 2)) ((0 2 0) (0 5 1)) ((0 2 0) (0 2 3))
   ((0 2 0) (0 4 2)) ((0 3 3) (0 4 0)) ((0 2 3) (0 4 0)) ((0 2 0) (2 0 0))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Building-TheWord
 (and (isa :NOUN HumanOccupationConstruct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "building") Wire-TheWord
 (and (isa :NOUN BuildingWire)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "built" "in") Oven-TheWord
 (and (isa :NOUN Oven-BuiltInToWall)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "built" "in") Range-TheWord
 (and (isa :NOUN BuiltInCookingRange)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "built" "in" "storage") Device-TheWord
 (and (isa :NOUN StorageConstructInABuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bulb-TheWord (and (isa :NOUN Bulb-ThePlantPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bulgarian-TheWord (and (isa :NOUN BulgarianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bull") Mastiff-TheWord (and (isa :NOUN BullMastiff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bull-TheWord (and (isa :NOUN Bull-Cattle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bull-TheWord (and (isa :NOUN Bull-MaleHerdAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bulldog-TheWord (and (isa :NOUN Bulldog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bulldozer-TheWord (and (isa :NOUN Bulldozer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullet-TheWord (and (isa :NOUN BulletAssembly))
 (frame FN_Ammunition)
 (bindingTemplate (TheList (:GAP (DEN typePrimaryFunction-DeviceUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullet-TheWord (and (isa :NOUN BulletAssembly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullet-TheWord
 (and (isa :NOUN ProjectileShellAssembly)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullet-TheWord
 (and (isa :NOUN ProjectileSlug-Bullet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bulletin") Board-TheWord
 (and (isa :NOUN BulletinBoard-Physical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bulletin-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) authorOfLiteraryWork-CW) (NP fe_text)
    (AJP startingDate) (N fe_genre languageWrittenIn startingDate)
    ((PPFn on) fe_title situationTopic) ((PPFn of) situationTopic)
    (VPto deviceUse))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 4 1)) ((0 5 0)) ((0 3 1)) ((0 3 0)) ((2 0 0)) ((0 0 0))
   ((0 3 1) (0 4 0)) ((0 3 0) (0 3 2)) ((0 1 0) (2 0 0)) ((0 3 2) (2 0 0))
   ((0 2 0) (0 4 1) (2 0 0)))))

(FNNounSemtrans (TheList "bulletproof") Vest-TheWord
 (and (isa :NOUN Vest-Bulletproof)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullfight-TheWord (and (isa :NOUN Bullfight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullfrog-TheWord (and (isa :NOUN Bullfrog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bullseye-TheWord (and (isa :NOUN Target-Device))
 (frame FN_Hit_or_miss) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bullshit") Artist-TheWord (and (isa :NOUN Liar))
 (frame FN_Prevarication)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy)) (:GAP (DNI performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bullshit-TheWord (and (isa :NOUN Lying))
 (frame FN_Prevarication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bully-TheWord (and (isa :NOUN Bully)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bulwark-TheWord (and (isa :NOUN ProtectingSomething))
 (frame FN_Protecting)
 (bindingTemplate
  (TheList (:SUBJECT (NP actionProtectsFromAttackOfType))
   (:OBLIQUE-OBJECT ((PPFn against) fe_danger) (AJP fe_descriptor))
   (:GAP (DNI objectProtected actionProtectsFromAttackOfType))
   (:GEN (Poss beneficiary))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Bumbershoot-TheWord (and (isa :NOUN Umbrella))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bumblefuck-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationInstanceExists farFrom :NOUN HighPopulationRegionOrPolity))
 (frame FN_Isolated_places) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bumper") Sticker-TheWord
 (and (isa :NOUN BumperSticker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bumper-TheWord (and (isa :NOUN AutomobileBumper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bun-TheWord (and (isa :NOUN Bun)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bunch-TheWord (and (isa :NOUN Group))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Bungalow-TheWord (and (isa :NOUN Cottage))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bungee") Cord-TheWord (and (isa :NOUN BungeeCord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bungler-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy (UnsuccessfulFn Attempting) :NOUN))
 (frame FN_Bungling)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:GAP (DNI objectActedOn) (DEN doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bunk-TheWord
 (and (isa :NOUN RoughBed-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bunker-TheWord (and (isa :NOUN Bunker))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bunker-TheWord (and (isa :NOUN SandTrap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bunny-TheWord (and (isa :NOUN Rabbit))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bunsen") Burner-TheWord
 (and (isa :NOUN BunsenBurner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burberry-TheWord (and (isa :NOUN RainCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burble-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn as) fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_component_sound fe_internal_cause fe_noisy_event emitter))))
 (groupPatterns
  (TheSet ((1 3 2)) ((1 0 0)) ((1 0 0) (1 3 3)) ((1 2 0) (1 3 1))
   ((1 0 0) (1 3 0)) ((0 0 0) (0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Bureau-TheWord
 (and (isa :NOUN Dresser-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bureau") Drawer-TheWord
 (and (isa :NOUN DresserDrawer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burglar-TheWord (and (isa :NOUN Burglar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burglary-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_degree) (AJP fe_degree) (N fe_degree)
    ((PPFn by) perpetrator))
   (:GAP (DEN fe_degree fe_offense) (INI victim))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Burlap-TheWord (and (isa :NOUN Burlap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burmese-TheWord (and (isa :NOUN BurmeseLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burmese-TheWord (and (isa :NOUN BurmesePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burner-TheWord (and (isa :NOUN Burner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burning-TheWord (and (isa :NOUN CombustionProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burp-TheWord (and (isa :NOUN Burping))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Burrito-TheWord (and (isa :NOUN Burrito))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "burundi") Franc-TheWord
 (and (isa :NOUN Franc-Burundi)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "bus") Stop-TheWord (and (isa :NOUN BusStop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bus-TheWord (and (isa :NOUN Bus-RoadVehicle))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_itinerary) ((PPFn to) fe_itinerary)
    ((PPFn from) fe_itinerary)
    (N fe_descriptor fe_itinerary ownerOfProprietaryThing))
   (:GAP (DEN transporter)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 1 0)) ((0 3 1)) ((0 0 1)) ((0 2 0)) ((0 0 0))
   ((0 0 1) (0 2 0)) ((0 0 0) (2 0 0)) ((0 1 0) (0 3 0)) ((0 3 0) (0 3 0))
   ((0 0 0) (0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Bush-TheWord (and (isa :NOUN BushyTerrain))
 (frame FN_Biological_area) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bush-TheWord (and (isa :NOUN Bush)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bushel-TheWord (and (isa :NOUN (VolumeFn Basket)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Bushing-TheWord (and (isa :NOUN Bushing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "business") Card-TheWord
 (and (isa :NOUN BusinessCard)) (frame FN_Documents)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "business") Card-TheWord
 (and (isa :NOUN BusinessCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "business") College-TheWord
 (and (isa :NOUN BusinessSchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "business") District-TheWord
 (and (isa :NOUN Downtown)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "business") Suit-TheWord
 (and (isa :NOUN BusinessSuit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Business-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (AJP fe_descriptor eventOccursAt)
    ((PPFn at) eventOccursAt) (A eventOccursAt fe_product)
    ((PPingFn in) fe_product)
    (N eventOccursAt fe_product ownerOfProprietaryThing fe_service_provider))
   (:GAP (DEN fe_business)) (:NOUN (N eventOccursAt))
   (:GEN (Poss eventOccursAt fe_product ownerOfProprietaryThing))
   (:APPOSITIVE (NP fe_business_name))))
 (groupPatterns
  (TheSet ((0 5 2)) ((0 5 3)) ((3 0 2)) ((0 5 1)) ((2 0 0)) ((0 1 1)) ((0 3 0))
   ((0 1 0)) ((0 0 0) (0 5 2)) ((3 0 1) (3 0 2)) ((0 5 1) (3 0 2))
   ((0 3 1) (3 0 2)) ((0 2 0) (3 0 2)) ((0 0 0) (0 5 1)) ((0 0 0) (0 1 1))
   ((0 1 0) (0 5 2)) ((0 1 0) (0 5 1)) ((0 1 0) (3 0 0)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 1 0) (0 4 0)) ((0 5 0) (0 5 1) (3 0 2))
   ((0 0 0) (0 1 0) (0 5 1)) ((0 1 0) (0 1 0) (0 5 1))
   ((0 5 1) (3 0 2) (4 0 0)) ((0 1 0) (0 5 1) (4 0 0)))))

(FNNounSemtrans (TheList) Business-TheWord
 (and (isa :NOUN CommercialOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Businessman-TheWord (and (isa :NOUN BusinessPerson))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Businessperson-TheWord
 (and (isa :NOUN BusinessPerson)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Busker-TheWord (and (isa :NOUN StreetPerformer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buskin-TheWord (and (isa :NOUN Boot-Footwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) wornOn) (AJP fe_descriptor mainConstituent)
    (N mainConstituent))
   (:GAP (DEN itemWorn) (2nd wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 2 0)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Buskin-TheWord (and (isa :NOUN CombatBoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Busload-TheWord
 (and (isa :NOUN (VolumeFn Bus-RoadVehicle))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Busman-TheWord (and (isa :NOUN BusDriver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bust-TheWord (and (isa :NOUN ArrestingSomeone))
 (frame FN_Arrest)
 (bindingTemplate
  (TheList (:SUBJECT (NP arrestingOfficer))
   (:OBLIQUE-OBJECT (AJP arrestingOfficer) (N fe_offense)
    ((PPFn in) eventOccursAt))
   (:GAP (INI arrestingOfficer fe_suspect) (DNI fe_offense fe_suspect))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0) (1 1 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "butcher") Shop-TheWord (and (isa :NOUN ButcherShop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Butcher-TheWord (and (isa :NOUN Butcher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Butchery-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) victim))
   (:GAP (DNI killers victim) (DEN victim)) (:GEN (Poss killers))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Butte-TheWord (and (isa :NOUN Butte))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N parts activeIngredientsOfType))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_container_possessor))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList "butter") Dish-TheWord (and (isa :NOUN ButterDish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "butter") Knife-TheWord (and (isa :NOUN ButterKnife))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Butter-TheWord (and (isa :NOUN Butter))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "butterfly") Orchid-TheWord
 (and (isa :NOUN OrchisPapilionaceae)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Butterfly-TheWord (and (isa :NOUN Butterfly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Butterfly-TheWord
 (and (isa :NOUN ButterflySwimStroke)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buttermilk-TheWord (and (isa :NOUN Buttermilk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buttery-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buttock-TheWord (and (isa :NOUN Buttocks))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Button-TheWord (and (isa :NOUN ButtonTheFastener))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) wornOn)
    ((PPFn for) (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)) (AJP mainConstituent)
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 5 0) (2 0 0))
   ((0 2 0) (0 5 1)) ((0 0 0) (0 4 0)))))

(FNNounSemtrans (TheList) Button-TheWord (and (isa :NOUN Button-ControlDevice))
 (frame FN_Controller_object)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString) deviceUse)
    (N fe_controlled_entity deviceUse) (Srel deviceUse) (VPbrst deviceUse))
   (:GAP (DEN objectControlled))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 1)) ((0 0 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Button-TheWord (and (isa :NOUN FastenerConnection))
 (frame FN_Fastener) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Button-TheWord (and (isa :NOUN ButtonTheFastener))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Buyer-TheWord
 (and (isa :NOUN SocialBeing) (relationExistsInstance buyer Buying :NOUN))
 (frame FN_Commerce_buy)
 (bindingTemplate
  (TheList (:SUBJECT (NP buyer objectOfPossessionTransfer seller))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer)
    (N objectOfPossessionTransfer by-Underspecified)
    ((PPFn at) moneyTransferred) (NP objectOfPossessionTransfer rateOfEvent)
    (AJP rateOfEvent))
   (:GAP (DEN buyer)) (:GEN (Poss objectOfPossessionTransfer))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 2 1)) ((3 0 0)) ((1 1 0)) ((1 4 0)) ((1 2 0)) ((0 0 0))
   ((0 0 1) (1 3 0)) ((0 0 2) (1 0 0)) ((1 0 0) (1 4 1)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Buzz-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn EmittingSound doneBy Bee))))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_component_sound fe_noisy_event emitter))))
 (groupPatterns
  (TheSet ((1 2 2)) ((0 0 0)) ((1 2 1)) ((1 0 0)) ((1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Bw-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList
   (:GAP (DEN instrument-Generic) (INC by-Underspecified)
    (INI purposeOfEvent fe_sides))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bw-TheWord (and (isa :NOUN BiologicalWeapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:GAP (2nd activeIngredientsOfType) (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) By-Name-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Bypass-TheWord (and (isa :NOUN Bypass-Path))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_endpoints) ((PPFn to) to-Generic)
    ((PPFn round) trajectory-Complete) ((PPFn through) trajectory-Complete)
    (A fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn at) fe_relative_location)
    (AJP fe_frequency_of_use fe_relative_location)
    (N fe_characteristic fe_endpoints (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn around) fe_relative_location))
   (:GAP (DEN fe_roadway))
   (:GEN (Poss trajectory-Complete fe_relative_location))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 9 0)) ((0 8 3)) ((0 7 1)) ((0 4 0)) ((2 0 0)) ((0 3 0))
   ((0 2 0)) ((0 8 2)) ((0 1 0)) ((0 0 0)) ((0 8 1)) ((0 7 1) (2 0 1))
   ((0 5 0) (0 8 2)) ((0 6 0) (0 8 2)) ((0 8 2) (0 8 2)) ((0 4 0) (0 8 1))
   ((0 8 1) (0 8 2)) ((0 4 0) (0 6 0) (0 8 2)) ((0 5 0) (0 8 2) (0 8 2))
   ((0 1 0) (0 8 2) (0 8 2)) ((0 1 0) (0 7 0) (0 8 0) (0 8 2)))))

(FNNounSemtrans (TheList) Byte-TheWord (and (isa :NOUN Byte)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Byway-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) (A fe_relative_location)
    ((PPFn of) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "c") Compiler-TheWord
 (and (isa :NOUN (CompilerFn C-ProgrammingLanguage))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) C4-TheWord (and (isa :NOUN Cyclotol))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cd") Player-TheWord
 (and (isa :NOUN AutomobileCDPlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cab-TheWord (and (isa :NOUN TruckCab-Compartment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cab-TheWord (and (isa :NOUN TaxiCab))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabala-TheWord (and (isa :NOUN Kabbalah))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabbage-TheWord (and (isa :NOUN Cabbage-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabbage-TheWord (and (isa :NOUN CabbagePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cabbage-patch") Doll-TheWord
 (and (isa :NOUN CabbagePatchDoll-TheToy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabin-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabin-TheWord (and (isa :NOUN AircraftCabin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabin-TheWord (and (isa :NOUN Cabin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabinet-TheWord
 (and (isa :NOUN Cabinet-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabinet-TheWord
 (and (isa :NOUN Cabinet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cabinet-TheWord
 (and (isa :NOUN Cabinet-StorageConstruction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cable" "driven") Conveyance-TheWord
 (and (isa :NOUN CableDrivenConveyance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cable-TheWord (and (isa :NOUN Cable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cacao") Bean-TheWord
 (and (isa :NOUN CocoaBean-TheSeed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cacao-TheWord (and (isa :NOUN CacaoTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cache-TheWord (and (isa :NOUN StorageOfSomething))
 (frame FN_Cache)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn from) fe_descriptor)
    (N ownerOfProprietaryThing resourceAllocated)
    ((PPFn of) resourceAllocated))
   (:GAP (DEN fe_cache))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 1)) ((0 2 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 1))
   ((0 0 0) (0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Cackle-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter) ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Caconym-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cactaceae-TheWord (and (isa :NOUN Cactus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cactus-TheWord (and (isa :NOUN Cactus))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cadmium-TheWord (and (isa :NOUN Cadmium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cafeteria-TheWord (and (isa :NOUN CafeteriaSpace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caffeine-TheWord (and (isa :NOUN Caffeine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caftan-TheWord (and (isa :NOUN Caftan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cage-TheWord (and (isa :NOUN AnimalCage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cairn-TheWord (and (isa :NOUN Cairn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cairn-TheWord (and (isa :NOUN Terrier-Cairn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caisson-TheWord
 (and (isa :NOUN Caisson-MilitaryPlatform)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cajun-TheWord (and (isa :NOUN EthnicGroupOfCajuns))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cake") Mix-TheWord (and (isa :NOUN CakeMix))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cake-TheWord (and (isa :NOUN Cake)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 2 1)) ((0 1 1)) ((0 2 0)) ((0 1 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Calamity-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_undesirable_event))
   (:OBLIQUE-OBJECT (AJP fe_degree objectActedOn))
   (:GAP (DNI objectActedOn) (INI objectActedOn) (DEN fe_undesirable_event))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 1)) ((0 0 0) (1 0 1)) ((1 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Calcium-TheWord (and (isa :NOUN Calcium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calcium-TheWord (and (isa :NOUN Calcium))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calculator-TheWord (and (isa :NOUN Calculator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calculus-TheWord (and (isa :NOUN Calculus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caldera-TheWord (and (isa :NOUN Caldera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "calendar") Day-TheWord (and (isa :NOUN CalendarDay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "calendar") Month-TheWord
 (and (isa :NOUN CalendarMonth)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calendar-TheWord (and (isa :NOUN Calendar-Document))
 (frame FN_Calendric_unit) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calendar-TheWord (and (isa :NOUN CalendarSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "calendar") Year-TheWord
 (and (isa :NOUN CalendarYear)) (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time) (A fe_relative_time))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Calf-TheWord (and (isa :NOUN Calf-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calf-TheWord (and (isa :NOUN Calf-TheAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calibration-TheWord
 (and (isa :NOUN HandlingAnObject)) (frame FN_Adjusting)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy parts))
   (:OBLIQUE-OBJECT (N fe_feature) ((PPFn with) instrument-Generic)
    ((PPFn in) fe_manner) (VPing fe_manner) (AJP fe_manner)
    ((PPingFn by) by-Underspecified) ((PPFn of) fe_feature parts)
    ((PPFn for) parts) ((PPFn on) parts))
   (:GAP (CNI doneBy) (INI doneBy parts) (DNI parts))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((0 0 1)) ((1 1 0)) ((1 6 0)) ((1 0 0)) ((0 0 0))
   ((1 6 1)) ((1 5 0)) ((1 4 0) (1 6 0)) ((1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Californian-TheWord (and (isa :NOUN Californian))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (INI comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Californium-TheWord (and (isa :NOUN Californium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caliper-TheWord (and (isa :NOUN Caliper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caliph-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_governed) ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement)) (:NOUN (N leadersOfMovement))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Caliphate-TheWord (and (isa :NOUN Caliphate))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Call-TheWord (and (isa :NOUN MakingAPhoneCall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Call-TheWord (and (isa :NOUN VisitingSomeone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Call-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn on) recipientOfInfo) (VPto infoTransferred)
    ((PPFn to) infoTransferred) (unknown situationTopic))
   (:GAP (INI meansOfInfoTransfer)) (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((1 2 0) (3 0 0)) ((0 0 0) (1 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Call-TheWord
 (and (isa :NOUN VisitingSomeoneInformally)) (frame FN_Visiting)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBLIQUE-OBJECT (N eventOccursAt))
   (:GAP (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Calligraphy-TheWord
 (and (isa :NOUN CalligraphyStyleOfWriting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Callus-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN markCreated) (2nd ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Calorimeter-TheWord (and (isa :NOUN Calorimeter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "calvin") Cycle-TheWord (and (isa :NOUN CalvinCycle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Calving-TheWord (and (isa :NOUN BirthEvent))
 (frame FN_Giving_birth)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP temporallyIntersects) (N mother temporallyIntersects))
   (:GAP (DNI mother)) (:NOUN (N mother))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((2 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Calyx-TheWord (and (isa :NOUN Calyx)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cam") Shaft-TheWord (and (isa :NOUN CamShaft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cambrian-TheWord
 (and (isa :NOUN Cambrian-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camcorder-TheWord
 (and (isa :NOUN AmateurVideoCamera)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camel-TheWord (and (isa :NOUN Camel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camellia-TheWord (and (isa :NOUN Camellia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "camera") Lens-TheWord (and (isa :NOUN CameraLens))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camera-TheWord (and (isa :NOUN Camera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camera-TheWord (and (isa :NOUN StillCamera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cameraman-TheWord (and (isa :NOUN CameraOperator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camisole-TheWord (and (isa :NOUN Camisole))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Camp-TheWord (and (isa :NOUN Camp-Recreational))
 (frame FN_Residence)
 (bindingTemplate
  (TheList (:SUBJECT (NP residents-Role))
   (:OBLIQUE-OBJECT (AJP residesInDwelling) (NP residesInDwelling)
    ((PPFn at) residesInDwelling) ((PPFn by) residesInDwelling)
    ((PPFn in) residesInDwelling) ((PPFn inside) residesInDwelling)
    ((PPFn near) residesInDwelling) ((PPFn of) residesInDwelling)
    ((PPFn on) residesInDwelling) ((PPFn to) residesInDwelling)
    (VPing residents-Role) (N residesInDwelling residents-Role)
    ((PPFn for) residents-Role))
   (:GAP (DEN residesInDwelling) (DNI residents-Role))
   (:GEN (Poss residents-Role))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 12 0)) ((0 0 0)) ((1 11 1)) ((1 5 0)) ((1 0 0))
   ((1 9 0)) ((1 8 0)) ((1 7 0)) ((1 6 0)) ((1 4 0)) ((1 3 0)) ((1 2 0))
   ((1 1 0)) ((1 11 0)) ((0 0 0) (1 8 0)) ((0 0 0) (1 4 0))
   ((1 4 0) (1 10 0)))))

(FNNounSemtrans (TheList "campaign") Ad-TheWord (and (isa :NOUN PoliticalAd))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campaign-TheWord
 (and (isa :NOUN Campaign-MilitaryOperation)) (frame FN_Military_operation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campaign-TheWord (and (isa :NOUN Campaign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campaign-TheWord
 (and (isa :NOUN Campaign-MilitaryOperation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campanile-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campanile-TheWord
 (and (isa :NOUN Campanile-BellTower)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camper-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Camping :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camper-TheWord (and (isa :NOUN AutoCamper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Camper-TheWord (and (isa :NOUN RecreationalVehicle))
 (frame FN_Residence)
 (bindingTemplate (TheList (:GAP (DEN fe_depictive residents-Role))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campfire-TheWord (and (isa :NOUN Campfire))
 (frame FN_Fire_burning)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP fe_manner)) (:NOUN (NP fe_fire))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Campfire-TheWord (and (isa :NOUN Campfire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "camping") Stove-TheWord
 (and (isa :NOUN CampingStove)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campsite-TheWord (and (isa :NOUN Campground))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Campus-TheWord (and (isa :NOUN Campus))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Campus-TheWord (and (isa :NOUN SchoolCampus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "can") Opener-TheWord
 (and (isa :NOUN ManualCanOpener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Can-TheWord (and (isa :NOUN Can))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn on) fe_relative_location) ((PPFn in) fe_relative_location)
    (AJP activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 1 0)) ((2 0 0)) ((0 4 0)) ((0 0 0))
   ((0 3 0) (0 4 2)) ((0 2 0) (0 4 2)) ((0 4 0) (0 4 2)) ((0 4 0) (2 0 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Can-TheWord (and (isa :NOUN (VolumeFn Can)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult) (N measurementResult)
    ((PPFn of) fe_count (InverseBinaryPredicateFn volumeOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 2 1)) ((0 1 0) (0 2 1)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList) Can-Can-TheWord (and (isa :NOUN Cancan-StyleOfDance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "canadian") Dollar-TheWord
 (and (isa :NOUN Dollar-Canada)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "canadian") Falls-TheWord
 (and (isa :NOUN NiagaraFalls-Canada)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "canadian") Province-TheWord
 (and (isa :NOUN CanadianProvince)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canal-TheWord (and (isa :NOUN Canal))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Canary-TheWord (and (isa :NOUN Canary))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cancan-TheWord (and (isa :NOUN Cancan-StyleOfDance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cancer-TheWord (and (isa :NOUN Cancer))
 (frame FN_Medical_conditions)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (A actorPartsInvolved))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cancer-TheWord (and (isa :NOUN Cancer-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cancer") Cell-TheWord (and (isa :NOUN CancerCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Candida-TheWord (and (isa :NOUN Candidiasis))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Candidate-TheWord (and (isa :NOUN CandidateAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "candle") Flame-TheWord (and (isa :NOUN CandleFlame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "candle") Holder-TheWord
 (and (isa :NOUN CandleHolder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Candle-TheWord (and (isa :NOUN Candle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Candour-TheWord (and (isa :NOUN Reticence))
 (frame FN_Candidness)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_manner)
    ((PPFn of) infoTransferred performedBy) ((PPFn about) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 2 0)) ((2 0 0)) ((1 1 1)) ((1 1 0)) ((1 2 0) (2 0 0))
   ((1 0 1) (2 0 0)) ((0 0 0) (1 0 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "candy") Bar-TheWord (and (isa :NOUN CandyBar))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "candy") Cane-TheWord (and (isa :NOUN CandyCane))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Candy-TheWord (and (isa :NOUN Candy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "candy") Thermometer-TheWord
 (and (isa :NOUN CandyThermometer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canidae-TheWord (and (isa :NOUN CanineAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canine-TheWord (and (isa :NOUN CanineAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canine-TheWord (and (isa :NOUN CanineTooth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caning-TheWord (and (isa :NOUN Punishment))
 (frame FN_Corporal_punishment)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation) (AJP eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPingFn for) fe_reason)
    (NP temporallyIntersects))
   (:GAP (CNI doneBy) (DNI objectOfEvaluation fe_reason)
    (INI objectOfEvaluation fe_reason))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0)) ((0 0 0) (1 4 0)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 2 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "canis") Major-TheWord
 (and (isa :NOUN CanisMajor-Constellation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "canis") Minor-TheWord
 (and (isa :NOUN CanisMinor-Constellation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canister-TheWord (and (isa :NOUN Canister))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Canister-TheWord (and (isa :NOUN Canister))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "canister") Vacuum-TheWord
 (and (isa :NOUN CanisterVacuumCleaner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canna-TheWord (and (isa :NOUN Canna)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cannabis-TheWord (and (isa :NOUN Marijuana))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_country_of_origin)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Cannabis-TheWord (and (isa :NOUN Cannabis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "canned") Food-TheWord (and (isa :NOUN CannedFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cannelloni-TheWord (and (isa :NOUN CannelloniNoodle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cannibal-TheWord (and (isa :NOUN Cannibal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cannon-TheWord (and (isa :NOUN Cannon))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canoe-TheWord (and (isa :NOUN Canoe))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canopy-TheWord (and (isa :NOUN CanopyTheShelter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cant-TheWord (and (isa :NOUN Jargon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cant-TheWord (and (isa :NOUN SlangSpeech))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canteen-TheWord (and (isa :NOUN DrinkingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 1 1) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Canvas-TheWord (and (isa :NOUN Canvas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Canyon-TheWord (and (isa :NOUN Canyon))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn of) parts (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 2)) ((0 1 0)) ((0 0 0)) ((0 2 1)) ((0 2 0)))))

(FNNounSemtrans (TheList) Cap-TheWord (and (isa :NOUN Cap))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) ((PPFn with) parts)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse)
    (N fe_descriptor mainConstituent clothingStyle deviceUse)
    ((PPFn of) mainConstituent wearer))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 3)) ((0 2 3)) ((0 3 2)) ((0 2 2)) ((0 3 1)) ((0 2 1))
   ((0 2 0)) ((0 3 3) (2 0 0)) ((0 3 2) (2 0 0)) ((0 1 0) (0 3 1))
   ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 4 1)) ((0 2 0) (0 2 3))
   ((0 2 0) (0 3 2)) ((0 2 0) (0 4 0)) ((0 2 0) (0 2 1)) ((0 2 0) (0 2 0))
   ((0 0 0) (2 0 0)) ((0 2 0) (0 3 1) (0 3 2) (0 4 1)))))

(FNNounSemtrans (TheList) Capability-TheWord (and (isa :NOUN Capability))
 (frame FN_Capability)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn fe_event))
   (:OBLIQUE-OBJECT ((PPFn with) situationConstituents)
    ((PPFn of) objectActedOn) (unknown objectActedOn) ((PPingFn of) fe_event)
    (VPto fe_event) ((PPFn for) fe_event) (AVP fe_event) ((PPFn to) fe_event)
    (VPbrst fe_event) ((PPFn in) situationConstituents fe_event) (NP fe_event)
    ((PPingFn for) fe_event) (N objectActedOn fe_event fe_relevant_feature)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (A objectActedOn fe_event fe_relevant_feature fe_status)
    (AJP fe_degree objectActedOn fe_event fe_relevant_feature fe_status))
   (:GAP (DNI objectActedOn fe_event) (INI objectActedOn fe_event)
    (CNI objectActedOn fe_event) (DEN fe_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 12 2)) ((1 15 3)) ((1 14 2)) ((1 11 0)) ((1 14 1)) ((1 1 0))
   ((1 12 1)) ((1 15 2)) ((1 4 0)) ((1 15 1)) ((3 0 0)) ((1 15 0))
   ((1 5 0) (1 15 4)) ((1 4 0) (1 12 2)) ((1 4 0) (1 14 2)) ((1 11 0) (1 12 2))
   ((1 9 1) (1 15 3)) ((1 12 0) (1 14 3)) ((1 14 2) (3 0 0)) ((0 0 0) (1 13 0))
   ((0 0 0) (1 14 2)) ((1 2 0) (1 10 0)) ((1 4 0) (3 0 0)) ((1 3 0) (3 0 0))
   ((1 9 1) (3 0 0)) ((1 5 0) (3 0 0)) ((1 12 1) (3 0 0)) ((1 15 2) (3 0 0))
   ((1 14 1) (3 0 0)) ((1 1 0) (1 4 0)) ((0 0 1) (1 1 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 8 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 7 0)) ((0 0 0) (1 12 1))
   ((0 0 0) (1 6 0)) ((0 0 0) (1 15 2)) ((1 5 0) (1 12 0)) ((1 12 0) (1 14 1))
   ((1 12 1) (1 15 1)) ((1 12 1) (1 14 0)) ((0 0 0) (0 0 0))
   ((1 12 1) (1 15 0)) ((1 9 0) (3 0 0)) ((1 5 0) (1 12 1) (1 12 1))
   ((1 4 0) (1 15 4) (3 0 0)) ((1 5 0) (1 15 4) (3 0 0))
   ((1 12 1) (1 14 3) (3 0 0)) ((0 0 0) (1 12 1) (1 15 4))
   ((0 0 0) (1 15 2) (1 15 4)) ((0 0 0) (1 4 0) (1 12 2))
   ((0 0 0) (1 4 0) (1 14 2)) ((0 0 0) (1 12 1) (1 15 0))
   ((0 0 0) (1 15 0) (1 15 2)) ((0 0 0) (1 0 0) (1 3 0))
   ((0 0 0) (1 9 0) (1 12 1)))))

(FNNounSemtrans (TheList) Capability-TheWord
 (and (isa :NOUN AgentCapacityQuantity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "capacitance") Unit-TheWord
 (and (isa :NOUN UnitOfCapacitance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capacitor-TheWord (and (isa :NOUN Capacitor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capacity-TheWord (and (isa :NOUN Capability))
 (frame FN_Capability)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) fe_event) (VPto fe_event)
    ((PPingFn for) fe_event) (N fe_event) ((PPFn of) objectActedOn fe_event)
    ((PPFn in) fe_event) (AJP fe_degree fe_relevant_feature)
    (A fe_event fe_relevant_feature))
   (:GAP (DNI objectActedOn) (INI objectActedOn fe_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 2 0)) ((1 0 0)) ((1 7 0)) ((1 1 0)) ((1 4 0) (1 7 1))
   ((1 1 0) (3 0 0)) ((1 2 0) (3 0 0)) ((1 5 0) (3 0 0)) ((1 0 0) (3 0 0))
   ((1 3 0) (3 0 0)) ((1 7 0) (3 0 0)) ((1 1 0) (1 4 0)) ((1 3 0) (1 4 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 4 1)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Cape-TheWord (and (isa :NOUN Cape-Clothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn of) mainConstituent)
    (N fe_descriptor mainConstituent clothingStyle) (NP subRegions)
    ((PPFn with) subRegions) (AJP fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 2)) ((0 4 0)) ((0 2 2)) ((0 1 0)) ((0 5 1)) ((0 5 0))
   ((0 2 0) (2 0 0)) ((0 5 0) (2 0 0)) ((0 2 1) (0 5 0)) ((0 5 0) (0 5 1))
   ((0 0 0) (0 5 0) (0 5 0)) ((0 3 0) (0 4 0) (0 5 0) (0 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Cape-TheWord (and (isa :NOUN Cape-Topographical))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caper-TheWord (and (isa :NOUN Caper-Plant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "capillary") Blood-TheWord
 (and (isa :NOUN Blood)
      (relationInstanceExists objectFoundInLocation :NOUN Capillary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capillary-TheWord (and (isa :NOUN Capillary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capital-TheWord (and (isa :NOUN Capital))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capital-TheWord (and (isa :NOUN UpperCaseLetter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capital-TheWord (and (isa :NOUN Currency))
 (frame FN_Money) (bindingTemplate (TheList (:GAP (DEN moneyTransferred))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capital-TheWord (and (isa :NOUN CapitalCityOfRegion))
 (frame FN_Relational_political_locales)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT (A fe_container_possessor)
    ((PPFn in) fe_container_possessor) (VPed fe_descriptor)
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    (N fe_descriptor fe_population) (AJP fe_descriptor fe_relative_location))
   (:GAP (DNI fe_container_possessor) (DEN eventLocale))
   (:GEN (Poss fe_container_possessor))
   (:APPOSITIVE
    (NP fe_container_possessor (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 4 1)) ((4 0 1)) ((1 3 0)) ((4 0 0)) ((1 0 0)) ((1 5 0))
   ((0 0 0) (1 5 0)) ((3 0 0) (4 0 1)) ((1 0 0) (1 3 1)) ((1 0 0) (4 0 1))
   ((0 0 0) (1 3 0)) ((1 3 0) (1 4 0)) ((1 3 0) (1 5 0)) ((1 1 0) (1 5 0))
   ((1 0 0) (1 2 0) (1 3 1)))))

(FNNounSemtrans (TheList) Capitalist-TheWord
 (and (isa :NOUN (BelieverFn Capitalism))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capricorn-TheWord (and (isa :NOUN Capricorn-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capsicum-TheWord (and (isa :NOUN PepperPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capsule-TheWord (and (isa :NOUN Capsule-Ingestible))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capsule-TheWord (and (isa :NOUN CapsuleContainer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Captain-TheWord (and (isa :NOUN Captain-Title))
 (frame FN_Appellations)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_context) ((PPFn of) fe_context) (NP fe_context)
    ((PPFn in) fe_context) (AJP activeIngredientsOfType)
    (A fe_context activeIngredientsOfType))
   (:GAP (DNI (InverseBinaryPredicateFn nameString)) (DEN fe_title))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 5 1) (2 0 0)) ((0 1 0) (0 4 0)) ((0 3 0) (2 0 0))
   ((0 2 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 5 0) (2 0 0))
   ((0 1 0) (0 4 0) (2 0 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Captain-TheWord (and (isa :NOUN Captain-Rank))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn in) fe_governed) ((PPFn for) duration fe_governed)
    ((PPFn of) fe_governed) (NP leadersOfMovement)
    (AJP duration activeIngredientsOfType))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 0 0)) ((1 1 1)) ((0 0 0)) ((1 3 0) (1 4 1))
   ((0 0 1) (1 2 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Captivity-TheWord (and (isa :NOUN Imprisoning))
 (frame FN_Being_in_captivity) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capture-TheWord (and (isa :NOUN CapturingSomething))
 (frame FN_Taking_captive)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_captive))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn of) fe_captive)
    ((PPFn near) eventOccursAt) ((PPFn at) eventOccursAt)
    (AJP temporallyIntersects) (N temporallyIntersects)
    ((PPFn ago) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (DNI fe_captive)) (:GEN (Poss fe_captive))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 7 1) (3 0 0))
   ((1 1 0) (1 5 0)) ((1 1 0) (1 4 0)) ((1 1 0) (1 7 0)) ((0 0 0) (1 3 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0)) ((1 6 0) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Capuccino-TheWord (and (isa :NOUN Cappuccino))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Capybara-TheWord (and (isa :NOUN Capybara))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "air") Conditioner-TheWord
 (and (isa :NOUN AutoAirConditioner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "air") Filter-TheWord
 (and (isa :NOUN AutomotiveAirFilter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "air") Freshener-TheWord
 (and (isa :NOUN CarAirFreshener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Alarm-TheWord (and (isa :NOUN CarAlarm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "am") Radio-TheWord
 (and (isa :NOUN AutoAMRadio)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "am/fm") Radio-TheWord
 (and (isa :NOUN AutoAM-FMRadio)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Battery-TheWord
 (and (isa :NOUN AutomobileBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "body") Part-TheWord
 (and (isa :NOUN AutoBodyPart)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Bomb-TheWord
 (and (isa :NOUN CarBomb-VehicleDelivered))
 (frame FN_Improvised_explosive_device)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn at) objectFoundInLocation)
    ((PPFn in) objectFoundInLocation) ((PPFn near) objectFoundInLocation)
    ((PPFn with) mainConstituent)
    (N objectFoundInLocation activeIngredientsOfType))
   (:GAP (DEN fe_bomb))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 5 0))
   ((0 0 0)))))

(FNNounSemtrans (TheList "car") Bomb-TheWord
 (and (isa :NOUN CarBomb-VehicleDelivered)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Bonnet-TheWord
 (and (isa :NOUN AutomobileBonnet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "cassette") Player-TheWord
 (and (isa :NOUN AutoCassettePlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "cd") Changer-TheWord
 (and (isa :NOUN AutomobileCDChanger)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "cd") Player-TheWord
 (and (isa :NOUN AutomobileCDPlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "combination") Lock-TheWord
 (and (isa :NOUN AutoCombinationLock)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Crash-TheWord (and (isa :NOUN CarAccident))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "detailing") Supply-TheWord
 (and (isa :NOUN AutoDetailingSupplies)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Door-TheWord (and (isa :NOUN AutoSideDoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Engine-TheWord (and (isa :NOUN AutoEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Fuse-TheWord (and (isa :NOUN AutoFuse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Grille-TheWord
 (and (isa :NOUN AutomobileGrille)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Heater-TheWord
 (and (isa :NOUN AutomobileHeater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Interior-TheWord (and (isa :NOUN CarInterior))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "light") Bulb-TheWord
 (and (isa :NOUN AutomotiveLightBulb)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Light-TheWord (and (isa :NOUN AutomotiveLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Manufacturer-TheWord
 (and (isa :NOUN AutomobileManufacturingOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Mirror-TheWord
 (and (isa :NOUN AutomotiveMirror)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Radio-TheWord (and (isa :NOUN AutomobileRadio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "seat") Cover-TheWord
 (and (isa :NOUN CarSeatCovers)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "seat") Heater-TheWord
 (and (isa :NOUN AutoSeatHeater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Seat-TheWord (and (isa :NOUN AutomobileSeat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "seat" "with" "lumbar") Support-TheWord
 (and (isa :NOUN CarSeat-WithLumbarSupport)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Spring-TheWord
 (and (isa :NOUN AutomobileSpring)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car" "stereo") Speaker-TheWord
 (and (isa :NOUN AutomobileSpeaker)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Car-TheWord (and (isa :NOUN ElevatorCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Car-TheWord (and (isa :NOUN TrainCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Car-TheWord (and (isa :NOUN Automobile))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor)
    (N fe_descriptor transporter))
   (:GAP (DEN transporter)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0))
   ((0 1 0) (0 2 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "car") Tire-TheWord (and (isa :NOUN AutomobileTire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Tray-TheWord (and (isa :NOUN CarTray))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Wash-TheWord (and (isa :NOUN CarWashShop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Wax-TheWord (and (isa :NOUN CarWax))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Wheel-TheWord (and (isa :NOUN AutomobileWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "car") Window-TheWord
 (and (isa :NOUN AutomobileWindow)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carafe-TheWord (and (isa :NOUN Carafe))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) containedObject) (N deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Carafe-TheWord (and (isa :NOUN Carafe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caramel-TheWord (and (isa :NOUN Caramel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carapace-TheWord
 (and (isa :NOUN Shell-AnimalBodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caravan-TheWord (and (isa :NOUN Caravan))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caravanserai-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carbohydrate-TheWord
 (and (isa :NOUN CarbohydrateStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carbonic") Acid-TheWord
 (and (isa :NOUN CarbonicAcid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carbon") Atom-TheWord
 (and (isa :NOUN (AtomFn Carbon))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carbon") Dioxide-TheWord
 (and (isa :NOUN CarbonDioxide)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carbon-TheWord (and (isa :NOUN Carbon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carbonation-TheWord
 (and (isa :NOUN (SolutionFn (LiquidFn Water) (GaseousFn CarbonDioxide))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carburetor") Cleaner-TheWord
 (and (isa :NOUN CarburetorCleaner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carburetor-TheWord (and (isa :NOUN Carburetor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carcass-TheWord
 (and (isa :NOUN (DeadPhysicalRemainsFn Animal))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carcinoma-TheWord (and (isa :NOUN MalignantTumor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "card") File-TheWord (and (isa :NOUN CardFile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "card") Game-TheWord (and (isa :NOUN CardGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "card") Table-TheWord (and (isa :NOUN CardTable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Card-TheWord (and (isa :NOUN Card)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Card-TheWord (and (isa :NOUN PlayingCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardboard") Box-TheWord
 (and (isa :NOUN CardboardBox)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardboard") Canister-TheWord
 (and (isa :NOUN CardboardCanister)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardboard") Sheet-TheWord
 (and (isa :NOUN CardboardSheet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cardboard-TheWord (and (isa :NOUN Cardboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardboard" "with" "plastic") Bubble-TheWord
 (and (isa :NOUN CardboardWithPlasticBubble)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardiac") Arrest-TheWord
 (and (isa :NOUN CardiacArrest)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cardigan-TheWord (and (isa :NOUN Cardigan))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor)
    (AJP fe_descriptor mainConstituent) ((PPFn in) mainConstituent)
    (AVP clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 3)) ((0 4 2)) ((0 4 1)) ((0 4 0)) ((0 1 0))
   ((0 1 0) (2 0 0)) ((0 1 0) (0 4 2)) ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0))
   ((0 1 0) (0 4 1)) ((0 1 0) (0 1 0)) ((0 1 0) (0 4 1) (2 0 0))
   ((0 1 0) (0 1 1) (2 0 0)) ((0 1 0) (0 1 0) (2 0 0))
   ((0 1 0) (0 1 0) (0 4 1)) ((0 1 0) (0 1 0) (0 1 1))
   ((0 0 0) (0 1 0) (0 1 1) (0 4 2)))))

(FNNounSemtrans (TheList) Cardigan-TheWord
 (and (isa :NOUN WelshCorgi-Cardigan)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardinal" "compass") Point-TheWord
 (and (isa :NOUN CardinalCompassPoint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardinal") Number-TheWord
 (and (isa :NOUN Cardinal-Mathematical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cardinal-TheWord (and (isa :NOUN Cardinal-Bird))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cardiologist-TheWord (and (isa :NOUN Cardiologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cardiology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Cardiologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cardiovascular") Implant-TheWord
 (and (isa :NOUN CardiovascularImplant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Care-TheWord (and (isa :NOUN Care-WorkingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Care-TheWord (and (isa :NOUN Caregiving))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Care-TheWord (and (isa :NOUN MaintainingSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Care-TheWord (and (isa :NOUN TakingCareOfSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Career-TheWord
 (and (isa :NOUN PersonTypeByOccupation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carelessness-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) objectOfCritique)
    ((PPingFn in) objectOfCritique) ((PPingFn of) objectOfCritique)
    (AJP fe_degree) ((PPFn with) fe_practice) ((PPFn by) affectedAgent)
    ((PPFn of) objectOfCritique affectedAgent) ((PPFn on) affectedAgent))
   (:GAP (DNI objectOfCritique) (INI affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 7 0)) ((0 6 1)) ((0 5 0)) ((0 4 0)) ((0 2 0)) ((0 6 0))
   ((0 0 0)) ((0 4 0) (2 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Caress-TheWord (and (isa :NOUN Caressing))
 (frame FN_Manipulation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cargo") Bay-TheWord
 (and (isa :NOUN AirplaneCargoBay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cargo") Compartment-TheWord
 (and (isa :NOUN CargoCompartment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cargo") Helicopter-TheWord
 (and (isa :NOUN CargoHelicopter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cargo") Ship-TheWord (and (isa :NOUN CargoShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cargo-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance transportees Conveying-Generic :NOUN))
 (frame FN_Store) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carib-TheWord (and (isa :NOUN EthnicGroupOfCaribs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caribou-TheWord (and (isa :NOUN Reindeer))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carjacking-TheWord (and (isa :NOUN HostileSeizure))
 (frame FN_Piracy)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) ((PPFn outside) eventOccursAt)
    (NP temporallyIntersects) (N victim))
   (:GAP (DEN fe_event) (INI perpetrator))))
 (groupPatterns (TheSet ((0 3 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Carload-TheWord
 (and (isa :NOUN (VolumeFn Automobile))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Carnage-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP causes-Underspecified) (A fe_degree)
    ((PPFn with) instrument-Generic) ((PPFn in) eventOccursAt)
    ((PPFn on) eventOccursAt) (N victim) (AJP victim) ((PPFn amongst) victim)
    ((PPFn of) victim))
   (:GAP (2nd killers))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 7 0)) ((0 6 0)) ((0 4 0)) ((0 3 0)) ((0 5 0)) ((0 2 0))
   ((0 0 0)) ((0 1 0) (0 5 0)))))

(FNNounSemtrans (TheList) Carnation-TheWord (and (isa :NOUN Carnation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carnival-TheWord (and (isa :NOUN Carnival))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carnivore-TheWord (and (isa :NOUN Carnivore))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carob-TheWord (and (isa :NOUN CarobTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carolingian-TheWord
 (and (isa :NOUN Carolingian-Monarch-HeadOfState)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carousel-TheWord (and (isa :NOUN Carousel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carp-TheWord (and (isa :NOUN Carp)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carpel-TheWord (and (isa :NOUN Carpel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carpenter-TheWord (and (isa :NOUN Carpenter))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carpentry") Tool-TheWord
 (and (isa :NOUN CarpentryTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carpet-TheWord (and (isa :NOUN Carpet))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carriage-TheWord (and (isa :NOUN HorseCarriage))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carrier-TheWord
 (and (isa :NOUN TransportationCompany-Provider)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carrot") Juice-TheWord
 (and (isa :NOUN (JuiceFn (RootFn CarrotPlant)))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carrot-TheWord (and (isa :NOUN Carrot-Foodstuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Carrot-TheWord (and (isa :NOUN (RootFn CarrotPlant)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carrot-TheWord (and (isa :NOUN CarrotPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carry") On-TheWord (and (isa :NOUN CarryOnLuggage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carryall-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N deviceUse)) (:GAP (DEN containerUsed))
   (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "carrying") Case-TheWord
 (and (isa :NOUN CarryingCase)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cart-TheWord (and (isa :NOUN Wagon))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn with) containedObject parts) ((PPFn in) fe_relative_location)
    (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 3 1)) ((0 2 0)) ((2 0 0)) ((0 4 0)) ((0 1 0))
   ((0 0 0)) ((0 3 1) (0 4 2)) ((0 1 1) (0 3 1)) ((0 1 1) (0 3 0)))))

(FNNounSemtrans (TheList) Cart-TheWord (and (isa :NOUN Wagon))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cartel-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (INI hasMembers) (DEN fe_organization))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cartilage-TheWord (and (isa :NOUN Cartilage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carton-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP containedObject) ((PPFn of) containedObject)
    (N containedObject mainConstituent) ((PPFn on) fe_relative_location))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 1 0) (0 3 0)) ((0 2 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList "cartoon") Character-TheWord
 (and (isa :NOUN CartoonCharacter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cartoon-TheWord
 (and (isa :NOUN Animation-MovingImage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cartoon-TheWord (and (isa :NOUN Cartoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cartoonist-TheWord (and (isa :NOUN Cartoonist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cartridge") Clip-TheWord
 (and (isa :NOUN MagazineForBullets)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cartridge") Holder-TheWord
 (and (isa :NOUN MagazineForBullets)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cartridge-TheWord (and (isa :NOUN Cartridge))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) containedObject) ((PPFn of) containedObject)
    ((PPFn at) fe_relative_location) (AJP activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed) (DNI containedObject)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 3 0)) ((0 2 0)) ((0 4 0)) ((2 0 0)) ((0 0 0))
   ((0 3 0) (0 4 2)) ((0 3 0) (0 3 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Cartridge-TheWord
 (and (isa :NOUN VideoGameCartridge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "carving") Knife-TheWord
 (and (isa :NOUN CarvingKnife)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Carwash-TheWord (and (isa :NOUN CarWashShop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cascade-TheWord (and (isa :NOUN Waterfall))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPed fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cascade-TheWord (and (isa :NOUN System))
 (frame FN_System)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_component_entities) (N topicOfIndividual))
   (:GAP (DEN fe_complex) (INI fe_component_entities))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "case") Law-TheWord (and (isa :NOUN CommonLawSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "case") Product-TheWord (and (isa :NOUN CaseProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Case-TheWord (and (isa :NOUN CaseProduct))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) parts)
    ((PPFn on) fe_relative_location)
    (AJP mainConstituent activeIngredientsOfType deviceUse)
    (N mainConstituent activeIngredientsOfType deviceUse) (VPing deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 2)) ((0 3 2)) ((2 0 0)) ((0 4 0)) ((0 0 0))
   ((0 2 0) (0 4 2)) ((0 5 0) (2 0 0)) ((0 4 2) (2 0 0)) ((0 4 1) (2 0 0))
   ((0 3 0) (0 3 2)) ((0 1 0) (0 4 0)) ((0 3 1) (0 4 1) (2 0 0)))))

(FNNounSemtrans (TheList) Case-TheWord (and (isa :NOUN CourtCase))
 (frame FN_Criminal_investigation)
 (bindingTemplate (TheList (:GAP (DNI objectOfInvestigation))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Case-TheWord (and (isa :NOUN Individual))
 (frame FN_Instance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_instance_prop)
    ((PPFn of) fe_instance fe_instance_prop activeIngredientsOfType)
    (A activeIngredientsOfType))
   (:GAP (2nd fe_instance) (DEN fe_instance) (DNI activeIngredientsOfType)
    (CNI activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 2)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 0) (0 1 2)))))

(FNNounSemtrans (TheList) Case-TheWord (and (isa :NOUN CaseProduct))
 (frame FN_Measure_volume) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Case-TheWord (and (isa :NOUN Case))
 (frame FN_Reasoning)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPingFn for) resultantThought)
    ((PPFn against) resultantThought) (Sfin resultantThought fe_support))
   (:GAP (CNI performedBy) (DNI resultantThought)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 0 0)) ((0 0 0) (1 0 0)) ((1 1 0) (1 2 1) (3 0 0)))))

(FNNounSemtrans (TheList) Case-TheWord (and (isa :NOUN CourtCase))
 (frame FN_Trial)
 (bindingTemplate
  (TheList (:SUBJECT (NP defendants providerOfService fe_prosecution))
   (:OBLIQUE-OBJECT ((PPFn in) caseTriedIn) (N fe_charges defendants)
    ((PPFn against) defendants) ((PPFn of) fe_charges defendants)
    (A defendants) (NP defendants temporallyIntersects)
    ((PPFn at) temporallyIntersects))
   (:GAP (DEN fe_case) (CNI justiceOfCourt))
   (:GEN (Poss fe_defense justiceOfCourt))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 5 1)) ((0 0 2)) ((1 6 0)) ((3 0 1)) ((3 0 0)) ((1 3 1))
   ((1 2 0)) ((0 0 0)) ((1 5 0)) ((1 1 1)) ((1 3 0)) ((1 1 0))
   ((0 0 1) (1 3 1)) ((1 0 0) (1 5 1)))))

(FNNounSemtrans (TheList "cash") Machine-TheWord
 (and (isa :NOUN AutomaticTellerMachine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cash") Register-TheWord
 (and (isa :NOUN CashRegister)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cash-TheWord (and (isa :NOUN Currency))
 (frame FN_Money)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP ownerOfProprietaryThing))
   (:GAP (DEN moneyTransferred))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cashew-TheWord (and (isa :NOUN Cashew-TheSeed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cashew-TheWord (and (isa :NOUN CashewTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cashier-TheWord (and (isa :NOUN Cashier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Casing-TheWord
 (and (isa :NOUN PackagingContainerProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Casinghead-TheWord (and (isa :NOUN Casinghead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Casino-TheWord (and (isa :NOUN Casino-Organization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cask-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    ((PPFn on) fe_relative_location) (N mainConstituent deviceUse)
    ((PPFn for) deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 0 0)) ((0 3 1) (2 0 0))
   ((0 1 0) (0 3 1)))))

(FNNounSemtrans (TheList) Casket-TheWord (and (isa :NOUN Coffin))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent) (N mainConstituent)
    ((PPFn of) containedObject mainConstituent))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList) Cassava-TheWord (and (isa :NOUN CassavaPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Casserole-TheWord (and (isa :NOUN CasseroleDish))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (NP parts)
    (AJP activeIngredientsOfType) (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 3 1)) ((0 2 0)) ((0 1 0)) ((0 3 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Casserole-TheWord (and (isa :NOUN CasseroleDish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cassette") Player-TheWord
 (and (isa :NOUN AudioTapePlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cassette") Recorder-TheWord
 (and (isa :NOUN CassetteDeck)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cassette-TheWord
 (and (isa :NOUN MagneticTapeCassette)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cast-TheWord (and (isa :NOUN CastForBrokenBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Castigation-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn by) communicatorOfInfo))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "casting") Mold-TheWord
 (and (isa :NOUN ShellForCasting)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Castle-TheWord (and (isa :NOUN Castle))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "castor") Oil-TheWord (and (isa :NOUN CastorOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Castration-TheWord
 (and (isa :NOUN (RemovalFn Testicle))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Casualty-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_degree) (AJP objectActedOn))
   (:GAP (DEN objectActedOn) (2nd fe_undesirable_event)
    (DNI fe_undesirable_event) (INI fe_undesirable_event))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Casualty-TheWord
 (and (isa :NOUN Event) (relationInstanceExists affectedAgent :NOUN Person))
 (frame FN_Undergoing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cat" "5" "network") Cable-TheWord
 (and (isa :NOUN Category5ComputerCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cat" "6" "network") Cable-TheWord
 (and (isa :NOUN Category6ComputerCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cat") Food-TheWord (and (isa :NOUN CatFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cat") Litter-TheWord (and (isa :NOUN CatLitter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cat-TheWord (and (isa :NOUN DomesticCat))
 (frame FN_Animals) (bindingTemplate (TheList (:GAP (DEN fe_animal))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cat-TheWord (and (isa :NOUN Cat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cat") Toy-TheWord (and (isa :NOUN CatToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cat" "^s") Claw-TheWord
 (and (isa :NOUN CatsClaw-Product)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catabolism-TheWord (and (isa :NOUN Catabolism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cataclysm-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_undesirable_event))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_manner) (NP temporallyIntersects)
    ((PPFn of) temporallyIntersects fe_undesirable_event))
   (:GAP (INI objectActedOn) (DEN fe_undesirable_event))))
 (groupPatterns
  (TheSet ((1 2 1)) ((0 0 0)) ((1 2 0)) ((1 0 1)) ((1 1 0) (1 2 1))
   ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Catacomb-TheWord (and (isa :NOUN BurialCave))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catalan-TheWord
 (and (isa :NOUN EthnicGroupOfCatalans)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catalase-TheWord (and (isa :NOUN Catalase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "catalytic") Converter-TheWord
 (and (isa :NOUN CatalyticConverter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "catalytic") Cracker-TheWord
 (and (isa :NOUN CatalyticCracker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catapult-TheWord (and (isa :NOUN Catapult))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cataract-TheWord (and (isa :NOUN Cataract-Ailment))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cataract-TheWord (and (isa :NOUN Waterfall))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catastrophe-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_undesirable_event))
   (:OBLIQUE-OBJECT (AJP objectActedOn) ((PPFn on) objectActedOn)
    ((PPFn in) eventOccursAt temporallyIntersects)
    (Sinterrog fe_undesirable_event)
    ((PPFn of) fe_degree eventOccursAt temporallyIntersects
     fe_undesirable_event))
   (:GAP (DNI objectActedOn) (DEN fe_undesirable_event))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 4 3)) ((0 0 0)) ((1 0 0)) ((3 0 0)) ((1 4 2)) ((1 2 0))
   ((1 3 0) (1 4 2)) ((1 2 0) (1 2 1)) ((1 2 1) (1 4 1)) ((1 0 0) (1 0 0))
   ((1 0 0) (1 1 0)) ((1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Catch-TheWord (and (isa :NOUN CatchingWithHands))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catcher-TheWord (and (isa :NOUN BaseballCatcher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "catchment") Area-TheWord
 (and (isa :NOUN DrainageBasin)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catecholamine-TheWord (and (isa :NOUN Catecholamine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Categorization-TheWord (and (isa :NOUN Categorizing))
 (frame FN_Categorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn as) fe_category) ((PPFn into) fe_category)
    (AJP fe_criteria) ((PPFn by) fe_category fe_criteria)
    ((PPFn of) objectOfStateChange) (N fe_criteria objectOfStateChange))
   (:GAP (DNI objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 1)) ((0 3 1)) ((0 5 0)) ((0 2 0)) ((2 0 0))
   ((0 3 1) (0 4 0)) ((0 1 0) (0 4 0)) ((0 3 0) (0 4 0)) ((0 0 0) (2 0 1)))))

(FNNounSemtrans (TheList) Categorization-TheWord
 (and (isa :NOUN IdentifyingObjectAsType)) (frame FN_Categorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn as) fe_category) ((PPFn into) fe_category)
    (AJP fe_criteria) ((PPFn by) fe_category fe_criteria)
    ((PPFn of) objectOfStateChange) (N fe_criteria objectOfStateChange))
   (:GAP (DNI objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 1)) ((0 3 1)) ((0 5 0)) ((0 2 0)) ((2 0 0))
   ((0 3 1) (0 4 0)) ((0 1 0) (0 4 0)) ((0 3 0) (0 4 0)) ((0 0 0) (2 0 1)))))

(FNNounSemtrans (TheList) Categorization-TheWord
 (and (isa :NOUN ImprovingAClassificationSystem)) (frame FN_Categorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn as) fe_category) ((PPFn into) fe_category)
    (AJP fe_criteria) ((PPFn by) fe_category fe_criteria)
    ((PPFn of) objectOfStateChange) (N fe_criteria objectOfStateChange))
   (:GAP (DNI objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 1)) ((0 3 1)) ((0 5 0)) ((0 2 0)) ((2 0 0))
   ((0 3 1) (0 4 0)) ((0 1 0) (0 4 0)) ((0 3 0) (0 4 0)) ((0 0 0) (2 0 1)))))

(FNNounSemtrans (TheList) Caterer-TheWord (and (isa :NOUN Caterer-Person))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caterpillar-TheWord (and (isa :NOUN Caterpillar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catfish-TheWord (and (isa :NOUN Catfish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cathedral-TheWord (and (isa :NOUN Cathedral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catheter-TheWord (and (isa :NOUN Catheter))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cathode" "ray" "tube") Display-TheWord
 (and (isa :NOUN CRTDisplay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cathode" "ray") Tube-TheWord
 (and (isa :NOUN CathodeRayTube)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catholic-TheWord (and (isa :NOUN CatholicPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catholicism-TheWord (and (isa :NOUN Catholicism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cation-TheWord (and (isa :NOUN Cation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Catnap-TheWord (and (isa :NOUN TakingANap))
 (frame FN_Sleep)
 (bindingTemplate (TheList (:SUBJECT (NP doneBy)) (:GAP (CNI doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Catsup-TheWord (and (isa :NOUN Ketchup))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cattail-TheWord (and (isa :NOUN Cattail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cattle-TheWord (and (isa :NOUN Cattle-Domestic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cauldron-TheWord (and (isa :NOUN Cauldron))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    (N containedObject mainConstituent) (AJP mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 2 0)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 2 1))
   ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Caulk-TheWord (and (isa :NOUN Caulk)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cause-TheWord (and (isa :NOUN Event))
 (frame FN_Causation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy causes-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn of) fe_effect) ((PPingFn of) fe_effect)
    ((PPFn in) eventOccursAt))
   (:GAP (DEN causes-Underspecified) (DNI fe_effect)) (:GEN (Poss fe_effect))))
 (groupPatterns
  (TheSet ((0 0 1)) ((3 0 0)) ((1 0 0)) ((1 0 0) (1 2 0)) ((0 0 1) (1 1 0))
   ((0 0 1) (1 0 0)) ((0 0 0) (1 0 0)) ((0 0 1) (1 0 0) (1 2 0))
   ((0 0 1) (0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Causeway-TheWord (and (isa :NOUN Causeway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cavalry-TheWord
 (and (isa :NOUN CavalryUnit-MilitarySpecialty)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cave-TheWord (and (isa :NOUN Cave))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn out) parts) (AJP fe_container_possessor)
    ((PPFn of) parts fe_container_possessor
     (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location)
    (N parts (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn beneath) fe_relative_location)
    ((PPFn on) fe_relative_location) ((PPFn outside) fe_relative_location)
    ((PPFn under) fe_relative_location))
   (:GAP (DEN eventLocale fe_relative_location))
   (:GEN (Poss fe_container_possessor (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 8 0)) ((0 7 0)) ((0 3 0)) ((0 6 0)) ((0 5 0)) ((0 4 2))
   ((2 0 1)) ((0 2 2)) ((0 4 1)) ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 0 0))
   ((0 2 0)) ((0 4 0)) ((0 3 0) (0 4 1)) ((0 1 0) (0 2 2)) ((0 2 2) (0 4 0))
   ((0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList) Cavern-TheWord (and (isa :NOUN Cave))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cavernous") Sinus-TheWord
 (and (isa :NOUN CavernousSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Caw-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn EmittingSound doneBy Crow))))
 (frame FN_Sounds)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) emitter))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cay-TheWord (and (isa :NOUN (SmallFn Island)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Cayenne-TheWord (and (isa :NOUN Cayenne-TheProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cb") Radio-TheWord (and (isa :NOUN CitizenBandRadio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ccd") Camera-TheWord (and (isa :NOUN CCDCamera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cd-Rom-TheWord (and (isa :NOUN CD-ROM))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cd-TheWord (and (isa :NOUN CompactDisc-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cdr-TheWord (and (isa :NOUN CD-R)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cdrom-TheWord (and (isa :NOUN CD-ROM))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cdrw-TheWord (and (isa :NOUN CD-RW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cecum-TheWord (and (isa :NOUN Cecum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cedar") Chest-TheWord (and (isa :NOUN CedarChest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cedar-TheWord (and (isa :NOUN (WoodFn CedarTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cedar-TheWord (and (isa :NOUN CedarTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cedi-TheWord (and (isa :NOUN Cedi-Ghana))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cedilla-TheWord (and (isa :NOUN Cedilla-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ceiling") Light-TheWord
 (and (isa :NOUN CeilingLight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ceiling-TheWord (and (isa :NOUN CeilingOfARoom))
 (frame FN_Architectural_part)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Celebration-TheWord (and (isa :NOUN Celebration))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT (A frequencyOfEvent) ((PPFn of) fe_occasion)
    ((PPFn for) beneficiary fe_occasion) ((PPFn at) eventOccursAt)
    (NP eventOccursAt) ((PPFn as) eventOccursAt)
    (N host fe_occasion eventOccursAt) ((PPFn on) temporallyIntersects)
    (AJP duration clothingStyle temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (2nd beneficiary) (DEN fe_social_event))
   (:GEN (Poss beneficiary host temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 1 0)) ((1 2 1)) ((1 6 1)) ((0 0 1)) ((1 8 0))
   ((1 7 0) (1 8 1)) ((1 6 2) (1 7 0)) ((1 8 1) (1 9 0)) ((1 1 0) (3 0 2))
   ((1 6 1) (1 7 0)) ((1 6 1) (1 9 1)) ((1 6 1) (1 8 2)) ((1 6 1) (1 9 0))
   ((1 3 0) (1 6 1)) ((1 5 0) (1 6 1)) ((1 1 0) (1 6 1)) ((1 3 0) (1 6 0))
   ((1 2 1) (3 0 1)) ((1 0 0) (1 6 1)) ((1 1 0) (1 8 0)) ((1 6 1) (3 0 0))
   ((1 2 0) (1 6 1)) ((1 1 0) (1 9 0)) ((0 0 0) (1 1 0))
   ((1 3 0) (1 6 1) (1 7 0)) ((1 3 0) (1 4 0) (1 6 1))
   ((0 0 0) (1 6 1) (3 0 0)) ((0 0 0) (0 0 0) (1 6 1) (1 9 0)))))

(FNNounSemtrans (TheList) Celebrity-TheWord (and (isa :NOUN FamousHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Celery-TheWord
 (and (isa :NOUN (ShootSystemFn CeleryPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Celery-TheWord (and (isa :NOUN CeleryPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "celestial") Body-TheWord
 (and (isa :NOUN AstronomicalObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "celestial") Equator-TheWord
 (and (isa :NOUN Equator-Celestial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "celestial") Sphere-TheWord
 (and (isa :NOUN TheCelestialSphere)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "celiac") Trunk-TheWord (and (isa :NOUN CeliacTrunk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cell") Death-TheWord (and (isa :NOUN CellDeath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cell" "phone") Case-TheWord
 (and (isa :NOUN CellPhoneCase)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cell" "phone" "data") Cable-TheWord
 (and (isa :NOUN CellPhoneDataCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cell-TheWord (and (isa :NOUN PrisonCell))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cell-TheWord (and (isa :NOUN Cell)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cell-TheWord (and (isa :NOUN PrisonCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cellar-TheWord (and (isa :NOUN BasementRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cello-TheWord (and (isa :NOUN Cello)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cello-TheWord (and (isa :NOUN Cello))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cellphone-TheWord (and (isa :NOUN CellularTelephone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cellular") Phone-TheWord
 (and (isa :NOUN CellularTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cellular" "slime") Mold-TheWord
 (and (isa :NOUN CellularSlimeMold)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cellular") Telephone-TheWord
 (and (isa :NOUN CellularTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cellulose-TheWord (and (isa :NOUN Cellulose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Celt-TheWord (and (isa :NOUN EthnicGroupOfCelts))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cement-TheWord (and (isa :NOUN (SolidFn Concrete)))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cement") Truck-TheWord (and (isa :NOUN CementTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cemetery-TheWord (and (isa :NOUN Graveyard))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale) (INI locationUse))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cenozoic-TheWord
 (and (isa :NOUN Cenozoic-GeologicalEra)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Censer-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Censure-TheWord
 (and (isa :NOUN Censuring-CommunicationAct)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation fe_reason))
   (:OBLIQUE-OBJECT ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn on) objectOfEvaluation)
    (AVP fe_manner) (AJP communicatorOfInfo fe_manner)
    ((PPingFn for) fe_reason) ((PPFn for) objectOfEvaluation fe_reason)
    (Sfin fe_reason) ((PPFn of) objectOfEvaluation fe_reason)
    ((PPFn over) fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI objectOfEvaluation fe_reason)
    (INI fe_reason))
   (:GEN (Poss communicatorOfInfo objectOfEvaluation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 8 1)) ((1 8 0)) ((1 6 0)) ((1 6 1)) ((0 0 0))
   ((1 4 0) (1 5 0)) ((1 0 0) (1 3 0)) ((1 0 0) (3 0 1)) ((1 2 0) (1 5 0))
   ((0 0 0) (1 7 0)) ((1 4 0) (1 8 0)) ((0 0 1) (1 4 1) (3 0 0))
   ((0 0 0) (1 1 0) (1 9 0)))))

(FNNounSemtrans (TheList) Center-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn for) locationUse)
    (N fe_container_possessor fe_descriptor locationUse)
    (NP fe_container_possessor locationUse) (AJP fe_descriptor locationUse)
    (VPing locationUse)
    (A fe_container_possessor fe_descriptor
     (InverseBinaryPredicateFn nameString) locationUse)
    ((PPFn of) fe_container_possessor fe_formational_cause fe_relative_location
     locationUse))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString))
    (INI locationUse) (DNI locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 9 3)) ((0 3 0)) ((0 6 1)) ((0 8 3)) ((0 9 2)) ((0 4 2)) ((0 8 2))
   ((0 9 1)) ((0 4 1)) ((0 9 0)) ((0 2 0) (0 4 2)) ((0 1 0) (0 4 2))
   ((0 0 0) (0 4 2)) ((0 6 0) (0 7 0)) ((0 4 2) (0 6 0)) ((0 3 0) (0 8 1))
   ((0 4 2) (0 8 1)) ((0 6 1) (2 0 0)) ((0 5 0) (0 5 1)) ((0 4 0) (0 4 2))
   ((0 3 0) (0 8 0)) ((0 4 0) (0 8 1)))))

(FNNounSemtrans (TheList) Center-TheWord
 (and (isa :NOUN CenterOfGeographicalRegion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Center-TheWord
 (and (isa :NOUN FootballCenterLineman)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Center-TheWord (and (isa :NOUN Centered-Element))
 (frame FN_Part_inner_outer)
 (bindingTemplate
  (TheList (:SUBJECT (NP parts) (Sfin parts))
   (:OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    (NP (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 2 0)) ((2 1 0)) ((2 0 0)) ((0 1 0) (2 2 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Centerboard-TheWord (and (isa :NOUN Centerboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Centimeter-TheWord (and (isa :NOUN Centimeter))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count (InverseBinaryPredicateFn lengthOfObject)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn lengthOfObject))
    (NP (InverseBinaryPredicateFn lengthOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 0 0)) ((0 0 1)) ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Centimeter-TheWord (and (isa :NOUN (Centi Meter)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "central" "air") Conditioner-TheWord
 (and (isa :NOUN CentralAirConditioner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "central" "american") Country-TheWord
 (and (isa :NOUN CentralAmericanCountry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "central") American-TheWord
 (and (isa :NOUN CentralAmericanPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "central" "nervous") System-TheWord
 (and (isa :NOUN CentralNervousSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "central" "processing") Unit-TheWord
 (and (isa :NOUN CentralProcessingUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Centre-TheWord (and (isa :NOUN Centre-RegionFrance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Centrifuge-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A deviceUse) (N deviceUse))
   (:GAP (DEN fe_gizmo))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Centrifuge-TheWord (and (isa :NOUN Centrifuge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Century-TheWord (and (isa :NOUN CalendarCentury))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_count fe_relative_time) (N fe_count fe_relative_time)
    (AJP fe_count fe_relative_time (InverseBinaryPredicateFn parts))
    (NP (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit) (2nd fe_relative_time fe_unit))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 1 1)) ((0 2 1)) ((0 0 1)) ((0 2 0)) ((0 0 0))
   ((0 0 1) (0 3 0)) ((0 1 0) (0 2 1)) ((0 0 1) (0 1 0)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Century-TheWord (and (isa :NOUN UnitOfTime))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_process))
   (:OBLIQUE-OBJECT (NP fe_count) (Num fe_count) ((PPFn of) fe_process)
    ((PPingFn of) fe_process))
   (:GAP (INI fe_count fe_process) (DEN fe_unit))))
 (groupPatterns (TheSet ((1 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Century-TheWord (and (isa :NOUN CenturiesDuration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ceo-TheWord (and (isa :NOUN ChiefExecutiveOfficer))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cephalic") Vein-TheWord
 (and (isa :NOUN CephalicVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cephalopod-TheWord (and (isa :NOUN Cephalopod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cephalopoda-TheWord (and (isa :NOUN Cephalopod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cephalosporin-TheWord (and (isa :NOUN Cephalosporin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ceramic") Capacitor-TheWord
 (and (isa :NOUN CeramicCapacitor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ceramic") Glaze-TheWord
 (and (isa :NOUN GlazeForCeramics)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ceramic-TheWord (and (isa :NOUN Ceramic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ceramic-TheWord (and (isa :NOUN Ceramic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ceramic") Tile-TheWord (and (isa :NOUN CeramicTile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ceramic") Ware-TheWord
 (and (isa :NOUN CeramicArtifact)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cereal-TheWord (and (isa :NOUN CerealFood))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 1 0)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Cereal-TheWord (and (isa :NOUN BreakfastCereal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cereal-TheWord
 (and (isa :NOUN (FruitFn CerealPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cerebellum-TheWord (and (isa :NOUN Cerebellum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cerebrum-TheWord (and (isa :NOUN Cerebrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ceremony-TheWord (and (isa :NOUN Ceremony))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cerium-TheWord (and (isa :NOUN Cerium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Certainty-TheWord (and (isa :NOUN Confidence))
 (frame FN_Certainty)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn as) topicOfIndividual) ((PPFn of) topicOfIndividual)
    (Sfin topicOfIndividual) (AJP fe_degree) (A fe_degree fe_manner)
    (N fe_manner) ((PPFn about) situationTopic)
    ((PPFn in) eventAffectsBodyPart situationTopic) ((PPFn on) situationTopic))
   (:GAP (INI subjectOfMentalSituation)
    (DNI subjectOfMentalSituation topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 1)) ((1 6 0)) ((1 7 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((3 0 0)) ((1 4 1) (1 7 0)) ((1 2 0) (1 3 0)) ((1 3 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((1 4 1) (1 5 0) (3 0 0))
   ((0 0 0) (1 4 0) (1 4 1) (1 6 0)))))

(FNNounSemtrans (TheList) Certainty-TheWord
 (and (isa :NOUN Likelihood-QuantityType)) (frame FN_Likelihood)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_hypothetical_event))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn as) fe_hypothetical_event)
    ((PPFn of) fe_hypothetical_event) ((PPingFn of) fe_hypothetical_event)
    (Sfin fe_hypothetical_event) ((PPFn for) fe_hypothetical_event)
    (AVP fe_degree temporallyIntersects) ((PPFn at) temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 5 0)) ((1 2 0) (1 6 0)) ((1 0 0) (1 4 0)) ((1 0 0) (1 2 0))
   ((1 0 0) (1 3 0) (1 7 0)) ((1 0 0) (1 1 0) (1 6 1)))))

(FNNounSemtrans (TheList) Certificate-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_status))
   (:GAP (DEN fe_document) (INI fe_bearer fe_issuer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Certificate-TheWord
 (and (isa :NOUN CertificateDocument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cervical") Plexus-TheWord
 (and (isa :NOUN CervicalPlexus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cervical") Vertebra-TheWord
 (and (isa :NOUN CervicalVertebra)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cervix-TheWord (and (isa :NOUN Cervix))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cesarean") Delivery-TheWord
 (and (isa :NOUN CesareanBirth)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cesium-TheWord (and (isa :NOUN Cesium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cessation-TheWord (and (isa :NOUN DisruptionEvent))
 (frame FN_Process_stop)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_process) (N duration fe_process)
    ((PPFn at) temporallyIntersects) (AJP fe_manner temporallyIntersects)
    ((PPFn in) fe_process temporallyIntersects))
   (:GEN (Poss fe_process))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 1 1)) ((0 0 0) (0 4 1)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 3 1)) ((0 2 0) (0 4 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Cetacean-TheWord (and (isa :NOUN Cetacean))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chain") Mail-TheWord (and (isa :NOUN ChainMail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chain") Saw-TheWord (and (isa :NOUN ChainSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chain") Store-TheWord
 (and (isa :NOUN RetailChainStore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chain-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (A fe_descriptor))
   (:GAP (DEN fe_business))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Chain-TheWord (and (isa :NOUN Chain))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_connected_item) (Poss fe_connected_item)
    ((PPFn around) eventOccursAt) ((PPFn on) eventOccursAt)
    ((PPFn over) eventOccursAt) ((PPFn round) eventOccursAt)
    (AJP mainConstituent activeIngredientsOfType)
    (N eventOccursAt mainConstituent activeIngredientsOfType deviceUse)
    ((PPFn for) deviceUse) ((PPingFn for) deviceUse))
   (:GAP (DEN fe_connector)) (:GEN (Poss fe_connected_item))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 8 0)) ((0 7 3)) ((0 6 1)) ((0 7 1)) ((0 5 0)) ((0 4 0))
   ((0 2 0)) ((0 7 0)) ((2 0 0)) ((0 0 0)) ((0 3 0) (0 7 3)) ((0 3 0) (0 7 1))
   ((0 2 0) (0 6 0)) ((0 6 0) (0 7 0)) ((0 7 2) (2 0 0)) ((0 6 0) (2 0 0))
   ((0 1 0) (0 7 1)) ((0 7 0) (2 0 0)))))

(FNNounSemtrans (TheList) Chain-TheWord (and (isa :NOUN Chain)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chain-TheWord (and (isa :NOUN ChainOrganization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chainlink") Fence-TheWord
 (and (isa :NOUN ChainLinkFence)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chair-TheWord
 (and (isa :NOUN Chair-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chair-TheWord
 (and (isa :NOUN Chair-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chairlift-TheWord (and (isa :NOUN Chairlift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chairman-TheWord
 (and (isa :NOUN Chairperson-OrganizationalRole-2)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed)
    (AJP fe_descriptor leadersOfMovement)
    (N fe_depictive fe_governed leadersOfMovement))
   (:GAP (DNI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss duration fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 0 1)) ((3 0 1)) ((1 0 0)) ((0 0 0)) ((1 1 1)) ((0 0 1) (1 0 0))
   ((1 0 0) (4 0 0)) ((1 2 1) (4 0 0)) ((1 2 1) (1 2 2)) ((0 0 1) (1 1 0))
   ((0 0 1) (1 2 0)) ((1 2 0) (4 0 0)) ((0 0 1) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Chairperson-TheWord
 (and (isa :NOUN Chairperson-OrganizationalRole-2)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_governed) ((PPFn for) fe_governed)
    ((PPFn of) fe_governed) ((PPingFn of) fe_governed) (NP leadersOfMovement))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 1) (1 2 0))
   ((1 2 0) (1 4 0)) ((0 0 0) (4 0 0)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Chalet-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chalice-TheWord (and (isa :NOUN DrinkingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType deviceUse)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 2)) ((0 0 1)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Chalk-TheWord
 (and (isa :NOUN Chalk-WritingImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chalk-TheWord (and (isa :NOUN Chalk))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Challenge-TheWord (and (isa :NOUN Competition))
 (frame FN_Competition)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner) (N doneBy) ((PPFn from) doneBy))
   (:GAP (DEN fe_competition) (DNI fe_competition doneBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Challenge-TheWord (and (isa :NOUN Challenge))
 (frame FN_Difficulty)
 (bindingTemplate
  (TheList (:SUBJECT (NP processTypeForAccomplishmentType))
   (:OBLIQUE-OBJECT (AJP fe_parameter) ((PPFn in) fe_parameter))
   (:GAP (DEN processTypeForAccomplishmentType) (INI objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "chamber") Ensemble-TheWord
 (and (isa :NOUN ChamberMusicEnsemble)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chamber") Music-TheWord
 (and (isa :NOUN ChamberMusicComposition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chamber" "of") Commerce-TheWord
 (and (isa :NOUN ChamberOfCommerce)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chamber-TheWord (and (isa :NOUN Chamber))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType)
    (N deviceUse (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Chameleon-TheWord (and (isa :NOUN Chameleon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "champagne") Flute-TheWord
 (and (isa :NOUN ChampagneFlute)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Champagne-TheWord (and (isa :NOUN Champagne))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Champion-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance winner-First ChampionshipCompetition :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chance-TheWord
 (and (isa :NOUN Likelihood-QuantityType)) (frame FN_Daring)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (VPto objectActedOn) (AVP fe_manner))
   (:GAP (DEN objectActedOn) (DNI objectActedOn doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chance-TheWord (and (isa :NOUN Opportunity))
 (frame FN_Daring)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (VPto objectActedOn) (AVP fe_manner))
   (:GAP (DEN objectActedOn) (DNI objectActedOn doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chance-TheWord
 (and (isa :NOUN Probability-QuantityType)) (frame FN_Daring)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (VPto objectActedOn) (AVP fe_manner))
   (:GAP (DEN objectActedOn) (DNI objectActedOn doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chance-TheWord (and (isa :NOUN Situation))
 (frame FN_Daring)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (VPto objectActedOn) (AVP fe_manner))
   (:GAP (DEN objectActedOn) (DNI objectActedOn doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chancellery-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chances-TheWord
 (and (isa :NOUN Probability-QuantityType)) (frame FN_Probability)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chandelier-TheWord (and (isa :NOUN Chandelier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "change" "of") Location-TheWord
 (and (isa :NOUN Translation-LocationChange)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "change" "of") State-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Change-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent)) (frame FN_Undergo_change)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_attribute) (AJP fe_attribute fe_degree)
    ((PPFn in) objectActedOn) ((PPFn to) objectActedOn)
    ((PPFn of) objectActedOn))
   (:GAP (DNI objectActedOn toState)
    (INI toState toState fromState fromState))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 2 0)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 3 0))
   ((0 1 1) (0 2 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Channel-TheWord
 (and (isa :NOUN Channel-BodyOfWaterLink)) (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) (AJP parts (InverseBinaryPredicateFn nameString))
    ((PPFn around) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn off) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Chap-TheWord (and (isa :NOUN Person))
 (frame FN_People)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_context_of_acquaintance) ((PPFn in) fe_descriptor)
    ((PPFn from) comesFrom-Generic)
    (AJP fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 2)) ((0 2 0)) ((0 3 1)) ((0 4 0)) ((0 1 0)) ((0 3 0))
   ((0 0 0)) ((0 3 2) (0 4 1)) ((0 3 2) (0 3 2)) ((0 1 0) (0 3 2))
   ((0 2 0) (0 3 0)) ((0 0 0) (0 1 0) (0 3 2)))))

(FNNounSemtrans (TheList) Chapel-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chapel-TheWord (and (isa :NOUN Chapel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chapter-TheWord (and (isa :NOUN Chapter-PCW))
 (frame FN_Part_ordered_segments)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_ordinality fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts)) (:APPOSITIVE (NP fe_ordinality))))
 (groupPatterns (TheSet ((0 0 1)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "character") Set-TheWord
 (and (isa :NOUN CharacterSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Character-TheWord
 (and (isa :NOUN WritingSymbolCharacter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Character-TheWord
 (and (isa :NOUN FictionalCharacter)) (frame FN_People)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Character-TheWord
 (and (isa :NOUN Actor)
      (relationExistsInstance castMembers (PerformingFn DramaticPerformance)
       :NOUN))
 (frame FN_Performers_and_roles) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Characteristic-TheWord
 (and (isa :NOUN AttributeCharacteristicOfAnEntity))
 (frame FN_Condition_symptom_relation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charades-TheWord (and (isa :NOUN Charades))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "charcoal") Grill-TheWord
 (and (isa :NOUN CharcoalGrill)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charcoal-TheWord (and (isa :NOUN Charcoal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord (and (isa :NOUN MakingAnAgreement))
 (frame FN_Imposing_obligation)
 (bindingTemplate
  (TheList
   (:GAP (DEN obligationsCreated) (DNI obligationOwedTo) (INI doneBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord
 (and (isa :NOUN CommunicationAct-Single)
      (topicOfInfoTransfer :NOUN ?Evaluating1) (isa ?Evaluating1 Evaluating))
 (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N situationTopic))
   (:GAP (INI communicatorOfInfo) (DNI objectOfEvaluation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Charge-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP (DNI fe_governed))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Charge-TheWord
 (and (isa :NOUN Charging-DocumentingResponsibilityForPayment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord (and (isa :NOUN Charging-Rushing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord (and (isa :NOUN CriminalCharge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord (and (isa :NOUN ElectricalCharge))
 (frame FN_Measurable_attributes) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charge-TheWord
 (and (isa :NOUN MakingACriminalCharge)) (frame FN_Notification_of_charges)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_charges))
   (:OBLIQUE-OBJECT ((PPFn against) accused) (Sub fe_charges) (N fe_charges)
    (AJP fe_charges) (NP fe_charges) ((PPFn of) fe_charges)
    ((PPingFn of) fe_charges) ((PPFn at) eventOccursAt)
    ((PPFn in) eventOccursAt))
   (:GAP (2nd accused) (DNI accused) (CNI fe_arraign_authority)
    (DEN fe_charges))
   (:APPOSITIVE (NP fe_charges))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 6 0)) ((1 5 0)) ((0 0 0)) ((1 4 0)) ((1 2 0))
   ((1 3 0)) ((1 0 0)) ((1 1 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "charge") Unit-TheWord (and (isa :NOUN UnitOfCharge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charisma-TheWord (and (isa :NOUN Charisma))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charity-TheWord (and (isa :NOUN GivingSomething))
 (frame FN_Giving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charm-TheWord (and (isa :NOUN Charm-Jewelry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charm-TheWord (and (isa :NOUN Charm))
 (frame FN_Stimulus_focus) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chart-TheWord (and (isa :NOUN Chart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charter-TheWord (and (isa :NOUN Charter))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Charter-TheWord (and (isa :NOUN Charter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chasm-TheWord (and (isa :NOUN Chasm))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chassis-TheWord (and (isa :NOUN Chassis-VehiclePart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chastisement-TheWord
 (and (isa :NOUN Censuring-CommunicationAct))
 (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) recipientOfInfo) ((PPingFn for) fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI fe_reason))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Chasuble-TheWord (and (isa :NOUN OuterGarment))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:SUBJECT (NP wearer))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    (N fe_descriptor))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "chat") Room-TheWord (and (isa :NOUN ChatRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chat-TheWord (and (isa :NOUN FaceToFaceConversation))
 (frame FN_Chatting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors))
   (:OBLIQUE-OBJECT (AJP duration) ((PPFn with) fe_interlocutor_2)
    ((PPFn between) fe_interlocutors) ((PPFn at) eventOccursAt)
    (AVP temporallyIntersects)
    ((PPFn in) languageSpoken eventOccursAt temporallyIntersects)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic))
   (:GAP (CNI fe_interlocutors) (2nd temporallyIntersects))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 6 0)) ((3 0 1)) ((1 2 0)) ((1 1 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 1 0) (1 5 2) (3 0 0)) ((0 0 0) (1 1 0) (1 3 0))
   ((0 0 1) (1 0 0) (1 5 0)) ((1 0 0) (1 1 0) (1 5 1))
   ((0 0 0) (1 1 0) (1 4 0) (1 6 0)))))

(FNNounSemtrans (TheList) Chat-TheWord (and (isa :NOUN Conversation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chateau-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chatter-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) (N fe_manner)
    ((PPFn of) fe_noisy_event emitter))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 2 0)) ((1 0 0)) ((1 1 0) (1 2 1)) ((1 0 0) (1 2 1))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chauffeur-TheWord (and (isa :NOUN Chauffeur))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheat-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy Cheating :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheater-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy Cheating :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Check-TheWord (and (isa :NOUN Check-TenderObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Checkbook-TheWord (and (isa :NOUN Checkbook))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "checking") Account-TheWord
 (and (isa :NOUN CheckingAccount)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Checklist-TheWord (and (isa :NOUN ToDoList-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Checkroom-TheWord (and (isa :NOUN Closet))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheddar-TheWord (and (isa :NOUN Cheddar-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheek-TheWord (and (isa :NOUN Cheek-Facial))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor) (N fe_descriptor)
    (VPing fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((1 3 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 3 0))
   ((1 2 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 4 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (3 0 0)) ((1 1 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Cheekbone-TheWord (and (isa :NOUN Malar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheep-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn MakingAnOralSound doneBy Bird))))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Cheerleader-TheWord (and (isa :NOUN Cheerleader))
 (frame FN_Team) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cheese") Grater-TheWord
 (and (isa :NOUN CheeseGrater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheese-TheWord (and (isa :NOUN Cheese))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_descriptor)
    (AJP fe_descriptor activeIngredientsOfType) (N activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 2 0)) ((0 1 0) (1 0 0))
   ((0 1 0) (0 2 0)) ((0 1 0) (0 1 1)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 1 1) (0 2 0)) ((0 1 0) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Cheese-TheWord (and (isa :NOUN Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheeseburger-TheWord (and (isa :NOUN Cheeseburger))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheesecake-TheWord (and (isa :NOUN Cheesecake))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Cheetah-TheWord (and (isa :NOUN Cheetah))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chef-TheWord (and (isa :NOUN Chef)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chef-TheWord (and (isa :NOUN Chef))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chem" "bio" "protective") Glove-TheWord
 (and (isa :NOUN Glove-ChemicalAndBiological)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Agent-TheWord
 (and (isa :NOUN HarmfulChemicalSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Bond-TheWord
 (and (isa :NOUN ChemicalBond)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Element-TheWord
 (and (isa :NOUN ElementStuff)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Energy-TheWord
 (and (isa :NOUN ChemicalEnergy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Reaction-TheWord
 (and (isa :NOUN ChemicalReaction)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical" "tanker" "merchant" "marine") Ship-TheWord
 (and (isa :NOUN ChemicalTanker-MerchantMarineShip)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Tanker-TheWord
 (and (isa :NOUN ChemicalTanker-Ship)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemical-TheWord
 (and (isa :NOUN ChemicalSubstanceType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemical-TheWord
 (and (isa :NOUN ChemicalSubstanceType)) (frame FN_Substance)
 (bindingTemplate
  (TheList (:SUBJECT (NP stuffUsed))
   (:OBLIQUE-OBJECT (A fe_inherent_purpose) (Srel fe_inherent_purpose)
    (N fe_descriptor fe_inherent_purpose) (NP fe_inherent_purpose)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 1 0)) ((1 3 0)) ((1 2 1)) ((1 4 0)) ((0 0 0) (1 2 1))
   ((1 1 0) (1 2 0)) ((1 1 0) (1 4 0)) ((1 4 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 4 0)) ((1 4 0) (1 4 0) (1 4 0)))))

(FNNounSemtrans (TheList "chemical" "vapor") Deposition-TheWord
 (and (isa :NOUN ChemicalVaporDeposition-ThinFilm)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemical") Weapon-TheWord
 (and (isa :NOUN ChemicalWeapon)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A deviceUse) (AJP performedBy deviceUse)
    (N fe_descriptor doneBy))
   (:GAP (2nd activeIngredientsOfType) (DEN instrument-UsedAsWeapon))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((1 1 1)) ((1 0 0)) ((0 0 0)) ((1 2 0))
   ((1 1 0)))))

(FNNounSemtrans (TheList) Chemise-TheWord (and (isa :NOUN Lingerie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_descriptor) (N mainConstituent)
    ((PPFn in) mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 1)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0) (0 3 1))
   ((0 1 0) (0 3 0) (0 3 1)))))

(FNNounSemtrans (TheList) Chemise-TheWord (and (isa :NOUN Slip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemist-TheWord (and (isa :NOUN Chemist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemist-TheWord (and (isa :NOUN Chemist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chemistry") Lab-TheWord
 (and (isa :NOUN ChemistryLaboratory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemistry-TheWord (and (isa :NOUN Chemistry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemoreceptor-TheWord
 (and (isa :NOUN ChemoReceptiveSensor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chemotherapy-TheWord (and (isa :NOUN Chemotherapy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chenille-TheWord (and (isa :NOUN ChenilleCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cherokee-TheWord
 (and (isa :NOUN EthnicGroupOfCherokees)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cherry-TheWord (and (isa :NOUN (FruitFn CherryTree)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cherry-TheWord (and (isa :NOUN (WoodFn CherryTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cherry") Tree-TheWord (and (isa :NOUN CherryTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chesapeake") Bay-TheWord
 (and (isa :NOUN ChesapeakeBay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chess") Board-TheWord (and (isa :NOUN ChessBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chess") Computer-TheWord
 (and (isa :NOUN ChessComputer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chess") Piece-TheWord (and (isa :NOUN ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chess") Set-TheWord (and (isa :NOUN ChessSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chess-TheWord (and (isa :NOUN PlayingChess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chest") Freezer-TheWord
 (and (isa :NOUN Freezer-Chest)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chest" "of") Drawers-TheWord
 (and (isa :NOUN Dresser-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chest-TheWord (and (isa :NOUN Chest-BodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor subRegions))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 0 1)) ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Chest-TheWord
 (and (isa :NOUN Chest-PieceOfFurniture)) (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent fe_relative_location deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 2 2)) ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Chest-TheWord
 (and (isa :NOUN Chest-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chesterfield-TheWord
 (and (isa :NOUN Coat-Chesterfield)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chestnut-TheWord
 (and (isa :NOUN (WoodFn ChestnutTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chestnut-TheWord (and (isa :NOUN ChestnutTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chewa-TheWord (and (isa :NOUN EthnicGroupOfChewa))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chewing") Gum-TheWord (and (isa :NOUN ChewingGum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cheyenne-TheWord (and (isa :NOUN CheyenneLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chicagoan-TheWord
 (and (isa :NOUN (ResidentFn CityOfChicagoIL))) (frame FN_People_by_origin)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chick-TheWord (and (isa :NOUN (JuvenileFn Chicken)))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chickadee-TheWord (and (isa :NOUN Chickadee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chickasaw-TheWord (and (isa :NOUN ChickasawLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chicken") Soup-TheWord
 (and (isa :NOUN Soup) (keyIngredientTypes :NOUN Chicken-Meat)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chicken" "noodle") Soup-TheWord
 (and (isa :NOUN (SoupFn Chicken-Meat Noodle))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chicken-TheWord (and (isa :NOUN Chicken))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chicken-TheWord (and (isa :NOUN Chicken-Meat))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_descriptor activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Chicken-TheWord (and (isa :NOUN Poultry-Meat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chief" "executive") Officer-TheWord
 (and (isa :NOUN ChiefExecutiveOfficer)) (frame FN_Leadership)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chief" "executive") Officer-TheWord
 (and (isa :NOUN ChiefExecutiveOfficer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chief-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn at) fe_governed) (N fe_domain fe_governed)
    ((PPFn for) fe_governed) ((PPFn of) fe_governed)
    (NP (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (AVP temporallyIntersects)
    (AJP fe_governed eventOccursAt activeIngredientsOfType))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 1)) ((1 6 0)) ((1 1 0))
   ((1 4 0) (4 0 0)) ((1 3 0) (4 0 0)) ((0 0 0) (4 0 0)) ((1 1 1) (4 0 0))
   ((1 1 0) (4 0 0)) ((1 1 0) (3 0 0)) ((0 0 1) (1 6 1) (1 6 2))
   ((0 0 1) (0 0 1) (1 3 0)) ((1 1 0) (3 0 0) (4 0 0))
   ((0 0 1) (1 0 0) (1 1 0) (1 5 0)))))

(FNNounSemtrans (TheList) Chieftain-TheWord (and (isa :NOUN TribalLeader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_governed) (N fe_governed) ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((0 0 1) (3 0 0))
   ((3 0 0) (4 0 0)) ((0 0 1) (1 2 0)) ((0 0 0) (4 0 0)) ((0 0 1) (1 0 0))
   ((0 0 1) (0 0 1) (1 1 0)))))

(FNNounSemtrans (TheList) Chihuahua-TheWord (and (isa :NOUN Chihuahua-Dog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "child") Abuse-TheWord (and (isa :NOUN ChildAbuse))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree)) (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "child" "^s") Game-TheWord
 (and (isa :NOUN ChildsGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "child" "^s") Play-TheWord
 (and (isa :NOUN PurposefulAction) (degreeOfDifficulty :NOUN Easy))
 (frame FN_Difficulty) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Child-TheWord (and (isa :NOUN HumanChild))
 (frame FN_Appellations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Child-TheWord
 (and (isa :NOUN HumanChild) (relationExistsInstance children Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego))
   (:OBLIQUE-OBJECT ((PPFn of) fe_alter fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego) (INI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 0 1)) ((0 0 1)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Child-TheWord (and (isa :NOUN HumanChild))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn over) age) ((PPFn under) age)
    ((PPFn in) fe_descriptor) ((PPFn at) fe_descriptor) (Sing fe_descriptor)
    (Srel fe_descriptor) (N fe_ethnicity) (A comesFrom-Generic)
    ((PPFn from) age comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_persistent_characteristic)
    ((PPFn of) age fe_persistent_characteristic))
   (:GAP (DNI age) (INI age) (DEN age fe_person) (2nd fe_person))))
 (groupPatterns
  (TheSet ((1 10 0)) ((1 11 1)) ((1 9 3)) ((1 8 1)) ((1 7 0)) ((1 6 0))
   ((1 9 2)) ((1 5 0)) ((1 4 0)) ((1 2 0)) ((1 3 0)) ((1 9 1)) ((1 1 0))
   ((1 0 0)) ((1 11 0)) ((1 8 0)) ((1 9 0)) ((1 9 3) (1 9 3)) ((1 8 1) (1 9 3))
   ((1 9 2) (1 9 3)) ((1 9 2) (1 9 2)) ((1 2 0) (1 9 3)) ((1 3 0) (1 9 3))
   ((1 2 0) (1 9 2)) ((1 2 0) (1 9 1)) ((0 0 0) (1 9 3)) ((0 0 0) (1 3 0))
   ((1 2 0) (1 9 0)) ((0 0 0) (1 9 3) (1 10 0)) ((0 0 0) (1 9 1) (1 9 3)))))

(FNNounSemtrans (TheList) Childhood-TheWord
 (and (isa :NOUN Time-Quantity) (relationExistsInstance age HumanChild :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Childbirth-TheWord
 (and (isa :NOUN VaginalBirthEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "children" "^s") Book-TheWord
 (and (isa :NOUN ChildrensBook)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "children" "^s" "car") Seat-TheWord
 (and (isa :NOUN ChildrensCarSeat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "children" "^s") Product-TheWord
 (and (isa :NOUN ChildrensProductMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chili-TheWord (and (isa :NOUN Chili-Dish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chili-TheWord (and (isa :NOUN ChiliConCarne))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chill-TheWord (and (isa :NOUN HavingTheChills))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chime-TheWord (and (isa :NOUN Chime)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chimney-TheWord (and (isa :NOUN Chimney))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chimpanzee-TheWord (and (isa :NOUN Chimpanzee))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chin-TheWord (and (isa :NOUN Chin))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((1 1 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 1 0) (3 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "china") Cabinet-TheWord
 (and (isa :NOUN ChinaCabinet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) China-TheWord (and (isa :NOUN China-Dinnerware))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chinaware-TheWord (and (isa :NOUN China-Dinnerware))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chinese") Checkers-TheWord
 (and (isa :NOUN ChineseCheckers)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chip-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Chipmunk-TheWord (and (isa :NOUN Chipmunk))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chiropodist-TheWord (and (isa :NOUN Podiatrist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chiropractic-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chiropractor-TheWord (and (isa :NOUN Doctor-Medical))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chirp-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn MakingAnOralSound doneBy Bird))))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chisel-TheWord (and (isa :NOUN Chisel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chit-Chat-TheWord
 (and (isa :NOUN OpenEnded-Conversation)) (frame FN_Chatting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner) (N situationTopic)
    ((PPFn about) situationTopic))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Chlamydia-TheWord
 (and (isa :NOUN ChlamydiaTrachomatisBacterium)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chlorine-TheWord (and (isa :NOUN Chlorine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chloroplast-TheWord (and (isa :NOUN Chloroplast))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chocolate-Bar-TheWord
 (and (isa :NOUN CandyBar) (isa :NOUN ChocolateCandy)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chocolate") Candy-TheWord
 (and (isa :NOUN ChocolateCandy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chocolate-TheWord (and (isa :NOUN Chocolate))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 1 1)) ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 1))
   ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Chocolate-TheWord (and (isa :NOUN ChocolateCandy))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 1 1)) ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 1))
   ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Choctaw-TheWord (and (isa :NOUN ChoctawLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Choice-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance
       (Kappa (?evt ?poss)
        (and (actors ?evt ?actor)
             (optionsAvailable ?actor ?evt objectSelected ?poss)))
       Event :NOUN))
 (frame FN_Alternatives) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Choice-TheWord (and (isa :NOUN SelectingSomething))
 (frame FN_Choosing)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (Sfin chosenItem) (VPto chosenItem)
    ((PPFn by) subjectOfMentalSituation)
    (AJP subjectOfMentalSituation fe_manner) ((PPFn between) choices)
    ((PPFn on) situationTopic) (N chosenItem situationTopic)
    ((PPFn in) temporallyIntersects situationTopic)
    ((PPFn of) chosenItem choices situationTopic))
   (:GAP (INI chosenItem subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 8 2)) ((1 7 1)) ((1 8 1)) ((1 4 0)) ((1 1 0)) ((1 0 0)) ((1 8 0))
   ((1 6 0)) ((1 2 0) (1 6 1)) ((0 0 0) (1 5 0)) ((1 7 0) (3 0 0))
   ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0)) ((1 0 0) (1 3 1)) ((1 1 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 8 0) (3 0 0)) ((1 2 0) (1 3 0) (1 6 0)))))

(FNNounSemtrans (TheList) Choice-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance chosenItem SelectingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Choker-TheWord (and (isa :NOUN Necklace))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn of) mainConstituent)
    (AJP mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 1)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Cholangitis-TheWord
 (and (isa :NOUN AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cholecystitis-TheWord
 (and (isa :NOUN AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cholecystoscope-TheWord
 (and (isa :NOUN MedicalDevice)) (frame FN_Medical_instruments)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cholera-TheWord (and (isa :NOUN CholeraInfection))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chop-TheWord (and (isa :NOUN Chop-MeatCut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chopper-TheWord (and (isa :NOUN LowRiderMotorcycle))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N ownerOfProprietaryThing))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "chopping") Board-TheWord
 (and (isa :NOUN CuttingBoard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chopstick-TheWord (and (isa :NOUN Chopstick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chordata-TheWord (and (isa :NOUN ChordataPhylum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chordate-TheWord (and (isa :NOUN ChordataPhylum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chore-TheWord
 (and (isa :NOUN Obligation) (isa :NOUN RepeatedEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Choreography-TheWord
 (and (isa :NOUN Choreography-Notation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chow-TheWord (and (isa :NOUN ChowChow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Christening-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N groupMembers) ((PPFn of) groupMembers)
    ((PPFn at) eventOccursAt))
   (:GEN (Poss groupMembers))))
 (groupPatterns (TheSet ((0 2 0)) ((1 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "christian" "holy") Day-TheWord
 (and (isa :NOUN ChristianHoliday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christian") Name-TheWord
 (and (isa :NOUN HumanSurname)) (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 1 0)) ((2 0 0)) ((0 0 0) (2 0 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Christian-TheWord
 (and (isa :NOUN HumanFamilyNameString)) (frame FN_Being_named)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Christian-TheWord (and (isa :NOUN ChristianPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Christian-TheWord (and (isa :NOUN ChristianPerson))
 (frame FN_People_by_religion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) (NP fe_descriptor)
    ((PPFn in) fe_descriptor) (VPing fe_descriptor)
    (AJP fe_descriptor fe_ethnicity fe_persistent_characteristic
     hasBeliefSystems)
    ((PPFn of) fe_persistent_characteristic hasBeliefSystems))
   (:GAP (CNI fe_person) (DEN fe_person hasBeliefSystems))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 5 1)) ((1 4 3)) ((1 4 2)) ((1 4 1)) ((1 4 0)) ((1 3 0))
   ((1 2 0)) ((1 1 0)) ((0 0 0) (1 4 3)) ((1 4 3) (1 5 0)) ((0 0 0) (1 4 2))
   ((1 4 2) (1 4 3)) ((0 0 0) (1 4 0)) ((1 0 0) (1 4 0))
   ((0 0 0) (1 4 2) (1 4 3)))))

(FNNounSemtrans (TheList) Christianity-TheWord (and (isa :NOUN Christianity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christmas") Card-TheWord
 (and (isa :NOUN ChristmasCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christmas") Day-TheWord
 (and (isa :NOUN ChristmasHoliday)) (frame FN_Commemorative)
 (bindingTemplate
  (TheList
   (:GAP (DEN fe_dedicated_entity) (2nd fe_dedicated_type fe_honored_entity))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Christmas-TheWord (and (isa :NOUN ChristmasHoliday))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Christmas-TheWord (and (isa :NOUN Commemoration))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Christmas-TheWord (and (isa :NOUN ChristmasHoliday))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christmas" "tree") Decoration-TheWord
 (and (isa :NOUN ChristmasTreeDecoration)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christmas") Tree-TheWord
 (and (isa :NOUN ChristmasTree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christmas") Tree-TheWord
 (and (isa :NOUN ChristmasTree-Well)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "christmas") Tree-TheWord
 (and (isa :NOUN ChristmasTree)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chrome") Cleaner-TheWord
 (and (isa :NOUN ChromeCleaner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chromium-TheWord (and (isa :NOUN Chromium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chromosome-TheWord
 (and (isa :NOUN EukaryoticChromosome)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "chronic") Bronchitis-TheWord
 (and (isa :NOUN Bronchitis-Chronic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chronicle-TheWord
 (and (isa :NOUN HistoricalNarrative)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_text) (N startingDate fe_title situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic) (AJP situationTopic)
    (VPing situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW situationTopic))))
 (groupPatterns
  (TheSet ((0 4 0)) ((2 0 1)) ((0 2 1)) ((0 3 0)) ((0 1 1)) ((2 0 0)) ((0 2 0))
   ((0 1 0) (0 1 2)) ((0 2 1) (2 0 0)) ((0 1 2) (2 0 0))
   ((0 0 0) (0 1 2) (2 0 0)))))

(FNNounSemtrans (TheList) Chronicler-TheWord (and (isa :NOUN Chronicler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chrysalis-TheWord (and (isa :NOUN Chrysalis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chuckle-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Chuckling)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_internal_cause emitter)
    ((PPFn from) emitter))
   (:GEN (Poss emitter objectMoving))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 1 1)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((1 1 0))
   ((1 0 0) (2 0 0)) ((1 0 0) (1 1 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Chum-TheWord
 (and (isa :NOUN Person) (relationInstanceExists friends :NOUN Person))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partners))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_2))
   (:GAP (INI fe_partner_2) (DEN fe_partner_1 fe_partners))
   (:GEN (Poss fe_partner_2)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)) ((4 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Chunk-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) (N stuffUsed) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "church") Service-TheWord
 (and (isa :NOUN ChurchService)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Church-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor startingDate activeIngredientsOfType)
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType))
   (:GAP (DEN fe_building)) (:GEN (Poss eventOccursAt))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 2)) ((0 1 0)) ((0 0 0)) ((0 0 1) (0 1 1))
   ((0 0 2) (3 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Church-TheWord (and (isa :NOUN Church-Building))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Church-TheWord
 (and (isa :NOUN LocalReligiousCongregation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chute-TheWord (and (isa :NOUN Chute-SlopingPath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Chuvash-TheWord
 (and (isa :NOUN EthnicGroupOfChuvash)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cigar") Cutter-TheWord (and (isa :NOUN CigarCutter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cigar") Lighter-TheWord
 (and (isa :NOUN CigaretteLighter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cigar-TheWord (and (isa :NOUN Cigar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cigarette-Boat-TheWord
 (and (isa :NOUN CigaretteBoat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cigarette") Lighter-TheWord
 (and (isa :NOUN CigaretteLighter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cigarette") Pack-TheWord
 (and (isa :NOUN CigarettePack)) (frame FN_Intoxicants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cigarette-TheWord (and (isa :NOUN Cigarette))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cigarette-TheWord (and (isa :NOUN Cigarette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ciliate-TheWord (and (isa :NOUN Ciliate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cinema-TheWord (and (isa :NOUN MovieTheaterSpace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cinnamon-TheWord (and (isa :NOUN Cinnamon-Spice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cinnamon-TheWord (and (isa :NOUN CinnamonTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circassian-TheWord
 (and (isa :NOUN EthnicGroupOfCircassians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circle-TheWord (and (isa :NOUN Circle))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed) (N stuffUsed)
    ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_shape) (INI stuffUsed))))
 (groupPatterns (TheSet ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Circle-TheWord (and (isa :NOUN CircularRegion))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed) (N stuffUsed)
    ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_shape) (INI stuffUsed))))
 (groupPatterns (TheSet ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Circlet-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent)
    ((PPFn of) fe_descriptor mainConstituent)
    (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((0 2 1)) ((0 1 0)) ((0 1 1) (0 2 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "circuit") Breaker-TheWord
 (and (isa :NOUN CircuitBreaker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "circuit") Tester-TheWord
 (and (isa :NOUN CircuitTester)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circuit-TheWord (and (isa :NOUN ElectricalCircuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circuit-TheWord (and (isa :NOUN Trajectory))
 (frame FN_Path_traveled)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_ground) (AJP objectMoving))
   (:GAP (DEN trajectory-Complete))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "circuit") Wire-TheWord
 (and (isa :NOUN Wire-IntegratedCircuit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "circular" "saw") Blade-TheWord
 (and (isa :NOUN CircularSawBlade)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "circular") Saw-TheWord (and (isa :NOUN CircularSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circularization-TheWord
 (and (isa :NOUN Circularization-Advertising)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circulation-TheWord
 (and (isa :NOUN (CirculationFn Blood))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "circulatory") System-TheWord
 (and (isa :NOUN CirculatorySystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circumcision-TheWord (and (isa :NOUN Circumcision))
 (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP groupMembers) ((PPFn for) groupMembers)
    ((PPFn of) groupMembers))
   (:GEN (Poss groupMembers))))
 (groupPatterns (TheSet ((1 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Circumference-TheWord (and (isa :NOUN Dimension))
 (frame FN_Dimension) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "circumflex") Artery-TheWord
 (and (isa :NOUN CircumflexArtery-Coronary)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circumflex-TheWord
 (and (isa :NOUN Circumflex-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Circumstance-TheWord (and (isa :NOUN Situation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cirque-TheWord (and (isa :NOUN Cirque))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cirrhosis-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cirrus-TheWord (and (isa :NOUN CirrusCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Citadel-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList (:GAP (DEN fe_building)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Citizen-TheWord (and (isa :NOUN Citizenship))
 (frame FN_People_by_jurisdiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (A fe_descriptor fe_jurisdiction)
    (AJP fe_ethnicity fe_jurisdiction) ((PPFn of) fe_jurisdiction))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0) (1 1 1)) ((0 0 0) (1 1 0))
   ((1 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Citizenry-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance jurisdictionOverIndividual LegalAgent :NOUN))
 (frame FN_People_by_jurisdiction) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Citrus-TheWord (and (isa :NOUN CitrusFruit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Citrus-TheWord (and (isa :NOUN CitrusFruitTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "city") Bus-TheWord (and (isa :NOUN CityBus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "city") Council-TheWord (and (isa :NOUN CityCouncil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "city") Dweller-TheWord
 (and (isa :NOUN (ResidentFn UrbanArea))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "city") Hall-TheWord
 (and (isa :NOUN CityHall-Building)) (frame FN_Buildings)
 (bindingTemplate (TheList (:GAP (DEN fe_building)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) City-State-TheWord (and (isa :NOUN CityState))
 (frame FN_Political_locales)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) City-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) City-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) (AJP fe_descriptor) (Srel fe_descriptor)
    (A fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) City-TheWord (and (isa :NOUN City)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) City-TheWord (and (isa :NOUN City))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT (A fe_container_possessor fe_descriptor)
    ((PPFn of) parts fe_descriptor eventLocale
     (InverseBinaryPredicateFn nameString) fe_population)
    (N fe_descriptor (InverseBinaryPredicateFn nameString) fe_population
     fe_relative_location)
    (AJP fe_container_possessor fe_descriptor
     (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn on) fe_relative_location) ((PPFn over) fe_relative_location))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_container_possessor fe_relative_location))
   (:APPOSITIVE (NP eventLocale (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 1 4)) ((1 1 3)) ((1 2 1)) ((1 3 2)) ((1 1 2))
   ((4 0 0)) ((1 1 1)) ((1 2 0)) ((1 3 1)) ((1 0 1)) ((3 0 0)) ((1 0 0))
   ((1 1 0)) ((1 2 2) (1 4 0)) ((1 3 1) (3 0 1)) ((0 0 0) (1 3 1))
   ((1 1 1) (1 3 1)) ((1 0 0) (1 2 3)) ((1 0 0) (4 0 1))
   ((1 0 1) (1 3 1) (1 3 1)) ((1 1 3) (1 3 0) (1 3 3))
   ((1 0 0) (1 3 1) (1 3 1)))))

(FNNounSemtrans (TheList "civil") Engineer-TheWord
 (and (isa :NOUN CivilEngineer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "civil") Law-TheWord (and (isa :NOUN CivilLaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "civil") Right-TheWord (and (isa :NOUN CivilRight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "civil") Right-TheWord (and (isa :NOUN USCivilRight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Civilian-TheWord (and (isa :NOUN Civilian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Civilian-TheWord (and (isa :NOUN Civilian))
 (frame FN_Noncombatant) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Civvie-TheWord (and (isa :NOUN Civilian))
 (frame FN_Noncombatant) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clack-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_ground) (AJP fe_manner)
    ((PPFn behind) eventOccursAt)
    ((PPFn of) fe_noisy_event emitter objectMoving))
   (:GAP (INI fe_ground))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 3 2)) ((0 1 0) (0 3 1)) ((0 1 0) (0 3 0))
   ((0 0 0) (0 3 2)))))

(FNNounSemtrans (TheList) Claim-TheWord (and (isa :NOUN AnnouncingSomething))
 (frame FN_Claim_ownership)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn for) fe_property) ((PPFn of) fe_property)
    ((PPFn to) fe_property) ((PPFn on) fe_property) ((PPFn over) fe_property))
   (:GAP (DNI communicatorOfInfo)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 3 0)) ((1 0 0)) ((1 2 0) (3 0 0)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Claim-TheWord (and (isa :NOUN Statement))
 (frame FN_Claim_ownership)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn for) fe_property) ((PPFn of) fe_property)
    ((PPFn to) fe_property) ((PPFn on) fe_property) ((PPFn over) fe_property))
   (:GAP (DNI communicatorOfInfo)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 3 0)) ((1 0 0)) ((1 2 0) (3 0 0)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Clam-TheWord (and (isa :NOUN Clam))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clamp-TheWord (and (isa :NOUN Clamp-Tool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clan-TheWord (and (isa :NOUN Tribe))
 (frame FN_Kinship) (bindingTemplate (TheList (:GAP (DEN relatives))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clang-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_manner)
    ((PPFn of) fe_noisy_event emitter objectMoving))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 1 0) (0 2 1)) ((0 1 0) (0 1 0))
   ((0 0 0) (0 2 2)))))

(FNNounSemtrans (TheList) Claque-TheWord (and (isa :NOUN (GroupFn Animal)))
 (frame FN_Aggregate) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clarinet-TheWord (and (isa :NOUN Clarinet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clarinetist-TheWord
 (and (isa :NOUN (PlayerOfInstrumentFn Clarinet))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clarity-TheWord
 (and (isa :NOUN (AmountOfFn EvidentialSupport))) (frame FN_Obviousness)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clash-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_themes))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Clash-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Sounds)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_themes))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Clasp-TheWord (and (isa :NOUN Connector))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Class-TheWord (and (isa :NOUN BiologicalClass))
 (frame FN_Biological_classification) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Class-TheWord (and (isa :NOUN BiologicalClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Class-TheWord (and (isa :NOUN ClassMeeting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Class-TheWord
 (and (isa :NOUN PersonTypeBySocialClass)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Class-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) (N fe_category fe_item_property)
    (A fe_type_property) (AJP fe_item_property fe_type_property)
    ((PPFn than) fe_type_property))
   (:GAP (INI fe_category) (DEN fe_subtype))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 3 1))
   ((0 1 1) (0 3 1)) ((0 1 1) (0 2 0)) ((0 1 1) (0 3 0))
   ((0 2 0) (0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList "classical") Latin-TheWord
 (and (isa :NOUN LatinLanguage-Classical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "classical") Music-TheWord
 (and (isa :NOUN ClassicalMusic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Classification-TheWord (and (isa :NOUN Categorizing))
 (frame FN_Categorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_category) ((PPFn as) fe_category)
    ((PPFn on) fe_criteria) ((PPFn according to) fe_criteria)
    ((PPFn by) subjectOfMentalSituation fe_criteria) ((PPFn in) fe_criteria)
    ((PPFn into) fe_category fe_criteria) ((PPFn for) objectOfStateChange)
    ((PPFn of) fe_category objectOfStateChange)
    (N fe_category fe_criteria objectOfStateChange)
    (AJP fe_criteria objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 8 1)) ((0 7 0)) ((0 9 2)) ((0 10 1)) ((0 6 1)) ((0 5 0))
   ((0 4 1)) ((0 9 1)) ((0 10 0)) ((1 0 0)) ((0 4 0)) ((0 8 0)) ((0 9 0))
   ((0 3 0) (0 8 1)) ((0 3 0) (0 9 2)) ((0 9 1) (1 0 1)) ((0 10 0) (1 0 1))
   ((0 8 1) (0 10 0)) ((0 4 0) (0 9 2)) ((0 1 0) (1 0 1)) ((0 0 0) (0 8 1))
   ((0 7 0) (0 9 0)) ((0 0 0) (0 4 0)) ((0 6 0) (0 10 0) (1 0 1))
   ((0 1 0) (0 2 0) (1 0 1)))))

(FNNounSemtrans (TheList) Classification-TheWord
 (and (isa :NOUN IdentifyingObjectAsType)) (frame FN_Categorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_category) ((PPFn as) fe_category)
    ((PPFn on) fe_criteria) ((PPFn according to) fe_criteria)
    ((PPFn by) subjectOfMentalSituation fe_criteria) ((PPFn in) fe_criteria)
    ((PPFn into) fe_category fe_criteria) ((PPFn for) objectOfStateChange)
    ((PPFn of) fe_category objectOfStateChange)
    (N fe_category fe_criteria objectOfStateChange)
    (AJP fe_criteria objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 8 1)) ((0 7 0)) ((0 9 2)) ((0 10 1)) ((0 6 1)) ((0 5 0))
   ((0 4 1)) ((0 9 1)) ((0 10 0)) ((1 0 0)) ((0 4 0)) ((0 8 0)) ((0 9 0))
   ((0 3 0) (0 8 1)) ((0 3 0) (0 9 2)) ((0 9 1) (1 0 1)) ((0 10 0) (1 0 1))
   ((0 8 1) (0 10 0)) ((0 4 0) (0 9 2)) ((0 1 0) (1 0 1)) ((0 0 0) (0 8 1))
   ((0 7 0) (0 9 0)) ((0 0 0) (0 4 0)) ((0 6 0) (0 10 0) (1 0 1))
   ((0 1 0) (0 2 0) (1 0 1)))))

(FNNounSemtrans (TheList) Classification-TheWord
 (and (isa :NOUN ImprovingAClassificationSystem)) (frame FN_Categorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_category) ((PPFn as) fe_category)
    ((PPFn on) fe_criteria) ((PPFn according to) fe_criteria)
    ((PPFn by) subjectOfMentalSituation fe_criteria) ((PPFn in) fe_criteria)
    ((PPFn into) fe_category fe_criteria) ((PPFn for) objectOfStateChange)
    ((PPFn of) fe_category objectOfStateChange)
    (N fe_category fe_criteria objectOfStateChange)
    (AJP fe_criteria objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 8 1)) ((0 7 0)) ((0 9 2)) ((0 10 1)) ((0 6 1)) ((0 5 0))
   ((0 4 1)) ((0 9 1)) ((0 10 0)) ((1 0 0)) ((0 4 0)) ((0 8 0)) ((0 9 0))
   ((0 3 0) (0 8 1)) ((0 3 0) (0 9 2)) ((0 9 1) (1 0 1)) ((0 10 0) (1 0 1))
   ((0 8 1) (0 10 0)) ((0 4 0) (0 9 2)) ((0 1 0) (1 0 1)) ((0 0 0) (0 8 1))
   ((0 7 0) (0 9 0)) ((0 0 0) (0 4 0)) ((0 6 0) (0 10 0) (1 0 1))
   ((0 1 0) (0 2 0) (1 0 1)))))

(FNNounSemtrans (TheList) Classmate-TheWord (and (isa :NOUN Classmate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "classroom") Project-TheWord (and (isa :NOUN Project))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Classroom-TheWord (and (isa :NOUN Classroom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clatter-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) ((PPFn along) fe_ground)
    ((PPFn on) fe_ground) ((PPFn from) from-Generic) (AJP fe_degree fe_manner)
    ((PPFn in) eventOccursAt)
    ((PPFn of) fe_noisy_event emitter objectMoving fe_themes))
   (:GAP (INI fe_ground))))
 (groupPatterns
  (TheSet ((0 6 3)) ((0 6 1)) ((0 6 0)) ((0 4 1)) ((0 3 0)) ((0 6 2))
   ((0 4 1) (0 6 3)) ((0 4 1) (0 6 1)) ((0 4 1) (0 6 0)) ((0 3 0) (0 4 1))
   ((0 2 0) (0 6 2)) ((0 1 0) (0 6 2)) ((0 0 0) (0 6 2)) ((0 5 0) (0 6 2))
   ((0 4 0) (0 6 0)) ((0 3 0) (0 4 1) (0 6 1)) ((0 2 0) (0 4 1) (0 6 2)))))

(FNNounSemtrans (TheList) Clause-TheWord (and (isa :NOUN AgreementLineItem))
 (frame FN_Terms_of_agreement)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N fe_regulated_entity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Clause-TheWord
 (and (isa :NOUN Obligation)
      (relationExistsInstance obligationsCreated Agreement :NOUN))
 (frame FN_Terms_of_agreement)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N fe_regulated_entity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Clavicle-TheWord (and (isa :NOUN Clavicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Claw-TheWord (and (isa :NOUN Claw))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    ((PPFn of) fe_descriptor ownerOfProprietaryThing)
    (N ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 1)) ((0 0 0)) ((1 2 0)) ((1 0 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (1 2 0)) ((1 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (3 0 0)) ((1 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Claw-TheWord (and (isa :NOUN Pincer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clay-TheWord (and (isa :NOUN Clay-Wet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cleaner-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists cleans :NOUN PartiallyTangible))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cleaning-TheWord (and (isa :NOUN Cleaning))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cleaning") Implement-TheWord
 (and (isa :NOUN CleaningImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cleansing") Agent-TheWord
 (and (isa :NOUN CleaningSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clear") Plastic-TheWord
 (and (isa :NOUN ClearPlastic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cleaver-TheWord (and (isa :NOUN Cleaver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cleft-TheWord (and (isa :NOUN Cleft))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clemency-TheWord (and (isa :NOUN Clemency))
 (frame FN_Clemency)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_executive_authority fe_offender))
   (:OBLIQUE-OBJECT (A fe_executive_authority)
    ((PPFn from) fe_executive_authority) ((PPFn by) fe_executive_authority)
    ((PPFn on) fe_executive_authority
     (InverseBinaryPredicateFn explains-Generic))
    (AJP fe_manner) ((PPFn for) fe_offender) ((PPFn toward) fe_offender)
    ((PPFn to) fe_offender) ((PPFn in) temporallyIntersects)
    (NP temporallyIntersects) ((PPFn during) temporallyIntersects))
   (:GAP (DNI fe_crime fe_executive_authority fe_offender)
    (INI fe_crime fe_executive_authority fe_offender))
   (:GEN (Poss fe_offender))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((0 0 0)) ((3 0 0)) ((1 6 0)) ((1 5 0)) ((0 0 1))
   ((1 4 0)) ((1 3 1)) ((0 0 1) (1 1 0)) ((0 0 1) (1 0 0)) ((0 0 1) (1 2 0))
   ((0 0 0) (1 7 0)) ((0 0 0) (1 5 0) (1 8 0)) ((0 0 1) (1 0 0) (1 1 0))
   ((0 0 1) (1 2 0) (1 9 0) (1 10 0)))))

(FNNounSemtrans (TheList) Clergyman-TheWord (and (isa :NOUN Chaplain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cleric-TheWord (and (isa :NOUN Cleric))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clerk-TheWord (and (isa :NOUN ClericalWorker))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (A employer) ((PPFn for) employer) ((PPFn to) employer)
    (NP fe_person) ((PPFn in) employer employer) ((PPFn at) employer employer)
    ((PPFn from) employer) (AJP fe_rank)
    (N employer employer fe_rank activeIngredientsOfType)
    ((PPFn of) employer activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 8 3)) ((1 7 0)) ((1 6 0)) ((3 0 0)) ((1 2 0)) ((1 9 0)) ((1 4 0))
   ((1 8 0)) ((1 9 1) (4 0 0)) ((1 8 2) (1 8 3)) ((1 5 0) (1 9 1))
   ((1 9 1) (3 0 0)) ((1 8 2) (1 9 0)) ((1 8 0) (3 0 0)) ((0 0 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 9 0)) ((1 3 0) (1 9 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 8 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 8 2) (1 8 3)) ((0 0 0) (1 5 0) (1 8 3))
   ((0 0 0) (1 4 0) (1 8 2)) ((0 0 0) (1 4 0) (1 7 0))
   ((1 1 0) (1 4 0) (1 8 3)) ((0 0 0) (1 8 0) (3 0 0))
   ((0 0 0) (1 8 0) (1 8 0)) ((0 0 0) (1 4 0) (1 8 0) (1 8 3)))))

(FNNounSemtrans (TheList) Click-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) ((PPFn on) fe_ground)
    (AJP fe_degree fe_manner emitter) ((PPFn from) emitter)
    ((PPFn of) fe_noisy_event emitter objectMoving fe_themes)
    ((PPingFn of) fe_themes))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 3)) ((2 0 0)) ((1 4 1)) ((1 3 0)) ((0 0 0)) ((1 2 2))
   ((1 4 0)) ((1 2 1)) ((1 2 0)) ((1 2 1) (1 4 1)) ((0 0 0) (1 2 1))
   ((1 2 1) (1 4 0)) ((1 2 1) (1 2 1)) ((1 0 0) (1 4 2))
   ((1 1 0) (1 2 1) (1 4 2)))))

(FNNounSemtrans (TheList) Client-TheWord
 (and (isa :NOUN Person) (relationInstanceExists attorneys :NOUN Lawyer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cliff-TheWord (and (isa :NOUN Cliff))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) (AJP parts (InverseBinaryPredicateFn nameString))
    ((PPFn of) parts fe_container_possessor fe_relative_location)
    ((PPFn above) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn behind) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 0)) ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 1 1)) ((2 0 0))
   ((0 2 1)) ((0 2 0)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 2 1)) ((0 0 0) (0 2 2))
   ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Climate-TheWord (and (isa :NOUN WeatherEvent))
 (frame FN_Weather)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AVP eventOccursAt))
   (:GAP (DNI eventOccursAt) (INI temporallyIntersects))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Climber-TheWord (and (isa :NOUN Climber-Athlete))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clinic-TheWord (and (isa :NOUN MedicalClinic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clink-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_ground) ((PPFn against) fe_ground)
    ((PPFn in) fe_ground) ((PPFn on) fe_ground) (AJP fe_manner)
    ((PPFn of) fe_noisy_event objectMoving fe_themes))
   (:GAP (INI fe_ground))))
 (groupPatterns
  (TheSet ((0 5 2)) ((0 5 0)) ((0 5 1)) ((0 4 0) (0 5 2)) ((0 3 0) (0 5 1))
   ((0 2 0) (0 5 1)) ((0 1 0) (0 5 1)) ((0 0 0) (0 5 1)))))

(FNNounSemtrans (TheList) Clipboard-TheWord (and (isa :NOUN Clipboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clipper-TheWord (and (isa :NOUN ClipperShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clitoris-TheWord (and (isa :NOUN Clitoris))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloak-TheWord (and (isa :NOUN Cape-Clothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    ((PPFn in) mainConstituent) ((PPFn of) fe_descriptor mainConstituent)
    ((PPFn with) subRegions)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 4 1)) ((0 2 0)) ((0 4 0)) ((0 4 3) (2 0 0))
   ((0 4 0) (2 0 0)) ((0 3 0) (0 4 0)) ((0 4 0) (0 4 2)) ((0 2 1) (0 4 0))
   ((0 1 0) (0 4 0)) ((0 4 0) (0 4 1)) ((0 4 0) (0 4 0))
   ((0 4 0) (0 4 2) (2 0 0)) ((0 0 0) (0 4 0) (2 0 0))
   ((0 4 0) (0 4 0) (2 0 0)) ((0 4 0) (0 4 0) (0 4 2))
   ((0 0 1) (0 4 0) (0 4 0)))))

(FNNounSemtrans (TheList) Cloakroom-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clock") Radio-TheWord (and (isa :NOUN ClockRadio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clock-TheWord (and (isa :NOUN Clock)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clock") Time-TheWord (and (isa :NOUN CalendarMinute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clock") Tower-TheWord (and (isa :NOUN ClockTower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clocked" "logic") Cell-TheWord
 (and (isa :NOUN ClockedLogicCell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clod-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Clog-TheWord (and (isa :NOUN Clog-TheShoe))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Clone-TheWord (and (isa :NOUN IBTCopying))
 (frame FN_Duplication)
 (bindingTemplate
  (TheList (:SUBJECT (NP copyProduced itemCopied))
   (:OBLIQUE-OBJECT (N itemCopied) ((PPFn of) itemCopied) (AJP itemCopied))
   (:GEN (Poss itemCopied))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 0)) ((0 0 1)) ((1 2 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "closed") Corporation-TheWord
 (and (isa :NOUN PrivatelyHeldCorporation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Closeness-TheWord
 (and (isa :NOUN IndividualAgent)
      (relationInstanceExists mutualAcquaintances :NOUN IndividualAgent))
 (frame FN_Social_connection) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "closet") Organizer-TheWord
 (and (isa :NOUN ClosetOrganizer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Closet-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Closet-TheWord (and (isa :NOUN Closet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "closing") Document-TheWord
 (and (isa :NOUN ClosingDocument)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clot-TheWord (and (isa :NOUN Clot)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cloth" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Cloth)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloth-TheWord (and (isa :NOUN Cloth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cloth") Towel-TheWord (and (isa :NOUN ClothTowel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clothes") Dryer-TheWord
 (and (isa :NOUN ClothesDryer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clothes-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:SUBJECT (NP wearer))
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle deviceUse)
    (N clothingStyle deviceUse) ((PPFn of) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 1)) ((1 0 0))
   ((1 1 1) (3 0 0)) ((1 0 2) (3 0 0)) ((1 1 0) (3 0 0)) ((1 0 1) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((1 0 0) (1 1 0)) ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "clothes") Washer-TheWord
 (and (isa :NOUN ClothesWasher)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clothesline-TheWord (and (isa :NOUN ClothesLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clothespin-TheWord (and (isa :NOUN ClothesPin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "clothing" "or" "towel") Hook-TheWord
 (and (isa :NOUN ClothingOrTowelHook)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clothing-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn with) performedBy))
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor clothingStyle subRegions deviceUse) ((PPFn for) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 0 3)) ((1 1 3)) ((1 0 2)) ((1 1 1)) ((1 0 1))
   ((1 1 0)) ((0 0 0)) ((1 0 2) (1 2 0)) ((1 0 1) (1 1 2)) ((1 0 0) (3 0 0))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 1 1)) ((1 0 3) (1 1 0) (1 2 0))
   ((1 0 1) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Cloud-TheWord (and (isa :NOUN CloudlikeObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloud-TheWord (and (isa :NOUN ComputerNetwork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloud-TheWord (and (isa :NOUN CloudInSky))
 (frame FN_Weather) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloudiness-TheWord (and (isa :NOUN CloudyArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloudiness-TheWord (and (isa :NOUN Murky))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clough-TheWord (and (isa :NOUN Cleft))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Clough-TheWord (and (isa :NOUN Ravine))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Clove-TheWord (and (isa :NOUN Clove-Spice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clove-TheWord (and (isa :NOUN Clove-TheFlowerBud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clove-TheWord (and (isa :NOUN CloveTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clover-TheWord (and (isa :NOUN Clover))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clown-TheWord (and (isa :NOUN Clown)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "club") Sandwich-TheWord
 (and (isa :NOUN ClubSandwich)) (frame FN_Food) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Club-TheWord (and (isa :NOUN Club-Organization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Club-TheWord (and (isa :NOUN Club-TheSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Club-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:SUBJECT (NP hasMembers))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn for) hasMembers)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (INI hasMembers) (DNI hasMembers fe_organization)
    (DEN fe_organization))))
 (groupPatterns (TheSet ((1 1 0)) ((1 2 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Club-TheWord (and (isa :NOUN Club-Weapon))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cluck-TheWord (and (isa :NOUN CluckingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clue-TheWord (and (isa :NOUN CriminalInvestigation))
 (frame FN_Criminal_investigation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clumber-TheWord (and (isa :NOUN ClumberSpaniel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clump-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:SUBJECT (NP stuffUsed))
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed) (N stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 0 0)) ((1 3 0)) ((1 0 0)) ((1 0 0) (1 2 0))
   ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "cluster") Bomb-TheWord (and (isa :NOUN ClusterBomb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clutch-TheWord (and (isa :NOUN Clutch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clutch-TheWord (and (isa :NOUN Purse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Clydesdale-TheWord (and (isa :NOUN ClydesdaleHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Co-Occurrence-TheWord
 (and (isa :NOUN TemporalThing)
      (relationInstanceExists cotemporal :NOUN TemporalThing))
 (frame FN_Simultaneity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Co-Star-TheWord (and (isa :NOUN Actor))
 (frame FN_Performers_and_roles)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_performance performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) fe_performance) ((PPFn of) fe_performance)
    (N genericPathway-Partial fe_performance activeIngredientsOfType))
   (:NOUN (N performedBy performedBy)) (:GEN (Poss performedBy performedBy))
   (:APPOSITIVE
    (NP performedBy (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns
  (TheSet ((3 0 0)) ((2 0 0)) ((1 2 2) (4 0 0)) ((0 0 1) (3 0 0))
   ((2 0 0) (3 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (2 0 0))
   ((1 2 0) (3 0 0)) ((3 0 0) (4 0 0) (4 0 1)) ((1 1 0) (3 0 0) (4 0 0))
   ((0 0 1) (1 0 0) (3 0 0)) ((1 2 1) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Coach-TheWord (and (isa :NOUN SportsCoach))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coach-TheWord (and (isa :NOUN Tutor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coach-TheWord (and (isa :NOUN HorseCarriage))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coagulation-TheWord
 (and (isa :NOUN (CreationFn Clot))) (frame FN_Change_of_consistency)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) objectActedOn) (A eventOccursAt)
    (N objectActedOn subRegions))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 3 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "coal") Industry-TheWord
 (and (isa :NOUN CoalIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coal-TheWord (and (isa :NOUN Coal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coalition-TheWord
 (and (isa :NOUN Alliance-Organization)) (frame FN_Alliance)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor)) (:APPOSITIVE (NP fe_alliance))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "coast") Guard-TheWord
 (and (isa :NOUN CoastGuardOrganization)) (frame FN_Military)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coast") Range-TheWord
 (and (isa :NOUN CoastMountains)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coast-TheWord (and (isa :NOUN CoastalRegion))
 (frame FN_Relational_natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_container_possessor)
    (AJP fe_descriptor fe_landmark_feature fe_relative_location)
    (A fe_relative_location)
    ((PPFn of) fe_container_possessor fe_landmark_feature
     fe_relative_location))
   (:GAP (DEN fe_focal_feature) (DNI fe_landmark_feature))
   (:GEN (Poss fe_landmark_feature))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 1)) ((0 1 1)) ((0 2 0) (0 3 2)) ((0 1 2) (2 0 0))
   ((0 1 0) (0 3 1)) ((0 0 0) (0 1 2)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Coaster-TheWord (and (isa :NOUN CoasterForDrink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coat") Hanger-TheWord (and (isa :NOUN CoatHanger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coat" "of") Arms-TheWord
 (and (isa :NOUN HeraldicDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coat") Rack-TheWord (and (isa :NOUN CoatRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coat-TheWord (and (isa :NOUN Coat))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 1)) ((0 1 0)) ((0 3 0)) ((0 2 0)) ((0 3 2) (2 0 0))
   ((0 3 1) (2 0 0)) ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 3 1))
   ((0 2 0) (0 2 2)) ((0 2 0) (0 3 0)) ((0 2 0) (0 2 1)) ((0 0 0) (0 2 0))
   ((0 2 0) (0 2 0)) ((0 2 0) (0 3 1) (2 0 0)) ((0 2 0) (0 2 2) (2 0 0))
   ((0 0 0) (0 2 2) (0 3 1)) ((0 2 0) (0 3 0) (2 0 0))
   ((0 1 0) (0 2 0) (0 2 2)) ((0 2 0) (0 3 0) (0 3 1))
   ((0 2 0) (0 2 0) (2 0 0)) ((0 2 0) (0 2 0) (0 3 1) (2 0 0))
   ((0 2 0) (0 2 0) (0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Coating-TheWord (and (isa :NOUN CoatingMaterial))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coating") Material-TheWord
 (and (isa :NOUN CoatingMaterial)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coaxial") Cable-TheWord
 (and (isa :NOUN CoaxialCable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cobalt-TheWord (and (isa :NOUN Cobalt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cobber-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cobbler-TheWord (and (isa :NOUN ShoeCobbler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cobnut-TheWord (and (isa :NOUN FilbertTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cobra-TheWord (and (isa :NOUN Cobra))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coca") Cola-TheWord (and (isa :NOUN CocaCola))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coca-TheWord (and (isa :NOUN (LeafFn CocaPlant)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cocaine-TheWord (and (isa :NOUN Cocaine))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_country_of_origin fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 2)) ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "coccygeal") Plexus-TheWord
 (and (isa :NOUN CoccygealPlexus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coccygeal") Vertebra-TheWord
 (and (isa :NOUN CoccygealVertebra)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coccyx-TheWord (and (isa :NOUN Coccyx))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cochlea-TheWord (and (isa :NOUN Cochlea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cochlear") Implant-TheWord
 (and (isa :NOUN CochlearImplant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cock") Sucking-TheWord (and (isa :NOUN Fellatio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cock-TheWord (and (isa :NOUN (MaleFn Chicken)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cockateel-TheWord (and (isa :NOUN Cockatiel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cocker") Spaniel-TheWord
 (and (isa :NOUN CockerSpaniel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cockpit-TheWord (and (isa :NOUN AirplaneCockpit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cockroach-TheWord (and (isa :NOUN Cockroach))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cocktail-TheWord (and (isa :NOUN CocktailDrink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cocoa-TheWord (and (isa :NOUN Cocoa-ThePowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cocoa-TheWord (and (isa :NOUN HotChocolate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coconut") Milk-TheWord (and (isa :NOUN CoconutMilk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coconut") Oil-TheWord (and (isa :NOUN CoconutOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coconut") Palm-TheWord (and (isa :NOUN CoconutPalm))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coconut-TheWord (and (isa :NOUN CoconutMeat))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coconut-TheWord (and (isa :NOUN CoconutMilk))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coconut-TheWord (and (isa :NOUN Coconut-TheSeed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coconut-TheWord (and (isa :NOUN CoconutPalm))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cocoon-TheWord (and (isa :NOUN Cocoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cod-TheWord (and (isa :NOUN CodFish)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Code-TheWord (and (isa :NOUN Law)) (frame FN_Law)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Code-TheWord
 (and (isa :NOUN Code-CommunicationConvention)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Code-TheWord (and (isa :NOUN ComputerCode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Code-TheWord (and (isa :NOUN WrittenCodeOfConduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Codeine-TheWord (and (isa :NOUN CodeinePhosphate))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Codename-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn)
    (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Codeword-TheWord (and (isa :NOUN Communicating))
 (frame FN_Communication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coding") System-TheWord
 (and (isa :NOUN CommunicationConvention)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Codon-TheWord
 (and (isa :NOUN Codon-MolecularSegment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coefficient" "of") Elasticity-TheWord
 (and (isa :NOUN CoefficientOfElasticity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coffee") Bean-TheWord
 (and (isa :NOUN (SeedFn CoffeeBush))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coffee") Cup-TheWord (and (isa :NOUN CoffeeCup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coffee") Filter-TheWord
 (and (isa :NOUN CoffeeFilter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coffee") Maker-TheWord (and (isa :NOUN CoffeeMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coffee") Mill-TheWord (and (isa :NOUN CoffeeGrinder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coffee") Mug-TheWord (and (isa :NOUN CoffeeCup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coffee-TheWord (and (isa :NOUN Coffee-Beverage))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType) (NP activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "coffee") Bush-TheWord (and (isa :NOUN CoffeeBush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coffeepot-TheWord (and (isa :NOUN HotBeveragePot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coffer-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP mainConstituent) (N mainConstituent))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Coffin-TheWord (and (isa :NOUN Coffin))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent) ((PPFn in) fe_relative_location)
    ((PPFn on) fe_relative_location)
    (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 3 0)) ((0 0 0))
   ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Cognition-TheWord (and (isa :NOUN Cognition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cognitive") Psychology-TheWord
 (and (isa :NOUN CognitivePsychology)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cognitive") Science-TheWord
 (and (isa :NOUN CognitiveScience)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cognomen-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cohabitation-TheWord
 (and (isa :NOUN CohabitationSituation)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn for) fe_partners))
   (:OBLIQUE-OBJECT ((PPFn by) fe_partner_1) ((PPFn with) fe_partner_2)
    ((PPFn of) fe_partner_1 fe_partners))
   (:GAP (DNI fe_partner_1 fe_partners)
    (INI fe_partner_1 fe_partner_2 fe_partners) (DEN fe_relationship))))
 (groupPatterns
  (TheSet ((1 2 1)) ((0 0 0)) ((1 0 0)) ((1 1 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Cohesiveness-TheWord (and (isa :NOUN Cohesiveness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cohort-TheWord
 (and (isa :NOUN GroupOfRelativelyHomogenousObjects)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) (N fe_aggregate_property)
    ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Coif-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Coil-TheWord (and (isa :NOUN Helix))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed) (N stuffUsed)
    ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns (TheSet ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "coin") Collecting-TheWord
 (and (isa :NOUN Collecting-Hobby) (objectTypesCollected :NOUN Coin-Currency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coin-Slot-TheWord (and (isa :NOUN CoinSlot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coin-TheWord (and (isa :NOUN Coin-Currency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coinage-TheWord (and (isa :NOUN InventingSomething))
 (frame FN_Achieving_first) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coinage-TheWord
 (and (isa :NOUN DiscoveringSomething)) (frame FN_Achieving_first)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coinage-TheWord (and (isa :NOUN Pioneer))
 (frame FN_Achieving_first) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coincidence-TheWord (and (isa :NOUN Situation))
 (frame FN_Coincidence)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt)
    (Sub fe_state_of_affairs) (Sfin fe_state_of_affairs)
    (VPbrst fe_state_of_affairs) (NP temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (2nd eventOccursAt temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 4 0) (0 5 0)) ((0 2 0) (0 6 0)) ((0 2 0) (0 5 0))
   ((0 3 0) (0 5 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 2 0) (0 6 0))
   ((0 0 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Coke-TheWord (and (isa :NOUN Cocaine))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Coke-TheWord (and (isa :NOUN CokeFuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Col-TheWord (and (isa :NOUN Gap-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cola-TheWord (and (isa :NOUN ColaSoftDrink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colander-TheWord (and (isa :NOUN Colander))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cold") Cereal-TheWord (and (isa :NOUN ColdCereal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cold") Compress-TheWord (and (isa :NOUN ColdPack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cold") Front-TheWord (and (isa :NOUN ColdFrontEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cold") Sore-TheWord (and (isa :NOUN OralHerpes))
 (frame FN_Body_mark) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cold-TheWord (and (isa :NOUN Cold))
 (frame FN_Ambient_temperature)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) temporallyIntersects))
   (:GAP (DEN ambientTemperature))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cold-TheWord (and (isa :NOUN CommonCold))
 (frame FN_Medical_conditions)
 (bindingTemplate (TheList (:SUBJECT (NP objectActedOn)) (:GAP (DEN infects))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "cold") War-TheWord (and (isa :NOUN WagingAColdWar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coldness-TheWord (and (isa :NOUN EmotionalColdness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colitis-TheWord (and (isa :NOUN HemorrhagicColitis))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collaboration-TheWord
 (and (isa :NOUN ActingInConcert)) (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partners))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_1) ((PPFn with) fe_partner_2)
    ((PPFn between) fe_partners) ((PPFn on) fe_undertaking)
    ((PPFn in) eventOccursAt fe_undertaking) ((PPFn over) fe_undertaking)
    (A fe_partners fe_undertaking)
    (N duration fe_partners temporallyIntersects fe_undertaking)
    ((PPFn for) fe_undertaking)
    (AJP fe_manner fe_partners temporallyIntersects fe_undertaking)
    ((PPFn against) fe_undertaking) ((PPingFn in) fe_undertaking))
   (:GAP (INI fe_partner_1))
   (:GEN (Poss fe_partner_1 fe_partners fe_undertaking))))
 (groupPatterns
  (TheSet ((3 0 2)) ((1 11 0)) ((1 3 0)) ((1 4 1)) ((1 10 0)) ((1 7 3))
   ((1 9 3)) ((3 0 1)) ((1 2 0)) ((1 7 1)) ((1 9 1)) ((1 6 0)) ((1 1 0))
   ((1 9 0)) ((1 7 2) (3 0 2)) ((1 4 1) (1 9 2)) ((1 4 1) (3 0 1))
   ((1 8 0) (3 0 1)) ((1 7 3) (3 0 1)) ((1 3 0) (1 7 1)) ((1 7 1) (1 8 0))
   ((1 4 1) (1 9 1)) ((1 3 0) (1 6 0)) ((1 6 0) (1 7 3)) ((1 9 2) (3 0 1))
   ((1 1 0) (3 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 1 0)) ((1 2 0) (1 9 0))
   ((1 7 1) (1 9 0)) ((1 3 0) (1 7 0)) ((1 1 0) (1 6 1) (3 0 0))
   ((1 4 1) (1 9 0) (1 9 1)) ((1 1 0) (1 9 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 9 0)) ((0 0 1) (1 4 0) (1 5 0) (1 9 0)))))

(FNNounSemtrans (TheList) Collaboration-TheWord
 (and (isa :NOUN CollaboratingWithTheEnemy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collaborator-TheWord
 (and (isa :NOUN ActingInConcert)) (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT (NP fe_partner_1) ((PPFn of) duration fe_partner_2)
    ((PPFn with) fe_partner_2) (A temporallyIntersects)
    (AJP duration fe_manner fe_undertaking) (N fe_undertaking)
    ((PPFn on) fe_undertaking) ((PPFn in) fe_undertaking)
    ((PPFn for) fe_undertaking))
   (:GAP (INI fe_partner_2) (DEN fe_partner_1 fe_partners)
    (DNI fe_partner_2 fe_undertaking))
   (:GEN (Poss fe_partner_2)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((3 0 0)) ((1 2 0)) ((0 0 1)) ((3 0 0) (4 0 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 1)) ((1 0 0) (1 4 0))
   ((0 0 0) (1 6 0) (3 0 0)) ((0 0 0) (1 4 2) (3 0 0))
   ((1 0 0) (1 5 0) (3 0 0)) ((1 4 2) (3 0 0) (4 0 0))
   ((0 0 0) (1 1 1) (1 4 1)) ((1 4 1) (3 0 0) (4 0 0))
   ((1 1 0) (3 0 0) (4 0 0)) ((0 0 0) (1 4 0) (3 0 0))
   ((0 0 0) (1 3 0) (1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Collaborator-TheWord (and (isa :NOUN Collaborator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collagen-TheWord (and (isa :NOUN Collagen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collar-TheWord (and (isa :NOUN CollarOfGarment))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) (InverseBinaryPredicateFn outfitParts))
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent)
    ((PPFn of) (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 1)) ((0 0 0)) ((0 2 0)) ((0 1 0))
   ((0 1 0) (2 0 0)) ((0 1 1) (0 2 0)))))

(FNNounSemtrans (TheList "collared") Peccary-TheWord (and (isa :NOUN Javelina))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colleague-TheWord
 (and (isa :NOUN Person) (relationExistsInstance coworkers Person :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collection-TheWord (and (isa :NOUN Collection))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) (Srel fe_aggregate_property)
    ((PPFn of) fe_individuals) (N fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals) (INI fe_individuals))
   (:NOUN (NP fe_aggregate))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 0 0) (0 0 0)) ((0 2 0) (2 0 0))
   ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Collection-TheWord
 (and (isa :NOUN (MakingAbstractFn Group))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collection-TheWord
 (and (isa :NOUN (MakingAvailableFn Group))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collection-TheWord (and (isa :NOUN Group))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collective-TheWord
 (and (isa :NOUN CooperativeOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collectivist-TheWord
 (and (isa :NOUN (BelieverFn LeftistIdeology))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collectivist-TheWord (and (isa :NOUN Leftist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collectivization-TheWord
 (and (isa :NOUN Collectivization)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collector-TheWord (and (isa :NOUN Collector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "college") Student-TheWord
 (and (isa :NOUN UniversityStudent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) College-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    (AJP locationUse))
   (:GAP (DEN eventLocale) (DNI locationUse) (INI locationUse))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) College-TheWord (and (isa :NOUN College))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) College-TheWord (and (isa :NOUN University))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collie-TheWord (and (isa :NOUN Collie))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Collision-TheWord (and (isa :NOUN Collision))
 (frame FN_Impact)
 (bindingTemplate
  (TheList (:SUBJECT (NP primaryObjectMoving objectMoving))
   (:OBLIQUE-OBJECT ((PPFn with) objectActedOn) ((PPFn between) objectMoving)
    ((PPFn of) objectMoving) (A pressureApplied) ((PPFn on) eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn off) eventOccursAt)
    (AJP impactForce objectMoving eventOutcomes)
    (N primaryObjectMoving objectMoving eventOccursAt subRegions)
    ((PPFn during) temporallyIntersects) (Sinterrog temporallyIntersects)
    (NP temporallyIntersects) ((PPFn ago) temporallyIntersects)
    ((PPFn after) temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects))
   (:GEN (Poss primaryObjectMoving objectMoving))))
 (groupPatterns
  (TheSet ((1 14 1)) ((1 8 3)) ((1 5 0)) ((1 14 0)) ((1 2 0)) ((1 1 0))
   ((0 0 1)) ((1 8 1)) ((1 8 0)) ((1 0 0)) ((1 10 0) (1 14 1))
   ((1 6 0) (1 13 0)) ((1 3 0) (1 4 0)) ((1 1 0) (1 7 2)) ((1 2 0) (1 8 2))
   ((1 1 0) (1 8 2)) ((1 1 0) (1 3 0)) ((1 0 0) (1 9 0)) ((1 0 0) (1 3 0))
   ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0)) ((1 12 0) (1 14 0) (2 0 1))
   ((1 11 0) (1 14 0) (2 0 1)) ((1 1 0) (1 5 0) (1 10 0))
   ((1 1 0) (1 5 0) (1 5 0)) ((1 4 0) (1 7 1) (1 14 0))
   ((0 0 0) (1 0 0) (1 9 0)) ((0 0 0) (1 0 0) (1 7 0)))))

(FNNounSemtrans (TheList) Colloid-TheWord (and (isa :NOUN Colloid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colloquy-TheWord (and (isa :NOUN Conversation))
 (frame FN_Chatting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1))
   (:OBLIQUE-OBJECT ((PPFn with) fe_interlocutor_2) (AJP fe_manner)
    ((PPFn on) situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 2 0)) ((2 0 1)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Collusion-TheWord
 (and (isa :NOUN ConsociatingSomething)) (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (Poss fe_partner_1) (NP fe_partner_1 fe_partners))
   (:OBLIQUE-OBJECT (A fe_manner) (AJP fe_manner) ((PPFn from) fe_partner_2)
    ((PPFn with) fe_partner_2)
    ((PPFn of) fe_partner_1 fe_partner_2 fe_partners)
    (NP fe_partner_1 fe_partners) ((PPFn among) fe_partners)
    ((PPFn between) fe_partners) ((PPFn in) fe_undertaking)
    (VPto fe_undertaking) ((PPFn to) fe_undertaking)
    ((PPingFn in) fe_undertaking))
   (:GAP (DNI fe_partner_2)) (:GEN (Poss fe_partner_1))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 11 0)) ((1 4 2)) ((1 7 0)) ((1 6 0)) ((0 1 1))
   ((1 5 1)) ((1 3 0)) ((1 4 1)) ((0 0 0)) ((1 5 0)) ((1 1 0)) ((1 0 0))
   ((1 7 0) (1 9 0)) ((1 7 0) (1 10 0)) ((1 7 0) (1 8 0)) ((0 1 1) (1 9 0))
   ((1 8 0) (3 0 0)) ((0 0 0) (1 3 0)) ((1 3 0) (1 4 0)) ((0 1 0) (1 3 0))
   ((1 3 0) (1 5 0)) ((1 1 0) (1 4 2) (1 8 0)) ((0 1 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList "colon") Cancer-TheWord
 (and (isa :NOUN (CancerFn Colon-BodyPart))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "colon") Cancer-TheWord (and (isa :NOUN ColonCancer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colon-TheWord (and (isa :NOUN Colon-BodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colon-TheWord (and (isa :NOUN Colon-CostaRica))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colon-TheWord (and (isa :NOUN Colon-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colonist-TheWord (and (isa :NOUN Colonization))
 (frame FN_Colonization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A originallyFromRegion))
   (:GAP (DEN fe_colonists))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Colonoscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colony-TheWord
 (and (isa :NOUN Colony-GeopoliticalEntity)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Colony-TheWord (and (isa :NOUN Colonization))
 (frame FN_Colonization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) fe_new_area))
   (:GAP (DNI fe_colonists originallyFromRegion) (DEN fe_new_area))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Colony-TheWord
 (and (isa :NOUN BritishColoniesThatFormedTheUnitedStates)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "color" "electronic" "display") Device-TheWord
 (and (isa :NOUN ColorElectronicDisplayDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "color") Television-TheWord
 (and (isa :NOUN ColorTelevision)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Color-TheWord (and (isa :NOUN Color))
 (frame FN_Color)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N mainColorOfObject objectActedOn)
    (AJP objectHasColor fe_comparand fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_attribute mainColorOfObject)
    (DNI mainColorOfObject objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 0 1)) ((1 1 0)) ((1 0 0)) ((0 0 0) (0 0 0))
   ((1 1 2) (1 1 3)) ((1 1 0) (1 1 0)) ((0 0 0) (1 1 0) (1 1 1))
   ((0 0 0) (1 0 0) (1 1 2)))))

(FNNounSemtrans (TheList) Colorimeter-TheWord (and (isa :NOUN Colorimeter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coloring") Book-TheWord
 (and (isa :NOUN ColoringBook)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Colt-TheWord (and (isa :NOUN Colt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Column-TheWord (and (isa :NOUN Pillar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coma") Berenices-TheWord
 (and (isa :NOUN ComaBerenices-Constellation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comb-TheWord (and (isa :NOUN CombForHair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Combat-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn over) fe_issue) (AJP fe_manner by-Underspecified)
    ((PPFn within) eventOccursAt) ((PPFn on) eventOccursAt)
    (VPto fe_issue purposeOfEvent) ((PPFn for) purposeOfEvent)
    ((PPFn against) fe_side_2) ((PPFn with) fe_side_2)
    ((PPFn between) fe_sides) ((PPFn in) temporallyIntersects)
    ((PPFn of) temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 1 1)) ((1 4 0)) ((0 0 0) (1 7 0)) ((0 0 0) (1 6 0))
   ((0 0 1) (1 5 0)) ((0 0 1) (1 3 0)) ((1 1 1) (1 10 0)) ((1 1 1) (1 9 0))
   ((0 0 0) (1 1 1) (1 7 0)) ((0 0 0) (1 1 1) (1 4 1))
   ((0 0 1) (1 0 0) (1 1 1)) ((0 0 0) (1 1 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList "combination") Lock-TheWord
 (and (isa :NOUN CombinationLock)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Combination-TheWord (and (isa :NOUN Combination))
 (frame FN_Key) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Combine-TheWord
 (and (isa :NOUN HarvesterAgriculturalImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "combusion" "heating") Element-TheWord
 (and (isa :NOUN CombustionHeatingElement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "combustion") Device-TheWord
 (and (isa :NOUN CombustionDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "combustion") Reaction-TheWord
 (and (isa :NOUN CombustionReaction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Combustion-TheWord
 (and (isa :NOUN CombustionProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comeback-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comedian-TheWord (and (isa :NOUN Comedian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comedienne-TheWord (and (isa :NOUN Comedian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comedy-TheWord
 (and (isa :NOUN PropositionalConceptualWork-ComedyGenre)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn about) situationTopic) (NP situationTopic)
    (AJP authorOfLiteraryWork-CW situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 0 0)) ((2 0 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0))
   ((0 2 1) (2 0 0)))))

(FNNounSemtrans (TheList) Comestible-TheWord (and (isa :NOUN EdibleStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comet-TheWord (and (isa :NOUN Comet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comfort-TheWord (and (isa :NOUN ComfortLevel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comforter-TheWord
 (and (isa :NOUN Comforter-BedCover)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "comic") Book-TheWord
 (and (isa :NOUN ComicBookSeries)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "comic") Strip-TheWord (and (isa :NOUN ComicStrip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comic-TheWord (and (isa :NOUN Cartoon-Still))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comma-TheWord (and (isa :NOUN Comma-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "command") Ship-TheWord (and (isa :NOUN CommandShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Command-TheWord (and (isa :NOUN Command))
 (frame FN_Control) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Command-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (INI leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Command-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy situationTopic))
   (:OBLIQUE-OBJECT (NP infoTransferred)
    ((PPFn for) recipientOfInfo infoTransferred)
    ((PPFn of) recipientOfInfo infoTransferred) ((PPFn to) infoTransferred)
    (QUO infoTransferred))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 0 2)) ((2 0 0)) ((0 0 1)) ((1 4 0)) ((1 3 0)) ((1 2 1)) ((1 1 1))
   ((0 0 0)) ((1 0 0)) ((1 2 0)) ((1 2 1) (2 0 0)) ((1 0 0) (2 0 0))
   ((0 0 1) (1 1 0)))))

(FNNounSemtrans (TheList) Commandant-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_governed) ((PPFn of) fe_governed)
    ((PPFn to) fe_governed) ((PPFn in) eventOccursAt))
   (:GAP (DEN leadersOfMovement)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((0 0 0) (1 3 0))
   ((0 0 1) (1 1 0)) ((1 0 1) (3 0 0)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Commander-TheWord
 (and (isa :NOUN Commander-USArmyStaff)) (frame FN_Appellations)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commander-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_domain fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_domain) ((PPFn on) duration) ((PPFn at) fe_governed)
    (AJP fe_domain duration fe_governed) ((PPFn from) fe_governed)
    ((PPFn of) fe_governed) (NP leadersOfMovement) (A activeIngredientsOfType))
   (:GAP (DNI fe_governed) (DEN leadersOfMovement)) (:GEN (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 0)) ((1 4 0)) ((0 0 1)) ((1 6 0)) ((1 3 2))
   ((0 0 2) (1 5 0)) ((1 5 0) (4 0 0)) ((1 1 0) (3 0 0)) ((1 3 1) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 3 2)) ((1 2 0) (1 3 0))
   ((1 6 0) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Commandment-TheWord (and (isa :NOUN Commandment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commando-TheWord
 (and (isa :NOUN CommandoUnit-MilitarySpecialty)) (frame FN_Member_of_military)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commemoration-TheWord (and (isa :NOUN Commemoration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commencement-TheWord
 (and (isa :NOUN GraduationCeremony)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commencement-TheWord
 (and (isa :NOUN AnEventBeginningSomething)) (frame FN_Process_start)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_event) ((PPingFn of) fe_event))
   (:GEN (Poss fe_event))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Commendation-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo fe_reason))
   (:OBLIQUE-OBJECT ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn of) objectOfEvaluation)
    (AJP fe_manner) ((PPFn in) fe_reason)
    ((PPFn for) objectOfEvaluation fe_reason))
   (:GEN (Poss communicatorOfInfo objectOfEvaluation))))
 (groupPatterns
  (TheSet ((1 5 1)) ((0 0 1)) ((1 3 0)) ((2 0 1)) ((1 2 0)) ((1 5 0)) ((2 0 0))
   ((1 1 0)) ((0 0 0)) ((1 5 1) (2 0 0)) ((1 1 0) (1 5 1)) ((1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Comment-TheWord (and (isa :NOUN Commentary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comment-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList
   (:SUBJECT ((PPFn in) genericPathway-Partial)
    (NP recipientOfInfo genericPathway-Partial performedBy situationTopic))
   (:OBLIQUE-OBJECT ((PPFn at) recipientOfInfo)
    ((PPFn over) genericPathway-Partial) ((PPFn like) infoTransferred)
    ((PPingFn about) infoTransferred) (QUO infoTransferred)
    (Sfin infoTransferred) (VPing infoTransferred)
    ((PPFn in) genericPathway-Partial eventOccursAt) ((PPFn from) performedBy)
    ((PPFn by) performedBy) ((PPFn of) performedBy)
    ((PPingFn from) performedBy) (AJP fe_internal_cause fe_manner performedBy)
    ((PPFn among) performedBy) ((PPFn about) fe_manner situationTopic)
    ((PPFn regarding) situationTopic) ((PPFn on) situationTopic)
    ((PPFn against) situationTopic) ((PPFn to) recipientOfInfo situationTopic)
    ((PPFn concerning) situationTopic) ((PPFn as) situationTopic)
    ((PPingFn on) situationTopic))
   (:GAP (CNI performedBy) (DNI situationTopic)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 21 0)) ((1 16 0)) ((1 20 0)) ((1 14 1)) ((1 15 0)) ((3 0 0))
   ((1 10 0)) ((1 8 0)) ((1 9 0)) ((1 13 0)) ((0 1 2)) ((1 12 2)) ((1 5 0))
   ((1 3 0)) ((1 14 0)) ((1 12 1)) ((1 12 0)) ((1 18 0)) ((0 1 3) (1 8 0))
   ((1 9 0) (1 16 0)) ((1 9 0) (1 14 1)) ((0 1 2) (1 15 0)) ((0 1 2) (1 16 0))
   ((0 1 2) (1 19 0)) ((0 1 2) (1 14 1)) ((0 1 2) (1 10 0)) ((1 6 0) (1 11 0))
   ((1 5 0) (1 8 0)) ((1 5 0) (1 9 0)) ((0 1 2) (1 5 0)) ((1 4 0) (1 8 0))
   ((0 0 0) (0 1 3)) ((0 1 1) (1 8 0)) ((1 12 1) (1 15 0)) ((1 10 0) (1 12 1))
   ((1 9 0) (1 12 1)) ((0 1 2) (1 12 1)) ((1 3 0) (1 12 1)) ((1 7 0) (1 12 1))
   ((1 16 0) (1 18 0)) ((0 1 2) (1 18 0)) ((1 0 0) (1 12 1))
   ((0 1 2) (0 1 2) (1 18 1)) ((1 9 0) (1 12 1) (1 16 0))
   ((0 1 2) (1 12 1) (1 14 1)) ((1 7 1) (1 12 1) (1 17 0))
   ((0 1 2) (1 2 0) (1 12 1)) ((0 1 2) (1 1 0) (1 12 1))
   ((1 7 0) (1 9 0) (1 12 1)) ((0 1 2) (1 15 0) (1 18 0))
   ((0 1 2) (1 14 1) (1 18 0)) ((0 1 2) (1 12 1) (1 18 0))
   ((0 1 0) (1 8 0) (1 12 1)))))

(FNNounSemtrans (TheList) Commerce-TheWord
 (and (isa :NOUN Event) (relationInstanceExists subEvents :NOUN Buying))
 (frame FN_Commerce_scenario)
 (bindingTemplate
  (TheList
   (:GAP (INI buyer objectOfPossessionTransfer moneyTransferred seller))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commerce-TheWord (and (isa :NOUN CommercialActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "commercial" "passenger" "airplane") Cabin-TheWord
 (and (isa :NOUN CommercialPassengerAirplaneCabin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commiseration-TheWord (and (isa :NOUN Pity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commission-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commission-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Committing_crime) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commission-TheWord
 (and (isa :NOUN HiringSomeoneToDoSomething)) (frame FN_Hiring)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commission-TheWord
 (and (isa :NOUN CommissionAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "commissioned" "military") Officer-TheWord
 (and (isa :NOUN CommissionedOfficer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "commissioned") Officer-TheWord
 (and (isa :NOUN CommissionedOfficer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commissioner-TheWord
 (and (isa :NOUN Commissioner-Rank)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Commitment-TheWord (and (isa :NOUN Commitment))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N infoTransferred) ((PPingFn to) infoTransferred)
    (VPto infoTransferred) ((PPFn to) infoTransferred situationTopic))
   (:GAP (2nd recipientOfInfo) (INI recipientOfInfo infoTransferred)
    (DNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 3 1) (3 0 0)) ((1 2 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 1 0) (3 0 0)) ((1 3 0) (3 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Commitment-TheWord
 (and (isa :NOUN CommittingSomeoneToAnInstitution))
 (frame FN_Institutionalization) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "committee") Member-TheWord
 (and (isa :NOUN CommitteeMember)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Committee-TheWord
 (and (isa :NOUN Committee-Organization)) (frame FN_Organization)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commodity-TheWord (and (isa :NOUN CommodityProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "common" "bile") Duct-TheWord
 (and (isa :NOUN CommonBileDuct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "common" "carotid") Artery-TheWord
 (and (isa :NOUN CommonCarotidArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "common") Cold-TheWord (and (isa :NOUN CommonCold))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "common" "iliac") Artery-TheWord
 (and (isa :NOUN CommonIliacArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "common" "iliac") Vein-TheWord
 (and (isa :NOUN CommonIliacVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "common") Sense-TheWord (and (isa :NOUN CommonSense))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPto objectOfCritique))
   (:GAP (DEN objectOfCritique))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "common") Wormwood-TheWord (and (isa :NOUN Wormwood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commonwealth-TheWord
 (and (isa :NOUN GeopoliticalEntity)) (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_population)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "communicable") Disease-TheWord
 (and (isa :NOUN CloseContactTransmittedInfection)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Communication-TheWord (and (isa :NOUN Communicating))
 (frame FN_Communication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "communications") Satellite-TheWord
 (and (isa :NOUN CommunicationsSatellite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Communicator-TheWord (and (isa :NOUN Communicator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Communion-TheWord (and (isa :NOUN ReligiousCeremony))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP activeIngredientsOfType))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt temporallyIntersects)
    (AJP activeIngredientsOfType) (N activeIngredientsOfType))
   (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((1 0 1)) ((1 1 0) (1 1 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Communism-TheWord (and (isa :NOUN Communism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Community-TheWord (and (isa :NOUN (GroupFn Animal)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_individuals))
   (:OBLIQUE-OBJECT (VPed fe_aggregate_property)
    (AJP fe_aggregate_property fe_container_possessor)
    (A fe_aggregate_property fe_individuals)
    (N fe_aggregate_property fe_container_possessor fe_domain fe_individuals)
    ((PPFn of) fe_aggregate_property fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals) (INI fe_individuals))
   (:GEN (Poss fe_aggregate_property fe_container_possessor))))
 (groupPatterns
  (TheSet ((1 3 2)) ((1 4 1)) ((1 3 3)) ((1 2 1)) ((1 1 1)) ((3 0 0)) ((1 3 0))
   ((1 2 0)) ((1 1 0) (3 0 1)) ((1 1 0) (1 3 1)) ((1 1 0) (1 4 0))
   ((1 2 0) (1 3 0)) ((0 0 0) (1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Commutation-TheWord (and (isa :NOUN Clemency))
 (frame FN_Commutation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commutation-TheWord
 (and (isa :NOUN (EndingFn Punishment))) (frame FN_Commutation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Commutator-TheWord
 (and (isa :NOUN Commutator-Electric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact" "disc") Organizer-TheWord
 (and (isa :NOUN CompactDiscOrganizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact" "disc" "player") Mechanism-TheWord
 (and (isa :NOUN CompactDiscPlayerMechanism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact" "disc") Player-TheWord
 (and (isa :NOUN CompactDiscPlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact") Disc-TheWord
 (and (isa :NOUN CompactDisc-Audio)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact") Disc-TheWord
 (and (isa :NOUN CompactDisc-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact") Disk-TheWord
 (and (isa :NOUN CompactDisc-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact" "flourescent") Lamp-TheWord
 (and (isa :NOUN LightBulb-CompactFlourescent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compact" "home" "stereo") System-TheWord
 (and (isa :NOUN CompactStereoSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compact-TheWord (and (isa :NOUN CompactCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "companion") Piece-TheWord
 (and (isa :NOUN CompanionPiece-Dinnerware)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Companion-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2 fe_partners))
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn of) fe_partner_2)
    ((PPFn to) fe_partner_2))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partners))
   (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((0 0 2)) ((0 0 0)) ((3 0 0)) ((1 1 0)) ((0 0 1)) ((1 0 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Company-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:SUBJECT (N fe_business) (NP fe_business fe_business_name))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) (Srel fe_descriptor)
    ((PPFn in) eventOccursAt) ((PPFn at) eventOccursAt)
    (NP fe_business_name eventOccursAt fe_product)
    ((PPFn of) fe_business_name ownerOfProprietaryThing)
    (A fe_descriptor eventOccursAt fe_product ownerOfProprietaryThing)
    (Poss ownerOfProprietaryThing) (VPing fe_service_provider)
    (AJP fe_descriptor eventOccursAt ownerOfProprietaryThing
     fe_service_provider)
    (N fe_business_name fe_descriptor eventOccursAt fe_product
     ownerOfProprietaryThing fe_service_provider))
   (:GAP (DEN fe_business) (2nd fe_business_name))
   (:APPOSITIVE (NP fe_business fe_business_name))))
 (groupPatterns
  (TheSet ((1 10 5)) ((1 10 4)) ((1 9 2)) ((1 4 2)) ((1 10 3)) ((1 2 0))
   ((1 4 1)) ((1 10 2)) ((1 9 1)) ((1 6 1)) ((1 9 0)) ((0 1 1)) ((1 4 0))
   ((1 10 0)) ((1 2 0) (1 7 0)) ((1 2 0) (1 10 3)) ((1 3 0) (1 10 3))
   ((1 9 3) (1 10 1)) ((1 6 3) (1 10 1)) ((1 5 1) (1 9 0)) ((1 6 2) (1 10 1))
   ((1 9 0) (1 10 3)) ((1 6 2) (1 9 0)) ((1 6 1) (1 9 0)) ((1 9 0) (1 9 0))
   ((1 10 3) (3 0 0)) ((1 10 0) (1 10 3)) ((1 6 1) (3 0 0)) ((1 6 1) (3 0 1))
   ((0 1 0) (1 1 0)) ((0 1 0) (1 9 0)) ((0 0 0) (1 0 0))
   ((1 8 0) (1 9 0) (1 9 1)) ((1 2 0) (1 9 0) (1 10 4))
   ((1 6 0) (1 9 0) (1 9 0)) ((0 1 0) (1 9 0) (1 10 1))
   ((1 5 0) (1 10 2) (1 10 3)) ((1 2 0) (1 10 0) (1 10 3))
   ((0 1 0) (1 1 0) (1 6 1)))))

(FNNounSemtrans (TheList) Comparison-TheWord
 (and (isa :NOUN Comparison-Examination)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compartment-TheWord (and (isa :NOUN Compartment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compass") Point-TheWord
 (and (isa :NOUN CompassPoint)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compass-TheWord (and (isa :NOUN Compass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compassion-TheWord (and (isa :NOUN Empathy))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn towards) topicOfIndividual)
    ((PPingFn for) topicOfIndividual)
    ((PPFn for) topicOfIndividual objectActedOn) ((PPFn of) objectActedOn)
    (AJP (InverseBinaryPredicateFn explains-Generic)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 3 0)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((0 2 1) (0 4 0))
   ((0 2 0) (1 0 0)))))

(FNNounSemtrans (TheList) Compassion-TheWord (and (isa :NOUN Compassion))
 (frame FN_Social_interaction_evaluation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compatibility-TheWord (and (isa :NOUN Compatibility))
 (frame FN_Compatibility)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_item_2) ((PPingFn with) fe_item_2)
    ((PPFn between) fe_items) ((PPFn of) fe_item_1 fe_items)
    (N fe_degree fe_item_2 fe_items fe_parameter) (A fe_parameter)
    (AJP fe_degree fe_item_2 fe_parameter))
   (:GAP (INI fe_item_1 fe_item_2) (DNI fe_items))
   (:GEN (Poss fe_item_1 fe_items))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 3 1)) ((0 2 0)) ((0 4 2)) ((0 3 0)) ((0 6 0))
   ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 4 1) (2 0 0)) ((0 6 1) (2 0 0))
   ((0 0 0) (0 3 0)) ((0 3 0) (0 4 1)) ((0 2 0) (0 6 0)) ((0 0 0) (0 4 0))
   ((0 0 0) (0 6 0)) ((0 1 0) (0 5 0) (0 6 2)) ((0 0 0) (0 6 2) (2 0 0))
   ((0 0 0) (0 4 3) (0 6 0)))))

(FNNounSemtrans (TheList) Compensation-TheWord (and (isa :NOUN Compensation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Competence-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Competition-TheWord (and (isa :NOUN Competition))
 (frame FN_Competition)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy doneBy))
   (:OBLIQUE-OBJECT ((PPFn in) fe_competition) (A frequencyOfEvent)
    (AJP fe_degree fe_manner) ((PPFn by) doneBy) ((PPFn against) doneBy)
    ((PPFn among) doneBy) (N fe_competition fe_manner doneBy)
    (VPto fe_competition purposeOfEvent) ((PPFn for) fe_prize purposeOfEvent)
    ((PPFn as) purposeOfEvent) (NP duration temporallyIntersects)
    ((PPFn from) doneBy temporallyIntersects))
   (:GAP (DEN fe_competition) (INI doneBy doneBy) (DNI doneBy doneBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 0)) ((1 6 2)) ((0 0 0)) ((1 6 1)) ((1 2 0)) ((1 7 0))
   ((1 0 0)) ((1 5 0) (1 9 0)) ((1 3 0) (1 8 1)) ((1 2 1) (1 5 0))
   ((1 2 1) (1 6 1)) ((1 7 1) (1 10 0)) ((1 2 0) (1 11 0))
   ((1 1 0) (1 6 1) (1 8 0)) ((0 0 0) (1 2 1) (1 7 0))
   ((1 4 0) (1 6 1) (1 10 1) (1 11 1)))))

(FNNounSemtrans (TheList) Competitor-TheWord (and (isa :NOUN Competition))
 (frame FN_Competition)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy doneBy doneBy))
   (:OBLIQUE-OBJECT (N fe_competition) ((PPFn for) fe_competition)
    ((PPFn in) fe_competition) (VPing fe_competition)
    (AJP fe_competition fe_rank))
   (:GAP (DEN doneBy doneBy doneBy)) (:GEN (Poss doneBy))
   (:APPOSITIVE (NP doneBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((3 0 0)) ((0 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((1 4 0)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 2 0) (3 0 0)) ((1 2 0) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Compiler-TheWord (and (isa :NOUN Compiler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Complainer-TheWord
 (and (isa :NOUN (FrequentPerformerFn Complaining))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Complaint-TheWord (and (isa :NOUN Complaining))
 (frame FN_Complaining)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo senderOfInfo complaintIssued))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn from) senderOfInfo)
    ((PPFn by) senderOfInfo) (Sfin complaintIssued)
    ((PPFn of) senderOfInfo complaintIssued) (QUO complaintIssued)
    ((PPingFn of) complaintIssued)
    (AJP senderOfInfo fe_manner genericPathway-Partial)
    ((PPingFn in) genericPathway-Partial) ((PPFn at) temporallyIntersects)
    ((PPFn against) situationTopic) (NP complaintIssued situationTopic)
    ((PPFn with) situationTopic) ((PPFn about) situationTopic)
    ((PPFn over) situationTopic) (VPing situationTopic)
    ((PPFn concerning) situationTopic) ((PPingFn over) situationTopic))
   (:GAP (CNI senderOfInfo)) (:GEN (Poss senderOfInfo))))
 (groupPatterns
  (TheSet ((1 15 0)) ((1 17 0)) ((1 16 0)) ((1 10 0)) ((1 13 0)) ((1 3 0))
   ((1 6 0)) ((1 4 1)) ((3 0 0)) ((1 1 0)) ((1 2 0)) ((0 0 1))
   ((1 10 0) (3 0 0)) ((1 13 0) (3 0 0)) ((1 1 0) (1 15 0)) ((1 1 0) (1 13 0))
   ((1 2 0) (1 13 0)) ((0 0 1) (1 12 0)) ((0 0 1) (1 14 0)) ((0 0 1) (1 10 0))
   ((0 0 1) (1 13 0)) ((1 3 0) (3 0 0)) ((1 3 0) (1 4 0)) ((1 1 0) (1 3 0))
   ((1 2 0) (1 4 1)) ((0 0 1) (1 3 0)) ((0 0 0) (1 10 0)) ((0 0 1) (1 0 0))
   ((0 0 0) (1 1 0)) ((1 3 0) (1 16 0) (3 0 0)) ((1 3 0) (1 13 0) (3 0 0))
   ((0 0 2) (1 10 0) (3 0 0)) ((1 3 0) (1 4 0) (1 10 0))
   ((1 1 0) (1 3 0) (1 10 0)) ((1 3 0) (1 7 0) (1 10 0))
   ((1 5 0) (1 11 0) (3 0 0)) ((0 0 1) (1 13 0) (3 0 0))
   ((0 0 1) (0 0 1) (1 12 0)) ((0 0 1) (1 0 0) (1 11 1))
   ((0 0 1) (1 0 0) (1 8 0)) ((1 0 0) (1 9 0) (3 0 0))
   ((0 0 1) (0 0 1) (1 0 0)) ((0 0 1) (1 0 0) (1 7 1) (1 7 2)))))

(FNNounSemtrans (TheList "complete" "home" "storage") System-TheWord
 (and (isa :NOUN HomeStorageSystem-Complete)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Completion-TheWord
 (and (isa :NOUN CompletingAnAction)) (frame FN_Activity_finish)
 (bindingTemplate
  (TheList (:SUBJECT (NP processTypeForAccomplishmentType doneBy))
   (:OBLIQUE-OBJECT (AJP processTypeForAccomplishmentType)
    ((PPFn of) processTypeForAccomplishmentType))
   (:GAP (CNI doneBy) (DNI doneBy) (INI doneBy))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((1 0 0)) ((0 0 1) (1 1 0)))))

(FNNounSemtrans (TheList "complex") Number-TheWord
 (and (isa :NOUN ComplexNumber)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Complex-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT ((PPFn of) parts) ((PPFn with) parts) (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn nameString) locationUse)
    (Sinterrog locationUse) (VPfin locationUse)
    (A parts fe_container_possessor eventLocale locationUse))
   (:GAP (DEN eventLocale) (INI locationUse))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 3 1)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 6 0))
   ((0 0 0) (1 6 3)) ((1 3 0) (1 3 1)) ((1 3 1) (1 6 2)) ((1 3 1) (1 6 1)))))

(FNNounSemtrans (TheList) Complex-TheWord (and (isa :NOUN System))
 (frame FN_System)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_function))
   (:GAP (DEN fe_complex) (DNI fe_function))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Complexion-TheWord
 (and (isa :NOUN HumanTypeBySkinColor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compliance-TheWord (and (isa :NOUN Compliant))
 (frame FN_Compliance)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn through) fe_act) (AVP fe_degree)
    (AJP fe_degree fe_manner) ((PPFn with) fe_norm) ((PPFn to) fe_norm)
    ((PPingFn with) fe_norm) ((PPingFn in) fe_norm) ((PPFn in) fe_norm)
    (N fe_degree fe_norm affectedAgent) ((PPFn by) affectedAgent))
   (:GAP (DEN fe_act) (DNI fe_norm)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 2)) ((1 5 0)) ((1 3 0)) ((1 4 0)) ((1 8 1))
   ((1 6 0) (1 8 2)) ((1 3 0) (1 9 0)) ((1 2 1) (1 6 0)) ((1 2 1) (1 7 0))
   ((1 6 0) (1 8 0)) ((1 3 0) (3 0 0)) ((1 0 0) (1 3 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Compliance-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn through) fe_act) (AVP fe_degree)
    (AJP fe_degree fe_manner) ((PPFn with) fe_norm) ((PPFn to) fe_norm)
    ((PPingFn with) fe_norm) ((PPingFn in) fe_norm) ((PPFn in) fe_norm)
    (N fe_degree fe_norm affectedAgent) ((PPFn by) affectedAgent))
   (:GAP (DEN fe_act) (DNI fe_norm)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 2)) ((1 5 0)) ((1 3 0)) ((1 4 0)) ((1 8 1))
   ((1 6 0) (1 8 2)) ((1 3 0) (1 9 0)) ((1 2 1) (1 6 0)) ((1 2 1) (1 7 0))
   ((1 6 0) (1 8 0)) ((1 3 0) (3 0 0)) ((1 0 0) (1 3 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Compliment-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo communicatorOfInfo))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn of) communicatorOfInfo)
    ((PPFn by) communicatorOfInfo) (AJP fe_degree fe_manner)
    ((PPFn on) fe_reason) ((PPFn for) fe_reason) ((PPFn about) fe_reason))
   (:GAP (CNI communicatorOfInfo) (INI fe_reason)
    (DNI recipientOfInfo communicatorOfInfo fe_reason))
   (:GEN (Poss recipientOfInfo communicatorOfInfo))))
 (groupPatterns
  (TheSet ((2 7 0)) ((2 0 0)) ((0 0 0)) ((4 0 1)) ((2 2 0)) ((0 0 1)) ((2 5 0))
   ((2 4 1)) ((2 5 0) (4 0 1)) ((0 0 1) (2 5 0)) ((0 0 1) (2 0 0))
   ((0 0 1) (1 0 0)) ((0 0 0) (2 2 0)) ((0 0 0) (2 1 0)) ((2 1 0) (2 4 1))
   ((2 0 0) (2 4 0)) ((0 0 1) (2 5 0) (4 0 0)) ((0 0 1) (2 0 0) (2 6 0))
   ((2 0 0) (2 3 0) (2 4 1)) ((0 0 1) (1 0 0) (2 4 1))
   ((0 0 1) (1 0 0) (2 4 0)))))

(FNNounSemtrans (TheList) Component-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance ingredients Artifact :NOUN))
 (frame FN_Ingredients)
 (bindingTemplate
  (TheList (:SUBJECT (NP mainConstituent))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent fe_product)
    ((PPFn of) fe_product) ((PPFn for) fe_product))
   (:GAP (DEN mainConstituent) (INI fe_product) (DNI stuffUse))
   (:APPOSITIVE (NP mainConstituent))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 1 1)) ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (1 2 0)) ((1 0 0) (1 1 1)) ((0 0 0) (1 0 0) (1 2 0))
   ((1 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Component-TheWord
 (and (isa :NOUN AudioSystemComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comportment-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Composer-TheWord (and (isa :NOUN MusicalComposer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Composition-TheWord
 (and (isa :NOUN AcademicComposition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compost") Pile-TheWord
 (and (isa :NOUN ContainerArtifact)
      (relationInstanceExists contains-Underspecified :NOUN GardenCompost))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "compound") Pistil-TheWord
 (and (isa :NOUN CompoundPistil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compound-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compound-TheWord
 (and (isa :NOUN ChemicalSubstanceType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Comprehension-TheWord
 (and (isa :NOUN AwarenessQuantity)) (frame FN_Awareness)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation) ((PPFn on) subjectOfMentalSituation)
    ((PPFn of) topicOfIndividual) (N topicOfIndividual)
    ((PPFn as) topicOfIndividual) ((PPFn at) topicOfIndividual)
    (Sfin topicOfIndividual))
   (:GAP (CNI subjectOfMentalSituation) (DNI topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 7 0)) ((0 3 0)) ((0 6 0)) ((0 5 0))
   ((0 4 0)) ((0 3 0) (2 0 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Compressibility-TheWord
 (and (isa :NOUN Compressibility)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compression-TheWord (and (isa :NOUN Compression))
 (frame FN_Cause_expansion) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compressor-TheWord (and (isa :NOUN Compressor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Compromise-TheWord (and (isa :NOUN Compromise))
 (frame FN_Make_compromise)
 (bindingTemplate
  (TheList (:SUBJECT (NP agreeingAgents meetingParticipants))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt)
    (VPto obligationsCreated purposeOfEvent))
   (:GAP
    (INI agreeingAgents meetingParticipants meetingParticipants
     situationTopic))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 0 0)) ((1 1 0)) ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Compunction-TheWord (and (isa :NOUN Remorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Account-TheWord
 (and (isa :NOUN ComputerAccount)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Business-TheWord
 (and (isa :NOUN ComputerManufacturer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Cable-TheWord
 (and (isa :NOUN ComputerCable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Chassis-TheWord
 (and (isa :NOUN ComputerChassis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Cluster-TheWord
 (and (isa :NOUN ComputerCluster)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Component-TheWord
 (and (isa :NOUN ComputerHardwareComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "data") Artifact-TheWord
 (and (isa :NOUN ComputerDataArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "display") Cable-TheWord
 (and (isa :NOUN ComputerDisplayCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") File-TheWord
 (and (isa :NOUN ComputerFileCopy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "game") Controller-TheWord
 (and (isa :NOUN ComputerGameController)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Game-TheWord
 (and (isa :NOUN ComputerGameEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Game-TheWord
 (and (isa :NOUN ComputerGameProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "hardware") Package-TheWord
 (and (isa :NOUN ComputerHardwarePackage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Hardware-TheWord
 (and (isa :NOUN ComputerHardwareItem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Industry-TheWord
 (and (isa :NOUN ComputerIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "interface") Device-TheWord
 (and (isa :NOUN ComputerInterfaceDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Keyboard-TheWord
 (and (isa :NOUN ComputerKeyboard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "memory") Unit-TheWord
 (and (isa :NOUN UnitOfComputerResourceCapacity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "memory") Unit-TheWord
 (and (isa :NOUN UnitOfComputerStorageCapacity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "mouse") Pad-TheWord
 (and (isa :NOUN ComputerMousePad)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "networking") Cable-TheWord
 (and (isa :NOUN ComputerNetworkingCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Peripheral-TheWord
 (and (isa :NOUN ComputerPeripheralDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "redundant" "power") Supply-TheWord
 (and (isa :NOUN ComputerDeviceRedundantPowerSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Science-TheWord
 (and (isa :NOUN ComputerScience)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Scientist-TheWord
 (and (isa :NOUN ComputerScientist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Stand-TheWord
 (and (isa :NOUN ComputerStand)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "storage") Device-TheWord
 (and (isa :NOUN ComputerStorageDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "storage") Devices-TheWord
 (and (isa :NOUN ComputerStorageDevice-NonMemory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Store-TheWord
 (and (isa :NOUN ComputerStore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer" "switch") Box-TheWord
 (and (isa :NOUN ComputerSwitchBox)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computer") Table-TheWord
 (and (isa :NOUN ComputerTable-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Computer-TheWord (and (isa :NOUN Computer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computerized" "axial" "tomography") Scanner-TheWord
 (and (isa :NOUN CATScanner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "computing" "platform") Group-TheWord
 (and (isa :NOUN ComputingPlatformGroup)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concealer-TheWord (and (isa :NOUN Concealer))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor))
   (:GAP (DEN decorativeObjectsApplied))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Concept-TheWord (and (isa :NOUN Concept))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conception-TheWord
 (and (isa :NOUN AwarenessQuantity)) (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation situationTopic))
   (:OBLIQUE-OBJECT (NP topicOfIndividual) (Sfin topicOfIndividual)
    (AJP subjectOfMentalSituation topicOfIndividual fe_degree)
    ((PPFn in) fe_evidence) ((PPFn about) situationTopic)
    ((PPFn of) subjectOfMentalSituation topicOfIndividual situationTopic)
    ((PPingFn of) topicOfIndividual situationTopic) (Sinterrog situationTopic)
    (N topicOfIndividual situationTopic))
   (:GEN (Poss subjectOfMentalSituation topicOfIndividual))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 5 2)) ((1 8 1)) ((1 1 0)) ((2 0 1)) ((1 6 0)) ((1 5 1))
   ((1 8 0)) ((2 0 0)) ((1 7 0) (1 8 0)) ((1 6 1) (2 0 0)) ((1 5 2) (2 0 0))
   ((0 0 1) (2 0 0)) ((0 0 0) (1 5 2)) ((0 0 0) (1 4 0)) ((1 2 0) (1 4 0))
   ((1 1 0) (2 0 0)) ((1 6 0) (2 0 0)) ((1 5 1) (2 0 0)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 5 1)) ((1 2 0) (1 6 0)) ((1 3 0) (1 4 0) (1 5 0))
   ((0 0 0) (1 2 2) (1 5 2)) ((1 2 1) (1 5 2) (2 0 0))
   ((0 0 0) (1 0 0) (1 5 1)))))

(FNNounSemtrans (TheList) Concern-TheWord (and (isa :NOUN Concern))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP fe_event (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT (NP situationConstituents) (AVP fe_degree)
    ((PPFn among) objectActedOn) ((PPFn of) objectActedOn) (VPed fe_manner)
    ((PPFn about) situationTopic)
    ((PPFn to) (InverseBinaryPredicateFn explaines-Generic) situationTopic)
    (A objectActedOn fe_manner situationTopic)
    ((PPFn over) (InverseBinaryPredicateFn explaines-Generic) situationTopic)
    (Sfin (InverseBinaryPredicateFn explaines-Generic) situationTopic)
    ((PPFn on) situationTopic) (AJP fe_degree situationTopic)
    (N objectActedOn (InverseBinaryPredicateFn explaines-Generic)
     situationTopic))
   (:GAP (DEN (InverseBinaryPredicateFn explaines-Generic))
    (INI objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    (DNI objectActedOn situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 6 0)) ((1 12 1)) ((3 0 0)) ((1 9 1)) ((1 8 1))
   ((1 5 0)) ((1 3 0)) ((1 11 0)) ((0 0 1) (1 5 0)) ((1 5 0) (3 0 0))
   ((1 12 2) (3 0 0)) ((1 11 1) (3 0 0)) ((1 10 0) (1 12 0)) ((1 5 0) (1 12 0))
   ((1 7 0) (1 8 1)) ((1 7 0) (1 7 2)) ((1 2 0) (1 9 0)) ((1 8 0) (1 12 0))
   ((1 4 0) (3 0 0)) ((1 1 0) (1 6 1)) ((1 5 0) (1 11 0))
   ((0 0 0) (1 0 0) (1 7 1)))))

(FNNounSemtrans (TheList) Concern-TheWord (and (isa :NOUN Concern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concern-TheWord (and (isa :NOUN Sympathy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "concert") Hall-TheWord (and (isa :NOUN ConcertHall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concert-TheWord (and (isa :NOUN MusicalPerformance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concerto-TheWord (and (isa :NOUN Concerto))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concession-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPingFn by) by-Underspecified) (Sfin infoTransferred)
    ((PPFn by) by-Underspecified performedBy) ((PPFn from) performedBy)
    ((PPFn over) situationTopic) ((PPFn regarding) situationTopic)
    ((PPFn on) situationTopic) (AJP fe_manner situationTopic)
    ((PPFn to) recipientOfInfo situationTopic) ((PPFn in) situationTopic)
    (VPing situationTopic) (N situationTopic))
   (:GAP (DNI infoTransferred) (INI infoTransferred performedBy)
    (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 8 1)) ((1 3 0)) ((1 1 0)) ((0 0 0)) ((3 0 0))
   ((1 2 0)) ((1 3 0) (1 10 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 9 0))
   ((1 3 0) (1 7 1)) ((1 2 1) (1 6 0)) ((0 0 0) (1 5 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 8 0)) ((1 1 0) (1 2 1) (1 7 0))
   ((0 0 0) (0 0 0) (1 8 0)) ((0 0 0) (1 4 0) (1 8 0)))))

(FNNounSemtrans (TheList) Concrete-TheWord (and (isa :NOUN Concrete))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concurrency-TheWord
 (and (isa :NOUN TemporalThing)
      (relationInstanceExists cotemporal :NOUN TemporalThing))
 (frame FN_Simultaneity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Concussion-TheWord (and (isa :NOUN Concussion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condemnation-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn on) objectOfEvaluation)
    (AJP communicatorOfInfo fe_manner) (Sfin fe_reason)
    ((PPFn for) objectOfEvaluation fe_reason)
    ((PPFn of) objectOfEvaluation fe_reason)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GAP (CNI communicatorOfInfo) (INI fe_reason)
    (DNI objectOfEvaluation fe_reason))
   (:GEN (Poss communicatorOfInfo objectOfEvaluation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((3 0 1)) ((1 6 0)) ((1 5 0)) ((1 4 0)) ((1 3 0))
   ((1 3 1)) ((1 6 0) (3 0 0)) ((0 0 1) (1 1 0)) ((1 0 0) (1 6 0))
   ((1 0 0) (1 6 1)) ((0 0 0) (3 0 1)) ((0 0 0) (1 2 0)) ((1 5 1) (1 6 0))
   ((1 1 0) (1 3 1)) ((1 3 1) (1 6 0)) ((1 6 0) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Condensation-TheWord (and (isa :NOUN Condensation))
 (frame FN_Change_of_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condenser-TheWord (and (isa :NOUN Condenser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condiment-TheWord (and (isa :NOUN Condiment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condition-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions)
 (bindingTemplate (TheList (:GAP (DEN infects)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Condition-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance preconditionFor-Props Thing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condition-TheWord (and (isa :NOUN AgreementLineItem))
 (frame FN_State_of_entity)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N objectActedOn) (AJP fe_evaluation))
   (:GAP (DNI objectActedOn) (DEN hasState))))
 (groupPatterns (TheSet ((1 0 0)) ((1 1 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Condition-TheWord (and (isa :NOUN Obligation))
 (frame FN_State_of_entity)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N objectActedOn) (AJP fe_evaluation))
   (:GAP (DNI objectActedOn) (DEN hasState))))
 (groupPatterns (TheSet ((1 0 0)) ((1 1 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Condom-TheWord (and (isa :NOUN Condom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condominium-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Condominium-TheWord (and (isa :NOUN Condominium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conduct-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_manner))
   (:OBLIQUE-OBJECT ((PPFn towards) affectedAgent) (N performedBy)
    ((PPFn by) performedBy) ((PPFn in) situationConstituents)
    (A situationConstituents) ((PPFn of) performedBy situationConstituents)
    (AJP fe_manner))
   (:GAP (DNI performedBy fe_manner)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 3 0)) ((3 0 0)) ((1 5 0)) ((1 2 0)) ((0 0 0)) ((1 5 1) (1 6 0))
   ((0 0 1) (3 0 0)) ((1 6 0) (3 0 0)) ((1 2 0) (1 6 0)) ((1 3 0) (3 0 0))
   ((1 4 0) (3 0 0)) ((1 3 0) (1 5 0)) ((1 0 0) (1 6 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "conductance") Unit-TheWord
 (and (isa :NOUN UnitOfElectricalResistance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conducting-TheWord
 (and (isa :NOUN Conducting-Administration-Management)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conductor-TheWord (and (isa :NOUN ConductingMedium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conductor-TheWord (and (isa :NOUN MusicalConductor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conduit-TheWord (and (isa :NOUN FluidConduit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conduit-TheWord (and (isa :NOUN ElectricalConduit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cone-TheWord (and (isa :NOUN Cone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Confectioner-TheWord (and (isa :NOUN Confectioner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Confectionery-TheWord (and (isa :NOUN Confectionery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Confederate-TheWord
 (and (isa :NOUN CooperationEvent)) (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT (AJP fe_manner) (NP fe_partner_1) ((PPFn of) fe_partner_2)
    ((PPFn in) fe_undertaking) ((PPFn on) fe_undertaking))
   (:GAP (DEN fe_partner_1 fe_partner_2) (DNI fe_partner_2 fe_undertaking)
    (INI fe_undertaking))
   (:GEN (Poss fe_partner_1 fe_partner_2))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 1 0)) ((3 0 0)) ((1 2 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (3 0 1)) ((0 0 0) (1 4 0) (3 0 1)) ((0 0 0) (1 3 0) (3 0 1))
   ((0 0 0) (1 0 0) (3 0 1)))))

(FNNounSemtrans (TheList "conference") Room-TheWord
 (and (isa :NOUN ConferenceRoom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conference-TheWord (and (isa :NOUN Conference))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors))
   (:OBLIQUE-OBJECT (N duration) (NP duration) ((PPFn with) fe_interlocutor_2)
    ((PPFn in) temporallyIntersects) (Sub temporallyIntersects)
    (AJP duration fe_manner temporallyIntersects) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic) (VPbrst situationTopic)
    ((PPFn over) temporallyIntersects situationTopic))
   (:GAP (INI fe_interlocutors) (2nd eventOccursAt)
    (DNI fe_interlocutors situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 8 0)) ((1 9 0) (3 0 1)) ((1 2 0) (1 3 0))
   ((1 2 0) (3 0 0)) ((1 1 0) (1 7 0)) ((1 5 0) (1 6 0))
   ((1 5 2) (1 7 0) (3 0 1)) ((0 0 0) (1 0 0) (1 2 0))
   ((0 0 1) (1 4 0) (1 5 1) (1 9 1)))))

(FNNounSemtrans (TheList) Confession-TheWord
 (and (isa :NOUN RevealingTrueInformation)) (frame FN_Reveal_secret)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (VPed fe_event_description)
    ((PPFn to) recipientOfInfo fe_information) (N fe_information)
    (QUO fe_information) (Sfin fe_information) (AJP fe_completeness fe_manner)
    ((PPFn by) performedBy) ((PPFn of) fe_information performedBy)
    ((PPFn from) performedBy) ((PPFn about) situationTopic)
    (VPing situationTopic))
   (:GAP (DEN fe_information) (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 8 0)) ((1 6 0)) ((1 5 1)) ((1 1 1)) ((1 7 0)) ((1 2 0))
   ((1 5 0)) ((0 0 0) (1 10 0)) ((0 0 0) (1 9 0)) ((1 4 0) (3 0 0))
   ((1 4 0) (1 6 0)) ((1 1 1) (3 0 0)) ((0 0 0) (1 1 1)) ((1 5 1) (1 7 0))
   ((0 0 0) (1 5 0)) ((1 1 0) (1 7 1)) ((1 1 0) (1 6 0))
   ((1 5 1) (1 7 0) (3 0 0)) ((1 0 0) (1 1 1) (3 0 0))
   ((0 0 0) (1 1 0) (3 0 0)) ((0 0 0) (0 0 0) (1 1 0))
   ((1 3 0) (1 5 1) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Confession-TheWord (and (isa :NOUN Confession))
 (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_object)
    (AJP fe_manner activeIngredientsOfType))
   (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((1 0 0)) ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Confession-TheWord
 (and (isa :NOUN RevealingTrueInformation)) (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_object)
    (AJP fe_manner activeIngredientsOfType))
   (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((1 0 0)) ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Confidence-TheWord (and (isa :NOUN Confidence))
 (frame FN_Certainty)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn from) subjectOfMentalSituation)
    ((PPFn of) subjectOfMentalSituation) (VPto topicOfIndividual)
    (Sfin topicOfIndividual) ((PPingFn of) topicOfIndividual) (AVP fe_degree)
    (AJP fe_degree) (N subjectOfMentalSituation fe_manner)
    ((PPFn about) subjectOfMentalSituation situationTopic)
    ((PPFn with) situationTopic) ((PPFn in) situationTopic)
    (Sub topicOfIndividual situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (INI topicOfIndividual)
    (DNI topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 11 1)) ((1 10 0)) ((1 8 1)) ((1 5 0)) ((1 6 0)) ((1 4 0))
   ((0 0 0)) ((1 2 0)) ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 7 0))
   ((1 6 0) (1 11 0)) ((1 10 0) (3 0 0)) ((1 1 0) (1 10 0)) ((0 0 0) (1 9 0))
   ((1 7 1) (3 0 0)) ((1 1 0) (1 6 0)) ((1 6 0) (1 8 0)) ((1 11 0) (3 0 0))
   ((0 0 0) (1 11 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 5 0) (1 8 1)))))

(FNNounSemtrans (TheList) Confinement-TheWord
 (and (isa :NOUN (PreventingFn Movement-TranslationEvent)))
 (frame FN_Inhibit_movement) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Confirmation-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Confirmation-TheWord
 (and (isa :NOUN ReligiousCeremony) (isa :NOUN ConfirmationInOrganization))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT ((PPFn into) fe_organization)) (:GEN (Poss groupMembers))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Confirmation-TheWord (and (isa :NOUN Verification))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT ((PPFn into) fe_organization)) (:GEN (Poss groupMembers))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Conflagration-TheWord
 (and (isa :NOUN Fire-CombustionProcess)) (frame FN_Fire_burning)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conflict-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (Srel eventOutcomes)
    ((PPFn with) fe_side_2))
   (:GAP (DNI fe_issue fe_sides))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Conflict-TheWord (and (isa :NOUN ConflictEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conformity-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conformity-TheWord
 (and (isa :NOUN ViolatingAnObligation)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conformity-TheWord
 (and (isa :NOUN ComplianceStatusAttribute)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conformity-TheWord
 (and (isa :NOUN ConformingToAcceptedStandards)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Confrontation-TheWord
 (and (isa :NOUN ConfrontingSomething)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn over) fe_issue)
    ((PPFn at) fe_issue eventOccursAt) ((PPFn on) fe_issue eventOccursAt)
    (N eventOccursAt) ((PPFn in) eventOccursAt) (VPto purposeOfEvent)
    ((PPFn during) eventOutcomes) ((PPFn with) fe_side_2)
    ((PPFn against) fe_side_2) ((PPFn between) fe_sides)
    ((PPFn throughout) temporallyIntersects)
    ((PPingFn on) fe_issue temporallyIntersects)
    (AJP fe_degree fe_issue fe_manner eventOccursAt fe_sides
     temporallyIntersects)
    ((PPFn of) fe_side_2 fe_sides temporallyIntersects))
   (:GAP (CNI fe_issue) (DNI fe_side_1 fe_side_2 fe_sides) (INI fe_sides))
   (:GEN (Poss eventOccursAt fe_side_1))))
 (groupPatterns
  (TheSet ((1 14 2)) ((1 10 0)) ((1 13 4)) ((1 8 0)) ((1 6 0)) ((1 5 0))
   ((1 2 1)) ((1 1 0)) ((1 0 0)) ((1 13 1)) ((1 12 0)) ((1 13 0))
   ((1 8 0) (3 0 1)) ((0 0 0) (1 8 0)) ((1 4 0) (1 13 5)) ((1 4 0) (1 12 1))
   ((1 13 4) (3 0 0)) ((1 11 0) (1 13 2)) ((1 10 0) (1 13 2))
   ((1 8 0) (1 13 2)) ((1 2 0) (1 14 1)) ((0 0 0) (1 3 1) (1 8 0))
   ((0 0 0) (1 4 0) (1 9 0)) ((1 3 0) (1 14 0) (3 0 1))
   ((1 1 0) (1 10 0) (1 13 3)) ((1 2 1) (1 3 1) (1 7 0) (1 10 0)))))

(FNNounSemtrans (TheList) Confucianism-TheWord (and (isa :NOUN Confucianism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "congo") Franc-TheWord (and (isa :NOUN Franc-Congo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Congressman-TheWord
 (and (isa :NOUN USRepresentative)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_domain fe_governed)
    (NP fe_governed leadersOfMovement) ((PPFn since) temporallyIntersects)
    (A temporallyIntersects)
    (AJP fe_depictive fe_descriptor fe_governed activeIngredientsOfType)
    ((PPFn from) fe_depictive activeIngredientsOfType))
   (:GAP (INI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 3 0)) ((1 1 0)) ((1 4 2)) ((1 5 0)) ((1 4 0))
   ((0 0 0) (1 4 3)) ((1 3 0) (1 4 3)) ((1 1 0) (1 1 1)) ((1 1 0) (1 4 1))
   ((0 0 0) (1 2 0) (3 0 0)) ((1 0 0) (1 0 1) (1 1 1)))))

(FNNounSemtrans (TheList) Congresswoman-TheWord
 (and (isa :NOUN (FemaleFn USRepresentative))) (frame FN_Leadership)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conifer-TheWord (and (isa :NOUN Conifer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coniferopsida-TheWord
 (and (isa :NOUN ConiferopsidaClass)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conjecture-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (Sfin infoTransferred) (N performedBy)
    (VPing situationTopic) ((PPFn as) situationTopic)
    ((PPFn about) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((2 0 0)) ((1 0 0)) ((0 0 0) (1 3 0)) ((1 1 0) (1 2 0))
   ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Conjunction-TheWord
 (and (isa :NOUN TemporalThing)
      (relationInstanceExists cotemporal :NOUN TemporalThing))
 (frame FN_Simultaneity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conjunctivitis-TheWord
 (and (isa :NOUN Conjunctivitis)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "connecting") Rod-TheWord
 (and (isa :NOUN
       (CollectionIntersectionFn
        (TheSet RodShapedObject Connector PhysicalPartOfObject)))
      (relationExistsInstance properPhysicalParts LinkageSystem :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Connection-TheWord
 (and (isa :NOUN DeterminingInterrelationship))
 (frame FN_Make_cognitive_connection) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Connection-TheWord (and (isa :NOUN Connector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Connection-TheWord
 (and (isa :NOUN IndividualAgent)
      (relationInstanceExists mutualAcquaintances :NOUN IndividualAgent))
 (frame FN_Social_connection)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) encounteredObject))
   (:GAP (DNI performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "connective") Tissue-TheWord
 (and (isa :NOUN ConnectiveTissue)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Connector-TheWord (and (isa :NOUN Connector))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Connoisseur-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn of) fe_knowledge) (N fe_knowledge hasSkill))
   (:GAP (DNI fe_knowledge) (DEN affectedAgent))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 0 0)) ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Consciousness-TheWord
 (and (isa :NOUN AwarenessQuantity)) (frame FN_Awareness)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Consecration-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT ((PPFn by) leadersOfMovement)
    ((PPFn from) leadersOfMovement) ((PPFn as) fe_new_status)
    ((PPFn to) fe_new_status) ((PPFn of) groupMembers fe_new_status fe_object)
    (A leadersOfMovement fe_organization)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GEN (Poss groupMembers fe_object))))
 (groupPatterns
  (TheSet ((1 6 0)) ((2 0 1)) ((1 4 2)) ((1 3 0)) ((1 4 1)) ((1 2 0)) ((2 0 0))
   ((1 1 0)) ((1 4 2) (1 7 0)) ((0 0 0) (1 6 0)) ((1 5 1) (2 0 0))
   ((1 2 0) (2 0 0)) ((1 2 0) (1 4 0)) ((1 0 0) (2 0 1)) ((1 4 1) (1 5 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (2 0 0)) ((1 5 1) (1 6 0) (2 0 0))
   ((1 2 0) (1 6 1) (2 0 0)) ((1 2 0) (1 4 0) (1 6 1)))))

(FNNounSemtrans (TheList) Conservation-TheWord (and (isa :NOUN Conservation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conservative-TheWord
 (and (isa :NOUN PoliticallyConservativePerson))
 (frame FN_People_along_political_spectrum)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP age)) (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Conservatory-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Consideration-TheWord (and (isa :NOUN Thinking))
 (frame FN_Cogitation)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation situationTopic))
   (:OBLIQUE-OBJECT (A subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation) ((PPFn from) subjectOfMentalSituation)
    ((PPFn before) temporallyIntersects) ((PPFn of) situationTopic)
    ((PPingFn to) situationTopic) ((PPFn for) situationTopic)
    ((PPingFn about) situationTopic) (AJP fe_manner situationTopic)
    (NP situationTopic) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic) ((PPingFn of) situationTopic)
    (Sfin situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (INI subjectOfMentalSituation)
    (DNI subjectOfMentalSituation situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 13 0)) ((1 12 0)) ((1 11 0)) ((1 4 0)) ((1 6 0)) ((1 10 0))
   ((0 0 1)) ((1 9 0)) ((1 8 1)) ((1 5 0)) ((3 0 0)) ((1 1 0))
   ((1 4 0) (1 8 1)) ((1 4 0) (3 0 0)) ((0 0 1) (3 0 0)) ((0 0 1) (1 2 0))
   ((0 0 1) (1 1 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 6 0)) ((1 0 0) (1 4 0))
   ((1 3 0) (1 6 0)) ((0 0 0) (1 7 0) (1 8 0)))))

(FNNounSemtrans (TheList) Console-TheWord (and (isa :NOUN Console-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Consonant-TheWord (and (isa :NOUN Consonant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conspiracy-TheWord (and (isa :NOUN CooperationEvent))
 (frame FN_Collaboration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_partners) (AJP fe_manner fe_partners)
    ((PPFn between) fe_partners) ((PPFn by) fe_partners)
    ((PPFn from) fe_partners) ((PPFn in) temporallyIntersects)
    ((PPFn against) fe_undertaking) (VPto fe_undertaking)
    (N fe_partners fe_undertaking) ((PPFn of) fe_partners fe_undertaking)
    ((PPFn to) fe_undertaking))
   (:GAP (DEN fe_undertaking)) (:GEN (Poss fe_partners))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 10 0)) ((0 9 1)) ((0 3 0)) ((2 0 0)) ((0 9 0))
   ((0 2 0)) ((0 8 0)) ((0 1 1)) ((0 5 0) (0 8 1)) ((0 6 0) (2 0 0))
   ((0 7 0) (0 9 0)) ((0 4 0) (0 7 0)) ((0 3 0) (0 7 0)) ((0 2 0) (0 7 0))
   ((0 0 0) (0 6 0)) ((0 5 0) (0 9 0)) ((0 1 0) (0 6 0) (2 0 0)))))

(FNNounSemtrans (TheList) Conspiracy-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Constant-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance unchangedActors Event :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Constellation-TheWord (and (isa :NOUN Constellation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Constipation-TheWord (and (isa :NOUN Constipation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Constitution-TheWord
 (and (isa :NOUN FoundingAnOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "construction") Industry-TheWord
 (and (isa :NOUN HousingIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "construction") Material-TheWord
 (and (isa :NOUN BuildingMaterial)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Construction-TheWord (and (isa :NOUN Building))
 (frame FN_Building)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy outputsCreated))
   (:OBLIQUE-OBJECT ((PPFn of) outputsCreated) (N outputsCreated)
    ((PPingFn of) outputsCreated) (AJP fe_descriptor)
    ((PPFn under) by-Underspecified) ((PPFn at) eventOccursAt)
    ((PPFn on) outputsCreated eventOccursAt) (AVP temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (CNI doneBy) (DNI doneBy outputsCreated)
    (INI doneBy ingredients outputsCreated) (DEN outputsCreated))
   (:GEN (Poss outputsCreated))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 8 0)) ((1 5 0)) ((3 0 0)) ((1 2 0)) ((1 6 0)) ((0 0 1))
   ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 8 1) (3 0 0)) ((1 0 0) (1 8 1))
   ((1 0 0) (1 8 0)) ((1 0 0) (1 5 0)) ((0 0 1) (1 5 0)) ((1 3 0) (1 8 1))
   ((0 0 1) (1 7 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 6 0) (1 8 0)) ((0 0 1) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Construction-TheWord
 (and (isa :NOUN MakingSomething)) (frame FN_Building)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy outputsCreated))
   (:OBLIQUE-OBJECT ((PPFn of) outputsCreated) (N outputsCreated)
    ((PPingFn of) outputsCreated) (AJP fe_descriptor)
    ((PPFn under) by-Underspecified) ((PPFn at) eventOccursAt)
    ((PPFn on) outputsCreated eventOccursAt) (AVP temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (CNI doneBy) (DNI doneBy outputsCreated)
    (INI doneBy ingredients outputsCreated) (DEN outputsCreated))
   (:GEN (Poss outputsCreated))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 8 0)) ((1 5 0)) ((3 0 0)) ((1 2 0)) ((1 6 0)) ((0 0 1))
   ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 8 1) (3 0 0)) ((1 0 0) (1 8 1))
   ((1 0 0) (1 8 0)) ((1 0 0) (1 5 0)) ((0 0 1) (1 5 0)) ((1 3 0) (1 8 1))
   ((0 0 1) (1 7 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 6 0) (1 8 0)) ((0 0 1) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Construction-TheWord (and (isa :NOUN Constructing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "construction") Toy-TheWord
 (and (isa :NOUN ConstructionToy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Consultant-TheWord (and (isa :NOUN Consultant))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (AVP fe_compensation) ((PPFn for) employer)
    ((PPFn of) employer) ((PPFn to) employer) ((PPFn with) employer)
    ((PPFn at) employer) (AJP fe_descriptor fe_rank activeIngredientsOfType)
    (N activeIngredientsOfType) ((PPFn on) activeIngredientsOfType)
    (VPing activeIngredientsOfType)
    ((PPFn in) employer employer activeIngredientsOfType)
    ((PPingFn in) activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:NOUN (N fe_person)) (:GEN (Poss employer))
   (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 10 2)) ((1 7 0)) ((1 6 2)) ((1 6 1)) ((1 10 0))
   ((1 5 0)) ((4 0 0)) ((1 1 0)) ((0 0 0) (1 8 0)) ((0 0 0) (1 10 2))
   ((0 0 0) (1 7 0)) ((1 6 2) (3 0 0)) ((1 6 1) (1 9 0)) ((1 6 1) (1 8 0))
   ((1 5 0) (1 7 0)) ((0 0 0) (1 10 0)) ((0 0 0) (1 5 0)) ((1 6 2) (4 0 0))
   ((0 0 0) (1 1 0)) ((1 6 0) (1 7 0)) ((1 0 0) (1 6 2))
   ((0 0 0) (1 6 1) (1 8 0)) ((0 0 0) (1 5 0) (1 6 2))
   ((0 0 0) (1 7 0) (4 0 0)) ((1 7 0) (4 0 0) (5 0 0))
   ((0 0 0) (1 4 0) (1 7 0)) ((0 0 0) (1 3 0) (1 8 0))
   ((0 0 0) (1 3 0) (1 7 0)) ((0 0 0) (1 7 0) (1 10 0))
   ((0 0 0) (1 2 0) (1 6 1)) ((0 0 0) (1 4 0) (1 6 1) (1 7 0)))))

(FNNounSemtrans (TheList) Consultation-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1))
   (:OBLIQUE-OBJECT ((PPFn with) fe_interlocutor_2))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "consumer") Component-TheWord
 (and (isa :NOUN ConsumerAudioVideoComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "consumer") Durable-TheWord
 (and (isa :NOUN DurableGood)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "consumer" "internet") Appliance-TheWord
 (and (isa :NOUN InternetAppliance-Consumer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "consumer") Loan-TheWord
 (and (isa :NOUN ConsumerLoan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Consumer-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance conumerInRelationship SupplierRelationship
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Consumption-TheWord (and (isa :NOUN Ingesting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "contact" "lens") Solution-TheWord
 (and (isa :NOUN ContactLensCareProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "contact") Lens-TheWord
 (and (isa :NOUN ContactLens-Corrective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "contact") Lens-TheWord (and (isa :NOUN ContactLens))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contact-TheWord (and (isa :NOUN Communicating))
 (frame FN_Communication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contact-TheWord (and (isa :NOUN ContactInfoString))
 (frame FN_Contacting)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn with) recipientOfInfo) (AJP frequencyOfEvent)
    (N genericPathway-Partial) ((PPFn via) genericPathway-Partial)
    ((PPFn at) eventOccursAt))
   (:GAP (INI topicOfInfoTransfer) (CNI communicatorOfInfo)
    (DNI recipientOfInfo purposeOfEvent))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0) (1 4 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 1 0)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Contact-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance contacts Agent-Generic :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contact-TheWord (and (isa :NOUN TouchingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Container-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    (N mainConstituent activeIngredientsOfType deviceUse)
    (AJP mainConstituent activeIngredientsOfType deviceUse)
    ((PPFn for) deviceUse) ((PPingFn for) deviceUse) (VPing deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 1 2)) ((0 2 2)) ((0 1 1)) ((0 2 1))
   ((2 0 0)) ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 1 2) (0 2 1)) ((0 1 2) (2 0 0))
   ((0 1 0) (0 1 2)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Container-TheWord (and (isa :NOUN ContainerArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contamination-TheWord
 (and (isa :NOUN ContaminationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contemplation-TheWord (and (isa :NOUN Thinking))
 (frame FN_Cogitation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((1 0 0)) ((0 1 0) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Contemplation-TheWord (and (isa :NOUN Pensiveness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "contemporary") Furniture-TheWord
 (and (isa :NOUN ContemporaryFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contempt-TheWord (and (isa :NOUN Contempt))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) subjectOfMentalSituation)
    ((PPFn on) subjectOfMentalSituation) ((PPFn in) eventAffectsBodyPart)
    (AJP subjectOfMentalSituation fe_degree fe_manner) ((PPFn at) fe_reason)
    ((PPFn for) objectOfEvaluation fe_reason) ((PPingFn at) fe_reason))
   (:GAP (CNI subjectOfMentalSituation)
    (DNI subjectOfMentalSituation objectOfEvaluation fe_reason))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 5 1)) ((3 0 0)) ((1 5 0)) ((1 6 0) (3 0 0)) ((1 5 1) (3 0 0))
   ((1 3 2) (1 5 1)) ((1 3 2) (1 4 0)) ((1 3 2) (3 0 0)) ((1 2 0) (1 3 2))
   ((1 5 0) (3 0 0)) ((1 1 0) (1 5 0)) ((1 0 0) (1 5 0)) ((0 0 0) (1 5 0))
   ((1 3 0) (1 5 0)) ((1 3 2) (1 5 1) (3 0 0)) ((0 0 0) (1 3 1) (1 5 0)))))

(FNNounSemtrans (TheList) Content-TheWord (and (isa :NOUN Content))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Content-TheWord (and (isa :NOUN MentalInformation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contention-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (Sfin infoTransferred) (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial) (NP infoTransferred)
    (Sfin infoTransferred) ((PPFn about) infoTransferred)
    ((PPFn of) performedBy) ((PPFn by) performedBy)
    ((PPFn regarding) situationTopic))
   (:GAP (2nd performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 0)) ((1 2 0)) ((1 3 0)) ((1 0 0)) ((1 6 0) (3 0 0))
   ((0 1 0) (1 4 0)) ((0 0 0) (3 0 0)) ((1 2 0) (3 0 0)) ((1 2 0) (1 4 0))
   ((1 2 0) (1 5 0)) ((1 3 0) (3 0 0)) ((1 2 0) (1 2 0) (1 4 0))
   ((1 1 0) (1 2 0) (3 0 0)))))

(FNNounSemtrans (TheList) Contentment-TheWord (and (isa :NOUN Contentment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contest-TheWord (and (isa :NOUN Competition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Context-TheWord (and (isa :NOUN Microtheory))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Continent-TheWord (and (isa :NOUN Continent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Continent-TheWord (and (isa :NOUN Continent-Generic))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "continental") Breakfast-TheWord
 (and (isa :NOUN (SmallFn Breakfast))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "continuous") Quantity-TheWord
 (and (isa :NOUN ContinuousQuantity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contortionist-TheWord (and (isa :NOUN Contortionist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contraband-TheWord (and (isa :NOUN Contraband))
 (frame FN_Smuggling)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn from) from-Generic))
   (:GAP (DEN objectOfPossessionTransfer)) (:GEN (Poss perpetrator))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Contrabassoon-TheWord (and (isa :NOUN Contrabassoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contract-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contract-TheWord (and (isa :NOUN Contract))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_bearer))
   (:OBLIQUE-OBJECT (VPto obligationsCreated) (N obligationsCreated)
    (Poss obligationsCreated))
   (:GAP (DEN fe_document) (DNI fe_issuer))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 1 0)) ((0 0 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Contraction-TheWord (and (isa :NOUN Shrinkage))
 (frame FN_Expansion)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT (N objectOfStateChange) ((PPFn in) objectOfStateChange)
    ((PPFn of) objectOfStateChange) (A objectOfStateChange rateOfEvent))
   (:GAP (DNI objectOfStateChange))
   (:GEN (NP objectOfStateChange) (Poss objectOfStateChange))))
 (groupPatterns
  (TheSet ((3 1 0)) ((1 2 0)) ((1 1 0)) ((3 0 0)) ((0 0 0)) ((1 0 0)) ((1 3 0))
   ((1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Contrail-TheWord (and (isa :NOUN Contrail))
 (frame FN_Leaving_traces) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contrail-TheWord (and (isa :NOUN Contrail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contraption-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N deviceUse) ((PPingFn for) deviceUse))
   (:GAP (DEN fe_gizmo) (DNI deviceUse))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Contrary-TheWord
 (and (isa :NOUN LexicalWord) (isa ?word2 LexicalWord)
      (isa ?rel BinaryRelation) (arg1Isa ?rel LexicalWord)
      (arg2Isa ?rel LexicalWord) (?rel :NOUN ?word2))
 (frame FN_Word_relations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Contravention-TheWord (and (isa :NOUN NonCompliant))
 (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPing fe_act) (NP fe_act affectedAgent fe_state_of_affairs))
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_norm) ((PPFn of) fe_norm))
   (:GAP (DEN fe_act) (INI affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 1 2) (1 2 0)) ((0 1 0) (1 2 0))
   ((0 1 1) (1 2 0)) ((0 0 0) (1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Contravention-TheWord
 (and (isa :NOUN ViolatingAnObligation)) (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPing fe_act) (NP fe_act affectedAgent fe_state_of_affairs))
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_norm) ((PPFn of) fe_norm))
   (:GAP (DEN fe_act) (INI affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 1 2) (1 2 0)) ((0 1 0) (1 2 0))
   ((0 1 1) (1 2 0)) ((0 0 0) (1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Contribution-TheWord
 (and (isa :NOUN GivingSomething)) (frame FN_Giving)
 (bindingTemplate
  (TheList (:SUBJECT (NP fromPossessor))
   (:OBLIQUE-OBJECT ((PPFn from) fromPossessor) ((PPFn to) to-Generic))
   (:GAP (DNI fromPossessor to-Generic) (INI to-Generic) (DEN objectGiven))
   (:GEN (Poss fromPossessor))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Contrition-TheWord (and (isa :NOUN Remorse))
 (frame FN_Contrition)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBLIQUE-OBJECT (AJP fe_degree))
   (:GAP (DEN fe_emotional_state)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Contrivance-TheWord
 (and (isa :NOUN Artifact-NonAgentive)) (frame FN_Coming_up_with)
 (bindingTemplate
  (TheList (:SUBJECT (NP outputCW))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation mainConstituent)
    ((PPFn of) mainConstituent) ((PPingFn for) purposeOfEvent)
    (VPto purposeOfEvent))
   (:GAP (CNI subjectOfMentalSituation) (DEN outputCW))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 1)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "control") Console-TheWord
 (and (isa :NOUN ControlConsole)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "control") Knob-TheWord (and (isa :NOUN ControlKnob))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "control") Panel-TheWord
 (and (isa :NOUN ControlPanel)) (frame FN_Artifact)
 (bindingTemplate (TheList (:GAP (-- productsCreated))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Control-TheWord
 (and (isa :NOUN ControllingSomething)) (frame FN_Being_in_control)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP (InverseBinaryPredicateFn controls) fe_dependent_entity
     fe_dependent_situation))
   (:OBLIQUE-OBJECT (A (InverseBinaryPredicateFn controls))
    ((PPFn with) (InverseBinaryPredicateFn controls))
    (Poss (InverseBinaryPredicateFn controls))
    ((PPFn for) fe_dependent_situation) ((PPFn on) fe_dependent_situation)
    ((PPFn of) fe_dependent_entity fe_dependent_situation
     fe_dependent_variable)
    ((PPFn over) fe_dependent_entity fe_dependent_situation
     fe_dependent_variable)
    (AJP fe_degree fe_manner) (AVP fe_manner)
    (N (InverseBinaryPredicateFn controls) fe_dependent_entity
     fe_dependent_situation eventOccursAt)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn within) temporallyIntersects))
   (:GAP (CNI (InverseBinaryPredicateFn controls) fe_dependent_entity)
    (INI (InverseBinaryPredicateFn controls) fe_dependent_entity)
    (DNI (InverseBinaryPredicateFn controls) fe_dependent_entity
     fe_dependent_situation))
   (:NOUN (N (InverseBinaryPredicateFn controls)))
   (:GEN (Poss (InverseBinaryPredicateFn controls)))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 1 0)) ((1 5 1)) ((1 3 0)) ((1 9 2)) ((1 7 1)) ((4 0 0))
   ((0 0 0)) ((3 0 0)) ((1 9 0)) ((1 6 0)) ((1 9 1)) ((1 5 2) (1 7 1))
   ((0 0 2) (1 10 0)) ((1 5 1) (4 0 0)) ((0 0 0) (1 6 1)) ((0 0 0) (1 5 1))
   ((1 4 0) (1 9 0)) ((1 5 1) (1 9 0)) ((0 0 0) (1 10 1)) ((1 9 0) (1 9 3))
   ((0 0 0) (1 8 0)) ((1 2 0) (1 9 1)) ((0 0 0) (1 5 0)) ((1 9 1) (3 0 0))
   ((1 5 0) (1 9 0)) ((0 0 1) (1 9 0)) ((0 0 1) (1 0 0)) ((0 0 0) (1 7 0))
   ((1 6 0) (1 7 0)) ((0 0 0) (1 6 1) (1 7 1)) ((0 0 0) (1 5 0) (1 11 0))
   ((0 0 0) (1 5 0) (1 10 0)))))

(FNNounSemtrans (TheList) Control-TheWord
 (and (isa :NOUN Control-Power-Quality)) (frame FN_Control)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP (InverseBinaryPredicateFn controls) fe_dependent_entity))
   (:OBLIQUE-OBJECT ((PPFn of) fe_dependent_entity)
    (N (InverseBinaryPredicateFn controls) fe_dependent_entity
     fe_dependent_situation)
    (AJP eventOccursAt))
   (:GAP (DNI (InverseBinaryPredicateFn controls) fe_dependent_entity)
    (CNI (InverseBinaryPredicateFn controls) fe_dependent_entity))
   (:NOUN (N (InverseBinaryPredicateFn controls)))))
 (groupPatterns
  (TheSet ((1 1 2)) ((3 0 0)) ((0 0 1)) ((1 1 1)) ((1 2 0) (3 0 0))
   ((1 1 2) (3 0 0)) ((1 1 0) (1 1 2)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Control-TheWord (and (isa :NOUN ControlDevice))
 (frame FN_Controller_object)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_controlled_entity) ((PPFn of) fe_controlled_entity)
    (AJP activeIngredientsOfType))
   (:GAP (DEN objectControlled))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Control-TheWord (and (isa :NOUN Prohibition))
 (frame FN_Prohibiting_or_licensing) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "control") Tower-TheWord
 (and (isa :NOUN AirControlTower)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Controller-TheWord (and (isa :NOUN ControlDevice))
 (frame FN_Controller_object) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Controversy-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Convalescence-TheWord
 (and (isa :NOUN RecoveringFromAilment)) (frame FN_Recovery)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_affliction) ((PPFn of) patientInCareEvent))
   (:GAP (DNI fe_affliction)) (:GEN (Poss patientInCareEvent))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "convenience") Store-TheWord
 (and (isa :NOUN ConvenienceStore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Convention-TheWord
 (and (isa :NOUN DecidingToDoSomething) (isa :NOUN Deciding-Collectively))
 (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn for) obligationsCreated)
    (A agreeingAgents) ((PPFn on) situationTopic) (N situationTopic))
   (:GAP (DEN obligationsCreated) (DNI obligationsCreated))))
 (groupPatterns (TheSet ((0 4 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Convention-TheWord
 (and (isa :NOUN CulturalConvention-Specification)) (frame FN_Custom)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_society))
   (:OBLIQUE-OBJECT ((PPingFn for) objectOfCritique)
    ((PPingFn of) objectOfCritique) (Sfin objectOfCritique) (AVP fe_descriptor)
    ((PPFn about) fe_domain) ((PPFn for) objectOfCritique fe_domain)
    (N fe_domain affectedAgent)
    ((PPFn of) objectOfCritique fe_domain fe_society) (A fe_society)
    (AJP fe_descriptor fe_domain fe_society))
   (:GEN (Poss affectedAgent fe_society))))
 (groupPatterns
  (TheSet ((1 7 2)) ((0 0 0)) ((1 9 2)) ((1 7 1)) ((1 4 0)) ((1 6 0)) ((1 9 1))
   ((1 9 0)) ((1 1 0)) ((1 5 0)) ((1 5 1) (1 8 0)) ((1 9 1) (2 0 1))
   ((1 7 2) (1 9 1)) ((0 0 0) (1 9 1)) ((1 5 1) (1 6 1)) ((1 9 0) (2 0 1))
   ((1 7 2) (1 9 0)) ((1 3 0) (1 9 1)) ((1 9 0) (1 9 1)) ((1 2 0) (1 9 1))
   ((1 0 0) (1 9 1)) ((1 7 0) (1 9 1)) ((1 1 0) (1 9 0)) ((1 0 0) (1 9 0))
   ((1 7 0) (1 9 0) (2 0 0)) ((1 7 0) (1 9 0) (1 9 1))
   ((1 7 0) (1 9 0) (1 9 0)))))

(FNNounSemtrans (TheList) Convention-TheWord
 (and (isa :NOUN Convention-Meeting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conversance-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conversation-TheWord (and (isa :NOUN Conversation))
 (frame FN_Chatting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors))
   (:OBJECT (NP fe_interlocutor_2))
   (:OBLIQUE-OBJECT ((PPFn with) fe_interlocutor_2)
    ((PPingFn with) fe_interlocutor_2) ((PPFn among) fe_interlocutors)
    ((PPFn between) fe_interlocutors) ((PPFn in) languageSpoken)
    (AJP fe_depictive duration fe_manner) (N fe_means_of_communication)
    ((PPFn before) temporallyIntersects) ((PPFn during) temporallyIntersects)
    ((PPFn on) fe_means_of_communication situationTopic)
    ((PPingFn about) situationTopic) ((PPFn about) situationTopic)
    (NP situationTopic) (Sfin situationTopic))
   (:GAP (CNI fe_interlocutor_1 fe_interlocutor_2)
    (DNI fe_interlocutor_1 fe_interlocutor_2 fe_interlocutors))
   (:GEN (Poss fe_interlocutor_1))))
 (groupPatterns
  (TheSet ((2 13 0)) ((2 11 0)) ((2 6 0)) ((2 3 0)) ((2 0 0)) ((2 10 0))
   ((2 8 0) (2 9 0)) ((0 0 1) (2 9 1)) ((0 0 1) (2 7 0)) ((2 3 0) (2 6 0))
   ((0 0 0) (2 11 0)) ((2 6 0) (4 0 0)) ((2 0 0) (2 6 0)) ((2 5 2) (2 9 1))
   ((2 1 0) (4 0 0)) ((2 0 0) (4 0 0)) ((0 0 0) (2 0 0)) ((2 0 0) (2 5 1))
   ((2 2 0) (2 5 0)) ((0 0 1) (2 5 2) (2 11 0)) ((2 0 0) (2 11 0) (4 0 0))
   ((0 0 0) (2 0 0) (2 9 1)) ((2 0 0) (2 6 0) (4 0 0))
   ((0 0 0) (2 0 0) (2 6 0)) ((0 0 0) (2 0 0) (2 5 2))
   ((0 0 0) (2 4 0) (2 5 1)) ((0 0 0) (1 0 0) (2 0 0) (2 12 0)))))

(FNNounSemtrans (TheList) Conversion-TheWord
 (and (isa :NOUN (CausingFn IntrinsicStateChangeEvent)))
 (frame FN_Cause_change)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectActedOn)) (:GAP (INI doneBy toState))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Convertible-TheWord (and (isa :NOUN ConvertibleCar))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conveyance-TheWord (and (isa :NOUN Conveyance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "conveyer") Belt-TheWord
 (and (isa :NOUN ConveyorBelt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "conveyor") Belt-TheWord
 (and (isa :NOUN ConveyorBelt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Conviction-TheWord (and (isa :NOUN GuiltyVerdict))
 (frame FN_Verdict)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_charges))
   (:OBLIQUE-OBJECT ((PPFn for) fe_charges) ((PPingFn for) fe_charges)
    ((PPFn of) defendants) ((PPFn against) defendants)
    ((PPFn among) defendants) ((PPFn by) justiceOfCourt)
    (N fe_charges justiceOfCourt) ((PPFn under) ruleSystemUsed)
    ((PPFn in) fe_case temporallyIntersects))
   (:GAP (CNI fe_charges) (DNI fe_charges defendants)
    (INI fe_charges defendants) (DEN fe_finding))
   (:GEN (Poss defendants))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 7 0)) ((1 5 0)) ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 6 0))
   ((1 2 0)) ((3 0 0)) ((1 8 0)) ((1 2 0) (1 8 1)) ((1 1 0) (1 6 1))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 3 0)) ((1 0 0) (1 4 0)) ((1 6 0) (3 0 0))
   ((1 2 0) (1 6 0)) ((1 3 0) (1 6 0)))))

(FNNounSemtrans (TheList) Convoy-TheWord (and (isa :NOUN Convoy))
 (frame FN_Convoy)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_cargo) ((PPFn to) to-Generic)
    ((PPFn on) trajectory-Complete) ((PPFn along) trajectory-Complete)
    ((PPFn in) eventOccursAt)
    (AJP fe_aggregate_property fe_direction eventOccursAt
     ownerOfProprietaryThing)
    ((PPFn from) from-Generic)
    (A fe_aggregate_property fe_cargo fe_domain ownerOfProprietaryThing
     from-Generic)
    ((PPFn of) fe_aggregate_property fe_cargo fe_support groupMembers)
    (N fe_cargo eventOccursAt ownerOfProprietaryThing fe_support groupMembers))
   (:GAP (2nd fe_cargo) (DEN groupMembers))
   (:GEN (Poss fe_cargo ownerOfProprietaryThing fe_support))))
 (groupPatterns
  (TheSet ((0 8 3)) ((0 9 4)) ((2 0 2)) ((0 9 3)) ((0 6 0)) ((0 7 4)) ((2 0 1))
   ((0 9 2)) ((0 5 3)) ((0 7 3)) ((0 5 1)) ((0 8 2)) ((0 8 1)) ((0 9 0))
   ((0 7 1)) ((2 0 0)) ((0 8 0)) ((0 5 0)) ((0 5 2) (0 9 4)) ((0 4 0) (0 9 2))
   ((0 3 0) (0 9 2)) ((0 7 2) (0 9 2)) ((0 5 1) (0 9 1)) ((0 9 0) (2 0 2))
   ((0 0 0) (0 9 0)) ((0 5 0) (0 8 3)) ((0 5 0) (0 9 3)) ((0 5 0) (0 9 2))
   ((0 7 0) (0 7 3)) ((0 2 0) (0 5 0)) ((0 5 0) (0 9 0)) ((0 5 0) (0 5 0))
   ((0 2 0) (0 5 1) (0 7 3)) ((0 1 0) (0 5 0) (0 6 0)))))

(FNNounSemtrans (TheList) Convoy-TheWord (and (isa :NOUN Convoy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coo-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn with) fe_manner)
    ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 2 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Cook-TheWord (and (isa :NOUN CookingFood))
 (frame FN_Cooking_creation)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy foodItemPrepared))
   (:OBJECT (NP ingredients foodItemPrepared))
   (:OBLIQUE-OBJECT (NP purposeOfEvent) ((PPFn for) purposeOfEvent)
    ((PPFn in) temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 0 1)) ((1 0 1) (2 1 0)) ((0 0 1) (2 0 0)) ((1 0 0) (1 0 1))
   ((0 0 0) (1 0 1) (2 2 0)))))

(FNNounSemtrans (TheList) Cook-TheWord (and (isa :NOUN Chef)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cook-TheWord (and (isa :NOUN Chef))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cookie") Cutter-TheWord
 (and (isa :NOUN CookieCutter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cookie") Jar-TheWord (and (isa :NOUN CookieJar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cookie-TheWord (and (isa :NOUN Cookie))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "cooking") Oil-TheWord (and (isa :NOUN CookingOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cooking-TheWord (and (isa :NOUN CookingFood))
 (frame FN_Cooking_creation)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt)) (:GAP (INI foodItemPrepared))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Cooking-TheWord (and (isa :NOUN CookingFood))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cooking") Utensil-TheWord
 (and (isa :NOUN CookingUtensil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cooking") Utensil-TheWord
 (and (isa :NOUN CookingVessel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cooktop-TheWord (and (isa :NOUN Cooktop-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cooler-TheWord (and (isa :NOUN Cooler-Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Cooling-TheWord (and (isa :NOUN CoolingProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cooling") Tower-TheWord
 (and (isa :NOUN CoolingTower)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coombe-TheWord (and (isa :NOUN Valley))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cooperation-TheWord
 (and (isa :NOUN CooperationEvent)) (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (Poss fe_partner_1) (NP fe_partner_1 fe_partners))
   (:OBLIQUE-OBJECT ((PPFn during) duration) ((PPFn by) fe_partner_1)
    ((PPFn with) fe_partner_2) ((PPFn from) fe_partner_2)
    ((PPFn among) fe_partners) ((PPFn between) fe_partners)
    ((PPFn of) fe_partners) ((PPFn within) eventOccursAt)
    (A fe_partner_2 fe_partners fe_undertaking) (VPto fe_undertaking)
    ((PPingFn on) fe_undertaking) ((PPFn against) fe_undertaking)
    ((PPFn in) fe_partners eventOccursAt temporallyIntersects fe_undertaking)
    ((PPingFn in) fe_undertaking)
    (AJP fe_degree fe_manner fe_partners fe_undertaking)
    (N fe_partners temporallyIntersects fe_undertaking)
    ((PPFn on) fe_undertaking) ((PPFn over) fe_undertaking))
   (:GAP (CNI fe_partner_1)
    (DNI fe_partner_1 fe_partner_2 fe_partners fe_undertaking)
    (INI fe_partner_1 fe_partners fe_undertaking))
   (:GEN (Poss fe_partner_1 fe_partner_2 fe_partners))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 15 2)) ((3 0 2)) ((1 6 0)) ((1 16 0)) ((1 12 3))
   ((1 8 2)) ((1 5 0)) ((1 4 0)) ((1 8 1)) ((3 0 0)) ((1 2 0)) ((1 14 0))
   ((1 17 0) (3 0 2)) ((1 16 0) (3 0 2)) ((1 5 0) (1 15 2)) ((1 5 0) (1 8 2))
   ((1 8 2) (1 15 0)) ((1 9 0) (1 14 2)) ((1 11 0) (1 14 2)) ((1 8 1) (1 16 0))
   ((1 8 1) (1 12 3)) ((1 8 1) (1 11 0)) ((1 8 1) (1 8 2)) ((0 1 1) (1 12 2))
   ((1 4 0) (1 7 0)) ((1 3 0) (1 16 0)) ((1 2 0) (3 0 0)) ((1 8 2) (3 0 0))
   ((0 1 0) (1 2 0)) ((1 13 0) (3 0 1)) ((1 2 0) (1 13 0)) ((1 2 0) (1 11 0))
   ((1 2 0) (1 14 1)) ((1 5 0) (1 14 0)) ((1 4 0) (1 14 0)) ((1 14 0) (1 15 0))
   ((1 8 1) (1 14 0)) ((1 12 1) (1 15 1) (3 0 2)) ((1 2 0) (1 9 0) (3 0 0))
   ((1 2 0) (1 15 2) (3 0 0)) ((0 0 0) (1 2 0) (1 8 2))
   ((1 1 0) (1 2 0) (1 8 2)) ((0 1 0) (1 2 0) (1 14 3))
   ((1 8 0) (1 12 3) (1 15 1)) ((1 0 0) (1 2 0) (3 0 0))
   ((1 8 2) (1 12 0) (1 14 0)) ((1 4 0) (1 10 0) (1 14 0))
   ((0 1 1) (1 9 0) (1 14 0)) ((1 2 0) (1 8 2) (1 14 0))
   ((0 1 0) (1 2 0) (1 14 0)))))

(FNNounSemtrans (TheList "coordinate") System-TheWord
 (and (isa :NOUN FrameOfReference)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coordinated" "universal") Time-TheWord
 (and (isa :NOUN CoordinatedUniversalTime)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coot-TheWord (and (isa :NOUN OldHuman))
 (frame FN_People_by_age) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cop-TheWord (and (isa :NOUN PoliceOfficer-Municipal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cope-TheWord (and (isa :NOUN Cape-Clothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP wornOn) (AJP fe_descriptor clothingStyle)
    ((PPFn around) wearer))
   (:GAP (DEN itemWorn) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList "copper") Cable-TheWord
 (and (isa :NOUN CopperCable-Generic_Procurable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "copper") Ore-TheWord (and (isa :NOUN CopperOre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "copper") Refinery-TheWord
 (and (isa :NOUN CopperRefinery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Copper-TheWord (and (isa :NOUN Copper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Copper-TheWord (and (isa :NOUN CopperColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Copperhead-TheWord (and (isa :NOUN Copperhead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coppice-TheWord
 (and (isa :NOUN (SmallFn WoodedArea))) (frame FN_Biological_area)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Copy-TheWord (and (isa :NOUN IBTCopying))
 (frame FN_Duplication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_characterization) ((PPFn in) fe_characterization)
    ((PPFn from) performedBy) (Srel fe_depictive) ((PPFn of) itemCopied)
    (N fe_characterization instrument-Generic itemCopied purposeOfEvent))
   (:GAP (DEN copyProduced) (DNI itemCopied) (INI itemCopied))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 1)) ((0 1 0)) ((0 5 0)) ((0 3 0) (0 4 0))
   ((0 5 2) (2 0 0)) ((0 2 0) (0 5 2)) ((0 1 0) (0 5 3)) ((0 1 0) (0 4 0))
   ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Copy-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationInstanceExists physicalCopyOf :NOUN PartiallyTangible))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Copyist-TheWord (and (isa :NOUN Copyist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Copyright-TheWord (and (isa :NOUN CopyrightLicense))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coral") Reef-TheWord (and (isa :NOUN CoralReef))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coral") Sea-TheWord (and (isa :NOUN CoralSea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coral") Snake-TheWord (and (isa :NOUN CoralSnake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corbel-TheWord (and (isa :NOUN Corbel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cord-TheWord (and (isa :NOUN Cord-Textile))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_connected_item) ((PPFn on) fe_connected_item)
    ((PPFn around) eventOccursAt) ((PPFn round) eventOccursAt)
    ((PPFn for) deviceUse)
    (AJP mainConstituent activeIngredientsOfType deviceUse)
    (N mainConstituent deviceUse))
   (:GAP (DEN fe_connector)) (:GEN (Poss fe_connected_item eventOccursAt))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 5 2)) ((0 5 1)) ((0 6 0)) ((0 5 0)) ((0 3 0)) ((0 2 0))
   ((0 1 0)) ((0 0 0)) ((0 4 0) (0 6 0)) ((2 0 0) (2 0 1)))))

(FNNounSemtrans (TheList) Cord-TheWord (and (isa :NOUN Cord)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cord-TheWord (and (isa :NOUN CordlikeObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cordillera-TheWord (and (isa :NOUN MountainRange))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_relative_location)
    (AJP (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "cordless") Telephone-TheWord
 (and (isa :NOUN CordlessTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cordlike") Artifact-TheWord
 (and (isa :NOUN CordlikeArtifact)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Core-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo) (bindingTemplate (TheList (:GAP (DEN fe_gizmo))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Core-TheWord (and (isa :NOUN CenterFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coriander-TheWord (and (isa :NOUN Coriander))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cork-TheWord (and (isa :NOUN CorkTheStopper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corkscrew-TheWord (and (isa :NOUN Corkscrew))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corn") Chip-TheWord (and (isa :NOUN CornChip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corn") Field-TheWord
 (and (isa :NOUN (FieldFn CornPlant))) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corn") Plant-TheWord (and (isa :NOUN CornPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corn-TheWord
 (and (isa :NOUN (MobFn Corn-SingleGrain))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corn-TheWord (and (isa :NOUN Corn-SingleGrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corn-TheWord (and (isa :NOUN CornPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cornea-TheWord (and (isa :NOUN Cornea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corner-TheWord (and (isa :NOUN CornerOnObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cornet-TheWord (and (isa :NOUN Trumpet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cornfield-TheWord
 (and (isa :NOUN (FieldFn CornPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cornice-TheWord
 (and (isa :NOUN Cornice-WindowCasing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cornmeal-TheWord (and (isa :NOUN CornMeal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corolla-TheWord (and (isa :NOUN Corolla))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corona") Borealis-TheWord
 (and (isa :NOUN CoronaBorealis-Constellation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coronal") Suture-TheWord
 (and (isa :NOUN CoronalSuture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coronary") Artery-TheWord
 (and (isa :NOUN CoronaryArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coronary") Sinus-TheWord
 (and (isa :NOUN CoronarySinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "coronary") Thrombosis-TheWord
 (and (isa :NOUN CoronaryBlockage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coronation-TheWord (and (isa :NOUN Coronation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coronet-TheWord (and (isa :NOUN Crown))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent)
    ((PPFn of) mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Corporation-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor)) (:GAP (DEN fe_business))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Corporation-TheWord
 (and (isa :NOUN LegalCorporation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corps-TheWord (and (isa :NOUN Corps-MilitaryEchelon))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_aggregate_property) (AJP fe_aggregate_property)
    (N fe_individuals) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (INI fe_individuals))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Corps-TheWord (and (isa :NOUN Corps-MilitaryEchelon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corpse-TheWord
 (and (isa :NOUN (DeadPhysicalRemainsFn HomoSapiens))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corpus") Callosum-TheWord
 (and (isa :NOUN CorpusCallosum)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "correction" "fluid") Vial-TheWord
 (and (isa :NOUN CorrectionFluid-Vial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "correction" "tape") Dispenser-TheWord
 (and (isa :NOUN CorrectionTapeDispenser)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "correction" "tape") Refill-TheWord
 (and (isa :NOUN CorrectionTapeRefill)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "correction") Tape-TheWord
 (and (isa :NOUN CorrectionTape)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "correctional") Institution-TheWord
 (and (isa :NOUN CorrectionalFacility)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "correctional") Institution-TheWord
 (and (isa :NOUN Prison)) (frame FN_Prison) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corrective") Eyeglasses-TheWord
 (and (isa :NOUN Eyeglasses-Corrective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corrective") Lens-TheWord
 (and (isa :NOUN CorrectiveLens)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corrective") Lens-TheWord (and (isa :NOUN Eyewear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Correctness-TheWord (and (isa :NOUN MakingAMistake))
 (frame FN_Correctness)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_information))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Correctness-TheWord (and (isa :NOUN Accuracy))
 (frame FN_Correctness)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_information))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Corridor-TheWord (and (isa :NOUN Hallway))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corrie-TheWord (and (isa :NOUN Cirque))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corrosion-TheWord (and (isa :NOUN Corrosion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "corrugated" "cardboard") Box-TheWord
 (and (isa :NOUN CorrugatedCardboardBox)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corse-TheWord (and (isa :NOUN Corsica))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corset-TheWord (and (isa :NOUN Corset))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 2))
   ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Corticosteroid-TheWord
 (and (isa :NOUN Corticosteroid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corticosterone-TheWord
 (and (isa :NOUN Corticosterone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cortisone-TheWord (and (isa :NOUN Cortisone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Corundum-TheWord (and (isa :NOUN Corundum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coruscation-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cosecant-TheWord (and (isa :NOUN CosecantFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cosine-TheWord (and (isa :NOUN CosineFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cosmetic") Surgeon-TheWord
 (and (isa :NOUN PlasticSurgeon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cosmetic") Surgery-TheWord
 (and (isa :NOUN CosmeticSurgery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cosmetics") Case-TheWord
 (and (isa :NOUN CosmeticsBag)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cossie-TheWord (and (isa :NOUN SwimSuit))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N clothingStyle) (AJP deviceUse))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Cost-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance cost TemporalThing :NOUN))
 (frame FN_Expensiveness)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPbrst resourceInEvent) (N objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer fe_intended_event)
    (AJP fe_intended_event))
   (:GAP (INI resourceInEvent objectOfPossessionTransfer buyer) (CNI buyer))))
 (groupPatterns (TheSet ((0 3 0)) ((0 1 0)) ((0 2 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "costa") Rican-TheWord
 (and (isa :NOUN CostaRicanPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Costume-TheWord (and (isa :NOUN Costume))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle deviceUse)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 3)) ((0 1 2)) ((0 0 1)) ((0 1 1)) ((0 0 0))
   ((0 1 2) (2 0 0)) ((0 0 2) (0 1 2)) ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 1 2)) ((0 0 0) (0 0 1)) ((0 1 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Costume-TheWord (and (isa :NOUN Costume))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cotangent-TheWord (and (isa :NOUN CotangentFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coterie-TheWord (and (isa :NOUN Entourage))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_individuals) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (INI fe_individuals))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Cottage-TheWord (and (isa :NOUN Cottage))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cotton") Ball-TheWord (and (isa :NOUN CottonBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cotton") Fabric-TheWord (and (isa :NOUN CottonCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cotton") Swab-TheWord (and (isa :NOUN CottonSwab))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cotton-TheWord (and (isa :NOUN CottonCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cotton-TheWord (and (isa :NOUN CottonPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cotton-TheWord (and (isa :NOUN CottonStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cottons-TheWord
 (and (isa :NOUN Clothing-Generic)
      (relationInstanceExists mainConstituent :NOUN CottonCloth))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Cotyledon-TheWord (and (isa :NOUN Cotyledon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Couch-TheWord (and (isa :NOUN Sofa-PieceOfFurniture))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cougar-TheWord (and (isa :NOUN Cougar))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cough") Drop-TheWord (and (isa :NOUN CoughDrop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cough") Drop-TheWord (and (isa :NOUN Troche))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cough-TheWord
 (and (isa :NOUN Cough-AilmentCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cough-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Coughing)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_component_sound fe_manner) ((PPFn with) fe_manner)
    ((PPFn of) fe_internal_cause emitter))))
 (groupPatterns
  (TheSet ((1 2 1)) ((0 0 0)) ((1 2 0)) ((1 0 0)) ((0 0 0) (1 0 1))
   ((1 0 1) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Coulomb-TheWord (and (isa :NOUN Coulomb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "count") Noun-TheWord (and (isa :NOUN CountNoun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Count-TheWord (and (isa :NOUN Count-Nobleman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Counter-Attack-TheWord
 (and (isa :NOUN Counterattack-MilitaryTask)) (frame FN_Counterattack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (A performedBy) ((PPFn by) performedBy)
    ((PPFn with) by-Underspecified) (N performedBy purposeOfEvent)
    ((PPFn from) from-Generic) (NP temporallyIntersects)
    (Sub temporallyIntersects)
    (AJP fe_manner eventOutcomes temporallyIntersects) ((PPFn on) victim))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 1)) ((2 0 0)) ((1 1 0)) ((0 0 0)) ((1 3 0)) ((1 0 0))
   ((1 1 0) (1 7 2)) ((1 3 0) (1 6 0)) ((1 3 0) (1 5 0)) ((0 0 0) (1 7 1))
   ((1 3 0) (1 3 1)) ((1 2 0) (1 3 0)) ((0 0 0) (1 7 0)) ((1 3 0) (1 7 0))
   ((0 0 0) (1 4 0) (1 8 0)))))

(FNNounSemtrans (TheList) Counter-Offensive-TheWord
 (and (isa :NOUN Counterattack-MilitaryOperation)) (frame FN_Counterattack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy)) (:OBLIQUE-OBJECT (N performedBy))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Counter-TheWord (and (isa :NOUN CounterTop))
 (frame FN_Architectural_part) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Countertop-TheWord (and (isa :NOUN CounterTop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Countess-TheWord (and (isa :NOUN Countess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "counting") Device-TheWord
 (and (isa :NOUN CountingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "country") House-TheWord
 (and (isa :NOUN House-Country)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Country-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use) (bindingTemplate (TheList (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Country-TheWord (and (isa :NOUN IndependentCountry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Country-TheWord (and (isa :NOUN RuralArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Country-TheWord (and (isa :NOUN Country))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    ((PPFn with) fe_descriptor) (Sub fe_descriptor)
    (A fe_container_possessor (InverseBinaryPredicateFn nameString))
    (N fe_descriptor (InverseBinaryPredicateFn nameString))
    (AJP fe_container_possessor fe_descriptor fe_relative_location)
    ((PPFn in) fe_container_possessor fe_descriptor fe_relative_location))
   (:GAP (DEN eventLocale) (2nd fe_relative_location)) (:GEN (Poss parts))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 5 2)) ((1 4 1)) ((1 3 1)) ((1 2 0)) ((1 1 0)) ((1 4 0))
   ((1 5 1)) ((1 0 0)) ((1 6 0)) ((1 5 0)) ((1 3 0)) ((3 0 0))
   ((1 5 1) (1 6 1)) ((1 4 0) (1 5 1)) ((0 0 0) (1 3 0)) ((1 0 0) (1 4 0))
   ((1 5 1) (1 6 0)))))

(FNNounSemtrans (TheList) Countryside-TheWord
 (and (isa :NOUN Facility-Generic)) (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) County-TheWord (and (isa :NOUN County))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) County-TheWord (and (isa :NOUN County))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    (AJP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) County-TheWord (and (isa :NOUN CapitalCityOfRegion))
 (frame FN_Relational_political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coup-TheWord (and (isa :NOUN Coup))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_selector))
   (:OBLIQUE-OBJECT (A fe_manner) ((PPFn against) losesControl losesControl)
    ((PPFn by) fe_selector) (AJP fe_manner losesControl fe_selector)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) temporallyIntersects) (N fe_selector temporallyIntersects)
    ((PPFn on) temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 6 1)) ((1 6 0)) ((1 4 0)) ((1 1 0)) ((1 3 0))
   ((1 2 0) (1 7 0)) ((1 6 0) (1 6 1)) ((1 2 0) (1 6 0)) ((0 0 0) (1 4 0))
   ((1 3 1) (1 4 1)) ((1 1 0) (1 6 0)) ((1 1 0) (1 3 2)) ((1 3 0) (1 5 0))
   ((1 3 0) (1 4 1)) ((1 0 0) (1 2 0)) ((1 3 0) (1 4 0)) ((1 1 0) (1 3 0))
   ((1 2 0) (1 4 0) (1 4 1)))))

(FNNounSemtrans (TheList) Couple-TheWord (and (isa :NOUN PairOfObjects))
 (frame FN_Cardinal_numbers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_precision) ((PPFn of) fe_unit))
   (:GAP (DEN fe_number)) (:NOUN (N fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Couple-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partners)) (:OBLIQUE-OBJECT (AJP fe_depictive))
   (:GAP (DEN fe_partners))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Coupon-TheWord (and (isa :NOUN Voucher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "course" "of") Action-TheWord
 (and (isa :NOUN CourseOfAction)) (frame FN_Means) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Course-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Course-TheWord (and (isa :NOUN CourseOfAMeal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Course-TheWord (and (isa :NOUN Trajectory))
 (frame FN_Path_traveled) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Course-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) ((PPFn on) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Court-TheWord (and (isa :NOUN Court-Judicial))
 (frame FN_Judicial_body)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_jurisdiction) (AJP fe_jurisdiction eventOccursAt)
    ((PPFn in) eventOccursAt) (A fe_jurisdiction fe_rank) ((PPFn of) fe_task))
   (:GAP (DEN fe_judicial_body) (DNI fe_domain fe_jurisdiction fe_task)
    (INI fe_jurisdiction fe_task))
   (:GEN (Poss fe_judges))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 4 0)) ((0 1 0)) ((0 1 1)) ((0 3 0)) ((2 0 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Court-TheWord (and (isa :NOUN Courthouse))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_container_possessor)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Court-TheWord (and (isa :NOUN Courtyard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Court-TheWord (and (isa :NOUN SportsPlayingArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Courthouse-TheWord (and (isa :NOUN Courthouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Courtyard-TheWord (and (isa :NOUN Courtyard))
 (frame FN_Locale_by_use) (bindingTemplate (TheList (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cousin-TheWord
 (and (isa :NOUN Person) (relationInstanceExists cousins :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (CNI fe_ego) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((0 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0))
   ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Couturier-TheWord (and (isa :NOUN FashionDesigner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "covalent") Bond-TheWord
 (and (isa :NOUN CovalentBond)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cove-TheWord (and (isa :NOUN Cove))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString))
    ((PPFn around) fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Covenant-TheWord (and (isa :NOUN Commitment))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo)
    (VPto recipientOfInfo infoTransferred) (Sfin infoTransferred))
   (:GAP (CNI performedBy))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Coverall-TheWord (and (isa :NOUN Overalls))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "covered") Bridge-TheWord
 (and (isa :NOUN CoveredBridge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Covering-TheWord (and (isa :NOUN Covering-Object))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "covert") Operation-TheWord
 (and (isa :NOUN MilitaryOperation-Covert)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Covey-TheWord (and (isa :NOUN (GroupFn Person)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "cow") Pen-TheWord (and (isa :NOUN Corral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cow-TheWord (and (isa :NOUN Cow)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coward-TheWord
 (and (isa :NOUN (FrequentPerformerFn (CowardlyFn Action)))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cowboy") Boot-TheWord (and (isa :NOUN CowboyBoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cowboy") Hat-TheWord (and (isa :NOUN CowboyHat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cowboy-TheWord (and (isa :NOUN Cowboy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coworker-TheWord
 (and (isa :NOUN Person) (relationInstanceExists coworkers :NOUN Person))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cowl-TheWord
 (and (isa :NOUN Cape)
      (relationInstanceExists properPhysicalParts :NOUN HoodOfGarment))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent)
    (N (InverseBinaryPredicateFn outfitParts) subRegions) (VPing subRegions))
   (:GAP (DEN parts) (2nd wearer))
   (:GEN (Poss (InverseBinaryPredicateFn outfitParts) wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 2 0)) ((0 0 0)) ((0 0 0) (2 0 0))
   ((0 1 0) (0 1 1) (2 0 1)))))

(FNNounSemtrans (TheList) Coxswain-TheWord (and (isa :NOUN Coxswain-Racing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Coyote-TheWord (and (isa :NOUN Coyote-Animal))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crab-TheWord (and (isa :NOUN Crab))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crab-TheWord (and (isa :NOUN (MeatFn Crab)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crabmeat-TheWord (and (isa :NOUN (MeatFn Crab)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crack-TheWord (and (isa :NOUN Cocaine-Crack))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crack-TheWord (and (isa :NOUN Crevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cracker-TheWord (and (isa :NOUN Cracker-FoodItem))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Cradle-TheWord (and (isa :NOUN Cradle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Craft-TheWord (and (isa :NOUN CraftActivity))
 (frame FN_Craft)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_culture) (A fe_descriptor))
   (:GAP (DEN processTypeForAccomplishmentType)
    (INI processTypeForAccomplishmentType fe_culture fe_practitioner))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Craftsman-TheWord (and (isa :NOUN CraftWorker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crag-TheWord (and (isa :NOUN RuggedTerrain))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn of) fe_container_possessor)
    (AJP (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList "cranberry") Bush-TheWord
 (and (isa :NOUN CranberryBush)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cranberry") Juice-TheWord
 (and (isa :NOUN (JuiceFn (FruitFn CranberryBush)))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cranberry-TheWord
 (and (isa :NOUN (FruitFn CranberryBush))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crane-TheWord (and (isa :NOUN Crane-Bird))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crane-TheWord (and (isa :NOUN Crane-MotorizedDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crane-TheWord (and (isa :NOUN CraneVehicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cranial") Nerve-TheWord
 (and (isa :NOUN CranialNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cranium-TheWord (and (isa :NOUN Cranium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crank-TheWord (and (isa :NOUN MechanicalDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crankshaft-TheWord (and (isa :NOUN CrankShaft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crank") Shaft-TheWord (and (isa :NOUN CrankShaft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crap-TheWord (and (isa :NOUN Feces)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Craps-TheWord (and (isa :NOUN Craps-TheGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crash-TheWord (and (isa :NOUN Collision))
 (frame FN_Impact)
 (bindingTemplate
  (TheList (:SUBJECT (NP primaryObjectMoving))
   (:OBLIQUE-OBJECT ((PPFn against) objectActedOn)
    ((PPFn of) primaryObjectMoving) (A pressureApplied)
    ((PPFn near) eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn on) eventOccursAt) (AJP rateOfEvent)
    (N primaryObjectMoving objectMoving eventOccursAt temporallyIntersects)
    (AVP temporallyIntersects) ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn after) temporallyIntersects))
   (:GEN (Poss primaryObjectMoving temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 10 0)) ((1 5 0)) ((1 4 0)) ((1 2 0)) ((1 7 1))
   ((2 0 0)) ((0 0 0)) ((1 7 0)) ((1 4 0) (1 6 0)) ((1 7 2) (1 9 0))
   ((1 5 0) (1 7 1)) ((1 4 0) (1 7 1)) ((1 2 0) (1 7 1)) ((0 0 0) (2 0 1))
   ((1 4 0) (2 0 0)) ((1 1 0) (1 4 0)) ((0 0 0) (1 7 2)) ((1 3 0) (1 7 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 1 0)) ((1 4 0) (1 7 1) (1 9 1))
   ((1 4 0) (1 5 0) (1 7 1)) ((1 4 0) (1 8 0) (2 0 0))
   ((1 1 0) (1 7 3) (1 9 0)) ((0 0 0) (1 7 1) (1 7 2) (2 0 1)))))

(FNNounSemtrans (TheList) Crash-TheWord (and (isa :NOUN ComputerCrashing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crate-TheWord (and (isa :NOUN Crate))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Crate-TheWord (and (isa :NOUN Crate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crater") Basin-TheWord (and (isa :NOUN CraterBasin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crater-TheWord (and (isa :NOUN Crater))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N fe_formational_cause (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn on) fe_relative_location) ((PPFn in) fe_relative_location)
    (AJP fe_formational_cause fe_relative_location)
    ((PPFn at) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 6 0)) ((0 5 1)) ((0 2 1)) ((0 0 0)) ((0 5 0)) ((0 2 0))
   ((0 1 0) (0 5 1)) ((0 0 1) (0 4 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Cravat-TheWord (and (isa :NOUN NeckTie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 0 0)) ((0 1 1)) ((0 1 0))
   ((0 0 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Craving-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) fe_focal_participant) (N fe_focal_participant)
    (AJP fe_degree fe_manner))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 1 0)) ((2 0 0)) ((1 0 0) (1 2 1)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Crawl-TheWord (and (isa :NOUN Crawling-Swimming))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crawl-TheWord
 (and (isa :NOUN CrawlingOnHandsAndKnees)) (frame FN_Self_motion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) duration) ((PPFn into) to-Generic)
    (AJP fe_manner) ((PPFn on) fe_manner) ((PPFn beneath) trajectory-Complete))
   (:GAP (2nd performedBy))))
 (groupPatterns (TheSet ((0 2 0)) ((0 3 0) (0 4 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Crayfish-TheWord (and (isa :NOUN Crayfish))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crayon-TheWord (and (isa :NOUN Crayon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creak-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) (AJP fe_manner)
    ((PPingFn in) emitter) ((PPingFn of) emitter)
    ((PPFn of) fe_noisy_event emitter objectMoving))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 4 1)) ((0 0 0)) ((1 4 0)) ((1 1 0))
   ((1 1 0) (1 4 1)) ((1 0 0) (1 4 2)))))

(FNNounSemtrans (TheList "cream") Cheese-TheWord (and (isa :NOUN CreamCheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cream") Pie-TheWord (and (isa :NOUN CreamPie))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cream-TheWord (and (isa :NOUN Cream-Dairy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creamer-TheWord (and (isa :NOUN Creamer-Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creamer-TheWord (and (isa :NOUN Creamer-Container))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "creatine") Product-TheWord
 (and (isa :NOUN CreatineProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creation-TheWord
 (and (isa :NOUN
       (IntentionallyFn
        (CollectionIntersection2Fn CreationEvent PurposefulAction))))
 (frame FN_Intentionally_create)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N outputsCreated) ((PPFn of) outputsCreated))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Creation-TheWord (and (isa :NOUN Artifact-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creationism-TheWord (and (isa :NOUN Creationism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creator-TheWord (and (isa :NOUN Creator-Person))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "creature" "of") Habit-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists likesEvent :NOUN RoutineAction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creature-TheWord (and (isa :NOUN Animal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Credence-TheWord
 (and (isa :NOUN Evidence-Indication)) (frame FN_Evidence)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Credence-TheWord
 (and (isa :NOUN Trusting-GrantingPermission)) (frame FN_Trust)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "credit") Card-TheWord (and (isa :NOUN CreditCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Credit-TheWord (and (isa :NOUN CreditAccount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "credit") Union-TheWord (and (isa :NOUN CreditUnion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creed-TheWord (and (isa :NOUN BeliefSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creek-TheWord (and (isa :NOUN Creek))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn near) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "creme") Anglais-TheWord
 (and (isa :NOUN CremeAnglais)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "creme") Brulee-TheWord (and (isa :NOUN CremeBrulee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "creme") Caramel-TheWord
 (and (isa :NOUN CremeCaramel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crenelation-TheWord (and (isa :NOUN Battlement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creole-TheWord (and (isa :NOUN CreoleLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creole-TheWord (and (isa :NOUN EthnicGroupOfCreoles))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Creole-TheWord
 (and (isa :NOUN EthnicGroupOfCreolesOfTheUS)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crest-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_part_prop) (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 3 0)) ((0 1 0) (0 1 0) (2 0 0))
   ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Cretaceous-TheWord
 (and (isa :NOUN Cretaceous-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crevasse-TheWord (and (isa :NOUN Crevasse))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Crew-TheWord (and (isa :NOUN CrewMemberOnShip))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Crew-TheWord (and (isa :NOUN CrewTeam))
 (frame FN_Team)
 (bindingTemplate
  (TheList (:SUBJECT (N fe_team))
   (:OBLIQUE-OBJECT (VPfin processTypeForAccomplishmentType)
    (VPto processTypeForAccomplishmentType)
    (N processTypeForAccomplishmentType fe_domain))
   (:GAP (DNI processTypeForAccomplishmentType) (DEN fe_team))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Crewcut-TheWord
 (and (isa :NOUN HumanWithCrewcutHairstyle)) (frame FN_Hair_configuration)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crib") Mattress-TheWord
 (and (isa :NOUN CribMattress)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crib-TheWord (and (isa :NOUN Crib))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cricket-TheWord (and (isa :NOUN Cricket-Insect))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cricket-TheWord (and (isa :NOUN Cricket-TheGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crime") Rate-TheWord (and (isa :NOUN CrimeRate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crime-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Committing_crime)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator) (Poss perpetrator))
   (:OBLIQUE-OBJECT (NP fe_crime) (A instrument-Generic)
    ((PPFn of) perpetrator))
   (:GAP (DEN fe_crime) (INI perpetrator)) (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 1 0) (1 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "criminal") Law-TheWord (and (isa :NOUN CriminalLaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "criminal") Organization-TheWord
 (and (isa :NOUN CriminalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Criminal-TheWord (and (isa :NOUN Criminal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Criminologist-TheWord (and (isa :NOUN Criminologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Criminology-TheWord (and (isa :NOUN Criminology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crimp") Connector-TheWord
 (and (isa :NOUN CrimpConnector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crimping") Tool-TheWord
 (and (isa :NOUN CrimpingTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crinoline-TheWord (and (isa :NOUN Hoopskirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Crisis-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP objectActedOn) ((PPFn in) fe_degree objectActedOn)
    (N causes-Underspecified fe_undesirable_event)
    (NP objectActedOn fe_undesirable_event))
   (:GAP (DEN fe_undesirable_event) (DNI fe_undesirable_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 0 0)) ((0 1 1) (0 3 1)) ((0 1 0) (0 2 1))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Critic-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation)
    (AJP fe_depictive objectOfEvaluation) (N objectOfEvaluation))
   (:GAP (DEN communicatorOfInfo) (DNI objectOfEvaluation fe_reason))
   (:NOUN (N communicatorOfInfo)) (:GEN (Poss objectOfEvaluation))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 2 0)) ((1 1 1)) ((1 0 0)) ((0 0 0) (1 0 0))
   ((1 2 0) (3 0 0)) ((1 1 1) (3 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Critic-TheWord (and (isa :NOUN Critic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "critical") Thinking-TheWord
 (and (isa :NOUN CriticalThinking)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Criticism-TheWord
 (and (isa :NOUN Disapproving-CommunicationAct))
 (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo objectOfEvaluation fe_reason))
   (:OBLIQUE-OBJECT ((PPFn among) communicatorOfInfo)
    ((PPFn by) communicatorOfInfo) ((PPFn from) communicatorOfInfo)
    ((PPingFn by) communicatorOfInfo) ((PPFn against) objectOfEvaluation)
    (AJP communicatorOfInfo fe_degree fe_manner) ((PPingFn for) fe_reason)
    ((PPFn for) fe_reason) ((PPFn over) fe_reason) (Sfin fe_reason)
    (Sforto fe_reason)
    ((PPFn of) communicatorOfInfo objectOfEvaluation fe_reason)
    ((PPingFn of) fe_reason) ((PPFn at) objectOfEvaluation fe_reason)
    (NP fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI objectOfEvaluation fe_reason)
    (INI fe_reason))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 9 0)) ((1 12 0)) ((1 11 2))
   ((1 7 0)) ((3 0 0)) ((1 11 1)) ((0 0 1)) ((0 0 2) (1 2 0)) ((1 1 0) (1 9 0))
   ((1 1 0) (1 11 2)) ((0 0 2) (1 0 0)) ((0 0 0) (1 13 1)) ((1 5 2) (1 9 0))
   ((1 11 1) (3 0 0)) ((0 0 1) (1 11 0)) ((0 0 1) (1 2 0)) ((0 0 0) (1 11 1))
   ((0 0 0) (1 13 0)) ((0 0 0) (1 4 0)) ((0 0 1) (1 10 0)) ((0 0 1) (1 9 0))
   ((0 0 1) (1 6 0)) ((0 0 1) (1 8 0)) ((0 0 1) (1 7 0)) ((0 0 0) (3 0 0))
   ((0 0 1) (1 2 0) (1 9 0)) ((0 0 1) (1 2 0) (1 7 0))
   ((1 1 0) (1 11 1) (1 14 0)) ((0 0 0) (1 7 0) (1 13 0))
   ((0 0 1) (1 5 0) (1 6 0)) ((0 0 1) (0 0 1) (1 2 0))
   ((1 5 1) (1 7 0) (3 0 0)) ((0 0 0) (1 5 1) (1 13 0))
   ((0 0 1) (1 5 1) (1 6 0)))))

(FNNounSemtrans (TheList) Critique-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT (AJP communicatorOfInfo) ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo)
    ((PPFn of) objectOfEvaluation situationTopic)
    (N communicatorOfInfo situationTopic) ((PPFn on) situationTopic))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 5 0) (2 0 0))
   ((1 3 1) (2 0 0)) ((1 4 1) (2 0 0)) ((0 0 0) (1 3 1)) ((1 3 1) (1 4 0))
   ((1 0 0) (1 3 1)) ((1 3 0) (2 0 0)) ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Croatian-TheWord
 (and (isa :NOUN EthnicGroupOfCroatians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Croc-TheWord (and (isa :NOUN Crocodile))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crochet") Needle-TheWord
 (and (isa :NOUN CrochetHook)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crochet-TheWord (and (isa :NOUN Crocheting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crock") Pot-TheWord (and (isa :NOUN SlowCooker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crock-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP containedObject) ((PPFn of) containedObject)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Crocodile-TheWord (and (isa :NOUN Crocodile))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crocodilian") Reptile-TheWord
 (and (isa :NOUN Crocodilian)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crocus-TheWord (and (isa :NOUN Crocus))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Croissant-TheWord (and (isa :NOUN Food))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Crop-TheWord (and (isa :NOUN Crop))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals)
    (N fe_aggregate_property fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (CNI fe_individuals))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 2 1)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "cross-country") Skiing-TheWord
 (and (isa :NOUN CrossCountrySkiing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cross-Examination-TheWord
 (and (isa :NOUN Hearing-LegalProceeding)) (frame FN_Court_examination)
 (bindingTemplate
  (TheList (:SUBJECT (NP witnesses-Legal))
   (:OBLIQUE-OBJECT (AJP fe_manner) (N fe_manner) ((PPFn by) fe_questioner)
    ((PPFn from) fe_questioner) ((PPFn at) temporallyIntersects)
    ((PPFn about) situationTopic) ((PPFn of) witnesses-Legal))
   (:GEN (Poss fe_questioner))))
 (groupPatterns
  (TheSet ((1 6 0)) ((0 0 0)) ((2 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((1 5 0) (1 6 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 0)) ((1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Cross-TheWord (and (isa :NOUN Cross-examination))
 (frame FN_Court_examination) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cross-TheWord
 (and (isa :NOUN Cross-ConstructionArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cross-TheWord
 (and (isa :NOUN Crucifix-ChristianSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crossbow-TheWord (and (isa :NOUN Crossbow))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Crosspiece-TheWord (and (isa :NOUN Crosspiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crosswalk-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "crossword") Puzzle-TheWord
 (and (isa :NOUN Crossword-IBO)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "crossword") Puzzle-TheWord
 (and (isa :NOUN CrosswordPuzzle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crow-TheWord (and (isa :NOUN Crow))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crowbar-TheWord (and (isa :NOUN Crowbar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crowd-TheWord (and (isa :NOUN CrowdOfPeople))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) (N fe_aggregate_property)
    ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (INI fe_individuals))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "crown") Prince-TheWord
 (and (isa :NOUN Prince-HeadOfState)) (frame FN_Leadership)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crown-TheWord (and (isa :NOUN Crown))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    ((PPFn of) fe_descriptor mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 1)) ((0 0 1)) ((0 0 0)) ((0 2 0))
   ((0 2 1) (2 0 0)) ((0 0 1) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Crown-TheWord (and (isa :NOUN TopOfHead))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) fe_attachment) ((PPFn to) fe_attachment)
    (N fe_descriptor) (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 0 0)) ((0 0 0) (1 3 0)) ((1 3 0) (1 3 0))
   ((0 0 0) (1 3 0) (1 3 0)) ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Crown-TheWord (and (isa :NOUN Monarch-HeadOfState))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crucible-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crucifix-TheWord
 (and (isa :NOUN Cross-FixedStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crucifixion-TheWord (and (isa :NOUN Crucifying))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn on) fe_manner) ((PPFn in) eventOccursAt)
    ((PPFn of) victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "crude") Oil-TheWord
 (and (isa :NOUN Petroleum-CrudeOil)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cruet-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP mainConstituent) (N mainConstituent))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "cruise") Control-TheWord
 (and (isa :NOUN CruiseControlSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cruise") Liner-TheWord (and (isa :NOUN CruiseShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cruise") Ship-TheWord (and (isa :NOUN CruiseShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cruise-TheWord (and (isa :NOUN Cruise-Vacation))
 (frame FN_Ride_vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) situationLocation) (N purposeOfEvent))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Cruiser-TheWord (and (isa :NOUN Cruiser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cruiser-TheWord (and (isa :NOUN PoliceCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crunch-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Grinding)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn behind) from-Generic) (AJP fe_manner)
    ((PPFn of) fe_noisy_event emitter) ((PPingFn of) emitter))
   (:APPOSITIVE (Sfin emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0)) ((1 2 1)) ((0 0 0)) ((1 2 0)) ((1 1 0))
   ((1 1 0) (1 2 1)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Crush-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crust-TheWord (and (isa :NOUN EarthCrust))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crustacean-TheWord (and (isa :NOUN Crustacean))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crutch-TheWord (and (isa :NOUN Crutch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cry-TheWord (and (isa :NOUN Screaming))
 (frame FN_Vocalizations)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) from-Generic) (AJP fe_degree from-Generic fe_manner)
    ((PPFn of) (InverseBinaryPredicateFn explains-Generic) fe_internal_cause
     emitter))
   (:GAP (DNI emitter)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 3 1)) ((0 3 0)) ((0 0 0)) ((0 2 1) (0 3 2))
   ((0 1 0) (0 2 2)) ((0 1 0) (0 3 1)) ((0 0 0) (2 0 0)) ((0 0 0) (0 3 1))
   ((0 2 0) (0 3 2)) ((0 2 0) (0 3 1)))))

(FNNounSemtrans (TheList) Cry-TheWord (and (isa :NOUN Crying))
 (frame FN_Vocalizations)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) from-Generic) (AJP fe_degree from-Generic fe_manner)
    ((PPFn of) (InverseBinaryPredicateFn explains-Generic) fe_internal_cause
     emitter))
   (:GAP (DNI emitter)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 3 1)) ((0 3 0)) ((0 0 0)) ((0 2 1) (0 3 2))
   ((0 1 0) (0 2 2)) ((0 1 0) (0 3 1)) ((0 0 0) (2 0 0)) ((0 0 0) (0 3 1))
   ((0 2 0) (0 3 2)) ((0 2 0) (0 3 1)))))

(FNNounSemtrans (TheList) Cryptocurrency-TheWord
 (and (isa :NOUN CryptoCurrency)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cryptosporidiosis-TheWord
 (and (isa :NOUN Cryptosporidiosis)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crystal-TheWord (and (isa :NOUN Crystalware))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Crystal-TheWord (and (isa :NOUN Crystalline))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cub-TheWord (and (isa :NOUN MaleChild))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cuban") Peso-TheWord (and (isa :NOUN Peso-Cuba))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cube-TheWord (and (isa :NOUN Cube)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_count) (AJP fe_shape_prop) ((PPFn of) stuffUsed)
    (N fe_shape_prop stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 1)) ((0 2 0) (0 3 0)) ((0 1 0) (0 2 0))
   ((0 1 0) (0 3 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "cubic") Foot-TheWord (and (isa :NOUN CubicFoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cubit-TheWord (and (isa :NOUN Cubit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cuckoo-TheWord (and (isa :NOUN Cuckoo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cucumber-TheWord (and (isa :NOUN Cucumber-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cucumber-TheWord (and (isa :NOUN CucumberPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cue") Ball-TheWord (and (isa :NOUN CueBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cuff-Link-TheWord
 (and (isa :NOUN SomethingToWearPart)) (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) (InverseBinaryPredicateFn outfitParts)))
   (:GAP (DEN parts)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Cuff-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N wornOn (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 0 0)) ((0 1 0)) ((0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Cufflink-TheWord (and (isa :NOUN Cufflink))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Cufflink-TheWord (and (isa :NOUN Cufflink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cul-De-Sac-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectFoundInLocation) (AJP fe_characteristic)
    (A fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn off) fe_relative_location)
    ((PPFn from) from-Generic))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 1 0)) ((0 1 0) (0 6 0)) ((0 1 0) (0 4 0))
   ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Culottes-TheWord (and (isa :NOUN WomensClothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn) (DNI wearer) (INI wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 1 0) (2 0 0)) ((0 0 0) (0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "cultivated") Land-TheWord
 (and (isa :NOUN Field-Agricultural)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cultivator-TheWord (and (isa :NOUN Tiller))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cultural") Attache-TheWord
 (and (isa :NOUN CulturalAttache)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "culture") Medium-TheWord
 (and (isa :NOUN CultureMedium)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Culture-TheWord
 (and (isa :NOUN Culture-Civilization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Culture-TheWord (and (isa :NOUN Culture-Practice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cummerbund-TheWord (and (isa :NOUN Cummerbund))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn) (INI wearer) (DNI wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 1 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Cumulus-TheWord (and (isa :NOUN CumulusCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cuneiform-TheWord (and (isa :NOUN Cuneiform))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cunnilingus-TheWord (and (isa :NOUN Cunnilingus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cunt-TheWord (and (isa :NOUN Vagina)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cup-TheWord (and (isa :NOUN Cup))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) containedObject))
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    ((PPFn beside) fe_relative_location) (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((3 0 0)) ((1 3 0)) ((1 1 0)) ((0 0 0)) ((1 0 0))
   ((1 3 1) (3 0 0)) ((1 3 0) (3 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Cup-TheWord (and (isa :NOUN Cup-UnitOfVolume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Cup-TheWord (and (isa :NOUN DrinkingMug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cupboard-TheWord (and (isa :NOUN Closet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cupboard-TheWord (and (isa :NOUN Cupboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cupcake-TheWord (and (isa :NOUN Cupcake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curate-TheWord (and (isa :NOUN Minister))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curative-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curator-TheWord (and (isa :NOUN MuseumCurator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curd-TheWord (and (isa :NOUN Curd)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cure-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP performedBy patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:OBLIQUE-OBJECT (N fe_affliction) ((PPFn from) fe_affliction)
    ((PPFn of) fe_affliction) ((PPFn to) fe_affliction) (AJP fe_degree)
    ((PPFn for) fe_affliction patientInCareEvent)
    (NP (InverseBinaryPredicateFn treatmentAppliedToCondition))
    (VPing (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:GAP (DNI fe_affliction))
   (:GEN (Poss fe_affliction performedBy patientInCareEvent))))
 (groupPatterns
  (TheSet ((1 7 0)) ((0 0 2)) ((1 6 0)) ((1 5 1)) ((3 0 1)) ((0 0 0)) ((3 0 2))
   ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 5 0)) ((1 0 0)) ((0 0 2) (1 5 1))
   ((0 0 1) (0 0 1)) ((1 3 0) (1 6 0)) ((0 0 2) (1 5 0)) ((1 5 0) (1 6 0))
   ((0 0 2) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Curium-TheWord (and (isa :NOUN Curium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curl-TheWord (and (isa :NOUN CurlyHair))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn into) toConfiguration) ((PPFn of) fe_hair)
    (AJP fe_hair_property) (N fe_hair_property) ((PPFn in) fe_hair_property)
    ((PPFn from) situationFocalLocation) (NP situationFocalLocation)
    ((PPFn at) situationFocalLocation) ((PPFn off) situationFocalLocation)
    ((PPFn on) situationFocalLocation))
   (:GAP (2nd toConfiguration) (DEN toConfiguration fe_hair))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 0)) ((1 7 0)) ((1 3 0)) ((1 2 0)) ((1 0 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (1 5 0)) ((1 3 0) (3 0 0)) ((1 2 0) (3 0 0))
   ((1 2 0) (1 9 0)) ((1 2 0) (1 8 0)) ((1 2 0) (1 5 0)) ((1 2 0) (1 7 0))
   ((1 2 0) (1 6 0)) ((1 3 0) (1 4 0)) ((1 2 0) (1 3 0)) ((1 2 0) (1 2 0))
   ((0 0 0) (1 2 0) (1 7 0)) ((1 2 0) (1 3 0) (3 0 0))
   ((1 2 0) (1 2 0) (3 0 0)) ((1 2 0) (1 3 0) (1 5 0))
   ((1 0 0) (1 2 0) (1 2 0) (3 0 0)))))

(FNNounSemtrans (TheList "curling") Iron-TheWord
 (and (isa :NOUN ElectricHairCurler)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Currant-TheWord (and (isa :NOUN Currant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Currency-TheWord (and (isa :NOUN Currency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Current-TheWord
 (and (isa :NOUN ElectricalCurrentLevel)) (frame FN_Electricity)
 (bindingTemplate (TheList (:GAP (DEN fe_electricity))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Current-TheWord (and (isa :NOUN OceanicCirculation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "current") Unit-TheWord
 (and (isa :NOUN UnitOfCurrent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "curriculum") Vitae-TheWord (and (isa :NOUN Resume))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curry-TheWord (and (isa :NOUN Curry-TheDish))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curtain-TheWord (and (isa :NOUN WindowCurtain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Curtsy-TheWord (and (isa :NOUN Curtsey))
 (frame FN_Body_movement)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (AJP fe_degree fe_manner)
    ((PPingFn on) temporallyIntersects) (NP temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 1 1)) ((0 0 0) (1 1 0)) ((1 0 0) (1 3 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Curve-TheWord (and (isa :NOUN Arc)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_shape_prop) (AJP fe_shape_prop)
    ((PPFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Cuspidor-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Custard-TheWord (and (isa :NOUN Custard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Custody-TheWord (and (isa :NOUN HeldCaptive))
 (frame FN_Detaining)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_suspect)) (:OBJECT (NP fe_suspect))
   (:OBLIQUE-OBJECT (A performedBy) (N performedBy) ((PPFn of) performedBy)
    ((PPFn on) fe_charges) ((PPFn for) duration) ((PPFn in) eventOccursAt)
    ((PPFn at) eventOccursAt) (AVP temporallyIntersects))
   (:GAP (2nd performedBy))))
 (groupPatterns
  (TheSet ((0 0 1)) ((2 5 0)) ((2 6 0)) ((0 0 0)) ((0 0 1) (2 7 0))
   ((0 0 1) (0 0 1)) ((0 0 1) (2 6 0)) ((0 0 1) (2 4 0)) ((0 0 1) (2 3 0))
   ((0 0 0) (1 0 0)) ((0 0 1) (2 1 0)) ((0 0 1) (2 0 0)) ((0 0 1) (2 5 0))
   ((0 0 1) (2 2 0) (2 7 0)) ((0 0 1) (2 0 0) (2 7 0))
   ((0 0 1) (2 1 0) (2 5 0)))))

(FNNounSemtrans (TheList) Custody-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) owns)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Custom-TheWord
 (and (isa :NOUN CulturalConvention-Specification)) (frame FN_Custom)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) objectOfCritique) (Sforto objectOfCritique)
    (Sub objectOfCritique) (VPto objectOfCritique) ((PPFn at) fe_descriptor)
    (Sfin objectOfCritique fe_descriptor)
    (AJP objectOfCritique fe_descriptor fe_domain fe_society)
    ((PPFn of) objectOfCritique fe_domain eventOccursAt affectedAgent
     fe_society)
    (A fe_descriptor fe_domain fe_society) ((PPFn for) fe_society)
    ((PPFn in) fe_domain eventOccursAt fe_society)
    (N objectOfCritique fe_domain fe_society) ((PPFn with) fe_society))
   (:GAP (DEN objectOfCritique) (INI objectOfCritique affectedAgent)
    (DNI objectOfCritique fe_society))
   (:GEN (Poss affectedAgent fe_society))))
 (groupPatterns
  (TheSet ((0 12 0)) ((0 7 4)) ((0 11 2)) ((0 7 2)) ((0 10 0)) ((0 11 1))
   ((0 6 3)) ((0 6 1)) ((0 3 0)) ((0 1 0)) ((0 11 0)) ((0 7 4) (0 11 1))
   ((0 6 3) (0 11 1)) ((0 8 1) (0 8 2)) ((0 10 1) (0 11 1)) ((0 6 1) (0 10 2))
   ((0 8 0) (0 8 2)) ((0 6 1) (2 0 0)) ((0 6 1) (0 7 3)) ((0 5 1) (0 6 2))
   ((0 6 1) (0 10 0)) ((0 6 1) (0 11 1)) ((0 8 0) (0 11 1)) ((0 0 0) (0 6 3))
   ((0 6 0) (2 0 1)) ((0 3 0) (2 0 0)) ((0 3 0) (0 10 1)) ((0 7 0) (0 10 1))
   ((0 6 2) (0 6 3)) ((0 2 0) (0 7 1)) ((0 6 2) (0 7 0)) ((0 3 0) (0 6 1))
   ((0 2 0) (0 6 1)) ((0 4 0) (0 5 0)) ((0 0 0) (0 6 1)) ((0 6 1) (0 7 0))
   ((0 6 1) (0 9 0) (0 11 1)) ((0 6 1) (0 7 1) (2 0 0))
   ((0 3 0) (0 6 2) (0 7 4)) ((0 0 0) (0 8 0) (0 8 2))
   ((0 6 1) (0 7 4) (0 11 0)) ((0 3 0) (0 6 1) (2 0 0))
   ((0 0 0) (0 6 1) (2 0 0)))))

(FNNounSemtrans (TheList "custom") Wheel-TheWord (and (isa :NOUN CustomWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Customer-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance customers Agent-Generic :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cut") Flower-TheWord (and (isa :NOUN CutFlower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cut-TheWord (and (isa :NOUN DecreaseEvent))
 (frame FN_Cause_change_of_position_on_a_scale)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AVP objectOfStateChange))
   (:GAP (INI doneBy fe_attribute))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Cut-TheWord
 (and (isa :NOUN MobOfHair-Mammal)
      (relationExistsInstance objectActedOn HairCuttingEvent :NOUN))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_hair))
   (:OBLIQUE-OBJECT (N fe_hair) ((PPFn of) fe_hair) (AJP fe_hair_property))
   (:GAP (DEN toConfiguration))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0) (1 2 0)))))

(FNNounSemtrans (TheList) Cut-TheWord (and (isa :NOUN CuttingSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cut-TheWord (and (isa :NOUN SkinLaceration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cuticle") Cream-TheWord
 (and (isa :NOUN CuticleCream)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cuticle") Remover-TheWord
 (and (isa :NOUN CuticleRemover)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cutlery-TheWord (and (isa :NOUN SilverwarePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cutpurse-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft) (bindingTemplate (TheList (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cutter-TheWord
 (and (isa :NOUN Cutter-NavalWatercraft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cutting") Board-TheWord
 (and (isa :NOUN CuttingBoard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cutting") Implement-TheWord
 (and (isa :NOUN CuttingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cw-TheWord (and (isa :NOUN ChemicalAttack))
 (frame FN_Hostile_encounter)
 (bindingTemplate (TheList (:GAP (INI fe_issue fe_sides))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cw-TheWord (and (isa :NOUN ChemicalWeapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (N activeIngredientsOfType) (AJP deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:NOUN (NP mainConstituent))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((3 0 0)))))

(FNNounSemtrans (TheList) Cybersecurity-TheWord
 (and (isa :NOUN DefendingSomethingAgainstAttack)
      (actionProtectsFromAttackOfType :NOUN AttackByComputerOperation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cyberwarfare-TheWord
 (and (isa :NOUN AttackByComputerOperation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cycad-TheWord (and (isa :NOUN Cycad)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cycadopsida-TheWord
 (and (isa :NOUN CycadopsidaClass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cybercrime-TheWord
 (and (isa :NOUN CriminalAct) (isa :NOUN ComputerActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cyclades-TheWord (and (isa :NOUN Cyclades))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cycle-TheWord (and (isa :NOUN CyclicalProcessType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cycling-TheWord (and (isa :NOUN CyclingSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cyclone-TheWord (and (isa :NOUN CycloneAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cylinder-TheWord (and (isa :NOUN GraduatedCylinder))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP containedObject) ((PPFn of) containedObject)
    (N deviceUse) (AJP mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 1)) ((0 1 0)) ((0 0 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Cylinder-TheWord (and (isa :NOUN Cylinder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cymbal-TheWord (and (isa :NOUN Cymbal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cypriot") Pound-TheWord
 (and (isa :NOUN Pound-Cyprus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "cystic") Fibrosis-TheWord
 (and (isa :NOUN CysticFibrosis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cytoplasm-TheWord (and (isa :NOUN Cytoplasm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Czar-TheWord (and (isa :NOUN Tsar-HeadOfState))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Czech-TheWord (and (isa :NOUN CzechLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Czechoslovakian-TheWord
 (and (isa :NOUN CzechoslovakianPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dacha-TheWord (and (isa :NOUN Cottage))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dachshund-TheWord (and (isa :NOUN Dachshund))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dad-TheWord (and (isa :NOUN HumanFather))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Daddy-TheWord (and (isa :NOUN HumanFather))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego))
   (:OBLIQUE-OBJECT (NP fe_alter) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Daffodil-TheWord (and (isa :NOUN Daffodil))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dagger-TheWord (and (isa :NOUN Dagger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Daggerboard-TheWord (and (isa :NOUN Daggerboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dairy") Product-TheWord
 (and (isa :NOUN DairyProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dairy-TheWord (and (isa :NOUN DairyEstablishment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dais-TheWord (and (isa :NOUN Pulpit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Daisy-TheWord (and (isa :NOUN Daisy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dale-TheWord (and (isa :NOUN Valley))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts) ((PPFn of) fe_container_possessor)
    (Poss fe_container_possessor)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn within) fe_relative_location))
   (:GAP (DEN eventLocale))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 4 0)) ((2 0 0)) ((0 3 1)) ((0 2 0)) ((0 1 0))
   ((0 3 0)) ((0 0 0)) ((0 1 0) (0 3 2)))))

(FNNounSemtrans (TheList) Dalmatian-TheWord (and (isa :NOUN Dalmatian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dam-TheWord (and (isa :NOUN Dam)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dam-TheWord (and (isa :NOUN Dike)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dam-TheWord (and (isa :NOUN Levee)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Damage-TheWord
 (and (isa :NOUN IncurringPhysicalDamage)) (frame FN_Damaging)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn from) causes-Underspecified)
    (N objectActedOn) ((PPFn to) objectActedOn))
   (:GAP (DNI doneBy causes-Underspecified objectActedOn)
    (INI doneBy causes-Underspecified objectActedOn))))
 (groupPatterns (TheSet ((1 1 0)) ((1 3 0)) ((0 0 0)) ((1 2 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Damage-TheWord (and (isa :NOUN DamageOutcome))
 (frame FN_Damaging)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn from) causes-Underspecified)
    (N objectActedOn) ((PPFn to) objectActedOn))
   (:GAP (DNI doneBy causes-Underspecified objectActedOn)
    (INI doneBy causes-Underspecified objectActedOn))))
 (groupPatterns (TheSet ((1 1 0)) ((1 3 0)) ((0 0 0)) ((1 2 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Damages-TheWord (and (isa :NOUN FinePenalizing))
 (frame FN_Fining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Damnation-TheWord (and (isa :NOUN Condemnation))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation))
   (:GEN (Poss objectOfEvaluation))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "dance") Company-TheWord
 (and (isa :NOUN DanceCompany)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dance") Floor-TheWord (and (isa :NOUN DanceFloor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dance-TheWord (and (isa :NOUN Dance-Party))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn with) amongThosePresent) (AJP host)
    ((PPFn at) eventOccursAt) (VPto purposeOfEvent) (NP temporallyIntersects)
    ((PPFn on) temporallyIntersects)
    ((PPFn in) beneficiary eventOccursAt temporallyIntersects)
    (N host fe_occasion eventOccursAt fe_refreshment clothingStyle
     temporallyIntersects))
   (:GAP (CNI host) (DEN fe_social_event))
   (:GEN (Poss amongThosePresent temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 7 3)) ((1 6 1)) ((1 2 0)) ((1 7 2)) ((1 7 1)) ((1 7 0))
   ((1 1 0)) ((1 0 0)) ((0 0 0)) ((3 0 0)) ((1 7 4) (3 0 1)) ((1 7 4) (1 7 5))
   ((1 5 0) (1 6 1)) ((1 4 0) (1 6 1)) ((1 3 0) (1 6 1)) ((0 0 1) (1 5 0))
   ((0 0 1) (1 6 2)) ((0 0 1) (1 7 4)) ((1 5 0) (1 7 1)) ((1 6 0) (1 6 1))
   ((0 0 0) (1 7 2)) ((0 0 1) (1 4 0) (1 6 0)))))

(FNNounSemtrans (TheList) Dancer-TheWord (and (isa :NOUN Dancer-Performer))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dandelion-TheWord (and (isa :NOUN DandelionPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dane-TheWord (and (isa :NOUN DanishPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Danger-TheWord (and (isa :NOUN DangerousSituation))
 (frame FN_Being_at_risk)
 (bindingTemplate
  (TheList (:SUBJECT (NP resourceInEvent))
   (:OBLIQUE-OBJECT ((PPFn of) resourceInEvent)
    ((PPFn from) fe_dangerous_entity))
   (:GEN (Poss resourceInEvent))))
 (groupPatterns (TheSet ((2 0 0)) ((1 0 0)) ((0 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Danger-TheWord (and (isa :NOUN DangerousSituation))
 (frame FN_Risky_situation)
 (bindingTemplate
  (TheList (:SUBJECT (NP resourceInEvent fe_dangerous_entity fe_situation))
   (:OBLIQUE-OBJECT ((PPFn to) resourceInEvent) ((PPFn by) fe_dangerous_entity)
    ((PPFn from) fe_dangerous_entity) (AJP fe_degree) (Sub fe_degree)
    ((PPFn in) eventOccursAt) ((PPFn of) fe_situation))
   (:GAP (DEN fe_situation)
    (INI resourceInEvent fe_dangerous_entity fe_situation)
    (CNI fe_situation))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 0 0)) ((1 5 0)) ((1 1 0)) ((0 0 1)) ((0 0 2) (1 0 0))
   ((1 0 0) (1 5 0)) ((0 0 0) (1 2 0)) ((0 0 2) (0 0 2) (1 0 0))
   ((0 0 2) (1 0 0) (1 3 0)) ((0 0 1) (1 0 0) (1 3 0))
   ((0 0 1) (1 0 0) (1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList "danish") Krone-TheWord
 (and (isa :NOUN Krone-Denmark)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Danish-TheWord (and (isa :NOUN DanishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dardanelles-TheWord
 (and (isa :NOUN Dardanelles-Strait)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dark") Blue-TheWord (and (isa :NOUN DarkBlue-Color))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dark") Meat-TheWord (and (isa :NOUN PoultryLeg))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dark-TheWord (and (isa :NOUN LitTooDarkForSeeing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Darkroom-TheWord (and (isa :NOUN Darkroom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dart-TheWord (and (isa :NOUN Dart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Darts-TheWord (and (isa :NOUN DartsGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dash-TheWord (and (isa :NOUN SprintingRace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dash-TheWord (and (isa :NOUN LocomotionEvent))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy) ((PPFn by) performedBy))
   (:OBLIQUE-OBJECT ((PPFn around) situationLocation) ((PPFn to) to-Generic)
    ((PPFn for) to-Generic) ((PPFn into) to-Generic) ((PPFn with) fe_manner)
    ((PPFn across) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn up) trajectory-Complete) ((PPFn down) trajectory-Complete)
    ((PPFn along) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) from-Generic) ((PPFn out) from-Generic)
    (AJP distanceTranslated fe_manner rateOfEvent temporallyIntersects)
    (AVP (InverseBinaryPredicateFn explains-Generic) fe_manner
     temporallyIntersects)
    ((PPFn in) situationLocation duration eventOccursAt purposeOfEvent
     temporallyIntersects)
    ((PPFn within) temporallyIntersects) ((PPingFn after) temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (2nd (InverseBinaryPredicateFn explains-Generic)) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 6 0)) ((1 8 0)) ((1 1 0)) ((1 13 2) (3 0 0))
   ((0 0 0) (1 6 0)) ((0 0 0) (1 5 0)) ((0 1 0) (1 13 1)) ((1 5 0) (1 13 1))
   ((1 1 0) (1 13 2)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((1 1 0) (1 13 1))
   ((1 3 0) (1 13 1)) ((1 11 0) (1 13 3)) ((1 13 1) (1 15 0))
   ((1 0 0) (1 13 0)) ((0 0 0) (1 5 0) (1 18 0)) ((1 12 0) (1 13 1) (3 0 0))
   ((1 4 0) (1 8 0) (1 13 2)) ((1 7 0) (1 13 1) (3 0 0))
   ((0 0 0) (1 6 0) (1 13 1)) ((0 0 0) (1 5 0) (1 13 1))
   ((0 0 0) (1 2 0) (1 15 4)) ((0 0 0) (1 1 0) (1 13 2))
   ((1 1 0) (1 10 0) (1 17 0)) ((1 1 0) (1 13 0) (1 13 1))
   ((1 0 0) (1 13 1) (1 15 3)) ((0 0 0) (1 6 0) (1 15 2) (1 15 4))
   ((1 7 0) (1 9 0) (1 10 0) (1 13 2)) ((0 1 0) (1 13 1) (1 14 2) (1 18 0))
   ((0 0 0) (1 1 0) (1 13 1) (1 16 0)) ((0 0 0) (1 2 0) (1 14 1) (1 14 2))
   ((0 0 0) (1 0 0) (1 13 1) (1 14 0))
   ((0 0 0) (1 1 0) (1 11 0) (1 13 0) (1 13 1) (1 15 1)))))

(FNNounSemtrans (TheList) Dashboard-TheWord (and (isa :NOUN Dashboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "data" "feed") System-TheWord
 (and (isa :NOUN DataFeed-System)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "data") Projector-TheWord
 (and (isa :NOUN DataProjector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "data" "storage") Disc-TheWord
 (and (isa :NOUN DiscStorageMedium)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Data-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Srel from-Generic))
   (:GAP (DEN fe_information) (DNI situationTopic)
    (INI subjectOfMentalSituation situationTopic))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Database-TheWord
 (and (isa :NOUN Database-AbstractContent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "date") Palm-TheWord (and (isa :NOUN DatePalm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Date-TheWord (and (isa :NOUN (FruitFn DatePalm)))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Date-TheWord (and (isa :NOUN Date))
 (frame FN_Location_in_time)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor)
    ((PPFn of) fe_salient_event) (N fe_salient_event)
    (NP fe_focal_time fe_salient_event) ((PPFn on) fe_salient_event)
    ((PPFn in) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_focal_time)) (:APPOSITIVE (NP fe_focal_time))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 2 0)) ((0 3 0)) ((2 0 0)) ((0 1 0))
   ((0 3 0) (0 4 0)) ((0 2 0) (2 0 0)) ((0 1 0) (0 2 0)) ((0 1 0) (0 4 1))
   ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Date-TheWord (and (isa :NOUN CalendarDay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Date-TheWord (and (isa :NOUN SocialGathering))
 (frame FN_Social_event_collective)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_particular_iteration))
   (:GAP (DNI attendees)) (:GEN (Poss attendees))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Daughter-In-Law-TheWord
 (and (isa :NOUN FemaleHuman)
      (relationExistsInstance daughterInLaw Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego) (INI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((0 0 1)) ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Daughter-TheWord
 (and (isa :NOUN FemaleHuman) (relationExistsInstance daughters Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego))
   (:OBLIQUE-OBJECT (NP fe_alter) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_alter fe_ego))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((4 0 1)) ((1 1 0)) ((0 0 1)) ((4 0 0))
   ((4 0 1) (4 0 1)) ((0 0 0) (4 0 1)) ((0 0 0) (1 1 0)) ((1 0 0) (4 0 1))
   ((3 0 0) (4 0 1)))))

(FNNounSemtrans (TheList) Dawn-TheWord (and (isa :NOUN Dawn))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Dawning-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyContains TemporalThing :NOUN))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) temporallyIntersects) ((PPFn of) occursDuring))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "day") Nursery-TheWord (and (isa :NOUN DayCareCenter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "day" "of" "the") Week-TheWord
 (and (isa :NOUN DayOfWeekType)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN CalendarDay))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_relative_time) ((PPFn after) fe_relative_time)
    (Sub fe_relative_time) (A fe_count fe_relative_time)
    (Num fe_count fe_relative_time)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn nameString) fe_relative_time fe_salient_event
     (InverseBinaryPredicateFn parts))
    (AJP fe_count fe_relative_time (InverseBinaryPredicateFn parts))
    ((PPFn in) (InverseBinaryPredicateFn parts)))
   (:GAP (DNI fe_count fe_relative_time) (DEN fe_unit)
    (2nd fe_relative_time fe_unit) (INI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 4 1)) ((0 7 2)) ((0 0 0)) ((0 3 1)) ((0 7 1)) ((0 6 0))
   ((2 0 0)) ((0 6 3)) ((0 7 0)) ((0 6 2)) ((0 1 0)) ((0 2 0))
   ((0 5 0) (0 7 1)) ((0 3 0) (0 5 0)) ((0 0 0) (0 4 0)) ((0 6 1) (0 7 0)))))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN CalendarDay))
 (frame FN_Location_in_time)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time))
   (:GAP (DEN fe_focal_time))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN UnitOfTime))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Num fe_count) ((PPFn of) fe_process)
    (AJP fe_count fe_process) (Sfin fe_process))
   (:GAP (CNI fe_process) (DNI fe_count fe_process) (INI fe_count fe_process)
    (DEN fe_unit))
   (:NOUN (N fe_process))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 1 0)) ((2 0 0)) ((0 2 1)) ((0 0 0))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN DaysDuration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN DaytimeHours))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN ObservanceDay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Day-TheWord (and (isa :NOUN Time-Quantity))
 (frame FN_Timespan)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP duration) ((PPFn of) hasState))
   (:GAP (DEN duration))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Daybreak-TheWord (and (isa :NOUN Dawn))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time)) (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Daycare-TheWord (and (isa :NOUN DayCareCenter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) De-Icer-TheWord (and (isa :NOUN FuelDeicer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) De-Icer-TheWord (and (isa :NOUN IceMeltingProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dead") Animal-TheWord (and (isa :NOUN DeadAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dead" "man" "^s") Switch-TheWord
 (and (isa :NOUN DeadMansSwitch)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dead") Person-TheWord
 (and (isa :NOUN (DeadPhysicalRemainsFn Person))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dead") Sea-TheWord (and (isa :NOUN DeadSea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dead-TheWord (and (isa :NOUN Deceased))
 (frame FN_Dead_or_alive) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deadlock-TheWord (and (isa :NOUN Gridlock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deal-TheWord (and (isa :NOUN Deciding-Collectively))
 (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP agreeingAgents meetingParticipants))
   (:OBLIQUE-OBJECT (NP duration) ((PPFn with) meetingParticipants)
    (N duration situationTopic) (AJP fe_descriptor fe_manner situationTopic))
   (:GAP (DEN obligationsCreated) (DNI agreeingAgents meetingParticipants)
    (INI obligationsCreated agreeingAgents situationTopic))
   (:GEN (Poss meetingParticipants))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 3 2)) ((1 1 0)) ((3 0 0)) ((0 0 1)) ((0 0 0)) ((1 3 1))
   ((1 0 0)) ((1 2 0)) ((1 3 0)) ((0 0 0) (1 2 1)) ((1 1 0) (1 2 1))
   ((1 1 0) (3 0 0)) ((0 0 1) (1 1 0)) ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Deal-TheWord (and (isa :NOUN DecidingToDoSomething))
 (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP agreeingAgents meetingParticipants))
   (:OBLIQUE-OBJECT (NP duration) ((PPFn with) meetingParticipants)
    (N duration situationTopic) (AJP fe_descriptor fe_manner situationTopic))
   (:GAP (DEN obligationsCreated) (DNI agreeingAgents meetingParticipants)
    (INI obligationsCreated agreeingAgents situationTopic))
   (:GEN (Poss meetingParticipants))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 3 2)) ((1 1 0)) ((3 0 0)) ((0 0 1)) ((0 0 0)) ((1 3 1))
   ((1 0 0)) ((1 2 0)) ((1 3 0)) ((0 0 0) (1 2 1)) ((1 1 0) (1 2 1))
   ((1 1 0) (3 0 0)) ((0 0 1) (1 1 0)) ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Deal-TheWord (and (isa :NOUN SalesActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dearth-TheWord (and (isa :NOUN Famine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Death-TheWord (and (isa :NOUN Dying))
 (frame FN_Death)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn at) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn by) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) (InverseBinaryPredicateFn explains-Generic))
    ((PPingFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPingFn from) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn on) eventOccursAt)
    (N (InverseBinaryPredicateFn explains-Generic) fe_manner eventOccursAt
     affectedAgent)
    ((PPFn of) affectedAgent) (A affectedAgent) (NP affectedAgent)
    ((PPingFn after) (InverseBinaryPredicateFn explains-Generic)
     temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    (AJP affectedAgent temporallyIntersects))
   (:GAP (2nd (InverseBinaryPredicateFn explains-Generic)) (CNI affectedAgent)
    (DNI affectedAgent) (INI affectedAgent))
   (:NOUN (NP (InverseBinaryPredicateFn explains-Generic)))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 7 0)) ((0 0 0)) ((1 9 0)) ((1 8 0)) ((1 11 0))
   ((1 2 0)) ((1 1 0)) ((1 6 0)) ((1 4 0)) ((1 10 0)) ((1 0 0))
   ((0 0 0) (1 10 1)) ((0 0 0) (1 3 0)) ((1 2 0) (1 6 3)) ((1 1 0) (4 0 0))
   ((1 6 0) (4 0 0)) ((1 6 0) (1 12 0)) ((1 6 0) (1 6 2))
   ((1 5 0) (1 7 0) (1 12 1)) ((1 2 0) (1 11 1) (4 0 0))
   ((0 0 0) (0 0 0) (1 10 1)) ((1 6 1) (1 6 3) (3 0 0)))))

(FNNounSemtrans (TheList "death") Valley-TheWord (and (isa :NOUN DeathValley))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deathrate-TheWord
 (and (isa :NOUN RealNumber)
      (relationExistsInstance annualDeathRate GeopoliticalEntity :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Debacle-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:GAP (DNI objectActedOn) (DEN fe_undesirable_event))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Debate-TheWord (and (isa :NOUN Debate))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 situationTopic))
   (:OBLIQUE-OBJECT ((PPFn with) fe_interlocutor_2)
    ((PPFn between) fe_interlocutors) (AJP duration fe_interlocutors fe_manner)
    ((PPFn in) eventOccursAt) (NP temporallyIntersects)
    ((PPFn before) temporallyIntersects) ((PPFn on) situationTopic)
    ((PPFn about) situationTopic) ((PPFn over) situationTopic)
    (N fe_interlocutors situationTopic) ((PPingFn on) situationTopic))
   (:GAP (CNI fe_interlocutors) (INI fe_interlocutors)
    (DNI fe_interlocutors situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 10 0)) ((1 8 0)) ((1 7 0)) ((0 0 1)) ((1 9 1)) ((1 6 0))
   ((3 0 1)) ((1 1 0)) ((1 9 0)) ((1 2 0)) ((1 2 2) (1 8 0)) ((1 2 1) (1 3 0))
   ((0 0 0) (1 6 0)) ((0 0 0) (1 0 0)) ((0 0 1) (1 3 0) (1 5 0))
   ((1 1 0) (1 2 2) (1 7 0)) ((1 4 0) (1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Debris-TheWord (and (isa :NOUN Rubble))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Debt-TheWord
 (and (isa :NOUN MonetaryValue)
      (thereExists ?AGT1
       (thereExists ?AGT2 (agentOwesAgentAmount ?AGT1 ?AGT2 :NOUN))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Debugger-TheWord (and (isa :NOUN DebuggerProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Debutante-TheWord (and (isa :NOUN Debutante))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decade-TheWord (and (isa :NOUN (DecadesDuration 1)))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn after) fe_relative_time) (A fe_relative_time)
    ((PPFn of) fe_relative_time) ((PPFn before) fe_relative_time)
    (AJP fe_count fe_relative_time (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 1)) ((0 1 0)) ((0 0 0)) ((0 4 1) (0 4 2))
   ((0 2 0) (0 4 1)) ((0 4 0) (0 4 1)))))

(FNNounSemtrans (TheList) Decade-TheWord (and (isa :NOUN Date))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn after) fe_relative_time) (A fe_relative_time)
    ((PPFn of) fe_relative_time) ((PPFn before) fe_relative_time)
    (AJP fe_count fe_relative_time (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 1)) ((0 1 0)) ((0 0 0)) ((0 4 1) (0 4 2))
   ((0 2 0) (0 4 1)) ((0 4 0) (0 4 1)))))

(FNNounSemtrans (TheList) Decade-TheWord (and (isa :NOUN DecadesDuration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decagon-TheWord (and (isa :NOUN Decagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decanter-TheWord (and (isa :NOUN Carafe))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 2 0) (0 2 2))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Decapitation-TheWord
 (and (isa :NOUN Decapitation-Execution)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn in) fe_depictive) ((PPFn by) killers)
    ((PPFn on) temporallyIntersects) ((PPFn of) victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 0 0) (1 2 0)) ((1 1 0) (2 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Decathlon-TheWord (and (isa :NOUN Decathlon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decay-TheWord
 (and (isa :NOUN BiologicalDecompositionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decay-TheWord (and (isa :NOUN NuclearProcess))
 (frame FN_Nuclear_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decay-TheWord (and (isa :NOUN DecompositionProcess))
 (frame FN_Rotting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) December-TheWord (and (isa :NOUN December))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    (NP fe_relative_time (InverseBinaryPredicateFn parts))
    (AJP (InverseBinaryPredicateFn parts)))
   (:GAP (2nd fe_relative_time fe_unit)
    (DEN (InverseBinaryPredicateFn nameString) fe_unit))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 1 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Deception-TheWord (and (isa :NOUN Lying))
 (frame FN_Intentional_deception) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deception-TheWord (and (isa :NOUN Lying))
 (frame FN_Prevarication)
 (bindingTemplate (TheList (:GAP (DNI recipientOfInfo performedBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deciduous") Plant-TheWord
 (and (isa :NOUN DeciduousPlant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decision-TheWord
 (and (isa :NOUN DecidingToDoSomething)) (frame FN_Deciding)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (A subjectOfMentalSituation)
    ((PPFn in) subjectOfMentalSituation) (VPto fe_decision)
    ((PPFn over) fe_decision) (N subjectOfMentalSituation fe_decision)
    ((PPFn at) temporallyIntersects))
   (:GAP (DEN fe_decision) (INI subjectOfMentalSituation fe_decision)
    (DNI subjectOfMentalSituation fe_decision))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 2 0)) ((3 0 0)) ((0 0 0)) ((1 3 0)) ((1 2 0) (3 0 0))
   ((1 1 0) (1 4 1)) ((0 0 0) (1 2 0)) ((1 2 0) (1 4 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Decision-TheWord (and (isa :NOUN SelectingSomething))
 (frame FN_Deciding)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (A subjectOfMentalSituation)
    ((PPFn in) subjectOfMentalSituation) (VPto fe_decision)
    ((PPFn over) fe_decision) (N subjectOfMentalSituation fe_decision)
    ((PPFn at) temporallyIntersects))
   (:GAP (DEN fe_decision) (INI subjectOfMentalSituation fe_decision)
    (DNI subjectOfMentalSituation fe_decision))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 2 0)) ((3 0 0)) ((0 0 0)) ((1 3 0)) ((1 2 0) (3 0 0))
   ((1 1 0) (1 4 1)) ((0 0 0) (1 2 0)) ((1 2 0) (1 4 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Decisiveness-TheWord
 (and (isa :NOUN ScalarProperInterval)
      (relationExistsInstance marginOfVictory Competition :NOUN))
 (frame FN_Margin_of_resolution) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deck" "of") Card-TheWord
 (and (isa :NOUN DeckOfCards)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deck" "of" "tarot") Card-TheWord
 (and (isa :NOUN DeckOfTarotCards)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deck-TheWord (and (isa :NOUN Deck-BuildingPart))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deck-TheWord (and (isa :NOUN Deck-BuildingPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deck-TheWord (and (isa :NOUN Deck-Ship))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Declaration-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy situationTopic))
   (:OBLIQUE-OBJECT ((PPingFn about) infoTransferred) (Sfin infoTransferred)
    ((PPFn against) infoTransferred) ((PPFn for) infoTransferred)
    ((PPFn in) fe_manner genericPathway-Partial infoTransferred)
    ((PPFn of) infoTransferred) ((PPFn to) recipientOfInfo infoTransferred)
    ((PPingFn of) infoTransferred) (VPing infoTransferred)
    ((PPFn by) performedBy) ((PPFn from) performedBy)
    (N infoTransferred performedBy) ((PPFn between) performedBy)
    (NP temporallyIntersects) ((PPFn on) situationTopic)
    ((PPFn as) situationTopic) (AJP fe_manner situationTopic)
    ((PPFn about) situationTopic) ((PPFn concerning) situationTopic)
    ((PPFn regarding) situationTopic))
   (:GAP (DEN infoTransferred) (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 19 0)) ((1 14 0)) ((1 18 0)) ((1 17 0)) ((3 0 0)) ((1 12 0))
   ((0 0 0)) ((1 11 1)) ((1 9 0)) ((1 8 0)) ((1 1 0)) ((1 7 0)) ((1 6 1))
   ((1 5 0)) ((1 4 2)) ((1 3 0)) ((1 2 0)) ((1 11 0)) ((1 16 0)) ((1 6 0))
   ((1 17 0) (3 0 0)) ((0 0 1) (3 0 0)) ((1 16 1) (3 0 0)) ((1 9 0) (1 15 0))
   ((0 0 0) (1 14 0)) ((0 0 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 10 0))
   ((1 1 0) (1 9 0)) ((1 6 1) (1 9 0)) ((0 0 0) (1 6 1)) ((1 5 0) (3 0 0))
   ((1 5 0) (1 10 0)) ((1 11 0) (3 0 0)) ((1 9 0) (1 11 0)) ((0 0 0) (1 11 0))
   ((1 1 0) (1 1 0)) ((0 0 0) (1 4 1)) ((1 1 0) (1 4 1)) ((0 0 0) (1 16 0))
   ((1 6 0) (3 0 0)) ((0 0 0) (1 1 0) (1 2 0)) ((0 0 0) (1 4 0) (3 0 0))
   ((1 0 0) (1 16 0) (3 0 0)) ((1 0 0) (1 1 0) (1 16 0))
   ((1 6 0) (1 13 0) (3 0 0)))))

(FNNounSemtrans (TheList) Decline-TheWord (and (isa :NOUN DecreaseEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate (TheList (:GAP (INI fe_attribute)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decline-TheWord (and (isa :NOUN DecreaseEvent))
 (frame FN_Improvement_or_decline) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Declivity-TheWord
 (and (isa :NOUN Slope-Topographical)) (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor) (AJP fe_descriptor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Decolletage-TheWord
 (and (isa :NOUN SomethingToWearPart)) (frame FN_Clothing_parts)
 (bindingTemplate (TheList (:GAP (DEN parts)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decomposer-TheWord
 (and (isa :NOUN BiologicalLivingObject)
      (relationExistsInstance decomposerInEcosystem Ecosystem :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decomposition-TheWord
 (and (isa :NOUN DecompositionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decongestant-TheWord (and (isa :NOUN Decongestant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "decontamination") Equipment-TheWord
 (and (isa :NOUN DecontaminationEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decontamination-TheWord
 (and (isa :NOUN EmptyingAContainer)) (frame FN_Emptying)
 (bindingTemplate (TheList (:GAP (INI from-Generic)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "decorative") Balloon-TheWord
 (and (isa :NOUN DecorativeBalloon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Decrease-TheWord (and (isa :NOUN DecreaseEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_attribute fe_final_value objectOfStateChange))
   (:OBLIQUE-OBJECT (Sub situationConstituents)
    ((PPFn as) situationConstituents fe_correlated_variable)
    ((PPFn at) fe_correlated_variable) (VPed fe_correlated_variable)
    ((PPFn with) fe_correlated_variable fe_difference)
    ((PPFn of) fe_attribute fe_difference)
    (NP fe_correlated_variable fe_difference)
    ((PPFn by) situationConstituents fe_correlated_variable fe_difference)
    ((PPFn to) fe_final_value) (VPto fe_final_value)
    ((PPFn throughout) groupMembers) ((PPFn among) groupMembers)
    (AVP groupMembers) ((PPFn from) fe_initial_value)
    ((PPFn on) fe_initial_correlate fe_initial_value objectOfStateChange)
    (N fe_attribute fe_difference objectOfStateChange)
    (VPing situationConstituents eventOutcomes)
    ((PPFn in) fe_attribute groupMembers objectOfStateChange eventOccursAt
     temporallyIntersects)
    ((PPFn over) temporallyIntersects)
    ((PPFn for) groupMembers objectOfStateChange temporallyIntersects)
    ((PPFn since) temporallyIntersects) ((PPFn between) temporallyIntersects)
    (AJP situationConstituents fe_degree duration groupMembers
     objectOfStateChange fe_manner rateOfEvent temporallyIntersects))
   (:GAP (INI fe_difference) (DEN fe_difference)
    (DNI fe_attribute objectOfStateChange)
    (2nd fe_attribute fe_correlated_variable duration fe_final_correlate
     fe_final_value groupMembers fe_initial_correlate objectOfStateChange
     eventOccursAt rateOfEvent temporallyIntersects))
   (:GEN (Poss objectOfStateChange)) (:APPOSITIVE (NP fe_difference))))
 (groupPatterns
  (TheSet ((1 17 0)) ((1 15 0)) ((0 0 2)) ((1 14 2)) ((1 17 0) (1 22 7))
   ((0 0 0) (1 14 0)) ((1 5 0) (1 22 1)) ((1 17 2) (1 22 1))
   ((1 19 1) (1 22 1)) ((1 17 0) (1 22 1)) ((1 18 0) (3 0 0))
   ((1 3 0) (1 17 0)) ((1 7 1) (1 17 0)) ((1 1 1) (1 17 0)) ((1 16 0) (1 17 0))
   ((1 0 0) (1 17 0)) ((1 7 0) (1 17 0)) ((1 19 1) (1 22 1) (4 0 0))
   ((1 5 0) (1 12 0) (1 22 4)) ((0 0 2) (1 17 0) (1 19 0))
   ((1 5 1) (1 15 0) (1 17 1)) ((0 0 0) (1 6 1) (1 13 0))
   ((1 17 0) (1 22 2) (1 22 6)) ((1 16 1) (1 17 0) (1 22 1))
   ((1 7 2) (1 17 0) (1 22 1)) ((0 0 2) (1 17 0) (1 22 1))
   ((1 17 0) (1 17 4) (3 0 0)) ((0 0 2) (1 17 0) (1 21 0))
   ((1 1 1) (1 5 0) (1 22 6)) ((1 4 0) (1 5 0) (1 22 5))
   ((0 0 2) (1 6 0) (1 17 0)) ((0 0 0) (1 17 4) (1 22 1))
   ((1 4 0) (1 17 0) (1 22 1)) ((1 2 0) (1 15 0) (1 22 1))
   ((0 0 2) (1 0 0) (1 17 0)) ((1 1 0) (1 17 0) (1 17 2))
   ((1 4 0) (1 5 0) (1 22 0)) ((1 11 0) (1 17 0) (1 17 3) (1 22 5))
   ((1 8 0) (1 13 0) (1 17 0) (1 22 1)) ((0 0 1) (0 0 1) (1 14 1) (1 22 1))
   ((0 0 0) (1 10 0) (1 15 2) (1 22 1)) ((1 17 0) (1 17 4) (1 22 1) (4 0 0))
   ((1 1 1) (1 8 0) (1 17 2) (1 22 5)) ((1 8 0) (1 15 1) (1 17 0) (1 19 2))
   ((1 17 0) (1 17 1) (1 22 0) (1 22 1))
   ((0 0 0) (1 8 0) (1 13 0) (1 17 2) (1 22 5))
   ((0 0 2) (1 4 1) (1 19 2) (1 22 1) (1 22 3))
   ((1 8 0) (1 9 0) (1 13 0) (1 17 4) (1 17 4) (1 17 4))
   ((0 0 0) (1 6 1) (1 17 1) (1 17 2) (1 20 0) (1 22 0)))))

(FNNounSemtrans (TheList "dedicated" "financial" "data" "services")
 System-TheWord (and (isa :NOUN FinancialDataCommunicationSystem-Dedicated))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deduction-TheWord
 (and (isa :NOUN MonetaryValue) (relationExistsInstance discount Buying :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deed-TheWord (and (isa :NOUN LegalDocument))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deed-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act) (bindingTemplate (TheList (:GAP (DEN fe_act))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deed-TheWord (and (isa :NOUN TitleAgreement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deep") Fryer-TheWord (and (isa :NOUN DeepFryer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deer-TheWord (and (isa :NOUN Deer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Defeat-TheWord (and (isa :NOUN DefeatedSituation))
 (frame FN_Beat_opponent)
 (bindingTemplate
  (TheList (:SUBJECT (NP loserInOutcome))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_event_description)
    ((PPFn of) loserInOutcome) (A fe_particular_iteration) (AVP fe_score)
    (NP temporallyIntersects) ((PPFn on) temporallyIntersects)
    ((PPFn ago) temporallyIntersects) (N fe_competition eventOccursAt)
    ((PPFn in) fe_competition eventOccursAt temporallyIntersects eventOccursAt)
    ((PPFn against) winnerInConflict) ((PPFn by) winnerInConflict)
    ((PPFn at) eventOccursAt eventOccursAt winnerInConflict))
   (:GAP (2nd fe_competition) (CNI loserInOutcome)
    (INI loserInOutcome winnerInConflict)
    (DNI loserInOutcome winnerInConflict))
   (:GEN (Poss loserInOutcome temporallyIntersects winnerInConflict))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 11 2)) ((1 10 0)) ((1 8 0)) ((1 7 0)) ((0 0 0) (1 8 1))
   ((1 0 0) (3 0 0)) ((1 8 0) (3 0 0)) ((1 1 0) (1 8 0)) ((1 7 0) (1 10 0))
   ((1 1 0) (1 8 2) (3 0 2)) ((1 3 0) (1 7 1) (1 10 0))
   ((1 3 0) (1 9 0) (3 0 1)) ((1 11 0) (1 11 2) (3 0 0))
   ((1 4 0) (1 11 0) (3 0 0)) ((1 1 0) (1 8 2) (1 11 0))
   ((1 4 0) (1 8 0) (3 0 0)) ((1 7 0) (1 9 0) (3 0 1))
   ((1 5 0) (1 8 1) (1 10 0) (3 0 0)) ((1 0 1) (1 10 0) (1 11 0) (3 0 1))
   ((1 0 1) (1 6 0) (1 11 0) (3 0 0)) ((1 0 1) (1 2 0) (1 8 2) (1 10 0))
   ((0 0 0) (1 4 0) (1 8 2) (1 9 0)) ((0 0 0) (1 8 0) (1 8 1) (1 9 0))
   ((1 3 0) (1 5 0) (1 7 0) (1 8 1) (1 10 0) (3 0 0)))))

(FNNounSemtrans (TheList) Defence-TheWord
 (and (isa :NOUN (MakingFn Justification))) (frame FN_Justifying)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Defender-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance protector-Agentive ProtectingSomething :NOUN))
 (frame FN_Defending)
 (bindingTemplate
  (TheList (:GAP (DNI performedBy) (DEN fe_defender)) (:GEN (Poss victim))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Defense-TheWord (and (isa :NOUN ProtectingSomething))
 (frame FN_Defending)
 (bindingTemplate
  (TheList (:SUBJECT (Sun victim))
   (:OBLIQUE-OBJECT ((PPFn against) performedBy)
    (A performedBy fe_defender instrument-Generic)
    (N performedBy fe_defender fe_manner victim) ((PPFn of) victim))
   (:GAP (INI performedBy fe_defender victim) (2nd victim)
    (DNI fe_defender victim))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 3 0)) ((1 2 2)) ((1 1 2)) ((1 0 0)) ((1 2 1)) ((1 2 3))
   ((1 2 0)) ((1 1 0)) ((1 1 1) (1 2 0)))))

(FNNounSemtrans (TheList) Defenses-TheWord
 (and (isa :NOUN ProtectingSomething)) (frame FN_Defending)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_defender) ((PPFn of) fe_defender)
    (AJP performedBy fe_defender fe_depictive)
    (N performedBy fe_defender personFoundInLocation personFoundInLocation))
   (:GAP (DEN instrument-Generic)) (:GEN (Poss performedBy fe_defender))))
 (groupPatterns
  (TheSet ((0 3 2)) ((2 0 1)) ((0 1 0)) ((0 3 1)) ((0 0 0)) ((2 0 0)) ((0 3 0))
   ((0 2 0)) ((0 3 2) (2 0 1)) ((0 2 1) (0 3 2)) ((0 2 2) (0 3 1)))))

(FNNounSemtrans (TheList "defensive") Structure-TheWord
 (and (isa :NOUN DefensiveStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deference-TheWord (and (isa :NOUN Respect))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Defiance-TheWord
 (and (isa :NOUN Rebelliousness-Feeling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deficiency") Disease-TheWord
 (and (isa :NOUN DietaryDeficiencyCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Defile-TheWord (and (isa :NOUN Gap-Topographical))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    ((PPFn between) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Deforestation-TheWord (and (isa :NOUN Deforestation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deformation-TheWord
 (and (isa :NOUN ShapeChangeEvent) (isa :NOUN PurposefulAction))
 (frame FN_Reshaping) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Degenerate-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (AJP fe_persistent_characteristic)
    (Sinterrog fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Degeneration-TheWord
 (and (isa :NOUN BiologicalDegenerationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "degree") Centigrade-TheWord
 (and (isa :NOUN DegreeCelsius)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "degree") Fahrenheit-TheWord
 (and (isa :NOUN DegreeFahrenheit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Degree-TheWord
 (and (isa :NOUN Degree-UnitOfAngularMeasure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Degree-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Degree-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Degree-TheWord
 (and (isa :NOUN PersonTypeByPositionInOrg)) (frame FN_Rank)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dehumidification-TheWord (and (isa :NOUN Drying))
 (frame FN_Cause_to_be_dry) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dehumidifier-TheWord (and (isa :NOUN Dehumidifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dehydration-TheWord (and (isa :NOUN Dehydration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deity-TheWord (and (isa :NOUN DivineBeing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "delaware") Bay-TheWord (and (isa :NOUN DelawareBay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Delay-TheWord
 (and (isa :NOUN (IncreaseOnSlotFn startingPoint)))
 (frame FN_Change_event_time)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBLIQUE-OBJECT ((PPFn in) fe_event))
   (:GAP (DNI causes-Underspecified) (DEN fe_interval))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Delay-TheWord (and (isa :NOUN Waiting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Delegation-TheWord
 (and (isa :NOUN (GroupFn Person))
      (relationExistsInstance representative-OrganizationalRole Organization
       :NOUN))
 (frame FN_Organization) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deliberation-TheWord (and (isa :NOUN Thinking))
 (frame FN_Cogitation)
 (bindingTemplate
  (TheList (:SUBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation) (N subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation) ((PPingFn upon) situationTopic)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic)
    ((PPFn of) subjectOfMentalSituation situationTopic))
   (:GAP (DNI subjectOfMentalSituation situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 6 1)) ((1 4 0)) ((0 0 0)) ((1 2 0)) ((3 0 0)) ((1 6 0))
   ((1 1 0)) ((1 5 0) (3 0 0)) ((1 4 0) (3 0 0)) ((0 0 0) (1 6 0))
   ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Deliberation-TheWord
 (and (isa :NOUN Deciding-Collectively)
      (relationInstanceExists performedBy :NOUN Jury))
 (frame FN_Jury_deliberation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Delicatessen-TheWord (and (isa :NOUN Delicatessen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Delight-TheWord (and (isa :NOUN Delight))
 (frame FN_Emotions_of_mental_activity) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Delinquent-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn of) fe_descriptor) ((PPFn on) fe_descriptor)
    ((PPFn with) fe_descriptor) (Srel fe_descriptor)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 4 3)) ((1 1 0)) ((1 4 1)) ((1 4 0)) ((0 0 0) (1 2 0))
   ((1 3 0) (1 4 3)) ((1 4 0) (1 4 2)) ((1 0 0) (1 4 0)) ((1 4 0) (1 4 0)))))

(FNNounSemtrans (TheList) Delivery-TheWord
 (and (isa :NOUN DeliveryServiceEvent)) (frame FN_Delivery)
 (bindingTemplate
  (TheList (:SUBJECT (Poss fe_deliverer) (NP fe_deliverer to-Generic))
   (:OBLIQUE-OBJECT ((PPFn with) fe_depictive) (AVP to-Generic)
    ((PPFn into) to-Generic) ((PPFn through) trajectory-Complete)
    ((PPFn at) eventOccursAt) (VPto purposeOfEvent)
    ((PPFn to) to-Generic to-Generic) ((PPFn from) fe_deliverer from-Generic)
    (A fe_deliverer rateOfEvent) ((PPFn of) objectsDelivered)
    ((PPFn for) objectsDelivered)
    (N (InverseBinaryPredicateFn explains-Generic) to-Generic objectsDelivered
     temporallyIntersects)
    (AJP situationConstituents to-Generic fe_manner eventOccursAt rateOfEvent
     temporallyIntersects)
    ((PPFn between) temporallyIntersects) (NP temporallyIntersects)
    ((PPFn in) fe_depictive (InverseBinaryPredicateFn explains-Generic)
     fe_manner eventOccursAt temporallyIntersects)
    (VPing temporallyIntersects)
    ((PPFn by) fe_deliverer trajectory-Complete temporallyIntersects
     transporter)
    ((PPFn on) temporallyIntersects transporter))
   (:GAP (INI fe_deliverer to-Generic) (CNI fe_deliverer to-Generic to-Generic)
    (DNI fe_deliverer to-Generic to-Generic objectsDelivered))
   (:GEN (Poss fe_deliverer objectsDelivered))))
 (groupPatterns
  (TheSet ((1 15 4)) ((3 0 1)) ((1 10 0)) ((1 7 1)) ((1 11 3)) ((1 11 1))
   ((1 12 1)) ((1 17 3)) ((1 9 0)) ((1 11 2)) ((1 6 0)) ((1 15 2)) ((0 1 0))
   ((1 9 0) (1 16 0)) ((1 6 0) (1 11 3)) ((1 6 0) (1 11 2)) ((0 1 1) (1 9 0))
   ((1 9 0) (1 12 4)) ((1 15 3) (1 18 0)) ((1 11 2) (1 12 3))
   ((1 3 0) (1 13 0)) ((1 9 0) (1 12 2)) ((1 6 0) (1 17 3)) ((1 11 1) (1 11 2))
   ((1 6 0) (1 8 1)) ((1 6 0) (1 7 1)) ((1 6 0) (1 15 1)) ((1 12 5) (1 17 0))
   ((0 0 0) (1 18 1)) ((1 9 0) (1 11 3)) ((1 7 0) (1 11 2)) ((1 8 0) (1 11 2))
   ((0 1 0) (1 6 0)) ((0 1 0) (1 11 2)) ((1 2 0) (1 9 0)) ((1 1 0) (1 12 0))
   ((0 1 1) (1 9 0) (1 17 2)) ((0 1 1) (1 9 0) (1 14 0))
   ((1 6 0) (1 11 2) (1 17 1)) ((0 1 0) (1 6 0) (1 11 2))
   ((1 4 0) (1 11 1) (3 0 0)) ((0 1 0) (0 1 0) (1 18 0))
   ((1 9 0) (1 12 2) (1 15 0) (1 17 3)) ((0 1 0) (1 5 0) (1 9 0) (1 11 0))
   ((1 6 0) (1 9 0) (1 12 0) (1 17 0))
   ((1 0 0) (1 6 0) (1 7 1) (1 8 1) (1 12 2)))))

(FNNounSemtrans (TheList "delivery") Truck-TheWord
 (and (isa :NOUN DeliveryTruck)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deliveryman-TheWord (and (isa :NOUN DeliveryPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dell-TheWord (and (isa :NOUN Valley))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT ((PPFn of) parts) ((PPFn around) fe_relative_location)
    (AJP parts fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn on) fe_relative_location) (N activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 3 0)) ((1 2 1)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Delta-TheWord (and (isa :NOUN Delta))
 (frame FN_Relational_natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deltoid-TheWord (and (isa :NOUN Deltoid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deluge-TheWord (and (isa :NOUN Downpour-RainProcess))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Deluge-TheWord (and (isa :NOUN Flooding))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Demand-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) recipientOfInfo) ((PPFn on) recipientOfInfo)
    ((PPFn upon) recipientOfInfo) (VPto recipientOfInfo)
    ((PPFn for) infoTransferred) (Sbrst infoTransferred)
    ((PPFn by) infoTransferred) (Sfin infoTransferred)
    (AJP fe_manner performedBy) (N performedBy))
   (:GAP (DNI recipientOfInfo) (DEN infoTransferred) (INI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 7 0)) ((1 5 0)) ((0 0 0) (1 7 0))
   ((1 4 0) (1 9 0)) ((1 4 0) (1 8 1)) ((1 4 0) (1 8 0)) ((0 0 0) (1 3 0))
   ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 1 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 8 0)) ((0 0 0) (1 2 0) (1 4 0) (1 8 0))
   ((0 0 0) (1 1 0) (1 6 0) (1 8 0)))))

(FNNounSemtrans (TheList) Demeanor-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dementia-TheWord (and (isa :NOUN Dementia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Demise-TheWord (and (isa :NOUN Dying))
 (frame FN_Death)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N affectedAgent) ((PPFn of) affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)) ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Demitasse-TheWord (and (isa :NOUN Demitasse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Democrat-TheWord
 (and (isa :NOUN (BelieverFn DemocraticRepublicanIdeology))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "democratic") Party-TheWord
 (and (isa :NOUN DemocraticParty-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Demography-TheWord (and (isa :NOUN Demography))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Demolition-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Destroying)
 (bindingTemplate
  (TheList (:SUBJECT (Poss fe_destroyer))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (VPbrst eventOutcomes))
   (:GAP (DNI fe_destroyer objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Demonstration-TheWord
 (and (isa :NOUN Demonstration-RequirementVerificationMethod))
 (frame FN_Evidence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Demonstration-TheWord (and (isa :NOUN ProtestRally))
 (frame FN_Protest)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn since) duration) ((PPFn for) fe_issue)
    ((PPFn in) fe_issue eventOccursAt) ((PPFn at) eventOccursAt)
    (N eventOccursAt performedBy) ((PPFn by) performedBy)
    ((PPFn against) objectActedOn fe_issue fe_side)
    (AJP fe_degree fe_descriptor frequencyOfEvent fe_issue fe_manner
     eventOccursAt fe_side)
    (NP temporallyIntersects))
   (:GAP (2nd fe_degree performedBy)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 7 6)) ((0 0 0)) ((1 2 1)) ((1 4 0)) ((1 7 4)) ((1 2 0)) ((1 6 1))
   ((1 7 5)) ((1 7 0)) ((1 6 2) (1 8 0)) ((0 0 0) (0 0 0)) ((1 2 1) (3 0 0))
   ((1 4 0) (1 4 1)) ((1 2 1) (1 4 0)) ((1 2 1) (1 6 1)) ((1 2 1) (1 7 3))
   ((1 1 0) (1 7 2)) ((1 3 0) (1 7 1)) ((1 2 1) (1 7 5)) ((1 2 1) (1 7 0))
   ((0 0 0) (0 0 0) (1 0 0)) ((0 0 0) (1 6 2) (1 7 0))
   ((1 2 1) (1 4 1) (1 6 0)) ((1 2 1) (1 5 0) (1 6 2) (1 8 0)))))

(FNNounSemtrans (TheList) Demonstration-TheWord (and (isa :NOUN Reasoning))
 (frame FN_Reasoning) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Demonstration-TheWord (and (isa :NOUN Presentation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Demultiplexer-TheWord (and (isa :NOUN Demultiplexer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Den-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dendrite-TheWord (and (isa :NOUN Dendrite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Denial-TheWord (and (isa :NOUN Denial-IBT))
 (frame FN_Affirm_or_deny) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Denial-TheWord (and (isa :NOUN Denial-IBT))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPingFn of) infoTransferred)
    (Sfin infoTransferred) (NP infoTransferred) ((PPFn of) infoTransferred)
    ((PPingFn on) infoTransferred) ((PPFn from) performedBy)
    ((PPFn by) performedBy) ((PPingFn about) situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (DNI infoTransferred)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 0)) ((3 0 0)) ((1 6 0)) ((1 7 0)) ((0 0 0)) ((1 2 0)) ((1 4 0))
   ((1 7 0) (1 8 0)) ((1 2 0) (3 0 0)) ((1 2 0) (1 7 0)) ((1 5 0) (3 0 0))
   ((1 1 0) (3 0 0)) ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0)) ((1 3 0) (1 6 0))
   ((1 0 0) (1 6 0)) ((1 0 0) (1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Denigration-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP communicatorOfInfo fe_manner)
    ((PPFn of) objectOfEvaluation fe_reason) (NP fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI objectOfEvaluation fe_reason))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 1)) ((0 1 0) (0 2 0))
   ((0 1 0) (2 0 0)) ((0 0 1) (0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Denim-TheWord (and (isa :NOUN DenimCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Denomination-TheWord
 (and (isa :NOUN ReligiousDenomination)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Denouncement-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) communicatorOfInfo)
    (AJP communicatorOfInfo fe_manner) (VPing situationTopic)
    ((PPFn of) objectOfEvaluation situationTopic))
   (:GAP (CNI communicatorOfInfo)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 3 1) (2 0 0)) ((0 1 0) (0 2 0)) ((0 1 1) (2 0 0))
   ((0 0 0) (0 1 1)) ((0 1 1) (0 3 0)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Density-TheWord (and (isa :NOUN Density))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Care-TheWord
 (and (isa :NOUN DentalCareEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Chair-TheWord (and (isa :NOUN DentalChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Drill-TheWord (and (isa :NOUN DentalDrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Floss-TheWord (and (isa :NOUN DentalFloss))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Hygienist-TheWord
 (and (isa :NOUN DentalHygienist)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Implant-TheWord
 (and (isa :NOUN Implant-Dental)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Mirror-TheWord
 (and (isa :NOUN DentalMirror)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") Pick-TheWord (and (isa :NOUN DentalPick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental") School-TheWord
 (and (isa :NOUN DentalSchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dental" "x" "ray") Machine-TheWord
 (and (isa :NOUN DentalXRayMachine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dentist" "s") Drill-TheWord
 (and (isa :NOUN DentalDrill)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dentist-TheWord (and (isa :NOUN Dentist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dentistry-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dentistry-TheWord (and (isa :NOUN Dentistry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Denunciation-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo objectOfEvaluation))
   (:OBLIQUE-OBJECT (N communicatorOfInfo) ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn against) objectOfEvaluation)
    (AJP fe_manner) ((PPFn of) objectOfEvaluation fe_reason)
    ((PPFn for) fe_reason) (NP fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI objectOfEvaluation))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 6 0)) ((3 0 0)) ((1 2 0)) ((1 5 0)) ((1 3 0)) ((1 1 0))
   ((1 5 1) (3 0 0)) ((1 1 0) (1 5 1)) ((0 0 0) (1 5 1)) ((1 0 0) (1 5 1))
   ((1 4 0) (1 5 1)) ((0 0 0) (1 4 0)) ((1 4 0) (1 5 0)) ((1 5 0) (3 0 0))
   ((0 0 1) (3 0 0)) ((1 4 0) (1 5 1) (3 0 0)) ((1 1 0) (1 4 0) (1 5 1))
   ((1 5 0) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Denverite-TheWord
 (and (isa :NOUN (ResidentFn CityOfDenverCO))) (frame FN_People_by_origin)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deodorant") Spray-TheWord
 (and (isa :NOUN AerosolDeodorant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deodorant-TheWord (and (isa :NOUN Deodorant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deontic") Logic-TheWord
 (and (isa :NOUN DeonticLogic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "deoxyribonucleic") Acid-TheWord
 (and (isa :NOUN DNAStuff)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "department") Store-TheWord
 (and (isa :NOUN DepartmentStore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Department-TheWord (and (isa :NOUN Department))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Departure-TheWord (and (isa :NOUN LeavingAPlace))
 (frame FN_Departing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) to-Generic) ((PPFn into) to-Generic)
    ((PPFn to) to-Generic) (AJP fe_manner) ((PPFn by) trajectory-Complete)
    ((PPFn via) trajectory-Complete) ((PPFn from) from-Generic)
    ((PPFn of) transferredThing) (N transferredThing))
   (:GAP (CNI transferredThing) (DNI from-Generic transferredThing))
   (:GEN (Poss transferredThing))))
 (groupPatterns
  (TheSet ((0 6 0)) ((2 0 0)) ((0 5 0)) ((0 6 0) (2 0 0)) ((0 6 0) (0 7 0))
   ((0 6 0) (0 8 0)) ((0 4 0) (2 0 0)) ((0 3 0) (0 7 0)) ((0 2 0) (2 0 0))
   ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 7 0))
   ((0 2 0) (0 4 0) (0 7 0)))))

(FNNounSemtrans (TheList) Dependability-TheWord
 (and (isa :NOUN Dependable-Personality)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dependence-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance relyOn-Generic Agent-Generic :NOUN))
 (frame FN_Reliance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dependency-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance relyOn-Generic Agent-Generic :NOUN))
 (frame FN_Reliance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N by-Underspecified) ((PPFn on) by-Underspecified))
   (:GAP (INI fe_benefit by-Underspecified) (DNI fe_benefit affectedAgent))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Deployment-TheWord (and (isa :NOUN ArrangingObjects))
 (frame FN_Arranging)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N doneBy) ((PPFn of) objectConfiguredDuring))
   (:GAP (DEN fe_configuration) (INI fe_configuration))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Deportation-TheWord (and (isa :NOUN Deportation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deportment-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) performedBy) ((PPFn in) situationConstituents)
    ((PPFn on) situationConstituents))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 2 0) (1 0 0)) ((0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Deposition-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "depository" "financial") Institution-TheWord
 (and (isa :NOUN BankOrganization)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Depot-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn on) fe_relative_location)
    (N fe_container_possessor fe_descriptor fe_relative_location locationUse)
    ((PPFn for) locationUse))
   (:GAP (DEN eventLocale locationUse))))
 (groupPatterns
  (TheSet ((0 4 3)) ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 4 1)) ((0 4 0))
   ((0 4 3) (0 5 0)) ((0 4 2) (0 4 3)) ((0 1 0) (0 4 3)) ((0 2 0) (0 4 3))
   ((0 0 0) (0 4 3)) ((0 0 0) (0 4 1)) ((0 4 0) (0 4 3))
   ((0 0 0) (0 4 3) (0 5 0)) ((0 1 0) (0 4 0) (0 4 3)))))

(FNNounSemtrans (TheList) Depravity-TheWord (and (isa :NOUN MoralQuality))
 (frame FN_Morality_evaluation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation))
   (:GAP (DEN objectOfCritique)) (:GEN (Poss objectOfEvaluation))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Deprecation-TheWord
 (and (isa :NOUN Disapproving-CommunicationAct))
 (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventAffectsBodyPart))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfEvaluation)
    ((PPFn of) situationTopic))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Depression-TheWord
 (and (isa :NOUN Depression-Topographical))
 (frame FN_Change_position_on_a_scale) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Depression-TheWord
 (and (isa :NOUN Depression-PsychologicalCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Depression-TheWord
 (and (isa :NOUN Depression-Feeling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Depression-TheWord
 (and (isa :NOUN Depression-FinancialCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Depression-TheWord
 (and (isa :NOUN Depression-Topographical)) (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location)
    (VPing fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "depth") Charge-TheWord (and (isa :NOUN DepthBomb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Depth-TheWord (and (isa :NOUN Depth))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn depthOfObject)))
   (:OBLIQUE-OBJECT ((PPFn on) eventOccursAt) ((PPFn at) quantityMeasured)
    ((PPFn between) quantityMeasured) ((PPFn from) quantityMeasured)
    ((PPFn to) quantityMeasured)
    ((PPFn of) quantityMeasured (InverseBinaryPredicateFn depthOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn depthOfObject))
    (N (InverseBinaryPredicateFn depthOfObject))
    (NP quantityMeasured (InverseBinaryPredicateFn depthOfObject)))
   (:GAP (DEN hasPhysicalQuantity)
    (INI (InverseBinaryPredicateFn depthOfObject)))
   (:GEN (NP quantityMeasured)
    (Poss quantityMeasured (InverseBinaryPredicateFn depthOfObject)))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 4 0)) ((1 2 0)) ((1 1 0)) ((3 0 0)) ((1 8 0)) ((1 5 0))
   ((0 0 0) (3 1 0)) ((0 0 0) (1 4 0)) ((1 5 0) (3 1 1)) ((1 5 0) (1 5 1))
   ((0 0 0) (1 5 0)) ((1 5 0) (1 8 1)) ((1 5 0) (1 7 0)) ((0 0 0) (1 3 0))
   ((1 6 0) (1 8 0)) ((1 5 1) (1 8 0)) ((0 0 0) (1 8 0))
   ((0 0 0) (1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Derision-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_reason))
   (:OBLIQUE-OBJECT ((PPFn by) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn for) objectOfEvaluation)
    ((PPFn in) eventAffectsBodyPart) (AJP fe_manner) ((PPFn at) fe_reason)
    ((PPFn of) communicatorOfInfo objectOfEvaluation fe_reason))
   (:GAP (CNI communicatorOfInfo) (DNI fe_reason))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 6 0)) ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 3 0))
   ((1 6 2) (3 0 0)) ((1 5 0) (3 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 4 0)) ((1 6 1) (3 0 0)) ((1 2 0) (3 0 0)))))

(FNNounSemtrans (TheList) Dermatitis-TheWord
 (and (isa :NOUN Rash-AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dermatologist-TheWord (and (isa :NOUN Dermatologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dermatology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Dermatologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Desalination-TheWord (and (isa :NOUN Desalination))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Descendant-TheWord
 (and (isa :NOUN Organism-Whole)
      (relationExistsInstance ancestors Organism-Whole :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego))
   (:OBLIQUE-OBJECT (NP fe_alter) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((3 0 0)) ((1 1 0)) ((0 0 1)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "descending") Aorta-TheWord
 (and (isa :NOUN DescendingAorta)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "descending") Colon-TheWord
 (and (isa :NOUN DescendingColon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Descent-TheWord
 (and (isa :NOUN DescendingAlongSurface)) (frame FN_Path_shape)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_road))
   (:OBLIQUE-OBJECT ((PPingFn on) situationLocation) ((PPFn to) to-Generic)
    ((PPFn into) to-Generic) ((PPFn in) by-Underspecified)
    ((PPFn down) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn towards) trajectory-Complete) ((PPFn from) from-Generic)
    (AJP fe_depictive distanceTranslated fe_manner rateOfEvent)
    ((PPFn of) trajectory-Complete rateOfEvent))
   (:GAP (DEN fe_road))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 7 0)) ((1 6 0)) ((1 5 0)) ((1 9 0)) ((1 4 0)) ((1 8 2))
   ((1 1 0)) ((1 2 0)) ((1 8 0)) ((0 0 0) (1 7 0)) ((1 6 0) (1 8 3))
   ((1 3 0) (1 7 0)) ((1 1 0) (1 8 3)) ((1 1 0) (1 8 1)) ((1 0 0) (1 8 3))
   ((1 1 0) (1 8 2) (1 8 2)) ((0 0 0) (1 8 1) (1 8 2)))))

(FNNounSemtrans (TheList) Descent-TheWord (and (isa :NOUN DescendingEvent))
 (frame FN_Traversing)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectMoving))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    (N by-Underspecified) ((PPFn by) by-Underspecified)
    ((PPFn down) trajectory-Complete) ((PPFn from) from-Generic)
    (AJP fe_depictive duration fe_manner rateOfEvent) ((PPFn of) objectMoving))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((1 6 3) (2 0 0)) ((1 6 2) (1 7 0))
   ((0 0 0) (1 6 2)) ((1 1 0) (2 0 0)) ((1 1 0) (1 7 0)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 4 0) (1 6 2)) ((1 0 0) (1 2 0) (2 0 0))
   ((0 0 0) (1 6 0) (1 6 1)) ((0 0 0) (1 3 0) (1 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Description-TheWord (and (isa :NOUN Description-PCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Description-TheWord
 (and (isa :NOUN Description-SpeechAct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Description-TheWord
 (and (isa :NOUN FirstOrderCollection)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Desert-TheWord (and (isa :NOUN Desert))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts fe_container_possessor)
    (N parts (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 2)) ((0 1 1)) ((0 2 1)) ((0 2 0)) ((2 0 0)) ((0 0 1))
   ((0 0 0)) ((0 1 0)) ((0 1 1) (0 3 0)) ((0 1 1) (0 1 1)) ((0 0 1) (0 2 2)))))

(FNNounSemtrans (TheList) Desertion-TheWord (and (isa :NOUN LeavingAPlace))
 (frame FN_Quitting_a_place)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_manner) ((PPFn amongst) performedBy)
    ((PPFn by) performedBy) ((PPFn from) from-Generic) ((PPFn in) from-Generic)
    ((PPFn of) performedBy from-Generic))
   (:GAP (CNI performedBy) (DNI from-Generic))
   (:GEN (Poss performedBy from-Generic))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 2 0)) ((0 1 0)) ((2 0 1)) ((0 5 1)) ((0 4 0))
   ((0 3 0)) ((0 0 0)) ((0 5 1) (2 0 0)) ((0 3 0) (2 0 0)) ((0 2 0) (0 5 1))
   ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Desiccation-TheWord (and (isa :NOUN Drying))
 (frame FN_Cause_to_be_dry)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfStateChange)
    ((PPFn in) temporallyIntersects) ((PPFn at) temporallyIntersects))
   (:GAP (CNI causes-Underspecified) (DNI objectOfStateChange))
   (:GEN (Poss objectOfStateChange))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 0 0)) ((1 0 0)) ((0 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Design-TheWord (and (isa :NOUN Designing))
 (frame FN_Coming_up_with)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) outputCW) (AJP outputCW fe_manner eventOccursAt)
    (N outputCW purposeOfEvent))
   (:GAP (INI subjectOfMentalSituation) (DNI subjectOfMentalSituation outputCW)
    (DEN outputCW))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 0 0)) ((1 1 0)) ((1 2 0)) ((1 0 0) (1 2 1))
   ((1 0 0) (1 1 2)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Design-TheWord (and (isa :NOUN VisualPattern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Designer-TheWord (and (isa :NOUN Designer))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Desire-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPfin fe_event) (NP objectActedOn) ((PPFn with) objectActedOn))
   (:OBJECT (AJP objectActedOn) (N objectActedOn) (Num objectActedOn)
    (NP fe_focal_participant))
   (:OBLIQUE-OBJECT (VPto fe_event) ((PPFn to) fe_event)
    ((PPingFn for) fe_event) (Sfin fe_event) ((PPFn in) objectActedOn)
    ((PPFn of) objectActedOn) ((PPFn among) objectActedOn)
    ((PPFn amongst) objectActedOn) ((PPFn by) objectActedOn)
    (Sub (InverseBinaryPredicateFn explains-Generic)) (N fe_focal_participant)
    ((PPFn for) fe_event objectActedOn fe_focal_participant)
    (AJP fe_degree fe_event (InverseBinaryPredicateFn explains-Generic)
     fe_manner)
    ((PPFn at) happensOnDate))
   (:GAP (DNI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 12 3)) ((4 0 0)) ((2 0 0)) ((2 12 0)) ((2 11 2) (4 0 0))
   ((2 10 0) (4 0 0)) ((0 1 0) (2 11 2)) ((2 0 0) (4 0 0)) ((2 0 0) (2 5 0))
   ((2 0 0) (2 8 0)) ((2 0 0) (2 7 0)) ((2 0 0) (2 6 0)) ((0 1 0) (2 0 0))
   ((2 3 0) (4 0 0)) ((2 2 0) (2 11 1)) ((2 11 0) (4 0 0)) ((2 4 0) (2 12 1))
   ((0 1 0) (2 12 1)) ((2 12 0) (4 0 0)) ((2 11 2) (2 12 3) (4 0 0))
   ((0 1 0) (1 3 0) (2 11 2)) ((0 1 0) (2 0 0) (2 12 2))
   ((0 1 0) (2 1 0) (2 9 0)) ((2 12 0) (2 13 0) (4 0 0))
   ((2 11 2) (2 12 0) (4 0 0)) ((0 1 0) (2 11 2) (2 12 0))
   ((2 0 0) (2 12 0) (4 0 0)) ((2 0 0) (2 5 0) (2 12 0))
   ((2 4 0) (2 12 0) (2 12 1)) ((0 1 0) (0 1 0) (2 10 0) (2 12 0))
   ((0 0 0) (0 1 0) (0 2 0) (1 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList "desk" "accessory") Set-TheWord
 (and (isa :NOUN DesktopItem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "desk") Drawer-TheWord (and (isa :NOUN DeskDrawer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "desk") Pad-TheWord (and (isa :NOUN DeskPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "desk") Scissors-TheWord
 (and (isa :NOUN DeskScissors)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "desk") Storage-TheWord
 (and (isa :NOUN DeskStorageContainer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Desk-TheWord (and (isa :NOUN Desk-PieceOfFurniture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "desktop" "computer") Hardware-TheWord
 (and (isa :NOUN DesktopComputerHardwareItem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "desktop") Computer-TheWord
 (and (isa :NOUN DesktopComputer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Despair-TheWord (and (isa :NOUN Despair))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) (AVP fe_degree) (Sfin fe_degree)
    ((PPFn for) objectActedOn) ((PPFn of) objectActedOn)
    ((PPFn on) eventAffectsBodyPart) ((PPFn in) eventAffectsBodyPart)
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn over) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn about) situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 7 0)) ((1 5 0)) ((1 6 0)) ((2 0 0)) ((1 4 0)) ((1 3 0))
   ((0 0 0)) ((1 0 0)) ((1 10 0) (2 0 0)) ((0 0 0) (1 10 0)) ((1 7 0) (2 0 0))
   ((0 0 0) (1 8 0)) ((0 0 0) (1 7 0)) ((1 0 0) (1 5 0)) ((1 0 0) (2 0 0))
   ((0 0 0) (1 1 0) (1 2 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Desperation-TheWord (and (isa :NOUN Despair))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn at) topicOfIndividual)
    ((PPFn with) topicOfIndividual) (VPto topicOfIndividual)
    ((PPFn of) topicOfIndividual objectActedOn)
    ((PPFn in) eventAffectsBodyPart) (AJP fe_degree fe_manner fe_parameter)
    ((PPFn about) situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 2)) ((1 5 1)) ((1 4 0)) ((2 0 0)) ((1 3 1)) ((0 0 0))
   ((1 5 0)) ((1 3 0)) ((1 4 0) (1 5 1)) ((1 6 0) (2 0 0)) ((0 0 0) (1 5 1))
   ((0 0 0) (1 4 0)) ((1 1 0) (1 5 2)) ((1 2 0) (2 0 0)) ((1 2 0) (1 3 1))
   ((0 0 0) (1 3 0)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0) (1 5 1)))))

(FNNounSemtrans (TheList) Despot-TheWord
 (and (isa :NOUN Dictator-HeadOfGovernment)) (frame FN_Leadership)
 (bindingTemplate (TheList (:GAP (DNI fe_governed) (DEN leadersOfMovement))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dessert-TheWord (and (isa :NOUN DessertFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Destination-TheWord
 (and (isa :NOUN EnduringThing-Localized)
      (relationExistsInstance intendedToLocation Translocation :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Destiny-TheWord
 (and (isa :NOUN Situation)
      (relationExistsInstance postSituation ExperiencingSomething :NOUN))
 (frame FN_Destiny)
 (bindingTemplate
  (TheList (:GAP (DEN fe_state_of_affairs)) (:GEN (Poss affectedAgent))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Destroyer-TheWord (and (isa :NOUN Destroyer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Destruction-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Destroying)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified fe_destroyer))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn)
    (AJP (InverseBinaryPredicateFn explains-Generic) objectActedOn)
    ((PPFn during) temporallyIntersects)
    (N objectActedOn temporallyIntersects))
   (:GAP (DNI fe_destroyer objectActedOn) (INI fe_destroyer objectActedOn))
   (:GEN (Poss fe_destroyer objectActedOn))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 3 0)) ((1 1 1)) ((1 0 0)) ((0 0 0)) ((1 0 0) (1 3 1))
   ((1 0 0) (3 0 0)) ((0 0 1) (1 0 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList "detached") House-TheWord
 (and (isa :NOUN DetachedHouse)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Detachment-TheWord
 (and (isa :NOUN Detachment-MilitaryEchelon)) (frame FN_Temporary_group)
 (bindingTemplate (TheList (:GAP (DEN fe_temporary_group))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Detective-TheWord (and (isa :NOUN Detective))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Details-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:GAP (DEN fe_information))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Detergent-TheWord (and (isa :NOUN LaundryDetergent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Detergent-TheWord (and (isa :NOUN DishwashingSoap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Detergent-TheWord (and (isa :NOUN Surfactant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Deterioration-TheWord
 (and (isa :NOUN DeteriorationOfPatientsClinicalStatus))
 (frame FN_Improvement_or_decline) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Detonation-TheWord (and (isa :NOUN Detonation))
 (frame FN_Detonate_explosive) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Detonation-TheWord (and (isa :NOUN Explosion))
 (frame FN_Explosion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) explosiveDeviceUsed)
    (AJP fe_degree frequencyOfEvent fe_manner))))
 (groupPatterns (TheSet ((0 1 2)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 2)))))

(FNNounSemtrans (TheList) Deuce-TheWord (and (isa :NOUN Two-TheCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Devastation-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Destroying)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) causes-Underspecified) (N fe_destroyer))
   (:GAP (DNI fe_destroyer objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Development-TheWord
 (and (isa :NOUN AccumulatingSteadily)) (frame FN_Event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) temporallyIntersects))
   (:GAP (DEN fe_event) (INI eventOccursAt temporallyIntersects)
    (DNI eventOccursAt temporallyIntersects))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((0 2 0)) ((0 1 1)) ((0 0 1)) ((0 0 0))
   ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Development-TheWord
 (and (isa :NOUN DevelopingSuddenly)) (frame FN_Event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) temporallyIntersects))
   (:GAP (DEN fe_event) (INI eventOccursAt temporallyIntersects)
    (DNI eventOccursAt temporallyIntersects))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((0 2 0)) ((0 1 1)) ((0 0 1)) ((0 0 0))
   ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Development-TheWord
 (and (isa :NOUN ImprovementEvent)) (frame FN_Progression)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) ((PPFn of) objectActedOn)
    (N objectActedOn)
    (AJP fe_domain fe_manner rateOfEvent temporallyIntersects)
    ((PPFn in) fe_domain objectActedOn temporallyIntersects))
   (:GAP (DEN objectActedOn) (DNI objectActedOn) (INI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 4 1)) ((1 0 0)) ((0 0 0)) ((1 2 0)) ((1 4 0)) ((1 3 0))
   ((1 1 0) (1 4 2)) ((1 3 2) (3 0 0)) ((1 1 0) (1 3 2)) ((1 1 0) (1 3 1))
   ((1 2 0) (1 3 1)) ((1 3 0) (1 3 3)) ((1 1 0) (1 3 0)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList "device" "for" "cutting") Hair-TheWord
 (and (isa :NOUN DeviceForCuttingHair)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "device" "for" "heating" "the") Air-TheWord
 (and (isa :NOUN AirHeatingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "device") Set-TheWord
 (and (isa :NOUN DeviceSet-Composite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Device-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A deviceUse) (AJP deviceUse) (N deviceUse)
    ((PPingFn for) deviceUse) ((PPFn for) deviceUse) (VPto deviceUse))
   (:GAP (DEN fe_gizmo) (DNI deviceUse)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 3 0)) ((0 4 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Device-TheWord (and (isa :NOUN HeraldicDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Device-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "device" "used" "for") Smoking-TheWord
 (and (isa :NOUN SmokingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "device" "with" "a" "dual" "voltage" "power")
 Supply-TheWord (and (isa :NOUN DeviceWithDualVoltagePowerSupply))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "device" "with" "no" "moving") Parts-TheWord
 (and (isa :NOUN DeviceWithNoMovingParts)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dew-TheWord (and (isa :NOUN Dew)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dewdrop-TheWord (and (isa :NOUN (ParticleFn Dew)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dexamethasone-TheWord (and (isa :NOUN Dexamethasone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dextrose-TheWord (and (isa :NOUN Glucose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diabetes-TheWord (and (isa :NOUN DiabetesMellitus))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diabetic-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance physiologicalConditionAffects DiabetesMellitus
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diacritical") Mark-TheWord
 (and (isa :NOUN DiacriticMark)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diadem-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Diagnosis-TheWord (and (isa :NOUN MedicalDiagnosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diagnostician-TheWord (and (isa :NOUN Pathologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diagram-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Physical_artworks) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dial") Phone-TheWord (and (isa :NOUN DialTelephone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dial-TheWord (and (isa :NOUN RotaryDial-Telephone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dialect-TheWord (and (isa :NOUN LanguageDialect))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dialog-TheWord
 (and (isa :NOUN BiDirectionalCommunication)) (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1))
   (:OBLIQUE-OBJECT ((PPFn with) fe_interlocutor_2)
    ((PPFn between) fe_interlocutors) ((PPFn of) fe_interlocutors)
    ((PPFn within) fe_interlocutors) ((PPingFn between) fe_interlocutors)
    ((PPingFn with) fe_interlocutor_2 fe_interlocutors)
    (N fe_interlocutor_1 fe_interlocutors situationTopic)
    (AJP duration fe_interlocutors fe_manner situationTopic)
    ((PPFn on) situationTopic) ((PPFn about) situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 9 0)) ((1 7 3)) ((2 0 1)) ((1 5 1)) ((1 4 0)) ((1 2 0))
   ((1 1 0)) ((1 6 1)) ((1 7 1)) ((1 5 0)) ((1 0 0)) ((1 3 0) (1 8 0))
   ((1 1 0) (1 9 0)) ((1 1 0) (1 6 1)) ((1 0 0) (1 8 0)) ((1 0 0) (1 6 2))
   ((0 0 0) (1 7 3)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 6 0))
   ((1 6 2) (1 7 0)) ((1 7 2) (1 7 2) (1 8 0)) ((1 0 0) (1 7 0) (2 0 0)))))

(FNNounSemtrans (TheList) Dialogue-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diameter-TheWord
 (and (isa :NOUN Distance)
      (relationExistsInstance diameterOfObject PolyDimensionalThing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diamond-TheWord (and (isa :NOUN Diamond))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diamond-TheWord (and (isa :NOUN Diamond-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diamond-TheWord (and (isa :NOUN Diamond-TheSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diaper") Bag-TheWord (and (isa :NOUN DiaperBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diaper-TheWord (and (isa :NOUN Diaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diaphragm-TheWord
 (and (isa :NOUN Diaphragm-BodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diaphragm-TheWord
 (and (isa :NOUN Diaphragm-Contraceptive)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diaphysis-TheWord (and (isa :NOUN BoneShaft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diarist-TheWord (and (isa :NOUN Diarist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diarrhea-TheWord (and (isa :NOUN Diarrhea))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diary-TheWord (and (isa :NOUN Diary)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) startingDate) ((PPFn from) startingDate)
    (AVP situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW startingDate situationTopic)
    (N fe_genre deviceUse))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 0)) ((0 4 0)) ((2 0 0)) ((0 3 0)) ((0 3 1) (2 0 0))
   ((0 4 1) (2 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 3 0))
   ((0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Diatom-TheWord (and (isa :NOUN Diatom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dibs-TheWord
 (and (isa :NOUN AnnouncingSomething) (performedBy :NOUN ?agt)
      (isa ?agt IntelligentAgent) (infoTransferred :NOUN (owns ?agt ?thing))
      (isa ?thing SomethingExisting))
 (frame FN_Claim_ownership) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dice") Shaker-TheWord (and (isa :NOUN DiceShaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dice-TheWord (and (isa :NOUN Die-TheCube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dicot-TheWord (and (isa :NOUN DicotSubclass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dictator-TheWord
 (and (isa :NOUN Dictator-HeadOfGovernment)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (A fe_domain) ((PPFn since) duration)
    (AJP fe_descriptor fe_governed) ((PPFn in) fe_governed)
    ((PPFn of) fe_governed) (N activeIngredientsOfType))
   (:GAP (DNI fe_governed) (DEN leadersOfMovement)) (:GEN (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((1 3 0)) ((1 2 1)) ((1 5 0) (4 0 0))
   ((3 0 0) (4 0 0)) ((1 2 1) (4 0 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 2 1))
   ((1 2 0) (4 0 0)) ((1 5 0) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Dictionary-TheWord (and (isa :NOUN Dictionary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Die-TheWord (and (isa :NOUN Die-TheCube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diecast") Toy-TheWord (and (isa :NOUN DiecastToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diencephalon-TheWord (and (isa :NOUN Diencephalon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diesel") Engine-TheWord
 (and (isa :NOUN DieselEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diesel") Oil-TheWord (and (isa :NOUN DieselFuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diesel-TheWord (and (isa :NOUN DieselEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diesel-TheWord (and (isa :NOUN DieselFuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diet-TheWord (and (isa :NOUN Dieting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dieter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Dieting :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dietary") Supplement-TheWord
 (and (isa :NOUN DietarySupplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dietician-TheWord (and (isa :NOUN Nutritionist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Difference-TheWord (and (isa :NOUN DifferenceFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Difference-TheWord
 (and (isa :NOUN MathematicalFunctionOnScalars))
 (frame FN_Non-commutative_statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventOutcomes)) (:GAP (INI fe_term_1 fe_term_2))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "differential") Equation-TheWord
 (and (isa :NOUN DifferentialEquation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Difficulty-TheWord
 (and (isa :NOUN LevelOfDifficulty)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diffidence-TheWord (and (isa :NOUN Diffidence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Digestion-TheWord (and (isa :NOUN DigestionEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Digit-TheWord (and (isa :NOUN Numeral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "digital" "audio" "file") Player-TheWord
 (and (isa :NOUN DigitalAudioFilePlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "digital") Camcorder-TheWord
 (and (isa :NOUN DigitalCamcorder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "digital") Camera-TheWord
 (and (isa :NOUN DigitalCamera)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "digital") Camera-TheWord
 (and (isa :NOUN StillCamera-Digital)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "digital") Certificate-TheWord
 (and (isa :NOUN DigitalCertificate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "digital") Telephone-TheWord
 (and (isa :NOUN DigitalTelephone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dilbit-TheWord (and (isa :NOUN Dilbit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dildo-TheWord (and (isa :NOUN Dildo)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diligence-TheWord (and (isa :NOUN Diligent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dime-TheWord (and (isa :NOUN DimeCoin-US))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dimmer-TheWord (and (isa :NOUN DimmingLightSwitch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diner-TheWord (and (isa :NOUN Diner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dinero-TheWord (and (isa :NOUN Currency))
 (frame FN_Money) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dinghy-TheWord (and (isa :NOUN Dinghy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dinghy-TheWord (and (isa :NOUN Rowboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dingle-TheWord
 (and (isa :NOUN ?NATURALFEATURETYPE)
      (isa ?NATURALFEATURETYPE NaturalFeatureType))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dining" "room") Chair-TheWord
 (and (isa :NOUN DiningRoomChair)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dining" "room") Set-TheWord
 (and (isa :NOUN DiningRoomSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dining") Room-TheWord (and (isa :NOUN DiningRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dining") Set-TheWord (and (isa :NOUN DiningSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dining-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dinner") Fork-TheWord (and (isa :NOUN DinnerFork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dinner") Jacket-TheWord (and (isa :NOUN Tuxedo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dinner-Party-TheWord (and (isa :NOUN DinnerParty))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP host))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) (AJP clothingStyle))
   (:GAP (DEN fe_social_event)) (:GEN (Poss host))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 1 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Dinner-Plate-TheWord (and (isa :NOUN DinnerPlate))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dinner-TheWord (and (isa :NOUN DinnerParty))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent beneficiary host))
   (:OBLIQUE-OBJECT ((PPFn for) amongThosePresent) ((PPFn by) host)
    ((PPFn of) host fe_occasion) ((PPFn at) eventOccursAt)
    (N amongThosePresent host fe_occasion fe_refreshment clothingStyle)
    (NP fe_occasion fe_social_event temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects)
    (AJP fe_occasion clothingStyle temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (INI amongThosePresent host) (CNI host) (DEN fe_social_event))
   (:GEN (Poss beneficiary host temporallyIntersects))))
 (groupPatterns
  (TheSet ((3 0 2)) ((1 6 1)) ((1 7 2)) ((1 5 1)) ((1 8 0)) ((1 3 0)) ((1 5 0))
   ((1 4 2)) ((1 7 0)) ((3 0 1)) ((0 0 2)) ((1 4 1)) ((1 4 0))
   ((1 3 0) (1 7 1)) ((1 4 2) (3 0 2)) ((1 4 2) (1 8 0)) ((1 3 0) (1 4 2))
   ((1 2 1) (1 4 2)) ((1 2 0) (1 7 2)) ((1 4 3) (3 0 1)) ((1 3 0) (3 0 1))
   ((1 4 1) (1 8 0)) ((1 4 2) (3 0 0)) ((1 0 0) (1 4 4)) ((0 0 0) (1 7 1))
   ((1 0 0) (1 8 0)) ((0 0 0) (1 3 0)) ((0 0 2) (1 0 0))
   ((0 0 0) (1 3 0) (1 5 2)) ((0 0 0) (1 4 2) (1 8 0))
   ((0 0 2) (1 0 0) (1 6 1)) ((0 0 2) (1 0 0) (1 6 0))
   ((0 0 2) (1 4 2) (1 8 0) (1 8 1)) ((1 2 0) (1 3 0) (1 7 2) (1 8 1))
   ((0 0 1) (1 1 0) (1 5 2) (1 7 0)) ((0 0 0) (1 2 0) (1 3 0) (1 4 2)))))

(FNNounSemtrans (TheList) Dinosaur-TheWord (and (isa :NOUN Dinosaur))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diocese-TheWord (and (isa :NOUN Diocese-Catholic))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Diode-TheWord (and (isa :NOUN Diode)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dip-TheWord (and (isa :NOUN Dip-Food))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dip-TheWord (and (isa :NOUN Dipping)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diphtheria-TheWord (and (isa :NOUN Diphtheria))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diploid-TheWord (and (isa :NOUN DiploidCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diploma-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:GAP (DEN fe_document) (INI fe_issuer)) (:GEN (Poss fe_bearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Diploma-TheWord (and (isa :NOUN DiplomaDocument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diplomat-TheWord (and (isa :NOUN Diplomat))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_governed)) (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "direct") Current-TheWord
 (and (isa :NOUN DirectCurrent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "direct") Influence-TheWord
 (and (isa :NOUN DirectInfluenceFrame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "direct" "view" "television") Set-TheWord
 (and (isa :NOUN TelevisionSet-DirectView)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Direction-TheWord (and (isa :NOUN Direction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Direction-TheWord (and (isa :NOUN Instructions))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Director-TheWord (and (isa :NOUN Director-Movie))
 (frame FN_Behind_the_scenes)
 (bindingTemplate
  (TheList (:SUBJECT (NP ibtCreator))
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn citizens))
    ((PPFn of) fe_production) ((PPFn on) fe_production)
    (N fe_distributor genericPathway-Partial fe_production fe_studio
     activeIngredientsOfType))
   (:GAP (DEN ibtCreator)) (:GEN (Poss fe_production))
   (:APPOSITIVE (NP ibtCreator))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 3 1)) ((4 0 0)) ((1 3 1) (1 3 4))
   ((1 3 3) (4 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((3 0 0) (4 0 0))
   ((1 1 0) (4 0 0)) ((1 3 2) (4 0 0)) ((1 3 1) (4 0 0)) ((1 3 0) (4 0 0))
   ((1 0 0) (1 3 1) (4 0 0)) ((0 0 0) (1 3 1) (1 3 1) (1 3 1)))))

(FNNounSemtrans (TheList) Director-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn for) fe_domain duration fe_governed)
    ((PPFn of) processTypeForAccomplishmentType fe_governed) (NP fe_governed)
    (AJP fe_degree fe_descriptor fe_manner)
    ((PPFn in) fe_governed temporallyIntersects) (AVP temporallyIntersects)
    (N fe_degree fe_descriptor activeIngredientsOfType))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (N fe_governed) (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 1 0)) ((1 1 1)) ((1 3 0)) ((1 1 0)) ((1 2 0) (4 0 0))
   ((0 0 0) (1 1 1)) ((1 1 1) (1 6 1)) ((1 4 0) (1 6 1)) ((1 0 2) (1 6 1))
   ((1 1 1) (1 3 1)) ((1 4 1) (1 6 0)) ((1 0 2) (1 6 0)) ((1 3 0) (3 1 0))
   ((1 1 1) (1 3 0)) ((1 3 0) (1 4 0)) ((1 0 2) (1 3 0))
   ((1 1 1) (1 3 2) (4 0 0)) ((1 0 2) (1 3 1) (1 5 0))
   ((1 0 2) (1 5 0) (1 6 1)) ((0 0 0) (1 3 0) (1 4 1))
   ((1 6 0) (3 1 0) (4 0 0)) ((1 1 1) (1 3 0) (4 0 0))
   ((1 3 0) (3 0 0) (4 0 0)) ((1 1 0) (1 3 0) (4 0 0))
   ((0 0 0) (1 0 0) (1 6 2) (3 1 0)) ((0 0 0) (1 0 1) (1 6 1) (3 1 0)))))

(FNNounSemtrans (TheList) Director-TheWord (and (isa :NOUN Manager))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Director-TheWord
 (and (isa :NOUN DirectorOfOrganization)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dirt") Road-TheWord
 (and (isa :NOUN UnpavedPathArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dirt-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dirtiness-TheWord (and (isa :NOUN Dirtiness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disability" "aid") Equipment-TheWord
 (and (isa :NOUN DisabilityAidEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disability") Insurance-TheWord
 (and (isa :NOUN DisabilityInsurance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disagreement-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1 fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2 fe_arguers) (N fe_arguers)
    ((PPFn among) fe_arguers) ((PPFn between) fe_arguers) ((PPFn on) fe_issue)
    ((PPFn about) fe_issue) ((PPFn of) fe_issue) ((PPFn over) fe_issue)
    (PPinterrog fe_issue) ((PPingFn about) fe_issue) ((PPingFn over) fe_issue)
    (AJP frequencyOfEvent fe_manner))
   (:GEN (Poss fe_arguer1 fe_arguers))))
 (groupPatterns
  (TheSet ((1 11 1)) ((1 10 0)) ((1 9 0)) ((1 7 0)) ((1 5 0)) ((1 3 0))
   ((1 1 0)) ((1 0 0)) ((1 7 0) (1 11 1)) ((1 7 0) (1 11 0)) ((1 8 0) (2 0 1))
   ((1 7 0) (2 0 1)) ((1 3 0) (1 4 0)) ((1 3 0) (1 5 0)) ((0 0 1) (1 5 0))
   ((1 11 0) (2 0 1)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0))
   ((1 3 0) (1 5 0) (1 11 1)) ((0 0 1) (1 5 0) (1 11 1))
   ((1 6 0) (1 11 0) (2 0 1)) ((1 2 0) (1 5 0) (1 11 0))
   ((0 0 0) (1 0 1) (1 4 0)))))

(FNNounSemtrans (TheList) Disappearance-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists inputsDestroyed :NOUN SomethingExisting))
 (frame FN_Ceasing_to_be) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disappearance-TheWord
 (and (isa :NOUN DisappearingFromSight)) (frame FN_Departing)
 (bindingTemplate
  (TheList (:SUBJECT (NP transferredThing))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) (AJP fe_manner) (N eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn from) from-Generic)
    ((PPFn of) transferredThing) (NP transferredThing))
   (:GAP (DNI from-Generic))
   (:GEN (Poss distanceTranslated transferredThing))))
 (groupPatterns
  (TheSet ((3 0 1)) ((0 0 0)) ((1 5 0)) ((1 6 0)) ((1 2 0)) ((1 0 0)) ((3 0 0))
   ((1 4 0) (3 0 1)) ((1 4 0) (1 5 0)) ((1 3 0) (1 5 0)) ((1 1 0) (1 5 0))
   ((1 0 0) (3 0 1)))))

(FNNounSemtrans (TheList) Disappointment-TheWord
 (and (isa :NOUN Disappointment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disapproval-TheWord (and (isa :NOUN Disapproval))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn towards) objectOfEvaluation)
    ((PPFn in) eventAffectsBodyPart) ((PPFn with) by-Underspecified)
    ((PPingFn by) by-Underspecified)
    ((PPFn of) subjectOfMentalSituation objectOfEvaluation fe_reason)
    ((PPFn for) fe_reason)
    (AJP subjectOfMentalSituation fe_degree fe_manner fe_reason)
    ((PPingFn of) fe_reason) ((PPFn at) fe_reason))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_reason))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((1 7 0)) ((1 6 0)) ((1 6 1)) ((1 4 2) (3 0 0))
   ((0 0 0) (1 8 0)) ((1 4 2) (1 6 0)) ((1 6 2) (3 0 0)) ((1 4 0) (1 6 2))
   ((1 4 1) (1 6 3)) ((1 4 1) (3 0 0)) ((1 5 0) (1 6 1)) ((1 1 0) (1 6 1))
   ((1 0 0) (1 6 1)) ((0 0 0) (3 0 0)) ((1 6 2) (1 8 0) (3 0 0))
   ((0 0 0) (1 4 2) (3 0 0)) ((0 0 0) (1 8 0) (3 0 0))
   ((0 0 0) (1 3 0) (3 0 0)) ((0 0 0) (1 2 0) (3 0 0))
   ((0 0 0) (1 4 1) (3 0 0)) ((0 0 0) (0 0 0) (1 6 1)))))

(FNNounSemtrans (TheList) Disarmament-TheWord
 (and (isa :NOUN DisarmingSomeone)) (frame FN_Emptying)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPed fe_manner) ((PPFn of) from-Generic)
    (A eventOccursAt objectOfStateChange) (N from-Generic objectOfStateChange)
    (AJP doneBy fe_degree fe_manner temporallyIntersects)
    ((PPFn by) doneBy temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (2nd eventOccursAt) (DEN objectOfStateChange))
   (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 1)) ((0 3 0)) ((0 6 0)) ((0 2 0)) ((0 1 0)) ((0 4 2))
   ((0 4 1)) ((0 5 0)) ((0 4 0)) ((0 1 0) (0 5 1)) ((0 6 1) (2 0 0))
   ((0 1 0) (0 4 3)) ((0 2 1) (2 0 0)) ((0 1 0) (0 2 1)) ((0 4 2) (2 0 0))
   ((0 0 0) (0 6 0)) ((0 2 1) (0 4 1)) ((0 4 1) (0 5 0))
   ((0 2 1) (0 4 1) (0 6 0)))))

(FNNounSemtrans (TheList) Disaster-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn fe_undesirable_event))
   (:OBLIQUE-OBJECT (A causes-Underspecified) ((PPFn at) objectActedOn)
    ((PPFn on) objectActedOn) ((PPFn to) objectActedOn)
    ((PPFn of) objectActedOn temporallyIntersects)
    ((PPFn in) objectActedOn eventOccursAt temporallyIntersects)
    ((PPFn for) objectActedOn temporallyIntersects)
    (AJP objectActedOn fe_undesirable_event)
    (NP objectActedOn fe_undesirable_event))
   (:GAP (CNI objectActedOn) (DNI objectActedOn) (INI objectActedOn)
    (DEN objectActedOn fe_undesirable_event))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 4 0)) ((1 5 0)) ((1 1 0)) ((0 0 0)) ((1 8 0))
   ((0 0 1)) ((1 7 0)) ((1 6 0)) ((1 0 0)) ((1 5 0) (1 8 1)) ((0 0 1) (1 6 0))
   ((0 0 1) (1 8 0)) ((1 1 0) (1 5 2)) ((1 4 1) (1 7 1))
   ((0 0 1) (1 5 1) (1 6 0) (1 6 1)))))

(FNNounSemtrans (TheList) Disbursement-TheWord (and (isa :NOUN Paying))
 (frame FN_Commerce_pay) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disc") Brake-TheWord
 (and (isa :NOUN DiskBrakeSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discernment-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_practice affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfCritique)
    (AJP fe_degree fe_manner fe_practice) (Sinterrog fe_practice)
    ((PPFn in) fe_practice affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 1)) ((0 0 0)) ((1 1 2)) ((1 0 0)) ((0 0 1) (1 2 0))
   ((1 1 1) (1 3 0)) ((0 0 1) (1 1 0)) ((0 0 1) (0 0 1) (1 3 0))
   ((0 0 1) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Discipline-TheWord (and (isa :NOUN FieldOfStudy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disclosure-TheWord
 (and (isa :NOUN RevealingTrueInformation)) (frame FN_Reveal_secret)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (Sfin fe_information)
    ((PPFn in) genericPathway-Partial)
    (AVP fe_completeness genericPathway-Partial) ((PPFn by) performedBy)
    ((PPFn from) performedBy) (NP temporallyIntersects)
    (AJP fe_completeness fe_manner temporallyIntersects)
    ((PPFn of) fe_information situationTopic) ((PPFn about) situationTopic))
   (:GAP (DEN fe_information) (DNI fe_information performedBy situationTopic))
   (:GEN (Poss performedBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 9 0)) ((1 5 0)) ((1 2 0)) ((1 7 1)) ((3 0 1)) ((3 0 0))
   ((1 1 0)) ((1 3 0)) ((1 7 0)) ((1 0 0)) ((1 4 0) (1 8 1)) ((1 3 1) (1 8 1))
   ((1 2 0) (3 0 0)) ((1 2 0) (1 4 0)) ((0 0 0) (1 7 1)) ((1 7 2) (1 8 0))
   ((1 7 0) (1 8 1)) ((1 0 0) (1 8 1)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 2 0) (1 6 0)) ((1 4 0) (1 7 0) (1 8 1))
   ((1 2 0) (1 7 0) (1 8 1)))))

(FNNounSemtrans (TheList "disco") Ball-TheWord
 (and (isa :NOUN DiscoMirrorBall)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disco-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discontinuation-TheWord
 (and (isa :NOUN DisruptionEvent)) (frame FN_Process_stop)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_process) (AJP temporallyIntersects))
   (:GEN (Poss fe_process))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Discotheque-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discount-TheWord (and (isa :NOUN Discounting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discoverer-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists doneBy :NOUN DiscoveringSomething))
 (frame FN_Achieving_first) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discovery-TheWord
 (and (isa :NOUN DiscoveringSomething)) (frame FN_Achieving_first)
 (bindingTemplate (TheList (:GAP (DEN fe_new_idea)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discovery-TheWord
 (and (isa :NOUN BecomingAwareOfAnEvent)) (frame FN_Becoming_aware)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation fe_phenomenon))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation) ((PPFn from) fe_evidence)
    ((PPFn at) fe_ground) ((PPFn of) fe_phenomenon) ((PPFn in) fe_phenomenon)
    (Sfin fe_phenomenon) (NP subjectOfMentalSituation fe_phenomenon)
    ((PPFn like) fe_phenomenon) ((PPFn about) situationTopic))
   (:GAP (INI subjectOfMentalSituation fe_phenomenon))
   (:GEN (Poss subjectOfMentalSituation fe_phenomenon))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 6 0)) ((1 4 0)) ((1 8 0)) ((0 0 1)) ((3 0 0)) ((1 1 0))
   ((1 7 0)) ((0 0 1) (1 9 0)) ((1 3 0) (1 4 0)) ((1 9 0) (3 0 0))
   ((0 0 0) (1 9 0)) ((1 6 0) (3 0 0)) ((1 4 0) (3 0 0)) ((1 1 0) (3 0 1))
   ((1 1 0) (1 4 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 5 0)) ((1 0 0) (1 4 0))
   ((1 2 0) (1 7 1) (3 0 0)))))

(FNNounSemtrans (TheList) Discovery-TheWord
 (and (isa :NOUN FindingAPhysicalObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discrimination-TheWord
 (and (isa :NOUN Discrimination)) (frame FN_Differentiation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_quality))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    (AJP subjectOfMentalSituation fe_degree fe_manner)
    ((PPFn between) fe_phenomena)
    ((PPFn of) subjectOfMentalSituation fe_phenomena) (N fe_phenomena))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_phenomena))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 4 0)) ((1 3 0) (1 4 0))
   ((1 0 0) (1 4 0)) ((1 1 0) (1 2 0)) ((1 1 2) (3 0 0)) ((1 1 2) (1 2 0))
   ((1 1 1) (1 3 1)) ((0 0 0) (1 1 1) (1 2 0)))))

(FNNounSemtrans (TheList) Discrimination-TheWord
 (and (isa :NOUN SortingSomethingMentally)) (frame FN_Differentiation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_quality))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    (AJP subjectOfMentalSituation fe_degree fe_manner)
    ((PPFn between) fe_phenomena)
    ((PPFn of) subjectOfMentalSituation fe_phenomena) (N fe_phenomena))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_phenomena))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 4 0)) ((1 3 0) (1 4 0))
   ((1 0 0) (1 4 0)) ((1 1 0) (1 2 0)) ((1 1 2) (3 0 0)) ((1 1 2) (1 2 0))
   ((1 1 1) (1 3 1)) ((0 0 0) (1 1 1) (1 2 0)))))

(FNNounSemtrans (TheList) Discrimination-TheWord
 (and (isa :NOUN Discrimination-ObtainingAndStoringKnowledge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discus-TheWord (and (isa :NOUN Discus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discus-TheWord
 (and (isa :NOUN DiscusThrowSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discussant-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists performedBy :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate (TheList (:GAP (DEN fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Discussion-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors situationTopic))
   (:OBLIQUE-OBJECT (A fe_domain)
    ((PPFn with) fe_interlocutor_2 fe_interlocutors)
    ((PPFn among) fe_interlocutors) ((PPFn since) duration)
    (VPto purposeOfEvent)
    ((PPFn in) (InverseBinaryPredicateFn subEvents) fe_interlocutors
     eventOccursAt temporallyIntersects)
    (Sub temporallyIntersects) (VPing temporallyIntersects)
    ((PPFn between) fe_interlocutors temporallyIntersects)
    (AVP temporallyIntersects) (NP temporallyIntersects)
    ((PPFn during) temporallyIntersects) ((PPFn of) situationTopic)
    (PPinterrog situationTopic) ((PPFn for) situationTopic)
    ((PPFn about) situationTopic) (N fe_interlocutors situationTopic)
    ((PPFn on) eventOccursAt temporallyIntersects situationTopic)
    ((PPFn as) situationTopic)
    ((PPFn over) temporallyIntersects situationTopic)
    (AJP duration fe_depictive fe_domain duration frequencyOfEvent
     fe_interlocutor_1 fe_manner temporallyIntersects situationTopic)
    ((PPingFn about) situationTopic) ((PPFn to) situationTopic))
   (:GAP (CNI fe_interlocutor_1 fe_interlocutors)
    (INI fe_interlocutor_2 fe_interlocutors)
    (2nd fe_interlocutors by-Underspecified)
    (DNI fe_interlocutors situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 21 0)) ((1 22 0)) ((1 17 2)) ((1 15 0)) ((0 0 2)) ((1 16 1))
   ((1 20 8)) ((1 20 6)) ((1 19 1)) ((3 0 1)) ((1 8 0)) ((1 2 0)) ((1 16 0))
   ((1 1 0)) ((1 18 0)) ((0 0 0)) ((1 0 0)) ((1 5 0)) ((1 5 3) (1 17 2))
   ((1 11 0) (1 12 0)) ((0 0 2) (1 9 0)) ((1 20 7) (1 21 0))
   ((1 12 0) (1 20 7)) ((1 5 2) (1 17 2)) ((1 5 2) (1 10 0))
   ((1 16 1) (1 20 6)) ((1 17 2) (3 0 1)) ((1 12 0) (3 0 1)) ((1 15 0) (3 0 1))
   ((1 20 8) (3 0 1)) ((1 8 0) (1 15 0)) ((0 0 1) (1 15 0)) ((1 16 0) (1 17 2))
   ((1 8 0) (1 20 7)) ((1 4 0) (1 8 0)) ((1 5 2) (1 15 0)) ((1 5 2) (1 20 6))
   ((0 0 0) (1 15 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0)) ((1 17 2) (1 20 4))
   ((1 13 0) (1 20 0)) ((1 15 0) (1 20 0)) ((1 20 0) (3 0 1)) ((1 0 0) (3 0 1))
   ((1 0 0) (1 5 1)) ((1 15 0) (1 20 1)) ((1 16 0) (1 20 1))
   ((1 12 0) (1 20 0)) ((1 8 0) (1 20 0)) ((1 17 1) (1 17 2) (3 0 1))
   ((1 12 0) (1 20 7) (3 0 1)) ((1 16 1) (1 20 7) (3 0 1))
   ((0 0 1) (1 8 1) (1 16 0)) ((1 1 0) (1 15 0) (1 20 6))
   ((0 0 1) (1 1 0) (1 6 0)) ((1 1 1) (1 15 0) (3 0 0))
   ((0 0 0) (1 1 1) (1 15 0)) ((0 0 0) (1 1 0) (1 17 2))
   ((0 0 0) (1 1 0) (1 17 1)) ((0 0 0) (1 1 0) (1 20 6))
   ((1 17 2) (1 19 0) (1 20 4)) ((0 0 0) (1 1 0) (1 20 4))
   ((1 5 3) (1 8 0) (1 20 0)) ((1 5 3) (1 14 0) (1 20 1))
   ((1 12 0) (1 20 1) (1 20 6)) ((1 12 0) (1 20 1) (1 20 2))
   ((1 12 0) (1 20 1) (1 20 1)) ((0 0 1) (1 13 0) (1 20 0))
   ((1 12 0) (1 20 0) (1 20 5)) ((0 0 1) (1 9 0) (1 15 0) (1 20 6))
   ((0 0 0) (1 1 1) (1 3 0) (1 17 2)) ((0 0 0) (1 1 0) (1 7 0) (1 17 0))
   ((0 0 0) (1 1 0) (1 6 0) (1 16 1) (1 20 0))
   ((1 5 2) (1 8 0) (1 12 0) (1 17 1) (1 20 1)))))

(FNNounSemtrans (TheList) Discussion-TheWord
 (and (isa :NOUN ExchangeOfOpinion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disdain-TheWord (and (isa :NOUN Contempt))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfEvaluation)
    ((PPingFn for) objectOfEvaluation)
    ((PPFn of) subjectOfMentalSituation objectOfEvaluation)
    ((PPFn towards) objectOfEvaluation) ((PPFn in) eventAffectsBodyPart)
    (AJP subjectOfMentalSituation fe_degree fe_manner))
   (:GAP (CNI subjectOfMentalSituation) (DNI objectOfEvaluation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 5 2)) ((2 4 0)) ((4 0 0)) ((2 2 0)) ((0 0 0)) ((2 1 0)) ((2 0 0))
   ((2 3 0) (4 0 0)) ((2 0 0) (4 0 0)) ((0 0 0) (2 3 0)) ((0 0 0) (2 2 1))
   ((0 0 0) (2 0 0)) ((0 0 0) (1 0 0)) ((2 0 0) (2 5 0))
   ((0 0 0) (2 2 1) (2 5 2)) ((0 0 0) (2 0 0) (2 5 1)))))

(FNNounSemtrans (TheList) Disease-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N objectActedOn)
    (AJP causes-Underspecified symptomTypeOfAilmentType))
   (:GAP (DEN infects) (INI objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((1 1 1) (1 1 1)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Disease-TheWord (and (isa :NOUN DiseaseType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disembarkation-TheWord
 (and (isa :NOUN DisembarkingFromATransportationDevice))
 (frame FN_Disembarking) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dish-TheWord (and (isa :NOUN EatingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) mainConstituent) (AJP deviceUse)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 2 1) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Dish-TheWord (and (isa :NOUN ServingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) mainConstituent) (AJP deviceUse)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 2 1) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Dish-TheWord (and (isa :NOUN EatingVessel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dish-TheWord (and (isa :NOUN Food-ReadyToEat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dish-TheWord (and (isa :NOUN RadioDish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dish") Towel-TheWord (and (isa :NOUN DishTowel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dishonesty-TheWord (and (isa :NOUN Dishonesty))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dishrag-TheWord (and (isa :NOUN DishRag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dishwasher-TheWord (and (isa :NOUN Dishwasher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disinfectant-TheWord
 (and (isa :NOUN DisinfectantSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disk") Array-TheWord
 (and (isa :NOUN DiskArray-Computer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disk") Brake-TheWord
 (and (isa :NOUN DiskBrakeSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disk") Jockey-TheWord (and (isa :NOUN DiscJockey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disk-TheWord (and (isa :NOUN Disc)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dismantlement-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Destroying)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A objectActedOn) ((PPFn of) objectActedOn))
   (:GEN (Poss fe_destroyer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Dismissal-TheWord
 (and (isa :NOUN DischargeWithPrejudice)) (frame FN_Firing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) employees) ((PPFn by) employer)
    (Sub (InverseBinaryPredicateFn explains-Generic))
    ((PPFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn on) (InverseBinaryPredicateFn explains-Generic)) (AJP fe_manner)
    ((PPFn as) (InverseBinaryPredicateFn explains-Generic) job)
    ((PPFn from) employer job) ((PPFn in) temporallyIntersects))
   (:GEN (Poss employees))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((1 0 0)) ((0 0 0)) ((0 5 0) (0 7 0))
   ((0 8 0) (1 0 0)) ((0 0 0) (0 8 0)) ((0 7 1) (1 0 0)) ((0 6 1) (1 0 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 6 0)) ((0 7 0) (1 0 0)) ((0 1 0) (1 0 0))
   ((0 1 0) (0 6 1) (0 8 0) (1 0 0)))))

(FNNounSemtrans (TheList) Disorder-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (VPfin causes-Underspecified) (AJP fe_degree)
    ((PPFn of) symptomTypeOfAilmentType)
    (A actorPartsInvolved causes-Underspecified
     (InverseBinaryPredicateFn nameString) symptomTypeOfAilmentType))
   (:GAP (DEN infects) (INI objectActedOn) (DNI objectActedOn))))
 (groupPatterns
  (TheSet ((1 3 3)) ((0 0 0)) ((1 3 2)) ((1 1 0)) ((1 0 0)) ((1 3 1)) ((1 3 0))
   ((0 0 0) (1 3 3)) ((1 1 0) (1 3 3)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 0) (1 3 1)) ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Disparagement-TheWord
 (and (isa :NOUN Disapproving-CommunicationAct))
 (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation)
    ((PPingFn of) objectOfEvaluation) (AJP fe_manner))
   (:GAP (CNI communicatorOfInfo) (DNI objectOfEvaluation))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Dispenser-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    (AJP containedObject mainConstituent) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn against) fe_relative_location)
    (N containedObject mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 5 2)) ((0 4 0)) ((2 0 0)) ((0 5 1)) ((0 1 1)) ((0 0 0)) ((0 5 0))
   ((0 1 0)) ((0 3 0) (0 5 0)) ((0 2 0) (0 5 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Dispersal-TheWord (and (isa :NOUN ScatteringStuff))
 (frame FN_Dispersal) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dispersion-TheWord (and (isa :NOUN ScatteringStuff))
 (frame FN_Dispersal)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (A fe_individuals))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "display") Screen-TheWord
 (and (isa :NOUN VideoScreen)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Display-TheWord (and (isa :NOUN ComputerDisplay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Display-TheWord (and (isa :NOUN DisplayingSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disposable") Camera-TheWord
 (and (isa :NOUN DisposableCamera)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disposable" "flash") Bulb-TheWord
 (and (isa :NOUN PhotoFlashBulb)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "disposable") Package-TheWord
 (and (isa :NOUN DisposablePackage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disposal-TheWord (and (isa :NOUN GarbageDisposal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disposition-TheWord
 (and (isa :NOUN PersonTypeByPersonalityTrait)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Disputation-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dispute-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1 fe_arguers fe_issue))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn among) fe_arguers)
    ((PPFn amongst) fe_arguers) ((PPFn between) fe_arguers)
    ((PPFn within) fe_arguers) (AVP frequencyOfEvent) (AJP fe_arguers fe_issue)
    ((PPFn on) fe_issue) ((PPFn over) fe_issue) ((PPFn in) fe_issue)
    (N fe_issue) (NP fe_arguer2 fe_arguers fe_issue) ((PPFn about) fe_issue)
    (Sfin fe_arguers fe_issue))
   (:GAP (DNI fe_arguer1 fe_arguer2 fe_arguers)
    (INI fe_arguer2 fe_arguers fe_issue) (DEN fe_issue))
   (:GEN (Poss fe_arguer1))))
 (groupPatterns
  (TheSet ((1 13 1)) ((1 8 0)) ((1 7 0)) ((1 9 0)) ((1 12 0)) ((1 11 2))
   ((1 10 0)) ((1 6 1)) ((0 0 2)) ((1 13 0)) ((1 4 0)) ((1 3 0)) ((1 2 0))
   ((1 1 0)) ((0 0 1)) ((1 11 1)) ((1 0 0)) ((0 0 2) (1 11 2))
   ((1 6 1) (1 8 0)) ((1 3 0) (1 9 0)) ((0 0 2) (1 3 0)) ((1 3 0) (1 6 1))
   ((0 0 2) (1 11 1)) ((1 6 0) (1 8 0)) ((1 6 0) (1 7 0)) ((0 0 0) (1 5 0))
   ((1 6 1) (1 11 0) (3 0 0)))))

(FNNounSemtrans (TheList) Disrespect-TheWord (and (isa :NOUN Disrespect))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfEvaluation)
    ((PPFn to) objectOfEvaluation) ((PPFn of) objectOfEvaluation)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GAP (CNI subjectOfMentalSituation) (DNI objectOfEvaluation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 2 0) (3 0 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 3 0) (3 0 0)))))

(FNNounSemtrans (TheList) Dissatisfaction-TheWord
 (and (isa :NOUN Dissatisfaction)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dissembler-TheWord (and (isa :NOUN Liar))
 (frame FN_Prevarication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dissertation-TheWord (and (isa :NOUN PhDThesis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dissipation-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists inputsDestroyed :NOUN SomethingExisting))
 (frame FN_Ceasing_to_be) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dissolution-TheWord (and (isa :NOUN ScatteringStuff))
 (frame FN_Dispersal) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Distance-TheWord (and (isa :NOUN Distance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Distance-TheWord (and (isa :NOUN Distance-Absolute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Distance-TheWord (and (isa :NOUN Distance))
 (frame FN_Range)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP distanceTranslated) (N fe_event) (VPing fe_event))
   (:GAP (DEN distanceTranslated))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "distilled") Water-TheWord
 (and (isa :NOUN DistilledWater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "distress") Signal-TheWord
 (and (isa :NOUN DistressSignal-PCW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Distress-TheWord (and (isa :NOUN Distress))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPingFn on) situationConstituents) (A fe_degree)
    (NP fe_degree) ((PPFn to) objectActedOn) (N objectActedOn)
    ((PPFn in) objectActedOn eventAffectsBodyPart)
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn for) objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    (AJP fe_degree objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn of) objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn from) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn about) situationTopic) ((PPFn over) situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 10 0)) ((1 9 1)) ((1 8 2)) ((1 5 1)) ((2 0 0))
   ((1 3 0)) ((1 9 0)) ((1 5 0)) ((1 7 0)) ((0 0 0)) ((1 4 0)) ((1 8 1))
   ((1 8 0)) ((1 1 0)) ((1 12 0) (2 0 0)) ((1 11 0) (2 0 0)) ((1 7 1) (2 0 0))
   ((1 6 0) (2 0 0)) ((1 3 0) (1 8 0)) ((1 7 0) (1 8 0)) ((0 0 0) (1 8 0))
   ((1 2 0) (1 8 0)) ((1 0 0) (2 0 0)) ((0 0 0) (1 6 0) (1 8 0)))))

(FNNounSemtrans (TheList) Distribution-TheWord
 (and (isa :NOUN ScatteringStuff)) (frame FN_Dispersal)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "distributor") Cap-TheWord
 (and (isa :NOUN DistributorCap)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "district" "of") Columbia-TheWord
 (and (isa :NOUN DistrictOfColumbia)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) District-TheWord (and (isa :NOUN ControlledLand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) District-TheWord (and (isa :NOUN CountrySubsidiary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) District-TheWord
 (and (isa :NOUN District-State-Geopolitical)) (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:OBJECT (VPfin fe_relative_location))
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (NP fe_container_possessor eventLocale)
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString))
    (N parts fe_descriptor (InverseBinaryPredicateFn nameString))
    (A fe_descriptor (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 4 1)) ((1 3 1)) ((1 4 0)) ((1 1 0)) ((0 0 0) (1 1 1))
   ((1 0 0) (1 3 2)) ((1 0 0) (1 2 1)) ((1 4 0) (3 0 0)) ((1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Disturbance-TheWord
 (and (isa :NOUN Event) (not (isa :NOUN Equilibrium))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ditch-TheWord (and (isa :NOUN Ditch)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diuretic") Drug-TheWord (and (isa :NOUN Diuretic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diver-TheWord (and (isa :NOUN Diver)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diversion-TheWord
 (and (isa :NOUN RecreationalActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diversity-TheWord (and (isa :NOUN Diversity))
 (frame FN_Diversity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_degree)
    (AJP fe_degree fe_depictive hasPhysicalQuantity)
    ((PPFn among) groupMembers) ((PPFn of) hasPhysicalQuantity groupMembers)
    ((PPFn within) groupMembers) ((PPFn between) groupMembers)
    ((PPFn in) hasPhysicalQuantity groupMembers eventOccursAt))
   (:GAP (INI hasPhysicalQuantity))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 6 1)) ((0 2 0)) ((0 3 1) (0 6 2)) ((0 3 0) (0 6 1))
   ((0 5 0) (0 6 0)) ((0 1 2) (0 6 1)) ((0 1 1) (0 3 1)) ((0 0 0) (0 6 1))
   ((0 1 0) (0 4 0)) ((0 1 0) (0 3 1)) ((0 1 0) (0 6 1)) ((0 1 0) (0 2 0))
   ((0 1 0) (0 3 1) (0 6 2)))))

(FNNounSemtrans (TheList) Diverticulosis-TheWord
 (and (isa :NOUN AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Divorce-TheWord (and (isa :NOUN Divorce))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "divorce") Agreement-TheWord
 (and (isa :NOUN DivorceAgreement)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "divided" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Divided)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "diving") Fin-TheWord (and (isa :NOUN Fin-Artifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Diving-TheWord (and (isa :NOUN DivingSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord (and (isa :NOUN BiologicalDivision))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord
 (and (isa :NOUN Division-AdministrativeUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord
 (and (isa :NOUN Division-MilitaryEchelon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord
 (and (isa :NOUN PartitioningSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord
 (and (isa :NOUN Separation-Complete)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord
 (and (isa :NOUN DoingMultiplication)) (frame FN_Non-commutative_process)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Division-TheWord (and (isa :NOUN DoingAddition))
 (frame FN_Non-commutative_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Divorce-TheWord
 (and (isa :NOUN CreationOrDestructionEvent)) (frame FN_Forming_relationships)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partners))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_1) ((PPFn from) fe_partner_2))
   (:GAP (DNI fe_partner_2) (INI fe_partner_2))
   (:GEN (Poss fe_partner_1 fe_partners))))
 (groupPatterns
  (TheSet ((3 0 1)) ((0 0 1)) ((3 0 0)) ((1 0 0)) ((0 0 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Divorce-TheWord (and (isa :NOUN Divorce))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Divorcee-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:GAP (DEN fe_partner_1) (DNI fe_partner_1 fe_partner_2) (INI fe_partner_2))
   (:NOUN (NP fe_partner_1)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((3 0 0)))))

(FNNounSemtrans (TheList) Divulgence-TheWord
 (and (isa :NOUN RevealingTrueInformation)) (frame FN_Reveal_secret)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_information))
   (:GEN (Poss fe_information))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Dizziness-TheWord (and (isa :NOUN LevelOfDizziness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "djibouti") Franc-TheWord
 (and (isa :NOUN Franc-Djibouti)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dna-TheWord (and (isa :NOUN DNAStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doberman-TheWord (and (isa :NOUN DobermanPinscher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dobra-TheWord
 (and (isa :NOUN Dobra-SaoTomeAndPrincipe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "doctor" "of" "dental") Medicine-TheWord
 (and (isa :NOUN DentalDegree-DMD)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "doctor" "of" "dental") Surgery-TheWord
 (and (isa :NOUN DentalDegree-DDS)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "doctor" "of") Osteopathy-TheWord
 (and (isa :NOUN DoctorOfOsteopathyDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doctor-TheWord (and (isa :NOUN Doctor-Medical))
 (frame FN_Medical_interaction_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doctor-TheWord (and (isa :NOUN Doctor-Medical))
 (frame FN_Medical_professionals)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_professional))
   (:OBLIQUE-OBJECT (AJP fe_ethnicity comesFrom-Generic) ((PPFn in) employer)
    ((PPFn at) employer) (A fe_rank)
    (N employer employer activeIngredientsOfType))
   (:GAP (DEN fe_professional)) (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((1 4 2)) ((1 3 0)) ((1 1 0)) ((1 2 0)) ((1 0 1)) ((1 0 0)) ((1 4 0))
   ((0 0 0) (1 4 2)) ((1 1 0) (1 4 2)) ((1 2 0) (1 3 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Doctorate-TheWord (and (isa :NOUN DoctoralDegree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Document-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN fe_document) (INI fe_bearer fe_issuer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Document-TheWord (and (isa :NOUN OfficialDocument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Documentary-TheWord (and (isa :NOUN DocumentaryFilm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dodecagon-TheWord (and (isa :NOUN Dodecagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dodge-TheWord (and (isa :NOUN AvoidingSomething))
 (frame FN_Dodging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dodge-TheWord (and (isa :NOUN DodgingSomething))
 (frame FN_Dodging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doe-TheWord (and (isa :NOUN (FemaleFn Deer)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dog") Bed-TheWord (and (isa :NOUN DogBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dog") Food-TheWord (and (isa :NOUN DogFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dog-TheWord (and (isa :NOUN Dog)) (frame FN_Animals)
 (bindingTemplate (TheList (:GAP (DEN fe_animal)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dog") Toy-TheWord (and (isa :NOUN DogToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "doggy") Treat-TheWord (and (isa :NOUN DogTreat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dogwood-TheWord (and (isa :NOUN (WoodFn Dogwood)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dogwood-TheWord (and (isa :NOUN Dogwood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doing-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate (TheList (:SUBJECT (NP performedBy)) (:OBJECT (NP fe_act))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "doll") Accessory-TheWord
 (and (isa :NOUN DollAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doll-TheWord (and (isa :NOUN Doll-Toy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dollar") Mark-TheWord
 (and (isa :NOUN DollarSign-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dollar-TheWord (and (isa :NOUN OneDollarBill-US))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dollar-TheWord (and (isa :NOUN Dollar-UnitedStates))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dollhouse-TheWord (and (isa :NOUN DollHouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dolomite-TheWord (and (isa :NOUN Dolomite))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dolphin-TheWord (and (isa :NOUN Dolphin))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dolphinfish-TheWord (and (isa :NOUN Dolphin-Fish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Domain-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dome-TheWord (and (isa :NOUN Stadium-Indoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Ass-TheWord (and (isa :NOUN Donkey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Cat-TheWord (and (isa :NOUN DomesticCat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic" "cleaning") Stuff-TheWord
 (and (isa :NOUN DomesticCleaningStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Fowl-TheWord (and (isa :NOUN Poultry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Goat-TheWord
 (and (isa :NOUN Goat-Domestic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Policy-TheWord
 (and (isa :NOUN DomesticPolicy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Sheep-TheWord
 (and (isa :NOUN Sheep-Domestic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domestic") Violence-TheWord
 (and (isa :NOUN DomesticViolence)) (frame FN_Abusing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "domesticated" "animal") Food-TheWord
 (and (isa :NOUN DomesticatedAnimalFood)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Domination-TheWord
 (and (isa :NOUN ControllingASetOfAgents)) (frame FN_Being_in_control)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Domination-TheWord (and (isa :NOUN Dominating))
 (frame FN_Dominate_competitor) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Domination-TheWord
 (and (isa :NOUN DominatingSomething)) (frame FN_Dominate_situation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A doneBy)) (:GAP (INI fe_situation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "dominican") Peso-TheWord
 (and (isa :NOUN Peso-DominicanRepublic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dominion-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance authorizedToControl IntelligentAgent :NOUN))
 (frame FN_Authority) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dominoes-TheWord (and (isa :NOUN DominoesGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Donation-TheWord (and (isa :NOUN GivingSomething))
 (frame FN_Giving)
 (bindingTemplate
  (TheList (:SUBJECT (NP fromPossessor))
   (:OBLIQUE-OBJECT ((PPFn from) fromPossessor) (AJP fe_depictive fe_manner)
    ((PPFn to) to-Generic) ((PPFn for) fe_imposed_purpose to-Generic)
    (N fe_manner objectGiven) ((PPFn of) objectGiven)
    ((PPFn towards) objectGiven))
   (:GAP (INI fromPossessor) (DNI to-Generic objectGiven) (DEN objectGiven))
   (:GEN (Poss fromPossessor))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 1)) ((1 2 0)) ((1 0 0)) ((3 0 0)) ((1 1 0))
   ((1 3 1) (1 6 0)) ((1 4 0) (1 5 0)) ((1 1 1) (1 2 0)) ((1 3 0) (1 5 0))
   ((1 0 0) (1 4 1)) ((0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList "dong") Quai-TheWord
 (and (isa :NOUN DongQuai-TheProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dong-TheWord (and (isa :NOUN Dong-Vietnam))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Donkey-TheWord (and (isa :NOUN Donkey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Donnybrook-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Fighting_activity) (bindingTemplate (TheList (:GAP (DEN fe_fight))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Donor-TheWord (and (isa :NOUN GivingSomething))
 (frame FN_Giving)
 (bindingTemplate
  (TheList (:SUBJECT (NP fromPossessor))
   (:OBLIQUE-OBJECT (AJP fe_depictive fe_manner) (AVP fe_manner)
    ((PPFn for) to-Generic) ((PPFn to) to-Generic) (VPto to-Generic)
    ((PPFn of) objectGiven) (N objectGiven)
    ((PPFn since) temporallyIntersects))
   (:GAP (DEN fromPossessor) (DNI to-Generic objectGiven)
    (INI fromPossessor objectGiven))
   (:GEN (Poss to-Generic))))
 (groupPatterns
  (TheSet ((1 0 1)) ((0 0 0)) ((1 0 0)) ((0 0 0) (1 6 0)) ((1 3 0) (1 5 0))
   ((0 0 0) (1 4 0)) ((1 0 1) (1 6 0)) ((1 0 1) (1 2 0))
   ((1 0 1) (1 3 0) (1 5 0)) ((0 0 0) (1 3 0) (1 6 0) (1 7 0))
   ((0 0 0) (1 1 0) (1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Doughnut-TheWord (and (isa :NOUN Doughnut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "door") Lock-TheWord (and (isa :NOUN DoorLock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Door-TheWord (and (isa :NOUN DoorInABuilding))
 (frame FN_Connecting_architecture)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (VPed fe_descriptor)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N mainConstituent (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 1)) ((0 1 0)) ((0 0 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Door-TheWord (and (isa :NOUN AutoSideDoor))
 (frame FN_Vehicle_subpart)
 (bindingTemplate
  (TheList (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doorbell-TheWord (and (isa :NOUN Doorbell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doorkeeper-TheWord (and (isa :NOUN DoorMan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doorknob-TheWord (and (isa :NOUN DoorKnob))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doorsill-TheWord (and (isa :NOUN DoorStep))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doorsill-TheWord (and (isa :NOUN Threshold))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doorway-TheWord (and (isa :NOUN Doorway))
 (frame FN_Connecting_architecture) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dope-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dope-TheWord (and (isa :NOUN Dopexamine))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "dorm") Room-TheWord
 (and (isa :NOUN RoomInAConstruction)
      (relationExistsInstance hasRooms Dormitory :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dormitory-TheWord (and (isa :NOUN Dormitory))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dorsal") Fin-TheWord (and (isa :NOUN DorsalFin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dose-TheWord (and (isa :NOUN DoseOfDrug))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject) (A fe_q_prop))
   (:GAP (DNI massOfObject) (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "dot" "matrix" "computer") Printer-TheWord
 (and (isa :NOUN ComputerPrinter-DotMatrix)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "double") Agent-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doubleAgentInOrg Organization :NOUN))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "double") Bass-TheWord (and (isa :NOUN BassViolin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "double") Bassoon-TheWord
 (and (isa :NOUN Contrabassoon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "double") Quotes-TheWord
 (and (isa :NOUN QuotationMark-Double)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "double" "reed") Woodwind-TheWord
 (and (isa :NOUN DoubleReedWoodwindInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "double" "sided" "adhesive") Tape-TheWord
 (and (isa :NOUN DualSidedAdhesiveTape)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doublet-TheWord (and (isa :NOUN Doublet))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "doubling") Cube-TheWord
 (and (isa :NOUN DoublingCube)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doubt-TheWord (and (isa :NOUN Doubt))
 (frame FN_Certainty)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation topicOfIndividual))
   (:OBJECT (Sfin topicOfIndividual))
   (:OBLIQUE-OBJECT ((PPFn as) topicOfIndividual)
    ((PPFn of) subjectOfMentalSituation topicOfIndividual)
    ((PPingFn about) topicOfIndividual) ((PPingFn over) topicOfIndividual)
    (Sfin topicOfIndividual) (PPinterrog topicOfIndividual)
    (AJP fe_degree fe_manner) ((PPFn about) topicOfIndividual situationTopic)
    ((PPFn concerning) topicOfIndividual situationTopic)
    ((PPFn over) topicOfIndividual situationTopic))
   (:GAP (INI subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 9 1)) ((2 8 1)) ((2 7 1)) ((2 4 0)) ((2 3 0)) ((2 2 0))
   ((2 1 1)) ((2 8 0)) ((2 0 0)) ((2 7 0)) ((0 0 1)) ((4 0 0)) ((0 0 0))
   ((2 7 1) (4 0 0)) ((0 0 0) (2 7 1)) ((2 4 0) (2 6 0)) ((2 2 0) (4 0 0))
   ((2 8 0) (4 0 0)) ((2 7 0) (4 0 0)) ((2 1 0) (2 4 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (2 4 0)) ((0 0 0) (2 5 0)) ((0 0 0) (2 9 0)) ((0 0 0) (2 1 1))
   ((0 0 0) (2 0 0)) ((2 6 1) (2 7 1) (4 0 0)))))

(FNNounSemtrans (TheList) Dough-TheWord (and (isa :NOUN Dough)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dough-TheWord (and (isa :NOUN Currency))
 (frame FN_Money) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Doughnut-TheWord (and (isa :NOUN Doughnut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dove-TheWord (and (isa :NOUN Dove))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "down" "feather") Bed-TheWord
 (and (isa :NOUN FeatherBedCover)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Down-TheWord (and (isa :NOUN DownFeatherStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Downdraft-TheWord
 (and (isa :NOUN FluidFlow-Translation-VerticalDownward)
      (relationInstanceExists objectTranslating :NOUN GaseousTangibleThing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Downer-TheWord (and (isa :NOUN Barbiturate))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "downhill") Skiing-TheWord
 (and (isa :NOUN DownhillSkiing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Downing-TheWord (and (isa :NOUN Downing))
 (frame FN_Downing)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (N objectActedOn eventOccursAt)
    ((PPFn in) eventOccursAt temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 1 0)) ((1 0 0) (1 2 1)) ((1 0 0) (1 2 0))
   ((1 1 0) (1 1 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Downloading-TheWord
 (and (isa :NOUN DownloadingAFile)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Downpour-TheWord (and (isa :NOUN RainStormAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Downpour-TheWord
 (and (isa :NOUN Downpour-RainProcess)) (frame FN_Precipitation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn at) eventOccursAt)
    ((PPFn of) fe_precipitation))
   (:GAP (DEN fe_precipitation)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Downtown-TheWord (and (isa :NOUN Downtown))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:GAP (DEN eventLocale)) (:NOUN (N fe_container_possessor))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Doyen-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) processTypeForAccomplishmentType fe_governed)
    (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns
  (TheSet ((1 0 1)) ((0 0 0) (1 0 1)) ((1 0 1) (1 1 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Doyenne-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn at) fe_descriptor)
    ((PPFn of) fe_governed (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (N (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (AVP temporallyIntersects) ((PPFn in) fe_governed temporallyIntersects))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:NOUN (N leadersOfMovement)) (:GEN (Poss fe_governed))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0) (1 4 1)) ((4 0 0) (5 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0) (4 0 0)) ((0 0 0) (1 1 0) (1 2 0))
   ((0 0 0) (1 1 1) (1 4 0)) ((0 0 0) (1 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Doze-TheWord (and (isa :NOUN Snoozing))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt)
    ((PPFn through) temporallyIntersects))
   (:GAP (CNI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0)) ((0 0 0) (1 1 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Dozens-TheWord (and (isa :NOUN Dozens-Quant))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) (AJP fe_q_prop))
   (:GAP (INI fe_individuals) (DEN fe_individuals fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Drachma-TheWord (and (isa :NOUN Drachma-Greece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Draft-TheWord
 (and (isa :NOUN DraftingSomething-WritingAComposition))
 (frame FN_Version_sequence)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) objectOfStateChange))
   (:GAP (DEN objectOfStateChange))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Draftsman-TheWord (and (isa :NOUN Draftsman-Artist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drag-TheWord (and (isa :NOUN InhalingOf-Smoke))
 (frame FN_Ingest_substance)
 (bindingTemplate
  (TheList (:SUBJECT (NP bodilyDoer))
   (:OBLIQUE-OBJECT (AJP deviceUsed duration fe_manner) ((PPFn on) stuffUsed)
    ((PPFn at) stuffUsed) ((PPFn of) stuffUsed))
   (:GAP (DNI stuffUsed))))
 (groupPatterns
  (TheSet ((1 0 2)) ((1 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 0 2)) ((0 0 0) (1 0 1)) ((0 0 0) (1 0 2) (1 1 0))
   ((0 0 0) (1 0 2) (1 2 0)) ((0 0 0) (1 0 1) (1 1 0)))))

(FNNounSemtrans (TheList) Dragon-TheWord (and (isa :NOUN Dragon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dragonfly-TheWord (and (isa :NOUN Dragonfly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dragster-TheWord (and (isa :NOUN Dragster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drag") Race-TheWord (and (isa :NOUN DragRacing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drag") Strip-TheWord (and (isa :NOUN DragStrip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drain") Board-TheWord (and (isa :NOUN DrainBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drain") Snake-TheWord (and (isa :NOUN DrainSnake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drain-TheWord (and (isa :NOUN DrainOfBasin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drainpipe-TheWord (and (isa :NOUN GutterDownSpout))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drama-TheWord (and (isa :NOUN DramaSystem))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_genre startingDate) ((PPFn of) fe_title))
   (:GAP (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW startingDate))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 1 0)) ((2 0 1)) ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Drama-TheWord (and (isa :NOUN DramaticPerformance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dramatist-TheWord (and (isa :NOUN Playwright))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drapery") Hook-TheWord (and (isa :NOUN DraperyHook))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dravidian-TheWord
 (and (isa :NOUN EthnicGroupOfDravidians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Draw-TheWord
 (and (isa :NOUN (CompletingFn Competition))) (frame FN_Finish_competition)
 (bindingTemplate (TheList (:GAP (INI fe_competition adversaryInConflict))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Draw-TheWord (and (isa :NOUN ConflictOutcome-Draw))
 (frame FN_Finish_competition)
 (bindingTemplate (TheList (:GAP (INI fe_competition adversaryInConflict))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Draw-TheWord (and (isa :NOUN Draw-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Draw-TheWord (and (isa :NOUN DrawPoker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Draw-TheWord (and (isa :NOUN TieGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drawbridge-TheWord (and (isa :NOUN MovableBridge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drawer") Organizer-TheWord
 (and (isa :NOUN DrawerOrganizer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drawer-TheWord (and (isa :NOUN Drawer))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drawers-TheWord (and (isa :NOUN MensUnderpants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drawing-TheWord (and (isa :NOUN Drawing-Depiction))
 (frame FN_Physical_artworks) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dread-TheWord (and (isa :NOUN Dread)) (frame FN_Fear)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dreadnought-TheWord (and (isa :NOUN Dreadnought))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dreamer-TheWord
 (and (isa :NOUN Person) (hasPersonalQuantity :NOUN (HighAmountFn Idealism)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dress") Shirt-TheWord (and (isa :NOUN DressShirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dress-TheWord (and (isa :NOUN Dress))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_descriptor mainConstituent)
    ((PPFn in) fe_descriptor mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle)
    ((PPFn with) fe_descriptor clothingStyle subRegions)
    (N fe_descriptor mainConstituent clothingStyle deviceUse)
    ((PPFn for) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss fe_descriptor wearer))))
 (groupPatterns
  (TheSet ((0 4 3)) ((0 4 2)) ((0 2 2)) ((0 4 1)) ((0 2 0)) ((0 4 3) (2 0 1))
   ((0 4 3) (0 5 0)) ((0 4 1) (2 0 1)) ((0 2 0) (2 0 1)) ((0 4 3) (2 0 0))
   ((0 2 0) (0 2 2)) ((0 0 0) (0 4 1)) ((0 0 0) (0 2 1)) ((0 1 1) (0 4 0))
   ((0 0 1) (0 2 0)) ((0 2 0) (0 4 1)) ((0 2 0) (0 2 1)) ((0 2 0) (0 3 0))
   ((0 2 0) (0 2 0)) ((0 0 1) (0 3 1) (0 4 2)) ((0 2 0) (0 2 2) (2 0 1))
   ((0 2 0) (0 4 1) (0 4 3)) ((0 1 0) (0 2 2) (0 3 0))
   ((0 2 0) (0 2 0) (0 2 2)) ((0 2 0) (0 3 0) (0 4 1))
   ((0 2 0) (0 2 0) (0 4 1)) ((0 2 0) (0 2 0) (0 2 2) (0 4 2))
   ((0 2 0) (0 2 0) (0 3 2) (0 4 1) (0 4 2)))))

(FNNounSemtrans (TheList) Dressage-TheWord (and (isa :NOUN EquestrianDressage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dresser") Drawer-TheWord
 (and (isa :NOUN DresserDrawer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dresser-TheWord
 (and (isa :NOUN Dresser-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dresser-TheWord
 (and (isa :NOUN Dresser-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dressing") Room-TheWord
 (and (isa :NOUN DressingRoom)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dressing") Room-TheWord
 (and (isa :NOUN DressingRoom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dressing-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dressing-TheWord (and (isa :NOUN SaladDressing))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType) (A activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Dressmaker-TheWord
 (and (isa :NOUN Dressmaker-Professional)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dried") Product-TheWord
 (and (isa :NOUN DriedProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drill") Bit-TheWord (and (isa :NOUN DrillBit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drill") Press-TheWord (and (isa :NOUN DrillPress))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drill") Sergeant-TheWord
 (and (isa :NOUN InfantryTrainer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drill-TheWord (and (isa :NOUN Drill)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drill-TheWord (and (isa :NOUN Practicing-Preparing))
 (frame FN_Practice)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) purposeOfEvent) (VPto purposeOfEvent))
   (:GAP (DEN fe_occasion))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Drink-TheWord (and (isa :NOUN Drink)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drinking") Bottle-TheWord
 (and (isa :NOUN DrinkingBottle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drinking") Can-TheWord (and (isa :NOUN DrinkingCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drinking") Fountain-TheWord
 (and (isa :NOUN DrinkingFountain)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drinking") Water-TheWord
 (and (isa :NOUN (LiquidFn Water-Ingestible))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drive-in") Theater-TheWord
 (and (isa :NOUN DriveInTheater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drive-By-TheWord (and (isa :NOUN DriveByShooting))
 (frame FN_Attack) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drive-by") Shooting-TheWord
 (and (isa :NOUN DriveByShooting)) (frame FN_Attack)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drive-In-TheWord (and (isa :NOUN DriveInTheater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drive-TheWord
 (and (isa :NOUN (TransportViaFn RoadVehicle))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drive-TheWord
 (and (isa :NOUN Drive-PhysiologicalCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drive-TheWord (and (isa :NOUN DrivingAGolfBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drive") Train-TheWord
 (and (isa :NOUN AutomobileDriveTrain)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "driver" "s") License-TheWord
 (and (isa :NOUN DriversLicense-LicenseAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Driver-TheWord (and (isa :NOUN DeviceDriverProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Driver-TheWord (and (isa :NOUN Driver-GolfClub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Driver-TheWord
 (and (isa :NOUN Driver-TransportationProfessional)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Driver-TheWord
 (and (isa :NOUN Driver-TransportationProfessional))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drivers") License-TheWord
 (and (isa :NOUN DriversLicense-Document)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Driveway-TheWord (and (isa :NOUN Driveway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    (AJP fe_characteristic fe_frequency_of_use mainConstituent)
    ((PPFn of) mainConstituent) ((PPFn towards) trajectory-Complete)
    (N mainConstituent fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 1)) ((0 3 0)) ((0 2 2)) ((0 1 0)) ((0 0 0)) ((0 2 1))
   ((0 2 0)) ((0 2 0) (0 5 0)) ((0 2 0) (0 4 0) (0 5 0)))))

(FNNounSemtrans (TheList) Drizzle-TheWord (and (isa :NOUN Drizzle-RainProcess))
 (frame FN_Precipitation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N eventOccursAt) (NP eventOccursAt)
    ((PPFn in) eventOccursAt) (AJP fe_manner fe_quantity temperatureOfObject)
    ((PPFn on) temporallyIntersects))
   (:GAP (DEN fe_precipitation))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 0)) ((0 3 0)) ((0 3 1) (0 4 0)) ((0 1 0) (0 3 0))
   ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Drone-TheWord (and (isa :NOUN UnmannedAircraft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drone-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner)
    ((PPFn of) fe_component_sound fe_noisy_event emitter))))
 (groupPatterns
  (TheSet ((0 1 2)) ((0 1 1)) ((0 0 0)) ((0 0 0) (0 1 2)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "drop" "in") Stove-TheWord
 (and (isa :NOUN CookingRange-DropIn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drop-TheWord
 (and (isa :NOUN (ParticleFn LiquidTangibleThing))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Droplet-TheWord
 (and (isa :NOUN (ParticleFn LiquidTangibleThing))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drought-TheWord (and (isa :NOUN Drought))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drowse-TheWord (and (isa :NOUN Snoozing))
 (frame FN_Sleep) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drowsiness-TheWord (and (isa :NOUN Sleepy))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) (N temporallyIntersects))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Drudgery-TheWord (and (isa :NOUN Tedium))
 (frame FN_Emotions_of_mental_activity)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) ((PPFn to) objectActedOn)
    (AJP fe_degree fe_parameter)
    ((PPFn of) (InverseBinaryPredicateFn explaines-Generic))
    (N (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn in) (InverseBinaryPredicateFn explaines-Generic)))
   (:GAP (DNI objectActedOn)
    (INI objectActedOn (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns
  (TheSet ((1 5 0)) ((0 0 0)) ((1 3 0)) ((1 4 0)) ((0 0 0) (1 1 0))
   ((1 2 1) (1 3 0)) ((0 0 0) (1 0 0) (1 2 0) (1 2 1)))))

(FNNounSemtrans (TheList "drug") Addiction-TheWord
 (and (isa :NOUN (AddictionFn IllegalDrug))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drug") Cartel-TheWord (and (isa :NOUN DrugCartel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drug") Lord-TheWord (and (isa :NOUN DrugTrafficker))
 (frame FN_Leadership)
 (bindingTemplate (TheList (:GAP (INI fe_governed) (DEN leadersOfMovement))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drug") Paraphernalia-TheWord
 (and (isa :NOUN DrugParaphernalia)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drug-TheWord (and (isa :NOUN DrugSubstance))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (NP fe_intoxicant))
   (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "drug") Trafficking-TheWord
 (and (isa :NOUN DrugTrafficking)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drugstore-TheWord (and (isa :NOUN DrugStore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drum") Brake-TheWord
 (and (isa :NOUN DrumBrakeSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "drum") Set-TheWord (and (isa :NOUN DrumSet))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drum-TheWord (and (isa :NOUN Drum-Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP containedObject) ((PPFn of) containedObject)
    (N containedObject mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 2)) ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList) Drum-TheWord (and (isa :NOUN Drum-Container))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drum-TheWord (and (isa :NOUN DrumInstrument))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drummer-TheWord (and (isa :NOUN Drummer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drumstick-TheWord (and (isa :NOUN Drumstick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drunk-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance physiologicalConditionAffects
       (AddictionFn Ethanol) :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dry" "dog") Food-TheWord (and (isa :NOUN DryDogFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dry") Gas-TheWord (and (isa :NOUN DryGas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dry" "pet") Food-TheWord (and (isa :NOUN DryPetFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dry") Season-TheWord (and (isa :NOUN DrySeason))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dryer") Sheet-TheWord (and (isa :NOUN DryerSheet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dryer-TheWord (and (isa :NOUN ClothesDryer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Drywall-TheWord (and (isa :NOUN Sheetrock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dual" "fuel") Range-TheWord
 (and (isa :NOUN CookingRange-DualFuel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dual" "voltage" "device" "or" "power") Supply-TheWord
 (and (isa :NOUN DeviceOrPowerSupplyIsDualVoltage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dual" "voltage") Device-TheWord
 (and (isa :NOUN DualVoltage-Device)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dubliner-TheWord
 (and (isa :NOUN (ResidentFn CityOfDublinIreland))) (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duchess-TheWord (and (isa :NOUN Duchess))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:NOUN (N leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Duchy-TheWord (and (isa :NOUN Duchy))
 (frame FN_Political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duck-TheWord (and (isa :NOUN Duck))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duck-TheWord (and (isa :NOUN Duck-Meat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ducks" "and") Drakes-TheWord
 (and (isa :NOUN DucksAndDrakes)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "duct") Tape-TheWord (and (isa :NOUN DuctTape))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duct-TheWord (and (isa :NOUN AnatomicalVessel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ductility-TheWord (and (isa :NOUN Ductility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dude-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dude-TheWord (and (isa :NOUN MaleHuman))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (AJP age fe_ethnicity fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((1 0 2)) ((1 0 1)) ((0 0 0) (1 0 2)) ((1 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Duel-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn on) fe_issue) ((PPFn over) fe_issue)
    (VPing by-Underspecified) ((PPFn at) eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn for) purposeOfEvent)
    ((PPFn with) by-Underspecified fe_side_2) ((PPFn against) fe_side_2)
    ((PPFn between) fe_sides) ((PPFn of) fe_sides)
    (AJP fe_manner by-Underspecified eventOccursAt eventOutcomes
     temporallyIntersects))
   (:GAP (DNI fe_side_1 fe_side_2) (INI fe_side_2 fe_sides))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 0)) ((1 7 0)) ((1 5 0)) ((1 6 0)) ((1 10 0))
   ((0 0 0) (1 6 1)) ((0 0 0) (1 4 0)) ((0 0 1) (1 2 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 6 1) (1 10 1)) ((0 0 0) (1 6 1) (1 10 0))
   ((0 0 0) (1 1 0) (1 6 1)) ((0 0 1) (1 0 0) (1 10 3))
   ((0 0 0) (1 3 0) (1 6 1) (1 10 1) (1 10 2) (1 10 4)))))

(FNNounSemtrans (TheList) Duet-TheWord (and (isa :NOUN Duet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "duffel") Bag-TheWord (and (isa :NOUN DuffelBag))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "duffel") Bag-TheWord (and (isa :NOUN DuffelBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duffel-TheWord (and (isa :NOUN DuffelBag))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duke-TheWord (and (isa :NOUN Duke))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dummy") Whist-TheWord (and (isa :NOUN DummyWhist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dump-TheWord (and (isa :NOUN Dump)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dump") Truck-TheWord (and (isa :NOUN DumpTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dumping-TheWord
 (and (isa :NOUN DumpingGoodsAbroad-SalesActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dune-TheWord (and (isa :NOUN Dune))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) fe_container_possessor)
    ((PPFn of) parts fe_container_possessor) ((PPFn in) fe_relative_location)
    ((PPFn above) fe_relative_location) ((PPFn on) fe_relative_location)
    (AJP parts activeIngredientsOfType)
    (N fe_formational_cause activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 5 1)) ((0 4 0)) ((0 2 0)) ((0 3 0)) ((0 6 0)) ((0 1 1))
   ((0 1 0)) ((0 5 0)) ((0 2 0) (0 6 0)) ((0 0 0) (0 5 1)) ((0 0 0) (0 6 0))
   ((0 1 1) (0 2 0) (0 6 0)))))

(FNNounSemtrans (TheList) Duodenum-TheWord (and (isa :NOUN Duodenum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duplex-TheWord (and (isa :NOUN Duplex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duplicate-TheWord (and (isa :NOUN IBTCopying))
 (frame FN_Duplication)
 (bindingTemplate
  (TheList (:SUBJECT (NP copyProduced))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) itemCopied))
   (:GAP (CNI performedBy) (DNI itemCopied))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Duplication-TheWord (and (isa :NOUN IBTCopying))
 (frame FN_Duplication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn from) performedBy)
    ((PPFn during) duration)
    ((PPFn due) (InverseBinaryPredicateFn explains-Generic)) (A fe_manner)
    ((PPFn of) itemCopied) (N itemCopied eventOccursAt)
    ((PPFn in) itemCopied eventOccursAt)
    (AJP fe_fidelity fe_manner temporallyIntersects))
   (:GAP (DEN copyProduced) (INI performedBy itemCopied))
   (:GEN (Poss itemCopied))))
 (groupPatterns
  (TheSet ((0 8 2)) ((0 5 0)) ((0 7 0)) ((0 6 0)) ((0 4 0)) ((0 8 0)) ((0 3 0))
   ((0 2 0)) ((0 1 0)) ((0 5 0) (0 7 1)) ((0 5 0) (0 6 1)) ((0 4 0) (0 5 0))
   ((0 0 0) (2 0 0)) ((0 6 0) (0 8 0) (0 8 1)))))

(FNNounSemtrans (TheList "dura") Mater-TheWord (and (isa :NOUN DuraMater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Durability-TheWord (and (isa :NOUN Durability))
 (frame FN_Level_of_force_resistance)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_resisting_entity))
   (:OBLIQUE-OBJECT ((PPFn than) fe_degree) (AJP fe_degree fe_descriptor)
    (A fe_degree fe_descriptor fe_domain) ((PPFn for) fe_opposing_force)
    ((PPFn of) fe_resisting_entity))
   (:GAP (INI fe_opposing_force) (DNI fe_resisting_entity))
   (:GEN (Poss fe_resisting_entity))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((1 2 2)) ((1 1 1)) ((0 0 0) (1 2 1))
   ((1 1 1) (1 2 2)) ((0 0 0) (1 2 0) (1 3 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "durable") Good-TheWord (and (isa :NOUN DurableGood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Durables-TheWord (and (isa :NOUN DurableGood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duration-TheWord
 (and (isa :NOUN Time-Quantity)
      (relationExistsInstance duration TemporalThing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dusk-TheWord (and (isa :NOUN Dusk))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "dust") Bag-TheWord (and (isa :NOUN VacuumDustBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dust") Cloud-TheWord (and (isa :NOUN DustCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dust") Devil-TheWord (and (isa :NOUN DustDevil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dust-TheWord (and (isa :NOUN (MobFn DustParticle)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dust") Up-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dust-Up-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn over) fe_issue)) (:GAP (INI fe_sides))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Dustbuster-TheWord
 (and (isa :NOUN VacuumCleaner-Compact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duster-TheWord (and (isa :NOUN Duster-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dustup-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dutch-TheWord (and (isa :NOUN DutchLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duty-TheWord (and (isa :NOUN Obligation))
 (frame FN_Being_obligated)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn under) fe_condition) (AJP obligationsCreated)
    (VPto obligationsCreated) ((PPFn of) eventOccursAt doneBy))
   (:GAP (DEN obligationsCreated) (DNI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 1)) ((0 3 0)) ((0 1 0)) ((0 2 0) (2 0 0))
   ((0 2 0) (0 3 1)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Duty-TheWord (and (isa :NOUN Tariff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "duvet") Cover-TheWord (and (isa :NOUN DuvetCover))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Duvet-TheWord (and (isa :NOUN Duvet-BedCover))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "dvd") Disc-TheWord (and (isa :NOUN DVD-Disk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dweller-TheWord
 (and (isa :NOUN Animal)
      (relationExistsInstance residents-Role ResidingSomewhere :NOUN))
 (frame FN_Residence)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP residesInDwelling) ((PPFn in) residesInDwelling)
    ((PPFn of) residesInDwelling) (N residesInDwelling) (NP residesInDwelling)
    ((PPFn along) residesInDwelling) ((PPFn on) residesInDwelling))
   (:GAP (DEN residents-Role))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 1 0)) ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 0 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Dwelling-TheWord (and (isa :NOUN HumanResidence))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dynamite-TheWord (and (isa :NOUN Dynamite))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dynasty-TheWord (and (isa :NOUN DynasticFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dyne-TheWord (and (isa :NOUN Dyne)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dysmenorrhoea-TheWord
 (and (isa :NOUN AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Dysprosium-TheWord (and (isa :NOUN Dysprosium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "e" "book") Reader-TheWord
 (and (isa :NOUN EBookReader)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) E-Mail-TheWord (and (isa :NOUN EmailMessage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) E-Mail-TheWord (and (isa :NOUN EmailAddress))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eagerness-TheWord (and (isa :NOUN Eagerness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eagle-TheWord (and (isa :NOUN Eagle))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ear") Doctor-TheWord (and (isa :NOUN Otologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ear") Plug-TheWord (and (isa :NOUN EarPlug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ear" "protection") Gear-TheWord
 (and (isa :NOUN EarProtectionGear)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ear-TheWord (and (isa :NOUN Ear))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Earbuds-TheWord (and (isa :NOUN Earbuds))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eardrum-TheWord (and (isa :NOUN Eardrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earl-TheWord (and (isa :NOUN Earl)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earlobe-TheWord (and (isa :NOUN Earlobe))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP orientation)) (:GAP (DEN actorPartsInvolved))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Earnestness-TheWord (and (isa :NOUN Honesty))
 (frame FN_Candidness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earnings-TheWord (and (isa :NOUN EarningsFigure))
 (frame FN_Earnings_and_losses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) basicPrice-Event) (NP temporallyIntersects))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Earphone-TheWord (and (isa :NOUN Earphone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earphone-TheWord (and (isa :NOUN Headphones))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earring-TheWord (and (isa :NOUN Earring-Jewelry))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent clothingStyle)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 0 1) (2 0 0)) ((0 1 1) (2 0 0))
   ((0 0 1) (0 0 2)) ((0 0 2) (0 1 1)) ((0 1 1) (0 1 2)) ((0 1 0) (2 0 0))
   ((0 0 2) (0 1 0)) ((0 0 1) (0 1 0) (2 0 0)) ((0 0 0) (0 0 2) (0 1 1)))))

(FNNounSemtrans (TheList) Earshot-TheWord
 (and (isa :NOUN WithinAudibleDistance)) (frame FN_Range)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "earth" "moving") Scoop-TheWord
 (and (isa :NOUN EarthMovingScoop)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earth-TheWord (and (isa :NOUN Dirt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Earthquake-TheWord (and (isa :NOUN Earthquake))
 (frame FN_Moving_in_place)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N eventOccursAt)) (:GAP (INI doneBy))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "east") German-TheWord
 (and (isa :NOUN EastGermanPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) East-TheWord (and (isa :NOUN East-Generally))
 (frame FN_Direction)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) alongObject))
   (:GAP (DNI alongObject) (DEN trajectory-Complete))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) East-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "east") Wind-TheWord (and (isa :NOUN EastWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "easter") Card-TheWord (and (isa :NOUN EasterCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "easter") Egg-TheWord (and (isa :NOUN EasterEgg))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Easter-TheWord (and (isa :NOUN EasterHoliday))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ebola-TheWord (and (isa :NOUN EbolaVirus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ebola-TheWord
 (and (isa :NOUN EbolaHemorrhagicFeverInfection)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ebony-TheWord (and (isa :NOUN (WoodFn EbonyTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ebony-TheWord (and (isa :NOUN EbonyTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Echinocactus-TheWord (and (isa :NOUN BarrelCactus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Echo-TheWord (and (isa :NOUN Echo)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Echolocation-TheWord
 (and (isa :NOUN EcholocationPerception)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eclipse-TheWord
 (and (isa :NOUN Eclipse-CelestialEvent)) (frame FN_Eclipse)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_degree objectHidden) ((PPFn of) objectHidden))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Ecologist-TheWord (and (isa :NOUN Ecologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ecology-TheWord (and (isa :NOUN Ecology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "economic" "and" "social" "council")
 Commission-TheWord (and (isa :NOUN EconomicAndSocialCouncilCommission))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "economic") Theory-TheWord
 (and (isa :NOUN EconomicTheory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Economics-TheWord (and (isa :NOUN Economics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Economist-TheWord (and (isa :NOUN Economist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Economy-TheWord (and (isa :NOUN EconomicSystem))
 (frame FN_Economy)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_descriptor fe_domain fe_market_type fe_political_region)
    ((PPFn of) fe_political_region) (A fe_domain fe_political_region)
    (N fe_economy fe_political_region))
   (:GAP (DNI fe_political_region) (INI fe_political_region)
    (DEN fe_economy fe_political_region))
   (:NOUN (N fe_domain fe_political_region))
   (:GEN (Poss fe_political_region))))
 (groupPatterns
  (TheSet ((0 3 0)) ((3 0 0)) ((0 1 0)) ((0 3 1)) ((0 0 3)) ((0 2 1)) ((0 0 2))
   ((2 0 0)) ((0 0 1)) ((0 2 0)) ((0 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (2 0 1)) ((0 0 0) (0 0 3)) ((0 0 0) (0 0 2)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Economy-TheWord (and (isa :NOUN Economizing))
 (frame FN_Frugality)
 (bindingTemplate (TheList (:GAP (INI fe_resource fe_resource_controller))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Economy-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate (TheList (:GAP (INI fe_resource fe_resource_controller))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ecosystem-TheWord (and (isa :NOUN Ecosystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ecoterrorism-TheWord (and (isa :NOUN TerroristAct))
 (frame FN_Terrorism) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ecoterrorist-TheWord (and (isa :NOUN TerroristAgent))
 (frame FN_Terrorism) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ecstasy-TheWord (and (isa :NOUN Methamphetamine))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eczema-TheWord (and (isa :NOUN Rash-Ailment))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edam-TheWord (and (isa :NOUN Edam-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edema-TheWord (and (isa :NOUN Edema-Condition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edentata-TheWord (and (isa :NOUN Edentata))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "edge") Jointer-TheWord (and (isa :NOUN Jointer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edge-TheWord
 (and (isa :NOUN Boundary-Underspecified)) (frame FN_Boundary)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edge-TheWord
 (and (isa :NOUN StripNearTheBoundaryOfAnObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edge-TheWord (and (isa :NOUN EdgeOnObject))
 (frame FN_Part_edge)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP orientation) (AJP fe_part_prop)
    (A orientation fe_part_prop) ((PPFn of) (InverseBinaryPredicateFn parts))
    (N orientation (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 4 1)) ((0 1 0)) ((0 0 0)) ((0 2 0))
   ((0 1 0) (0 3 0)) ((0 2 1) (2 0 0)) ((0 2 1) (0 3 0)) ((0 3 0) (0 4 0))
   ((0 0 0) (0 3 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 3 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList "edible") Fat-TheWord (and (isa :NOUN EdibleFat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "edible") Fruit-TheWord (and (isa :NOUN EdibleFruit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "edible") Nut-TheWord (and (isa :NOUN EdibleNut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "edible") Seed-TheWord (and (isa :NOUN EdibleSeed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Edition-TheWord
 (and (isa :NOUN EditionOfCWSeries-Periodic)) (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP startingDate)) (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "editor") Program-TheWord
 (and (isa :NOUN TextEditorProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Editor-TheWord (and (isa :NOUN Editor))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Editorial-TheWord (and (isa :NOUN Editorial-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections))
    ((PPFn of) authorOfLiteraryWork-CW
     (InverseBinaryPredicateFn textualPCWSubSections))
    (AJP startingDate)
    (N (InverseBinaryPredicateFn textualPCWSubSections) startingDate)
    (AVP startingDate) (NP startingDate fe_title) ((PPFn on) situationTopic)
    ((PPFn about) situationTopic) ((PPingFn on) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 4 0)) ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (0 3 0))
   ((0 4 0) (0 4 1)) ((0 9 0) (2 0 0)) ((0 7 0) (2 0 0)) ((0 8 0) (2 0 0))
   ((0 0 0) (0 3 0)) ((0 1 0) (2 0 0)) ((0 4 1) (0 7 0) (2 0 0))
   ((0 5 0) (2 0 0) (3 0 0)) ((0 6 0) (0 6 1) (0 8 0) (2 0 0)))))

(FNNounSemtrans (TheList) Education-TheWord (and (isa :NOUN Education))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP studentOf))
   (:OBLIQUE-OBJECT (AJP fe_depictive educationLevel)
    (N (InverseBinaryPredicateFn teacherTypeOfField)))
   (:GAP (DEN mainConstituent) (DNI studentOf)
    (INI fe_qualification (InverseBinaryPredicateFn teachingASkill) studentOf
     (InverseBinaryPredicateFn teacherTypeOfField) instructor))
   (:GEN (Poss studentOf))))
 (groupPatterns (TheSet ((1 1 0)) ((3 0 0)) ((0 0 0)) ((1 0 1)) ((1 0 0)))))

(FNNounSemtrans (TheList "educational") Institution-TheWord
 (and (isa :NOUN EducationalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Effect-TheWord
 (and (isa :NOUN Situation)
      (relationExistsInstance cotemporal Obligation :NOUN))
 (frame FN_Being_in_effect) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Effect-TheWord (and (isa :NOUN ExecutingAStrategy))
 (frame FN_Execute_plan) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Effect-TheWord (and (isa :NOUN Influence))
 (frame FN_Subjective_influence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Effects-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_depictive)) (:GAP (INI owner) (DEN owns))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Efficiency-TheWord (and (isa :NOUN Efficiency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Effort-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP doneBy) ((PPFn by) doneBy) ((PPFn in) doneBy)
    (VPfin to-Generic))
   (:OBLIQUE-OBJECT ((PPFn between) doneBy) ((PPFn by) doneBy)
    ((PPFn of) doneBy) ((PPFn during) duration) ((PPFn with) to-Generic)
    (VPto to-Generic) ((PPFn towards) to-Generic)
    (A doneBy fe_depictive to-Generic) ((PPFn against) fe_manner)
    (VPing by-Underspecified) ((PPFn through) by-Underspecified)
    ((PPFn on) doneBy by-Underspecified) ((PPFn at) to-Generic eventOccursAt)
    ((PPFn to) temporallyIntersects) ((PPFn in) temporallyIntersects)
    (NP duration temporallyIntersects)
    (N doneBy duration to-Generic fe_manner temporallyIntersects)
    (AJP doneBy fe_depictive fe_effort to-Generic fe_manner by-Underspecified
     outcomeOfAction temporallyIntersects))
   (:GAP (CNI doneBy) (2nd to-Generic) (DNI doneBy to-Generic)
    (INI doneBy to-Generic))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 12 0)) ((1 7 2)) ((1 15 0)) ((0 0 0)) ((1 16 0)) ((1 16 2))
   ((1 5 0)) ((3 0 0)) ((1 12 0) (1 17 7)) ((1 5 0) (1 17 4))
   ((1 12 0) (1 17 4)) ((1 7 0) (1 13 0)) ((1 5 0) (1 14 0)) ((1 5 0) (1 17 6))
   ((1 10 0) (1 17 4)) ((1 8 0) (3 0 0)) ((1 2 0) (1 17 4)) ((1 1 0) (1 17 4))
   ((1 7 0) (1 8 0)) ((1 5 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 16 2) (3 0 0))
   ((1 5 0) (1 11 0)) ((1 2 0) (1 5 0)) ((1 1 0) (1 5 0)) ((0 0 0) (1 5 0))
   ((0 0 0) (1 16 2)) ((0 0 0) (1 17 3)) ((1 5 0) (1 17 0)) ((1 7 0) (1 16 2))
   ((1 11 1) (1 17 1)) ((1 5 0) (1 16 4) (3 0 0)) ((0 0 0) (1 5 0) (1 17 5))
   ((1 5 0) (1 7 0) (1 9 0)) ((1 5 0) (1 14 0) (1 17 4))
   ((1 12 1) (1 17 4) (3 0 0)) ((1 5 0) (1 17 4) (3 0 0))
   ((1 2 0) (1 5 0) (1 17 4)) ((1 1 0) (1 5 0) (1 17 4))
   ((0 0 0) (1 5 0) (1 16 3)) ((0 0 0) (1 5 0) (1 17 4))
   ((0 0 0) (1 5 0) (1 17 2)) ((1 4 0) (1 7 0) (1 17 2))
   ((1 3 0) (1 5 0) (3 0 0)) ((1 1 0) (1 5 0) (1 16 1))
   ((1 3 0) (1 5 0) (1 17 0)) ((1 15 1) (1 17 1) (3 0 0))
   ((1 5 0) (1 7 1) (1 11 0)) ((0 0 0) (0 0 0) (1 5 0))
   ((1 0 0) (1 16 2) (1 17 0))
   ((0 0 0) (0 0 0) (0 0 0) (0 1 0) (0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Egalitarianism-TheWord
 (and (isa :NOUN Egalitarianism)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "egg") Cooker-TheWord (and (isa :NOUN EggCooker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Egg-TheWord (and (isa :NOUN Egg)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Egg-TheWord
 (and (isa :NOUN Egg-Foodstuff) (isa :NOUN Cooked)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (AVP fe_descriptor)
    (N activeIngredientsOfType) ((PPFn of) activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "egg") White-TheWord (and (isa :NOUN EggWhites-Food))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "egg") Yolk-TheWord (and (isa :NOUN EggYolk-Food))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Egret-TheWord (and (isa :NOUN Egret)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "egyptian") Pound-TheWord
 (and (isa :NOUN Pound-Egypt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Egyptian-TheWord
 (and (isa :NOUN EgyptianArabicLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Egyptology-TheWord (and (isa :NOUN Egyptology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eighteen-Wheeler-TheWord
 (and (isa :NOUN SemiTrailer-Truck)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eighth-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ejaculation-TheWord (and (isa :NOUN Ejaculating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ejaculation-TheWord
 (and (isa :NOUN Interjection-SpeechPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ejaculatory") Duct-TheWord
 (and (isa :NOUN EjaculatoryDuct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ejection-TheWord
 (and (isa :NOUN ExpellingFromStatus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ejection-TheWord (and (isa :NOUN RemovingSomething))
 (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) to-Generic) ((PPFn from) from-Generic)
    ((PPFn of) objectRemoved))
   (:GAP (CNI doneBy) (INI from-Generic) (DNI from-Generic objectRemoved))
   (:GEN (Poss doneBy objectRemoved))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((0 1 0) (2 0 1)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 2 0)) ((0 1 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList "el") Greco-TheWord
 (and (isa :NOUN DomenikosTheotocopoulos)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "el" "salvadoran" "monetary") Unit-TheWord
 (and (isa :NOUN (UnitOfMoneyOfGeopoliticalEntityFn ElSalvador)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "elapsed") Time-TheWord (and (isa :NOUN ElapsedTime))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elastic-TheWord (and (isa :NOUN Elastic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elasticity-TheWord (and (isa :NOUN Elasticity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "elbow") Pad-TheWord (and (isa :NOUN ElbowPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elbow-TheWord (and (isa :NOUN Elbow))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) fe_attachment) (AJP fe_descriptor orientation))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 1 1) (3 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Elbow-TheWord (and (isa :NOUN ElbowJoint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elderly-TheWord
 (and (isa :NOUN HumanTypeByLifeStageType)) (frame FN_People_by_age)
 (bindingTemplate (TheList (:GAP (DNI age) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Election-TheWord (and (isa :NOUN Election))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) takesControl) ((PPFn of) takesControl)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (A (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (N fe_body temporallyIntersects))
   (:GAP (DNI takesControl (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (INI fe_body takesControl
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)) fe_selector))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 0 0)) ((0 4 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Election-TheWord (and (isa :NOUN ElectionForOffice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electonic" "photo") Flash-TheWord
 (and (isa :NOUN ElectronicFlash)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric" "baby") Swing-TheWord
 (and (isa :NOUN ElectricBabySwing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric" "bass") Guitar-TheWord
 (and (isa :NOUN BassGuitar-Electric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Blanket-TheWord
 (and (isa :NOUN ElectricBlanket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric" "car") Engine-TheWord
 (and (isa :NOUN AutoEngine-Electric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Car-TheWord (and (isa :NOUN ElectricCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Drill-TheWord (and (isa :NOUN PowerDrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Fireplace-TheWord
 (and (isa :NOUN ElectricFireplace)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Grill-TheWord
 (and (isa :NOUN ElectricGrill)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Guitar-TheWord
 (and (isa :NOUN Guitar-Electric)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric" "hair") Razor-TheWord
 (and (isa :NOUN ElectricHairShaver)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Heater-TheWord
 (and (isa :NOUN ElectricalHeater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Instrument-TheWord
 (and (isa :NOUN MusicalInstrument-Electronic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Lamp-TheWord
 (and (isa :NOUN ElectricLamp)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Mixer-TheWord
 (and (isa :NOUN ElectricMixer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Motor-TheWord
 (and (isa :NOUN ElectricalMotor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Network-TheWord
 (and (isa :NOUN ElectricalNetwork)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric" "pencil") Sharpener-TheWord
 (and (isa :NOUN ElectricPencilSharpener)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Power-TheWord
 (and (isa :NOUN Electricity)) (frame FN_Electricity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))
   (:GAP (DEN fe_electricity))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "electric") Range-TheWord
 (and (isa :NOUN ElectricCookingRange)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Refrigerator-TheWord
 (and (isa :NOUN Refrigerator)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Resistance-TheWord
 (and (isa :NOUN ElectricalResistance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Shock-TheWord
 (and (isa :NOUN ElectricShock)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Toothbrush-TheWord
 (and (isa :NOUN ElectricToothbrush)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electric") Typewriter-TheWord
 (and (isa :NOUN ElectricTypewriter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Burner-TheWord
 (and (isa :NOUN ElectricalStoveBurner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Button-TheWord
 (and (isa :NOUN ElectricalButton)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Circuit-TheWord
 (and (isa :NOUN ElectricalCircuit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Component-TheWord
 (and (isa :NOUN ElectricalComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Conduction-TheWord
 (and (isa :NOUN ElectricalConduction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Conduit-TheWord
 (and (isa :NOUN ElectricalConduit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Device-TheWord
 (and (isa :NOUN ElectricalDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Engineer-TheWord
 (and (isa :NOUN ElectricalEngineer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Engineering-TheWord
 (and (isa :NOUN ElectricalEngineeringField)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical" "fan") Mechanism-TheWord
 (and (isa :NOUN FanMechanism-Electrical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Geothermal-TheWord
 (and (isa :NOUN ElectricalGenerator-Geothermal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Solar-TheWord
 (and (isa :NOUN ElectricalGenerator-Solar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Ground-TheWord
 (and (isa :NOUN ElectricalGround)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical" "heating") Element-TheWord
 (and (isa :NOUN ElectricalHeatingElement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical" "household") Appliance-TheWord
 (and (isa :NOUN ElectricalHouseholdAppliance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Junction-TheWord
 (and (isa :NOUN ElectricalJunction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Outlet-TheWord
 (and (isa :NOUN ElectricalOutlet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Path-TheWord
 (and (isa :NOUN ElectricalPath)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Plug-TheWord
 (and (isa :NOUN ElectricalPlug)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Power-TheWord
 (and (isa :NOUN Electricity)) (frame FN_Electricity)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Power-TheWord
 (and (isa :NOUN Electricity)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrical") Terminal-TheWord
 (and (isa :NOUN ElectricalTerminal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Electrician-TheWord (and (isa :NOUN Electrician))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electricians" "^") Tool-TheWord
 (and (isa :NOUN ElectriciansTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Electricity-TheWord (and (isa :NOUN Electricity))
 (frame FN_Electricity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_electricity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Electrocution-TheWord
 (and (isa :NOUN Electrocution-Execution)) (frame FN_Cause_harm)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) instrument-Generic) (AJP fe_manner)
    ((PPFn of) victim))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Electroencephalograph-TheWord
 (and (isa :NOUN ElectroEncephalographMachine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electrolytic") Capacitor-TheWord
 (and (isa :NOUN ElectrolyticCapacitor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electromagnetic") Radiation-TheWord
 (and (isa :NOUN ElectromagneticRadiation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electromagnetic") Unit-TheWord
 (and (isa :NOUN ElectromagneticUnitOfMeasure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Electromyograph-TheWord
 (and (isa :NOUN ElectroMyograph)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electron") Microscope-TheWord
 (and (isa :NOUN ElectronMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Electron-TheWord (and (isa :NOUN Electron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electron") Volt-TheWord
 (and (isa :NOUN ElectronVolt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Component-TheWord
 (and (isa :NOUN ElectronicComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Database-TheWord
 (and (isa :NOUN ComputerDatabase-CW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Device-TheWord
 (and (isa :NOUN ElectronicDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic" "display") Device-TheWord
 (and (isa :NOUN ElectronicDisplayDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Equipment-TheWord
 (and (isa :NOUN ElectronicDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Filter-TheWord
 (and (isa :NOUN ElectronicFilter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Keyboard-TheWord
 (and (isa :NOUN ElectronicMusicalKeyboard)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "electronic") Typewriter-TheWord
 (and (isa :NOUN ElectronicTypewriter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elegy-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) beneficiary) ((PPFn to) beneficiary))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Element-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance ingredients Artifact :NOUN))
 (frame FN_Ingredients)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_product))
   (:GAP (DEN mainConstituent) (INI stuffUse))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "elementary") Particle-TheWord
 (and (isa :NOUN SubAtomicParticle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elements-TheWord (and (isa :NOUN WeatherEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elephant-TheWord (and (isa :NOUN Elephant))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "elevation" "over" "azimuth" "antenna" "pedestal")
 Mount-TheWord (and (isa :NOUN AntennaPedestalMount-ElevationOverAzimuth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elevation-TheWord
 (and (isa :NOUN Height) (distanceAboveSeaLevel :NOUN :NOUN)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "elevator") Car-TheWord (and (isa :NOUN ElevatorCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "elevator") Operator-TheWord
 (and (isa :NOUN ElevatorOperator)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elevator-TheWord (and (isa :NOUN Elevator))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elevator-TheWord (and (isa :NOUN Elevator))
 (frame FN_Connecting_architecture) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elimination-TheWord
 (and (isa :NOUN RemovingSomething)) (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N doneBy) ((PPFn from) from-Generic) (AVP from-Generic)
    ((PPFn of) objectRemoved))
   (:GAP (CNI doneBy) (INI doneBy from-Generic)
    (DNI doneBy from-Generic objectRemoved))
   (:GEN (Poss objectRemoved))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((0 3 0)) ((0 0 0) (0 3 0)) ((0 2 0) (0 3 0))
   ((0 1 0) (2 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Elite-TheWord (and (isa :NOUN Elite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elixir-TheWord (and (isa :NOUN Elixir))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elk-TheWord (and (isa :NOUN Moose)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ellipse-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elm-TheWord (and (isa :NOUN (WoodFn ElmTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Elm-TheWord (and (isa :NOUN ElmTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Em-TheWord (and (isa :NOUN Distance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Email-TheWord (and (isa :NOUN EMailMessage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "email") Address-TheWord
 (and (isa :NOUN EMailAddress)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embalming-TheWord (and (isa :NOUN Embalming))
 (frame FN_Preserving)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP by-Underspecified) (N objectActedOn)
    ((PPFn of) objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Embankment-TheWord (and (isa :NOUN Embankment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embargo-TheWord (and (isa :NOUN EconomicEmbargo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embarkation-TheWord
 (and (isa :NOUN BoardingATransportationDevice)) (frame FN_Board_vehicle)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embarkment-TheWord
 (and (isa :NOUN BoardingATransportationDevice)) (frame FN_Board_vehicle)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embezzlement-TheWord
 (and (isa :NOUN Stealing-Embezzlement)) (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator) (AJP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer)
    ((PPFn through) by-Underspecified) ((PPFn from) from-Generic))
   (:GAP (INI objectOfPossessionTransfer victim)
    (DNI perpetrator from-Generic victim) (2nd victim))
   (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((0 0 0) (1 1 0)) ((0 1 0) (1 0 0))
   ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 2 0))
   ((0 0 0) (0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Embezzler-TheWord (and (isa :NOUN Thief))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:GAP (INI objectOfPossessionTransfer from-Generic victim))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Emblem-TheWord (and (isa :NOUN Emblem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embryo-TheWord (and (isa :NOUN Embryo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Embryology-TheWord (and (isa :NOUN Embryology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emerald-TheWord (and (isa :NOUN Emerald-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emergence-TheWord (and (isa :NOUN Path-Spatial))
 (frame FN_Path_shape) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "emergency") Room-TheWord
 (and (isa :NOUN EmergencyRoom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "emery") Board-TheWord (and (isa :NOUN EmeryBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "emery") Paper-TheWord (and (isa :NOUN Sandpaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emigrant-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy LeavingAPlace :NOUN))
 (frame FN_Quitting_a_place)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) fe_intended_goal)
    ((PPFn across) trajectory-Complete) ((PPFn from) from-Generic)
    (AJP from-Generic))
   (:GAP (DEN performedBy))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Emigration-TheWord (and (isa :NOUN LeavingAPlace))
 (frame FN_Quitting_a_place)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) fe_intended_goal) ((PPFn to) fe_intended_goal)
    ((PPFn towards) trajectory-Complete) ((PPFn by) performedBy)
    (AJP fe_manner performedBy) (N performedBy) ((PPFn of) performedBy)
    ((PPFn from) from-Generic))
   (:GAP (CNI performedBy) (DNI from-Generic)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 3 0)) ((0 7 0)) ((0 4 1)) ((0 1 0)) ((0 3 0) (0 7 0))
   ((0 4 1) (0 7 0)) ((0 4 0) (0 7 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 6 0))
   ((0 1 0) (0 5 0)) ((0 1 0) (0 4 1)) ((0 0 0) (0 3 0))
   ((0 2 0) (0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList) Emigre-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy LeavingAPlace :NOUN))
 (frame FN_Quitting_a_place)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A from-Generic) (AJP from-Generic)
    ((PPFn from) from-Generic))
   (:GAP (DEN performedBy) (DNI from-Generic))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Emir-TheWord (and (isa :NOUN Amir-HeadOfState))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emirate-TheWord
 (and (isa :NOUN Emirate-Geopolitical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emotion-TheWord (and (isa :NOUN FeelingAttribute))
 (frame FN_Feeling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emotionlessness-TheWord
 (and (isa :NOUN Listlessness)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Empathy-TheWord (and (isa :NOUN Empathy))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N topicOfIndividual) ((PPFn for) topicOfIndividual)
    ((PPFn between) objectActedOn) ((PPFn of) objectActedOn)
    ((PPFn with) topicOfIndividual objectActedOn)
    ((PPFn within) objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 5 0)) ((1 4 1)) ((1 3 0)) ((1 2 0)) ((1 4 0)) ((1 1 0))
   ((1 0 0)) ((1 4 1) (2 0 0)) ((1 4 0) (2 0 0)) ((0 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Emperor-TheWord (and (isa :NOUN Emperor-HeadOfState))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_governed) (A fe_descriptor fe_governed)
    (AJP fe_governed) ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP (DNI fe_governed) (INI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 0 0)) ((4 0 0)) ((3 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 0) (1 3 0))
   ((1 1 1) (4 0 0)) ((1 1 0) (1 4 0)) ((1 0 0) (1 1 0) (4 0 0)))))

(FNNounSemtrans (TheList) Emphasis-TheWord (and (isa :NOUN Loading))
 (frame FN_Place_weight_on) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emphysema-TheWord (and (isa :NOUN Emphysema))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Empire-TheWord (and (isa :NOUN Empire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Empire-TheWord (and (isa :NOUN Empire))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn around) fe_descriptor)
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    (A fe_descriptor (InverseBinaryPredicateFn nameString) fe_population)
    (N (InverseBinaryPredicateFn nameString) fe_population))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 2 0)) ((0 4 0)) ((0 1 1)) ((0 3 1)) ((0 1 0)) ((0 3 0))
   ((0 3 2) (0 4 0)) ((0 0 0) (0 1 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Employ-TheWord
 (and (isa :NOUN HasPositionRelationship)) (frame FN_Being_employed)
 (bindingTemplate
  (TheList (:SUBJECT (NP employees))
   (:OBLIQUE-OBJECT ((PPFn of) employer) ((PPFn by) temporallyIntersects)
    (AVP temporallyIntersects))
   (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((0 0 0) (2 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 2 0) (2 0 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "employee") Benefits-TheWord
 (and (isa :NOUN EmployeeBenefits)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Employee-TheWord (and (isa :NOUN Employee))
 (frame FN_Employing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N employer) (A fe_task))
   (:GAP (DEN employees) (INI employer)) (:GEN (Poss employer))))
 (groupPatterns (TheSet ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Employer-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance employees Employee :NOUN))
 (frame FN_Employing)
 (bindingTemplate (TheList (:GAP (DEN employer)) (:GEN (Poss employees))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Employer-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationInstanceExists employees :NOUN Person))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Employment-TheWord
 (and (isa :NOUN HasPositionRelationship)) (frame FN_Being_employed)
 (bindingTemplate
  (TheList (:SUBJECT (NP employees)) (:OBLIQUE-OBJECT (AJP duration))
   (:GAP (DNI employees) (INI employer))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Employment-TheWord (and (isa :NOUN WorkAgreement))
 (frame FN_Employing)
 (bindingTemplate (TheList (:GAP (INI employees employer))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Employment-TheWord (and (isa :NOUN EmployeeHiring))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Employment-TheWord (and (isa :NOUN WorkingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Employment-TheWord
 (and (isa :NOUN IntervalOnNumberLine)
      (relationExistsInstance unemploymentRate GeographicalRegion :NOUN))
 (frame FN_Unemployment_rate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (A groupMembers) (AVP groupMembers)
    ((PPFn among) groupMembers) (N groupMembers fe_individuals)
    ((PPFn in) groupMembers eventOccursAt))
   (:GAP (DEN fe_employment) (DNI fe_individuals) (INI fe_value))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 5 1)) ((0 5 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 4 1) (0 5 0)) ((0 4 0) (0 5 1)))))

(FNNounSemtrans (TheList) Employment-TheWord (and (isa :NOUN UsingADevice))
 (frame FN_Using) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Empress-TheWord
 (and (isa :NOUN (FemaleFn Emperor-HeadOfState))) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_governed) ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Emptiness-TheWord
 (and (isa :NOUN Container) (fullnessOfContainer :NOUN Empty))
 (frame FN_Fullness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Empty-TheWord
 (and (isa :NOUN Container) (fullnessOfContainer :NOUN Empty))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) fe_relative_location))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Emptying-TheWord (and (isa :NOUN EmptyingAContainer))
 (frame FN_Emptying)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn into) to-Generic)
    ((PPFn from) from-Generic) ((PPFn of) from-Generic objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0) (0 3 1)) ((0 1 0) (0 3 1))
   ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Emu-TheWord (and (isa :NOUN Emu)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Emulator-TheWord (and (isa :NOUN EmulatorProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) En-TheWord (and (isa :NOUN Distance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enchilada-TheWord (and (isa :NOUN Enchilada))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Encryption-TheWord (and (isa :NOUN Encrypting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Encumbrance-TheWord (and (isa :NOUN Interfering))
 (frame FN_Hindering) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Encyclopedia-TheWord (and (isa :NOUN Encyclopedia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "end") Product-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance outputsCreated CreationEvent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) End-TheWord (and (isa :NOUN DyingOfBLO))
 (frame FN_Death)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent)) (:OBJECT (Poss affectedAgent))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) End-TheWord (and (isa :NOUN EndingScene))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) End-TheWord (and (isa :NOUN FootballDefensiveEnd))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) End-TheWord (and (isa :NOUN EndingOfTemporalThing))
 (frame FN_Process_end)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_process) ((PPFn to) fe_process))
   (:GAP (DNI fe_process))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) End-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyContains TemporalThing :NOUN))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) occursDuring))
   (:OBLIQUE-OBJECT (NP parts) ((PPFn in) temporallyIntersects)
    ((PPFn of) occursDuring))
   (:GAP (DEN parts) (DNI occursDuring))))
 (groupPatterns (TheSet ((1 2 0)) ((0 0 0) (1 0 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Endangerment-TheWord
 (and (isa :NOUN EndangeringSomething)) (frame FN_Endangering)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Endeavor-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A doneBy) ((PPFn by) doneBy) ((PPFn in) fe_domain)
    (VPto to-Generic) ((PPFn towards) to-Generic) (N to-Generic)
    (AJP to-Generic outcomeOfAction))
   (:GAP (INI doneBy to-Generic)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((3 0 0)) ((1 3 0)) ((1 3 0) (1 6 1)) ((1 3 0) (3 0 0))
   ((1 4 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 3 0))
   ((1 0 0) (1 3 0)) ((1 2 0) (1 4 0) (3 0 0)))))

(FNNounSemtrans (TheList) Ending-TheWord
 (and (isa :NOUN EndingOfTemporalThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "endocrine") Gland-TheWord
 (and (isa :NOUN EndocrineGland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Endocrinologist-TheWord
 (and (isa :NOUN Endocrinologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Endocrinology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Endocrinologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "endoplasmic") Reticulum-TheWord
 (and (isa :NOUN EndoplasmicReticulum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Endoscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Endoscope-TheWord (and (isa :NOUN Endoscope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Endoskeleton-TheWord
 (and (isa :NOUN VertebrateSkeleton)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enema-TheWord (and (isa :NOUN Enema-DosageForm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enemy-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance considersAsEnemy Agent-Generic :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Energy-TheWord (and (isa :NOUN EnergyQuantity))
 (frame FN_Dynamism)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_exerter))
   (:OBLIQUE-OBJECT ((PPFn than) fe_degree) (AVP fe_degree)
    (AJP fe_degree fe_descriptor) ((PPFn of) objectActedOn fe_exerter)
    (A fe_degree fe_descriptor fe_domain fe_exerter))
   (:NOUN (N impactForce)) (:GEN (Poss fe_exerter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((3 0 0)) ((1 3 1)) ((0 0 0)) ((1 3 0)) ((1 4 2) (3 0 0))
   ((1 3 1) (1 4 2)) ((0 0 0) (1 4 2)) ((1 2 1) (1 4 3)) ((1 3 1) (1 4 1))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0)) ((1 2 1) (1 3 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 4 2) (1 4 2)) ((0 0 0) (1 4 1) (1 4 1))
   ((0 0 0) (1 0 0) (1 4 0)) ((0 0 0) (1 0 0) (1 1 0) (1 4 2))
   ((0 0 0) (1 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Energy-TheWord (and (isa :NOUN EnergyStuff))
 (frame FN_Dynamism)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_exerter))
   (:OBLIQUE-OBJECT ((PPFn than) fe_degree) (AVP fe_degree)
    (AJP fe_degree fe_descriptor) ((PPFn of) objectActedOn fe_exerter)
    (A fe_degree fe_descriptor fe_domain fe_exerter))
   (:NOUN (N impactForce)) (:GEN (Poss fe_exerter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((3 0 0)) ((1 3 1)) ((0 0 0)) ((1 3 0)) ((1 4 2) (3 0 0))
   ((1 3 1) (1 4 2)) ((0 0 0) (1 4 2)) ((1 2 1) (1 4 3)) ((1 3 1) (1 4 1))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0)) ((1 2 1) (1 3 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 4 2) (1 4 2)) ((0 0 0) (1 4 1) (1 4 1))
   ((0 0 0) (1 0 0) (1 4 0)) ((0 0 0) (1 0 0) (1 1 0) (1 4 2))
   ((0 0 0) (1 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Energy-TheWord (and (isa :NOUN Electricity))
 (frame FN_Electricity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_inherent_purpose) (AJP from-Generic)
    (A from-Generic))
   (:GAP (DEN fe_electricity))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Energy-TheWord (and (isa :NOUN EnergyQuantity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enforcement-TheWord
 (and (isa :NOUN EnforcingSomething)) (frame FN_Enforcing)
 (bindingTemplate (TheList (:GAP (DNI fe_rule)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "engagement") Ring-TheWord
 (and (isa :NOUN EngagementRing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Engagement-TheWord (and (isa :NOUN EngagementEvent))
 (frame FN_Forming_relationships)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) fe_partner_2)) (:GAP (INI fe_partner_2))
   (:GEN (Poss fe_partner_1))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "engine") Compartment-TheWord
 (and (isa :NOUN EngineCompartment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "engine") Starter-TheWord
 (and (isa :NOUN EngineStarter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "engine" "test") Cell-TheWord
 (and (isa :NOUN EngineTestCell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Engine-TheWord (and (isa :NOUN Engine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Engineer-TheWord (and (isa :NOUN TrainEngineer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Engineer-TheWord (and (isa :NOUN Engineer))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A comesFrom-Generic)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Engineering-TheWord
 (and (isa :NOUN EngineeringField)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) England-TheWord (and (isa :NOUN England))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "english") Muffin-TheWord
 (and (isa :NOUN EnglishMuffin)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "english") Person-TheWord
 (and (isa :NOUN EnglishPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "english") Setter-TheWord
 (and (isa :NOUN EnglishSetter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "english") Springer-TheWord
 (and (isa :NOUN EnglishSpringerSpaniel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) English-TheWord (and (isa :NOUN EnglishPerson))
 (frame FN_People_by_origin) (bindingTemplate (TheList (:GAP (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "english" "toy") Spaniel-TheWord
 (and (isa :NOUN EnglishToySpaniel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Englishwoman-TheWord
 (and (isa :NOUN (FemaleFn EnglishPerson))) (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person)) (:OBLIQUE-OBJECT ((PPFn of) age))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Enjoyment-TheWord (and (isa :NOUN Enjoyment))
 (frame FN_Emotions_of_mental_activity) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enlargement-TheWord (and (isa :NOUN Shrinkage))
 (frame FN_Expansion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enlargement-TheWord (and (isa :NOUN GrowthEvent))
 (frame FN_Expansion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enlarger-TheWord
 (and (isa :NOUN PhotographicEnlarger)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enlightenment-TheWord
 (and (isa :NOUN MentalQuantity)) (frame FN_Mental_property)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) objectOfCritique) ((PPFn upon) objectOfCritique)
    (AJP fe_manner) ((PPFn as) fe_practice) ((PPFn of) affectedAgent))
   (:GAP (CNI affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 0)) ((0 1 0)) ((0 0 0)) ((0 3 0) (2 0 0))
   ((0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList) Ennoblement-TheWord
 (and (isa :NOUN EnnoblingSomeone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "enriched") Uranium-TheWord
 (and (isa :NOUN Uranium-Enriched)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enrichment-TheWord (and (isa :NOUN Refining))
 (frame FN_Processing_materials)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_alterant) (A hasPhysicalQuantity)
    (N fe_alterant hasPhysicalQuantity mainConstituent)
    ((PPFn of) mainConstituent) ((PPFn in) mainConstituent)
    ((PPFn into) purposeOfEvent) ((PPFn for) purposeOfEvent))
   (:GAP (CNI doneBy fe_alterant) (INI doneBy fe_alterant mainConstituent)
    (DEN mainConstituent) (DNI doneBy mainConstituent purposeOfEvent))
   (:NOUN (N mainConstituent))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 3 0)) ((0 0 0)) ((0 5 0)) ((0 2 0)) ((0 2 2)) ((2 0 0))
   ((0 2 1) (0 3 0)) ((0 1 0) (0 3 0)) ((0 2 0) (0 4 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Ensemble-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "ent") Man-TheWord
 (and (isa :NOUN Otorhinolaryngologist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entanglement-TheWord
 (and (isa :NOUN Action)
      (relationInstanceExists deliberateActors :NOUN Person))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn with) fe_event)) (:GAP (INI doneBy))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Entanglement-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance deliberateActors Event :NOUN))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn with) fe_event)) (:GAP (INI doneBy))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "enterprise" "internet") Appliance-TheWord
 (and (isa :NOUN InternetAppliance-Enterprise)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Enterprise-TheWord
 (and (isa :NOUN Enterprise-Project)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entertainer-TheWord (and (isa :NOUN Entertainer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "entertainment") Center-TheWord
 (and (isa :NOUN EntertainmentCenter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "entertainment") Industry-TheWord
 (and (isa :NOUN EntertainmentIndustry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entertainment-TheWord
 (and (isa :NOUN Entertainment-RecreationalActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entertainment-TheWord
 (and (isa :NOUN EntertainmentEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entity-TheWord (and (isa :NOUN Entity))
 (frame FN_Entity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) (AJP activeIngredientsOfType)
    (A activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Entity-TheWord (and (isa :NOUN SomethingExisting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entomologist-TheWord (and (isa :NOUN Entomologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entomology-TheWord (and (isa :NOUN Entomology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entourage-TheWord (and (isa :NOUN Entourage))
 (frame FN_Entourage)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_attended_person fe_individuals))
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property)) (:GAP (DEN fe_entourage))
   (:GEN (Poss fe_attended_person))))
 (groupPatterns
  (TheSet ((0 0 1)) ((3 0 0)) ((0 0 0) (0 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Entrance-TheWord (and (isa :NOUN ArrivingAtAPlace))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP to-Generic objectMoving))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    (AJP fe_manner) ((PPingFn by) by-Underspecified) ((PPFn from) from-Generic)
    ((PPFn of) objectMoving))
   (:GAP (DNI to-Generic) (INI objectMoving)) (:NOUN (N to-Generic))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((4 0 0)) ((1 5 0)) ((0 0 1)) ((1 4 0))
   ((0 0 1) (4 0 0)) ((0 0 1) (1 1 0)) ((1 0 0) (4 0 0)) ((0 0 1) (1 0 0))
   ((0 0 0) (1 4 0)) ((0 0 1) (1 3 0)) ((1 2 0) (4 0 0)) ((0 0 1) (1 2 0))
   ((0 0 1) (1 0 0) (4 0 0)) ((1 0 0) (1 2 0) (4 0 0))
   ((0 0 1) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Entreaty-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy situationTopic))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPingFn to) recipientOfInfo)
    ((PPFn like) fe_manner) (VPto fe_manner infoTransferred)
    ((PPFn for) recipientOfInfo infoTransferred) (Sfin infoTransferred)
    (AJP fe_manner infoTransferred performedBy)
    ((PPFn of) performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 1)) ((2 0 0)) ((1 7 0)) ((1 6 2)) ((1 6 0)) ((0 0 2) (2 0 0))
   ((1 5 0) (2 0 0)) ((0 0 1) (1 4 1)) ((1 1 0) (1 6 1))
   ((1 3 1) (1 4 0) (2 0 0)) ((0 0 0) (1 3 1) (2 0 0))
   ((0 0 1) (1 0 0) (1 2 0)) ((1 0 0) (1 6 0) (2 0 0))
   ((0 0 0) (1 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Entree-TheWord (and (isa :NOUN Entree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Entry-TheWord (and (isa :NOUN ArrivingAtAPlace))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList (:SUBJECT (Poss to-Generic) (NP objectMoving))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    ((PPFn on) deviceTypeUsed) ((PPFn through) trajectory-Complete)
    ((PPFn from) from-Generic) ((PPFn of) objectMoving) (N objectMoving)
    (A to-Generic objectMoving) ((PPFn at) temporallyIntersects)
    ((PPFn in) to-Generic temporallyIntersects)
    (AJP fe_depictive fe_manner by-Underspecified temporallyIntersects))
   (:GAP (DNI to-Generic objectMoving) (CNI to-Generic objectMoving)
    (INI to-Generic objectMoving))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((3 0 0)) ((1 5 0)) ((0 1 0)) ((1 4 0))
   ((1 1 0) (3 0 0)) ((0 1 0) (1 1 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 5 0))
   ((1 0 0) (1 7 1)) ((1 9 0) (3 0 0)) ((1 5 0) (1 7 0)) ((1 1 0) (1 4 0))
   ((1 3 0) (3 0 0)) ((1 3 0) (1 5 0)) ((0 1 0) (1 3 0)) ((1 3 0) (1 6 0))
   ((1 1 0) (1 10 2)) ((1 1 0) (1 10 0)) ((1 0 0) (1 5 0) (1 9 1))
   ((1 0 0) (1 5 0) (1 8 0)) ((0 1 0) (1 8 0) (3 0 0))
   ((0 1 0) (1 0 0) (3 0 0)) ((1 0 0) (1 2 0) (3 0 0))
   ((0 1 0) (1 0 0) (1 10 1)) ((0 0 0) (1 0 0) (1 10 1))
   ((0 1 0) (1 1 0) (1 10 0)) ((0 1 0) (1 0 0) (1 10 0))
   ((1 0 0) (1 9 1) (1 10 3) (3 0 0)))))

(FNNounSemtrans (TheList) Envelope-TheWord (and (isa :NOUN Flask-LabGlassware))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) containedObject)
    (NP containedObject) ((PPFn in) fe_relative_location)
    ((PPFn on) fe_relative_location)
    (N containedObject mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss containedObject owner))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 5 2)) ((0 4 0)) ((0 3 0)) ((0 5 1)) ((2 0 0)) ((0 1 0))
   ((0 0 0)) ((0 5 0) (2 0 1)) ((0 5 1) (2 0 0)) ((2 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Envelope-TheWord (and (isa :NOUN Envelope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Environment-TheWord
 (and (isa :NOUN Environment-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Environment-TheWord (and (isa :NOUN Habitat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Environmentalist-TheWord
 (and (isa :NOUN EnvironmentalActivism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Envy-TheWord (and (isa :NOUN Envy))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn at) topicOfIndividual) ((PPFn of) topicOfIndividual)
    (AVP fe_degree) ((PPFn among) objectActedOn) ((PPFn between) objectActedOn)
    ((PPFn from) objectActedOn) ((PPFn in) fe_degree eventAffectsBodyPart)
    (AJP topicOfIndividual fe_degree objectActedOn fe_manner))
   (:GAP (INI objectActedOn) (CNI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 7 3)) ((1 6 1)) ((3 0 0)) ((1 5 0)) ((1 4 0)) ((0 0 0)) ((1 7 2))
   ((1 6 0)) ((1 1 0)) ((1 0 0)) ((1 7 3) (3 0 0)) ((1 3 0) (1 7 3))
   ((1 1 0) (1 7 3)) ((1 0 0) (1 7 1)) ((0 0 0) (1 2 0) (1 7 0))
   ((0 0 0) (1 1 0) (1 2 0) (1 2 0)))))

(FNNounSemtrans (TheList) Enzyme-TheWord (and (isa :NOUN EnzymeMolecule))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eon-TheWord (and (isa :NOUN Eon-LongTime))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epee-TheWord (and (isa :NOUN FencingEpee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "epic") Poem-TheWord (and (isa :NOUN EpicPoem-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epic-TheWord (and (isa :NOUN EpicPoem-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    (AJP authorOfLiteraryWork-CW fe_genre)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 1)) ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 1 0))
   ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Epidemiologist-TheWord
 (and (isa :NOUN Epidemiologist)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epidemiology-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epiglottis-TheWord (and (isa :NOUN Epiglottis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epigram-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_genre) ((PPFn upon) situationTopic)
    ((PPFn on) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Epigraphy-TheWord (and (isa :NOUN Epigraphy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epilepsy-TheWord (and (isa :NOUN Epilepsy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epilogue-TheWord (and (isa :NOUN Epilog-PCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) situationTopic)
    ((PPFn to) (InverseBinaryPredicateFn textualPCWSubSections)
     situationTopic))
   (:GAP (DEN fe_text))
   (:GEN (Poss (InverseBinaryPredicateFn textualPCWSubSections)))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((2 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Epinephrine-TheWord (and (isa :NOUN Epinephrine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epiphany-TheWord (and (isa :NOUN Epiphany-TheDay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Episode-TheWord (and (isa :NOUN Event))
 (frame FN_Event) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "epistemic") Logic-TheWord
 (and (isa :NOUN EpistemicLogic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epistemology-TheWord (and (isa :NOUN Epistemology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Epistle-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) authorOfLiteraryWork-CW)
    ((PPFn to) beneficiary))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Epoch-TheWord (and (isa :NOUN GeologicalEpoch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eponym-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equality-TheWord (and (isa :NOUN Equality))
 (frame FN_Fairness_evaluation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equalizer-TheWord
 (and (isa :NOUN Equalizer-AudioComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equation-TheWord
 (and (isa :NOUN Equation-MathematicalStatement))
 (frame FN_Mathematical_relationship) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equation-TheWord
 (and (isa :NOUN Equation-MathematicalStatement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "equestrian") Sport-TheWord
 (and (isa :NOUN EquestrianSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equilibrium-TheWord (and (isa :NOUN Equilibrium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equine-TheWord (and (isa :NOUN EquineAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equipment-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPto deviceUse) (AJP fe_descriptor deviceUse)
    (N deviceUse) ((PPFn with) deviceUse) ((PPingFn for) deviceUse)
    (A deviceUse) ((PPFn for) deviceUse fe_user) ((PPFn of) deviceUse fe_user))
   (:GAP (DEN fe_gizmo) (DNI deviceUse) (INI deviceUse fe_user))
   (:NOUN (N deviceUse)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((3 0 0)) ((0 7 1)) ((0 6 1)) ((0 0 0)) ((0 4 0))
   ((0 3 0)) ((0 7 0)) ((0 6 0)) ((0 2 0)) ((0 1 1)) ((0 1 0))
   ((0 2 0) (0 6 0)) ((0 1 1) (0 2 0)) ((0 1 1) (0 1 1)) ((0 2 0) (3 0 0))
   ((0 2 0) (0 6 1)) ((0 0 0) (0 1 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Equipment-TheWord (and (isa :NOUN Artifact-Generic))
 (frame FN_Supply)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP purposeOfEvent))
   (:GAP (CNI to-Generic) (INI suppliers) (DNI to-Generic suppliers)
    (DEN objectOfPossessionTransfer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Equity-TheWord (and (isa :NOUN Egalitarianism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Equivocation-TheWord (and (isa :NOUN Lying))
 (frame FN_Prevarication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) performedBy) (AJP situationTopic)
    ((PPFn in) situationTopic) ((PPFn over) situationTopic))
   (:GAP (CNI recipientOfInfo performedBy))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Era-TheWord (and (isa :NOUN Era))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString) fe_salient_event)
    ((PPFn of) (InverseBinaryPredicateFn nameString)
     (InverseBinaryPredicateFn parts)))
   (:GAP (DNI fe_relative_time) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 1)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Era-TheWord (and (isa :NOUN GeologicalEra))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eraser-TheWord (and (isa :NOUN Eraser-Board))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eraser-TheWord (and (isa :NOUN Eraser-Pencil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Erbium-TheWord (and (isa :NOUN Erbium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Erection-TheWord (and (isa :NOUN GettingAnErection))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ergonomic") Aid-TheWord
 (and (isa :NOUN ErgonomicAid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ermines-TheWord (and (isa :NOUN FurCoat))
 (frame FN_Clothing) (bindingTemplate (TheList (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Erosion-TheWord (and (isa :NOUN Erosion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Erotica-TheWord (and (isa :NOUN Erotica))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eruption-TheWord
 (and (isa :NOUN AnEventBeginningSomething)) (frame FN_Process_start)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Erythromycin-TheWord (and (isa :NOUN Erythromycin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Escalation-TheWord (and (isa :NOUN IncreaseEvent))
 (frame FN_Change_position_on_a_scale) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Escalator-TheWord (and (isa :NOUN Escalator))
 (frame FN_Connecting_architecture)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) to-Generic)) (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Escape-TheWord (and (isa :NOUN EscapeCaptivity))
 (frame FN_Departing)
 (bindingTemplate
  (TheList (:SUBJECT (NP transferredThing))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    ((PPFn in) deviceTypeUsed) (AJP trajectory-Complete)
    ((PPFn across) trajectory-Complete) ((PPFn beyond) trajectory-Complete)
    ((PPFn over) trajectory-Complete) ((PPFn through) trajectory-Complete)
    (N from-Generic) ((PPFn from) from-Generic) ((PPFn of) transferredThing)
    ((PPFn by) transferredThing))
   (:GAP (DNI from-Generic) (INI from-Generic) (CNI transferredThing))
   (:GEN (Poss transferredThing))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 0)) ((3 0 0)) ((1 10 0)) ((1 11 0)) ((1 7 0))
   ((1 6 0)) ((1 5 0)) ((1 4 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (3 0 0))
   ((1 9 0) (3 0 0)) ((1 9 0) (1 10 0)) ((1 7 0) (1 10 0)) ((1 3 0) (1 10 0))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 10 0)) ((0 0 0) (1 9 0) (3 0 0))
   ((0 0 0) (1 2 0) (3 0 0)) ((0 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Escapee-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance performedBy EscapeCaptivity :NOUN))
 (frame FN_Quitting_a_place)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) fe_intended_goal)
    ((PPFn across) trajectory-Complete) (AJP from-Generic)
    ((PPFn from) from-Generic))
   (:GAP (DEN performedBy))))
 (groupPatterns (TheSet ((0 3 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Escarpment-TheWord (and (isa :NOUN Escarpment))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "escrow") Company-TheWord
 (and (isa :NOUN EscrowCompany)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "escrow") Account-TheWord
 (and (isa :NOUN EscrowAccount)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eskimo") Dog-TheWord (and (isa :NOUN SiberianHusky))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Esophagus-TheWord (and (isa :NOUN Esophagus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Espresso-TheWord (and (isa :NOUN Espresso))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Essay-TheWord (and (isa :NOUN AcademicEssay))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    (A fe_genre languageWrittenIn) (AJP startingDate)
    ((PPFn of) authorOfLiteraryWork-CW startingDate) ((PPFn on) situationTopic)
    ((PPingFn on) situationTopic) ((PPFn about) situationTopic)
    (N fe_genre startingDate situationTopic)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections)
     situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text fe_title))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 8 1)) ((0 6 0)) ((0 7 2)) ((0 7 0)) ((0 1 0)) ((0 8 0))
   ((2 0 0)) ((0 3 0)) ((0 0 0)) ((0 5 0) (2 0 0)) ((0 4 0) (2 0 0))
   ((0 6 0) (2 0 0)) ((0 0 0) (0 5 0)) ((0 0 0) (0 4 0)) ((2 0 0) (3 0 0))
   ((0 1 1) (0 3 0)) ((0 3 1) (2 0 0) (3 0 0)) ((0 2 0) (2 0 0) (3 0 0))
   ((0 0 0) (0 7 1) (3 0 1)))))

(FNNounSemtrans (TheList) Establishment-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses) (bindingTemplate (TheList (:GAP (DEN fe_business))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Establishment-TheWord
 (and (isa :NOUN
       (IntentionallyFn (CollectionIntersection2Fn CreationEvent Action))))
 (frame FN_Intentionally_create)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP outputsCreated) ((PPFn of) outputsCreated)
    (VPto purposeOfEvent) ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (DNI performedBy))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 3 1)) ((0 1 0) (0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Establishment-TheWord (and (isa :NOUN Building))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Estate-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationExistsInstance owns IntelligentAgent :NOUN))
 (frame FN_Locale_by_ownership) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Estate-TheWord (and (isa :NOUN Estate-LegalEntity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Esteem-TheWord (and (isa :NOUN Respect))
 (frame FN_Regard)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT (NP objectOfEvaluation) (AJP fe_judgment))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0) (1 1 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Ester-TheWord (and (isa :NOUN Ester)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Estimate-TheWord (and (isa :NOUN Estimate))
 (frame FN_Estimated_value)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    ((PPFn for) objectOfStateChange)
    (N subjectOfMentalSituation objectOfStateChange)
    ((PPFn of) fe_estimation objectOfStateChange fe_question)
    (PPinterrog fe_question) (AJP temporallyIntersects))
   (:GAP (INI subjectOfMentalSituation) (DNI fe_estimation objectOfStateChange)
    (DEN fe_estimation fe_value) (2nd fe_value))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 3 2)) ((1 2 1)) ((1 4 0)) ((1 3 1)) ((1 0 0)) ((1 2 0))
   ((0 0 0) (1 3 2)) ((1 1 0) (3 0 0)) ((1 3 0) (3 0 0))
   ((1 0 0) (1 3 1) (1 5 0)))))

(FNNounSemtrans (TheList) Estimation-TheWord (and (isa :NOUN Estimate))
 (frame FN_Estimated_value)
 (bindingTemplate
  (TheList (:GAP (DEN fe_estimation) (DNI objectOfStateChange))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Estimation-TheWord (and (isa :NOUN MakingAnEstimate))
 (frame FN_Estimating)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A by-Underspecified)
    ((PPFn of) fe_feature objectOfStateChange fe_value)
    (N objectOfStateChange fe_value))
   (:GAP (DEN fe_estimation)) (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 1 2)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 1 0)) ((2 0 0))
   ((0 0 0) (0 1 0)) ((0 1 0) (2 0 0)) ((0 1 1) (0 1 2) (2 0 0)))))

(FNNounSemtrans (TheList) Estrogen-TheWord (and (isa :NOUN Estrogen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Estrone-TheWord (and (isa :NOUN Estrone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Estuary-TheWord (and (isa :NOUN Estuary))
 (frame FN_Relational_natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_landmark_feature))
   (:GAP (DEN fe_focal_feature))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "ethernet") Cable-TheWord
 (and (isa :NOUN EthernetCable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ethics-TheWord
 (and (isa :NOUN Ethics-PhilosophySubField)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ethmoid") Sinus-TheWord
 (and (isa :NOUN EthmoidSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ethnicity-TheWord
 (and (isa :NOUN PersonTypeByEthnicity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ethnology-TheWord (and (isa :NOUN Ethnology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ethologist-TheWord (and (isa :NOUN Ethologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ethology-TheWord (and (isa :NOUN Ethology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ethyl") Alcohol-TheWord (and (isa :NOUN Ethanol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Etui-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Etymology-TheWord (and (isa :NOUN Etymology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Euascomycetes-TheWord
 (and (isa :NOUN EuascomycetesClass)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eucharist-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Euchre-TheWord (and (isa :NOUN Euchre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eugenics-TheWord (and (isa :NOUN Eugenics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eulogy-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections))
    ((PPFn of) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Eunuch-TheWord (and (isa :NOUN Eunuch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Euphonium-TheWord (and (isa :NOUN Euphonium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Euphoria-TheWord
 (and (isa :NOUN (VeryHighAmountFn Happiness))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "european") Country-TheWord
 (and (isa :NOUN EuropeanCountry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "european") Larch-TheWord
 (and (isa :NOUN EuropeanLarchTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) European-TheWord
 (and (isa :NOUN EuropeanCitizenOrSubject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Europium-TheWord (and (isa :NOUN Europium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eustachian") Tube-TheWord
 (and (isa :NOUN EustachianTube)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Euthanasia-TheWord (and (isa :NOUN Euthanasia))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers)) (:OBLIQUE-OBJECT (AJP fe_manner))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Eutheria-TheWord (and (isa :NOUN Eutheria))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evacuation-TheWord
 (and (isa :NOUN RemovingSomething)) (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn to) to-Generic)
    ((PPFn from) from-Generic) ((PPFn of) from-Generic objectRemoved)
    (N fe_manner fe_means_of_motion objectRemoved) (AJP objectRemoved)
    (NP instrument-Generic objectRemoved))
   (:GAP (CNI doneBy) (DNI from-Generic objectRemoved)
    (INI doneBy from-Generic objectRemoved))
   (:GEN (Poss from-Generic objectRemoved))))
 (groupPatterns
  (TheSet ((0 6 1)) ((2 0 0)) ((0 3 0)) ((0 2 0)) ((2 0 1)) ((0 3 1)) ((0 4 2))
   ((0 4 1)) ((0 1 0)) ((0 6 0) (0 6 1)) ((0 1 0) (0 2 0)) ((0 0 0) (0 3 1))
   ((0 3 0) (0 4 2)) ((0 3 0) (0 5 0)) ((0 2 0) (2 0 1)) ((0 2 0) (0 3 1))
   ((0 3 1) (0 4 0)) ((0 1 0) (2 0 1)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Evaluation-TheWord (and (isa :NOUN Evaluating))
 (frame FN_Assessing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_feature))
   (:GAP (CNI performedBy fe_phenomenon))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Evangelicalism-TheWord
 (and (isa :NOUN EvangelicalChristianity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evangelist-TheWord (and (isa :NOUN Evangelist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evaporation-TheWord
 (and (isa :NOUN StateOfMatterChangeEvent)) (frame FN_Change_of_phase)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evasion-TheWord (and (isa :NOUN AvoidingSomething))
 (frame FN_Avoiding)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn from) doneBy)
    ((PPFn of) objectActedOn) (N objectActedOn) ((PPFn about) objectActedOn))
   (:GAP (INI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 3 0)) ((1 2 0)) ((1 2 0) (3 0 0)) ((1 1 0) (1 4 0))
   ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Evasion-TheWord (and (isa :NOUN AvoidingSomething))
 (frame FN_Evading)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_evader fe_pursuer)) (:GEN (Poss fe_evader))))
 (groupPatterns (TheSet ((0 0 1)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Eve-TheWord (and (isa :NOUN Evening))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "evening") Bag-TheWord (and (isa :NOUN EveningBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evening-TheWord (and (isa :NOUN Evening))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBJECT (Num fe_count) (AJP fe_relative_time))
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    ((PPFn of) fe_salient_event)
    (N fe_relative_time (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit) (DNI (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((1 3 0)) ((1 1 0)) ((1 0 0)) ((0 1 0)) ((0 0 0))
   ((1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Evensong-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Event-TheWord (and (isa :NOUN Event))
 (frame FN_Event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_event) ((PPFn of) fe_event) (AVP eventOccursAt)
    ((PPFn in) temporallyIntersects) (NP temporallyIntersects))
   (:GAP (DEN fe_event) (DNI eventOccursAt temporallyIntersects)
    (INI eventOccursAt temporallyIntersects) (2nd temporallyIntersects))))
 (groupPatterns (TheSet ((0 1 0)) ((0 3 0)) ((0 0 0) (0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList) Event-TheWord (and (isa :NOUN Competition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evergreen-TheWord (and (isa :NOUN EvergreenPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "evergreen") Tree-TheWord
 (and (isa :NOUN EvergreenPlant)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Everyone-TheWord (and (isa :NOUN (GroupFn Person)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eviction-TheWord (and (isa :NOUN Eviction))
 (frame FN_Removing)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectRemoved))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) from-Generic)
    ((PPingFn of) from-Generic) ((PPFn of) objectRemoved))
   (:GAP (CNI doneBy) (INI from-Generic) (DNI from-Generic objectRemoved))
   (:GEN (Poss objectRemoved))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((3 0 0)) ((1 3 0)) ((0 0 0)) ((1 1 0) (1 3 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Evidence-TheWord
 (and (isa :NOUN Evidence-Indication)) (frame FN_Evidence)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP subjectOfMentalSituation fe_support) (Sfin fe_support))
   (:OBJECT (Sfin fe_proposition))
   (:OBLIQUE-OBJECT (N subjectOfMentalSituation) ((PPFn during) fe_depictive)
    (VPto fe_domain_of_relevance) ((PPFn of) fe_proposition)
    (AJP fe_degree fe_depictive fe_proposition) ((PPFn about) fe_proposition)
    ((PPFn against) fe_proposition) (Sub fe_proposition)
    (VPbrst fe_proposition) (Sfin fe_proposition fe_support) (NP fe_support))
   (:GAP (DNI fe_proposition fe_support) (DEN fe_support)
    (INI subjectOfMentalSituation fe_support))))
 (groupPatterns
  (TheSet ((2 8 0)) ((2 7 0)) ((2 6 0)) ((2 5 0)) ((0 1 0)) ((2 9 0)) ((2 3 0))
   ((2 4 2)) ((2 2 0)) ((2 1 0)) ((2 4 0)) ((0 0 0)) ((2 0 0))
   ((1 0 0) (2 10 0)) ((0 0 1) (2 9 0)) ((2 3 0) (2 9 1)) ((2 4 1) (2 9 0))
   ((0 0 1) (2 3 0) (2 4 0)))))

(FNNounSemtrans (TheList) Evil-TheWord
 (and (isa :NOUN (VeryHighAmountFn Badness-Moral))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evildoer-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evocation-TheWord (and (isa :NOUN Evocation))
 (frame FN_Evoking) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Evolution-TheWord (and (isa :NOUN Evolution))
 (frame FN_Coming_to_be)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Exaltation-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation) (VPed fe_reason))
   (:GAP (DNI subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Exam-TheWord (and (isa :NOUN AcademicTesting))
 (frame FN_Examination)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_examinee))
   (:OBLIQUE-OBJECT (AJP fe_knowledge) ((PPFn for) fe_qualification)
    (VPto fe_qualification) (N fe_examiner fe_knowledge fe_qualification))
   (:GAP (DEN fe_examination) (INI fe_knowledge)
    (DNI fe_examinee fe_knowledge))
   (:GEN (Poss fe_examinee fe_qualification))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 3 1)) ((1 3 2) (3 0 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (3 0 1)) ((0 0 0) (1 1 0)) ((0 0 0) (1 3 1)) ((0 0 0) (1 3 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (0 0 0)) ((0 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Examination-TheWord
 (and (isa :NOUN Hearing-LegalProceeding)) (frame FN_Court_examination)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Examination-TheWord (and (isa :NOUN AcademicTesting))
 (frame FN_Examination)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_examinee))
   (:OBLIQUE-OBJECT ((PPFn in) fe_knowledge) (AJP fe_qualification)
    (N fe_examinee fe_examiner fe_knowledge fe_qualification))
   (:GAP (DEN fe_examination) (INI fe_examinee) (DNI fe_examinee fe_knowledge))
   (:GEN (Poss fe_examinee))))
 (groupPatterns
  (TheSet ((1 2 3)) ((1 1 0)) ((1 2 2)) ((3 0 0)) ((0 0 0)) ((1 2 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 2 2)) ((1 0 0) (1 2 1)))))

(FNNounSemtrans (TheList) Examination-TheWord (and (isa :NOUN Inspecting))
 (frame FN_Examination)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_examinee))
   (:OBLIQUE-OBJECT ((PPFn in) fe_knowledge) (AJP fe_qualification)
    (N fe_examinee fe_examiner fe_knowledge fe_qualification))
   (:GAP (DEN fe_examination) (INI fe_examinee) (DNI fe_examinee fe_knowledge))
   (:GEN (Poss fe_examinee))))
 (groupPatterns
  (TheSet ((1 2 3)) ((1 1 0)) ((1 2 2)) ((3 0 0)) ((0 0 0)) ((1 2 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 2 2)) ((1 0 0) (1 2 1)))))

(FNNounSemtrans (TheList) Examination-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Examination-TheWord
 (and (isa :NOUN SpecifiedTest-CW)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Examination-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP fe_ground) ((PPFn of) fe_ground))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "examining") Table-TheWord
 (and (isa :NOUN ExaminingTable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Example-TheWord (and (isa :NOUN Individual))
 (frame FN_Instance)
 (bindingTemplate
  (TheList (:SUBJECT (Sfin fe_instance))
   (:OBLIQUE-OBJECT (AJP fe_instance_prop) ((PPFn of) activeIngredientsOfType))
   (:GAP (DEN fe_instance) (DNI activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Excavator-TheWord (and (isa :NOUN Excavator-Vehicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Excellence-TheWord (and (isa :NOUN Desire))
 (frame FN_Desirability)
 (bindingTemplate (TheList (:GEN (Poss objectOfEvaluation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Excerpt-TheWord (and (isa :NOUN Excerpt-PCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exchange-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_interlocutor_2)
    ((PPFn between) fe_interlocutors) (AJP duration situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (DNI fe_interlocutor_1))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 0 0) (0 2 1)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Exchange-TheWord (and (isa :NOUN Transaction))
 (frame FN_Exchange)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_exchanger_2 fe_theme_1))
   (:OBJECT ((PPFn for) fe_theme_2))
   (:OBLIQUE-OBJECT (AJP fe_exchangers) (NP fe_theme_1) ((PPFn for) fe_theme_2)
    (N fe_themes) ((PPFn of) fe_themes))
   (:GAP (CNI fe_exchangers) (INI purposeOfEvent)
    (DNI fe_exchanger_1 fe_exchanger_2 fe_exchangers fe_theme_1))))
 (groupPatterns
  (TheSet ((2 4 0)) ((2 2 0)) ((2 0 0) (2 3 0)) ((2 1 0) (2 2 0))
   ((0 0 1) (2 2 0)) ((0 0 0) (0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Exchange-TheWord (and (isa :NOUN Bartering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exchange-TheWord (and (isa :NOUN MoneyModeExchange))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "excimer") Laser-TheWord
 (and (isa :NOUN ExcimerLaser-Device)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Excise-TheWord (and (isa :NOUN ExciseTax-COC))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exclamation") Mark-TheWord
 (and (isa :NOUN ExclamationPoint-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exclamation-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (QUO infoTransferred) (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn in) genericPathway-Partial)
    ((PPFn about) infoTransferred) (QUO infoTransferred) (Sfin infoTransferred)
    ((PPFn from) performedBy) ((PPFn of) infoTransferred performedBy)
    ((PPFn at) temporallyIntersects) (NP situationTopic)
    ((PPFn over) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 0)) ((2 0 0)) ((1 6 1)) ((0 1 0)) ((0 0 0)) ((1 6 0)) ((1 1 0))
   ((1 0 0)) ((0 1 0) (1 8 0)) ((1 4 0) (2 0 0)) ((0 1 0) (1 6 0))
   ((1 1 0) (2 0 0)) ((1 0 0) (1 7 0)) ((1 0 0) (2 0 0)) ((1 0 0) (1 6 0))
   ((1 0 0) (1 2 0)) ((1 0 0) (1 0 0)) ((1 0 0) (1 3 0) (1 5 0))
   ((0 1 0) (1 0 0) (1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Exclusion-TheWord (and (isa :NOUN Exclusion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Excommunication-TheWord
 (and (isa :NOUN ExpellingFromMembership)) (frame FN_Exclude_member)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Excoriation-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate (TheList (:GEN (Poss communicatorOfInfo))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Excrement-TheWord (and (isa :NOUN Feces))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Excursion-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip)) (:OBJECT (NP to-Generic))
   (:OBLIQUE-OBJECT ((PPFn around) situationLocation)
    ((PPFn near) situationLocation) ((PPFn throughout) situationLocation)
    ((PPFn with) fe_co-participant) ((PPFn into) to-Generic)
    ((PPFn to) to-Generic) ((PPFn on) to-Generic by-Underspecified)
    ((PPFn by) deviceTypeUsed) (VPto purposeOfEvent)
    ((PPFn for) purposeOfEvent) ((PPFn from) from-Generic)
    (NP duration temporallyIntersects)
    (AJP fe_descriptor duration frequencyOfEvent fe_manner purposeOfEvent
     temporallyIntersects)
    ((PPFn in) situationLocation deviceTypeUsed temporallyIntersects)
    (N duration deviceTypeUsed purposeOfEvent temporallyIntersects
     travellerInTrip)
    ((PPFn of) travellerInTrip))
   (:GAP (INI deviceTypeUsed from-Generic travellerInTrip)
    (DNI to-Generic travellerInTrip))
   (:GEN (Poss duration travellerInTrip))))
 (groupPatterns
  (TheSet ((2 15 0)) ((2 13 2)) ((2 8 0)) ((2 9 0)) ((2 14 2)) ((2 12 4))
   ((2 13 1)) ((2 7 0)) ((2 14 1)) ((2 6 1)) ((0 0 0)) ((2 5 0)) ((2 4 0))
   ((4 0 0)) ((2 11 0)) ((2 14 0)) ((2 2 0)) ((2 13 0)) ((2 0 0))
   ((2 14 3) (4 0 1)) ((2 10 0) (4 0 1)) ((2 13 2) (2 14 2)) ((2 4 0) (4 0 1))
   ((2 5 0) (2 12 5)) ((2 5 0) (2 9 0)) ((2 12 2) (4 0 1)) ((2 12 2) (2 15 0))
   ((2 11 0) (4 0 1)) ((2 5 0) (2 14 0)) ((2 5 0) (2 12 1)) ((2 4 0) (2 12 1))
   ((1 0 0) (2 12 0)) ((2 3 0) (4 0 1)) ((2 8 0) (2 12 3) (4 0 1))
   ((2 5 0) (2 10 0) (4 0 1)) ((2 5 0) (2 7 0) (2 8 0))
   ((2 5 0) (2 12 3) (4 0 1)) ((2 4 0) (2 14 0) (2 14 4))
   ((2 1 0) (2 13 0) (2 14 4)) ((0 0 0) (0 0 0) (2 6 0) (2 12 2))
   ((2 11 1) (2 12 4) (2 13 0) (2 15 0)))))

(FNNounSemtrans (TheList) Execration-TheWord
 (and (isa :NOUN CommunicationAct-Single)
      (topicOfInfoTransfer :NOUN ?Evaluating1) (isa ?Evaluating1 Evaluating))
 (frame FN_Judgment_communication) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Execution-TheWord
 (and (isa :NOUN Execution-Judicial)) (frame FN_Execution)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn of) victim)
    ((PPFn for) victim (InverseBinaryPredicateFn explains-Generic))
    (NP (InverseBinaryPredicateFn explains-Generic))
    (N victim instrument-Generic) (A fe_manner) ((PPFn before) fe_manner)
    ((PPFn by) perpetrator by-Underspecified) ((PPFn in) eventOccursAt))
   (:GAP (DEN fe_execution) (INI victim perpetrator) (DNI victim perpetrator))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 6 1)) ((1 5 0)) ((1 4 0)) ((1 3 1)) ((1 1 1)) ((3 0 0))
   ((1 0 0)) ((1 1 0)) ((0 0 0)) ((1 6 1) (3 0 0)) ((1 0 0) (1 4 0))
   ((1 1 1) (3 0 0)) ((1 0 0) (1 1 1)) ((1 6 0) (3 0 0)) ((1 0 0) (1 6 0))
   ((1 3 0) (1 6 0)) ((1 0 0) (1 7 0)))))

(FNNounSemtrans (TheList) Executioner-TheWord (and (isa :NOUN Executioner))
 (frame FN_Execution)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator)) (:OBLIQUE-OBJECT (NP perpetrator))
   (:GAP (DNI victim) (INI victim))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "executive") Department-TheWord
 (and (isa :NOUN ExecutiveDepartment-UnitedStates)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Executive-TheWord (and (isa :NOUN Executive))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Executive-TheWord
 (and (isa :NOUN Executive-PublicOfficial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exemplum-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exercise") Bike-TheWord
 (and (isa :NOUN ExerciseBike)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exercise") Outfit-TheWord
 (and (isa :NOUN ExerciseOutfit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exercise") Regimen-TheWord
 (and (isa :NOUN ExerciseRegimen)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exercise-TheWord (and (isa :NOUN Exercising))
 (frame FN_Exercising)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT
    (AJP actorPartsInvolved frequencyOfEvent fe_manner eventOccursAt
     fe_subtype)
    (N by-Underspecified fe_subtype))
   (:GAP (INI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 0 4)) ((1 0 3)) ((1 1 0)) ((1 0 2)) ((1 0 0)) ((3 0 0))
   ((0 0 0)) ((0 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Exercise-TheWord
 (and (isa :NOUN Practicing-Preparing)) (frame FN_Practice)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn with) by-Underspecified)
    (A fe_occasion)
    (N objectActedOn duration fe_manner by-Underspecified fe_occasion)
    ((PPFn in) fe_occasion eventOccursAt) ((PPFn from) eventOccursAt)
    (AJP performedBy fe_iterations fe_manner by-Underspecified purposeOfEvent)
    ((PPFn to) temporallyIntersects))
   (:GAP (DEN objectActedOn) (CNI performedBy) (DNI objectActedOn performedBy)
    (INI performedBy fe_occasion))
   (:NOUN (N objectActedOn))))
 (groupPatterns
  (TheSet ((1 6 4)) ((0 0 0)) ((1 3 0)) ((1 4 0)) ((1 3 4)) ((1 2 0)) ((1 6 3))
   ((1 3 3)) ((1 0 0) (1 6 4)) ((0 0 1) (1 4 1)) ((0 0 0) (1 4 0))
   ((1 3 1) (3 0 0)) ((1 5 0) (1 6 0) (1 6 2))
   ((0 0 1) (1 1 0) (1 3 2) (1 3 4)) ((0 0 1) (1 2 0) (1 6 1) (1 7 0))
   ((0 0 1) (0 0 1) (1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList) Exercise-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exfoliant") Scrub-TheWord
 (and (isa :NOUN ExfoliantScrub)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exhalation-TheWord
 (and (isa :NOUN Exhaling-BreathingOut)) (frame FN_Breathing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) doneBy) (AJP fe_manner))
   (:GAP (DEN primaryObjectMoving))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Exhalation-TheWord (and (isa :NOUN Exhaling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exhaust") System-TheWord
 (and (isa :NOUN VehicleExhaustSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exhaustion-TheWord
 (and (isa :NOUN LevelOfExhaustion)) (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn in) eventAffectsBodyPart) (AJP fe_degree fe_parameter))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((1 0 0)) ((2 0 0)) ((0 0 0)) ((1 2 0))
   ((1 2 0) (1 2 1)) ((1 2 0) (2 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Exhibitionism-TheWord
 (and (isa :NOUN Exhibitionism-TheAction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exhilaration-TheWord (and (isa :NOUN Excitement))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree)
    ((PPingFn of) (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Existence-TheWord (and (isa :NOUN SomethingExisting))
 (frame FN_Existence)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn in) eventOccursAt)
    (A hasState) ((PPFn as) hasState))
   (:GAP (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)) ((0 2 0) (0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Exit-TheWord (and (isa :NOUN LeavingAPlace))
 (frame FN_Departing)
 (bindingTemplate
  (TheList (:SUBJECT (NP transferredThing))
   (:OBLIQUE-OBJECT (AJP fe_manner) (Sub temporallyIntersects))
   (:GAP (DNI from-Generic))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Exodus-TheWord
 (and (isa :NOUN (GroupActivityFn LeavingAPlace))) (frame FN_Departing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exoskeleton-TheWord (and (isa :NOUN Exoskeleton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exothermic") Reaction-TheWord
 (and (isa :NOUN ExothermicReaction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "expanding") File-TheWord
 (and (isa :NOUN ExpandingFileFolder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expanse-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed) (N fe_shape_prop stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 3 1)) ((0 0 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Expansion-TheWord (and (isa :NOUN GrowthEvent))
 (frame FN_Expansion)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfStateChange))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Expectation-TheWord (and (isa :NOUN Expectation))
 (frame FN_Expectation)
 (bindingTemplate
  (TheList
   (:GAP (INC subjectOfMentalSituation)
    (INI subjectOfMentalSituation fe_phenomenon) (DNI situationTopic))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expectorant-TheWord (and (isa :NOUN Expectorant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expedition-TheWord (and (isa :NOUN Expedition-Team))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expedition-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn on) situationLocation)
    ((PPFn with) fe_co-participant) ((PPFn to) to-Generic)
    ((PPFn into) to-Generic) ((PPFn by) deviceTypeUsed)
    (AJP situationLocation duration frequencyOfEvent purposeOfEvent)
    (VPto purposeOfEvent)
    ((PPFn in) situationLocation duration purposeOfEvent temporallyIntersects)
    (N situationLocation duration purposeOfEvent temporallyIntersects)
    ((PPFn later) temporallyIntersects) (AVP duration temporallyIntersects)
    (NP temporallyIntersects) (Sinterrog temporallyIntersects)
    ((PPFn for) travellerInTrip)
    (A situationLocation to-Generic travellerInTrip)
    ((PPFn of) temporallyIntersects travellerInTrip))
   (:GEN (Poss duration temporallyIntersects travellerInTrip))))
 (groupPatterns
  (TheSet ((1 15 1)) ((0 0 0)) ((1 8 3)) ((1 6 0)) ((1 8 2)) ((1 7 1))
   ((1 2 0)) ((1 3 0)) ((2 0 0)) ((1 8 1)) ((1 7 0)) ((1 8 0))
   ((1 15 0) (2 0 2)) ((1 8 3) (1 15 1)) ((1 6 0) (2 0 2)) ((0 0 0) (1 6 0))
   ((0 0 0) (1 7 2)) ((1 7 2) (1 14 2)) ((0 0 0) (1 8 2)) ((1 5 3) (1 13 0))
   ((1 8 2) (2 0 1)) ((1 8 2) (1 11 0)) ((0 0 0) (1 10 0)) ((1 2 0) (2 0 2))
   ((0 0 0) (1 2 0)) ((1 3 0) (2 0 2)) ((1 14 1) (2 0 2)) ((1 2 0) (1 7 3))
   ((1 2 0) (1 8 3)) ((1 2 0) (1 6 0)) ((1 5 2) (1 13 0)) ((1 3 0) (1 5 1))
   ((1 7 0) (1 8 3)) ((1 8 0) (1 15 0)) ((1 0 0) (1 8 2)) ((1 7 0) (1 8 2))
   ((1 5 3) (1 7 0)) ((0 0 0) (1 2 0) (1 15 0)) ((1 2 0) (1 7 3) (2 0 2))
   ((1 3 0) (1 4 0) (1 5 2)) ((1 2 0) (1 7 3) (1 8 1))
   ((0 0 0) (1 14 0) (2 0 2)) ((1 7 3) (1 8 0) (2 0 2))
   ((1 5 0) (1 7 3) (2 0 2)) ((1 14 0) (1 15 0) (2 0 2))
   ((0 0 0) (1 7 3) (1 12 0) (2 0 2)) ((0 0 0) (1 2 0) (1 6 0) (1 10 1))
   ((1 2 0) (1 8 2) (1 9 0) (2 0 2)) ((0 0 0) (1 1 0) (1 2 0) (1 8 2)))))

(FNNounSemtrans (TheList) Expense-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance cost TemporalThing :NOUN))
 (frame FN_Expensiveness)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N objectOfPossessionTransfer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Experience-TheWord (and (isa :NOUN Perceiving))
 (frame FN_Perception_experience)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn of) doneBy) (NP fe_phenomenon)
    ((PPFn as) fe_phenomenon))
   (:GAP (INI doneBy) (DNI fe_phenomenon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 2 0) (3 0 0)))))

(FNNounSemtrans (TheList) Experiment-TheWord (and (isa :NOUN Experiment))
 (frame FN_Experimentation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_experimenter))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn by) fe_experimenter)
    ((PPFn at) eventOccursAt) ((PPFn on) patientTreated)
    ((PPFn in) temporallyIntersects)
    ((PPFn with) patientTreated evaluee-Direct))
   (:GAP (DEN fe_experiment) (CNI fe_control_group fe_experimenter)
    (DNI fe_experimenter patientTreated))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 3 0)) ((1 5 0)) ((1 2 0)) ((1 0 0)) ((0 0 0) (1 5 1))
   ((1 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Expert-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (A fe_knowledge) ((PPFn in) fe_knowledge)
    ((PPFn on) fe_knowledge) ((PPingFn on) fe_knowledge) (NP affectedAgent)
    (AJP fe_knowledge hasSkill) (N fe_focal_participant fe_knowledge hasSkill)
    ((PPFn at) hasSkill) ((PPingFn at) hasSkill) ((PPingFn in) hasSkill))
   (:GAP (DEN fe_focal_participant affectedAgent)
    (DNI fe_knowledge affectedAgent)
    (INI fe_behavior_product fe_knowledge hasSkill))
   (:NOUN (N affectedAgent hasSkill)) (:APPOSITIVE (NP affectedAgent))))
 (groupPatterns
  (TheSet ((1 7 0)) ((3 0 1)) ((1 6 2)) ((1 5 1)) ((1 2 0)) ((1 1 0)) ((0 0 0))
   ((1 4 0)) ((1 5 0)) ((1 6 1)) ((1 0 0)) ((1 6 0)) ((0 0 0) (1 9 0))
   ((0 0 0) (1 8 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 6 1)) ((1 6 1) (4 0 0)) ((1 6 1) (3 0 0)) ((0 0 0) (1 5 0))
   ((0 0 0) (0 0 0) (1 8 0)) ((0 0 0) (0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Expertise-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent hasSkill))
   (:OBLIQUE-OBJECT (AVP fe_degree) ((PPFn with) fe_focal_participant)
    (A fe_knowledge) ((PPFn about) fe_knowledge) ((PPFn on) fe_knowledge)
    ((PPFn of) affectedAgent)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    ((PPFn in) fe_knowledge hasSkill) ((PPingFn in) hasSkill)
    (AJP fe_degree fe_focal_participant fe_knowledge hasSkill)
    (N fe_focal_participant fe_knowledge hasSkill)
    (VPto fe_behavior_product hasSkill) ((PPingFn for) hasSkill)
    ((PPFn for) hasSkill))
   (:GAP (INI fe_knowledge affectedAgent hasSkill) (DNI affectedAgent hasSkill)
    (2nd hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 0)) ((0 0 0)) ((1 11 1)) ((1 10 2)) ((1 9 3))
   ((1 4 0)) ((1 10 1)) ((1 9 2)) ((1 2 0)) ((1 10 0)) ((1 9 1))
   ((1 8 0) (3 0 0)) ((1 7 1) (3 0 0)) ((1 13 0) (3 0 0)) ((0 0 1) (3 0 0))
   ((1 10 2) (3 0 0)) ((0 0 0) (1 8 0)) ((0 0 0) (1 12 0)) ((0 0 0) (1 7 1))
   ((0 0 0) (1 9 3)) ((1 6 0) (3 0 0)) ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0))
   ((1 7 0) (3 0 0)) ((1 3 0) (3 0 0)) ((1 10 1) (3 0 0)) ((0 0 0) (1 2 0))
   ((1 1 0) (3 0 0)) ((1 10 0) (3 0 0)) ((0 0 0) (1 0 0) (1 7 1))
   ((0 0 0) (1 8 0) (1 9 0)) ((0 0 0) (1 7 1) (1 9 0))
   ((0 0 0) (1 7 0) (1 9 0)) ((1 1 0) (1 9 0) (3 0 0))
   ((0 0 0) (1 2 0) (1 11 0)))))

(FNNounSemtrans (TheList) Expiation-TheWord
 (and (isa :NOUN MakingAmendsForSomething)) (frame FN_Atonement)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) obligationsViolated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Expiator-TheWord
 (and (isa :NOUN MakingAmendsForSomething)) (frame FN_Atonement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Explanation-TheWord
 (and (isa :NOUN Explaining-CommunicationAct)) (frame FN_Explaining_the_facts)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_state_of_affairs))
   (:OBLIQUE-OBJECT (AJP fe_manner)) (:GAP (INI fe_fact))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Explanation-TheWord
 (and (isa :NOUN (MakingAbstractFn Explanation))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Explanation-TheWord (and (isa :NOUN Explanation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Explanation-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) (AVP fe_manner)
    ((PPFn in) genericPathway-Partial) ((PPFn by) performedBy)
    ((PPFn from) performedBy) ((PPFn about) situationTopic)
    ((PPFn to) recipientOfInfo situationTopic) ((PPFn of) situationTopic)
    (Sinterrog situationTopic) ((PPFn for) situationTopic))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 9 0)) ((1 5 0)) ((1 4 0)) ((0 0 1)) ((1 2 0)) ((1 0 0))
   ((1 6 0)) ((0 0 1) (1 7 0)) ((1 2 0) (1 8 0)) ((1 0 0) (1 7 0))
   ((1 0 0) (1 5 0)) ((0 0 1) (1 1 0)) ((1 0 0) (1 3 0)) ((0 0 1) (1 0 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 5 0) (3 0 0)) ((1 0 0) (1 0 0) (1 5 0))
   ((1 0 0) (1 6 0) (1 6 1)) ((1 0 0) (1 5 0) (1 6 0)))))

(FNNounSemtrans (TheList) Explorer-TheWord (and (isa :NOUN Explorer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Explosion-TheWord (and (isa :NOUN Explosion))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_initial_correlate)
    (N fe_attribute objectOfStateChange)
    ((PPFn of) fe_attribute objectOfStateChange)
    ((PPFn into) objectOfStateChange) (AJP fe_attribute fe_degree fe_manner)
    ((PPFn in) fe_attribute objectOfStateChange eventOccursAt)
    ((PPFn on) eventOccursAt) ((PPFn during) temporallyIntersects))
   (:GAP (2nd objectOfStateChange)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 5 0) (2 0 0)) ((0 5 0) (0 6 0)) ((0 5 0) (0 5 2))
   ((0 4 2) (0 5 0)) ((0 1 0) (0 2 1)) ((0 1 0) (0 1 1)) ((0 0 0) (0 5 0))
   ((0 4 1) (0 5 0)) ((0 2 0) (0 3 0) (0 7 0)) ((0 4 0) (0 5 1) (0 5 2)))))

(FNNounSemtrans (TheList) Explosion-TheWord (and (isa :NOUN Explosion))
 (frame FN_Explosion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) explosiveDeviceUsed) (AJP fe_degree fe_manner)
    ((PPFn outside) eventOccursAt) ((PPFn around) eventOccursAt)
    ((PPFn on) eventOccursAt) ((PPFn through) eventOccursAt)
    (N explosiveDeviceUsed fe_manner eventOccursAt temporallyIntersects)
    ((PPFn after) temporallyIntersects) (Sub temporallyIntersects)
    (AVP temporallyIntersects) ((PPFn in) eventOccursAt temporallyIntersects)
    (NP temporallyIntersects) ((PPFn at) eventOccursAt temporallyIntersects)
    ((PPFn during) temporallyIntersects) ((PPFn within) temporallyIntersects))
   (:GAP (2nd victim)) (:NOUN (AJP fe_manner))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 8 0)) ((3 0 0)) ((0 13 0)) ((0 12 1)) ((0 11 0)) ((0 9 0))
   ((0 5 0)) ((0 4 0)) ((0 10 0)) ((0 12 0)) ((0 3 0)) ((0 6 2)) ((0 6 1))
   ((0 1 1)) ((0 6 0)) ((0 1 0)) ((0 13 0) (0 14 0)) ((0 6 3) (0 10 1))
   ((0 8 0) (0 10 0)) ((0 10 0) (3 0 0)) ((0 7 0) (0 12 0)) ((0 12 0) (2 0 0))
   ((0 6 0) (0 6 3)) ((0 2 0) (0 6 0)) ((0 1 0) (0 12 0))
   ((0 0 0) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList "explosive") Device-TheWord
 (and (isa :NOUN ExplosiveDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Explosive-TheWord (and (isa :NOUN ExplosiveMaterial))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A activeIngredientsOfType) (AJP activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Export-TheWord (and (isa :NOUN DistributionEvent))
 (frame FN_Exporting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Export-TheWord
 (and (isa :NOUN ImportExportEvent) (isa :NOUN TransferOut))
 (frame FN_Import_export_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Exportation-TheWord
 (and (isa :NOUN DistributionEvent)) (frame FN_Exporting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer)
    ((PPFn to) toLocation))
   (:GEN (Poss objectOfPossessionTransfer))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Exporter-TheWord
 (and (isa :NOUN ImportExportOrganization)) (frame FN_Import_export_scenario)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Express-TheWord (and (isa :NOUN BulletTrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expression-TheWord (and (isa :NOUN Encoding))
 (frame FN_Encoding)
 (bindingTemplate
  (TheList (:SUBJECT (NP genericPathway-Partial infoTransferred performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial)
    (N genericPathway-Partial) ((PPFn across) genericPathway-Partial)
    ((PPFn on) genericPathway-Partial) (NP infoTransferred)
    ((PPFn of) infoTransferred)
    (AJP fe_manner genericPathway-Partial infoTransferred)
    ((PPFn for) infoTransferred) ((PPingFn of) infoTransferred)
    ((PPFn by) performedBy)
    ((PPFn through) genericPathway-Partial performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 8 0)) ((1 5 0)) ((1 7 0)) ((1 4 0)) ((1 10 0))
   ((1 3 0)) ((1 0 0)) ((1 2 0)) ((1 1 0)) ((1 6 1)) ((1 6 0))
   ((0 0 2) (1 7 0)) ((0 0 1) (1 10 1)) ((0 0 1) (1 9 0)) ((0 0 2) (1 4 0))
   ((1 5 0) (1 6 2)) ((1 6 1) (2 0 0)) ((0 0 1) (1 10 0)) ((0 0 1) (1 0 0))
   ((1 0 0) (1 4 0)) ((0 0 0) (1 5 0)) ((1 6 1) (1 10 0)) ((1 6 0) (2 0 0))
   ((1 5 0) (1 6 0)) ((1 0 0) (1 6 0)) ((0 0 2) (1 4 0) (1 10 0))
   ((0 0 2) (1 4 0) (1 6 1)) ((1 5 0) (1 6 0) (2 0 0))
   ((0 0 1) (1 6 0) (1 9 0)) ((0 0 2) (1 4 0) (1 6 0))
   ((0 0 1) (1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Expression-TheWord
 (and (isa :NOUN AnnouncingPublicly)) (frame FN_Expressing_publicly)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expression-TheWord
 (and (isa :NOUN MakingFacialExpression)) (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing subRegions))
   (:OBLIQUE-OBJECT ((PPingFn of) fe_internal_cause) ((PPFn on) subRegions)
    ((PPFn off) subRegions) ((PPFn in) subRegions)
    ((PPFn of) fe_internal_cause subRegions)
    (AJP fe_conveyed_emotion fe_manner subRegions))
   (:GAP (DEN fe_expression) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 5 2)) ((1 1 0)) ((3 0 0)) ((1 4 0)) ((1 5 0))
   ((1 5 2) (3 0 0)) ((1 5 1) (3 0 0)) ((1 0 0) (1 1 0)) ((1 4 0) (1 4 1))
   ((1 3 0) (1 4 0)) ((0 0 1) (1 4 0)) ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0))
   ((1 1 0) (1 5 0)) ((1 2 0) (1 5 0)) ((1 5 0) (3 0 0)) ((0 0 0) (1 5 0))
   ((0 0 0) (1 4 0) (1 5 1)) ((0 0 0) (1 1 0) (1 5 0))
   ((1 1 0) (1 5 0) (1 5 0)) ((0 0 0) (1 5 0) (1 5 0)))))

(FNNounSemtrans (TheList) Expressway-TheWord (and (isa :NOUN Freeway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) ((PPFn into) to-Generic)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Expulsion-TheWord
 (and (isa :NOUN ExpellingFromMembership)) (frame FN_Exclude_member)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expulsion-TheWord (and (isa :NOUN EmittingAnObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Expulsion-TheWord (and (isa :NOUN RemovingSomething))
 (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP doneBy) ((PPFn by) doneBy) ((PPFn to) to-Generic)
    (N fe_manner) ((PPFn through) trajectory-Complete)
    ((PPFn from) from-Generic) ((PPFn of) objectRemoved))
   (:GAP (CNI doneBy) (INI from-Generic) (DNI from-Generic objectRemoved))
   (:GEN (Poss objectRemoved))))
 (groupPatterns
  (TheSet ((0 5 0)) ((2 0 0)) ((0 6 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 6 0))
   ((0 5 0) (2 0 0)) ((0 5 0) (0 6 0)) ((0 0 0) (0 6 0)) ((0 4 0) (0 6 0))
   ((0 3 0) (0 6 0)) ((0 2 0) (0 6 0)))))

(FNNounSemtrans (TheList "extension") Cord-TheWord
 (and (isa :NOUN PowerCordExtension)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "extension") Telephone-TheWord
 (and (isa :NOUN ExtensionTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extension-TheWord
 (and (isa :NOUN CycLExpression)
      (relationExistsInstance meaningSentenceOfTextType ObjectType :NOUN))
 (frame FN_Linguistic_meaning) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "exterior") Paint-TheWord
 (and (isa :NOUN HousePaint-Exterior)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extermination-TheWord
 (and (isa :NOUN (GroupEventOfTypeFn KillingByOrganism))) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified victim))
   (:OBLIQUE-OBJECT ((PPFn by) killers) (N fe_manner)
    ((PPFn in) by-Underspecified) ((PPFn of) victim) ((PPFn against) victim)
    ((PPFn for) victim))
   (:GAP (DNI killers victim) (INI victim))
   (:NOUN (NP killers by-Underspecified)) (:GEN (Poss killers victim))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 1 0)) ((4 0 0)) ((1 0 0)) ((4 0 1)) ((1 3 0))
   ((3 0 1)) ((1 2 0) (1 3 0)) ((0 0 1) (1 2 0)) ((3 0 0) (3 0 0))
   ((0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList "external" "carotid") Artery-TheWord
 (and (isa :NOUN ExternalCarotidArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "external" "combustion") Engine-TheWord
 (and (isa :NOUN ExternalCombustionEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "external" "iliac") Artery-TheWord
 (and (isa :NOUN ExternalIliacArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "external" "iliac") Vein-TheWord
 (and (isa :NOUN ExternalIliacVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "external" "jugular") Vein-TheWord
 (and (isa :NOUN ExternalJugularVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extortion-TheWord (and (isa :NOUN Extortion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extraction-TheWord
 (and (isa :NOUN RemovingSomething)) (frame FN_Removing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) from-Generic) (N objectRemoved))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Extradition-TheWord
 (and (isa :NOUN GeneralizedTransfer)) (frame FN_Extradition)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_suspect))
   (:OBLIQUE-OBJECT ((PPFn from) fe_current_jurisdiction)
    ((PPFn in) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn on) (InverseBinaryPredicateFn explains-Generic) ruleSystemUsed)
    (VPto purposeOfEvent)
    ((PPFn to) jurisdictionalAuthorityOfCase fe_current_jurisdiction
     purposeOfEvent)
    ((PPFn for) (InverseBinaryPredicateFn explains-Generic) purposeOfEvent)
    ((PPFn of) fe_suspect) (AJP fe_depictive fe_manner temporallyIntersects))
   (:GAP (2nd (InverseBinaryPredicateFn explains-Generic))
    (INI performedBy jurisdictionalAuthorityOfCase fe_current_jurisdiction
     fe_suspect)
    (DNI jurisdictionalAuthorityOfCase fe_current_jurisdiction fe_suspect))
   (:GEN (Poss fe_suspect))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 6 0)) ((1 2 0)) ((1 2 1)) ((1 5 0)) ((1 4 0))
   ((1 4 2) (3 0 0)) ((1 2 0) (3 0 0)) ((1 1 0) (1 6 0)) ((0 0 0) (1 4 2))
   ((1 0 0) (3 0 0)) ((1 4 0) (3 0 0)) ((1 4 0) (1 6 0)) ((0 0 0) (1 4 0))
   ((1 3 0) (1 4 0)) ((1 4 0) (1 4 2)) ((1 7 2) (3 0 0)) ((1 0 0) (1 6 0))
   ((1 2 0) (1 4 0)) ((1 5 1) (1 7 1) (3 0 0)) ((1 0 0) (1 7 0) (3 0 0))
   ((1 3 0) (1 4 0) (3 0 0)) ((1 0 0) (1 4 0) (1 6 0))
   ((1 3 0) (1 4 1) (1 6 0)))))

(FNNounSemtrans (TheList "extraterrestrial") Being-TheWord
 (and (isa :NOUN Extraterrestrial)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extremity-TheWord
 (and (isa :NOUN Appendage-AnimalBodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extrovert-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance socialParticipants SocializingALot :NOUN))
 (frame FN_Sociability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Extrusion-TheWord (and (isa :NOUN Extruding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eye") Chart-TheWord (and (isa :NOUN EyeChart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eye") Doctor-TheWord (and (isa :NOUN Optometrist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eye") Drop-TheWord (and (isa :NOUN EyeDropSolution))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eye") Exam-TheWord (and (isa :NOUN EyeTest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eye") Lotion-TheWord
 (and (isa :NOUN EyeSkinCareProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eye") Socket-TheWord
 (and (isa :NOUN Orbit-BoneStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eye-TheWord (and (isa :NOUN Eye))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (AJP fe_descriptor) (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn in) fe_attachment)
    (NP actorPartsInvolved fe_descriptor)
    ((PPFn of) orientation ownerOfProprietaryThing)
    (AJP fe_descriptor orientation ownerOfProprietaryThing)
    (N fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss actorPartsInvolved ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 1)) ((2 2 1)) ((0 0 0)) ((2 4 1)) ((2 3 2)) ((2 2 0)) ((2 4 0))
   ((2 3 0)) ((2 2 1) (2 3 1)) ((2 4 0) (4 0 1)) ((0 0 0) (2 4 0))
   ((2 3 0) (4 0 1)) ((2 2 1) (2 3 0)) ((0 0 0) (2 3 0)) ((2 3 0) (2 3 0))
   ((2 3 0) (4 0 0)) ((0 0 0) (0 0 0) (2 3 0)) ((1 0 0) (1 1 0) (2 1 0))
   ((2 3 0) (2 4 0) (4 0 1)) ((2 3 0) (2 3 0) (4 0 1))
   ((2 0 0) (2 3 0) (4 0 1)) ((2 1 1) (2 1 1) (2 3 0) (4 0 1)))))

(FNNounSemtrans (TheList "eyebrow") Pencil-TheWord
 (and (isa :NOUN EyebrowPencil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eyebrow-TheWord (and (isa :NOUN Eyebrow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eyeglass") Frame-TheWord
 (and (isa :NOUN EyeglassFrames)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eyeglass") Corrective-TheWord
 (and (isa :NOUN EyeglassLens-Corrective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "eyeglass") Lens-TheWord
 (and (isa :NOUN EyeglassLens)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eyeglasses-TheWord (and (isa :NOUN Eyeglasses))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eyelash-TheWord (and (isa :NOUN Eyelash))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eyelid-TheWord (and (isa :NOUN Eyelid))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Eyeliner-TheWord (and (isa :NOUN Eyeliner))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN decorativeObjectsApplied))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Eyeliner-TheWord (and (isa :NOUN Eyeliner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eyeshadow-TheWord (and (isa :NOUN EyeShadow))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor))
   (:GAP (DEN decorativeObjectsApplied))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Eyeshadow-TheWord (and (isa :NOUN EyeShadow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Eyot-TheWord (and (isa :NOUN (SmallFn Island)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) parts)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fable-TheWord (and (isa :NOUN Fable)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) beneficiary)
    (AJP authorOfLiteraryWork-CW fe_genre) ((PPFn from) startingDate)
    (N fe_genre fe_title) ((PPFn of) fe_text situationTopic))
   (:GAP (DEN authorOfLiteraryWork-CW fe_text))
   (:GEN (Poss authorOfLiteraryWork-CW fe_genre))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 1)) ((0 2 0)) ((2 0 1)) ((0 1 1)) ((0 0 0)) ((2 0 0))
   ((0 4 0)) ((0 1 0)) ((0 4 1) (2 0 0)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList "fabric") Softener-TheWord
 (and (isa :NOUN FabricSoftener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fabric-TheWord (and (isa :NOUN Cloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fabrication-TheWord (and (isa :NOUN Manufacturing))
 (frame FN_Manufacturing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N productsCreated) ((PPFn of) productsCreated)
    (NP productsCreated))
   (:GAP (INI fe_factory performedBy) (CNI performedBy))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Fabrication-TheWord (and (isa :NOUN Assembling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fabulist-TheWord
 (and (isa :NOUN Fabulist-Storyteller)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Facade-TheWord
 (and (isa :NOUN Architectural_Structure)) (frame FN_Architectural_part)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "face") Card-TheWord
 (and (isa :NOUN Face-PlayingCardType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "face") Lift-TheWord (and (isa :NOUN FaceLift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "face") Paint-TheWord (and (isa :NOUN FacePaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "face") Powder-TheWord (and (isa :NOUN MakeupPowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Face-TheWord (and (isa :NOUN FaceOfAnimal))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP actorPartsInvolved ownerOfProprietaryThing))
   (:OBJECT (AJP fe_descriptor))
   (:OBLIQUE-OBJECT (NP actorPartsInvolved) (AJP fe_descriptor)
    (N fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 0 0)) ((2 0 0)) ((4 0 0)) ((2 4 0)) ((0 0 1)) ((2 3 0)) ((2 1 0))
   ((2 2 0) (4 0 0)) ((1 0 0) (4 0 0)) ((2 1 0) (4 0 0)) ((2 1 0) (2 4 0))
   ((0 0 1) (2 1 0)) ((2 1 0) (2 1 0) (4 0 0)) ((0 0 1) (2 1 0) (2 1 0)))))

(FNNounSemtrans (TheList) Face-TheWord (and (isa :NOUN MakingFacialExpression))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_conveyed_emotion duration)
    ((PPFn at) fe_external_cause))
   (:GAP (INI fe_conveyed_emotion) (DEN fe_expression)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 1))
   ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Face-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_part_prop) (AJP fe_part_prop)
    (N (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "facial") Artery-TheWord
 (and (isa :NOUN FacialArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Bar-TheWord (and (isa :NOUN ComplexionSoap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Cleanser-TheWord
 (and (isa :NOUN FacialCleanser)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Mask-TheWord
 (and (isa :NOUN FacialMaskProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Moisturizer-TheWord
 (and (isa :NOUN FacialMoisturizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Soap-TheWord
 (and (isa :NOUN ComplexionSoap)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Facial-TheWord
 (and (isa :NOUN FacialCosmeticTreatment)) (frame FN_Grooming)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AVP frequencyOfEvent))
   (:GAP (CNI doneBy) (DEN actorPartsInvolved))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "facial") Nerve-TheWord (and (isa :NOUN FacialNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Tissue-TheWord
 (and (isa :NOUN FacialTissue)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "facial") Vein-TheWord (and (isa :NOUN FacialVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Facility-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT (VPfin fe_descriptor)
    ((PPFn at) fe_container_possessor fe_relative_location)
    ((PPFn in) fe_container_possessor fe_relative_location)
    ((PPFn within) fe_relative_location)
    ((PPFn throughout) fe_relative_location) ((PPFn near) fe_relative_location)
    ((PPFn on) fe_container_possessor fe_relative_location)
    (N fe_container_possessor fe_descriptor eventLocale
     (InverseBinaryPredicateFn nameString) fe_relative_location locationUse)
    ((PPFn for) fe_formational_cause locationUse)
    (A fe_container_possessor fe_descriptor fe_formational_cause
     fe_relative_location locationUse)
    (AJP fe_container_possessor fe_descriptor fe_relative_location locationUse)
    (VPto locationUse) (VPing fe_descriptor locationUse)
    (Srel fe_descriptor locationUse))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString))
    (INI locationUse) (CNI locationUse) (DNI locationUse))
   (:GEN
    (Poss fe_container_possessor fe_formational_cause fe_relative_location))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 8 1)) ((1 10 3)) ((1 13 1)) ((1 9 4)) ((1 7 4))
   ((1 4 0)) ((1 6 1)) ((1 7 5)) ((1 2 1)) ((1 10 1)) ((1 9 1)) ((1 0 0))
   ((3 0 0)) ((1 7 0)) ((1 10 0)) ((1 3 0) (1 7 5)) ((1 7 5) (1 8 1))
   ((1 7 5) (3 0 2)) ((1 5 0) (1 7 5)) ((1 2 1) (1 7 5)) ((1 2 1) (1 9 4))
   ((1 7 5) (1 10 2)) ((1 9 3) (1 9 4)) ((1 2 1) (1 12 1)) ((1 1 1) (1 7 5))
   ((0 0 0) (1 10 2)) ((1 7 2) (1 7 3)) ((1 7 5) (3 0 1)) ((1 7 5) (1 8 0))
   ((1 2 1) (1 9 2)) ((1 7 5) (1 12 0)) ((1 7 1) (1 11 0)) ((1 8 1) (1 10 1))
   ((1 7 5) (1 10 1)) ((1 7 5) (1 9 1)) ((1 9 1) (1 9 4)) ((1 4 0) (1 13 0))
   ((1 10 1) (1 10 2)) ((1 10 1) (1 10 1)) ((1 7 5) (3 0 0)) ((1 10 3) (3 0 0))
   ((1 9 4) (3 0 0)) ((1 2 0) (1 8 1)) ((1 2 0) (1 7 5)) ((1 1 0) (1 8 1))
   ((1 7 0) (1 7 5)) ((1 7 5) (1 10 0)) ((1 7 5) (1 9 0)) ((1 10 1) (3 0 0))
   ((0 0 0) (1 8 1) (1 10 1)) ((1 2 1) (1 10 1) (1 10 3))
   ((1 7 5) (1 10 1) (3 0 0)) ((1 6 0) (1 7 5) (1 10 1))
   ((1 2 0) (1 7 5) (1 10 1)) ((1 7 5) (1 10 0) (1 10 1))
   ((1 3 0) (1 7 1) (1 7 5) (1 8 1)) ((1 1 1) (1 7 5) (1 10 1) (3 0 0)))))

(FNNounSemtrans (TheList) Facility-TheWord (and (isa :NOUN Facility-Construct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Facsimile-TheWord
 (and (isa :NOUN Paper-IBO)
      (relationExistsInstance copyProduced FaxingADocument :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "factory" "built") Home-TheWord
 (and (isa :NOUN FactoryBuiltHome)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Factory-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPed fe_relative_location) (AJP fe_descriptor locationUse)
    (N parts locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 1)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Factory-TheWord (and (isa :NOUN FactoryBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Failing-TheWord (and (isa :NOUN FailingSomething))
 (frame FN_Success_or_failure)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP temporallyIntersects)) (:GAP (INI to-Generic))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Failure-TheWord (and (isa :NOUN FailingSomething))
 (frame FN_Success_or_failure)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPto to-Generic)) (:GAP (DNI doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fair-TheWord (and (isa :NOUN Carnival))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt)
    ((PPFn over) temporallyIntersects) (AJP fe_occasion temporallyIntersects)
    ((PPFn of) fe_occasion temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects)
    (N host (InverseBinaryPredicateFn nameString) fe_occasion eventOccursAt
     clothingStyle temporallyIntersects)
    ((PPFn from) temporallyIntersects))
   (:GAP (INI amongThosePresent) (CNI host) (DEN fe_social_event))
   (:GEN (Poss host eventOccursAt))))
 (groupPatterns
  (TheSet ((1 5 4)) ((1 0 0)) ((1 3 0)) ((1 5 2)) ((1 2 0)) ((1 5 0)) ((1 5 1))
   ((1 0 0) (1 5 4)) ((1 2 0) (1 4 1)) ((1 5 2) (1 5 4)) ((1 0 0) (1 5 2))
   ((1 5 2) (1 5 3)) ((0 0 1) (1 4 0)) ((1 5 2) (3 0 0)) ((0 0 0) (1 4 0))
   ((1 0 0) (1 5 5) (1 6 0)) ((0 0 1) (1 3 1) (1 5 4))
   ((1 3 1) (1 5 0) (1 5 4)) ((1 2 1) (1 4 0) (1 5 2))
   ((1 1 0) (1 4 0) (1 5 2) (3 0 1)))))

(FNNounSemtrans (TheList) Fairness-TheWord (and (isa :NOUN Fairness))
 (frame FN_Fairness_evaluation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fairway-TheWord (and (isa :NOUN Fairway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fairy-TheWord (and (isa :NOUN Fairy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Faith-TheWord
 (and (isa :NOUN Trusting-GrantingPermission)) (frame FN_Trust)
 (bindingTemplate
  (TheList (:GAP (DNI fe_information)) (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Faithful-TheWord
 (and (isa :NOUN (BelieverFn Religion))) (frame FN_People_by_religion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) hasBeliefSystems))
   (:GAP (DEN fe_person) (DNI hasBeliefSystems))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Fake-TheWord
 (and (isa :NOUN ForgingAnOfficialDocument)) (frame FN_Forging)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_forgery))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_standard))
   (:GAP (DEN fe_forgery) (INI doneBy fe_standard) (DNI fe_standard))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Falcon-TheWord (and (isa :NOUN Falcon))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fall-TheWord (and (isa :NOUN DescendingEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn during) fe_correlated_variable)
    ((PPFn with) fe_correlated_variable) ((PPFn of) fe_difference)
    ((PPFn at) fe_correlated_variable fe_final_correlate)
    ((PPFn for) fe_final_correlate) ((PPFn by) fe_final_correlate)
    ((PPFn to) fe_final_correlate fe_final_value)
    ((PPFn since) fe_degree fe_initial_correlate)
    ((PPFn from) fe_initial_correlate fe_initial_value)
    (N fe_attribute objectOfStateChange) ((PPFn across) eventOccursAt)
    (NP fe_attribute fe_difference fe_final_correlate temporallyIntersects)
    ((PPFn in) fe_attribute fe_correlated_variable fe_initial_correlate
     objectOfStateChange temporallyIntersects)
    (AJP situationConstituents fe_correlated_variable fe_degree
     fe_initial_correlate fe_manner rateOfEvent temporallyIntersects))
   (:GAP (INI fe_attribute fe_difference)
    (DNI fe_attribute objectOfStateChange)
    (2nd fe_attribute fe_initial_correlate objectOfStateChange
     temporallyIntersects))
   (:NOUN (NP fe_difference fe_final_value))
   (:GEN (AJP objectOfStateChange)
    (Poss objectOfStateChange temporallyIntersects))
   (:APPOSITIVE (NP fe_degree fe_difference))))
 (groupPatterns
  (TheSet ((1 11 0)) ((4 1 0)) ((1 11 0) (1 11 3)) ((1 11 1) (1 11 3))
   ((1 2 0) (1 10 0)) ((1 2 0) (1 12 0)) ((1 12 3) (1 13 2))
   ((1 12 0) (1 13 2)) ((1 13 1) (4 0 0)) ((1 12 0) (1 13 0))
   ((1 7 1) (1 11 1) (3 0 1)) ((1 5 0) (1 6 1) (1 11 1))
   ((1 12 0) (1 13 4) (1 13 5)) ((1 6 1) (1 8 1) (1 12 3))
   ((1 2 0) (1 12 0) (1 12 4)) ((1 2 0) (1 11 3) (1 12 0))
   ((1 11 3) (1 12 0) (1 13 4)) ((0 0 0) (1 11 1) (1 12 0))
   ((1 9 1) (4 1 1) (5 0 0)) ((1 12 0) (1 13 2) (1 13 3))
   ((1 12 3) (1 12 4) (1 13 2)) ((0 0 0) (1 12 0) (1 13 2))
   ((1 7 1) (1 12 0) (1 13 2)) ((1 6 0) (1 8 0) (1 13 2))
   ((1 6 1) (1 8 1) (1 11 2) (1 12 2)) ((0 0 0) (1 12 0) (1 13 5) (1 13 6))
   ((1 2 0) (1 6 0) (1 8 0) (1 12 0)) ((1 4 0) (1 6 1) (1 11 1) (1 12 0))
   ((1 3 1) (1 6 1) (1 11 1) (1 12 0)) ((1 12 0) (1 13 2) (4 1 0) (5 0 1))
   ((0 0 0) (1 3 0) (1 11 1) (1 12 0)) ((0 0 0) (1 1 0) (1 12 0) (1 13 2))
   ((1 2 0) (1 9 0) (1 12 1) (1 13 2)) ((1 7 0) (1 13 1) (1 13 2) (3 0 0))
   ((1 0 0) (1 6 0) (1 8 1) (1 12 0) (1 13 4)))))

(FNNounSemtrans (TheList) Fall-TheWord (and (isa :NOUN FallSeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fallopian") Tube-TheWord
 (and (isa :NOUN FallopianTube)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fallout") Shelter-TheWord
 (and (isa :NOUN FalloutShelter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fallout-TheWord
 (and (isa :NOUN NuclearFalloutParticle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Falls-TheWord (and (isa :NOUN Waterfall))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn at) fe_relative_location) ((PPFn in) fe_relative_location)
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 3 0)) ((1 1 0) (1 3 1)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Falsehood-TheWord
 (and (isa :NOUN PropositionalInformationThing)
      (relationExistsInstance containsInfoPropositional-IBT Lying :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fame-TheWord
 (and (isa :NOUN (HighAmountFn LevelOfRenown))) (frame FN_Fame)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn with) by-Underspecified)
    ((PPFn throughout) eventOccursAt) (VPing fe_reason)
    ((PPFn as) fe_reason (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    ((PPFn in) temporallyIntersects) (AVP temporallyIntersects)
    ((PPFn during) temporallyIntersects) (AJP fe_degree temporallyIntersects)
    ((PPFn of) objectActedOn temporallyIntersects))
   (:GAP (DNI fe_reason) (INI fe_reason)
    (2nd (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 8 0)) ((0 0 0)) ((1 8 1) (3 0 0)) ((1 6 0) (3 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 7 0) (3 0 0)) ((1 3 0) (1 7 1) (3 0 0)) ((0 0 0) (0 0 0) (1 3 0))
   ((0 0 0) (1 2 0) (1 3 1) (1 5 0)) ((0 0 0) (0 0 0) (1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList "family") Doctor-TheWord
 (and (isa :NOUN FamilyPractitioner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "family") Practitioner-TheWord
 (and (isa :NOUN FamilyPractitioner)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "family") Room-TheWord (and (isa :NOUN FamilyRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Family-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Family-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Family-TheWord (and (isa :NOUN FamilyRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Family-TheWord (and (isa :NOUN Family-Human))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego relatives))
   (:OBLIQUE-OBJECT ((PPFn from) fe_descriptor) ((PPFn in) fe_descriptor)
    ((PPFn through) fe_descriptor) ((PPFn with) fe_descriptor)
    (Srel fe_descriptor) ((PPFn for) fe_ego) (N fe_descriptor relatives)
    ((PPFn of) fe_ego relatives) (AJP fe_descriptor relatives))
   (:GAP (DEN fe_alter fe_ego relatives)) (:GEN (Poss fe_alter fe_ego))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 6 1)) ((1 8 1)) ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 1 0))
   ((1 0 0)) ((1 6 0)) ((1 8 0)) ((3 0 0)) ((3 0 1)) ((1 7 0)) ((1 5 0))
   ((1 6 1) (1 7 1)) ((3 0 1) (3 0 1)) ((0 0 0) (3 0 1)) ((1 8 0) (3 0 1)))))

(FNNounSemtrans (TheList) Family-TheWord (and (isa :NOUN BiologicalFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Family-TheWord
 (and (isa :NOUN FamilyCohabitationUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "family") Tree-TheWord (and (isa :NOUN FamilyTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Famine-TheWord (and (isa :NOUN Famine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fan") Belt-TheWord (and (isa :NOUN FanBelt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fan-TheWord
 (and (isa :NOUN PerceptualAgent-Embodied)
      (relationInstanceExists fanOf :NOUN Agent-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fang-TheWord (and (isa :NOUN Tooth))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (AJP fe_descriptor)
    (N fe_descriptor) ((PPingFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 1 0)) ((1 2 0) (3 0 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Fanzine-TheWord (and (isa :NOUN MagazineSeries))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT (N fe_title situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((1 0 1)) ((4 0 0)) ((1 0 0)) ((0 0 0) (4 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList "far") Left-TheWord
 (and (isa :NOUN LeftWingExtremist)) (frame FN_People_along_political_spectrum)
 (bindingTemplate (TheList (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Far-Left-TheWord (and (isa :NOUN LeftWingExtremist))
 (frame FN_People_along_political_spectrum)
 (bindingTemplate (TheList (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farad-TheWord (and (isa :NOUN Farad)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farewell-TheWord
 (and (isa :NOUN SayingGoodbyeToSomeone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farm-TheWord (and (isa :NOUN FarmTheOrganization))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:GAP (DEN eventLocale) (DNI locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Farmer-TheWord (and (isa :NOUN Farmer))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Farmhand-TheWord (and (isa :NOUN FarmWorker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farmhouse-TheWord (and (isa :NOUN Farmhouse))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farmhouse-TheWord (and (isa :NOUN Farmhouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farming-TheWord (and (isa :NOUN Agriculture))
 (frame FN_Agriculture)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) ((PPFn in) eventOccursAt)
    (N objectActedOn fe_ground eventOccursAt activeIngredientsOfType)
    (A activeIngredientsOfType))
   (:GAP (DNI performedBy objectActedOn) (INI performedBy objectActedOn))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 3 0)) ((0 2 3)) ((0 1 0)) ((0 2 0)) ((0 1 0) (0 2 1))
   ((0 2 0) (0 2 3)) ((0 2 0) (0 2 2)))))

(FNNounSemtrans (TheList) Faro-TheWord (and (isa :NOUN Faro-TheGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Farsightedness-TheWord
 (and (isa :NOUN Farsightedness)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fart-TheWord (and (isa :NOUN Flatulence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fart-TheWord
 (and (isa :NOUN GaseousTangibleThing)
      (relationExistsInstance outputsCreated Flatulence :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fascism-TheWord (and (isa :NOUN Fascism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fascist-TheWord (and (isa :NOUN Fascist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fashion-TheWord (and (isa :NOUN FashionableStyle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fashion-TheWord (and (isa :NOUN FashionableStyle))
 (frame FN_Trendiness)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfCritique))
   (:OBLIQUE-OBJECT (AVP temporallyIntersects))
   (:GAP (INI objectOfEvaluation))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Fastener-TheWord (and (isa :NOUN Connector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fastening") Tool-TheWord
 (and (isa :NOUN FasteningTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fat-TheWord (and (isa :NOUN Fat)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType) (AJP activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "fat") Cell-TheWord
 (and (isa :NOUN (CellTypeOfTissueTypeFn FattyTissue))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fatality-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified))
   (:OBLIQUE-OBJECT (AJP causes-Underspecified) (N causes-Underspecified)
    ((PPFn due) causes-Underspecified))))
 (groupPatterns (TheSet ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Fate-TheWord
 (and (isa :NOUN Situation)
      (relationExistsInstance postSituation ExperiencingSomething :NOUN))
 (frame FN_Destiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn of) affectedAgent) ((PPFn on) affectedAgent)
    (VPed fe_state_of_affairs) (AJP fe_descriptor fe_state_of_affairs)
    (VPbrst fe_state_of_affairs)
    (VPto (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     fe_state_of_affairs))
   (:GAP (DNI fe_state_of_affairs) (DEN fe_state_of_affairs)
    (INI affectedAgent fe_state_of_affairs))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 5 1) (3 0 0)) ((1 0 0) (1 4 0))
   ((1 5 0) (3 0 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 3 1) (1 3 1))
   ((0 0 0) (0 0 0) (1 3 1)) ((1 0 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Father-In-Law-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance fatherInLaw Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (INI fe_ego) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0) (4 0 0)))))

(FNNounSemtrans (TheList "father" "s") Day-TheWord (and (isa :NOUN FathersDay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Father-TheWord (and (isa :NOUN HumanFather))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego) (INI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0)) ((0 0 0) (1 0 0))
   ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Father-TheWord
 (and (isa :NOUN MaleAnimal)
      (relationExistsInstance biologicalFather Animal :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Father-TheWord (and (isa :NOUN Priest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fathom-TheWord (and (isa :NOUN Fathom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fatigue-TheWord (and (isa :NOUN LevelOfExhaustion))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn eventAffectsBodyPart))
   (:OBLIQUE-OBJECT (N objectActedOn)
    ((PPFn of) (InverseBinaryPredicateFn explains-Generic))
    (AJP fe_degree fe_parameter))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 1)) ((0 0 1)) ((1 1 0)) ((2 0 0)) ((0 0 0)) ((1 0 0)) ((1 2 0))
   ((0 0 1) (1 2 0)) ((1 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Faucet-TheWord (and (isa :NOUN WaterFaucet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fault-TheWord (and (isa :NOUN Blame))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP subjectOfMentalSituation objectOfEvaluation fe_reason))
   (:OBLIQUE-OBJECT ((PPFn in) objectOfEvaluation)
    ((PPFn with) objectOfEvaluation) ((PPFn of) objectOfEvaluation)
    ((PPFn on) objectOfEvaluation) (Sfin fe_reason) (NP fe_reason)
    ((PPingFn for) fe_reason) ((PPFn for) fe_reason) ((PPingFn in) fe_reason)
    ((PPingFn of) fe_reason) (VPto fe_reason)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GAP (INI subjectOfMentalSituation)) (:GEN (Poss objectOfEvaluation))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 10 0)) ((1 9 0)) ((1 8 0)) ((1 6 0)) ((1 7 0))
   ((0 0 2)) ((3 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 1)) ((1 0 0))
   ((1 11 0) (3 0 0)) ((1 4 0) (3 0 0)) ((1 6 0) (3 0 0)) ((0 0 2) (3 0 0))
   ((0 0 2) (1 1 0)) ((1 2 0) (1 4 0)) ((0 0 2) (1 2 0)) ((1 2 0) (1 5 0))
   ((0 0 1) (1 4 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Fault-TheWord (and (isa :NOUN Fault-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Favoritism-TheWord (and (isa :NOUN Prejudice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Favour-TheWord (and (isa :NOUN Favor-Gift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fawn-TheWord (and (isa :NOUN (JuvenileFn Deer)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fax") Machine-TheWord (and (isa :NOUN FaxMachine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fax-TheWord
 (and (isa :NOUN Paper-IBO)
      (relationExistsInstance copyProduced FaxingADocument :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fear-TheWord (and (isa :NOUN Fear)) (frame FN_Fear)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT (Sfin (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Feast-TheWord (and (isa :NOUN Feast))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn for) beneficiary) (N fe_occasion)
    ((PPFn at) eventOccursAt))
   (:GAP (INI amongThosePresent) (DEN fe_social_event))
   (:GEN (Poss beneficiary host))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((3 0 1)) ((0 0 0)) ((1 1 0) (1 2 0))
   ((0 0 1) (1 2 0)) ((1 1 0) (3 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Feather-TheWord (and (isa :NOUN Feather))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) February-TheWord (and (isa :NOUN February))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit) (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "fecal") Matter-TheWord (and (isa :NOUN Feces))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "federal") Department-TheWord
 (and (isa :NOUN FederalDepartment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "federal") District-TheWord
 (and (isa :NOUN FederalDistrict)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "federal" "tax") Return-TheWord
 (and (isa :NOUN FederalTaxReturn)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Federation-TheWord (and (isa :NOUN Federation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fedora-TheWord (and (isa :NOUN Fedora))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fee-TheWord
 (and (isa :NOUN MonetaryValue) (relationExistsInstance fee Individual :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Feel-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature)) (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP perceivedThings))
   (:OBLIQUE-OBJECT ((PPFn under) actorPartsInvolved) (AJP fe_descriptor)
    ((PPFn of) perceivedThings) ((PPFn about) perceivedThings))
   (:GAP (2nd actorPartsInvolved) (CNI doneBy) (DNI perceivedThings))
   (:GEN (Poss perceivedThings))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 2 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Feeler-TheWord (and (isa :NOUN Whisker))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Feeling-TheWord (and (isa :NOUN FeelingAttribute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Feeling-TheWord
 (and (isa :NOUN EmotionalQuantityType)) (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (NP doneBy) ((PPingFn of) perceivedThings)
    ((PPFn of) perceivedThings) (AJP perceivedThings) (Sfin perceivedThings)
    (QUO perceivedThings))
   (:GAP (CNI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 5 0)) ((1 2 0)) ((1 1 0)) ((3 0 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 3 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Feelings-TheWord (and (isa :NOUN FeelingAttribute))
 (frame FN_Feeling)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBLIQUE-OBJECT (AJP fe_evaluation))
   (:GAP (DEN feelsEmotion))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Felidae-TheWord (and (isa :NOUN FelidaeFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Feline-TheWord (and (isa :NOUN Cat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Felis-TheWord (and (isa :NOUN FelisGenus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fell-TheWord (and (isa :NOUN ForestClearing))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn around) fe_relative_location)
    ((PPFn of) fe_container_possessor fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList) Fellatio-TheWord (and (isa :NOUN Fellatio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fellow-TheWord (and (isa :NOUN Person))
 (frame FN_People)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn from) comesFrom-Generic)
    (AJP age fe_persistent_characteristic) (A fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((0 3 0) (0 3 0)) ((0 1 0) (0 3 0))
   ((0 0 0) (0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Felon-TheWord
 (and (isa :NOUN PersonWithCriminalRecord)) (frame FN_People)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Felony-TheWord (and (isa :NOUN Felony))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_offense))
   (:OBLIQUE-OBJECT (A fe_degree) (AJP fe_degree) (N fe_specification)
    ((PPFn in) fe_specification))
   (:GAP (DEN fe_offense))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Felt-TheWord (and (isa :NOUN Felt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "female") Aristocrat-TheWord
 (and (isa :NOUN FemaleAristocrat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "female") Child-TheWord (and (isa :NOUN FemaleChild))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "female" "reproductive") System-TheWord
 (and (isa :NOUN ReproductiveSystem-Female)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Female-TheWord (and (isa :NOUN FemaleAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Female-TheWord (and (isa :NOUN FemaleHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Feminism-TheWord (and (isa :NOUN Feminism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "femoral") Artery-TheWord
 (and (isa :NOUN FemoralArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "femoral") Nerve-TheWord
 (and (isa :NOUN FemoralNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "femoral") Vein-TheWord (and (isa :NOUN FemoralVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Femur-TheWord (and (isa :NOUN Femur)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fen-TheWord (and (isa :NOUN WetlandRegion))
 (frame FN_Biological_area)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fen-TheWord (and (isa :NOUN Fen-China))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fence-TheWord (and (isa :NOUN Fence))
 (frame FN_Architectural_part) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fencing-TheWord (and (isa :NOUN FencingSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fender-TheWord (and (isa :NOUN Fender-AutoBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fennel-TheWord (and (isa :NOUN Fennel))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fennic-TheWord
 (and (isa :NOUN Fennic-UralicLanguageFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fermium-TheWord (and (isa :NOUN Fermium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fern-TheWord (and (isa :NOUN Fern)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ferris") Wheel-TheWord (and (isa :NOUN FerrisWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ferrule-TheWord (and (isa :NOUN Ferrule))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ferry-TheWord (and (isa :NOUN Ferry))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn between) fe_itinerary)
    ((PPFn from) fe_itinerary) ((PPFn to) fe_itinerary)
    (N fe_descriptor fe_itinerary ownerOfProprietaryThing))
   (:GAP (DEN transporter))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 4 1)) ((0 4 0)) ((0 0 0))
   ((0 3 0) (0 4 1)) ((0 2 0) (0 4 1)) ((0 2 0) (0 4 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Fertilization-TheWord
 (and (isa :NOUN ReproductiveFertilizationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fertilizer" "production") Facility-TheWord
 (and (isa :NOUN FertilizerProductionFacility)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fertilizer-TheWord (and (isa :NOUN Fertilizer))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Festival-TheWord (and (isa :NOUN Festival))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn of) fe_occasion) ((PPFn at) eventOccursAt)
    (NP temporallyIntersects) ((PPFn in) eventOccursAt temporallyIntersects)
    (AJP fe_occasion eventOccursAt temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects)
    (N duration host (InverseBinaryPredicateFn nameString) fe_occasion
     eventOccursAt clothingStyle temporallyIntersects))
   (:GAP (INI amongThosePresent host) (CNI host) (DEN fe_social_event))
   (:GEN (Poss host (InverseBinaryPredicateFn nameString) eventOccursAt))))
 (groupPatterns
  (TheSet ((1 6 5)) ((1 3 0)) ((1 1 0)) ((1 4 1)) ((1 6 3)) ((1 4 0)) ((1 6 2))
   ((1 6 1)) ((1 5 0)) ((1 0 0)) ((3 0 1)) ((1 6 5) (1 6 6)) ((1 5 1) (1 6 3))
   ((1 6 3) (1 6 6)) ((1 4 2) (1 6 3)) ((1 4 0) (1 4 2)) ((1 1 0) (1 6 3))
   ((1 6 3) (1 6 4)) ((1 4 1) (1 6 3)) ((1 3 0) (1 4 0)) ((1 1 0) (1 4 0))
   ((1 3 1) (1 6 1)) ((1 6 3) (3 0 0)) ((0 0 1) (1 6 3)) ((1 0 0) (1 6 1))
   ((1 6 1) (1 6 3)) ((0 0 0) (1 6 3)) ((1 6 3) (1 6 3))
   ((1 3 0) (1 4 2) (1 6 3)) ((1 1 0) (1 5 1) (1 6 3))
   ((1 3 0) (1 4 0) (3 0 2)) ((0 0 1) (1 2 0) (1 3 0))
   ((1 4 2) (1 6 3) (3 0 0)) ((1 1 0) (1 2 0) (1 6 3))
   ((0 0 0) (1 0 0) (1 3 0)) ((0 0 0) (1 3 0) (1 6 3))
   ((0 0 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Festschrift-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Fete-TheWord (and (isa :NOUN Party-Celebration))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn for) fe_occasion) ((PPFn at) eventOccursAt)
    (AVP eventOccursAt) (N host fe_occasion clothingStyle)
    (NP temporallyIntersects) ((PPFn in) eventOccursAt temporallyIntersects)
    (AJP fe_occasion eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (CNI host) (DEN fe_social_event))))
 (groupPatterns
  (TheSet ((1 3 2)) ((1 1 0)) ((1 3 1)) ((1 6 0)) ((1 3 0)) ((1 6 2) (1 7 0))
   ((1 3 2) (1 5 0)) ((1 1 0) (1 5 1)) ((0 0 1) (1 0 0))
   ((1 3 2) (1 4 0) (1 5 0)) ((1 3 0) (1 4 0) (1 5 0))
   ((0 0 1) (1 2 0) (1 3 2)) ((0 0 0) (1 4 0) (1 6 1)))))

(FNNounSemtrans (TheList) Fetus-TheWord (and (isa :NOUN Fetus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Feudalism-TheWord (and (isa :NOUN Feudalism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fever-TheWord (and (isa :NOUN Fever)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Few-TheWord (and (isa :NOUN Few-Quant))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:GAP (DEN fe_quantity)) (:NOUN (N fe_individuals))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Fez-TheWord (and (isa :NOUN Hat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Fiasco-TheWord (and (isa :NOUN FailureOutcome))
 (frame FN_Bungling)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (AJP doneBy)
    ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt)
    ((PPFn on) eventOccursAt) (N objectActedOn eventOccursAt))
   (:GAP (DEN objectActedOn) (INI objectActedOn doneBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 3 0)) ((1 5 1)) ((1 0 0)) ((0 0 0))
   ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Fib-TheWord (and (isa :NOUN Lying))
 (frame FN_Prevarication)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy)) (:OBJECT (NP recipientOfInfo))
   (:GAP (CNI recipientOfInfo performedBy) (INI recipientOfInfo situationTopic)
    (DNI recipientOfInfo situationTopic))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "fiber" "optic") Cable-TheWord
 (and (isa :NOUN FiberOpticCable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fiber") Optics-TheWord
 (and (isa :NOUN FiberOpticTransmission)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fiberglass-TheWord (and (isa :NOUN Fiberglass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fiberopticcable-Multimode-TheWord
 (and (isa :NOUN FiberOpticCable-MultiMode)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fibula-TheWord (and (isa :NOUN Fibula))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fiction-TheWord (and (isa :NOUN FictionalPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fictional") Character-TheWord
 (and (isa :NOUN FictionalCharacter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fiefdom-TheWord (and (isa :NOUN ControlledLand))
 (frame FN_Political_locales)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "field") Event-TheWord
 (and (isa :NOUN FieldSportsEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "field") Hockey-TheWord (and (isa :NOUN FieldHockey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "field") Marshal-TheWord
 (and (isa :NOUN FieldMarshal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Field-TheWord (and (isa :NOUN FieldOfStudy))
 (frame FN_Fields)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_practitioner))
   (:OBLIQUE-OBJECT ((PPFn of) processTypeForAccomplishmentType))
   (:GAP (DNI processTypeForAccomplishmentType) (DEN worksInIndustry))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Field-TheWord (and (isa :NOUN Field-Land))
 (frame FN_Locale_by_event)
 (bindingTemplate (TheList (:GAP (INI fe_defining_event) (DEN eventLocale))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Field-TheWord (and (isa :NOUN Field-Agricultural))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N locationUse)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Field-TheWord (and (isa :NOUN Field-Mathematical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Field-TheWord
 (and (isa :NOUN GravitationalForceVector)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Field-TheWord (and (isa :NOUN Field-Land))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fiend-TheWord
 (and (isa :NOUN Person)
      (hasPhysiologicalConditionType :NOUN (AddictionFn AddictiveSubstance)))
 (frame FN_Addiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_addict))
   (:OBLIQUE-OBJECT (NP fe_addict) (N fe_addictant)) (:GAP (DEN fe_addict))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Fifth-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fifty") Percent-TheWord
 (and (isa :NOUN (Percent 50))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fig-TheWord (and (isa :NOUN (FruitFn FigTree)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fig-TheWord (and (isa :NOUN FigTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fig") Tree-TheWord (and (isa :NOUN FigTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fig") Tree-TheWord (and (isa :NOUN FigTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fight-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP purposeOfEvent fe_side_1 fe_sides))
   (:OBJECT (NP fe_side_2))
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn over) fe_issue)
    ((PPFn at) eventOccursAt) ((PPFn in) fe_depictive eventOccursAt)
    ((PPFn for) purposeOfEvent) (VPto purposeOfEvent) ((PPFn to) eventOutcomes)
    ((PPFn of) fe_side_1) ((PPFn with) fe_depictive fe_side_2)
    ((PPFn against) fe_side_2) ((PPFn between) fe_sides)
    (N instrument-Generic fe_sides) ((PPFn on) temporallyIntersects)
    (NP temporallyIntersects))
   (:GAP (CNI fe_side_1) (DNI fe_side_2 fe_sides)
    (INI fe_issue purposeOfEvent fe_side_2 fe_sides))
   (:GEN (Poss fe_side_1))))
 (groupPatterns
  (TheSet ((2 10 0)) ((2 11 1)) ((2 8 1)) ((2 9 0)) ((2 7 0)) ((2 6 0))
   ((0 0 0)) ((2 4 0)) ((2 2 0)) ((2 1 0)) ((0 0 1)) ((2 8 0))
   ((2 9 0) (4 0 0)) ((0 0 1) (2 8 1)) ((2 5 0) (4 0 0)) ((0 0 2) (2 0 0))
   ((2 10 0) (2 11 0)) ((0 0 1) (2 3 0)) ((0 0 2) (2 11 1) (2 13 0))
   ((0 0 1) (2 8 1) (2 11 0)) ((0 0 1) (1 0 0) (2 3 1) (2 12 0)))))

(FNNounSemtrans (TheList) Fight-TheWord (and (isa :NOUN BoxingSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fight-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AVP fe_issue)) (:GAP (DNI fe_arguers))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fighter-TheWord (and (isa :NOUN Warrior))
 (frame FN_Irregular_combatants)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_combatant) (Poss fe_combatant))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn in) fe_descriptor)
    ((PPFn on) fe_descriptor) (A purposeOfEvent)
    (N age fe_conflict fe_descriptor groupMembers fe_side_1)
    ((PPFn for) fe_conflict purposeOfEvent fe_side_1) (NP fe_side_1)
    ((PPFn from) comesFrom-Generic fe_side_1) ((PPFn of) fe_side_1)
    (AJP age fe_descriptor comesFrom-Generic fe_persistent_characteristic
     fe_side_1 fe_side_2))
   (:GAP (2nd purposeOfEvent fe_side_1) (DEN fe_combatant fe_side_1))
   (:GEN (Poss fe_side_1))))
 (groupPatterns
  (TheSet ((1 9 5)) ((3 0 0)) ((1 8 0)) ((1 7 1)) ((1 5 2)) ((1 6 0)) ((1 9 4))
   ((1 4 4)) ((1 3 0)) ((1 9 3)) ((1 7 0)) ((1 9 2)) ((1 4 3)) ((1 0 0))
   ((1 2 0)) ((1 1 0)) ((1 4 2)) ((1 9 1)) ((1 5 0)) ((1 4 1)) ((0 0 0))
   ((1 4 0)) ((1 9 0)) ((1 0 0) (1 9 5)) ((1 4 2) (1 7 0)) ((1 4 4) (1 4 4))
   ((1 3 0) (1 4 4)) ((0 1 0) (1 5 1)) ((1 4 4) (1 7 0)) ((1 4 4) (1 9 2))
   ((1 9 2) (1 9 4)) ((1 4 3) (3 0 0)) ((1 4 3) (1 9 3)) ((1 0 0) (1 4 4))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 4 4)) ((1 9 1) (3 0 0)) ((1 5 2) (1 9 1))
   ((1 4 4) (1 9 1)) ((1 0 0) (1 9 1)) ((0 0 0) (1 9 1)) ((0 0 0) (1 4 4))
   ((0 0 0) (1 9 3)) ((1 4 3) (1 9 0)) ((1 5 2) (1 9 3) (1 9 3))
   ((1 5 2) (1 9 1) (1 9 2)) ((0 0 0) (0 0 0) (1 4 4))
   ((0 0 0) (1 4 4) (1 9 0)))))

(FNNounSemtrans (TheList) Fighter-TheWord (and (isa :NOUN FighterPlane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fighting-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn around) eventOccursAt)
    ((PPFn at) eventOccursAt) ((PPFn over) fe_issue eventOccursAt)
    ((PPFn for) purposeOfEvent) ((PPFn with) fe_side_2)
    ((PPFn against) fe_side_2) ((PPFn between) fe_sides)
    ((PPFn among) fe_sides) ((PPFn on) eventOccursAt temporallyIntersects)
    (AJP duration fe_manner by-Underspecified fe_sides temporallyIntersects)
    ((PPFn during) temporallyIntersects) (NP temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) temporallyIntersects))
   (:GAP (DNI fe_issue fe_side_1 fe_sides)
    (INI fe_side_1 fe_side_2 fe_sides))))
 (groupPatterns
  (TheSet ((1 14 0)) ((1 5 0)) ((1 6 0)) ((1 2 0)) ((1 10 1)) ((1 3 0))
   ((1 7 0) (1 11 0)) ((1 10 3) (1 13 1)) ((0 0 0) (1 4 0)) ((1 10 4) (1 13 0))
   ((1 3 1) (1 11 0)) ((1 6 0) (1 10 2)) ((1 7 0) (1 10 1)) ((1 8 0) (1 10 1))
   ((1 5 0) (1 10 1)) ((1 9 0) (1 10 1)) ((1 0 0) (1 10 2)) ((1 9 0) (1 10 0))
   ((1 4 0) (1 7 0) (1 12 0)) ((1 1 0) (1 9 1) (1 10 1))
   ((1 7 0) (1 10 1) (1 13 0)))))

(FNNounSemtrans (TheList "figure") Skater-TheWord
 (and (isa :NOUN FigureSkater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Figurine-TheWord (and (isa :NOUN Figurine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fiji") Dollar-TheWord (and (isa :NOUN Dollar-Fiji))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fijian-TheWord (and (isa :NOUN FijianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Filament-TheWord (and (isa :NOUN Filament-LightBulb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "file") Clerk-TheWord (and (isa :NOUN FileClerk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "file") Folder-TheWord (and (isa :NOUN FileFolder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) File-TheWord (and (isa :NOUN File-Tool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) File-TheWord
 (and (isa :NOUN FileCabinet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Filicopsida-TheWord
 (and (isa :NOUN FilicopsidaClass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Filly-TheWord (and (isa :NOUN Filly)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "film") Camera-TheWord (and (isa :NOUN FilmCamera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "film") Industry-TheWord
 (and (isa :NOUN FilmIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "film") Maker-TheWord (and (isa :NOUN Producer-Movie))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "film") Star-TheWord (and (isa :NOUN MovieStar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Film-TheWord (and (isa :NOUN Film-SheetOrCoating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Film-TheWord (and (isa :NOUN PhotographicFilm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Filmmaker-TheWord (and (isa :NOUN Director-Movie))
 (frame FN_Behind_the_scenes) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Filter-TheWord (and (isa :NOUN Filter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "filtering") System-TheWord
 (and (isa :NOUN FilterSystem-Artificial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fin" "stabilized" "projectile") Shell-TheWord
 (and (isa :NOUN ProjectileShell-FinStabilized)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fin-TheWord (and (isa :NOUN Fin))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn along) fe_attachment) ((PPFn on) fe_attachment)
    (AJP fe_attachment fe_descriptor orientation)
    (N fe_attachment ownerOfProprietaryThing)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (2nd actorPartsInvolved) (DEN actorPartsInvolved)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((0 0 0)) ((1 2 1)) ((1 2 0)) ((0 0 0) (1 2 1))
   ((1 2 1) (1 3 1)) ((1 3 0) (3 0 0)) ((0 0 0) (1 3 0)) ((1 2 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 2 0) (1 2 1)) ((0 0 0) (1 2 1) (1 2 2))
   ((0 0 0) (1 1 0) (1 2 1)) ((0 0 0) (1 0 0) (1 2 1))
   ((0 0 0) (1 1 0) (1 2 1) (1 2 1)))))

(FNNounSemtrans (TheList) Finale-TheWord
 (and (isa :NOUN EndingOfTemporalThing)) (frame FN_Process_end)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_process))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (N fe_process)
    ((PPFn of) fe_process) ((PPFn to) fe_process))
   (:GEN (Poss fe_process))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Finance-TheWord (and (isa :NOUN FinancialIndustry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "financial") Aid-TheWord
 (and (isa :NOUN FinancialAidAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "financial") Condition-TheWord
 (and (isa :NOUN FinancialCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "financial" "data" "feed") System-TheWord
 (and (isa :NOUN FinancialDataFeed-System)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "financial" "data" "services") System-TheWord
 (and (isa :NOUN FinancialDataCommunicationSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "financial") Institution-TheWord
 (and (isa :NOUN FinancialOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Financier-TheWord (and (isa :NOUN Financier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Finch-TheWord (and (isa :NOUN Finch)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Finder-TheWord (and (isa :NOUN Discoverer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Finding-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_issuer)) (:GAP (DEN fe_document))
   (:GEN (Poss fe_bearer))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Finding-TheWord (and (isa :NOUN VerdictOfTrial))
 (frame FN_Verdict) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fine") China-TheWord
 (and (isa :NOUN China-Dinnerware)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fine-TheWord (and (isa :NOUN FinePenalizing))
 (frame FN_Fining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Finery-TheWord (and (isa :NOUN FormalWear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0)) ((0 1 2) (2 0 0))
   ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Finger-TheWord (and (isa :NOUN Finger))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 1)) ((1 0 0)) ((1 1 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 0 0)) ((1 0 1) (1 1 0))
   ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "fingernail") Polish-TheWord
 (and (isa :NOUN NailPolish)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fingernail-TheWord (and (isa :NOUN Fingernail))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (3 0 0)) ((0 0 0) (1 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Fingerprint-TheWord (and (isa :NOUN Fingerprint))
 (frame FN_Evidence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fingertip-TheWord
 (and (isa :NOUN ExternalAnatomicalPart)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 1) (2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Finish-TheWord (and (isa :NOUN Finish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fink-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate (TheList (:SUBJECT (NP fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fink-TheWord (and (isa :NOUN Reporting))
 (frame FN_Reporting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Finn-TheWord (and (isa :NOUN FinnishPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Finnish-TheWord (and (isa :NOUN FinnishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fir-TheWord (and (isa :NOUN FirTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fir") Tree-TheWord (and (isa :NOUN FirTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Alarm-TheWord (and (isa :NOUN FireAlarm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Department-TheWord
 (and (isa :NOUN FireDepartment)) (frame FN_Law_enforcement_agency)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_jurisdiction))
   (:GAP (DEN fe_agency) (DNI fe_jurisdiction))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "fire") Engine-TheWord (and (isa :NOUN FireTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Escape-TheWord (and (isa :NOUN FireEscape))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Fighter-TheWord (and (isa :NOUN Firefighter))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) employer) (NP fe_person))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "fire") Fighting-TheWord
 (and (isa :NOUN Firefighting)) (frame FN_Firefighting)
 (bindingTemplate (TheList (:GAP (INI fe_fire fe_firefighter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Helmet-TheWord (and (isa :NOUN FireHelmet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Hose-TheWord (and (isa :NOUN FireHose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Hydrant-TheWord (and (isa :NOUN FireHydrant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Iron-TheWord (and (isa :NOUN FireplacePoker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Station-TheWord (and (isa :NOUN FireStation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fire-TheWord (and (isa :NOUN Firefight))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy victim))
   (:OBLIQUE-OBJECT (A performedBy)
    ((PPFn in) (InverseBinaryPredicateFn subEvents) eventOccursAt)
    ((PPFn outside) eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn near) eventOccursAt) ((PPFn between) performedBy eventOccursAt)
    (AJP performedBy fe_event_description
     (InverseBinaryPredicateFn explains-Generic) frequencyOfEvent fe_manner
     purposeOfEvent)
    (Sub temporallyIntersects) (NP temporallyIntersects)
    (AVP frequencyOfEvent fe_particular_iteration temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects victim)
    (N performedBy instrument-UsedAsWeapon)
    ((PPFn from) performedBy from-Generic instrument-UsedAsWeapon)
    ((PPFn with) by-Underspecified victim instrument-UsedAsWeapon))
   (:GAP (INI performedBy victim) (2nd victim))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 11 1)) ((1 11 0)) ((0 0 1)) ((1 6 0)) ((0 0 0))
   ((1 0 0) (1 11 1)) ((0 0 0) (1 11 1)) ((0 0 1) (0 0 1)) ((0 0 0) (1 13 1))
   ((0 0 0) (1 10 2)) ((0 0 1) (1 11 0)) ((0 0 0) (1 9 2)) ((0 0 0) (1 12 1))
   ((1 1 1) (1 5 0)) ((0 0 0) (1 10 0)) ((0 0 0) (1 13 0)) ((0 0 1) (1 6 4))
   ((0 0 1) (1 4 0) (1 10 0)) ((0 0 1) (1 11 1) (1 12 0))
   ((0 0 0) (1 7 0) (1 10 2)) ((0 0 0) (1 8 0) (1 13 1))
   ((0 0 0) (1 6 5) (1 13 2)) ((0 0 1) (1 1 1) (1 11 1))
   ((0 0 0) (1 1 1) (1 10 2)) ((0 0 0) (1 3 0) (1 13 1))
   ((0 0 0) (1 10 0) (1 10 1)) ((0 0 0) (1 7 0) (1 9 1))
   ((0 0 1) (1 6 4) (1 7 0)) ((0 0 1) (1 9 0) (1 11 1))
   ((0 0 1) (1 6 3) (1 12 2)) ((1 6 1) (1 11 1) (1 12 0))
   ((0 0 0) (1 1 0) (1 2 0)) ((0 0 0) (0 0 0) (1 12 1))
   ((0 0 1) (1 5 1) (1 10 1) (1 12 0)) ((0 0 0) (1 2 0) (1 8 0) (1 10 2))
   ((0 0 0) (1 1 1) (1 4 0) (1 10 1)) ((0 0 0) (1 1 1) (1 3 0) (1 8 0)))))

(FNNounSemtrans (TheList) Fire-TheWord (and (isa :NOUN Fire-CombustionProcess))
 (frame FN_Fire_burning)
 (bindingTemplate
  (TheList (:SUBJECT (N fe_fire)) (:OBJECT (NP fe_fire fe_fuel))
   (:OBLIQUE-OBJECT (AJP fe_depictive) (Srel fe_depictive) (unknown fe_fuel)
    (N fe_fire fe_fuel (InverseBinaryPredicateFn nameString) eventOccursAt)
    ((PPFn at) eventOccursAt) (NP fe_fire eventOccursAt)
    ((PPFn in) eventOccursAt temporallyIntersects) (AVP temporallyIntersects))
   (:GAP (DEN fe_fire) (NP fe_fire) (INI fe_fuel)
    (2nd (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 4 0)) ((2 3 2)) ((2 3 1)) ((2 5 0)) ((0 0 0)) ((2 3 0))
   ((2 1 0)) ((2 0 0)) ((2 6 0) (2 7 0)) ((2 4 0) (2 7 0)) ((2 3 3) (2 6 1))
   ((2 3 1) (2 3 3)) ((2 0 0) (2 6 0)) ((1 0 0) (1 0 1) (2 5 1))
   ((2 0 0) (2 2 0) (2 3 1)))))

(FNNounSemtrans (TheList) Fire-TheWord (and (isa :NOUN CombustionProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fire-TheWord (and (isa :NOUN Flame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fire-TheWord (and (isa :NOUN ShootingAGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Tongs-TheWord (and (isa :NOUN FireplaceTongs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fire") Truck-TheWord (and (isa :NOUN FireTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firearm-TheWord (and (isa :NOUN Handgun))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Firearm-TheWord
 (and (isa :NOUN ProjectileLauncher-Direct)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "fired") Projectile-TheWord
 (and (isa :NOUN ProjectileWeapon-Fired)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firefight-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT (AJP fe_depictive duration fe_manner)
    (N fe_issue eventOccursAt) ((PPFn in) eventOccursAt) (A eventOccursAt)
    ((PPFn at) eventOccursAt) ((PPFn near) eventOccursAt)
    ((PPFn outside) eventOccursAt) ((PPFn with) fe_side_2)
    ((PPFn against) fe_side_2) ((PPFn between) fe_sides)
    (NP temporallyIntersects) (AVP temporallyIntersects))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 7 0)) ((1 8 0)) ((1 6 0)) ((1 5 0)) ((1 2 0)) ((1 4 0))
   ((1 1 1)) ((1 3 0)) ((1 0 0)) ((1 9 0) (2 0 0)) ((0 0 0) (1 7 0))
   ((1 2 0) (1 7 0)) ((1 0 2) (1 1 1)) ((1 0 1) (1 9 0)) ((1 0 1) (1 1 1))
   ((1 0 0) (1 1 0)) ((1 6 0) (1 9 0) (1 11 0)) ((0 0 0) (1 2 0) (1 7 0))
   ((1 0 2) (1 7 0) (1 10 0)) ((1 0 2) (1 2 0) (1 9 0))
   ((1 0 1) (1 2 0) (1 7 0)))))

(FNNounSemtrans (TheList) Firefighter-TheWord (and (isa :NOUN Firefighter))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) fe_descriptor))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Firefighter-TheWord (and (isa :NOUN FireDepartment))
 (frame FN_Team) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firehouse-TheWord (and (isa :NOUN FireStation))
 (frame FN_Locale_by_use) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fireman-TheWord (and (isa :NOUN Firefighter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fireplace") Broom-TheWord
 (and (isa :NOUN FireplaceBroom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fireplace") Grate-TheWord
 (and (isa :NOUN FireplaceGrate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fireplace") Match-TheWord
 (and (isa :NOUN MatchForFireplace)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fireplace") Poker-TheWord
 (and (isa :NOUN FireplacePoker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fireplace") Screen-TheWord
 (and (isa :NOUN FireplaceScreen)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fireplace-TheWord (and (isa :NOUN Fireplace))
 (frame FN_Architectural_part)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn parts)))
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor mainConstituent)
    ((PPFn in) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 1)) ((1 0 0)) ((1 1 0)) ((1 0 1) (1 2 0))
   ((0 0 0) (1 0 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 1 0)) ((1 0 1) (1 1 0))
   ((1 0 1) (1 1 0) (1 2 0)) ((0 0 0) (1 0 1) (1 1 0)))))

(FNNounSemtrans (TheList "fireplace") Tongs-TheWord
 (and (isa :NOUN FireplaceTongs)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fireplace") Tool-TheWord
 (and (isa :NOUN FireplaceTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firetruck-TheWord (and (isa :NOUN FireTruck))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firewall-TheWord (and (isa :NOUN FirewallProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firewall-TheWord (and (isa :NOUN Firewall-Network))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firewood-TheWord (and (isa :NOUN Firewood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firework-TheWord (and (isa :NOUN Firework-Display))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firework-TheWord
 (and (isa :NOUN Firework-PyrotechnicDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "firing") Range-TheWord (and (isa :NOUN FiringRange))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "firing") Squad-TheWord (and (isa :NOUN FiringSquad))
 (frame FN_Execution) (bindingTemplate (TheList (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firing-TheWord (and (isa :NOUN Execution-Judicial))
 (frame FN_Execution) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firing-TheWord
 (and (isa :NOUN DischargeWithPrejudice)) (frame FN_Firing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Firm-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_business))
   (:OBLIQUE-OBJECT (VPed fe_descriptor) (A fe_descriptor eventOccursAt)
    (NP eventOccursAt)
    (AJP fe_business_name fe_descriptor eventOccursAt fe_product)
    ((PPFn in) eventOccursAt fe_product) (VPbrst fe_product)
    (N eventOccursAt fe_product ownerOfProprietaryThing)
    ((PPFn of) fe_business_name fe_service_provider))
   (:GAP (DEN fe_business) (2nd fe_business_name)) (:NOUN (N fe_business))
   (:GEN (Poss eventOccursAt ownerOfProprietaryThing))
   (:APPOSITIVE (NP fe_business_name))))
 (groupPatterns
  (TheSet ((1 7 1)) ((4 0 1)) ((1 6 2)) ((1 4 1)) ((1 6 1)) ((1 3 3)) ((1 6 0))
   ((1 3 2)) ((1 1 1)) ((1 3 1)) ((1 7 0)) ((1 3 0) (1 5 0)) ((1 6 1) (4 0 0))
   ((1 4 0) (1 6 1)) ((1 3 1) (1 6 1)) ((1 0 0) (1 6 0)) ((1 3 1) (4 0 0))
   ((1 7 1) (5 0 0)) ((1 6 1) (5 0 0)) ((0 0 0) (1 1 1)) ((1 3 2) (3 0 0))
   ((1 2 0) (1 6 1) (1 7 0)) ((1 1 0) (1 1 1) (1 7 1))
   ((1 6 0) (1 6 1) (1 7 0)))))

(FNNounSemtrans (TheList "first" "aid") Kit-TheWord
 (and (isa :NOUN FirstAidKit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "first") Aid-TheWord
 (and (isa :NOUN EmergencyMedicalTreatment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "first") Mate-TheWord (and (isa :NOUN ShipsFirstMate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "first") Name-TheWord (and (isa :NOUN HumanGivenName))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "first") Responder-TheWord
 (and (isa :NOUN EmergencyWorker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fish") Food-TheWord (and (isa :NOUN FishFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fish-TheWord (and (isa :NOUN Fish))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fish-TheWord (and (isa :NOUN Fish)) (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Fishbone-TheWord
 (and (isa :NOUN (OrganismPartTypeFn Fish Bone-BodyPart))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fisherman-TheWord (and (isa :NOUN Fisherman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fishhook-TheWord (and (isa :NOUN Fishhook))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fishing") Line-TheWord (and (isa :NOUN FishingLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fishing") Net-TheWord (and (isa :NOUN FishingNet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fishing") Reel-TheWord (and (isa :NOUN FishingReel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fishing") Rod-TheWord (and (isa :NOUN FishingPole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fishnet-TheWord (and (isa :NOUN WomensHosiery))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Fishnet-TheWord (and (isa :NOUN FishingNet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fission-TheWord
 (and (isa :NOUN NuclearFissionProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fission-TheWord (and (isa :NOUN NuclearProcess))
 (frame FN_Nuclear_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fistfight-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fitness") Stepper-TheWord
 (and (isa :NOUN FitnessStepper)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fitted") Sheet-TheWord
 (and (isa :NOUN FittedBedSheet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "five-dollar") Bill-TheWord
 (and (isa :NOUN FiveDollarBill-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "five" "speed" "automatic") Transmission-TheWord
 (and (isa :NOUN AutomaticTransmission5Speed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fix-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:GAP (DEN fe_situation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "fixed" "theater") Seat-TheWord
 (and (isa :NOUN FixedTheaterSeat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fixed" "wing") Aircraft-TheWord
 (and (isa :NOUN FixedWingAircraft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fjord-TheWord (and (isa :NOUN Fjord))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn at) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Flag-TheWord (and (isa :NOUN Flag)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flagon-TheWord (and (isa :NOUN Carafe))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 2 0) (0 2 1)) ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Flagpole-TheWord (and (isa :NOUN Flagpole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flake-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed) (N stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Flamenco-TheWord
 (and (isa :NOUN FlamencoDancePerformance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flame-TheWord (and (isa :NOUN Flame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flames-TheWord (and (isa :NOUN Flame))
 (frame FN_Fire_burning)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_fire)) (:OBJECT (N fe_fire))
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn at) eventOccursAt)
    (AVP temporallyIntersects))
   (:GAP (DEN fe_fire))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)) ((2 0 0)) ((2 1 0) (2 2 0)))))

(FNNounSemtrans (TheList) Flamethrower-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flamingo-TheWord (and (isa :NOUN Flamingo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flannel-TheWord (and (isa :NOUN FlannelCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flannels-TheWord
 (and (isa :NOUN Clothing-Generic)
      (relationInstanceExists mainConstituent :NOUN FlannelCloth))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 1)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "flare") Pipe-TheWord (and (isa :NOUN FlarePipe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flare-TheWord
 (and (isa :NOUN Flare-CombustionProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flare-TheWord
 (and (isa :NOUN Flare-PyrotechnicDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flash" "bulb" "camera") Attachment-TheWord
 (and (isa :NOUN PhotoFlashBulbAttachment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flash-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn of) emitter)
    (N rediationEmitted emitter) ((PPFn from) emitter)
    ((PPFn through) trajectory-Complete))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 3 0)) ((0 2 1)) ((0 0 0) (0 1 0)) ((0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList) Flash-TheWord
 (and (isa :NOUN PhotographicFlashDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flashlight-TheWord (and (isa :NOUN Flashlight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flask-TheWord (and (isa :NOUN Flask-LabGlassware))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) containedObject) ((PPFn of) containedObject)
    (AJP mainConstituent) ((PPFn to) fe_relative_location)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (-- containerUsed) (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((2 0 0)) ((0 4 0)) ((0 1 0)) ((0 0 0))
   ((0 4 1) (2 0 0)) ((0 1 0) (0 2 0)) ((0 4 0) (0 4 2)) ((0 4 0) (0 4 1))
   ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList "flat") Display-TheWord
 (and (isa :NOUN FlatPanelDisplay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flat-TheWord (and (isa :NOUN ApartmentUnit))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flat-TheWord (and (isa :NOUN Flat-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flat") Tire-TheWord (and (isa :NOUN FlatTire))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flats-TheWord (and (isa :NOUN Flat-TheShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flatware-TheWord (and (isa :NOUN SilverwarePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flavor-TheWord (and (isa :NOUN TastePerception))
 (frame FN_Sensation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flax-TheWord (and (isa :NOUN Flax-TheFiber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flea-TheWord (and (isa :NOUN Flea)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flemish-TheWord (and (isa :NOUN FlemishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flesh-TheWord (and (isa :NOUN Skin))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn at) fe_attachment) (AJP fe_descriptor)
    (N ownerOfProprietaryThing)
    ((PPFn of) fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 1)) ((1 2 0)) ((1 1 0)) ((1 3 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 1 0) (1 3 0)) ((1 0 0) (1 1 0))
   ((1 1 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Fleshiness-TheWord (and (isa :NOUN FatPhysicalBuild))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flexible") Container-TheWord
 (and (isa :NOUN FlexibleContainer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flicker-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) rediationEmitted) ((PPFn on) to-Generic)
    (AJP rediationEmitted fe_manner) ((PPFn across) trajectory-Complete))))
 (groupPatterns (TheSet ((0 1 0) (0 2 0)) ((0 0 0) (0 2 1) (0 3 0)))))

(FNNounSemtrans (TheList) Flicker-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))
      (isa :NOUN IntermittentCollection))
 (frame FN_Location_of_light)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) emitter focalSubject) ((PPFn in) fe_ground)
    ((PPFn on) fe_ground) (NP fe_ground) ((PPFn beyond) fe_ground))
   (:GAP (DEN fe_light))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 1)) ((0 0 1) (0 1 0)) ((0 0 1) (0 3 0))
   ((0 0 1) (0 4 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "flight") Attendant-TheWord
 (and (isa :NOUN FlightAttendant)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flight") Feather-TheWord (and (isa :NOUN Feather))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flight") Test-TheWord
 (and (isa :NOUN PerformanceTesting)
      (relationInstanceExists objectTested :NOUN AirTransportationDevice))
 (frame FN_Operational_testing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) situationConstituents) ((PPFn of) fe_product)
    (N fe_product) (AJP temporallyIntersects))
   (:GAP (INI purposeOfEvent) (CNI fe_product fe_tester))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Flight-Testing-TheWord
 (and (isa :NOUN PerformanceTesting)
      (relationInstanceExists objectTested :NOUN AirTransportationDevice))
 (frame FN_Operational_testing) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flight-TheWord (and (isa :NOUN Stairway))
 (frame FN_Architectural_part) (bindingTemplate (TheList (:GAP (DEN parts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flight-TheWord (and (isa :NOUN Fleeing))
 (frame FN_Fleeing)
 (bindingTemplate (TheList (:GAP (DNI performedBy from-Generic))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flight-TheWord
 (and (isa :NOUN FlyingViaAirTransportationDevice)) (frame FN_Ride_vehicle)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flight-TheWord
 (and (isa :NOUN Trip-CommercialAirline-Individual)) (frame FN_Ride_vehicle)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flip-Flops-TheWord (and (isa :NOUN Sandal))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Flipper-TheWord (and (isa :NOUN Flipper))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 1 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Floatplane-TheWord (and (isa :NOUN FloatPlane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flock-TheWord (and (isa :NOUN (GroupFn Bird)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Floe-TheWord (and (isa :NOUN IceFloe))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N parts) ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Flogging-TheWord (and (isa :NOUN Punishment))
 (frame FN_Corporal_punishment)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation) ((PPFn for) fe_reason))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Flooding-TheWord (and (isa :NOUN Flooding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flood-TheWord (and (isa :NOUN Flooding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flood-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Floodgate-TheWord (and (isa :NOUN Floodgate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "floor") Lamp-TheWord (and (isa :NOUN FloorLamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "floor") Manager-TheWord
 (and (isa :NOUN FloorManager)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "floor") Mat-TheWord (and (isa :NOUN FloorMat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "floor") Plan-TheWord (and (isa :NOUN FloorPlan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Floor-TheWord (and (isa :NOUN FloorInAConstruction))
 (frame FN_Architectural_part)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor parts)
    ((PPFn of) fe_descriptor (InverseBinaryPredicateFn parts))
    (N fe_descriptor orientation (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 2 2)) ((0 2 1)) ((0 1 0)) ((0 2 0))
   ((0 0 1) (0 1 1)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Floor-TheWord (and (isa :NOUN LevelOfAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "floor") Tile-TheWord (and (isa :NOUN FloorTile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "floppy") Disk-TheWord (and (isa :NOUN FloppyDisk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Florist-TheWord (and (isa :NOUN FloristShop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flotilla-TheWord
 (and (isa :NOUN (GroupFn Watercraft))) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_aggregate_property) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Flour-TheWord (and (isa :NOUN FlourOrMeal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flourescent") Lightbulb-TheWord
 (and (isa :NOUN LightBulb-Flourescent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flow" "control") Device-TheWord
 (and (isa :NOUN FlowControlDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flow-TheWord (and (isa :NOUN FlowRate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flow-TheWord (and (isa :NOUN FlowingContinously))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flow-TheWord (and (isa :NOUN FluidFlow-Translation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flower") Arrangement-TheWord
 (and (isa :NOUN FlowerArrangement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flower") Bud-TheWord (and (isa :NOUN FlowerBud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flower") Gardening-TheWord
 (and (isa :NOUN Floriculture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flower-TheWord (and (isa :NOUN Flower-BotanicalPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flower-TheWord (and (isa :NOUN FloweryPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flower-TheWord (and (isa :NOUN FloweringPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flowerbed-TheWord (and (isa :NOUN FlowerBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "flowerpot") Liner-TheWord
 (and (isa :NOUN LinerForPlantPot)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flu-TheWord (and (isa :NOUN Influenza))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString) objectActedOn)
    ((PPFn in) eventOccursAt)
    (A (InverseBinaryPredicateFn nameString) eventOccursAt))
   (:GAP (DEN infects) (2nd (InverseBinaryPredicateFn nameString))
    (INI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((3 0 0)) ((0 0 0)) ((1 2 0)) ((1 0 0))
   ((1 0 1) (1 1 0)))))

(FNNounSemtrans (TheList) Fluctuation-TheWord (and (isa :NOUN Fluctuation))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_attribute objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn during) fe_correlated_variable)
    ((PPFn over) fe_correlated_variable) ((PPFn with) fe_correlated_variable)
    ((PPFn against) fe_correlated_variable) ((PPFn at) fe_correlated_variable)
    ((PPFn from) fe_correlated_variable) (Sfin fe_degree) (NP fe_difference)
    ((PPFn of) fe_attribute objectOfStateChange)
    (N fe_attribute objectOfStateChange)
    ((PPFn between) fe_correlated_variable objectOfStateChange)
    ((PPFn in) fe_attribute fe_correlated_variable objectOfStateChange)
    ((PPFn within) objectOfStateChange)
    ((PPFn on) objectOfStateChange trajectory-Complete)
    (AJP fe_correlated_variable fe_degree fe_manner rateOfEvent))
   (:GAP (DNI fe_attribute objectOfStateChange) (2nd objectOfStateChange))
   (:GEN (Poss objectOfStateChange))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 8 0)) ((1 9 1)) ((1 14 1)) ((1 10 0)) ((1 14 0))
   ((1 2 0)) ((1 11 0)) ((1 9 0)) ((1 8 0) (1 14 2)) ((1 8 0) (1 13 0))
   ((1 8 0) (1 11 2)) ((1 9 0) (3 0 0)) ((1 9 0) (1 13 0)) ((1 9 0) (1 10 1))
   ((1 8 1) (1 14 1)) ((1 11 0) (1 14 1)) ((0 0 0) (1 5 0)) ((1 4 0) (1 9 0))
   ((1 3 0) (1 9 0)) ((0 0 1) (1 1 0)) ((1 1 0) (1 14 1)) ((1 3 0) (1 8 0))
   ((1 9 0) (1 12 0) (1 14 3)) ((1 9 0) (1 11 2) (1 13 1))
   ((1 0 0) (1 8 1) (1 14 3)) ((1 7 0) (1 9 0) (1 11 1)))))

(FNNounSemtrans (TheList) Fluid-TheWord (and (isa :NOUN FluidTangibleThing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fluke-TheWord
 (and (isa :NOUN ExternalAnatomicalPart)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "fluorescent") Lamp-TheWord
 (and (isa :NOUN Lamp-Fluorescent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fluorine-TheWord (and (isa :NOUN Fluorine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fluoroscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flute-TheWord (and (isa :NOUN Flute)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fly") Agaric-TheWord
 (and (isa :NOUN FlyAgaricMushroom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fly" "over") Country-TheWord
 (and (isa :NOUN RuralArea)) (frame FN_Isolated_places)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fly-TheWord (and (isa :NOUN Fly-Insect))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flyover-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) ((PPFn into) to-Generic)
    (N mainConstituent (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location)
    ((PPFn at) objectFoundInLocation fe_relative_location)
    ((PPFn near) fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 4 0))
   ((0 5 0) (0 6 0)) ((0 2 1) (0 3 0)))))

(FNNounSemtrans (TheList "flywheel") Battery-TheWord
 (and (isa :NOUN FlywheelBattery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Flywheel-TheWord (and (isa :NOUN Flywheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foal-TheWord (and (isa :NOUN (JuvenileFn Horse)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foam-TheWord (and (isa :NOUN Foam)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Focus-TheWord (and (isa :NOUN Focus-Geometric))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fog") Light-TheWord (and (isa :NOUN CarFogLights))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fog-TheWord (and (isa :NOUN Fog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foil-TheWord (and (isa :NOUN FencingFoil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foil-TheWord (and (isa :NOUN AluminumFoil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fold-TheWord (and (isa :NOUN FoldedThing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Folder-TheWord (and (isa :NOUN FileFolder))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn from) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn on) fe_relative_location) (VPing fe_relative_location)
    (AJP deviceUse) (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 6 2)) ((0 5 0)) ((0 6 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((2 0 0)) ((0 6 0)) ((0 0 0)) ((0 6 2) (2 0 0)) ((0 5 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 6 0)))))

(FNNounSemtrans (TheList "folding") Chair-TheWord
 (and (isa :NOUN FoldingChair)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "folding") Table-TheWord
 (and (isa :NOUN FoldingTable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foliage-TheWord (and (isa :NOUN (MobFn Leaf)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "folk") Costume-TheWord (and (isa :NOUN FolkCostume))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "folk") Dance-TheWord (and (isa :NOUN FolkDance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "folk") Dancing-TheWord
 (and (isa :NOUN FolkDancing-StyleOfDance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "folk") Music-TheWord (and (isa :NOUN FolkMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Folk-TheWord (and (isa :NOUN (GroupFn Person)))
 (frame FN_People)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP comesFrom-Generic)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Folks-TheWord (and (isa :NOUN Person))
 (frame FN_People) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Font-TheWord (and (isa :NOUN FontType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "food") Chain-TheWord (and (isa :NOUN FoodChain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "food") Dehydrator-TheWord
 (and (isa :NOUN FoodDehydrator)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "food" "for") Reptiles-TheWord
 (and (isa :NOUN ReptileFood)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "food") Slicer-TheWord (and (isa :NOUN FoodSlicer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "food") Steamer-TheWord
 (and (isa :NOUN SteamerForFood)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "food" "storage") Jar-TheWord
 (and (isa :NOUN FoodStorageJar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Food-TheWord (and (isa :NOUN Food)) (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (DEN objectActedOn)) (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Food-TheWord (and (isa :NOUN FoodOrDrink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foodstuff-TheWord (and (isa :NOUN Food))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foolishness-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn in) objectOfCritique)
    ((PPingFn of) objectOfCritique) (VPto objectOfCritique)
    ((PPFn in) fe_practice) ((PPFn of) objectOfCritique affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 4 1)) ((0 2 0)) ((0 1 0)) ((0 4 0)) ((0 3 0) (1 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "foot") Care-TheWord (and (isa :NOUN FootCareProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foot-TheWord (and (isa :NOUN Foot-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (Poss ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (NP actorPartsInvolved) (AJP fe_descriptor)
    (N fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 3 0)) ((2 1 0)) ((1 0 0) (2 0 0)) ((2 2 0) (4 0 0))
   ((2 1 0) (4 0 0)) ((0 0 0) (2 1 0) (2 1 0)))))

(FNNounSemtrans (TheList) Foot-TheWord (and (isa :NOUN Foot-UnitOfMeasure))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn lengthOfObject)))
   (:OBLIQUE-OBJECT (A fe_count) (AJP fe_count)
    ((PPFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (INI fe_count) (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((1 2 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Foot-TheWord (and (isa :NOUN Foot-UnitOfMeasure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foot-TheWord (and (isa :NOUN BottomSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts)) (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "football") Field-TheWord
 (and (isa :NOUN FootballField)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "football") Helmet-TheWord
 (and (isa :NOUN FootballHelmet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "football") Player-TheWord
 (and (isa :NOUN FootballPlayer-American)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "football") Team-TheWord
 (and (isa :NOUN FootballTeam)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "football") Team-TheWord
 (and (isa :NOUN FootballTeam)) (frame FN_Team) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Football-TheWord
 (and (isa :NOUN FootballBall-American)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Football-TheWord (and (isa :NOUN SoccerBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foothill-TheWord (and (isa :NOUN Foothill))
 (frame FN_Relational_natural_features)
 (bindingTemplate
  (TheList (:GAP (DEN fe_focal_feature) (INI fe_landmark_feature))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Footprint-TheWord (and (isa :NOUN Footprint))
 (frame FN_Evidence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Footrace-TheWord (and (isa :NOUN RunningSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Footstool-TheWord (and (isa :NOUN FootStool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Footwear-TheWord (and (isa :NOUN Shoe))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle deviceUse)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 3)) ((0 1 2)) ((0 0 1)) ((0 1 1)) ((0 0 0))
   ((0 0 1) (0 0 2)) ((0 0 0) (2 0 0)) ((0 1 0) (0 1 2)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Footwear-TheWord
 (and (isa :NOUN FootwearMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "foramen") Magnum-TheWord
 (and (isa :NOUN ForamenMagnum)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forbearance-TheWord (and (isa :NOUN Refraining))
 (frame FN_Forgoing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Force-TheWord
 (and (isa :NOUN Situation)
      (relationExistsInstance cotemporal Obligation :NOUN))
 (frame FN_Being_in_effect)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_binding_principle))
   (:OBLIQUE-OBJECT (AVP fe_degree) (NP temporallyIntersects))
   (:GAP (DNI fe_binding_principle))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Force-TheWord (and (isa :NOUN MilitaryOrganization))
 (frame FN_Military)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn on) fe_descriptor)
    ((PPFn from) fe_descriptor ownerOfProprietaryThing)
    ((PPFn of) fe_domain to-Generic ownerOfProprietaryThing)
    (VPfin ownerOfProprietaryThing)
    (A fe_descriptor fe_domain hasMembers ownerOfProprietaryThing)
    (AJP fe_descriptor fe_domain to-Generic hasMembers ownerOfProprietaryThing)
    (VPing ownerOfProprietaryThing)
    (N fe_descriptor fe_domain to-Generic hasMembers ownerOfProprietaryThing)
    (unknown ownerOfProprietaryThing))
   (:GAP (DEN impactForce) (INI ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 9 0)) ((2 0 0)) ((0 3 2)) ((0 8 4)) ((0 6 4)) ((0 5 3)) ((0 8 3))
   ((0 5 2)) ((0 3 1)) ((0 6 2)) ((0 8 2)) ((0 3 0)) ((0 8 1)) ((0 6 1))
   ((0 8 0)) ((0 6 0)) ((0 8 2) (2 0 0)) ((0 8 1) (2 0 0)) ((0 6 1) (0 7 0))
   ((0 5 1) (0 6 4)) ((0 0 0) (0 5 3)) ((0 4 0) (0 6 0)) ((0 3 2) (0 6 0))
   ((0 6 0) (0 6 3)) ((0 1 0) (0 6 2)) ((0 2 0) (0 6 1)) ((0 5 0) (0 8 1))
   ((0 6 0) (0 8 3) (2 0 0)) ((0 2 1) (0 6 0) (0 6 1)))))

(FNNounSemtrans (TheList) Force-TheWord
 (and (isa :NOUN ForceAffectingAnObjectsMovement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "force") Unit-TheWord (and (isa :NOUN UnitOfForce))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forceps-TheWord (and (isa :NOUN Forceps))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ford-TheWord (and (isa :NOUN FordInStream))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ford") Truck-TheWord (and (isa :NOUN FordTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forearm-TheWord (and (isa :NOUN Forearm))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation subRegions)
    ((PPFn below) subRegions))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 1)) ((1 0 0)) ((1 1 0) (3 0 0)) ((1 0 2) (3 0 0))
   ((1 0 1) (3 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Forebear-TheWord
 (and (isa :NOUN Animal) (ancestors Animal :NOUN)) (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego)) (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((2 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Forecaster-TheWord (and (isa :NOUN Forecaster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forefather-TheWord
 (and (isa :NOUN MaleAnimal) (ancestors Animal :NOUN)) (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego)) (:OBLIQUE-OBJECT (NP fe_alter))
   (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Forefinger-TheWord (and (isa :NOUN IndexFinger))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) fe_attachment) (AJP fe_descriptor orientation))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 1 1) (3 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 1 0) (1 1 1)) ((0 0 0) (1 1 0) (1 1 0)))))

(FNNounSemtrans (TheList) Forefoot-TheWord
 (and (isa :NOUN Foot-AnimalBodyPart)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Forehead-TheWord (and (isa :NOUN Forehead))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "foreign") Minister-TheWord
 (and (isa :NOUN MinisterOfForeignAffairs)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "foreign") Office-TheWord
 (and (isa :NOUN ForeignOffice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "foreign") Policy-TheWord
 (and (isa :NOUN ForeignPolicy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foreigner-TheWord
 (and (isa :NOUN PersonWithNationality)) (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn with) fe_descriptor) (NP fe_person))
   (:OBLIQUE-OBJECT (VPing fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn in) fe_descriptor) ((PPFn from) comesFrom-Generic)
    (AJP age fe_descriptor fe_persistent_characteristic)
    (Sinterrog fe_descriptor fe_persistent_characteristic))
   (:GAP (2nd comesFrom-Generic) (DNI comesFrom-Generic)
    (DEN comesFrom-Generic fe_person))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 4 2)) ((1 3 0)) ((0 1 0)) ((1 5 0)) ((1 2 0)) ((1 4 1))
   ((0 1 0) (1 3 0)) ((1 3 0) (1 4 2)) ((0 0 0) (0 1 0)) ((1 0 0) (1 4 2))
   ((1 0 0) (1 4 0)) ((1 1 0) (1 4 1) (1 5 0)))))

(FNNounSemtrans (TheList) Foreleg-TheWord (and (isa :NOUN Leg))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation) (N orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (2 0 0)) ((0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Forelimb-TheWord (and (isa :NOUN Forearm))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Foreman-TheWord (and (isa :NOUN Foreman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forename-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Forepaw-TheWord (and (isa :NOUN Paw))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Foreplay-TheWord (and (isa :NOUN Foreplay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foreshadowing-TheWord (and (isa :NOUN Signal))
 (frame FN_Omen)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_future_phenomenon))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "forest") Fire-TheWord (and (isa :NOUN ForestFire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forest-TheWord (and (isa :NOUN Forest))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts fe_relative_location)
    ((PPFn of) parts fe_container_possessor fe_relative_location)
    ((PPFn on) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn near) fe_relative_location)
    (N parts (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn along) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn to) fe_relative_location) (VPing fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 8 0)) ((0 1 2)) ((0 3 0)) ((0 7 0)) ((0 6 0)) ((0 5 2))
   ((0 0 1)) ((0 5 1)) ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 5 0)) ((0 0 0))
   ((0 1 2) (0 8 0)) ((0 4 0) (0 5 1)) ((0 3 0) (0 5 1)) ((0 0 1) (2 0 0))
   ((0 2 0) (0 5 0)) ((0 1 2) (0 5 0)) ((0 0 1) (0 5 0)) ((0 0 0) (0 1 2))
   ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Forestay-TheWord (and (isa :NOUN Forestay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forester-TheWord (and (isa :NOUN Forester))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forestry-TheWord (and (isa :NOUN ForestManagement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foretoken-TheWord
 (and (isa :NOUN (IndirectlyFn Promise))) (frame FN_Omen)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foretoken-TheWord
 (and (isa :NOUN (IndirectlyFn Warning))) (frame FN_Omen)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forgery-TheWord
 (and (isa :NOUN ForgingAnOfficialDocument)) (frame FN_Forging)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forgiveness-TheWord (and (isa :NOUN Forgiving))
 (frame FN_Forgiveness)
 (bindingTemplate
  (TheList (:GAP (DNI objectOfEvaluation justiceOfCourt fe_offense))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forint-TheWord (and (isa :NOUN Forint-Hungary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fork-TheWord (and (isa :NOUN Fork-SilverwarePiece))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fork-TheWord (and (isa :NOUN Fork-SilverwarePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forklift-TheWord (and (isa :NOUN Forklift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forlornness-TheWord (and (isa :NOUN Loneliness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Form-TheWord (and (isa :NOUN VisualPattern))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_item_property))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) (N fe_subtype)
    (AJP fe_subtype fe_type_property) (Sfin fe_type_property)
    (A fe_type_property))
   (:GAP (DNI fe_category) (DEN fe_category fe_subtype))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 0 0)) ((1 1 0)) ((1 0 0) (1 2 1)) ((1 0 0) (1 4 0))
   ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0) (1 2 1) (1 3 0)))))

(FNNounSemtrans (TheList) Form-TheWord (and (isa :NOUN Form-StandardizedIBO))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_item_property))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) (N fe_subtype)
    (AJP fe_subtype fe_type_property) (Sfin fe_type_property)
    (A fe_type_property))
   (:GAP (DNI fe_category) (DEN fe_category fe_subtype))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 0 0)) ((1 1 0)) ((1 0 0) (1 2 1)) ((1 0 0) (1 4 0))
   ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0) (1 2 1) (1 3 0)))))

(FNNounSemtrans (TheList) Formation-TheWord
 (and (isa :NOUN CreationEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Creating)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) outputsCreated))
   (:GAP (INI causes-Underspecified) (CNI performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Formation-TheWord
 (and (isa :NOUN Pattern-Declarative)) (frame FN_Pattern)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_entities))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Formula-TheWord (and (isa :NOUN MathematicalObject))
 (frame FN_Mathematical_relationship) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Formulation-TheWord (and (isa :NOUN Encoding))
 (frame FN_Encoding)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn in) genericPathway-Partial)
    (N infoTransferred) ((PPFn about) infoTransferred)
    ((PPFn of) infoTransferred) ((PPingFn of) infoTransferred)
    ((PPFn by) performedBy) ((PPingFn by) performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 7 0)) ((1 6 0)) ((1 5 0)) ((1 4 0)) ((1 4 0) (2 0 0))
   ((0 0 1) (1 4 0)) ((0 0 1) (1 3 0)) ((0 0 1) (1 2 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Fort-TheWord (and (isa :NOUN Fortification))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N performedBy)) (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Forthrightness-TheWord (and (isa :NOUN Reticence))
 (frame FN_Candidness)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn about) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Fortification-TheWord (and (isa :NOUN Fortification))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fortnight-TheWord
 (and (isa :NOUN (FortnightsDuration 1))) (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time)) (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fortnight-TheWord
 (and (isa :NOUN FortnightsDuration)) (frame FN_Measure_duration)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fortran") Compiler-TheWord
 (and (isa :NOUN (CompilerFn Fortran))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fortress-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    (AJP startingDate))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Fortress-TheWord
 (and (isa :NOUN FortTheShelterRegion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fortune") Cookie-TheWord
 (and (isa :NOUN FortuneCookie)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fortune-TheWord
 (and (isa :NOUN Situation)
      (relationExistsInstance postSituation ExperiencingSomething :NOUN))
 (frame FN_Destiny)
 (bindingTemplate
  (TheList (:GAP (INI affectedAgent fe_state_of_affairs))
   (:GEN (Poss affectedAgent))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Fortune-TheWord (and (isa :NOUN Luck))
 (frame FN_Luck)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN fe_state_of_affairs))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Forty-Four-TheWord (and (isa :NOUN Handgun))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "forty") Winks-TheWord (and (isa :NOUN TakingANap))
 (frame FN_Sleep)
 (bindingTemplate (TheList (:SUBJECT (NP doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Forum-TheWord (and (isa :NOUN WebSite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fossil-TheWord (and (isa :NOUN Fossil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fossil") Fuel-TheWord (and (isa :NOUN FossilFuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foundation-TheWord
 (and (isa :NOUN Architectural_Structure)) (frame FN_Architectural_part)
 (bindingTemplate
  (TheList (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foundation-TheWord (and (isa :NOUN MakeupBase))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor))
   (:GAP (DEN decorativeObjectsApplied))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Foundation-TheWord (and (isa :NOUN Base-Support))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foundation-TheWord
 (and (isa :NOUN FoundationOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foundation-TheWord (and (isa :NOUN MakeupBase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foundry-TheWord (and (isa :NOUN Foundry-Building))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fountain") Pen-TheWord (and (isa :NOUN FountainPen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fountain-TheWord
 (and (isa :NOUN Fountain-Artificial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "four-cycle") Engine-TheWord
 (and (isa :NOUN FourCycleEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "four-speed" "automatic") Transmission-TheWord
 (and (isa :NOUN AutomaticTransmission4Speed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "four" "unit") Property-TheWord
 (and (isa :NOUN FourUnitProperty)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "four" "wheel") Steering-TheWord
 (and (isa :NOUN FourWheelSteeringSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fourteen-TheWord
 (and (isa :NOUN Cardinal-Mathematical)) (frame FN_Cardinal_numbers)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fourth") Ventricle-TheWord
 (and (isa :NOUN FourthVentricle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fox-TheWord (and (isa :NOUN Fox)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Foyer-TheWord (and (isa :NOUN Lobby-Room))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fracture-TheWord (and (isa :NOUN BoneFracture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fragility-TheWord (and (isa :NOUN Fragility))
 (frame FN_Level_of_force_resistance)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_resisting_entity))
   (:OBLIQUE-OBJECT ((PPFn of) fe_resisting_entity)
    (A fe_degree fe_descriptor fe_domain fe_resisting_entity)
    (N fe_resisting_entity))
   (:GAP (INI fe_opposing_force) (DNI fe_resisting_entity))
   (:GEN (Poss fe_resisting_entity))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0)) ((1 2 0)) ((1 1 3)) ((1 1 1))
   ((1 1 2) (3 0 0)) ((1 0 0) (1 1 2)) ((1 1 1) (3 0 0)) ((1 0 0) (1 1 1))
   ((0 0 0) (1 1 1)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Fragment-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed)
    (N fe_piece_prop stuffUsed) (A stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 2 1)) ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Fragment-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fragrance-TheWord (and (isa :NOUN PleasantOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Fragrance-TheWord (and (isa :NOUN Odor))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy perceivedThings from-Generic))
   (:OBLIQUE-OBJECT (AJP perceivedThings)
    ((PPFn of) perceivedThings from-Generic))))
 (groupPatterns
  (TheSet ((1 1 1)) ((0 0 2)) ((1 1 0)) ((0 0 1)) ((1 0 0)) ((0 0 0))
   ((0 0 2) (1 1 0)) ((0 0 0) (1 1 1)) ((0 0 2) (1 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Frame-TheWord (and (isa :NOUN Frame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Framework-TheWord
 (and (isa :NOUN Framework-SupportingStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Franchise-TheWord (and (isa :NOUN FranchiseContract))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Francium-TheWord (and (isa :NOUN Francium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fratricide-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers)) (:OBLIQUE-OBJECT (AJP fe_manner))
   (:GAP (INI killers victim)) (:GEN (Poss killers))))
 (groupPatterns (TheSet ((1 0 0)) ((3 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Fraud-TheWord (and (isa :NOUN Fraud)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fraud-TheWord (and (isa :NOUN Fraud))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fray-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Fighting_activity) (bindingTemplate (TheList (:GAP (DEN fe_fight))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Freckle-TheWord (and (isa :NOUN Freckle))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment)) (:GAP (DEN markCreated))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Freefall-TheWord (and (isa :NOUN Falling-Freefall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "free" "for") All-TheWord
 (and (isa :NOUN Fight-Physical)) (frame FN_Fighting_activity)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Free-For-All-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Fighting_activity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner)) (:GAP (DEN fe_fight))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "free" "standing") Range-TheWord
 (and (isa :NOUN FreeStandingCookingRange)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "free") Weight-TheWord (and (isa :NOUN FreeWeight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "free") Will-TheWord (and (isa :NOUN FreedomOfAction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Freebase-TheWord (and (isa :NOUN Cocaine-Crack))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Freedom-TheWord
 (and (isa :NOUN GainingPoliticalIndependence)) (frame FN_Change_of_leadership)
 (bindingTemplate (TheList (:GAP (DNI takesControl)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "freestanding") Stove-TheWord
 (and (isa :NOUN CookingRange-Freestanding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Freeway-TheWord (and (isa :NOUN Freeway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn of) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Freeze-TheWord (and (isa :NOUN EndingASituation))
 (frame FN_Activity_pause)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A processTypeForAccomplishmentType)
    ((PPFn on) processTypeForAccomplishmentType) ((PPFn by) doneBy)
    (N processTypeForAccomplishmentType duration)
    (AJP doneBy fe_completeness fe_depictive temporallyIntersects))
   (:GAP (DNI processTypeForAccomplishmentType doneBy) (INI doneBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((1 3 0)) ((1 0 0)) ((1 1 0) (1 4 3))
   ((1 1 0) (1 3 1)) ((1 1 0) (1 4 1)) ((1 1 0) (1 4 0))
   ((1 1 0) (1 3 1) (1 4 2)) ((1 1 0) (1 2 0) (1 4 3)))))

(FNNounSemtrans (TheList) Freezer-TheWord (and (isa :NOUN Freezer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "freezing") Point-TheWord
 (and (isa :NOUN Temperature)
      (relationExistsInstance freezingPoint PartiallyTangible :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "french") Franc-TheWord (and (isa :NOUN Franc-France))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "french") Fries-TheWord (and (isa :NOUN FrenchFry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "french") Horn-TheWord (and (isa :NOUN FrenchHorn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) French-TheWord (and (isa :NOUN FrenchLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) French-TheWord (and (isa :NOUN FrenchPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frenchman-TheWord (and (isa :NOUN FrenchPerson))
 (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor)
    ((PPFn from) fe_descriptor comesFrom-Generic)
    (AJP age fe_descriptor fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    (Sinterrog fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN comesFrom-Generic fe_person))))
 (groupPatterns
  (TheSet ((1 2 2)) ((0 0 0)) ((1 1 0)) ((1 2 1)) ((1 2 0)) ((1 2 2) (1 4 1))
   ((0 0 0) (0 0 0)) ((0 0 0) (1 4 1)) ((1 2 0) (1 3 1)) ((1 2 0) (1 2 2))
   ((1 2 0) (1 2 1)) ((1 1 1) (1 2 2) (1 4 0)) ((0 0 0) (1 2 2) (1 3 0))
   ((1 0 0) (1 2 1) (1 2 2)))))

(FNNounSemtrans (TheList) Frenchwoman-TheWord
 (and (isa :NOUN (FemaleFn FrenchPerson))) (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (VPing fe_descriptor)
    (AJP fe_descriptor fe_persistent_characteristic)
    (N fe_persistent_characteristic)
    (Sinterrog fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN comesFrom-Generic fe_person))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((1 1 1)) ((0 0 0)) ((1 3 0)) ((1 1 0) (1 1 1))
   ((1 0 0) (1 1 1) (1 1 1) (1 1 1)))))

(FNNounSemtrans (TheList) Frenchy-TheWord (and (isa :NOUN FrenchPerson))
 (frame FN_People_by_origin) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frequency-TheWord (and (isa :NOUN Frequency))
 (frame FN_Frequency)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_event))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "fresh") Water-TheWord (and (isa :NOUN Water-Fresh))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fret-TheWord
 (and (isa :NOUN Fret-MusicalInstrumentPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Friction-TheWord (and (isa :NOUN FrictionProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Friday-TheWord (and (isa :NOUN Friday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:GAP (DNI fe_relative_time) (DEN fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Friend-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance likesAsFriend PerceptualAgent-Embodied :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Friend-TheWord
 (and (isa :NOUN Person) (relationInstanceExists friends :NOUN Person))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList
   (:SUBJECT (Poss fe_partner_2) (NP fe_partner_1 fe_partner_2 fe_partners))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn like) fe_depictive)
    (NP fe_partner_1) ((PPFn of) fe_partner_2) ((PPFn to) fe_partner_2))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partners))
   (:NOUN (N fe_partner_1)) (:GEN (Poss fe_partner_2))
   (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((0 1 2)) ((4 0 0)) ((1 3 0)) ((0 1 1)) ((1 1 0)) ((1 0 0))
   ((0 1 0) (4 0 0)) ((0 0 0) (0 1 0)) ((0 1 0) (1 4 0)) ((0 1 0) (1 3 0))
   ((1 2 0) (4 0 0)) ((4 0 0) (5 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Friendship-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn with) fe_partner_2))
   (:GAP (DNI fe_partner_1) (INI fe_partners))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Frieze-TheWord (and (isa :NOUN Frieze))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fringe-TheWord (and (isa :NOUN Fringe))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN parts) (2nd wearer))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Frisbee-TheWord (and (isa :NOUN FlyingDisc))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frisian-TheWord (and (isa :NOUN FrisianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frock-TheWord (and (isa :NOUN Dress))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_descriptor) ((PPFn in) fe_descriptor)
    ((PPFn with) fe_descriptor) ((PPFn of) mainConstituent)
    (AJP fe_descriptor clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle)
    ((PPingFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss itemWorn wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 5 2)) ((0 4 1)) ((0 5 1)) ((0 5 0)) ((0 4 0))
   ((0 4 1) (0 6 0)) ((0 4 0) (2 0 1)) ((0 2 0) (0 5 1)) ((0 4 0) (0 5 1))
   ((0 4 0) (0 5 0)) ((0 4 0) (0 4 0)) ((0 3 0) (0 4 1) (2 0 1))
   ((0 1 0) (0 4 1) (0 5 1)) ((0 0 0) (0 5 1) (0 5 2))
   ((0 4 0) (0 5 1) (2 0 0)) ((0 4 0) (0 4 0) (0 4 1))
   ((0 3 0) (0 4 0) (0 5 0)) ((0 4 0) (0 4 0) (0 5 1)))))

(FNNounSemtrans (TheList) Frog-TheWord (and (isa :NOUN Frog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "front" "bucket" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-FrontBucket)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Front-TheWord (and (isa :NOUN FrontCompany))
 (frame FN_Front_for)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_front))
   (:OBLIQUE-OBJECT ((PPFn for) fe_illicit_activity)
    ((PPingFn for) fe_illicit_activity))
   (:GAP (DEN fe_front))))
 (groupPatterns (TheSet ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Front-TheWord (and (isa :NOUN AirFrontEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Front-TheWord (and (isa :NOUN FrontSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "frontage") Road-TheWord
 (and (isa :NOUN FrontageRoad)) (frame FN_Roadways) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "frontal") Bone-TheWord (and (isa :NOUN FrontalBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "frontal") Lobe-TheWord (and (isa :NOUN FrontalLobe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "frontal") Sinus-TheWord
 (and (isa :NOUN FrontalSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frontloader-TheWord
 (and (isa :NOUN Excavator-Vehicle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frost-TheWord (and (isa :NOUN Frost)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frown-TheWord (and (isa :NOUN Frowning))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (N fe_conveyed_emotion) (AJP fe_conveyed_emotion fe_degree)
    ((PPFn of) fe_conveyed_emotion fe_internal_cause)
    ((PPFn in) fe_intended_perceiver subRegions) ((PPFn on) subRegions)
    ((PPFn to) subRegions))
   (:GAP (DEN fe_expression) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((3 0 0)) ((0 0 0)) ((1 2 1)) ((1 1 1)) ((1 1 0))
   ((0 0 0) (1 4 0)) ((1 2 1) (3 0 0)) ((1 1 1) (1 4 0)) ((0 0 0) (1 1 1))
   ((1 1 0) (1 4 0)) ((1 1 0) (1 3 1)) ((1 0 0) (3 0 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 1 1) (1 2 0)) ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Fructose-TheWord (and (isa :NOUN Fructose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frugality-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate (TheList (:GEN (Poss fe_resource_controller))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fruit-TheWord (and (isa :NOUN Fruit)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType) (A activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "fruit") Tree-TheWord (and (isa :NOUN FruitTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fruitcake-TheWord (and (isa :NOUN Fruitcake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frustration-TheWord (and (isa :NOUN Frustration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "frying") Pan-TheWord (and (isa :NOUN Skillet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Frying-TheWord (and (isa :NOUN Frying))
 (frame FN_Cooking_creation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N foodItemPrepared)) (:GAP (INI performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fuck-TheWord (and (isa :NOUN SexualCopulation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fuck-Up-TheWord
 (and (isa :NOUN (UnsuccessfulFn Attempting))) (frame FN_Bungling)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuck" "up") [Event]-TheWord
 (and (isa :NOUN (UnsuccessfulFn Attempting))) (frame FN_Bungling)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fudge-TheWord (and (isa :NOUN Fudge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Additive-TheWord
 (and (isa :NOUN FuelOxygenate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Cell-TheWord (and (isa :NOUN FuelCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Gauge-TheWord (and (isa :NOUN FuelGauge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Injector-TheWord
 (and (isa :NOUN FuelInjector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Oil-TheWord (and (isa :NOUN HeatingOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Pump-TheWord
 (and (isa :NOUN FuelPump-VehiclePart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Tank-TheWord (and (isa :NOUN FuelTank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuel") Tank-TheWord (and (isa :NOUN VehicleFuelTank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fuel-TheWord
 (and (isa :NOUN CombustibleFuelSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fueling-TheWord
 (and (isa :NOUN (MakingAvailableFn CombustibleFuelSubstance))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fulcrum-TheWord (and (isa :NOUN Fulcrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "full") Bath-TheWord (and (isa :NOUN FullBath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fullback-TheWord (and (isa :NOUN FootballFullback))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fullness-TheWord (and (isa :NOUN Fullness))
 (frame FN_Fullness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fumble-TheWord
 (and (isa :NOUN (UnsuccessfulFn Attempting))) (frame FN_Bungling)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A doneBy) ((PPFn from) doneBy) (N situationLocation)
    (AJP fe_degree))
   (:GAP (DEN objectActedOn) (DNI doneBy))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "fume") Hood-TheWord (and (isa :NOUN FumeHood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fun-TheWord (and (isa :NOUN Enjoyment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Function-TheWord
 (and (isa :NOUN Function-Denotational)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fund-TheWord
 (and (isa :NOUN ProvidingEconomicSupport)) (frame FN_Money)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fundamental") Law-TheWord
 (and (isa :NOUN Constitution)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fundamentalism-TheWord
 (and (isa :NOUN FundamentalistChristianity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fundraiser-TheWord
 (and (isa :NOUN FundraisingActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Funds-TheWord (and (isa :NOUN Currency))
 (frame FN_Money)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A activeIngredientsOfType))
   (:GAP (DEN moneyTransferred)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Funeral-TheWord (and (isa :NOUN Funeral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fungi-TheWord (and (isa :NOUN Fungus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fungus-TheWord (and (isa :NOUN Fungus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Funicular-TheWord (and (isa :NOUN Funicular))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Funnel-TheWord (and (isa :NOUN Funnel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "funny") Bone-TheWord (and (isa :NOUN UlnarNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fur") Coat-TheWord (and (isa :NOUN FurCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fur-TheWord (and (isa :NOUN Fur)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fur-TheWord (and (isa :NOUN FurPelt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Furlong-TheWord (and (isa :NOUN UnitOfDistance))
 (frame FN_Measure_linear_extent) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Furlong-TheWord (and (isa :NOUN Furlong))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Furnishings-TheWord
 (and (isa :NOUN HumanOccupationConstructObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "furniture" "that" "can" "support" "a") Person-TheWord
 (and (isa :NOUN Person-SupportingFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Furniture-TheWord (and (isa :NOUN FurniturePiece))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Furniture-TheWord (and (isa :NOUN FurniturePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Furrow-TheWord (and (isa :NOUN Furrow-Topographical))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fury-TheWord (and (isa :NOUN (HighAmountFn Anger)))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))
   (:GAP (INI (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Fuse-TheWord
 (and (isa :NOUN Fuse-ElectricalComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "fuse") Box-TheWord (and (isa :NOUN FuseBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fuselage-TheWord (and (isa :NOUN AirplaneFuselage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fusion-TheWord (and (isa :NOUN FusionEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Fusion-TheWord (and (isa :NOUN NuclearProcess))
 (frame FN_Nuclear_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Futon-TheWord
 (and (isa :NOUN Futon-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Future-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance
       (Kappa (?evt ?poss)
        (and (actors ?evt ?actor)
             (optionsAvailable ?actor ?evt objectSelected ?poss)))
       Event :NOUN))
 (frame FN_Alternatives)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) topicOfIndividual))
   (:GAP (DNI topicOfIndividual) (INI fe_situation) (DEN fe_situation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) G-String-TheWord (and (isa :NOUN ThongUnderwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) G-TheWord
 (and (isa :NOUN EarthsGravity-UnitOfAcceleration)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) G-TheWord (and (isa :NOUN GeneralRating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gadget-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N deviceUse) ((PPFn for) deviceUse)
    ((PPingFn for) deviceUse) (VPto deviceUse) (AJP deviceUse fe_user))
   (:GAP (DEN fe_gizmo)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 4 0)))))

(FNNounSemtrans (TheList) Gadolinium-TheWord (and (isa :NOUN Gadolinium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gaelic-TheWord (and (isa :NOUN GaelicLanguageFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gaggle-TheWord (and (isa :NOUN (GroupFn Goose-Bird)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Gain-TheWord (and (isa :NOUN IncreaseEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT (N fe_attribute fe_difference)
    ((PPFn to) fe_final_value))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 0 1) (1 1 0)))))

(FNNounSemtrans (TheList) Gala-TheWord (and (isa :NOUN Gala))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (NP temporallyIntersects)
    ((PPFn on) temporallyIntersects) (AJP clothingStyle temporallyIntersects)
    (N host fe_occasion eventOccursAt clothingStyle temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects))
   (:GAP (DEN fe_social_event))
   (:GEN (Poss beneficiary host temporallyIntersects))))
 (groupPatterns
  (TheSet ((3 0 2)) ((1 3 0)) ((1 5 0)) ((1 4 2)) ((1 4 1)) ((1 4 0)) ((0 0 0))
   ((1 4 3) (1 5 1)) ((1 3 1) (1 4 1)) ((1 0 0) (1 4 1)) ((1 4 3) (3 0 1))
   ((1 4 1) (3 0 1)) ((1 2 0) (1 4 1) (1 4 4)) ((1 2 0) (1 4 1) (1 5 0))
   ((0 0 1) (1 1 0) (1 5 0)) ((0 0 0) (1 4 1) (1 5 0) (3 0 0)))))

(FNNounSemtrans (TheList) Galaxy-TheWord (and (isa :NOUN Galaxy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gallbladder-TheWord (and (isa :NOUN GallBladder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Galleon-TheWord (and (isa :NOUN Galleon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gallery-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) ((PPFn in) fe_container_possessor)
    (AJP locationUse) (VPto locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Gallery-TheWord
 (and (isa :NOUN Gallery-ArtDisplayStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gallinaceous") Bird-TheWord
 (and (isa :NOUN GallinaceousBird)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gallium-TheWord (and (isa :NOUN Gallium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gallon-TheWord (and (isa :NOUN Gallon-US))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Galosh-TheWord (and (isa :NOUN Galosh))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "galvanized") Metal-TheWord
 (and (isa :NOUN GalvanizedMetal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Galvanometer-TheWord (and (isa :NOUN Galvanometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gambler-TheWord
 (and (isa :NOUN (FrequentPerformerFn Gambling))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gambler-TheWord (and (isa :NOUN Gambler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gambling") Addiction-TheWord
 (and (isa :NOUN (AddictionFn Gambling))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gambling-TheWord (and (isa :NOUN Gambling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "game") Equipment-TheWord
 (and (isa :NOUN Game-EquipmentSet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "game") Board-TheWord (and (isa :NOUN GameBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "game" "of") Chance-TheWord (and (isa :NOUN Gambling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "game") Piece-TheWord (and (isa :NOUN GameToken))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Game-TheWord (and (isa :NOUN Game)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Game-TheWord (and (isa :NOUN PlayingAGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Game-TheWord (and (isa :NOUN WildAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gamma" "emission") Sensor-TheWord
 (and (isa :NOUN GammaEmissionSensor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gamma") Radiation-TheWord (and (isa :NOUN GammaRay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gang-TheWord (and (isa :NOUN Gang))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_aggregate_property) ((PPFn of) fe_individuals)
    (AJP fe_aggregate_property fe_individuals))
   (:GAP (DEN fe_aggregate) (INI fe_individuals))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 2 1))
   ((0 1 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Gap-TheWord (and (isa :NOUN Gap-Topographical))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString))
    ((PPFn between) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn through) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "garage") Door-TheWord (and (isa :NOUN GarageDoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garage") Doorway-TheWord
 (and (isa :NOUN GarageDoorway)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garage-TheWord (and (isa :NOUN AutoMechanicShop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garage-TheWord (and (isa :NOUN Garage-Household))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garb-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) deviceUse) (N deviceUse)
    (AJP fe_descriptor clothingStyle deviceUse wearer) ((PPFn of) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 2 3)) ((0 2 2)) ((0 2 1)) ((0 2 0))
   ((0 1 0) (2 0 0)) ((0 0 0) (0 2 0)) ((0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList "garbage") Man-TheWord
 (and (isa :NOUN GarbageCollector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garbage-TheWord (and (isa :NOUN Garbage-Generic))
 (frame FN_Desirability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garbage") Truck-TheWord
 (and (isa :NOUN GarbageTruck)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garden") Archway-TheWord
 (and (isa :NOUN ArchwayForGarden)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garden") Compost-TheWord
 (and (isa :NOUN GardenCompost)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garden") Hose-TheWord (and (isa :NOUN GardenHose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garden") Rake-TheWord (and (isa :NOUN Rake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garden-TheWord (and (isa :NOUN Garden))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor (InverseBinaryPredicateFn nameString))
    (N fe_descriptor (InverseBinaryPredicateFn nameString))
    (A (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale) (INI locationUse) (DNI locationUse))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 1 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 1))
   ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList "garden") Trellis-TheWord
 (and (isa :NOUN TrellisForGarden)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gardener-TheWord (and (isa :NOUN Gardener))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person)) (:OBJECT ((PPFn of) employer))
   (:OBLIQUE-OBJECT ((PPFn for) employer) ((PPFn from) employer)
    ((PPFn to) employer) ((PPFn at) employer employer) ((PPFn in) employer)
    ((PPFn of) employer) ((PPFn on) employer) (AJP fe_rank)
    (N employer fe_rank activeIngredientsOfType)
    (A fe_rank activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer employer))
   (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((2 8 2)) ((2 9 1)) ((2 9 0)) ((5 0 0)) ((4 0 0)) ((2 1 0)) ((2 8 0))
   ((2 8 2) (5 0 0)) ((2 8 1) (5 0 0)) ((2 9 0) (5 0 0)) ((2 8 2) (4 0 0))
   ((2 4 0) (2 8 1)) ((0 0 0) (1 0 0)) ((4 0 0) (5 0 0)) ((0 0 0) (2 2 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (2 3 0)) ((0 0 0) (2 6 0) (2 7 0))
   ((0 0 0) (2 5 0) (2 9 0)) ((0 0 0) (2 3 0) (2 9 0))
   ((0 0 0) (2 2 0) (2 3 0)))))

(FNNounSemtrans (TheList "gardening") Shears-TheWord
 (and (isa :NOUN Shears-GardeningTool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gardening") Tool-TheWord
 (and (isa :NOUN GardeningTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gargle-TheWord (and (isa :NOUN Mouthwash))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gargoyle-TheWord (and (isa :NOUN Gargoyle-Sculpture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garlic") Clove-TheWord (and (isa :NOUN GarlicClove))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garlic") Press-TheWord (and (isa :NOUN GarlicPress))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garlic-TheWord (and (isa :NOUN Garlic))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garment-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn of) mainConstituent)
    ((PPFn on) subRegions) ((PPFn with) subRegions)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 2)) ((0 5 1)) ((0 4 2)) ((0 1 0)) ((0 5 0)) ((0 4 1))
   ((0 4 0)) ((0 4 3) (2 0 0)) ((0 5 0) (2 0 0)) ((0 5 0) (0 5 1))
   ((0 4 1) (0 4 2)) ((0 4 0) (2 0 0)) ((0 4 0) (0 5 0)) ((0 4 0) (0 4 1))
   ((0 4 0) (0 4 0)) ((0 0 0) (0 4 0)) ((0 3 0) (0 4 0) (2 0 0))
   ((0 4 0) (0 5 1) (2 0 0)) ((0 2 0) (0 4 0) (0 4 2)))))

(FNNounSemtrans (TheList) Garment-TheWord (and (isa :NOUN ClothingItem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garment") Bag-TheWord (and (isa :NOUN GarmentBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garnet-TheWord (and (isa :NOUN Garnet-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garret-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garrotte-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP mainConstituent) (AJP activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Garrote-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "garter") Belt-TheWord (and (isa :NOUN Garter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Garter-TheWord (and (isa :NOUN Garter))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "gas") Burner-TheWord (and (isa :NOUN GasStoveBurner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Cap-TheWord (and (isa :NOUN GasCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Can-TheWord (and (isa :NOUN GasCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Company-TheWord (and (isa :NOUN GasCompany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas" "discharge") Lamp-TheWord
 (and (isa :NOUN GasDischargeLamp)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Filter-TheWord
 (and (isa :NOUN AutomotiveGasFilter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Fireplace-TheWord
 (and (isa :NOUN GasFireplace)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Grill-TheWord (and (isa :NOUN GasGrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Line-TheWord (and (isa :NOUN GasPipeline))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas" "oil" "separator") Facility-TheWord
 (and (isa :NOUN GasOilSeparatorFacility)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Pedal-TheWord (and (isa :NOUN GasPedal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Pump-TheWord (and (isa :NOUN GasolinePump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Range-TheWord (and (isa :NOUN GasCookingRange))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Station-TheWord
 (and (isa :NOUN ServiceStation)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Tank-TheWord (and (isa :NOUN VehicleFuelTank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Mask-TheWord
 (and (isa :NOUN ProtectiveFiltrationMask)) (frame FN_Accoutrements)
 (bindingTemplate (TheList (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gas-TheWord (and (isa :NOUN GasolineFuel))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP constituents fe_descriptor) (Srel fe_descriptor)
    (N constituents fe_descriptor fe_inherent_purpose))
   (:GAP (DEN stuffUsed))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 0 1)) ((0 2 0)) ((0 0 0)) ((0 1 0) (0 2 1))
   ((0 0 1) (0 0 1)) ((0 0 1) (0 2 0)))))

(FNNounSemtrans (TheList) Gas-TheWord (and (isa :NOUN GaseousTangibleThing))
 (frame FN_Substance_by_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gas-TheWord (and (isa :NOUN Gaseous-StateOfMatter))
 (frame FN_Substance_by_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Treatment-TheWord
 (and (isa :NOUN GasTreatment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Turbine-TheWord
 (and (isa :NOUN GasTurbineEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gas") Well-TheWord (and (isa :NOUN GasWell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gasoline") Engine-TheWord
 (and (isa :NOUN GasolineEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gasoline" "powered") Engine-TheWord
 (and (isa :NOUN GasolineEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gasoline") Station-TheWord
 (and (isa :NOUN ServiceStation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gasoline-TheWord (and (isa :NOUN GasolineFuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gasp-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Gasping)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn at) (InverseBinaryPredicateFn explains-Generic))
    (AJP fe_internal_cause fe_manner) ((PPFn from) from-Generic emitter)
    ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 1)) ((0 0 0)) ((1 1 1)) ((1 3 0)) ((1 0 0))
   ((1 1 1) (1 3 1)) ((0 0 0) (1 1 1)) ((1 1 1) (1 2 0)) ((1 2 1) (1 3 0))
   ((0 0 0) (1 3 0)) ((1 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Gastroenterologist-TheWord
 (and (isa :NOUN Gastroenterologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gastroenterology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Gastroenterologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gastroscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gat-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gate-TheWord (and (isa :NOUN Gate))
 (frame FN_Connecting_architecture) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gate-TheWord (and (isa :NOUN Gate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gated") Community-TheWord
 (and (isa :NOUN GatedCommunity)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gater-TheWord (and (isa :NOUN Alligator))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gateway-TheWord (and (isa :NOUN Gateway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gathering-TheWord
 (and (isa :NOUN Gathering-SocialGroup)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gatling") Gun-TheWord (and (isa :NOUN GatlingGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gauge-TheWord (and (isa :NOUN Gauge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gauntlet-TheWord (and (isa :NOUN FalconryGlove))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "gay") Man-TheWord
 (and (isa :NOUN HomosexualMaleHuman)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gaze-TheWord (and (isa :NOUN Perceiving-Voluntary))
 (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_phenomenon))
   (:OBJECT (NP fe_phenomenon))
   (:OBLIQUE-OBJECT (AVP fe_direction) ((PPFn across) fe_direction)
    ((PPFn around) fe_direction) ((PPFn in) fe_direction)
    ((PPFn into) fe_direction) ((PPFn over) fe_direction)
    ((PPFn round) fe_direction) ((PPFn towards) fe_direction) (AJP fe_manner)
    ((PPFn with) fe_manner) ((PPFn between) performedBy)
    ((PPFn of) performedBy) ((PPFn from) fe_phenomenon)
    ((PPFn upon) fe_phenomenon) ((PPFn to) fe_phenomenon)
    ((PPFn at) fe_phenomenon))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((2 11 0)) ((2 14 0) (3 0 0)) ((2 15 0) (3 0 0))
   ((0 0 1) (3 0 0)) ((0 0 0) (2 14 0)) ((0 0 0) (1 0 0)) ((2 8 0) (3 0 0))
   ((2 8 0) (2 11 0)) ((2 8 0) (2 10 0)) ((2 7 0) (3 0 0)) ((0 0 0) (2 6 0))
   ((2 1 0) (3 0 0)) ((0 0 0) (2 0 0)) ((2 1 0) (2 8 0))
   ((2 12 0) (2 14 0) (3 0 0)) ((2 8 0) (2 14 0) (3 0 0))
   ((2 0 0) (2 12 0) (3 0 0)) ((0 0 0) (2 5 0) (3 0 0))
   ((2 7 0) (2 8 0) (3 0 0)) ((2 4 0) (2 8 0) (3 0 0))
   ((2 3 0) (2 8 0) (3 0 0)) ((0 0 0) (2 2 0) (2 8 0))
   ((0 0 0) (2 1 0) (2 8 0)) ((0 0 0) (2 12 0) (2 14 0) (3 0 0))
   ((0 0 0) (2 8 0) (2 12 0) (3 0 0))
   ((0 0 0) (2 8 0) (2 9 0) (2 13 0) (3 0 0)))))

(FNNounSemtrans (TheList) Gazebo-TheWord (and (isa :NOUN Gazebo))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gazebo-TheWord (and (isa :NOUN Gazebo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gazelle-TheWord (and (isa :NOUN Gazelle))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gear-TheWord (and (isa :NOUN Gear)) (frame FN_Gizmo)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP deviceUse))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Gear-TheWord (and (isa :NOUN Gear)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gecko-TheWord (and (isa :NOUN Gecko)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geezer-TheWord (and (isa :NOUN OldHuman))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP age fe_person))
   (:OBLIQUE-OBJECT ((PPFn at) fe_context_of_acquaintance)
    ((PPFn in) fe_descriptor) ((PPFn from) comesFrom-Generic)
    (A comesFrom-Generic) (AJP age fe_descriptor fe_persistent_characteristic)
    (N fe_context_of_acquaintance fe_persistent_characteristic)
    ((PPFn with) fe_persistent_characteristic)
    (NP comesFrom-Generic fe_person))
   (:GAP (DEN age fe_person)) (:NOUN (NP fe_person))
   (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 4 2)) ((1 7 0)) ((1 1 0)) ((1 0 0)) ((4 0 0)) ((0 0 0) (1 6 0))
   ((0 0 1) (1 5 1)) ((1 3 0) (1 7 1)) ((0 0 1) (1 4 1)) ((1 4 0) (1 4 1))
   ((0 0 1) (1 4 0) (1 4 2)) ((1 2 0) (1 4 2) (1 5 0) (3 0 0)))))

(FNNounSemtrans (TheList) Gelatin-TheWord (and (isa :NOUN Gelatin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gelding-TheWord (and (isa :NOUN Horse-Gelding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gem-TheWord (and (isa :NOUN GemStone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gemini-TheWord (and (isa :NOUN Gemini-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gene-TheWord (and (isa :NOUN Gene-HereditaryUnit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Genealogy-TheWord (and (isa :NOUN Genealogy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "general") Anesthetic-TheWord
 (and (isa :NOUN GeneralAnesthetic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "general") Ledger-TheWord
 (and (isa :NOUN GeneralLedger-Document)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "general") Officer-TheWord
 (and (isa :NOUN GeneralOfficer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "general") Practitioner-TheWord
 (and (isa :NOUN GeneralPractitioner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "general") Surgery-TheWord
 (and (isa :NOUN GeneralSurgery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) General-TheWord (and (isa :NOUN Title))
 (frame FN_Appellations)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_context) (AJP fe_context activeIngredientsOfType)
    (N fe_context activeIngredientsOfType))
   (:GAP (DEN fe_title))
   (:APPOSITIVE (NP fe_context (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 2 1) (2 0 1)) ((0 0 0) (2 0 1)) ((2 0 0) (2 0 1))
   ((0 1 0) (2 0 1)) ((0 1 1) (0 2 0) (2 0 1)))))

(FNNounSemtrans (TheList) General-TheWord (and (isa :NOUN General-Rank))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) fe_governed)
    ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Generation-TheWord
 (and (isa :NOUN
       (IntentionallyFn (CollectionIntersection2Fn CreationEvent Action))))
 (frame FN_Intentionally_create)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N outputsCreated) ((PPFn of) outputsCreated)
    (AVP fe_manner))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Generation-TheWord (and (isa :NOUN Generation))
 (frame FN_Stage_of_progress)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP objectActedOn) ((PPFn of) objectActedOn))
   (:GAP (DEN objectActedOn) (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Generator-TheWord
 (and (isa :NOUN ElectricalGenerator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "genetic") Engineering-TheWord
 (and (isa :NOUN GeneticEngineering)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "genetic") Mutation-TheWord
 (and (isa :NOUN GeneticMutationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geneticist-TheWord (and (isa :NOUN Geneticist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Genetics-TheWord (and (isa :NOUN Genetics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "genital") Herpes-TheWord
 (and (isa :NOUN GenitalHerpes)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Genitalia-TheWord (and (isa :NOUN ExternalSexOrgan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Genius-TheWord (and (isa :NOUN Genius))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Genocide-TheWord (and (isa :NOUN GenocideCampaign))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers))
   (:OBLIQUE-OBJECT (AJP fe_degree killers) (N fe_degree by-Underspecified)
    ((PPFn against) victim) ((PPFn of) victim) ((PPFn over) victim)
    ((PPFn on) victim))
   (:GAP (DNI victim) (INI killers victim))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 1)) ((0 0 0)) ((1 4 0)) ((1 3 0)) ((1 0 1)) ((1 1 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (0 0 0)) ((1 1 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Genome-TheWord (and (isa :NOUN Genome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gentleman-TheWord (and (isa :NOUN MaleHuman))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn on) fe_descriptor)
    ((PPFn from) fe_ethnicity comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    (N comesFrom-Generic fe_persistent_characteristic)
    ((PPFn of) fe_descriptor fe_persistent_characteristic) (NP fe_person))
   (:GAP (DEN fe_person)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 5 1)) ((1 3 4)) ((1 2 1)) ((1 5 0)) ((1 3 3)) ((1 2 0))
   ((1 3 2)) ((1 4 0)) ((1 1 0)) ((1 0 0)) ((1 3 1)) ((1 3 0))
   ((0 0 0) (1 6 1)) ((0 0 0) (1 5 1)) ((1 3 2) (1 3 4)) ((0 0 0) (1 6 0))
   ((1 0 0) (1 5 1)) ((1 0 0) (1 3 2)) ((1 3 0) (3 0 0)) ((1 3 0) (1 3 4))
   ((1 3 0) (1 3 2)) ((0 0 0) (1 3 4) (1 4 1)) ((1 3 0) (1 3 4) (1 4 1))
   ((0 0 0) (1 3 4) (1 3 4) (1 4 1)))))

(FNNounSemtrans (TheList "genus") Staphylococcus-TheWord
 (and (isa :NOUN Staphylococcus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "genus") Streptococcus-TheWord
 (and (isa :NOUN Streptococcus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Genus-TheWord (and (isa :NOUN BiologicalGenus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "geographic" "information") System-TheWord
 (and (isa :NOUN GeographicInformationSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "geographic") Point-TheWord
 (and (isa :NOUN GeographicalPlace-0D)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "geographical") Area-TheWord
 (and (isa :NOUN GeographicalRegion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geography-TheWord (and (isa :NOUN Geography))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "geological") Formation-TheWord
 (and (isa :NOUN LandTopographicalFeature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "geologic") Process-TheWord
 (and (isa :NOUN GeologicProcess)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geologist-TheWord (and (isa :NOUN Geologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geology-TheWord (and (isa :NOUN Geology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geometry-TheWord (and (isa :NOUN Geometry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Georgian-TheWord (and (isa :NOUN GeorgianPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "geothermal") Energy-TheWord
 (and (isa :NOUN GeothermalPower)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Geranium-TheWord (and (isa :NOUN Geranium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gerbil-TheWord (and (isa :NOUN Gerbil))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "german") Measles-TheWord (and (isa :NOUN Rubella))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "german") Shepherd-TheWord
 (and (isa :NOUN GermanShepherd)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) German-TheWord (and (isa :NOUN GermanLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) German-TheWord (and (isa :NOUN GermanPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Germanium-TheWord (and (isa :NOUN Germanium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gerontologist-TheWord
 (and (isa :NOUN GeriatricDoctor)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gerontology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn GeriatricDoctor)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Get-Together-TheWord
 (and (isa :NOUN SocialGathering)) (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP host))
   (:OBLIQUE-OBJECT (N fe_occasion) ((PPFn of) clothingStyle))
   (:GAP (DEN fe_social_event))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Get-Up-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Getaway-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N purposeOfEvent temporallyIntersects))
   (:GAP (INI to-Generic from-Generic) (DNI travellerInTrip))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Geyser-TheWord (and (isa :NOUN Geyser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ghost-TheWord (and (isa :NOUN Ghost)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "giant") Panda-TheWord (and (isa :NOUN PandaBear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Giant-TheWord (and (isa :NOUN Giant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gibbon-TheWord (and (isa :NOUN Gibbon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gibraltarian-TheWord
 (and (isa :NOUN GibraltarPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gif-TheWord (and (isa :NOUN GIFFile)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gift") Basket-TheWord (and (isa :NOUN GiftBasket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gift") Certificate-TheWord
 (and (isa :NOUN GiftCertificate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gift") Set-TheWord (and (isa :NOUN GiftSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gift") Shop-TheWord (and (isa :NOUN GiftShop))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gift") Tag-TheWord (and (isa :NOUN GiftTag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gift-TheWord (and (isa :NOUN Gift)) (frame FN_Giving)
 (bindingTemplate
  (TheList (:SUBJECT (NP fromPossessor objectGiven))
   (:OBLIQUE-OBJECT ((PPFn by) fromPossessor) ((PPFn from) fromPossessor)
    (N fe_imposed_purpose) ((PPFn of) fe_imposed_purpose)
    (AJP fe_depictive fe_imposed_purpose fe_manner) ((PPFn to) to-Generic)
    (VPto to-Generic) ((PPFn for) to-Generic) (Srel objectGiven)
    (NP objectGiven))
   (:GAP (CNI fromPossessor) (INI fromPossessor to-Generic)
    (DNI fromPossessor to-Generic) (DEN objectGiven))
   (:GEN (Poss fromPossessor to-Generic))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 8 0)) ((1 5 0))
   ((3 0 0)) ((1 4 0)) ((0 0 1) (1 7 0)) ((1 2 0) (3 0 1)) ((0 0 1) (1 1 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (1 2 0)) ((0 0 1) (1 5 0) (3 0 0))
   ((0 0 1) (1 2 0) (1 5 0) (3 0 0)) ((0 0 1) (1 0 0) (1 4 1) (1 6 0))
   ((0 0 0) (1 2 0) (1 4 2) (1 6 0) (1 9 0)))))

(FNNounSemtrans (TheList) Gigabyte-TheWord (and (isa :NOUN Gigabyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Giggle-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Giggling)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn of) fe_internal_cause) (AJP fe_manner)
    ((PPFn from) from-Generic emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 1)) ((0 0 0)) ((1 1 0)) ((1 2 0)) ((1 0 0))
   ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Gill-TheWord (and (isa :NOUN Gill)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gin-TheWord (and (isa :NOUN Gin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ginger-TheWord (and (isa :NOUN GingerPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gingiva-TheWord (and (isa :NOUN Gum-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ginkgo-TheWord (and (isa :NOUN Ginkgo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ginkgopsida-TheWord
 (and (isa :NOUN GinkgopsidaClass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ginseng-TheWord (and (isa :NOUN Ginseng))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Giraffe-TheWord (and (isa :NOUN Giraffe))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Girl-TheWord (and (isa :NOUN FemaleChild))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn of) age) ((PPFn between) age) ((PPFn under) age)
    ((PPFn in) fe_descriptor) ((PPFn at) fe_descriptor)
    ((PPFn on) fe_descriptor) (N age fe_descriptor comesFrom-Generic)
    ((PPFn from) fe_descriptor comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((1 8 3)) ((1 7 1)) ((1 8 2)) ((1 5 0)) ((1 3 0)) ((1 7 0)) ((1 4 0))
   ((1 6 1)) ((1 8 1)) ((1 2 0)) ((1 0 0)) ((1 1 0)) ((1 6 0)) ((1 8 0))
   ((0 0 0) (1 8 3)) ((1 8 3) (1 9 0)) ((1 3 0) (1 8 3)) ((1 3 0) (1 8 2))
   ((1 7 0) (1 8 2)) ((1 0 0) (1 8 2)) ((1 8 0) (1 8 2)) ((1 3 0) (1 8 0))
   ((1 8 0) (1 8 1)) ((1 0 0) (1 8 0)) ((0 0 0) (1 8 3) (1 9 0))
   ((1 8 3) (1 8 3) (1 9 0)) ((1 8 3) (1 8 3) (1 8 3))
   ((1 6 2) (1 8 3) (1 9 0)) ((1 3 0) (1 8 3) (1 8 3))
   ((0 0 0) (1 8 1) (1 8 1)) ((1 8 1) (1 8 1) (1 8 2))
   ((1 0 0) (1 8 0) (1 8 3)) ((1 3 0) (1 4 0) (1 8 3) (1 9 0)))))

(FNNounSemtrans (TheList) Girlfriend-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_2))
   (:OBLIQUE-OBJECT (NP fe_partner_1) ((PPFn of) fe_partner_2))
   (:GAP (DEN fe_partner_1) (DNI fe_partner_2)) (:NOUN (NP fe_partner_1))
   (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((3 0 0)) ((4 0 0)) ((1 1 0)) ((0 0 0)) ((0 0 0) (0 0 0))
   ((1 0 0) (4 0 0)))))

(FNNounSemtrans (TheList "given") Name-TheWord
 (and (isa :NOUN GivenNameString)) (frame FN_Being_named)
 (bindingTemplate
  (TheList (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Glacier-TheWord (and (isa :NOUN Glacier))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N (InverseBinaryPredicateFn nameString))
    (AJP (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Glade-TheWord (and (isa :NOUN ForestClearing))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts) (N parts) ((PPFn on) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn of) parts fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 4 0)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Gladiolus-TheWord (and (isa :NOUN Gladiola))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gladiolus-TheWord (and (isa :NOUN Gladiolus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glamour-TheWord (and (isa :NOUN Glamour))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glance-TheWord (and (isa :NOUN Perceiving-Voluntary))
 (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_phenomenon))
   (:OBJECT (NP fe_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn under) actorPartsInvolved) (NP fe_direction)
    ((PPFn to) fe_direction) ((PPFn across) fe_direction)
    ((PPFn along) fe_direction) ((PPFn behind) fe_direction)
    ((PPFn in) fe_direction) ((PPFn into) fe_direction)
    (A fe_direction fe_manner) (AJP fe_direction fe_manner)
    ((PPFn of) fe_manner) ((PPFn between) performedBy)
    ((PPFn at) fe_phenomenon) ((PPFn upon) fe_phenomenon)
    ((PPFn over) fe_phenomenon)
    ((PPFn from) actorPartsInvolved performedBy fe_phenomenon)
    ((PPFn on) fe_phenomenon) ((PPFn around) hasState) ((PPFn about) hasState))
   (:GAP (CNI performedBy))
   (:GEN (Poss fe_manner performedBy) (NP fe_phenomenon))))
 (groupPatterns
  (TheSet ((2 15 1)) ((0 0 0) (2 17 0)) ((0 0 0) (2 18 0)) ((2 16 0) (4 0 1))
   ((2 15 2) (4 0 1)) ((0 0 0) (2 12 0)) ((2 9 1) (2 12 0)) ((0 0 0) (2 10 0))
   ((2 9 1) (2 15 1)) ((2 9 1) (2 11 0)) ((0 0 0) (2 3 0)) ((0 0 0) (2 9 0))
   ((2 7 0) (2 9 1)) ((2 4 0) (2 9 1)) ((2 3 0) (2 8 1))
   ((0 0 0) (1 0 0) (2 10 0)) ((2 9 1) (2 14 0) (4 0 1))
   ((0 0 1) (2 9 1) (2 15 1)) ((0 0 0) (2 9 1) (2 13 0))
   ((0 0 0) (1 0 0) (2 9 1)) ((0 0 0) (2 9 0) (2 12 0))
   ((0 0 0) (2 6 0) (2 9 1)) ((0 0 0) (2 8 1) (2 17 0) (4 0 0))
   ((0 0 0) (2 5 0) (2 9 1) (2 12 0)) ((0 0 0) (2 3 0) (2 9 1) (2 12 0))
   ((0 0 0) (2 1 0) (2 2 0) (2 9 1)) ((0 0 0) (1 0 0) (2 8 1) (2 15 0))
   ((0 0 0) (2 8 1) (2 15 0) (4 1 0)) ((0 0 0) (1 0 0) (2 0 0) (2 8 0)))))

(FNNounSemtrans (TheList) Gland-TheWord (and (isa :NOUN Gland)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "glass") Bottle-TheWord (and (isa :NOUN GlassBottle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "glass") Capacitor-TheWord
 (and (isa :NOUN GlassCapacitor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "glass") Capacitor-TheWord
 (and (isa :NOUN PaperCapacitor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "glass") Container-TheWord
 (and (isa :NOUN GlassContainer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "glass") Jar-TheWord (and (isa :NOUN GlassJar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glass-TheWord (and (isa :NOUN DrinkingGlass))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPingFn of) containedObject)
    ((PPFn on) fe_relative_location) (N mainConstituent deviceUse)
    ((PPFn for) deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 2 0)) ((2 0 0)) ((0 3 0)) ((0 1 0)) ((0 0 0))
   ((0 3 1) (2 0 0)) ((0 0 0) (0 3 1)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Glass-TheWord
 (and (isa :NOUN (VolumeFn DrinkingGlass))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    (NP (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Glass-TheWord (and (isa :NOUN (SolidFn Glass)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glass-TheWord (and (isa :NOUN Glass))
 (frame FN_Substance)
 (bindingTemplate
  (TheList (:GAP (DEN stuffUsed)) (:NOUN (N fe_inherent_purpose))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Glasses-TheWord (and (isa :NOUN Eyeglasses))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) ((PPFn with) parts)
    (AJP fe_descriptor clothingStyle deviceUse)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 3)) ((0 3 2)) ((0 2 0)) ((0 0 0)) ((0 3 3) (2 0 0))
   ((0 1 0) (2 0 0)) ((0 3 1) (2 0 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 2 1))
   ((0 2 0) (0 3 0)) ((0 0 0) (0 2 0)) ((0 2 0) (0 2 2) (2 0 0))
   ((0 0 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Glassware-TheWord
 (and (isa :NOUN GlasswareForKitchen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gleam-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn of) emitter))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Gleam-TheWord (and (isa :NOUN Shiny))
 (frame FN_Location_of_light)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) focalSubject) ((PPFn in) fe_ground)
    ((PPFn against) fe_ground) ((PPFn on) fe_ground)
    ((PPFn of) focalSubject fe_light) (AJP emitter fe_depictive fe_manner))
   (:GAP (DEN fe_light)) (:GEN (Poss focalSubject))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 4 0)) ((0 1 0) (0 5 2)) ((0 3 0) (0 4 1))
   ((0 4 0) (0 5 2)) ((0 3 0) (0 4 0)) ((0 2 0) (0 4 0)) ((0 5 1) (2 0 0))
   ((0 4 0) (0 5 1)) ((0 1 0) (0 5 0)) ((0 2 0) (0 4 0) (0 5 2)))))

(FNNounSemtrans (TheList) Glen-TheWord (and (isa :NOUN Valley))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    (AJP (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn below) fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 1)) ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 2 0))
   ((0 1 0)))))

(FNNounSemtrans (TheList "glider") Chair-TheWord (and (isa :NOUN GliderChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glider-TheWord (and (isa :NOUN Glider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glider-TheWord (and (isa :NOUN ToyGlider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glimmer-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) rediationEmitted) (AJP fe_manner)
    ((PPFn from) from-Generic))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns (TheSet ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Glimpse-TheWord (and (isa :NOUN VisualPerception))
 (frame FN_Punctual_perception)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn through) fe_direction) (NP doneBy))
   (:OBJECT ((PPFn of) fe_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn of) fe_phenomenon))
   (:GAP (CNI doneBy) (DNI doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0) (0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Glint-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) from-Generic))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Glister-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glitter-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn between) from-Generic))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "global") Warming-TheWord
 (and (isa :NOUN GlobalWarming)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Globe-TheWord (and (isa :NOUN Globe-Map))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glockenspiel-TheWord (and (isa :NOUN Glockenspiel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "glossopharyngeal") Nerve-TheWord
 (and (isa :NOUN GlossopharyngealNerve)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glottis-TheWord (and (isa :NOUN Glottis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glove-TheWord (and (isa :NOUN Glove))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 4)) ((0 0 2)) ((0 1 3)) ((0 0 0)) ((0 1 1)) ((0 1 0))
   ((0 0 2) (2 0 0)) ((0 1 3) (2 0 0)) ((0 0 0) (2 0 0)) ((0 1 1) (2 0 0))
   ((0 0 0) (0 1 2)) ((0 1 0) (2 0 0)) ((0 1 0) (0 1 2)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 1 1)) ((0 0 1) (0 1 0) (2 0 0)) ((0 0 0) (0 1 0) (2 0 0))
   ((0 1 0) (0 1 1) (2 0 0)) ((0 0 0) (0 1 0) (0 1 2) (2 0 0)))))

(FNNounSemtrans (TheList) Glove-TheWord (and (isa :NOUN Glove)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glow-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList (:SUBJECT (NP rediationEmitted))
   (:OBLIQUE-OBJECT ((PPFn around) to-Generic) ((PPFn over) to-Generic)
    (AJP fe_degree fe_depictive fe_manner) ((PPFn from) emitter from-Generic))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 2)) ((1 1 0)) ((1 3 0)) ((1 1 0) (1 2 2))
   ((1 0 0) (1 2 2)) ((1 2 1) (1 3 1)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 1 0) (1 2 2) (1 2 2)))))

(FNNounSemtrans (TheList) Glucagon-TheWord (and (isa :NOUN Glucagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glucocorticoid-TheWord
 (and (isa :NOUN Glucocorticoid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glucose-TheWord (and (isa :NOUN Glucose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glue-TheWord (and (isa :NOUN Glue))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gluten-TheWord
 (and (isa :NOUN ProteinStuff)
      (relationExistsInstance mainConstituent CerealFood :NOUN))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glutton-TheWord
 (and (isa :NOUN Person) (relationInstanceExists likesEvent :NOUN Eating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glycine-TheWord (and (isa :NOUN Glycine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Glycogen-TheWord
 (and (isa :NOUN (MobFn GlycogenMolecule))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gnetopsida-TheWord (and (isa :NOUN GnetopsidaClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gnome-TheWord (and (isa :NOUN Dwarf-Mythical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gnu-TheWord (and (isa :NOUN GNU-OperatingSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gnu-TheWord (and (isa :NOUN Antelope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "go") Between-TheWord (and (isa :NOUN Intermediary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "go") Cart-TheWord (and (isa :NOUN GoCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "go") Fish-TheWord (and (isa :NOUN GoFish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Go-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goal-TheWord (and (isa :NOUN GoalScoringRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goal-TheWord (and (isa :NOUN ScoringPoints))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goal-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy to-Generic) (VPbrst to-Generic))
   (:OBLIQUE-OBJECT (N performedBy fe_attribute fe_domain) (VPing to-Generic)
    (VPto to-Generic) (NP to-Generic) ((PPingFn of) to-Generic)
    (Sfin to-Generic) (A fe_domain fe_restrictor) ((PPFn for) fe_restrictor)
    ((PPFn in) temporallyIntersects)
    ((PPFn of) performedBy fe_attribute to-Generic by-Underspecified
     temporallyIntersects))
   (:GAP (DNI performedBy) (DEN to-Generic) (2nd by-Underspecified))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 4)) ((1 7 0)) ((1 9 3)) ((1 5 0)) ((1 4 0)) ((1 9 2)) ((1 3 0))
   ((1 6 0)) ((1 0 1)) ((1 2 0)) ((1 1 0)) ((3 0 0)) ((1 9 0)) ((1 0 0))
   ((1 2 0) (1 9 4)) ((1 3 0) (1 8 0)) ((1 6 1) (3 0 0)) ((1 2 0) (3 0 0))
   ((0 1 0) (3 0 0)) ((1 4 0) (3 0 0)) ((1 9 2) (3 0 0)) ((0 0 1) (3 0 0))
   ((1 3 0) (3 0 0)) ((0 0 0) (1 9 2)) ((1 0 2) (3 0 0)) ((1 9 1) (3 0 0))
   ((0 0 0) (3 0 0)) ((1 2 0) (1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Goalie-TheWord (and (isa :NOUN SoccerGoalkeeper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goat-TheWord (and (isa :NOUN Goat))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goblet-TheWord (and (isa :NOUN DrinkingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 2 1) (2 0 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Goblet-TheWord (and (isa :NOUN Goblet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) God-TheWord (and (isa :NOUN God)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goggles-TheWord (and (isa :NOUN Goggles))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) (N mainConstituent deviceUse)
    (AJP fe_descriptor deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss deviceUse wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 1 1)) ((0 2 1)) ((0 2 0)) ((0 0 0))
   ((0 1 1) (2 0 1)) ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Goggles-TheWord (and (isa :NOUN SwimmingGoggles))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) (N mainConstituent deviceUse)
    (AJP fe_descriptor deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss deviceUse wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 1 1)) ((0 2 1)) ((0 2 0)) ((0 0 0))
   ((0 1 1) (2 0 1)) ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Goggles-TheWord (and (isa :NOUN SnowGoggles))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) (N mainConstituent deviceUse)
    (AJP fe_descriptor deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss deviceUse wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 1 1)) ((0 2 1)) ((0 2 0)) ((0 0 0))
   ((0 1 1) (2 0 1)) ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Goiter-TheWord (and (isa :NOUN Goiter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gold") Medal-TheWord
 (and (isa :NOUN GoldMedal-Physical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gold-TheWord (and (isa :NOUN Gold)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golden") Retriever-TheWord
 (and (isa :NOUN GoldenRetriever)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goldfinch-TheWord (and (isa :NOUN Goldfinch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goldfish-TheWord (and (isa :NOUN Goldfish))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goldfish-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Bag-TheWord (and (isa :NOUN GolfBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Ball-TheWord (and (isa :NOUN GolfBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Cart-TheWord (and (isa :NOUN GolfCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Club-TheWord (and (isa :NOUN GolfClub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Course-TheWord (and (isa :NOUN GolfCourse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Driver-TheWord
 (and (isa :NOUN Driver-GolfClub)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Shoe-TheWord (and (isa :NOUN GolfShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "golf") Stroke-TheWord
 (and (isa :NOUN HittingAGolfBall)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Golf-TheWord (and (isa :NOUN Golf)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Golfcart-TheWord (and (isa :NOUN GolfCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Golfer-TheWord (and (isa :NOUN Golfer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gonad-TheWord (and (isa :NOUN Testicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gonadotropin-TheWord (and (isa :NOUN Gonadotropin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gondola-TheWord (and (isa :NOUN Gondola-Lift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "good") Idea-TheWord (and (isa :NOUN GoodIdea))
 (frame FN_Desirable_event) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goods-TheWord
 (and (isa :NOUN Event) (relationInstanceExists subEvents :NOUN Buying))
 (frame FN_Commerce_scenario)
 (bindingTemplate
  (TheList (:SUBJECT (NP moneyTransferred))
   (:GAP (DEN objectOfPossessionTransfer) (DNI buyer seller)
    (INI buyer moneyTransferred seller))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Goose-TheWord (and (isa :NOUN Goose-Bird))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goose-TheWord (and (isa :NOUN Goose-Meat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Goosebump-TheWord (and (isa :NOUN SensoryQuantity))
 (frame FN_Perception_body)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn on) actorPartsInvolved))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Gopher-TheWord (and (isa :NOUN Gopher-Rodent))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gordon") Setter-TheWord
 (and (isa :NOUN GordonSetter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gore-TheWord (and (isa :NOUN InternalOrgan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gorge-TheWord (and (isa :NOUN Gorge))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gorget-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    (N mainConstituent) ((PPFn of) mainConstituent))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Gorilla-TheWord (and (isa :NOUN Gorilla))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gosling-TheWord
 (and (isa :NOUN (JuvenileFn Goose-Bird))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gospel-TheWord (and (isa :NOUN Gospel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gossip-TheWord (and (isa :NOUN RumorPropagation))
 (frame FN_Chatting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors))
   (:OBJECT (N fe_interlocutors))
   (:OBLIQUE-OBJECT ((PPFn from) fe_interlocutor_1)
    ((PPFn with) fe_interlocutor_2) ((PPFn among) fe_interlocutors)
    (AJP fe_manner) ((PPFn about) situationTopic)
    ((PPingFn about) situationTopic) (N situationTopic)
    ((PPFn of) fe_interlocutors situationTopic) ((PPFn on) situationTopic)
    ((PPingFn of) situationTopic))
   (:GAP (INI fe_interlocutors)) (:GEN (Poss fe_interlocutors))))
 (groupPatterns
  (TheSet ((2 9 0)) ((2 5 0)) ((2 8 0)) ((2 7 1)) ((2 4 0)) ((2 6 0)) ((4 0 0))
   ((2 7 0)) ((2 2 0)) ((1 0 0)) ((2 1 0)) ((2 0 0)) ((2 4 0) (2 7 1))
   ((2 3 0) (2 4 0)) ((0 0 1) (2 4 0)) ((0 0 0) (2 5 0)) ((0 0 0) (2 4 0)))))

(FNNounSemtrans (TheList) Gouda-TheWord (and (isa :NOUN Gouda-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gourd-TheWord (and (isa :NOUN GourdPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gourde-TheWord (and (isa :NOUN Gourde-Haiti))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gourmand-TheWord
 (and (isa :NOUN Person) (relationInstanceExists likesEvent :NOUN Eating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "government") Building-TheWord
 (and (isa :NOUN GovernmentalBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "government") Department-TheWord
 (and (isa :NOUN GovernmentDepartment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Government-TheWord (and (isa :NOUN GovernmentLeader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed) ((PPFn for) fe_governed)
    (N fe_descriptor fe_governed temporallyIntersects)
    (AJP fe_depictive fe_descriptor fe_governed temporallyIntersects)
    (A fe_depictive fe_governed activeIngredientsOfType))
   (:GAP
    (INI processTypeForAccomplishmentType fe_governed leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (DEN processTypeForAccomplishmentType fe_governed leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (DNI fe_governed (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 4 2)) ((3 0 0)) ((1 0 0)) ((1 2 1)) ((1 3 2)) ((1 4 1)) ((1 2 0))
   ((1 3 1)) ((1 4 0)) ((1 3 3) (3 0 0)) ((1 2 2) (1 4 1)) ((1 2 0) (3 0 0))
   ((1 0 0) (1 3 0)) ((0 0 0) (1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Government-TheWord
 (and (isa :NOUN GovernmentalOrganization)) (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (INI hasMembers) (DEN fe_organization)) (:GEN (Poss eventOccursAt))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Governor-TheWord (and (isa :NOUN StateGovernor))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn over) fe_descriptor)
    (AJP fe_degree fe_governed) (N fe_governed) ((PPFn of) fe_governed)
    (NP leadersOfMovement)
    ((PPFn at) fe_degree fe_governed temporallyIntersects))
   (:GAP (DNI fe_governed leadersOfMovement)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 2 1)) ((0 0 1)) ((3 0 0)) ((1 4 0)) ((1 6 1)) ((0 0 0)) ((1 1 0))
   ((1 4 0) (1 6 2)) ((1 5 0) (3 0 0)) ((0 0 1) (1 4 0)) ((0 0 1) (1 6 1))
   ((1 3 0) (4 0 0)) ((1 2 1) (4 0 0)) ((1 0 0) (3 0 0))
   ((0 0 1) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Gown-TheWord (and (isa :NOUN Gown))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_descriptor mainConstituent)
    ((PPFn in) mainConstituent) ((PPFn with) clothingStyle) (NP clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse)
    ((PPFn around) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss fe_descriptor wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 5 2)) ((0 0 1)) ((0 4 0)) ((0 5 0)) ((0 4 3) (2 0 1))
   ((0 3 0) (2 0 1)) ((0 4 2) (0 4 3)) ((0 4 1) (2 0 1)) ((0 4 1) (0 4 3))
   ((0 0 1) (0 5 2)) ((0 1 0) (0 5 2)) ((0 4 1) (0 5 2)) ((0 5 3) (2 0 0))
   ((0 4 3) (0 5 0)) ((0 5 0) (0 5 2)) ((0 0 0) (0 5 1)) ((0 0 1) (0 5 0))
   ((0 4 1) (0 5 0)) ((0 5 0) (0 5 1)) ((0 0 0) (0 5 0)) ((0 5 0) (0 5 0))
   ((0 4 3) (0 5 2) (2 0 1)) ((0 4 1) (0 4 3) (2 0 1))
   ((0 4 1) (0 4 2) (0 6 0)) ((0 2 0) (0 4 1) (0 5 2))
   ((0 4 3) (0 5 0) (2 0 1)) ((0 4 1) (0 5 0) (0 5 2))
   ((0 0 0) (0 4 1) (0 5 0)) ((0 0 1) (0 5 0) (0 5 0))
   ((0 2 0) (0 4 3) (0 5 0) (0 5 2)))))

(FNNounSemtrans (TheList "gps") Satellite-TheWord
 (and (isa :NOUN GPSSatellite)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graben-TheWord (and (isa :NOUN Basin-Topographical))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Grackle-TheWord (and (isa :NOUN Grackle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grade") School-TheWord
 (and (isa :NOUN ElementarySchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grade-TheWord (and (isa :NOUN ElementaryLevel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "graduate") Degree-TheWord
 (and (isa :NOUN GraduateDegree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "graduate") Nurse-TheWord
 (and (isa :NOUN GraduateNurse)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "graduate") Student-TheWord
 (and (isa :NOUN GraduateStudent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graduate-TheWord (and (isa :NOUN Teaching))
 (frame FN_Education_teaching)
 (bindingTemplate (TheList (:GAP (DEN studentOf)) (:GEN (Poss instructor))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "graduated") Cylinder-TheWord
 (and (isa :NOUN GraduatedCylinder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graduation-TheWord (and (isa :NOUN GraduatingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graffito-TheWord (and (isa :NOUN Graffiti))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grail-TheWord (and (isa :NOUN DrinkingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "grain") Elevator-TheWord
 (and (isa :NOUN GrainElevator)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grain-TheWord (and (isa :NOUN (FruitFn CerealPlant)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grain-TheWord (and (isa :NOUN Grain-UnitOfMass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grain-TheWord (and (isa :NOUN GrainOfCereal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gram-TheWord (and (isa :NOUN Gram))
 (frame FN_Measure_mass)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn massOfObject)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn massOfObject))
    (AJP (InverseBinaryPredicateFn massOfObject))
    (NP (InverseBinaryPredicateFn massOfObject)))
   (:GAP (DNI (InverseBinaryPredicateFn massOfObject)) (DEN fe_unit))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Grammar-TheWord (and (isa :NOUN FormalMetaGrammar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grammy") Award-TheWord (and (isa :NOUN GrammyAward))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grammy-TheWord (and (isa :NOUN GrammyAward))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grammy") Presenter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance presenter GrammyAwardsCeremony :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gramineae-TheWord (and (isa :NOUN GrassFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grand") Duke-TheWord
 (and (isa :NOUN GrandDuke-HeadOfState)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grand") Piano-TheWord (and (isa :NOUN GrandPiano))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grand") Teton-TheWord
 (and (isa :NOUN GrandTeton-Mount)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Granddaughter-TheWord
 (and (isa :NOUN FemaleHuman)
      (relationExistsInstance granddaughters Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0)) ((0 0 0) (1 0 0))
   ((3 0 0) (4 0 0)) ((0 0 1) (3 0 0)))))

(FNNounSemtrans (TheList "grandfather") Clock-TheWord
 (and (isa :NOUN GrandfatherClock)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grandfather-TheWord
 (and (isa :NOUN MaleHuman)
      (relationInstanceExists grandchildren :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego))
   (:OBLIQUE-OBJECT ((PPFn of) fe_ego) ((PPFn to) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego) (INI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Grandma-TheWord
 (and (isa :NOUN FemaleAnimal)
      (relationExistsInstance grandmothers Animal :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grandmother-TheWord
 (and (isa :NOUN FemaleHuman)
      (relationInstanceExists grandchildren :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego) (INI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Grandparent-TheWord
 (and (isa :NOUN Animal) (relationInstanceExists grandchildren :NOUN Animal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grandson-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance grandsons Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter) (NP fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 1)) ((3 1 0) (4 0 0))
   ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Granite-TheWord (and (isa :NOUN Granite))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Granola-TheWord (and (isa :NOUN Granola))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grant-TheWord (and (isa :NOUN GrantingMoney))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grape") Juice-TheWord
 (and (isa :NOUN (JuiceFn (FruitFn GrapeVine)))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grape-TheWord (and (isa :NOUN (FruitFn GrapeVine)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grape") Vine-TheWord (and (isa :NOUN GrapeVine))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grapefruit-TheWord
 (and (isa :NOUN (FruitFn GrapefruitTree))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grapefruit") Tree-TheWord
 (and (isa :NOUN GrapefruitTree)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graph-TheWord (and (isa :NOUN Graph-AIS))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graph-TheWord (and (isa :NOUN CartesianGraphCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graphic-TheWord (and (isa :NOUN Graphic-VisualIBT))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "graphical" "user") Interface-TheWord
 (and (isa :NOUN GraphicalUserInterfaceProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Graphite-TheWord (and (isa :NOUN Graphite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grasp-TheWord (and (isa :NOUN Grasping))
 (frame FN_Grasp)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation fe_faculty fe_phenomenon))
   (:OBLIQUE-OBJECT (NP fe_completeness) (AVP fe_completeness)
    ((PPFn than) fe_completeness) (A fe_completeness fe_manner)
    (AJP fe_completeness fe_manner) (VPfin fe_manner) ((PPFn on) fe_phenomenon)
    ((PPFn of) subjectOfMentalSituation fe_phenomenon fe_reference_point)
    ((PPFn in) fe_reference_point temporallyIntersects))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 3 1) (1 7 1)) ((1 3 0) (1 7 1)) ((1 6 0) (2 0 0))
   ((1 7 1) (2 0 0)) ((0 0 2) (1 7 0) (1 7 2)) ((0 0 0) (1 7 1) (1 8 0))
   ((1 5 0) (1 6 0) (2 0 0)) ((1 4 1) (1 7 1) (2 0 0))
   ((0 0 2) (1 4 1) (2 0 0)) ((0 0 0) (1 3 1) (1 7 1))
   ((0 0 0) (1 0 0) (1 7 1)) ((0 0 0) (1 4 0) (1 6 0))
   ((0 0 0) (1 3 0) (1 7 1)) ((1 6 0) (2 0 0) (2 0 0))
   ((0 0 1) (1 1 0) (1 2 0) (1 7 1)) ((1 5 0) (1 7 1) (1 8 1) (2 0 0))
   ((0 0 2) (0 0 2) (1 1 0) (2 0 0)) ((0 0 0) (1 3 0) (1 3 1) (1 7 1))
   ((0 0 0) (1 3 0) (1 3 0) (1 7 1)))))

(FNNounSemtrans (TheList "grass") Skirt-TheWord (and (isa :NOUN GrassSkirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grass-TheWord (and (isa :NOUN Marijuana))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grass-TheWord (and (isa :NOUN Grass-Plant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grass") Trimmer-TheWord
 (and (isa :NOUN GrassTrimmer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grasshopper-TheWord (and (isa :NOUN Grasshopper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grassland-TheWord (and (isa :NOUN Grassland))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N (InverseBinaryPredicateFn nameString)) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Grate-TheWord (and (isa :NOUN Grate-Barrier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grave") Site-TheWord (and (isa :NOUN Gravesite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grave-TheWord (and (isa :NOUN Tomb)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gravel-TheWord (and (isa :NOUN Gravel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gravel") Driveway-TheWord
 (and (isa :NOUN Driveway) (isa :NOUN UnpavedPathArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gravestone-TheWord (and (isa :NOUN TombStone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gravitation-TheWord
 (and (isa :NOUN GravitationalForceVector)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gravity-TheWord
 (and (isa :NOUN GravitationalForceQuantity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gravy-TheWord (and (isa :NOUN Gravy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gray-TheWord (and (isa :NOUN GrayColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "great" "cerebral") Vein-TheWord
 (and (isa :NOUN GreatCerebralVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "great") Dane-TheWord (and (isa :NOUN GreatDane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Great-Granddaughter-TheWord
 (and (isa :NOUN FemaleHuman) (granddaughters ?Person1 :NOUN)
      (isa ?Person1 Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Great-Grandson-TheWord
 (and (isa :NOUN MaleHuman) (grandsons ?Person1 :NOUN) (isa ?Person1 Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Greatcoat-TheWord (and (isa :NOUN WinterCoat))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor) (AJP fe_descriptor clothingStyle)
    ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0)) ((0 1 1) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 1 1)) ((0 0 0) (0 1 0) (2 0 0)) ((0 1 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Greaves-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) wornOn)) (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Grebe-TheWord (and (isa :NOUN Grebe-Western))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "greek" "orthodox") Church-TheWord
 (and (isa :NOUN GreekOrthodoxChurchBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Greek-TheWord (and (isa :NOUN GreekPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Green-TheWord (and (isa :NOUN GreenColor))
 (frame FN_Color) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Green-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Green-TheWord (and (isa :NOUN GreenColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Green-TheWord (and (isa :NOUN PuttingGreen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "greenhouse") Effect-TheWord
 (and (isa :NOUN GreenhouseEffectProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Greenhouse-TheWord (and (isa :NOUN Greenhouse))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (Sub fe_function))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "greenwich" "mean") Time-TheWord
 (and (isa :NOUN GreenwichMeanTime)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Greenwood-TheWord (and (isa :NOUN BroadleafForest))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "greeting") Card-TheWord
 (and (isa :NOUN GreetingCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grenade-TheWord (and (isa :NOUN HandGrenade))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grey") Matter-TheWord (and (isa :NOUN GrayMatter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Greyhound-TheWord (and (isa :NOUN Greyhound-Dog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grid-TheWord (and (isa :NOUN CoordinateGrid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Griddle-TheWord (and (isa :NOUN Griddle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gridlock-TheWord (and (isa :NOUN Gridlock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grief-TheWord (and (isa :NOUN Grief))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn on) eventAffectsBodyPart)
    (AJP fe_degree fe_manner)
    ((PPFn over) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn for) (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn of) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn about) situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 5 0)) ((1 2 1)) ((1 1 0)) ((2 0 0)) ((1 0 0))
   ((0 0 0)) ((1 2 0)) ((1 2 1) (1 4 0)) ((1 6 0) (2 0 0)) ((1 3 0) (2 0 0))
   ((1 5 0) (2 0 0)) ((1 4 0) (2 0 0)) ((1 0 0) (1 2 1)) ((1 2 0) (1 4 0))
   ((1 2 0) (2 0 0)) ((1 2 0) (1 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Grievance-TheWord (and (isa :NOUN Complaint))
 (frame FN_Complaining)
 (bindingTemplate (TheList (:SUBJECT (NP senderOfInfo))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Grill-TheWord (and (isa :NOUN WireGrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grill-TheWord (and (isa :NOUN BBQGrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grille-TheWord (and (isa :NOUN AutomobileGrille))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grilling-TheWord (and (isa :NOUN GrillingFood))
 (frame FN_Cooking_creation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grimace-TheWord (and (isa :NOUN Grimacing))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn at) fe_intended_perceiver)
    ((PPFn of) fe_internal_cause) ((PPFn with) subRegions)
    ((PPFn on) subRegions)
    (AJP fe_conveyed_emotion fe_degree fe_manner subRegions))
   (:GAP (2nd ownerOfProprietaryThing) (DEN fe_expression subRegions))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 4 3)) ((1 3 0)) ((3 0 0)) ((0 0 0)) ((1 1 0)) ((1 4 0))
   ((0 0 0) (1 4 2)) ((1 1 0) (1 4 2)) ((0 0 0) (1 0 0)) ((1 1 0) (1 4 1))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 2 0) (1 4 0)) ((0 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Grimoire-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) parts)) (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Grin-TheWord (and (isa :NOUN Grinning))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (NP fe_intended_perceiver))
   (:OBLIQUE-OBJECT (AJP fe_conveyed_emotion) ((PPFn about) fe_external_cause)
    ((PPFn at) fe_intended_perceiver) (N fe_manner)
    ((PPFn from) ownerOfProprietaryThing)
    ((PPFn of) fe_conveyed_emotion fe_internal_cause ownerOfProprietaryThing)
    ((PPFn on) subRegions) (NP subRegions) ((PPFn off) subRegions))
   (:GAP (DEN fe_expression) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 8 0)) ((2 7 0)) ((4 0 0)) ((2 5 2)) ((0 0 0)) ((2 5 1))
   ((2 5 0)) ((2 0 0)) ((2 3 0) (4 0 0)) ((2 5 1) (2 6 0)) ((0 0 0) (2 2 0))
   ((2 0 0) (2 6 0)) ((2 0 0) (4 0 0)) ((2 0 0) (2 4 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (2 3 0) (4 0 0)) ((0 0 0) (2 2 0) (4 0 0))
   ((0 0 0) (2 1 0) (2 6 0)) ((0 0 0) (2 0 0) (2 2 0))
   ((0 0 0) (1 0 0) (2 0 0)) ((2 0 0) (2 0 0) (2 6 0)))))

(FNNounSemtrans (TheList) Grinder-TheWord (and (isa :NOUN GrindingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gripe-TheWord (and (isa :NOUN Complaining))
 (frame FN_Complaining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grizzly-TheWord (and (isa :NOUN GrizzlyBear))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grocery") Bag-TheWord (and (isa :NOUN GroceryBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grocery") Cart-TheWord (and (isa :NOUN GroceryCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "grocery") Store-TheWord
 (and (isa :NOUN GroceryStore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grocery-TheWord
 (and (isa :NOUN GroceryMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Groin-TheWord (and (isa :NOUN Groin))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "gross" "national") Product-TheWord
 (and (isa :NOUN grossNationalProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ground") Beef-TheWord (and (isa :NOUN GroundBeef))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ground") Coffee-TheWord
 (and (isa :NOUN Coffee-Ground)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ground-TheWord (and (isa :NOUN Ground))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Groundhog-TheWord (and (isa :NOUN Groundhog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grounds-TheWord (and (isa :NOUN Justification))
 (frame FN_Deserving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grounds-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Groundsman-TheWord (and (isa :NOUN GroundsPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Groundwork-TheWord
 (and (isa :NOUN PreparingForSituation)) (frame FN_Preliminaries)
 (bindingTemplate
  (TheList (:SUBJECT (Poss doneBy) (NP doneBy fe_preparatory_act))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A fe_domain_of_relevance)
    (NP fe_preparatory_act) ((PPFn for) purposeOfEvent)
    ((PPFn of) purposeOfEvent) (Sforto purposeOfEvent)
    ((PPFn by) doneBy fe_preparatory_act temporallyIntersects)
    ((PPFn during) temporallyIntersects) (AVP temporallyIntersects))
   (:GAP (CNI doneBy) (DEN fe_preparatory_act) (DNI purposeOfEvent))
   (:GEN (Poss doneBy) ((PPFn for) purposeOfEvent))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((0 1 0)) ((1 3 0)) ((0 1 1) (1 5 0))
   ((0 1 1) (1 3 0)) ((1 2 0) (1 4 0)) ((1 4 0) (1 6 2)) ((0 0 0) (1 3 0))
   ((0 1 0) (3 1 0)) ((0 1 0) (1 3 0)) ((1 0 0) (1 6 0))
   ((1 1 0) (1 3 0) (1 6 1)) ((0 1 0) (1 3 0) (1 8 0))
   ((0 1 0) (1 1 0) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Group-TheWord (and (isa :NOUN Group))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_aggregate fe_individuals))
   (:OBLIQUE-OBJECT (VPing fe_aggregate_property) (Sfin fe_aggregate_property)
    (VPbrst fe_individuals) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals) (A fe_aggregate_property fe_individuals)
    (AJP fe_aggregate_property fe_individuals) (NP fe_individuals)
    (N fe_aggregate_property fe_individuals
     (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_aggregate) (INI fe_individuals) (DNI fe_individuals)
    (2nd (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_aggregate_property fe_individuals))
   (:APPOSITIVE (NP fe_aggregate))))
 (groupPatterns
  (TheSet ((1 8 2)) ((3 0 1)) ((1 3 0)) ((0 0 1)) ((1 7 0)) ((1 8 1)) ((1 6 1))
   ((1 5 1)) ((3 0 0)) ((1 0 0)) ((1 8 0)) ((1 6 0)) ((1 5 0))
   ((1 6 0) (1 8 1)) ((1 4 0) (1 6 0)) ((1 3 0) (1 6 0)) ((1 6 0) (1 8 0))
   ((1 2 0) (1 6 0)) ((1 1 0) (1 5 0) (1 8 1)) ((0 0 1) (0 0 1) (1 6 0))
   ((1 6 0) (1 6 0) (4 0 0)) ((0 0 0) (1 1 0) (1 6 0) (1 6 0)))))

(FNNounSemtrans (TheList) Group-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_organization))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Grouping-TheWord (and (isa :NOUN GroupingObjects))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grousing-TheWord (and (isa :NOUN Complaining))
 (frame FN_Complaining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grout-TheWord (and (isa :NOUN Grout)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Grove-TheWord (and (isa :NOUN Orchard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Growl-TheWord (and (isa :NOUN GrowlingSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_component_sound fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 0 1)) ((1 0 0))
   ((1 0 1) (2 0 0)) ((0 0 0) (1 0 1)) ((1 0 1) (1 2 0))
   ((0 0 0) (1 0 1) (1 2 0)))))

(FNNounSemtrans (TheList "growth") Chart-TheWord (and (isa :NOUN GrowthChart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Growth-TheWord (and (isa :NOUN GrowthEvent))
 (frame FN_Cause_expansion)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT (N objectOfStateChange) ((PPFn for) objectOfStateChange)
    ((PPingFn of) objectOfStateChange) ((PPingFn by) by-Underspecified)
    ((PPFn on) eventOccursAt) ((PPFn of) quantityChangeAmount)
    (AJP objectOfStateChange fe_manner temporallyIntersects)
    ((PPFn in) temporallyIntersects))
   (:GAP (DNI causes-Underspecified objectOfStateChange))
   (:GEN (Poss objectOfStateChange))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 0 0)) ((3 0 0)) ((1 5 0) (1 7 0))
   ((1 6 0) (1 6 2)) ((0 0 0) (1 4 0)) ((1 6 1) (3 0 0)) ((1 1 0) (1 6 1)))))

(FNNounSemtrans (TheList) Growth-TheWord
 (and (isa :NOUN BiologicalGrowthEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Growth-TheWord (and (isa :NOUN Tumor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Growth-TheWord (and (isa :NOUN GrowthEvent))
 (frame FN_Ontogeny)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (AJP fe_domain fe_manner)
    (N objectActedOn fe_organism) ((PPFn on) eventOccursAt)
    ((PPFn towards) fe_post_state))
   (:GAP (DNI fe_organism)) (:GEN (Poss fe_organism))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 1)) ((0 0 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0) (0 4 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Grunt-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_internal_cause fe_manner emitter)
    ((PPFn from) emitter) ((PPFn of) fe_internal_cause emitter)
    ((PPingFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0)) ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 0 2)) ((1 0 1))
   ((1 0 0)) ((0 0 0) (1 0 1)) ((0 0 0) (1 2 0)) ((0 0 0) (1 0 1) (1 0 1))
   ((0 0 0) (1 0 1) (1 2 0)))))

(FNNounSemtrans (TheList) Gruyere-TheWord (and (isa :NOUN Gruyere-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guanine-TheWord (and (isa :NOUN Guanine-Base))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guarani-TheWord (and (isa :NOUN Guarani-Paraguay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guard-TheWord (and (isa :NOUN GuardingSomething))
 (frame FN_Be_on_alert) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guard-TheWord
 (and (isa :NOUN FootballOffensiveGuard)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guatemalan-TheWord (and (isa :NOUN GuatemalanPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guerrilla-TheWord (and (isa :NOUN Guerrilla))
 (frame FN_Irregular_combatants)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_combatant))
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn from) comesFrom-Generic)
    (N fe_side_1) (AJP fe_descriptor fe_persistent_characteristic fe_side_1)
    ((PPFn of) fe_side_1) (A fe_side_1) ((PPFn in) fe_descriptor fe_side_1))
   (:GAP (DEN fe_combatant) (2nd comesFrom-Generic fe_side_1 fe_side_2))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 2 0)) ((1 5 0)) ((1 1 0)) ((1 3 2)) ((1 0 0)) ((1 6 0))
   ((1 3 0)) ((0 0 0) (1 4 0)) ((1 3 1) (1 4 0)) ((1 3 0) (1 3 2))
   ((1 2 0) (1 3 0) (1 6 0)))))

(FNNounSemtrans (TheList) Guerrilla-TheWord (and (isa :NOUN Guerrilla))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "guessing") Game-TheWord
 (and (isa :NOUN GuessingGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "guest") Room-TheWord (and (isa :NOUN Bedroom))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "guest") Room-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guest-TheWord
 (and (isa :NOUN IndividualAgent)
      (relationExistsInstance guestAtSocialGathering SocialGathering :NOUN))
 (frame FN_Guest_and_host) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guffaw-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Guffawing)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_component_sound fe_manner) ((PPFn from) emitter)
    ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 1)) ((0 0 0) (1 0 1))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "guided" "missile") Frigate-TheWord
 (and (isa :NOUN ModernFrigate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "guided") Missile-TheWord
 (and (isa :NOUN GuidedMissile)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guilder-TheWord (and (isa :NOUN Guilder-Netherlands))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guilder-TheWord (and (isa :NOUN Guilder-Suriname))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guillotining-TheWord
 (and (isa :NOUN Decapitation-Execution)) (frame FN_Execution)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator)) (:OBLIQUE-OBJECT ((PPFn of) victim))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Guilt-TheWord
 (and (isa :NOUN Regret) (isa :NOUN Guilt)) (frame FN_Contrition)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guilt-TheWord (and (isa :NOUN GuiltyVerdict))
 (frame FN_Guilt_or_innocence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guilt-TheWord (and (isa :NOUN Guilt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) GuineaPig-TheWord (and (isa :NOUN GuineaPig))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guitar-TheWord (and (isa :NOUN Guitar))
 (frame FN_Noise_makers) (bindingTemplate (TheList (:GAP (DEN deviceUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gulch-TheWord (and (isa :NOUN Ravine))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N parts fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Gulf-TheWord (and (isa :NOUN Gulf))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) (A fe_container_possessor) (NP fe_descriptor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Gull-TheWord (and (isa :NOUN Seagull))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gully-TheWord (and (isa :NOUN Gully))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_container_possessor)
    ((PPFn of) parts fe_container_possessor)
    ((PPFn below) fe_relative_location) ((PPFn at) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Gulp-TheWord (and (isa :NOUN Ingesting))
 (frame FN_Ingestion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) consumedObject) ((PPFn from) from-Generic))
   (:GAP (DNI consumedObject))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "gum") Arabic-TheWord (and (isa :NOUN GumArabic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gum") Surgery-TheWord (and (isa :NOUN GumSurgery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gum-TheWord (and (isa :NOUN Gum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gumboot-TheWord (and (isa :NOUN RubberBoot))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "gun") Barrel-TheWord (and (isa :NOUN GunBarrel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gun") Enclosure-TheWord (and (isa :NOUN GunTurret))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gun") Muzzle-TheWord (and (isa :NOUN Muzzle-GunPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gun") System-TheWord (and (isa :NOUN GunSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gun-TheWord (and (isa :NOUN Gun)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 1)) ((1 0 0)))))

(FNNounSemtrans (TheList "gun") Trigger-TheWord (and (isa :NOUN GunTrigger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gunfight-TheWord (and (isa :NOUN Firefight))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) ((PPFn near) eventOccursAt)
    ((PPFn at) eventOccursAt) (VPing fe_side_2)
    ((PPFn between) fe_issue fe_sides) ((PPFn with) fe_side_2 fe_sides)
    (NP temporallyIntersects) (AJP duration fe_manner temporallyIntersects))
   (:GAP (DNI fe_issue fe_side_1) (INI fe_side_1 fe_sides))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 5 0)) ((0 0 0)) ((0 2 0)) ((0 4 1)) ((0 4 0)) ((0 7 0))
   ((0 3 0) (0 7 2)) ((0 1 0) (0 7 1)) ((0 0 0) (0 5 0) (0 6 0))
   ((0 0 0) (0 5 0) (0 7 0)))))

(FNNounSemtrans (TheList) Gunman-TheWord (and (isa :NOUN Gunman))
 (frame FN_Bearing_arms)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N eventOccursAt))
   (:GAP (DEN affectedAgent) (INC instrument-UsedAsWeapon))
   (:APPOSITIVE (NP affectedAgent))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Gunpowder-TheWord (and (isa :NOUN Gunpowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guppy-TheWord (and (isa :NOUN Guppy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gurgle-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner)
    ((PPFn of) fe_internal_cause fe_noisy_event emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 2)) ((1 1 1)) ((1 1 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Guru-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (AJP hasSkill)
    (N fe_focal_participant fe_knowledge hasSkill) ((PPFn of) hasSkill))
   (:GAP (DEN affectedAgent) (DNI hasSkill)) (:NOUN (N affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 2)) ((1 0 0)) ((1 1 1)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 1 2)) ((1 1 2) (3 0 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Gut-TheWord (and (isa :NOUN DigestiveSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gutter-TheWord (and (isa :NOUN GutterOnARoof))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gutter-TheWord (and (isa :NOUN GutterSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guy-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guy-TheWord (and (isa :NOUN MaleHuman))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (N fe_context_of_acquaintance) ((PPFn on) fe_descriptor)
    ((PPFn in) fe_descriptor) ((PPFn across) fe_descriptor)
    ((PPFn at) fe_descriptor) ((PPFn from) fe_descriptor)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 6 3)) ((1 6 2)) ((1 7 0)) ((1 2 0)) ((1 5 0)) ((1 4 0))
   ((1 3 0)) ((1 6 1)) ((1 0 0)) ((1 6 0)) ((0 0 0) (1 6 3)) ((1 6 3) (1 6 3))
   ((1 6 2) (1 7 1)) ((1 6 2) (1 6 3)) ((1 6 3) (1 7 0)) ((1 2 0) (1 6 3))
   ((1 2 0) (1 6 1)) ((1 0 0) (1 1 0)) ((0 0 0) (1 6 3) (1 7 1))
   ((0 0 0) (1 6 1) (1 6 2) (1 6 3)))))

(FNNounSemtrans (TheList "guyana") Dollar-TheWord
 (and (isa :NOUN Dollar-Guyana)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Guyot-TheWord (and (isa :NOUN Guyot))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gym") Shoe-TheWord (and (isa :NOUN TennisShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gymnasium-TheWord (and (isa :NOUN GymnasiumRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gymnast-TheWord (and (isa :NOUN Gymnast))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "gymnastics") Apparatus-TheWord
 (and (isa :NOUN GymnasticsApparatus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gymnastics-TheWord
 (and (isa :NOUN GymnasticsSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gymnosperm-TheWord (and (isa :NOUN GymnospermGroup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gymnospermae-TheWord
 (and (isa :NOUN GymnospermGroup)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gynaecologist-TheWord (and (isa :NOUN Gynecologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gynaecology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Gynecologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gynecologist-TheWord (and (isa :NOUN Gynecologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gypsy-TheWord
 (and (isa :NOUN EthnicGroupOfRom-Gypsy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gyro-TheWord (and (isa :NOUN GyroSandwich))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gyrocompass-TheWord (and (isa :NOUN GyroCompass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Gyroscope-TheWord (and (isa :NOUN Gyroscope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Habitat-TheWord (and (isa :NOUN Habitat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Habit-TheWord
 (and (isa :NOUN (AddictionFn AddictiveSubstance))) (frame FN_Addiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_addictant))
   (:OBLIQUE-OBJECT (AJP fe_addict) ((PPFn of) fe_addict) (N fe_addictant)
    ((PPingFn of) fe_addictant) ((PPFn as) fe_addictant))
   (:GEN (Poss fe_addict))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 2 0)) ((1 3 0) (2 0 0)) ((0 0 0) (2 0 0))
   ((1 2 0) (2 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Habit-TheWord
 (and (isa :NOUN CulturalConvention-Specification)) (frame FN_Custom)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPing objectOfCritique)
    (NP objectOfCritique affectedAgent fe_society))
   (:OBLIQUE-OBJECT ((PPingFn of) objectOfCritique)
    (AJP objectOfCritique fe_descriptor fe_domain)
    (N objectOfCritique fe_descriptor fe_domain) ((PPFn in) eventOccursAt)
    ((PPFn of) objectOfCritique fe_domain fe_society)
    ((PPFn with) affectedAgent fe_society) (A fe_domain fe_society)
    ((PPFn among) fe_society))
   (:GAP (CNI affectedAgent)) (:NOUN (Sfin objectOfCritique))
   (:GEN (Poss affectedAgent fe_society))))
 (groupPatterns
  (TheSet ((4 0 1)) ((1 4 2)) ((4 0 0)) ((1 4 1)) ((1 2 2)) ((1 1 2)) ((1 6 0))
   ((1 1 1)) ((0 0 0)) ((1 0 0)) ((0 1 0)) ((1 4 1) (4 0 1)) ((1 1 2) (4 0 1))
   ((1 1 2) (1 4 2)) ((1 6 0) (4 0 1)) ((1 2 2) (4 0 0)) ((1 2 2) (1 3 0))
   ((1 2 1) (1 4 2)) ((1 1 1) (1 4 2)) ((1 1 1) (4 0 0)) ((1 1 1) (1 2 2))
   ((1 1 1) (1 1 2)) ((0 1 2) (1 0 0)) ((1 0 0) (1 6 1)) ((1 4 0) (4 0 1))
   ((0 1 2) (1 4 0)) ((0 1 0) (1 5 1)) ((1 1 0) (1 4 2)) ((3 0 0) (4 0 0))
   ((1 0 0) (4 0 0)) ((0 1 1) (1 0 0)) ((1 4 0) (4 0 0)) ((0 1 0) (1 5 0))
   ((1 2 0) (4 0 0)) ((0 1 0) (1 6 0)) ((1 1 1) (1 6 0) (4 0 0))
   ((1 1 1) (1 2 2) (1 3 0)) ((0 0 0) (1 1 1) (1 7 0))
   ((0 1 1) (1 0 0) (1 1 1)) ((0 1 1) (1 1 1) (1 4 0))
   ((1 0 0) (1 1 1) (1 1 1) (4 0 0)))))

(FNNounSemtrans (TheList) Hacek-TheWord (and (isa :NOUN Hacek-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hacienda-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hacker-TheWord (and (isa :NOUN Hacker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hacky") Sack-TheWord (and (isa :NOUN Footbag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Haematology-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hafnium-TheWord (and (isa :NOUN Hafnium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hagiography-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N situationTopic) ((PPFn about) situationTopic)
    ((PPFn of) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Haiku-TheWord (and (isa :NOUN HaikuPoem))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP authorOfLiteraryWork-CW)) (:GAP (DEN fe_text))
   (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hail-TheWord (and (isa :NOUN PrecipitationProcess))
 (frame FN_Precipitation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (AJP temperatureOfObject))
   (:GAP (DEN fe_precipitation))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Hailstone-TheWord (and (isa :NOUN HailStone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hailstorm-TheWord (and (isa :NOUN HailStormProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hailstorm-TheWord (and (isa :NOUN WeatherEvent))
 (frame FN_Weather)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP temporallyIntersects) (N temporallyIntersects))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "hair") Accessory-TheWord
 (and (isa :NOUN HairAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Color-TheWord (and (isa :NOUN HairColoring))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Conditioner-TheWord
 (and (isa :NOUN HairConditioner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Dryer-TheWord (and (isa :NOUN BlowDryer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Follicle-TheWord
 (and (isa :NOUN HairFollicle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Gel-TheWord (and (isa :NOUN HairStylingGel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair" "removal") Cream-TheWord
 (and (isa :NOUN Cream-HairRemoval)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair" "removal") System-TheWord
 (and (isa :NOUN HairRemovalProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Scissors-TheWord
 (and (isa :NOUN HairCuttingScissors)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Shirt-TheWord (and (isa :NOUN HairShirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Spray-TheWord (and (isa :NOUN HairSpray))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair" "styling") Product-TheWord
 (and (isa :NOUN HairGoo)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hair-TheWord (and (isa :NOUN Hair-Stuff))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (AVP fe_descriptor) (N fe_descriptor)
    ((PPFn on) orientation) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((0 0 0)) ((1 3 0)) ((1 0 0)) ((1 2 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 4 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 0 0))
   ((1 0 0) (1 2 0)) ((1 0 0) (1 0 0) (3 0 0)) ((1 0 0) (1 0 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Hair-TheWord (and (isa :NOUN HairOnHead))
 (frame FN_Hair_configuration) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hair-TheWord (and (isa :NOUN Hair-Strand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hair") Trigger-TheWord (and (isa :NOUN HairTrigger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hairband-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 2)) ((0 0 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Hairbrush-TheWord (and (isa :NOUN HairBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Haircut-TheWord
 (and (isa :NOUN MobOfHair-Mammal)
      (relationExistsInstance objectActedOn HairCuttingEvent :NOUN))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_hair_property) (N fe_hair_property))
   (:GAP (2nd fe_hair) (DEN fe_hair_property))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Hairdo-TheWord
 (and (isa :NOUN MobOfHair-Mammal)
      (relationExistsInstance objectOfStateChange HairStylingEvent :NOUN))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (N toConfiguration) (AJP fe_hair_property))
   (:GAP (DEN toConfiguration)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Hairdresser-TheWord (and (isa :NOUN HairStylist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hairgrip-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate (TheList (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hairnet-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_accoutrement))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hairpiece-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn for) wearer))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Hairpin-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hairpin-TheWord (and (isa :NOUN HairPin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hairslide-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hairstyle-TheWord
 (and (isa :NOUN MobOfHair-Mammal)
      (relationExistsInstance objectOfStateChange HairStylingEvent :NOUN))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (N toConfiguration) (AJP fe_hair_property))
   (:GAP (DEN toConfiguration)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "half") Bath-TheWord (and (isa :NOUN HalfBath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Half-TheWord (and (isa :NOUN Individual))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A orientation fe_part_prop) (AJP orientation fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn parts)) (NP (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts)) (:NOUN (N (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 4 0)) ((2 0 0)) ((0 3 0)) ((0 1 1)) ((0 0 1)) ((0 0 0))
   ((0 0 1) (3 0 0)) ((0 0 1) (0 2 0)) ((0 0 1) (0 3 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (0 2 0)) ((0 0 1) (0 0 1) (0 3 0))
   ((0 0 0) (0 0 1) (0 0 1) (0 2 0)))))

(FNNounSemtrans (TheList) Halibut-TheWord (and (isa :NOUN Halibut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hall-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) (N fe_function)
    ((PPFn in) eventOccursAt) (NP eventOccursAt)
    (AJP fe_function (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 1 0)) ((0 3 0) (0 4 2)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 4 0)))))

(FNNounSemtrans (TheList) Hall-TheWord (and (isa :NOUN PersonAssemblyRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hallucinogen-TheWord (and (isa :NOUN Hallucinogen))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Hallway-TheWord (and (isa :NOUN Hallway))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hallway-TheWord (and (isa :NOUN Hallway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Halo-TheWord (and (isa :NOUN Halo-CircleOfLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "halogen") Lightbulb-TheWord
 (and (isa :NOUN LightBulb-Halogen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Halt-TheWord (and (isa :NOUN DisruptionEvent))
 (frame FN_Process_stop)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_process))
   (:OBLIQUE-OBJECT (AVP temporallyIntersects))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "hamburger") Bun-TheWord (and (isa :NOUN Bun))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hamburger-Meat-TheWord (and (isa :NOUN GroundBeef))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hamburger") Patty-TheWord
 (and (isa :NOUN GroundBeef)) (frame FN_Food) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hamburger-TheWord (and (isa :NOUN HamburgerSandwich))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hamlet-TheWord (and (isa :NOUN (SmallFn Village)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hammer-TheWord (and (isa :NOUN Hammer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hammer-TheWord
 (and (isa :NOUN HammerThrowSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hammer-TheWord
 (and (isa :NOUN PoundingDrivingSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hamper-TheWord (and (isa :NOUN LaundryHamper))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    (N containedObject mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 1 3)) ((0 1 2)) ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0))
   ((0 0 0) (0 1 3)))))

(FNNounSemtrans (TheList) Hamster-TheWord (and (isa :NOUN Hamster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hamstring-TheWord (and (isa :NOUN Hamstrings))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand") Blower-TheWord (and (isa :NOUN BlowDryer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand") Cream-TheWord (and (isa :NOUN HandCream))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand") Lens-TheWord (and (isa :NOUN MagnifyingGlass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand") Plane-TheWord (and (isa :NOUN Plane-TheTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand" "powered" "lawn") Mower-TheWord
 (and (isa :NOUN LawnMower-HandPowered)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand" "pushed" "lawn") Mower-TheWord
 (and (isa :NOUN LawnMower-HandPushed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hand-Saw-TheWord (and (isa :NOUN HandSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand" "sewing") Needle-TheWord
 (and (isa :NOUN SewingNeedle-Hand)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand") Shovel-TheWord (and (isa :NOUN Shovel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hand-TheWord (and (isa :NOUN Hand))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (AJP fe_descriptor) (NP ownerOfProprietaryThing)
    (Poss ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (NP actorPartsInvolved) (VPing fe_descriptor)
    (AJP fe_descriptor orientation) ((PPFn in) orientation)
    (N ownerOfProprietaryThing) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 5 0)) ((0 0 0)) ((2 1 0)) ((1 2 0) (2 0 0))
   ((1 1 0) (2 0 0)) ((2 3 0) (2 4 0)) ((2 2 1) (4 0 0)) ((2 1 0) (4 0 0))
   ((1 0 0) (4 0 0)) ((0 0 0) (2 2 0)))))

(FNNounSemtrans (TheList "hand") Tool-TheWord (and (isa :NOUN HandTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hand") Towel-TheWord (and (isa :NOUN HandTowel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handbag-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP mainConstituent) (N mainConstituent))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Handbag-TheWord (and (isa :NOUN WomensBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "handball") Court-TheWord
 (and (isa :NOUN HandballCourt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handball-TheWord (and (isa :NOUN HandballBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handbook-TheWord
 (and (isa :NOUN Book-CW) (isa :NOUN InstructionalWork)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) (N situationTopic)
    ((PPFn about) situationTopic) ((PPFn of) situationTopic)
    ((PPFn on) authorOfLiteraryWork-CW situationTopic)
    (NP situationTopic deviceUse) ((PPFn for) situationTopic deviceUse)
    ((PPingFn for) deviceUse) (VPto deviceUse))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW situationTopic))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 7 0)) ((0 6 1)) ((0 5 1)) ((2 0 1)) ((0 4 1)) ((0 3 0))
   ((0 6 0)) ((0 2 0)) ((0 5 0)) ((0 1 0)) ((2 0 0)) ((0 4 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Handful-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Handgrip-TheWord (and (isa :NOUN HandGrip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handgun-TheWord (and (isa :NOUN Handgun))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (N activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "handheld" "belt") Sander-TheWord
 (and (isa :NOUN HandheldBeltSander)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "handheld") Stamids-TheWord
 (and (isa :NOUN HandheldStamids)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "handicap" "accessible") Building-TheWord
 (and (isa :NOUN HandicapAccessibleBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handicraft-TheWord (and (isa :NOUN CraftArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handkerchief-TheWord (and (isa :NOUN Handkerchief))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handle-TheWord (and (isa :NOUN Handle))
 (frame FN_Shaped_part) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handlebar-TheWord (and (isa :NOUN HandleBar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handout-TheWord (and (isa :NOUN PressRelease))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handsaw-TheWord (and (isa :NOUN HandSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handshake-TheWord (and (isa :NOUN ShakingHands))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handwriting-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance outputsCreated WritingByHand :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Handyman-TheWord (and (isa :NOUN Handyman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hang") Glider-TheWord (and (isa :NOUN HangGlider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hangar-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hanger-TheWord (and (isa :NOUN Hanger-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hanging") Lamp-TheWord (and (isa :NOUN Lamp-Hanging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hanging") Planter-TheWord
 (and (isa :NOUN Planter-Hanging)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hanging-TheWord (and (isa :NOUN Execution-Judicial))
 (frame FN_Execution) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hanging-TheWord
 (and (isa :NOUN Hanging-Execution-Judicial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hangman-TheWord (and (isa :NOUN Execution-Judicial))
 (frame FN_Execution) (bindingTemplate (TheList (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hank-TheWord (and (isa :NOUN CoiledWire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hankering-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) fe_focal_participant))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Haploid-TheWord (and (isa :NOUN HaploidCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Happening-TheWord (and (isa :NOUN Event))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Happenstance-TheWord
 (and (isa :NOUN Situation)
      (not (and (situationConstituents :NOUN ?A) (causes-Underspecified ?A ?B)
                (situationConstituents :NOUN ?B))))
 (frame FN_Coincidence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Happiness-TheWord (and (isa :NOUN Happiness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harangue-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn against) objectOfEvaluation)
    ((PPFn on) situationTopic) (PPinterrog situationTopic))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Harassment-TheWord (and (isa :NOUN Harassment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harbinger-TheWord (and (isa :NOUN Signal))
 (frame FN_Omen)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_predictive_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn of) fe_future_phenomenon) (NP outcomeOfAction)
    (AJP fe_predictive_phenomenon))))
 (groupPatterns (TheSet ((1 0 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Harbor-TheWord (and (isa :NOUN Harbor))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString))
    (NP fe_relative_location))
   (:GAP (DEN eventLocale) (DNI locationUse))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 2 0)))))

(FNNounSemtrans (TheList "hard") Copy-TheWord
 (and (isa :NOUN HardcopyInformationBearingObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hard") Liquor-TheWord (and (isa :NOUN Liquor-Drink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardback-TheWord (and (isa :NOUN BookCopy))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardhat-TheWord (and (isa :NOUN SafetyHelmet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardness-TheWord (and (isa :NOUN Hardness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardship-TheWord (and (isa :NOUN Interfering))
 (frame FN_Hindering)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn explains-Generic)))
   (:GAP (INI objectActedOn) (DEN fe_hindrance) (DNI affectedAgent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "hardware" "bus" "graphics" "sub") System-TheWord
 (and (isa :NOUN HardwareBusGraphicsSubSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hardware" "memory") Unit-TheWord
 (and (isa :NOUN ComputerHardwareMemoryStorageUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hardware") Store-TheWord
 (and (isa :NOUN HardwareStore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardware-TheWord
 (and (isa :NOUN ComputerHardwareItem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardware-TheWord
 (and (isa :NOUN HardwareProductOrService)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hardware") Tool-TheWord
 (and (isa :NOUN HardwareTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hardwood-TheWord (and (isa :NOUN Hardwood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hare-TheWord (and (isa :NOUN Rabbit))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harem-TheWord (and (isa :NOUN Harem))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Harm-TheWord (and (isa :NOUN HarmingAnAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harmonica-TheWord (and (isa :NOUN Harmonica))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harmony-TheWord (and (isa :NOUN Compatibility))
 (frame FN_Compatibility) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harness-TheWord (and (isa :NOUN Harness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harp-TheWord
 (and (isa :NOUN Harp-TheStringInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harpoon-TheWord
 (and (isa :NOUN Harpoon-FishingDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harpsichord-TheWord (and (isa :NOUN Harpsichord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harrow-TheWord (and (isa :NOUN Harrow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "harvest") Mite-TheWord (and (isa :NOUN Chigger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Harvest-TheWord (and (isa :NOUN HarvestingACrop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hashish-TheWord (and (isa :NOUN DrugSubstance))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hashish-TheWord (and (isa :NOUN Hashish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hat-Pin-TheWord
 (and (isa :NOUN (AccessoryFn-Artifact Hat))) (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "hat") Rack-TheWord (and (isa :NOUN HatRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hat-TheWord (and (isa :NOUN Hat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) ((PPFn of) mainConstituent)
    ((PPFn with) fe_descriptor parts)
    (AJP fe_descriptor mainConstituent clothingStyle)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 1)) ((0 3 2)) ((0 4 0)) ((0 4 1) (2 0 0))
   ((0 3 2) (2 0 0)) ((0 4 0) (2 0 0)) ((0 3 1) (2 0 0)) ((0 1 0) (0 4 2))
   ((0 3 0) (0 4 2)) ((0 2 0) (0 4 1)) ((0 3 0) (0 4 1)) ((0 3 0) (0 4 0))
   ((0 3 0) (0 3 0)) ((0 0 0) (0 4 0)) ((0 3 0) (0 3 2) (2 0 0))
   ((0 3 0) (0 3 0) (2 0 0)) ((0 2 1) (0 3 0) (0 3 0))
   ((0 2 0) (0 3 0) (0 3 0) (0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Hatband-TheWord (and (isa :NOUN HatBand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hatchback") Door-TheWord
 (and (isa :NOUN RoadVehicleHatchbackDoor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hatchback-TheWord (and (isa :NOUN HatchbackCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hatchback-TheWord
 (and (isa :NOUN RoadVehicleHatchbackDoor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hatchet-TheWord (and (isa :NOUN Hatchet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hatrack-TheWord (and (isa :NOUN HatRack))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hauberk-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn of) mainConstituent)
    (AJP clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Haversack-TheWord (and (isa :NOUN Backpack))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn over) fe_relative_location))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Hawaiian-TheWord (and (isa :NOUN HawaiianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hawk-TheWord (and (isa :NOUN Hawk))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hay-TheWord (and (isa :NOUN Hay)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hayfield-TheWord (and (isa :NOUN Meadow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Haze-TheWord (and (isa :NOUN Haze)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) He-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Masculine-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "head") Cold-TheWord (and (isa :NOUN HeadCold))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "head") Covering-TheWord (and (isa :NOUN Veil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "head" "of") State-TheWord
 (and (isa :NOUN HeadOfState)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Head-TheWord (and (isa :NOUN Head-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (Poss ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (NP actorPartsInvolved) (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 1 0)) ((1 0 0) (2 0 0)) ((2 1 0) (4 0 0))
   ((0 0 0) (2 1 0)) ((0 0 0) (2 1 0) (2 1 0)))))

(FNNounSemtrans (TheList) Head-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_depictive)
    ((PPFn of) processTypeForAccomplishmentType fe_governed))
   (:GAP (DNI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 1 1)) ((0 0 0)) ((1 0 0)) ((1 1 0)) ((0 0 1) (1 1 1))
   ((0 0 1) (3 0 0)) ((1 1 1) (4 0 0)))))

(FNNounSemtrans (TheList) Headache-TheWord (and (isa :NOUN Headache))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headband-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 1)) ((0 1 0) (2 0 0))
   ((0 1 0) (0 1 0)) ((0 1 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Headband-TheWord (and (isa :NOUN HairBand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headboard-TheWord
 (and (isa :NOUN Headboard-PartOfBedFrame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headdress-TheWord (and (isa :NOUN Headgear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_descriptor)
    (N fe_descriptor mainConstituent) ((PPFn in) mainConstituent)
    ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 2)) ((0 3 0)) ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 4 0))
   ((0 4 1) (2 0 0)) ((0 1 0) (0 4 3)))))

(FNNounSemtrans (TheList) Headgear-TheWord (and (isa :NOUN Headgear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headhunter-TheWord
 (and (isa :NOUN Headhunter-Corporate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headland-TheWord (and (isa :NOUN Headland))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP fe_relative_location) ((PPFn above) fe_relative_location)
    ((PPFn between) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Headlight-TheWord
 (and (isa :NOUN AutomobileHeadLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headmaster-TheWord (and (isa :NOUN Headmaster))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn from) duration) ((PPFn of) fe_governed)
    ((PPFn at) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Headpiece-TheWord (and (isa :NOUN Headgear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) ((PPFn of) wearer))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Headquarters-TheWord
 (and (isa :NOUN Facility-Generic)) (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) fe_container_possessor)
    ((PPFn in) fe_container_possessor) (AJP fe_descriptor)
    ((PPFn of) locationUse) (N fe_container_possessor locationUse)
    (Poss locationUse))
   (:GAP (DEN fe_container_possessor eventLocale locationUse))
   (:GEN (N locationUse))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 3 0)) ((0 4 1)) ((0 1 0) (2 0 0)) ((0 1 0) (0 4 1))
   ((0 3 0) (0 4 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Headset-TheWord (and (isa :NOUN Headset))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Headsman-TheWord (and (isa :NOUN Execution-Judicial))
 (frame FN_Execution) (bindingTemplate (TheList (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Healer-TheWord (and (isa :NOUN HealthProfessional))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP performedBy (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:OBLIQUE-OBJECT ((PPFn of) patientInCareEvent))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 1) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "health") Insurance-TheWord
 (and (isa :NOUN MedicalInsurance)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "health") Professional-TheWord
 (and (isa :NOUN MedicalCareProvider)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Health-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) (N objectActedOn) ((PPFn in) objectActedOn)
    ((PPFn of) objectActedOn) (Poss objectActedOn) ((PPFn at) eventOccursAt))
   (:GAP (INI infects objectActedOn) (DNI objectActedOn))
   (:NOUN (VPed fe_degree)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 4 0)) ((1 3 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0))
   ((1 3 0) (1 5 0)) ((3 0 0) (4 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Health-TheWord (and (isa :NOUN Healthy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heap-TheWord (and (isa :NOUN Pile))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_individuals) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Heap-TheWord (and (isa :NOUN Pile))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "hearing") Aid-TheWord (and (isa :NOUN HearingAid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heart") Attack-TheWord (and (isa :NOUN HeartAttack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heart") Disease-TheWord
 (and (isa :NOUN HeartCondition)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heart-TheWord (and (isa :NOUN Heart))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heart-TheWord (and (isa :NOUN Heart-LocusOfFeelings))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heart-TheWord (and (isa :NOUN Heart-TheSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heart-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "heart") Valve-TheWord (and (isa :NOUN HeartValve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hearts-TheWord (and (isa :NOUN HeartsGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heat") Pump-TheWord (and (isa :NOUN HeatPump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heat") Sink-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance heatTransferDestination
       TemperatureChangingProcess :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heat") Source-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance heatTransferSource TemperatureChangingProcess
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heat-TheWord (and (isa :NOUN ThermalEnergy))
 (frame FN_Measurable_attributes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn in) objectActedOn))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Heater-TheWord (and (isa :NOUN AutomobileHeater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heater-TheWord (and (isa :NOUN HeatingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heath-TheWord (and (isa :NOUN Heath)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heathland-TheWord (and (isa :NOUN Heath))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "heating") Device-TheWord
 (and (isa :NOUN HeatingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heating") Element-TheWord
 (and (isa :NOUN HeatingElement)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heating-TheWord (and (isa :NOUN HeatingProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heaven-TheWord (and (isa :NOUN Heaven))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hectare-TheWord (and (isa :NOUN Hectare))
 (frame FN_Measure_area)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count) (AJP fe_count))
   (:OBLIQUE-OBJECT (Num fe_count) (AJP fe_count)
    ((PPFn of) situationLocation fe_occupant))
   (:GAP (DNI fe_occupant) (DEN fe_unit)) (:NOUN (N situationLocation))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 0 0)) ((0 0 0) (1 2 1)) ((0 1 0) (1 2 1))
   ((1 0 0) (1 2 0)) ((1 1 0) (1 2 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "hedge") Sparrow-TheWord (and (isa :NOUN Sparrow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hedge-TheWord (and (isa :NOUN Hedge))
 (frame FN_Locale_by_use) (bindingTemplate (TheList (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hedonism-TheWord (and (isa :NOUN Hedonism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heel-TheWord (and (isa :NOUN Heel))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Heel-TheWord (and (isa :NOUN ShoeHeel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heelbone-TheWord (and (isa :NOUN Calcaneus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Height-TheWord (and (isa :NOUN Height))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) quantityMeasured))
   (:GAP (DEN hasPhysicalQuantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Height-TheWord (and (isa :NOUN Mountain))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts) ((PPFn of) fe_container_possessor)
    ((PPFn above) fe_relative_location) ((PPFn on) fe_relative_location)
    (N parts activeIngredientsOfType))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 4 0)) ((0 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Height-TheWord (and (isa :NOUN Hill))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts) ((PPFn of) fe_container_possessor)
    ((PPFn above) fe_relative_location) ((PPFn on) fe_relative_location)
    (N parts activeIngredientsOfType))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 4 0)) ((0 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "heir") Apparent-TheWord
 (and (isa :NOUN HeirApparent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "heisman") Trophy-TheWord
 (and (isa :NOUN HeismanTrophy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heist-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer perpetrator from-Generic))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn by) perpetrator)
    ((PPFn in) eventOccursAt) ((PPFn at) eventOccursAt)
    (N objectOfPossessionTransfer from-Generic) ((PPFn of) from-Generic)
    (NP temporallyIntersects) (AVP temporallyIntersects))
   (:GAP (INI objectOfPossessionTransfer perpetrator) (CNI from-Generic)
    (DNI objectOfPossessionTransfer victim))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((0 0 0)) ((0 0 2)) ((1 3 0) (1 6 0))
   ((1 2 0) (1 5 0)) ((1 2 0) (1 4 1)) ((1 1 0) (1 4 1)) ((1 0 0) (1 4 1))
   ((0 0 1) (1 4 0)) ((1 2 0) (1 4 1) (1 7 0))
   ((0 0 1) (0 0 1) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Helicopter-TheWord (and (isa :NOUN Helicopter))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Srel transporter)) (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Helium-TheWord (and (isa :NOUN Helium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Helix-TheWord (and (isa :NOUN Helix)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hell-TheWord (and (isa :NOUN Hell)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Helm-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 1) (2 0 0))
   ((0 1 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Helmet-TheWord (and (isa :NOUN Helmet))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) ((PPFn with) parts)
    (N mainConstituent clothingStyle deviceUse) ((PPFn of) wearer))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 1 0)) ((0 2 0)) ((0 0 1)) ((0 0 0))
   ((0 2 2) (2 0 0)) ((0 2 0) (2 0 0)) ((0 0 1) (2 0 0)) ((0 2 0) (0 2 2))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 2) (2 0 0))
   ((0 0 0) (0 0 0) (0 2 1) (2 0 0)))))

(FNNounSemtrans (TheList) Helmet-TheWord (and (isa :NOUN Helmet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Helmsman-TheWord (and (isa :NOUN Helmsman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Helo-TheWord (and (isa :NOUN Helicopter))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Help-TheWord (and (isa :NOUN HelpingAnAgent))
 (frame FN_Assistance)
 (bindingTemplate
  (TheList (:SUBJECT (NP beneficiary) ((PPFn for) fe_helper))
   (:OBJECT (Poss fe_helper))
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic) ((PPingFn in) to-Generic)
    ((PPFn from) fe_helper) ((PPFn of) fe_helper) (A fe_helper) (N fe_helper)
    (AJP fe_helper))
   (:GAP (CNI beneficiary fe_focal_entity) (INI beneficiary to-Generic)
    (DNI beneficiary to-Generic fe_helper))
   (:NOUN (Sfin to-Generic)) (:GEN (Poss fe_helper))))
 (groupPatterns
  (TheSet ((2 4 0)) ((2 1 0)) ((2 6 0)) ((2 5 0)) ((5 0 0)) ((2 3 0)) ((2 2 0))
   ((0 0 0)) ((4 0 0) (5 0 0)) ((0 0 0) (5 0 0)) ((2 0 0) (2 4 0))
   ((0 1 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Hem-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer))
   (:GEN (Poss (InverseBinaryPredicateFn outfitParts) wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 1)) ((2 0 0)) ((0 0 0)) ((0 1 0)) ((0 1 0) (2 0 1)))))

(FNNounSemtrans (TheList) Hematologist-TheWord (and (isa :NOUN Hematologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heme-TheWord
 (and (isa :NOUN (MobFn HemoproteinMolecule))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemisphere-TheWord
 (and (isa :NOUN CerebralHemisphere)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemisphere-TheWord
 (and (isa :NOUN GeographicalHemisphere)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemlock-TheWord (and (isa :NOUN Conifer))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hemlock") Tree-TheWord (and (isa :NOUN Conifer))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemoglobin-TheWord
 (and (isa :NOUN HemoglobinMolecule)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemophilia-TheWord (and (isa :NOUN Hemophilia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemophiliac-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance physiologicalConditionAffects Hemophilia :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemorrhoid-TheWord
 (and (isa :NOUN Hemorrhoid-AilmentCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemostat-TheWord (and (isa :NOUN Hemostat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hemp-TheWord (and (isa :NOUN Hemp-Fiber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hen-TheWord (and (isa :NOUN (FemaleFn Bird)))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hepatic") Artery-TheWord
 (and (isa :NOUN HepaticArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hepatic") Duct-TheWord (and (isa :NOUN HepaticDuct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hepatic") Vein-TheWord (and (isa :NOUN HepaticVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hepaticopsida-TheWord
 (and (isa :NOUN HepaticaeClass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hepatitis-TheWord (and (isa :NOUN Hepatitis))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heptagon-TheWord (and (isa :NOUN Heptagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Her-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Feminine-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Her-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Feminine-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heraldry-TheWord (and (isa :NOUN Heraldry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herb-TheWord (and (isa :NOUN Food)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType) (A activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 2 0))
   ((0 2 0) (0 2 0)) ((0 0 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Herb-TheWord (and (isa :NOUN Herb-HumanUse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herb-TheWord (and (isa :NOUN Plant-NonWoody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herbalife-TheWord (and (isa :NOUN Herbalife))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herbivore-TheWord (and (isa :NOUN Herbivore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herd-TheWord (and (isa :NOUN Herd))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals)
    (N fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Hermaphrodite-TheWord
 (and (isa :NOUN HermaphroditeHuman)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hermit") Crab-TheWord (and (isa :NOUN Crab-Hermit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hermitage-TheWord (and (isa :NOUN Hermitage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hernia-TheWord (and (isa :NOUN Hernia))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hero-TheWord
 (and (isa :NOUN (CollectionIntersectionFn (TheSet HeroicPerson MaleHuman))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heroin-TheWord (and (isa :NOUN Heroin))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant)) (:GEN (Poss fe_descriptor))))
 (groupPatterns (TheSet ((0 1 1)) ((2 0 0)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Heroine-TheWord
 (and (isa :NOUN (CollectionIntersectionFn (TheSet HeroicPerson FemaleHuman))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heron-TheWord (and (isa :NOUN Heron))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "herpes") Zoster-TheWord
 (and (isa :NOUN Shingles-Ailment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herring-TheWord (and (isa :NOUN Herring))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hers-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Feminine-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Herself-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Feminine-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hertz-TheWord (and (isa :NOUN Hertz)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Heterosexual-TheWord
 (and (isa :NOUN HeterosexualHuman)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hexagon-TheWord (and (isa :NOUN Hexagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hexagram-TheWord (and (isa :NOUN Hexagram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hibernation-TheWord (and (isa :NOUN Hibernating))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (AJP duration) (Sub duration) ((PPFn in) doneBy)
    (N temporallyIntersects) ((PPFn through) temporallyIntersects))
   (:GEN (Poss doneBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 4 0)) ((1 3 0)) ((2 0 0)) ((1 2 0)) ((0 0 0)) ((1 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Hickory-TheWord
 (and (isa :NOUN (WoodFn HickoryTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hickory") Tree-TheWord (and (isa :NOUN HickoryTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hide-TheWord (and (isa :NOUN Hide-Product))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "high" "blood") Pressure-TheWord
 (and (isa :NOUN Hypertension)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "high") Explosive-TheWord
 (and (isa :NOUN HighExplosive)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "high") Jump-TheWord
 (and (isa :NOUN HighJumpSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "high") Priest-TheWord (and (isa :NOUN Priest))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) High-Priest-TheWord (and (isa :NOUN Priest))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) High-Rise-TheWord (and (isa :NOUN Skyscraper))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "high" "speed") Train-TheWord
 (and (isa :NOUN HighSpeedTrain)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) High-Water-TheWord (and (isa :NOUN Extreme))
 (frame FN_Extreme_point) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "highball") Glass-TheWord
 (and (isa :NOUN HighballGlass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Highchair-TheWord (and (isa :NOUN HighChair))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "higher" "cognitive") Process-TheWord
 (and (isa :NOUN Thinking)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Highlighter-TheWord (and (isa :NOUN HighlighterPen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "highway") Bus-TheWord (and (isa :NOUN HighwayBus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Highway-TheWord (and (isa :NOUN Highway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_endpoints) ((PPFn to) to-Generic)
    ((PPFn into) to-Generic) (N (InverseBinaryPredicateFn nameString))
    (AJP fe_characteristic fe_frequency_of_use
     (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn across) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn from) from-Generic))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 3 0)) ((0 4 2)) ((0 2 0)) ((0 4 1)) ((0 0 0)) ((0 4 0))
   ((0 4 0) (0 7 0)) ((0 3 0) (0 4 0)) ((0 1 0) (0 4 0)) ((0 4 0) (0 4 0))
   ((0 1 0) (0 3 0) (0 8 0)) ((0 1 0) (0 4 0) (0 8 0))
   ((0 4 0) (0 4 0) (0 6 0)))))

(FNNounSemtrans (TheList) Hijack-TheWord (and (isa :NOUN Hijacking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hijacker-TheWord (and (isa :NOUN Hijacker))
 (frame FN_Piracy)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N transporter)) (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Hijacking-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_degree) ((PPFn by) fe_specification)
    ((PPFn of) fe_specification) ((PPFn over) fe_specification))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hijacking-TheWord (and (isa :NOUN HostileSeizure))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_degree) ((PPFn by) fe_specification)
    ((PPFn of) fe_specification) ((PPFn over) fe_specification))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hijacking-TheWord (and (isa :NOUN Hijacking))
 (frame FN_Piracy)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT (AJP duration) ((PPFn by) perpetrator)
    ((PPFn in) temporallyIntersects) ((PPFn on) temporallyIntersects)
    (NP temporallyIntersects) (N perpetrator temporallyIntersects transporter)
    ((PPFn of) transporter))
   (:GAP (DEN fe_event) (CNI perpetrator) (DNI perpetrator) (INI victim))
   (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((1 5 2)) ((1 5 0)) ((1 6 0) (3 0 0)) ((1 5 1) (1 6 0))
   ((1 2 0) (1 6 0)) ((0 0 0) (1 3 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 6 0))
   ((1 0 0) (1 5 2)) ((1 2 0) (1 6 0) (3 0 0)) ((1 4 0) (1 6 0) (3 0 0))
   ((1 1 0) (1 5 1) (1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Hike-TheWord (and (isa :NOUN IncreaseEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_attribute) (AJP fe_difference)
    ((PPFn of) fe_difference) ((PPFn to) fe_final_value)
    (N fe_attribute fe_difference objectOfStateChange))
   (:GAP (DEN fe_difference) (2nd objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 4 0)) ((0 0 0)) ((0 1 0) (0 4 2))
   ((0 1 0) (0 4 0)) ((0 2 0) (0 4 0)) ((0 4 0) (0 4 1)) ((0 0 0) (0 4 1))
   ((0 0 0) (0 3 0) (0 4 1)) ((0 3 0) (0 4 0) (0 4 1)))))

(FNNounSemtrans (TheList) Hike-TheWord (and (isa :NOUN HikingEvent))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn with) accompaniedBy)
    (N situationLocation distanceTranslated duration) ((PPFn to) to-Generic)
    ((PPFn into) to-Generic) ((PPFn towards) to-Generic)
    (AJP distanceTranslated fe_manner) (A fe_manner)
    ((PPFn over) trajectory-Complete) ((PPFn along) trajectory-Complete)
    ((PPFn across) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn on) trajectory-Complete) ((PPFn up) trajectory-Complete)
    ((PPFn down) trajectory-Complete) ((PPFn from) from-Generic)
    ((PPFn out) from-Generic))
   (:GAP (INI performedBy) (CNI performedBy)
    (DNI situationLocation performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 14 0)) ((3 0 0)) ((0 0 0)) ((1 13 0)) ((1 8 0)) ((1 3 0))
   ((1 5 0)) ((1 0 0)) ((1 1 0)) ((1 1 1)) ((1 2 0) (1 14 0))
   ((1 1 2) (1 11 0)) ((0 0 0) (1 5 0)) ((1 5 0) (1 10 0))
   ((0 0 0) (1 15 0) (3 0 0)) ((1 5 1) (1 12 0) (1 14 0))
   ((0 0 0) (1 6 0) (1 8 0)) ((0 0 0) (1 4 0) (1 10 0))
   ((0 0 0) (1 5 0) (1 9 0)) ((1 2 0) (1 5 0) (1 14 0))
   ((1 2 0) (1 5 0) (1 7 0)) ((0 0 0) (1 5 0) (1 5 1) (1 8 0)))))

(FNNounSemtrans (TheList) Hiker-TheWord (and (isa :NOUN Hiker))
 (frame FN_Self_motion)
 (bindingTemplate (TheList (:GAP (INI situationLocation) (DEN performedBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hill-TheWord (and (isa :NOUN Hill))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor) (VPed fe_descriptor)
    (N parts (InverseBinaryPredicateFn nameString))
    ((PPFn to) fe_relative_location)
    (AJP parts fe_descriptor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    (NP fe_relative_location) ((PPFn above) fe_relative_location)
    ((PPFn around) fe_relative_location) ((PPFn behind) fe_relative_location)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 8 0)) ((0 7 0)) ((0 6 0)) ((0 5 0)) ((0 4 3)) ((0 2 1))
   ((0 4 2)) ((0 1 0)) ((0 4 1)) ((0 0 0)) ((0 2 0)) ((0 4 0))
   ((0 0 0) (0 4 1)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Hillock-TheWord (and (isa :NOUN (SmallFn Hill)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) ((PPFn near) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hillside-TheWord (and (isa :NOUN Hillside))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hilt-TheWord
 (and (isa :NOUN Handle)
      (relationExistsInstance properPhysicalParts BladedWeapon-NonProjectile
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hilltop-TheWord (and (isa :NOUN Hilltop))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Him-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Masculine-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Himself-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Masculine-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hindi-TheWord (and (isa :NOUN HindiLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hindleg-TheWord
 (and (isa :NOUN Leg) (isa :NOUN BackSide)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Hindlimb-TheWord
 (and (isa :NOUN Limb-AnimalBodyPart) (isa :NOUN BackSide))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hindquarters-TheWord
 (and (isa :NOUN Quadruped) (isa :NOUN BackSide)) (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Hindrance-TheWord (and (isa :NOUN Interfering))
 (frame FN_Hindering)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_hindrance))
   (:OBLIQUE-OBJECT ((PPFn in) objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "hindu") Kush-TheWord
 (and (isa :NOUN HinduKush-Mountains)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hindu-TheWord (and (isa :NOUN HinduPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hinduism-TheWord (and (isa :NOUN Hinduism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hip-Hop-TheWord (and (isa :NOUN HipHopMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hip-TheWord (and (isa :NOUN Hip)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hip-TheWord (and (isa :NOUN HipJoint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hipbone-TheWord (and (isa :NOUN PelvicBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hippo-TheWord (and (isa :NOUN Hippopotamus))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hippocampus-TheWord (and (isa :NOUN Hippocampus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hippodrome-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hippopotamus-TheWord (and (isa :NOUN Hippopotamus))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hire-TheWord
 (and (isa :NOUN HiringSomeoneToDoSomething)) (frame FN_Hiring)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) His-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Masculine-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hiss-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_manner)
    ((PPingFn of) fe_noisy_event emitter)
    ((PPFn of) fe_internal_cause fe_noisy_event emitter objectMoving))
   (:GAP (DNI emitter) (CNI emitter)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 3 2)) ((0 0 0)) ((1 2 0)) ((1 3 1)) ((1 1 0))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 2 1)) ((1 1 0) (1 3 2)) ((0 0 0) (1 1 0))
   ((1 1 0) (1 3 1)) ((1 1 0) (1 1 0)) ((1 0 0) (1 3 3))
   ((0 0 0) (1 1 0) (1 1 0)) ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Histology-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Historian-TheWord (and (isa :NOUN Historian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "historic") Period-TheWord
 (and (isa :NOUN HistoricPeriod)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "historical") Fiction-TheWord
 (and (isa :NOUN PropositionalConceptualWork-HistoricalFictionGenre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "historical") Linguistics-TheWord
 (and (isa :NOUN HistoricalLinguistics)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) History-TheWord
 (and (isa :NOUN History-FieldOfStudy)) (frame FN_Fields)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_practitioner worksInIndustry))
   (:OBLIQUE-OBJECT (AJP eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn by) fe_practitioner) ((PPFn for) fe_practitioner)
    (Sub temporallyIntersects) (N activeIngredientsOfType)
    (A activeIngredientsOfType) ((PPFn of) activeIngredientsOfType))
   (:GAP (DEN processTypeForAccomplishmentType) (CNI fe_practitioner)
    (DNI fe_practitioner))
   (:NOUN (N fe_practitioner topicOfIndividual))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 7 0)) ((1 6 0)) ((1 5 0)) ((3 0 1)) ((1 3 0)) ((1 2 0))
   ((0 0 0)) ((3 0 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 4 0)) ((1 0 0) (3 0 1))
   ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) History-TheWord (and (isa :NOUN HistoricalNarrative))
 (frame FN_History)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) endingPoint) ((PPFn of) situationTopic)
    (AJP fe_domain duration situationTopic) (N situationTopic))
   (:GAP (INI situationTopic) (DNI situationTopic))
   (:GEN (Poss situationTopic))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 3 0)) ((0 2 2)) ((0 2 1)) ((0 2 0))
   ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) History-TheWord (and (isa :NOUN Biography))
 (frame FN_Individual_history)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A fe_domain) (AJP fe_depictive fe_domain duration)
    ((PPFn until) endingPoint) ((PPFn through) endingPoint)
    ((PPFn with) fe_events) ((PPingFn of) fe_events)
    ((PPFn of) fe_depictive fe_events doneBy) ((PPFn in) doneBy)
    ((PPFn from) startingPoint) (N fe_domain fe_events doneBy fe_time_span))
   (:GAP (DEN fe_events) (DNI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((3 0 0)) ((1 6 2)) ((1 9 2)) ((1 6 1)) ((1 9 0))
   ((1 1 1)) ((1 1 0)) ((1 9 3) (3 0 0)) ((1 6 2) (1 9 3)) ((1 8 0) (3 0 0))
   ((0 0 0) (1 6 1)) ((1 1 2) (1 6 1)) ((1 6 1) (1 9 0)) ((1 7 0) (1 9 0))
   ((1 1 1) (3 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 6 2)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 1 0) (1 9 2)) ((1 3 0) (1 6 2) (1 8 0))
   ((0 0 0) (1 1 2) (1 6 1)) ((1 1 0) (1 9 1) (1 9 3))
   ((0 0 0) (1 1 2) (1 6 0)) ((0 0 0) (1 1 0) (1 1 2))
   ((1 1 0) (1 1 0) (1 9 1)) ((1 0 0) (1 2 0) (1 6 2) (1 8 0)))))

(FNNounSemtrans (TheList) History-TheWord
 (and (isa :NOUN HistoricalCollection)) (frame FN_Out_of_existence)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (Sub situationConstituents) (AVP temporallyIntersects))
   (:GAP (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) History-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP authorOfLiteraryWork-CW))
   (:OBLIQUE-OBJECT ((PPFn according to) authorOfLiteraryWork-CW)
    ((PPFn in) startingDate) (VPed authorOfLiteraryWork-CW startingDate)
    ((PPFn of) situationTopic) (AJP fe_descriptor fe_genre situationTopic)
    (N situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW beneficiary))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((3 0 0)) ((1 0 0)) ((1 3 0) (1 4 1))
   ((1 3 0) (1 4 0)) ((1 3 0) (3 0 1)) ((1 3 0) (3 0 0)) ((1 5 0) (3 0 0))
   ((0 0 0) (1 3 0)) ((1 2 1) (1 4 2) (3 0 0)) ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList "hit") Squad-TheWord
 (and (isa :NOUN (GroupFn Assassin))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hit-TheWord
 (and (isa :NOUN Event) (hasPhysicalQuantity :NOUN RandomFrequency))
 (frame FN_Hit_or_miss) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hit-TheWord (and (isa :NOUN Collision))
 (frame FN_Impact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hit-TheWord (and (isa :NOUN BaseballContact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hitachi" "cat" "6a" "copper" "network") Cable-TheWord
 (and (isa :NOUN HitachiCategory6aCopperCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hiv-TheWord (and (isa :NOUN HIV))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hive-TheWord (and (isa :NOUN NestForBees))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoarder-TheWord
 (and (isa :NOUN Collector) (isa :NOUN PsychologicalAilment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hobby-TheWord (and (isa :NOUN HobbyActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hobnail-TheWord (and (isa :NOUN Hobnail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hobo-TheWord (and (isa :NOUN Bum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hockey") Helmet-TheWord
 (and (isa :NOUN HockeyHelmet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hockey") Player-TheWord
 (and (isa :NOUN HockeyPlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hockey") Puck-TheWord (and (isa :NOUN HockeyPuck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hockey") Stick-TheWord (and (isa :NOUN HockeyStick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hockey") Team-TheWord (and (isa :NOUN HockeyTeam))
 (frame FN_Team) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hodgkin" "s") Disease-TheWord
 (and (isa :NOUN HodgkinsDisease)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoe-TheWord (and (isa :NOUN Hoe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hog-TheWord (and (isa :NOUN Pig-Domesticated))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hold-Up-TheWord (and (isa :NOUN RobbingAnAgent))
 (frame FN_Robbery)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N fe_manner from-Generic))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "holding") Company-TheWord
 (and (isa :NOUN HoldingCompany)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hole") Maker-TheWord (and (isa :NOUN HoleMakingTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hole-TheWord (and (isa :NOUN Portal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "holiday") Accessory-TheWord
 (and (isa :NOUN HolidayAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Holiday-TheWord (and (isa :NOUN Holiday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:GAP (DEN fe_unit) (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Holiday-TheWord (and (isa :NOUN LeaveOfAbsence))
 (frame FN_Temporary_leave) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hollow-TheWord (and (isa :NOUN (SmallFn Valley)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts fe_formational_cause)
    ((PPFn in) fe_relative_location)
    ((PPFn of) (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn underneath) fe_relative_location)
    (N parts fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location activeIngredientsOfType))
   (:GAP (DEN eventLocale))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 4 4)) ((0 3 0)) ((0 2 1)) ((0 1 0)) ((0 4 3)) ((2 0 0)) ((0 2 0))
   ((0 4 2)) ((0 4 1)) ((0 0 1)) ((0 4 0)) ((0 0 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Holly-TheWord (and (isa :NOUN Holly)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Holmium-TheWord (and (isa :NOUN Holmium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Holocaust-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT (AJP killers) (N killers) ((PPFn in) eventOccursAt)
    (A by-Underspecified victim) ((PPFn of) victim))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 1)) ((1 3 0)) ((1 1 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Holonym-TheWord
 (and (isa :NOUN LexicalWord) (isa ?word2 LexicalWord)
      (isa ?rel BinaryRelation) (arg1Isa ?rel LexicalWord)
      (arg2Isa ?rel LexicalWord) (?rel :NOUN ?word2))
 (frame FN_Word_relations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "holy" "roman") Emperor-TheWord
 (and (isa :NOUN HolyRomanEmperor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "home") Alarm-TheWord (and (isa :NOUN AlarmForHome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "home") Appliance-TheWord
 (and (isa :NOUN HouseholdAppliance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "home") Brew-TheWord (and (isa :NOUN HomeBrewing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "home" "heater" "air") Filter-TheWord
 (and (isa :NOUN HomeHeaterAirFilter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "home" "stereo") Speaker-TheWord
 (and (isa :NOUN HomeStereoSpeaker)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Home-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn on) eventOccursAt)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN fe_building) (2nd (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Home-TheWord (and (isa :NOUN HumanResidence))
 (frame FN_Foreign_or_domestic_country)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) fe_population))
   (:GAP (DEN residesInRegion fe_discourse_salient_country))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "home" "theater") System-TheWord
 (and (isa :NOUN HomeTheaterSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "homeless") Shelter-TheWord
 (and (isa :NOUN HomelessShelter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homemaker-TheWord (and (isa :NOUN Homemaker))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homeopath-TheWord (and (isa :NOUN Homeopath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homeopathist-TheWord (and (isa :NOUN Homeopath))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homeopathy-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Homeopath)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homeostasis-TheWord (and (isa :NOUN Homeostasis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homeowner-TheWord (and (isa :NOUN Homeowner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homer-TheWord (and (isa :NOUN HittingAHomeRun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homestead-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homework-TheWord
 (and (isa :NOUN DoingAHomeworkAssignment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homicide-TheWord (and (isa :NOUN Murder))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn against) victim) ((PPFn of) victim))
   (:GAP (INI victim))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Homicide-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn without) fe_specification)
    ((PPFn of) victim) (NP victim))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 3 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Hominid-TheWord (and (isa :NOUN HominidaeFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hominidae-TheWord (and (isa :NOUN HominidaeFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homogeneity-TheWord
 (and (isa :NOUN HomogeneousTexture)) (frame FN_Diversity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_depictive hasPhysicalQuantity)
    ((PPFn of) groupMembers) ((PPFn within) groupMembers))
   (:GAP (DEN hasPhysicalQuantity) (DNI groupMembers))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1) (0 2 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Homograph-TheWord
 (and (isa :NOUN LexicalWord) (isa ?word2 LexicalWord)
      (isa ?rel BinaryRelation) (arg1Isa ?rel LexicalWord)
      (arg2Isa ?rel LexicalWord) (?rel :NOUN ?word2))
 (frame FN_Word_relations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homonym-TheWord
 (and (isa :NOUN LexicalWord) (isa ?word2 LexicalWord)
      (isa ?rel BinaryRelation) (arg1Isa ?rel LexicalWord)
      (arg2Isa ?rel LexicalWord) (?rel :NOUN ?word2))
 (frame FN_Word_relations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Homosexual-TheWord (and (isa :NOUN HomosexualHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Honesty-TheWord (and (isa :NOUN Honesty))
 (frame FN_Candidness)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn with) recipientOfInfo)
    (AJP fe_degree) ((PPFn on) genericPathway-Partial)
    ((PPFn of) infoTransferred) ((PPFn in) infoTransferred)
    ((PPingFn in) infoTransferred) ((PPFn from) performedBy)
    ((PPFn by) performedBy) ((PPFn about) situationTopic)
    ((PPingFn about) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 10 0)) ((0 9 0)) ((1 0 0)) ((0 8 0)) ((0 6 0)) ((0 5 0))
   ((0 2 0)) ((0 1 0)) ((0 9 0) (1 0 0)) ((0 2 0) (0 9 0)) ((0 2 0) (0 7 0))
   ((0 2 0) (0 4 0)) ((0 2 0) (0 3 0)) ((0 1 0) (0 9 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Honey-TheWord (and (isa :NOUN Honey)) (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Honeycomb-TheWord (and (isa :NOUN Honeycomb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Honeymoon-TheWord (and (isa :NOUN HoneymoonTrip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Honeysuckle-TheWord (and (isa :NOUN Honeysuckle))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hong" "kong") Dollar-TheWord
 (and (isa :NOUN Dollar-HongKong)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Honk-TheWord (and (isa :NOUN HonkingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Honker-TheWord (and (isa :NOUN CanadaGoose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hood-TheWord (and (isa :NOUN HoodOfGarment))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (2 0 0))
   ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Hood-TheWord (and (isa :NOUN AutoHood))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoof-TheWord (and (isa :NOUN Hoof))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing)
    (N orientation ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss fe_descriptor ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 1 0)) ((0 0 0)) ((1 2 1)) ((1 0 0)) ((1 2 0) (3 0 1))
   ((0 0 0) (3 0 0)) ((1 0 0) (3 0 1)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "hook" "and") Eye-TheWord
 (and (isa :NOUN HookAndEyeTheFastener)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hook-TheWord (and (isa :NOUN Hook)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hookah-TheWord (and (isa :NOUN Hookah))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoop-TheWord (and (isa :NOUN Hoop)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoop-TheWord (and (isa :NOUN BasketballHoop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoopskirt-TheWord (and (isa :NOUN Hoopskirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hoot-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_internal_cause emitter)
    ((PPingFn from) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((1 1 1)) ((1 0 0)) ((1 1 0)) ((1 0 0) (1 1 1))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Hope-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (N objectActedOn) (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn about) fe_event) ((PPingFn for) fe_event)
    ((PPingFn of) fe_event) (Sfin fe_event) (Sub fe_event) (VPto fe_event)
    ((PPFn to) objectActedOn)
    (Sinterrog (InverseBinaryPredicateFn explains-Generic))
    ((PPFn of) fe_event objectActedOn fe_focal_participant)
    ((PPFn for) fe_event fe_focal_participant) (N fe_focal_participant)
    ((PPFn regarding) fe_focal_participant) (VPing fe_manner)
    ((PPFn on) temporallyIntersects)
    (AJP fe_degree objectActedOn fe_manner temporallyIntersects)
    ((PPFn in) objectActedOn fe_focal_participant eventOccursAt eventOccursAt
     happensOnDate))
   (:GAP (DNI fe_event objectActedOn) (INI fe_event objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 15 2)) ((1 14 2)) ((1 8 2)) ((1 15 1)) ((1 9 1)) ((1 10 0))
   ((1 8 1)) ((1 14 1)) ((1 3 0)) ((1 9 0)) ((0 0 0)) ((3 0 0)) ((1 5 0))
   ((1 4 0)) ((1 2 0)) ((1 1 0)) ((1 8 0)) ((1 0 0)) ((1 9 1) (1 14 3))
   ((1 11 0) (1 14 2)) ((1 8 2) (1 14 2)) ((1 9 1) (1 14 2))
   ((1 10 0) (1 14 2)) ((1 10 0) (1 15 2)) ((1 14 2) (1 15 0))
   ((1 8 2) (3 0 0)) ((1 9 1) (3 0 0)) ((1 10 0) (3 0 0)) ((1 9 0) (1 15 4))
   ((1 4 0) (1 14 2)) ((1 2 0) (1 14 2)) ((1 8 0) (1 14 2)) ((1 4 0) (3 0 0))
   ((0 1 0) (1 3 0)) ((1 2 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 8 0) (3 0 0))
   ((1 8 2) (1 14 0)) ((1 6 0) (1 14 0)) ((1 8 0) (1 14 0))
   ((1 9 1) (1 12 0) (1 15 0)) ((1 7 0) (1 14 2) (3 0 0))
   ((0 1 0) (1 2 0) (1 13 0)))))

(FNNounSemtrans (TheList) Hope-TheWord (and (isa :NOUN Hope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hopper-TheWord (and (isa :NOUN Hopper))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hopper-TheWord (and (isa :NOUN Hopper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horde-TheWord (and (isa :NOUN Horde))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_individuals) (N fe_individuals)
    ((PPFn of) fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate)) (:GEN (Poss fe_individuals))))
 (groupPatterns (TheSet ((2 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Horizon-TheWord (and (isa :NOUN Horizon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "horizontal") Bar-TheWord
 (and (isa :NOUN GymHorizontalBar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "horizontal") Well-TheWord
 (and (isa :NOUN HorizontalWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hormone-TheWord (and (isa :NOUN Hormone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horn-TheWord (and (isa :NOUN Horn-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N ownerOfProprietaryThing)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 0) (3 0 0))
   ((1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (3 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Horoscope-TheWord
 (and (isa :NOUN Horoscope-AdviceOrPrediction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horror-TheWord (and (isa :NOUN (HighAmountFn Fear)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "horse") Chestnut-TheWord
 (and (isa :NOUN HorseChestnutTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horse-TheWord (and (isa :NOUN Horse))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horse-TheWord (and (isa :NOUN GymHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "horseback") Riding-TheWord
 (and (isa :NOUN HorsebackRiding)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horsepower-TheWord (and (isa :NOUN Horsepower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Horseshoe-TheWord (and (isa :NOUN Horseshoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hose") Clamp-TheWord (and (isa :NOUN HoseClamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hose-TheWord (and (isa :NOUN WomensHosiery))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent)
    ((PPFn of) fe_descriptor mainConstituent) (N mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 0 0)) ((0 0 0) (0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Hose-TheWord (and (isa :NOUN Hose)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hosiery-TheWord (and (isa :NOUN WomensHosiery))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_descriptor deviceUse))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "hospital") Bed-TheWord (and (isa :NOUN HospitalBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hospital") Room-TheWord
 (and (isa :NOUN HospitalRoom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hospital-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent) ((PPFn in) eventOccursAt)
    ((PPFn behind) fe_relative_location)
    (N fe_function (InverseBinaryPredicateFn nameString) eventOccursAt
     startingDate))
   (:GAP (DEN fe_building) (2nd (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 3 2)) ((0 0 0)) ((0 3 0)) ((0 3 1) (0 3 3)))))

(FNNounSemtrans (TheList) Hospital-TheWord (and (isa :NOUN HospitalBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hospitality-TheWord (and (isa :NOUN Friendliness))
 (frame FN_Hospitality)
 (bindingTemplate
  (TheList
   (:GAP (DEN objectOfCritique) (DNI eventAffectsBodyPart host)
    (INI eventAffectsBodyPart guestInHosting host situationTopic))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hospitalization-TheWord
 (and (isa :NOUN CommittingSomeoneToAnInstitution))
 (frame FN_Institutionalization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_particular_iteration)
    (Poss fe_facility objectActedOn) ((PPFn in) temporallyIntersects)
    ((PPFn since) temporallyIntersects))))
 (groupPatterns (TheSet ((0 0 0) (0 1 1) (0 3 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Hospitalization-TheWord
 (and (isa :NOUN HospitalCareEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Host-TheWord (and (isa :NOUN Hosting))
 (frame FN_Guest_and_host)
 (bindingTemplate
  (TheList (:SUBJECT (NP host fe_host_location))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (VPing fe_descriptor)
    ((PPFn to) guestInHosting) (AVP temporallyIntersects))
   (:GAP (DEN host)) (:GEN (Poss guestInHosting))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)) ((1 1 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((0 0 1) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Hostel-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hostile-TheWord (and (isa :NOUN Hostile))
 (frame FN_Friendly_or_hostile) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hostility-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn over) fe_issue) ((PPFn against) fe_side_2)
    ((PPFn with) fe_side_2) ((PPFn between) fe_sides)
    ((PPFn in) temporallyIntersects) ((PPFn before) temporallyIntersects))
   (:GAP (INI fe_side_1 fe_sides) (DNI fe_side_1 fe_sides))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 3 0)) ((0 0 1)) ((1 2 0)) ((0 0 0) (1 4 0))
   ((1 1 0) (1 4 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList "hot" "air" "balloon") Gondola-TheWord
 (and (isa :NOUN HotAirBalloonGondola)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot" "air") Balloon-TheWord
 (and (isa :NOUN HotAirBalloon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot") Cereal-TheWord
 (and (isa :NOUN HotCereal-Cooked)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot") Cereal-TheWord
 (and (isa :NOUN HotCereal-Uncooked)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot") Dog-TheWord (and (isa :NOUN HotDogSandwich))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot") Pack-TheWord (and (isa :NOUN HotPack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hot-Rod-TheWord (and (isa :NOUN HotRod-ModifiedCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot") Spring-TheWord (and (isa :NOUN HotSpring))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot") Tub-TheWord (and (isa :NOUN HotTub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hot" "water") Bottle-TheWord
 (and (isa :NOUN Container)) (frame FN_Containers) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hotel") Room-TheWord (and (isa :NOUN HotelRoomUnit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hotel-TheWord (and (isa :NOUN HotelBuilding))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString) startingDate
     activeIngredientsOfType)
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 3)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 2)))))

(FNNounSemtrans (TheList) Hound-TheWord (and (isa :NOUN Hound)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hour-TheWord (and (isa :NOUN CalendarHour))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_relative_time)
    (AJP fe_count fe_relative_time fe_salient_event)
    (NP (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N fe_relative_time fe_salient_event (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 0 0)) ((0 4 0)) ((0 2 0)) ((0 4 1)) ((0 1 1) (0 3 0))
   ((0 1 0) (0 1 2)))))

(FNNounSemtrans (TheList) Hour-TheWord (and (isa :NOUN Time-Quantity))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count fe_process) (VPing fe_process))
   (:OBJECT (NP fe_unit))
   (:OBLIQUE-OBJECT (AJP fe_count) (N fe_count) (Num fe_count)
    (NP fe_count fe_process))
   (:GAP (DNI fe_count) (INI fe_count fe_process) (DEN fe_unit))
   (:NOUN (N fe_process) (NP fe_process)) (:GEN (Poss fe_count))))
 (groupPatterns
  (TheSet ((2 2 0)) ((0 1 0)) ((0 0 1)) ((2 3 1)) ((4 0 0)) ((2 3 0)) ((2 0 0))
   ((0 0 0) (4 1 0)) ((2 1 0) (4 0 0)) ((0 0 1) (1 0 0)) ((4 0 0) (5 0 0)))))

(FNNounSemtrans (TheList) Hour-TheWord (and (isa :NOUN HoursDuration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "house") Fuse-TheWord (and (isa :NOUN HouseFuse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "house" "of") Card-TheWord
 (and (isa :NOUN HouseOfCards)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "house") Painter-TheWord
 (and (isa :NOUN Housepainter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "house") Physician-TheWord
 (and (isa :NOUN Resident-Medical)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) House-TheWord (and (isa :NOUN DetachedHouse))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_building))
   (:OBJECT ((PPFn with) fe_descriptor) (AJP fe_descriptor))
   (:OBLIQUE-OBJECT (NP fe_building) ((PPFn on) fe_descriptor)
    ((PPFn of) fe_function) (AJP fe_descriptor mainConstituent)
    ((PPFn in) eventOccursAt)
    (N fe_descriptor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))
   (:GAP (DEN fe_building)) (:GEN (Poss eventOccursAt))))
 (groupPatterns
  (TheSet ((2 5 2)) ((2 5 1)) ((2 3 1)) ((2 2 0)) ((1 0 0)) ((2 3 0)) ((2 0 0))
   ((2 1 0) (2 4 0)) ((2 3 0) (2 4 0)) ((2 5 0) (2 5 1)) ((0 0 0) (2 3 0))
   ((1 1 0) (2 0 0)) ((2 2 0) (2 3 0) (4 0 0)) ((2 3 0) (2 3 0) (2 3 0)))))

(FNNounSemtrans (TheList) House-TheWord
 (and (isa :NOUN AristocraticFamilyLine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) House-TheWord (and (isa :NOUN House-Modern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "house" "with" "a") Yard-TheWord
 (and (isa :NOUN LandedSingleResidenceUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Houseboat-TheWord (and (isa :NOUN HouseBoat))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Houseboat-TheWord (and (isa :NOUN HouseBoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "household") Appliance-TheWord
 (and (isa :NOUN HouseholdAppliance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "household" "electronic") Device-TheWord
 (and (isa :NOUN ElectronicHouseholdAppliance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "household") Paint-TheWord
 (and (isa :NOUN HouseholdPaint)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Housemate-TheWord
 (and (isa :NOUN PersonTypeByRegionalAffiliation))
 (frame FN_People_by_residence)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_indicated_resident))
   (:OBLIQUE-OBJECT ((PPFn at) residents-Role))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Housewife-TheWord (and (isa :NOUN Homemaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Housing-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList (:GAP (DEN fe_building)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hovel-TheWord (and (isa :NOUN Shack))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hovel-TheWord (and (isa :NOUN Shack)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hovercraft-TheWord (and (isa :NOUN Hovercraft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Howl-TheWord (and (isa :NOUN HowlingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Howl-TheWord (and (isa :NOUN HowlingSound))
 (frame FN_Vocalizations)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn from) from-Generic) (AJP fe_degree fe_manner)
    (NP fe_manner) (N fe_manner) ((PPFn across) trajectory-Complete)
    ((PPFn of) emitter))
   (:GAP (DNI emitter)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 5 0)) ((0 0 0)) ((1 1 1)) ((1 4 0) (1 5 0)) ((0 0 0) (1 2 0))
   ((1 3 0) (3 0 0)) ((1 1 1) (3 0 0)) ((1 1 1) (1 5 0)) ((0 0 0) (1 1 1))
   ((1 0 0) (1 1 1)) ((1 1 0) (1 5 0)) ((0 0 0) (1 1 1) (1 2 0))
   ((1 1 1) (1 1 1) (1 5 0)))))

(FNNounSemtrans (TheList "howler") Monkey-TheWord
 (and (isa :NOUN HowlerMonkey)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hub-TheWord (and (isa :NOUN NetworkHub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hubcap-TheWord (and (isa :NOUN Hubcap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Huddle-TheWord (and (isa :NOUN Team))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate)) (:GEN (Poss fe_individuals))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "hudson") Bay-TheWord (and (isa :NOUN HudsonBay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hue-TheWord (and (isa :NOUN MunsellHue))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hug-TheWord (and (isa :NOUN Hugging)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hum-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_component_sound fe_manner) ((PPFn like) fe_manner)
    ((PPFn in) eventOccursAt) ((PPFn from) from-Generic emitter)
    ((PPFn of) fe_internal_cause fe_manner fe_noisy_event emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 4 3)) ((0 0 0)) ((1 4 1)) ((1 0 1)) ((1 4 0)) ((1 0 0))
   ((1 2 0) (1 4 2)) ((1 0 1) (1 4 3)) ((1 0 1) (1 3 1)) ((0 0 0) (1 0 1))
   ((1 0 1) (1 1 0)) ((1 0 1) (1 3 0)) ((0 0 0) (1 0 1) (1 0 1)))))

(FNNounSemtrans (TheList "human") Being-TheWord (and (isa :NOUN HomoSapiens))
 (frame FN_People) (bindingTemplate (TheList (:GAP (-- fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "human") Body-TheWord (and (isa :NOUN HumanBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "human") Harness-TheWord
 (and (isa :NOUN Harness-Human)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "human") Right-TheWord
 (and (isa :NOUN BasicHumanRights-UNDeclaration)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "human") Right-TheWord (and (isa :NOUN HumanRight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "human") Skeleton-TheWord
 (and (isa :NOUN
       (DeadPhysicalRemainsFn
        (OrganismPartTypeFn HomoSapiens SkeletalSystem))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "human") Skeleton-TheWord
 (and (isa :NOUN (OrganismPartTypeFn HomoSapiens SkeletalSystem)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Human-TheWord (and (isa :NOUN Person))
 (frame FN_People)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_person))
   (:NOUN (N fe_persistent_characteristic))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Humerus-TheWord (and (isa :NOUN Humerus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Humidifier-TheWord (and (isa :NOUN Humidifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Humidor-TheWord (and (isa :NOUN Humidor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hummingbird-TheWord (and (isa :NOUN Hummingbird))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hummock-TheWord
 (and (isa :NOUN Hammock-Topographical)) (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts fe_container_possessor)
    (N fe_formational_cause))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hunch-TheWord (and (isa :NOUN AwarenessQuantity))
 (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (Sfin topicOfIndividual) (Sinterrog topicOfIndividual)
    ((PPFn about) situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (DNI topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (3 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Hunch-TheWord
 (and (isa :NOUN CycLSentence-Assertible)
      (relationExistsInstance opinions IntelligentAgent :NOUN))
 (frame FN_Opinion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hundred-0dollar") Bill-TheWord
 (and (isa :NOUN HundredDollarBill-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hundreds-TheWord (and (isa :NOUN Hundreds-Quant))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Hundredth-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hungarian-TheWord (and (isa :NOUN HungarianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hunger-TheWord (and (isa :NOUN UrgeToEat))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (AJP fe_degree fe_parameter)
    ((PPFn in) eventAffectsBodyPart eventOccursAt))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 1)) ((1 2 0)) ((2 0 0)) ((1 0 0)) ((0 0 0))
   ((1 1 0)))))

(FNNounSemtrans (TheList) Hunger-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) (VPto fe_event) ((PPFn of) objectActedOn)
    ((PPFn amongst) objectActedOn) (N fe_focal_participant)
    ((PPFn for) fe_event fe_focal_participant))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 5 1) (2 0 0)) ((1 3 0) (1 5 1)) ((0 0 0) (1 4 0))
   ((1 1 0) (2 0 0)) ((0 0 0) (1 5 0)) ((1 0 0) (2 0 0))
   ((1 0 0) (1 5 1) (2 0 0)) ((1 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Hunk-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Hunt-TheWord (and (isa :NOUN Hunting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hunting") Knife-TheWord
 (and (isa :NOUN HuntingKnife)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hunting") Rifle-TheWord
 (and (isa :NOUN HuntingRifle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hurdle-TheWord (and (isa :NOUN Hurdle))
 (frame FN_Hindering)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (A fe_hindrance))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Hurdle-TheWord (and (isa :NOUN Obstacle))
 (frame FN_Hindering)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (A fe_hindrance))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Hurdle-TheWord (and (isa :NOUN Hurdle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hurdles-TheWord (and (isa :NOUN HurdleSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hurricane-TheWord (and (isa :NOUN HurricaneAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hurricane-TheWord (and (isa :NOUN HurricaneAsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Husband-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT (NP fe_partner_1) ((PPFn for) fe_partner_2)
    ((PPFn of) fe_partner_2) ((PPFn to) fe_partner_2))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partner_2) (INI fe_partner_2))
   (:GEN (Poss fe_partner_1 fe_partner_2)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((0 0 1)) ((3 0 0)) ((3 0 1)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (3 0 1)) ((3 0 1) (4 0 0))
   ((0 0 1) (0 0 1) (4 0 0)))))

(FNNounSemtrans (TheList) Hybernation-TheWord (and (isa :NOUN Hibernating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hydrangea-TheWord (and (isa :NOUN Hydrangea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hydrocarbon-TheWord (and (isa :NOUN Hydrocarbon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hydrocortisone-TheWord
 (and (isa :NOUN Hydrocortisone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydroelectric") Generator-TheWord
 (and (isa :NOUN ElectricalGenerator-Hydroelectric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydroelectric") Electricity-TheWord
 (and (isa :NOUN Hydropower) (isa :NOUN Electricity)) (frame FN_Electricity)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hydroelectricity-TheWord
 (and (isa :NOUN Hydropower) (isa :NOUN Electricity)) (frame FN_Electricity)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydrogen") Atom-TheWord
 (and (isa :NOUN (AtomFn Hydrogen))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydrogen") Bomb-TheWord
 (and (isa :NOUN HydrogenBomb)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydrogen") Bond-TheWord
 (and (isa :NOUN HydrogenBond)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydrogen") Ion-TheWord
 (and (isa :NOUN HydrogenPlusIon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydrogen") Peroxide-TheWord
 (and (isa :NOUN HydrogenPeroxideMolecule)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hydrogen-TheWord (and (isa :NOUN Hydrogen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hydroxide") Ion-TheWord
 (and (isa :NOUN HydroxideIon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hydropower-TheWord (and (isa :NOUN Hydropower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hyena-TheWord (and (isa :NOUN Hyena)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hyoid-TheWord (and (isa :NOUN Hyoid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hyperlink-TheWord (and (isa :NOUN Hyperlink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypernym-TheWord
 (and (isa :NOUN LexicalWord) (isa ?word2 LexicalWord)
      (isa ?rel BinaryRelation) (arg1Isa ?rel LexicalWord)
      (arg2Isa ?rel LexicalWord) (?rel :NOUN ?word2))
 (frame FN_Word_relations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypertension-TheWord (and (isa :NOUN Hypertension))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypha-TheWord (and (isa :NOUN Hypha)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hyphen-TheWord (and (isa :NOUN Hyphen-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypochlorite-TheWord
 (and (isa :NOUN Hypochlorite-Salt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hypochlorous") Acid-TheWord
 (and (isa :NOUN HypochlorousAcid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypocrite-TheWord
 (and (isa :NOUN Person) (hasMentalFeatures :NOUN Hypocrite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hypodermic") Needle-TheWord
 (and (isa :NOUN HypodermicNeedle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hypodermic") Syringe-TheWord
 (and (isa :NOUN HypodermicSyringe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "hypogastric") Vein-TheWord
 (and (isa :NOUN InternalIliacVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypoglossal-TheWord
 (and (isa :NOUN HypoglossalNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypoglycaemia-TheWord (and (isa :NOUN Hypoglycemia))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypothalamus-TheWord (and (isa :NOUN Hypothalamus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hypothesis-TheWord (and (isa :NOUN Hypothesis))
 (frame FN_Experimentation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_experiment))
   (:OBLIQUE-OBJECT (N fe_experimenter) (Sfin fe_hypothesis))
   (:GAP (INI fe_experimenter) (CNI fe_experimenter) (DEN fe_hypothesis))
   (:GEN (Poss fe_experimenter))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 1 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Hysterectomy-TheWord (and (isa :NOUN Hysterectomy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Hysteria-TheWord (and (isa :NOUN Panic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) I-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ibis-TheWord (and (isa :NOUN Ibis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ibizan") Hound-TheWord (and (isa :NOUN IbizanHound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ibuprofen-TheWord (and (isa :NOUN Ibuprofen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Icbm-TheWord (and (isa :NOUN BallisticMissile-ICBM))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "ice") Bear-TheWord (and (isa :NOUN PolarBear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Bucket-TheWord (and (isa :NOUN IceBucket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice" "cream") Cone-TheWord
 (and (isa :NOUN IceCreamCone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice" "cream") Sandwich-TheWord
 (and (isa :NOUN (SandwichFn IceCream))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice" "cream") Scoop-TheWord
 (and (isa :NOUN IceCreamScoop)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Cream-TheWord (and (isa :NOUN IceCream))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Cube-TheWord (and (isa :NOUN IceCube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice" "cube") Tray-TheWord
 (and (isa :NOUN IceCubeTray)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Hockey-TheWord (and (isa :NOUN IceHockey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Maker-TheWord (and (isa :NOUN IceCubeMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Pick-TheWord (and (isa :NOUN Icepick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Rink-TheWord (and (isa :NOUN IceRink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Scraper-TheWord (and (isa :NOUN IceScraper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Skate-TheWord (and (isa :NOUN IceSkate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ice") Tea-TheWord (and (isa :NOUN Tea-Iced))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ice-TheWord (and (isa :NOUN (SolidFn Water)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iceberg-TheWord (and (isa :NOUN Iceberg))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_container_possessor)
    ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Icecap-TheWord (and (isa :NOUN Icecap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Icelandic-TheWord (and (isa :NOUN IcelandicLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Icepick-TheWord (and (isa :NOUN Icepick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Icicle-TheWord (and (isa :NOUN Icicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Icon-TheWord (and (isa :NOUN ComputerIcon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "id") Bracelet-TheWord (and (isa :NOUN IDBracelet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Id-TheWord (and (isa :NOUN IDDocument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Idea-TheWord (and (isa :NOUN Idea))
 (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation) (Sfin topicOfIndividual))
   (:OBJECT ((PPFn of) subjectOfMentalSituation)
    (Poss subjectOfMentalSituation) (Sfin topicOfIndividual))))
 (groupPatterns (TheSet ((1 1 0) (1 2 0)) ((0 1 0) (1 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Idea-TheWord (and (isa :NOUN Idea)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Idealist-TheWord
 (and (isa :NOUN Person) (hasPersonalQuantity :NOUN (HighAmountFn Idealism)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "identical") Twin-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists
       (PredicateIntersection2Fn siblings geneticallyIdentical) :NOUN Person))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Identification-TheWord (and (isa :NOUN ID))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_bearer))
   (:OBLIQUE-OBJECT (N fe_descriptor) (AJP fe_issuer)) (:GAP (DEN fe_document))
   (:NOUN (N fe_document)) (:GEN (Poss fe_bearer))))
 (groupPatterns
  (TheSet ((1 0 0)) ((4 0 0)) ((0 0 0)) ((1 1 0) (3 0 0)) ((1 0 0) (1 1 0))
   ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Identification-TheWord (and (isa :NOUN IDDocument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "identity") Theft-TheWord
 (and (isa :NOUN IdentityTheft)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Identity-TheWord
 (and (isa :NOUN Thing)
      (relationInstanceExists identicalInSomeRespects :NOUN Thing))
 (frame FN_Identicality)
 (bindingTemplate
  (TheList (:GAP (2nd fe_current_instance) (DEN activeIngredientsOfType))
   (:NOUN (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Ideology-TheWord
 (and (isa :NOUN PoliticalBeliefSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Idiosyncrasy-TheWord
 (and (isa :NOUN (AbnormalFn IntentionalMentalSituation)))
 (frame FN_Idiosyncrasy) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Idiot-TheWord (and (isa :NOUN Idiot)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ied-TheWord
 (and (isa :NOUN (HomemadeFn ExplosiveDevice)))
 (frame FN_Improvised_explosive_device)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))
   (:GAP (DEN fe_bomb))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Igloo-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "igneous") Rock-TheWord (and (isa :NOUN IgneousRock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ignition-TheWord
 (and (isa :NOUN SettingSomethingOnFire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ignorance-TheWord (and (isa :NOUN AwarenessQuantity))
 (frame FN_Awareness)
 (bindingTemplate
  (TheList (:GAP (INI topicOfIndividual) (DNI topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 0 0)) ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Iguana-TheWord (and (isa :NOUN Iguana))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ilium-TheWord (and (isa :NOUN Ilium)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ilk-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category)) (:OBLIQUE-OBJECT (N fe_item_property))
   (:GAP (DNI fe_category) (DEN fe_subtype)) (:GEN (Poss fe_item_property))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Illness-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList (:GAP (DEN infects))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Illustrator-TheWord (and (isa :NOUN Illustrator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "image" "input") Device-TheWord
 (and (isa :NOUN ImageInputDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Image-TheWord (and (isa :NOUN Image))
 (frame FN_Exemplar) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Image-TheWord (and (isa :NOUN Image-CW))
 (frame FN_Impression)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn as) fe_context) (AJP spectators fe_descriptor)
    ((PPFn of) focalSubject) (NP focalSubject))
   (:GAP (DNI spectators focalSubject) (DEN fe_impression))
   (:GEN (Poss spectators focalSubject))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 0)) ((0 2 0)) ((0 2 0) (2 0 0)) ((0 1 1) (2 0 1))
   ((0 1 1) (0 2 0)) ((0 1 1) (0 3 0)) ((0 0 0) (0 2 0))
   ((0 1 0) (0 1 1) (2 0 1)))))

(FNNounSemtrans (TheList) Image-TheWord (and (isa :NOUN VisualImage))
 (frame FN_Optical_image) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Image-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (A fe_represented)
    (AJP fe_descriptor eventOccursAt fe_state_of_represented
     activeIngredientsOfType)
    ((PPFn of) fe_represented activeIngredientsOfType)
    (N eventOccursAt fe_represented activeIngredientsOfType))
   (:GAP (DEN productsCreated)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 4 2)) ((0 2 3)) ((0 3 0)) ((0 4 1)) ((0 0 0)) ((0 4 0))
   ((0 2 1)) ((0 2 0)) ((0 2 2) (0 2 3)) ((0 2 3) (0 3 0)) ((0 1 0) (0 3 1))
   ((0 2 3) (2 0 0)))))

(FNNounSemtrans (TheList "imaginary") Being-TheWord
 (and (isa :NOUN FictionalThing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Imago-TheWord (and (isa :NOUN Imago)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Imam-TheWord (and (isa :NOUN Imam))
 (frame FN_Appellations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Imam-TheWord (and (isa :NOUN Imam))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Immolation-TheWord
 (and (isa :NOUN Burning-Execution)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) victim)) (:GAP (INI killers))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Immunologist-TheWord (and (isa :NOUN Immunologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Immunology-TheWord (and (isa :NOUN Immunology))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Immunology-TheWord (and (isa :NOUN Immunology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "impact") Crater-TheWord
 (and (isa :NOUN ImpactCrater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impact-TheWord (and (isa :NOUN Collision))
 (frame FN_Impact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impact-TheWord (and (isa :NOUN Influence))
 (frame FN_Subjective_influence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ipad-TheWord (and (isa :NOUN IPad)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impartiality-TheWord (and (isa :NOUN Impartiality))
 (frame FN_Partiality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) performedBy) ((PPFn within) performedBy)
    (AJP fe_degree) (A fe_domain) ((PPFn between) fe_sides)
    ((PPFn toward) fe_sides))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Impasse-TheWord (and (isa :NOUN Gridlock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impediment-TheWord (and (isa :NOUN Obstacle))
 (frame FN_Hindering)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn to) objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Impersonation-TheWord
 (and (isa :NOUN Masquerading-Deceiving)) (frame FN_Posing_as)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_simulated_entity))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0) (1 1 0)) ((1 1 0) (2 0 0))
   ((0 0 0) (1 0 0) (1 1 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Implant-TheWord (and (isa :NOUN Implant-Medical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans
 (TheList "implement" "for" "manipulating" "game" "balls" "and" "so")
 Forth-TheWord (and (isa :NOUN SportsPoundingDrivingImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Implement-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP deviceUse) (N deviceUse) ((PPFn for) deviceUse)
    ((PPFn of) deviceUse fe_user))
   (:GAP (DEN fe_gizmo))))
 (groupPatterns (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Implement-TheWord (and (isa :NOUN Implement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Implementation-TheWord
 (and (isa :NOUN PurposefulAction)
      (relationInstanceExists specificationAdheredTo :NOUN Plan))
 (frame FN_Execute_plan)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) specificationAdheredTo))
   (:GEN (Poss specificationAdheredTo))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Import-TheWord
 (and (isa :NOUN ImportExportEvent) (isa :NOUN TransferIn))
 (frame FN_Import_export_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Import-TheWord
 (and (isa :NOUN ImportExportEvent)
      (relationInstanceExists toPossessor :NOUN SocialBeing))
 (frame FN_Importing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Importation-TheWord
 (and (isa :NOUN ImportExportEvent)) (frame FN_Import_export_scenario)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Importer-TheWord
 (and (isa :NOUN ImportExportOrganization)) (frame FN_Import_export_scenario)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Imposition-TheWord (and (isa :NOUN Obligation))
 (frame FN_Being_obligated) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impostor-TheWord
 (and (isa :NOUN Masquerading-Deceiving)) (frame FN_Posing_as)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:GAP (DEN doneBy) (DNI fe_simulated_entity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Imprecation-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) authorOfLiteraryWork-CW))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Impression-TheWord (and (isa :NOUN Respect))
 (frame FN_Regard)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) subjectOfMentalSituation))
   (:GAP (DEN fe_judgment))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Imprinting-TheWord (and (isa :NOUN Imprinting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Imprisonment-TheWord (and (isa :NOUN Imprisoning))
 (frame FN_Imprisonment)
 (bindingTemplate (TheList (:GAP (DNI performedBy fe_prison captive))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Improbability-TheWord
 (and (isa :NOUN Likelihood-QuantityType)) (frame FN_Likelihood)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_hypothetical_event)
    ((PPingFn of) fe_hypothetical_event))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Improvement-TheWord
 (and (isa :NOUN Improvement-Transformation)) (frame FN_Improvement_or_decline)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn in) objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Improvement-TheWord
 (and (isa :NOUN Improvement-Transformation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impulse-TheWord
 (and (isa :NOUN ImpulseBuyingSomething)) (frame FN_Desiring)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impurity-TheWord (and (isa :NOUN ImpureCompound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Impurity-TheWord (and (isa :NOUN Pollutant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "in-door") Mailbox-TheWord
 (and (isa :NOUN MailBox-InDoor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) In-Law-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP relatives)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (INI fe_ego) (DEN fe_alter relatives)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Inaccuracy-TheWord
 (and (isa :NOUN (TheCollection (LowAmountFn Accuracy)))) (frame FN_Accuracy)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inamorata-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1)) (:GAP (DEN fe_partner_1))
   (:GEN (Poss fe_partner_2)) (:APPOSITIVE (NP fe_partner_1 fe_partner_2))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (3 0 1)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Inauguration-TheWord (and (isa :NOUN Inauguration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "incandescent") Bulb-TheWord
 (and (isa :NOUN LightBulb-Incandescent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incapacitant-TheWord
 (and (isa :NOUN PharmaceuticalType)
      (relationExistsInstance activeIngredientsOfType PharmacyProductType
       :NOUN))
 (frame FN_Active_substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incapacitant-TheWord (and (isa :NOUN Irritant))
 (frame FN_Active_substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incarceration-TheWord (and (isa :NOUN Imprisoning))
 (frame FN_Imprisonment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incense-TheWord
 (and (isa :NOUN Smoke)
      (relationInstanceExists objectEmitsOdor :NOUN PleasantOdor))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) from-Generic))
   (:GAP (DEN perceivedThings))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Incest-TheWord (and (isa :NOUN Incest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inch-TheWord (and (isa :NOUN Inch))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Incident-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N causes-Underspecified) ((PPFn of) fe_undesirable_event))
   (:GAP (DEN fe_undesirable_event)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Incident-TheWord (and (isa :NOUN Event))
 (frame FN_Event)
 (bindingTemplate
  (TheList (:GAP (DEN fe_event) (DNI eventOccursAt temporallyIntersects))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incision-TheWord (and (isa :NOUN SurgicalIncision))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incisor-TheWord (and (isa :NOUN IncisorTooth))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) fe_attachment ownerOfProprietaryThing)
    ((PPFn from) ownerOfProprietaryThing) ((PPFn in) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 0)) ((1 0 1)) ((1 0 0)) ((1 1 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 1 1)) ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "income") Tax-TheWord
 (and (isa :NOUN PersonalIncomeTax)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Income-TheWord
 (and (isa :NOUN MonetaryRate)
      (relationExistsInstance income SocialBeing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incompatibility-TheWord
 (and (isa :NOUN Compatibility)) (frame FN_Compatibility)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn with) fe_item_2)
    ((PPFn between) fe_items) (A fe_items) (NP fe_items) ((PPFn in) fe_items)
    ((PPFn of) fe_items) ((PPingFn between) fe_items))
   (:GEN (Poss fe_item_1 fe_items))))
 (groupPatterns
  (TheSet ((1 0 1)) ((0 7 0)) ((0 6 0)) ((0 5 0)) ((0 2 0)) ((0 4 0)) ((0 3 0))
   ((0 1 0) (1 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Incompetence-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn over) fe_behavior_product) ((PPFn on) affectedAgent)
    (N affectedAgent) ((PPFn by) affectedAgent)
    ((PPFn in) fe_behavior_product affectedAgent) ((PPFn of) affectedAgent)
    (AJP fe_degree fe_knowledge fe_manner hasSkill) ((PPFn at) hasSkill)
    ((PPingFn at) hasSkill))
   (:GAP (2nd hasSkill)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 6 3)) ((1 1 0)) ((1 5 0)) ((1 3 0)) ((1 2 0)) ((3 0 0))
   ((1 4 1)) ((0 0 0)) ((1 6 1)) ((1 6 0)) ((1 0 0)) ((1 5 0) (1 7 0))
   ((1 5 0) (1 6 3)) ((1 6 2) (3 0 0)) ((1 1 0) (1 6 2)) ((1 6 0) (3 0 0))
   ((1 4 0) (3 0 0)))))

(FNNounSemtrans (TheList "incontinence") Product-TheWord
 (and (isa :NOUN IncontinenceProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inconvenience-TheWord
 (and (isa :NOUN Inconveniencing-AffectingSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Increase-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_attribute objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn by) fe_attribute fe_difference)
    (NP fe_correlated_variable fe_difference) ((PPFn to) fe_final_value)
    ((PPFn from) fe_correlated_variable fe_initial_value)
    ((PPFn on) fe_attribute objectOfStateChange)
    ((PPFn of) fe_attribute fe_difference objectOfStateChange)
    ((PPingFn in) objectOfStateChange)
    (N fe_attribute fe_difference objectOfStateChange) (VPing fe_manner)
    (AJP fe_correlated_variable fe_degree fe_difference rateOfEvent)
    ((PPFn in) fe_attribute fe_correlated_variable objectOfStateChange
     eventOccursAt temporallyIntersects)
    ((PPFn as) temporallyIntersects))
   (:GAP (DNI fe_attribute fe_difference objectOfStateChange)
    (2nd situationConstituents objectOfStateChange)
    (INI fe_difference objectOfStateChange))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 9 0)) ((1 6 0)) ((1 5 2)) ((0 0 1)) ((1 10 2))
   ((1 5 1)) ((1 9 2)) ((1 5 0)) ((1 10 0)) ((0 0 0)) ((1 7 0))
   ((1 0 1) (1 7 2)) ((1 2 0) (1 7 1)) ((1 0 1) (1 10 1)) ((1 7 0) (1 8 0))
   ((0 0 1) (1 9 3)) ((0 0 1) (1 2 0)) ((1 2 0) (1 3 1)) ((0 0 0) (1 2 0))
   ((1 5 0) (1 10 4)) ((1 10 2) (1 10 4)) ((1 4 0) (1 7 1)) ((1 4 1) (1 7 1))
   ((1 7 1) (1 10 2)) ((1 3 1) (1 9 2)) ((1 4 0) (1 5 1)) ((1 5 1) (1 10 0))
   ((0 0 0) (1 0 1)) ((1 7 0) (1 7 1)) ((1 7 0) (1 9 2)) ((1 1 0) (1 5 0))
   ((0 0 1) (1 10 4) (1 11 0)) ((1 2 0) (1 3 1) (1 10 0))
   ((0 0 1) (1 9 2) (1 10 0)) ((1 9 1) (1 10 0) (1 10 3))
   ((0 0 0) (1 3 0) (1 9 3)) ((1 0 0) (1 7 1) (1 10 1)))))

(FNNounSemtrans (TheList) Increase-TheWord (and (isa :NOUN IncreaseEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incubator-TheWord (and (isa :NOUN Incubator-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Incursion-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (NP performedBy) (AJP performedBy fe_depictive)
    ((PPFn into) directionOfAttack) ((PPFn on) temporallyIntersects))
   (:GAP (DNI performedBy victim)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 1 0) (1 2 0)) ((1 1 1) (1 2 0)) ((0 0 0) (1 2 0) (1 3 0))
   ((1 0 0) (1 2 0) (3 0 0)))))

(FNNounSemtrans (TheList) Incus-TheWord (and (isa :NOUN Incus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indecent") Assault-TheWord
 (and (isa :NOUN SexualOffense)) (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) victim)) (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "independence") Day-TheWord
 (and (isa :NOUN IndependenceDay-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Independence-TheWord
 (and (isa :NOUN GainingPoliticalIndependence)) (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) temporallyIntersects))
   (:GAP (DNI losesControl) (INI losesControl fe_selector))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "independent") Agency-TheWord
 (and (isa :NOUN IndependentGovernmentAgency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "index") Card-TheWord (and (isa :NOUN IndexCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "index") Divider-TheWord
 (and (isa :NOUN IndexDivider)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Index-TheWord
 (and (isa :NOUN Index-IndicatorOrMeasure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Index-TheWord
 (and (isa :NOUN Index-List-Information)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Index-TheWord (and (isa :NOUN IndexFinger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indian") Rupee-TheWord (and (isa :NOUN Rupee-India))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indian-TheWord
 (and (isa :NOUN EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indian-TheWord
 (and (isa :NOUN IndianCitizenOrSubject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indication-TheWord (and (isa :NOUN Indication))
 (frame FN_Sign)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_indicator))
   (:OBLIQUE-OBJECT (N fe_indicated) ((PPFn as) fe_indicated)
    ((PPFn of) fe_indicated) ((PPingFn of) fe_indicated) (Srel fe_indicated)
    (Sfin fe_indicated fe_indicator) (AJP fe_reliability))
   (:GAP (DEN fe_indicator) (INI fe_indicator) (DNI fe_indicator))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((1 5 0)) ((1 3 0)) ((1 2 0)) ((1 0 0))
   ((1 2 0) (1 6 0)) ((1 1 0) (1 6 0)) ((0 0 0) (1 3 0)) ((1 2 0) (1 5 1))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Indication-TheWord (and (isa :NOUN SignTheDisplay))
 (frame FN_Sign)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_indicator))
   (:OBLIQUE-OBJECT (N fe_indicated) ((PPFn as) fe_indicated)
    ((PPFn of) fe_indicated) ((PPingFn of) fe_indicated) (Srel fe_indicated)
    (Sfin fe_indicated fe_indicator) (AJP fe_reliability))
   (:GAP (DEN fe_indicator) (INI fe_indicator) (DNI fe_indicator))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((1 5 0)) ((1 3 0)) ((1 2 0)) ((1 0 0))
   ((1 2 0) (1 6 0)) ((1 1 0) (1 6 0)) ((0 0 0) (1 3 0)) ((1 2 0) (1 5 1))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList "indicator") Light-TheWord
 (and (isa :NOUN IndicatorLight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indictment-TheWord
 (and (isa :NOUN MakingACriminalCharge)) (frame FN_Notification_of_charges)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) accused) (N fe_charges)
    ((PPFn in) eventOccursAt))
   (:GAP (INI accused fe_arraign_authority))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Indifference-TheWord (and (isa :NOUN Listlessness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indigo-TheWord (and (isa :NOUN Color))
 (frame FN_Color) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indigo-TheWord
 (and (isa :NOUN GrayishPurplishBlue-Color)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indirect") Antonym-TheWord
 (and (isa :NOUN denotesOpposite)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indirect") Influence-TheWord
 (and (isa :NOUN IndirectInfluenceFrame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indirect") Tax-TheWord
 (and (isa :NOUN IndirectTax-COC)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Indium-TheWord (and (isa :NOUN Indium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Individual-TheWord (and (isa :NOUN Individual))
 (frame FN_Entity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Individual-TheWord (and (isa :NOUN Organism-Whole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Individual-TheWord (and (isa :NOUN Person))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn at) fe_descriptor) (N fe_ethnicity)
    ((PPFn from) fe_ethnicity comesFrom-Generic)
    ((PPFn in) fe_descriptor fe_ethnicity comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    ((PPFn of) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN fe_person)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 6 1)) ((1 4 3)) ((1 3 2)) ((1 2 1)) ((1 3 1)) ((1 2 0))
   ((1 1 0)) ((1 4 2)) ((1 5 0)) ((1 6 0)) ((1 3 0)) ((1 0 0)) ((1 4 1))
   ((1 4 0)) ((0 0 0) (1 4 3)) ((1 4 3) (1 5 1)) ((1 4 3) (1 4 3))
   ((1 4 2) (3 0 0)) ((0 0 0) (1 4 1)) ((1 4 1) (1 5 0)))))

(FNNounSemtrans (TheList) Indonesian-TheWord (and (isa :NOUN IndonesianPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indoor") Grill-TheWord (and (isa :NOUN Grill-Indoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "indoor") Mall-TheWord
 (and (isa :NOUN IndoorShoppingMall)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inductor-TheWord (and (isa :NOUN Inductor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "industrial") Chimney-TheWord
 (and (isa :NOUN Smokestack)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "industrial" "cleaning") Stuff-TheWord
 (and (isa :NOUN IndustrialCleaningStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "industrial") Equipment-TheWord
 (and (isa :NOUN IndustrialEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "industrial") Gas-TheWord
 (and (isa :NOUN IndustrialGases)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "industrial") Goods-TheWord
 (and (isa :NOUN IndustrialGoods)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "industrial") Paint-TheWord
 (and (isa :NOUN IndustrialPaint)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Industry-TheWord (and (isa :NOUN FieldOfStudy))
 (frame FN_Fields)
 (bindingTemplate
  (TheList (:SUBJECT (NP processTypeForAccomplishmentType fe_practitioner))
   (:OBLIQUE-OBJECT (N processTypeForAccomplishmentType topicOfIndividual)
    (A processTypeForAccomplishmentType fe_practitioner topicOfIndividual)
    (AJP processTypeForAccomplishmentType fe_practitioner
     activeIngredientsOfType))
   (:GAP (DEN processTypeForAccomplishmentType)
    (DNI processTypeForAccomplishmentType fe_practitioner)
    (INI processTypeForAccomplishmentType fe_practitioner))
   (:GEN (Poss fe_practitioner))))
 (groupPatterns
  (TheSet ((1 1 2)) ((1 2 1)) ((1 2 2)) ((1 0 1)) ((3 0 0)) ((1 1 0)) ((1 0 0))
   ((1 2 0)) ((1 0 1) (1 1 1)) ((0 0 0) (3 0 0)) ((0 0 1) (0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Industry-TheWord (and (isa :NOUN Industry-Localized))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Industry-TheWord (and (isa :NOUN Manufacturing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ineptitude-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn over) fe_behavior_product)
    ((PPingFn in) fe_behavior_product) ((PPFn of) affectedAgent)
    (AJP fe_degree hasSkill) ((PPFn at) hasSkill) (N hasSkill))
   (:GAP (DEN fe_behavior_product)) (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 3 1)) ((1 2 0)) ((1 3 0)) ((3 0 0)) ((1 4 0) (3 0 0))
   ((1 2 0) (1 3 1)) ((1 1 0) (1 2 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Ineptness-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn in) fe_behavior_product) (AJP fe_knowledge)
    ((PPFn of) fe_behavior_product affectedAgent) ((PPFn at) hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 1)) ((1 1 0)) ((1 2 0)) ((0 0 0) (1 3 0))
   ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Inequality-TheWord (and (isa :NOUN Inequality))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inertial" "navigation") System-TheWord
 (and (isa :NOUN InertialNavigationSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infallibility-TheWord (and (isa :NOUN Infallibility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infancy-TheWord
 (and (isa :NOUN Time-Quantity) (relationExistsInstance age HumanInfant :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infant-TheWord (and (isa :NOUN HumanInfant))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) age) (A fe_descriptor)
    (N fe_descriptor fe_ethnicity)
    (AJP age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic))
   (:GAP (INI age) (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 3 4)) ((0 3 3)) ((0 2 1)) ((0 2 0)) ((0 3 1)) ((0 0 0)) ((0 3 0))
   ((0 3 1) (0 3 1)) ((0 1 0) (0 3 1)) ((0 0 0) (0 3 4)) ((0 0 0) (0 3 2)))))

(FNNounSemtrans (TheList) Infanticide-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers))
   (:OBLIQUE-OBJECT ((PPFn by) killers) ((PPFn in) eventOccursAt)
    (AJP killers victim) (N victim) ((PPFn of) victim))
   (:GAP (INI victim))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 0 0)) ((0 0 0)) ((1 2 0)) ((1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList) Infantilism-TheWord (and (isa :NOUN Infantilism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infantryman-TheWord (and (isa :NOUN InfantrySoldier))
 (frame FN_People_by_military_specialty) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infection-TheWord (and (isa :NOUN Infection))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N actorPartsInvolved objectActedOn))
   (:GAP (DEN infects))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Infection-TheWord
 (and (isa :NOUN InfectionTransmissionEvent)) (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N actorPartsInvolved objectActedOn))
   (:GAP (DEN infects))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Inference-TheWord (and (isa :NOUN InferenceTask))
 (frame FN_Coming_to_believe)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (Sfin objectOfMentalSituation)
    ((PPFn as) objectOfMentalSituation) ((PPFn of) objectOfMentalSituation)
    ((PPFn on) objectOfMentalSituation)
    ((PPFn from) objectOfMentalSituation fe_evidence)
    ((PPingFn from) fe_evidence) ((PPFn about) situationTopic)
    ((PPFn to) objectOfMentalSituation situationTopic)
    ((PPFn concerning) situationTopic) ((PPingFn about) situationTopic)
    (AJP subjectOfMentalSituation situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 10 1)) ((1 4 1)) ((1 0 0)) ((1 7 0)) ((1 3 0))
   ((1 2 0)) ((1 1 0)) ((2 0 0)) ((0 0 0)) ((1 4 1) (1 7 1)) ((1 4 1) (1 6 0))
   ((1 0 0) (1 4 1)) ((1 2 0) (1 4 1)) ((0 0 0) (1 9 0)) ((0 0 0) (1 6 0))
   ((1 6 0) (1 10 0)) ((0 0 0) (1 4 1)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 7 0)) ((0 0 0) (2 0 0)) ((0 0 0) (1 5 0) (1 6 0))
   ((0 0 0) (1 4 1) (1 8 0)) ((0 0 0) (1 4 1) (1 6 0))
   ((0 0 0) (1 4 0) (1 6 0)) ((0 0 0) (0 0 0) (1 4 1) (1 7 1)))))

(FNNounSemtrans (TheList "inferior" "mesenteric") Artery-TheWord
 (and (isa :NOUN InferiorMesentericArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inferior" "ophthalmic") Vein-TheWord
 (and (isa :NOUN InferiorOphthalmicVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inferior") Planet-TheWord
 (and (isa :NOUN InferiorTerrestrialPlanet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inferior" "pulmonary") Vein-TheWord
 (and (isa :NOUN InferiorPulmonaryVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inferior" "vena") Cava-TheWord
 (and (isa :NOUN InferiorVenaCava)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inferno-TheWord (and (isa :NOUN Firestorm))
 (frame FN_Fire_burning)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_depictive) (AVP fe_depictive))
   (:GAP (DEN fe_fire))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Infidel-TheWord
 (and (isa :NOUN Person) (not (isa :NOUN ReligiousPerson)))
 (frame FN_People_by_religion) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infielder-TheWord (and (isa :NOUN BaseballInfielder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infighting-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infiltration-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N performedBy) ((PPFn of) victim))
   (:GAP (DNI victim))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Infinitive-TheWord
 (and (isa :NOUN CharacterString)
      (relationExistsInstance infinitive LexicalWord :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inflatable") Raft-TheWord
 (and (isa :NOUN InflatableRaft)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inflation") Rate-TheWord
 (and (isa :NOUN inflationRateDuring)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Influence-TheWord (and (isa :NOUN Influence))
 (frame FN_Subjective_influence)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation objectActedOn fe_situation))
   (:OBLIQUE-OBJECT ((PPFn for) subjectOfMentalSituation)
    ((PPFn outside) subjectOfMentalSituation)
    ((PPFn over) subjectOfMentalSituation) (AVP fe_descriptor)
    (Sfin fe_descriptor) (AJP fe_descriptor fe_domain objectActedOn)
    (N objectActedOn) (NP objectActedOn) ((PPFn in) eventOccursAt)
    ((PPFn from) objectActedOn eventOccursAt)
    ((PPFn on) objectOfCritique subjectOfMentalSituation fe_domain
     eventOccursAt fe_product)
    ((PPFn of) doneBy objectActedOn fe_situation)
    ((PPFn at) temporallyIntersects))
   (:GAP (2nd subjectOfMentalSituation) (DNI objectActedOn)
    (INI objectOfCritique subjectOfMentalSituation fe_product))
   (:GEN (Poss subjectOfMentalSituation objectActedOn))))
 (groupPatterns
  (TheSet ((1 11 2)) ((1 10 0)) ((3 0 1)) ((1 11 1)) ((1 9 0)) ((1 6 0))
   ((1 5 2)) ((1 5 1)) ((1 4 0)) ((1 5 0)) ((1 7 0) (3 0 0)) ((1 2 0) (3 0 1))
   ((0 0 1) (1 2 0)) ((0 0 2) (1 9 1)) ((1 8 0) (3 0 1)) ((0 0 1) (1 10 3))
   ((0 0 1) (1 8 0)) ((1 5 2) (1 8 0)) ((0 0 1) (1 10 0)) ((1 10 2) (3 0 1))
   ((1 5 1) (3 0 1)) ((1 5 1) (1 11 1)) ((1 5 1) (1 5 2)) ((1 5 0) (1 11 1))
   ((1 7 0) (1 10 0)) ((1 0 0) (1 5 1)) ((0 0 1) (1 5 0) (1 10 1))
   ((0 0 1) (1 5 0) (1 10 4)) ((0 0 1) (1 5 0) (3 0 0))
   ((1 5 0) (1 8 0) (1 11 1)) ((0 0 1) (1 5 0) (1 10 0))
   ((0 0 1) (1 3 0) (1 10 2)) ((0 0 0) (1 11 0) (1 12 0))
   ((0 0 1) (1 5 0) (1 5 1) (1 10 1)) ((0 0 1) (1 1 0) (1 5 0) (1 10 1)))))

(FNNounSemtrans (TheList) Influenza-TheWord (and (isa :NOUN Influenza))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Influx-TheWord (and (isa :NOUN ArrivingAtAPlace))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic) ((PPFn of) objectMoving)
    ((PPFn over) temporallyIntersects))
   (:GAP (DNI to-Generic objectMoving))))
 (groupPatterns (TheSet ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Info-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "information") Science-TheWord
 (and (isa :NOUN InformationScience)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Information-TheWord
 (and (isa :NOUN Information-Content)) (frame FN_Information)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (Srel fe_information) ((PPFn from) from-Generic)
    (VPed from-Generic)
    (AJP informationGatheredFrom from-Generic situationTopic)
    ((PPFn for) situationTopic) ((PPFn on) situationTopic)
    ((PPFn concerning) situationTopic) (N from-Generic situationTopic)
    ((PPFn about) situationTopic) ((PPFn regarding) situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (DEN fe_information)
    (INI subjectOfMentalSituation situationTopic)
    (DNI subjectOfMentalSituation fe_information situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 5 0)) ((1 8 0)) ((1 7 1)) ((1 2 0)) ((3 0 0)) ((0 0 0))
   ((1 3 2)) ((1 1 0)) ((1 3 1) (1 6 0)) ((1 0 0) (1 7 0)) ((1 3 0) (1 5 0))
   ((1 1 0) (1 3 0)) ((0 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Information-TheWord
 (and (isa :NOUN PropositionalInformationThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Informer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Reporting :NOUN))
 (frame FN_Reporting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "infrastructure") Product-TheWord
 (and (isa :NOUN InfrastructureProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infrastructure-TheWord
 (and (isa :NOUN InfrastructureElement)) (frame FN_Infrastructure)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn for) processTypeForAccomplishmentType)
    (VPto processTypeForAccomplishmentType) ((PPFn in) eventOccursAt)
    ((PPFn at) eventOccursAt)
    (A processTypeForAccomplishmentType ownerOfProprietaryThing
     resourceInSystem)
    (AJP processTypeForAccomplishmentType fe_descriptor ownerOfProprietaryThing
     resourceInSystem)
    (N processTypeForAccomplishmentType eventOccursAt ownerOfProprietaryThing
     resourceInSystem fe_user)
    ((PPFn of) processTypeForAccomplishmentType ownerOfProprietaryThing
     resourceInSystem fe_user))
   (:GAP (2nd processTypeForAccomplishmentType)
    (DNI processTypeForAccomplishmentType)
    (INI processTypeForAccomplishmentType ownerOfProprietaryThing)
    (DEN fe_infrastructure resourceInSystem))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 5 3)) ((1 6 3)) ((1 4 2)) ((0 0 0)) ((3 0 0)) ((1 7 1)) ((1 6 2))
   ((1 5 2)) ((1 2 0)) ((1 6 1)) ((1 7 0)) ((1 0 0)) ((1 5 0)) ((1 5 1))
   ((1 1 0)) ((1 6 0)) ((1 4 0)) ((1 6 3) (3 0 0)) ((1 2 0) (1 7 2))
   ((1 2 0) (1 6 3)) ((1 5 1) (1 6 3)) ((1 4 1) (1 5 0)) ((1 4 0) (3 0 0))
   ((1 3 0) (1 6 0)) ((1 6 0) (1 7 3)) ((1 6 4) (3 0 0)) ((1 6 0) (3 0 0))
   ((1 0 0) (1 2 0)) ((1 2 0) (1 6 0)) ((1 5 1) (3 0 0)) ((1 0 0) (1 5 1))
   ((1 5 1) (1 6 0)) ((0 0 0) (1 5 1) (1 6 3)) ((1 5 1) (3 0 0) (3 0 0))
   ((1 5 1) (1 6 0) (3 0 0)) ((1 4 0) (1 5 1) (3 0 0)))))

(FNNounSemtrans (TheList) Infusion-TheWord (and (isa :NOUN InfusionDrink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Infusion-TheWord
 (and (isa :NOUN IntravenousInfusionProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ingestion-TheWord (and (isa :NOUN Ingesting))
 (frame FN_Ingestion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ingot-TheWord
 (and (isa :NOUN Block)
      (relationInstanceExists ingredients-Constituent :NOUN (PureFnMetal)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ingratitude-TheWord (and (isa :NOUN Ingratitude))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ingredient-TheWord
 (and (isa :NOUN PartiallyTangible)) (frame FN_Ingredients)
 (bindingTemplate
  (TheList (:SUBJECT (NP mainConstituent))
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor)
    (VPfin comesFrom-Generic) ((PPFn for) fe_product) ((PPFn of) fe_product)
    ((PPFn in) fe_product) ((PPFn to) fe_product) (Sfin stuffUse))
   (:GAP (DEN mainConstituent) (DNI fe_product))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0) (1 5 0)) ((1 1 0) (1 7 0))
   ((1 1 0) (1 3 0)) ((1 0 0) (1 4 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 1 0) (1 6 0)) ((0 0 0) (1 1 0) (1 5 0))
   ((0 0 0) (1 1 0) (1 3 0)) ((0 0 0) (1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Ingredient-TheWord
 (and (isa :NOUN FoodIngredientOnly)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inhabitant-TheWord
 (and (isa :NOUN ResidingSomewhere)) (frame FN_Residence)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) residesInDwelling) ((PPFn of) residesInDwelling)
    ((PPingFn of) residesInDwelling))
   (:GAP (DNI residesInDwelling) (INI residesInDwelling) (DEN residents-Role))
   (:GEN (Poss residesInDwelling))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Inhalant-TheWord (and (isa :NOUN DrugSubstance))
 (frame FN_Intoxicants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inhalation-TheWord (and (isa :NOUN Breathing))
 (frame FN_Breathing)
 (bindingTemplate
  (TheList (:SUBJECT (NP primaryObjectMoving))
   (:OBLIQUE-OBJECT (N primaryObjectMoving) ((PPFn of) primaryObjectMoving)
    (AJP fe_degree fe_manner))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Inhalation-TheWord
 (and (isa :NOUN Inhaling-BreathingIn)) (frame FN_Breathing)
 (bindingTemplate
  (TheList (:SUBJECT (NP primaryObjectMoving))
   (:OBLIQUE-OBJECT (N primaryObjectMoving) ((PPFn of) primaryObjectMoving)
    (AJP fe_degree fe_manner))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Inhalation-TheWord (and (isa :NOUN Inhaling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inhalation") [Breath]-TheWord
 (and (isa :NOUN Inhaling-BreathingIn)) (frame FN_Breathing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inhaler" "canister") Holder-TheWord
 (and (isa :NOUN InhalerCanisterHolder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inhaler-TheWord (and (isa :NOUN InhalerDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Initiation-TheWord
 (and (isa :NOUN InitiationCeremony)) (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_organization) ((PPFn into) fe_organization)
    (AJP activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "injectable") Liquid-TheWord
 (and (isa :NOUN InjectableLiquid-Medical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Injection-TheWord (and (isa :NOUN Injecting-Medical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "injection") Well-TheWord
 (and (isa :NOUN InjectorWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Injury-TheWord (and (isa :NOUN InjuryCondition))
 (frame FN_Experience_bodily_harm)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) actorPartsInvolved)
    (Sub (InverseBinaryPredicateFn subEvents))
    (Srel (InverseBinaryPredicateFn subEvents)))
   (:GAP (2nd actorPartsInvolved) (INI objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "ink" "jet") Cartridge-TheWord
 (and (isa :NOUN InkJetCartridge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ink") Pad-TheWord (and (isa :NOUN InkPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ink-TheWord (and (isa :NOUN Ink)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inkjet" "computer") Printer-TheWord
 (and (isa :NOUN ComputerPrinter-Inkjet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inkwell-TheWord (and (isa :NOUN InkWell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inlet-TheWord (and (isa :NOUN Cove)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inlet-TheWord (and (isa :NOUN Inlet))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT (AJP fe_descriptor (InverseBinaryPredicateFn nameString))
    (N fe_formational_cause (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn behind) fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 0)) ((1 4 0)) ((1 2 1)) ((1 1 1)) ((1 0 1)) ((1 1 0))
   ((1 0 0)) ((1 2 0)) ((1 1 1) (1 3 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Inmate-TheWord (and (isa :NOUN Prisoner-Legal))
 (frame FN_Being_incarcerated) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inn-TheWord
 (and (isa :NOUN
       (SmallFn
        (CollectionIntersectionFn
         (TheSet CommercialLodgingOrganization Restaurant-Organization)))))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "inner") Tube-TheWord (and (isa :NOUN InnerTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inning-TheWord (and (isa :NOUN BaseballInning))
 (frame FN_Part_ordered_segments)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_ordinality fe_part_prop)
    ((PPFn against) fe_part_prop) (AJP fe_part_prop) ((PPFn by) fe_part_prop)
    ((PPFn in) (InverseBinaryPredicateFn parts))
    (N fe_part_prop (InverseBinaryPredicateFn parts))
    ((PPFn of) fe_part_prop (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 4 0)) ((0 5 1)) ((0 5 0)) ((0 2 0)) ((0 0 1)) ((0 0 0))
   ((0 2 0) (0 3 0)) ((0 0 1) (0 4 0)) ((0 2 0) (0 6 0)) ((0 0 1) (0 1 0))
   ((0 0 0) (0 6 1)) ((0 0 0) (0 5 1)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 4 0) (0 5 0)))))

(FNNounSemtrans (TheList) Innocence-TheWord (and (isa :NOUN Innocence))
 (frame FN_Guilt_or_innocence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inquiry-TheWord
 (and (isa :NOUN CriminalInvestigation)) (frame FN_Criminal_investigation)
 (bindingTemplate (TheList (:GAP (INI objectOfInvestigation))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inquiry-TheWord
 (and (isa :NOUN RequestingInformation)) (frame FN_Questioning)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy)) (:OBJECT (AJP genericPathway-Partial))
   (:OBLIQUE-OBJECT (AJP fe_manner) (N performedBy) ((PPFn from) performedBy)
    (AVP temporallyIntersects) ((PPFn about) situationTopic)
    ((PPFn into) situationTopic) ((PPingFn about) situationTopic)
    ((PPFn over) situationTopic) ((PPFn in) situationTopic))
   (:GAP (CNI performedBy) (INI situationTopic)
    (DNI recipientOfInfo situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 2 0)) ((0 0 0)) ((2 6 0)) ((2 5 0)) ((2 4 0))
   ((0 0 0) (2 5 0)) ((0 0 0) (2 8 0)) ((0 0 0) (2 4 0)) ((2 1 0) (2 7 0))
   ((0 0 0) (4 0 0)) ((2 0 0) (2 5 0)) ((2 0 0) (2 4 0)) ((1 0 0) (2 3 0))
   ((0 0 0) (2 0 0) (2 4 0)))))

(FNNounSemtrans (TheList) Inscription-TheWord (and (isa :NOUN Inscription))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insect-TheWord (and (isa :NOUN Insect))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insecta-TheWord (and (isa :NOUN Insect))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insecticide-TheWord (and (isa :NOUN Insecticide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insertion-TheWord
 (and (isa :NOUN PuttingSomethingSomewhere)) (frame FN_Placing)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectPlaced))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn into) to-Generic)
    ((PPFn in) to-Generic) ((PPFn through) trajectory-Complete)
    ((PPFn of) objectPlaced) (N objectPlaced))
   (:GAP (INI objectPlaced) (DNI to-Generic objectPlaced))
   (:GEN (Poss objectPlaced))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 0 0)) ((1 4 0)) ((0 0 0)) ((1 3 0)) ((1 1 0) (1 4 0))
   ((0 0 0) (1 1 0)) ((1 1 0) (1 5 0)) ((1 2 0) (1 4 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Inside-TheWord
 (and (isa :NOUN InnerSurface-Tangible)) (frame FN_Part_inner_outer)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:NOUN (N (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((3 0 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Insistence-TheWord
 (and (isa :NOUN Demanding-CommunicationAct)) (frame FN_Statement)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner) (Sfin infoTransferred)
    ((PPFn of) performedBy) ((PPFn on) situationTopic)
    ((PPingFn on) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 3 0)) ((1 0 0)) ((0 1 0)) ((0 4 0) (1 0 0)) ((0 3 0) (1 0 0))
   ((0 1 0) (1 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Insole-TheWord (and (isa :NOUN ShoeSole))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    ((PPFn of) (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Insomnia-TheWord (and (isa :NOUN Insomnia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inspection-TheWord (and (isa :NOUN Inspecting))
 (frame FN_Inspecting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ground fe_inspector))
   (:OBLIQUE-OBJECT ((PPFn of) fe_ground) ((PPFn at) fe_ground)
    ((PPFn by) fe_inspector) ((PPFn with) by-Underspecified)
    ((PPFn to) purposeOfEvent) (VPto purposeOfEvent)
    (AJP fe_degree fe_inspector personFoundInLocation fe_manner
     temporallyIntersects)
    ((PPFn on) fe_ground personFoundInLocation flaws)
    ((PPFn in) situationConstituents fe_ground temporallyIntersects flaws)
    ((PPFn for) fe_ground flaws)
    (N fe_desired_state_of_affairs fe_ground fe_inspector fe_manner
     temporallyIntersects flaws))
   (:GAP (DNI fe_ground) (CNI fe_inspector)
    (INI fe_desired_state_of_affairs fe_ground fe_inspector purposeOfEvent
     flaws))
   (:GEN (Poss fe_ground fe_inspector))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 10 5)) ((1 7 0)) ((0 0 0)) ((1 10 1)) ((3 0 1))
   ((1 2 0)) ((0 0 1)) ((1 10 2)) ((1 6 1)) ((3 0 0)) ((1 0 0)) ((1 9 0))
   ((1 6 3)) ((1 6 0)) ((1 8 2) (1 10 2)) ((1 2 0) (1 6 2)) ((1 1 0) (1 6 3))
   ((0 0 1) (1 7 0)) ((1 5 0) (1 10 1)) ((1 0 0) (3 0 1)) ((1 0 0) (1 10 2))
   ((1 8 1) (1 10 2)) ((0 0 0) (1 10 2)) ((0 0 0) (1 6 4)) ((0 0 1) (1 8 3))
   ((0 0 1) (1 4 0)) ((0 0 1) (1 6 3)) ((0 0 1) (1 10 0)) ((0 0 1) (1 0 0))
   ((1 0 0) (1 10 0)) ((1 0 0) (1 2 0) (1 6 3)) ((0 0 1) (1 0 0) (1 3 0))
   ((0 0 1) (1 0 0) (1 6 3)) ((0 0 1) (1 0 0) (1 6 2))
   ((0 0 0) (1 6 0) (1 7 2)) ((0 0 1) (1 0 0) (1 6 0))
   ((1 7 1) (1 8 0) (1 10 4)) ((0 0 1) (1 1 0) (1 5 0) (1 6 3) (1 10 3)))))

(FNNounSemtrans (TheList) Inspector-TheWord
 (and (isa :NOUN Inspector-Professional)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_ground) ((PPingFn of) fe_ground)
    (N fe_ground fe_phenomenon))
   (:GAP (DEN subjectOfMentalSituation) (DNI fe_ground fe_phenomenon)
    (INI subjectOfMentalSituation instrument-Generic fe_phenomenon))
   (:NOUN (N subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((2 0 0)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Inspiration-TheWord (and (isa :NOUN Influence))
 (frame FN_Subjective_influence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Installation-TheWord
 (and (isa :NOUN InstallingAnObject)) (frame FN_Installing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_component) ((PPFn outside) eventOccursAt)
    ((PPFn in) eventOccursAt))
   (:GAP (INI doneBy) (DNI eventOccursAt))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Installation-TheWord
 (and (isa :NOUN Facility-Generic)) (frame FN_Locale_by_use)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Instance-TheWord (and (isa :NOUN Individual))
 (frame FN_Instance)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_instance))
   (:OBLIQUE-OBJECT (AJP fe_instance_prop) ((PPFn of) activeIngredientsOfType)
    (Srel activeIngredientsOfType))
   (:GAP (DEN fe_instance))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Instinct-TheWord (and (isa :NOUN Instinct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Institute-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP parts fe_container_possessor)
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString))
    ((PPFn of) locationUse) (N locationUse) ((PPFn for) locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 4 0)) ((0 3 0)) ((0 1 1)) ((0 1 0) (0 1 1))
   ((0 0 0) (0 0 1) (0 2 0)))))

(FNNounSemtrans (TheList) Institution-TheWord (and (isa :NOUN Institution))
 (frame FN_Institutions)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_domain) ((PPFn of) fe_domain) (AJP eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn for) purposeOfEvent)
    (A fe_domain hasMembers purposeOfEvent) (VPed purposeOfEvent))
   (:GAP (DNI fe_domain) (INI fe_domain) (DEN eventOccursAt))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 2)) ((0 3 0)) ((0 5 1)) ((0 1 0)) ((0 0 0)) ((0 5 0))
   ((0 3 0) (0 4 0)) ((0 3 0) (0 5 0)) ((0 2 0) (0 5 0)) ((0 4 0) (0 5 1)))))

(FNNounSemtrans (TheList) Institutionalization-TheWord
 (and (isa :NOUN CommittingSomeoneToAnInstitution))
 (frame FN_Institutionalization) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Instruction-TheWord (and (isa :NOUN Teaching))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner)) (:GAP (INI studentOf))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Instrument-TheWord
 (and (isa :NOUN InstrumentalArtifact)) (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N deviceUse) ((PPFn of) deviceUse)
    ((PPingFn for) deviceUse) (VPto deviceUse) (AJP deviceUse fe_user)
    ((PPFn for) deviceUse fe_user))
   (:GAP (DEN fe_gizmo)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 5 0)) ((0 0 0))
   ((0 4 0)) ((0 0 0) (2 0 0)) ((0 4 0) (2 0 0)) ((0 4 0) (0 4 1)))))

(FNNounSemtrans (TheList) Instrument-TheWord
 (and (isa :NOUN DeviceRequiringSkillForProperUse)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Instrumentality-TheWord
 (and (isa :NOUN InstrumentalArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "insulated") Screwdriver-TheWord
 (and (isa :NOUN InsulatedScrewDriver)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "insulated") Wire-TheWord
 (and (isa :NOUN InsulatedWire)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "insulating") Material-TheWord
 (and (isa :NOUN InsulatingCover)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insulation-TheWord
 (and (isa :NOUN BuildingInsulation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insulation-TheWord
 (and (isa :NOUN ElectricalInsulator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insulin-TheWord (and (isa :NOUN Insulin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insult-TheWord (and (isa :NOUN InsultingSomeone))
 (frame FN_Cause_emotion)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy fe_event))
   (:OBLIQUE-OBJECT (NP fe_event) (VPto fe_event) ((PPFn with) objectActedOn)
    ((PPFn to) objectActedOn) ((PPFn at) objectActedOn) (AVP frequencyOfEvent)
    ((PPFn by) by-Underspecified) ((PPFn in) genericPathway-Partial)
    ((PPFn for) duration) (AJP activeIngredientsOfType))
   (:GAP (2nd doneBy objectActedOn) (DNI doneBy objectActedOn))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0) (1 3 0)) ((0 0 1) (1 3 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 9 0)) ((1 3 0) (1 9 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0) (1 8 0)) ((0 0 0) (1 3 0) (1 6 0))
   ((0 0 0) (1 5 0) (1 7 0)))))

(FNNounSemtrans (TheList) Insurance-TheWord (and (isa :NOUN InsurancePlan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insurgence-TheWord (and (isa :NOUN Insurgency))
 (frame FN_Rebellion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Insurgency-TheWord (and (isa :NOUN Insurgency))
 (frame FN_Rebellion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_rebel))
   (:OBLIQUE-OBJECT ((PPFn against) fe_current_leadership)
    ((PPFn in) eventOccursAt) (A fe_rebel) (N duration fe_rebel)
    (AJP fe_degree duration fe_manner by-Underspecified eventOccursAt fe_rebel
     eventOutcomes))
   (:GEN (Poss eventOccursAt))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 3 1)) ((1 4 5)) ((1 2 0)) ((2 0 0)) ((1 1 0)) ((1 4 3))
   ((1 4 2)) ((1 4 1)) ((1 4 6) (2 0 0)) ((1 1 0) (1 4 6)) ((1 2 0) (2 0 0))
   ((0 0 0) (1 1 0)) ((1 2 0) (1 4 4)) ((1 1 0) (1 3 0)) ((1 4 0) (2 0 0))
   ((0 0 0) (0 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 4 6)))))

(FNNounSemtrans (TheList) Insurgent-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy Insurgency :NOUN))
 (frame FN_Rebellion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP fe_rebel)) (:GAP (DNI fe_current_leadership))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Insurrection-TheWord (and (isa :NOUN Coup))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_degree) ((PPFn for) takesControl)
    ((PPFn against) losesControl)
    (AJP fe_depictive by-Underspecified fe_selector)
    (A by-Underspecified fe_selector) (N fe_selector)
    ((PPFn among) fe_selector) ((PPFn by) fe_selector))
   (:GAP (DNI takesControl losesControl) (INI losesControl fe_selector)
    (2nd by-Underspecified fe_selector))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 0)) ((0 5 0)) ((0 4 1)) ((0 2 0)) ((0 3 2)) ((0 3 1))
   ((0 4 0)) ((0 3 0)) ((0 0 0) (0 2 0)) ((0 1 0) (0 2 0) (0 4 1)))))

(FNNounSemtrans (TheList) Integer-TheWord (and (isa :NOUN Integer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "integrated") Amplifier-TheWord
 (and (isa :NOUN Amplifier)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "integrated") Circuit-TheWord
 (and (isa :NOUN IntegratedCircuit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intel-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intellectual-TheWord (and (isa :NOUN Intellectual))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "intelligence") Quotient-TheWord
 (and (isa :NOUN NonNegativeNumber)
      (relationExistsInstance iQ IndividualAgent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intelligence-TheWord
 (and (isa :NOUN Information-Content)) (frame FN_Information)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (N subjectOfMentalSituation) (A from-Generic)
    ((PPFn about) situationTopic))
   (:GAP (DEN fe_information))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Intelligence-TheWord
 (and (isa :NOUN IntelligenceAgency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intelligence-TheWord
 (and (isa :NOUN IntelligenceGathering)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intelligence-TheWord
 (and (isa :NOUN IntelligenceLevel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intelligence-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_container_possessor))
   (:GAP (DEN fe_organization))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Intension-TheWord
 (and (isa :NOUN IntensionalAbstraction)) (frame FN_Linguistic_meaning)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_form)) (:GAP (DEN fe_meaning))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Intention-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) performedBy) ((PPingFn of) to-Generic)
    (VPto to-Generic) (NP to-Generic) (VPbrst to-Generic) (VPing to-Generic)
    ((PPFn to) to-Generic) ((PPFn for) by-Underspecified)
    (A temporallyIntersects) (AJP temporallyIntersects))
   (:GAP (INI to-Generic) (DEN fe_value)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 6 0)) ((1 0 0)) ((3 0 0)) ((1 2 0) (3 0 0))
   ((1 5 0) (3 0 0)) ((1 4 0) (3 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0))
   ((1 2 0) (1 9 0) (3 0 0)) ((1 3 0) (1 8 0) (3 0 0)))))

(FNNounSemtrans (TheList) Interception-TheWord
 (and (isa :NOUN InterceptingAPass)) (frame FN_Intercepting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) situationConstituents)
    ((PPFn by) fe_interceptor) ((PPFn of) objectActedOn) (N objectActedOn)
    ((PPFn over) temporallyIntersects) (AJP fe_manner temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects) (Sub temporallyIntersects))
   (:GAP (CNI fe_interceptor) (DNI objectActedOn) (INI objectActedOn))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 5 0)) ((0 1 0)) ((0 0 0)) ((0 4 0) (0 7 0))
   ((0 2 0) (0 5 0)) ((0 1 0) (0 6 0)) ((0 2 0) (0 5 1) (0 6 1))
   ((0 1 0) (0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList "intercontinental" "ballistic") Missile-TheWord
 (and (isa :NOUN BallisticMissile-ICBM)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "intercostal") Vein-TheWord
 (and (isa :NOUN IntercostalVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intercourse-TheWord
 (and (isa :NOUN SexualCopulation)) (frame FN_Sex) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interest-TheWord (and (isa :NOUN Interest-Feeling))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList
   (:SUBJECT (N (InverseBinaryPredicateFn explaines-Generic))
    (NP objectActedOn (InverseBinaryPredicateFn explaines-Generic)
     situationTopic))
   (:OBLIQUE-OBJECT (AVP situationConstituents)
    (Sub situationConstituents fe_degree) (Sfin fe_degree) (VPing fe_degree)
    ((PPFn to) objectActedOn) ((PPFn for) objectActedOn)
    ((PPFn among) objectActedOn) ((PPFn from) objectActedOn)
    ((PPFn on) objectActedOn)
    ((PPingFn of) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn of) objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    (A fe_degree objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn in) fe_event objectActedOn
     (InverseBinaryPredicateFn explaines-Generic) situationTopic)
    (NP (InverseBinaryPredicateFn explaines-Generic) situationTopic)
    (AJP fe_degree objectActedOn fe_manner situationTopic)
    ((PPingFn in) fe_event (InverseBinaryPredicateFn explaines-Generic)
     situationTopic)
    (N objectActedOn situationTopic))
   (:GAP (INI objectActedOn (InverseBinaryPredicateFn explaines-Generic))
    (DNI (InverseBinaryPredicateFn explaines-Generic))
    (CNI objectActedOn (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss objectActedOn (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns
  (TheSet ((0 1 2)) ((1 15 1)) ((1 12 2)) ((1 11 2)) ((1 12 3)) ((1 16 0))
   ((0 1 1)) ((0 0 0)) ((3 0 0)) ((1 4 0)) ((1 8 0)) ((1 10 0)) ((1 7 0))
   ((0 1 0)) ((1 11 1)) ((0 1 1) (1 16 1)) ((1 15 2) (3 0 0))
   ((1 12 3) (3 0 0)) ((0 1 2) (3 0 0)) ((1 14 3) (3 0 0)) ((0 1 0) (1 12 3))
   ((0 1 0) (1 13 1)) ((1 12 2) (3 0 0)) ((0 1 1) (1 4 0)) ((0 1 0) (3 0 1))
   ((0 1 0) (1 15 1)) ((0 1 0) (1 12 2)) ((0 1 0) (1 13 0)) ((1 9 0) (1 14 1))
   ((1 12 2) (1 14 1)) ((1 11 1) (1 12 2)) ((0 1 0) (1 14 2))
   ((0 1 0) (1 15 0)) ((0 1 0) (1 12 0)) ((0 1 1) (1 14 0)) ((1 11 0) (1 12 2))
   ((0 1 0) (1 3 0)) ((1 0 0) (1 12 2)) ((0 1 0) (1 10 1) (1 12 2))
   ((1 6 0) (1 12 2) (1 14 2)) ((0 1 0) (0 1 0) (1 12 2))
   ((0 1 0) (1 11 0) (1 12 3)) ((0 1 0) (1 2 0) (1 15 1))
   ((1 12 1) (1 14 0) (1 15 1)) ((0 1 0) (1 12 2) (1 14 0))
   ((0 1 1) (1 4 0) (1 11 0)) ((0 1 1) (1 5 0) (1 11 0))
   ((0 1 0) (1 1 0) (1 15 1)) ((0 1 1) (1 1 1) (1 4 0) (1 11 0)))))

(FNNounSemtrans (TheList) Interface-TheWord
 (and (isa :NOUN UserInterfaceProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interfacing-TheWord
 (and (isa :NOUN Interfacing-Cloth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interference-TheWord (and (isa :NOUN Interfering))
 (frame FN_Hindering)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_hindrance)) (:GAP (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "interior") Paint-TheWord
 (and (isa :NOUN HousePaint-Interior)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interior-TheWord (and (isa :NOUN Cavity))
 (frame FN_Part_inner_outer)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_part_prop) (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 3 0)) ((0 1 0)) ((0 1 0) (2 0 0))
   ((0 1 0) (0 2 0)) ((0 1 0) (0 3 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Interlocutor-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:GAP (DEN fe_interlocutor_2 fe_interlocutors))
   (:GEN (Poss fe_interlocutor_1))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Intern-TheWord
 (and (isa :NOUN Person) (relationExistsInstance jobPosition Internship :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "carotid") Artery-TheWord
 (and (isa :NOUN InternalCarotidArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "cerebral") Vein-TheWord
 (and (isa :NOUN InternalCerebralVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "combustion") Engine-TheWord
 (and (isa :NOUN InternalCombustionEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "combustion" "powered") Device-TheWord
 (and (isa :NOUN InternalCombustionPoweredDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans
 (TheList "internal" "hardware" "bus" "optimized" "for" "a" "specific")
 Task-TheWord (and (isa :NOUN HardwareBusInternalOptimizedForTask))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "iliac") Artery-TheWord
 (and (isa :NOUN InternalIliacArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "jugular") Vein-TheWord
 (and (isa :NOUN InternalJugularVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internal" "revenue") Service-TheWord
 (and (isa :NOUN InternalRevenueService)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "international" "intelligence") Agency-TheWord
 (and (isa :NOUN InternationalIntelligenceAgency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "international" "law" "enforcement") Agency-TheWord
 (and (isa :NOUN InternationalLawEnforcementAgency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internet" "protocol") Telephone-TheWord
 (and (isa :NOUN Telephone-InternetProtocol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "internet" "service") Provider-TheWord
 (and (isa :NOUN InternetServiceProvider)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Internment-TheWord (and (isa :NOUN HeldCaptive))
 (frame FN_Detaining)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn as) fe_charges) (N duration)
    ((PPFn during) duration) ((PPFn on) eventOccursAt) ((PPFn of) fe_suspect)
    ((PPFn in) fe_holding_location eventOccursAt temporallyIntersects))
   (:GEN (Poss performedBy duration fe_suspect))))
 (groupPatterns
  (TheSet ((1 0 2)) ((0 5 0)) ((0 4 0)) ((0 6 0)) ((0 3 0) (0 5 0))
   ((0 2 0) (0 5 0)) ((0 1 0) (1 0 2)) ((0 1 0) (0 6 1)) ((0 1 0) (1 0 1))
   ((0 0 0) (0 6 2) (1 0 0)))))

(FNNounSemtrans (TheList) Internship-TheWord (and (isa :NOUN Internship))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interpretation-TheWord (and (isa :NOUN Categorizing))
 (frame FN_Categorization)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation objectOfStateChange))
   (:OBLIQUE-OBJECT (Sfin fe_category)
    (NP fe_category subjectOfMentalSituation) ((PPingFn by) fe_criteria)
    ((PPFn under) fe_criteria) ((PPFn by) subjectOfMentalSituation fe_criteria)
    ((PPFn of) subjectOfMentalSituation objectOfStateChange)
    ((PPFn for) objectOfStateChange)
    ((PPFn on) fe_criteria objectOfStateChange)
    (N fe_category subjectOfMentalSituation objectOfStateChange)
    ((PPFn as) fe_category objectOfStateChange)
    ((PPFn in) situationConstituents objectOfStateChange)
    (AJP subjectOfMentalSituation objectOfStateChange fe_manner))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 7 1)) ((1 5 1)) ((1 10 1)) ((1 9 1)) ((0 0 1))
   ((1 8 2)) ((1 11 1)) ((1 7 0)) ((1 4 1)) ((2 0 0)) ((1 5 0)) ((1 4 0))
   ((1 8 1)) ((1 10 0)) ((1 0 0)) ((1 1 0)) ((1 8 0)) ((1 11 2) (2 0 1))
   ((1 5 1) (1 11 2)) ((2 0 1) (2 0 1)) ((0 0 1) (2 0 1)) ((1 4 0) (1 11 2))
   ((1 5 1) (2 0 0)) ((1 8 2) (2 0 0)) ((1 4 0) (1 5 1)) ((0 0 0) (1 7 1))
   ((0 0 0) (1 5 1)) ((1 1 1) (1 7 1)) ((1 5 1) (1 11 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 11 2)) ((1 9 0) (1 11 2))
   ((1 0 0) (1 6 0)) ((1 9 0) (2 0 1)) ((1 1 0) (1 5 1))
   ((1 4 0) (1 5 1) (1 11 2)) ((1 3 0) (1 5 1) (2 0 0))
   ((0 0 0) (1 7 1) (2 0 0)) ((1 0 0) (1 11 2) (2 0 0)))))

(FNNounSemtrans (TheList) Interpretation-TheWord
 (and (isa :NOUN IdentifyingObjectAsType)) (frame FN_Categorization)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation objectOfStateChange))
   (:OBLIQUE-OBJECT (Sfin fe_category)
    (NP fe_category subjectOfMentalSituation) ((PPingFn by) fe_criteria)
    ((PPFn under) fe_criteria) ((PPFn by) subjectOfMentalSituation fe_criteria)
    ((PPFn of) subjectOfMentalSituation objectOfStateChange)
    ((PPFn for) objectOfStateChange)
    ((PPFn on) fe_criteria objectOfStateChange)
    (N fe_category subjectOfMentalSituation objectOfStateChange)
    ((PPFn as) fe_category objectOfStateChange)
    ((PPFn in) situationConstituents objectOfStateChange)
    (AJP subjectOfMentalSituation objectOfStateChange fe_manner))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 7 1)) ((1 5 1)) ((1 10 1)) ((1 9 1)) ((0 0 1))
   ((1 8 2)) ((1 11 1)) ((1 7 0)) ((1 4 1)) ((2 0 0)) ((1 5 0)) ((1 4 0))
   ((1 8 1)) ((1 10 0)) ((1 0 0)) ((1 1 0)) ((1 8 0)) ((1 11 2) (2 0 1))
   ((1 5 1) (1 11 2)) ((2 0 1) (2 0 1)) ((0 0 1) (2 0 1)) ((1 4 0) (1 11 2))
   ((1 5 1) (2 0 0)) ((1 8 2) (2 0 0)) ((1 4 0) (1 5 1)) ((0 0 0) (1 7 1))
   ((0 0 0) (1 5 1)) ((1 1 1) (1 7 1)) ((1 5 1) (1 11 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 11 2)) ((1 9 0) (1 11 2))
   ((1 0 0) (1 6 0)) ((1 9 0) (2 0 1)) ((1 1 0) (1 5 1))
   ((1 4 0) (1 5 1) (1 11 2)) ((1 3 0) (1 5 1) (2 0 0))
   ((0 0 0) (1 7 1) (2 0 0)) ((1 0 0) (1 11 2) (2 0 0)))))

(FNNounSemtrans (TheList) Interpretation-TheWord
 (and (isa :NOUN InterpretingSignificance)) (frame FN_Categorization)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation objectOfStateChange))
   (:OBLIQUE-OBJECT (Sfin fe_category)
    (NP fe_category subjectOfMentalSituation) ((PPingFn by) fe_criteria)
    ((PPFn under) fe_criteria) ((PPFn by) subjectOfMentalSituation fe_criteria)
    ((PPFn of) subjectOfMentalSituation objectOfStateChange)
    ((PPFn for) objectOfStateChange)
    ((PPFn on) fe_criteria objectOfStateChange)
    (N fe_category subjectOfMentalSituation objectOfStateChange)
    ((PPFn as) fe_category objectOfStateChange)
    ((PPFn in) situationConstituents objectOfStateChange)
    (AJP subjectOfMentalSituation objectOfStateChange fe_manner))
   (:GEN (Poss subjectOfMentalSituation objectOfStateChange))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 7 1)) ((1 5 1)) ((1 10 1)) ((1 9 1)) ((0 0 1))
   ((1 8 2)) ((1 11 1)) ((1 7 0)) ((1 4 1)) ((2 0 0)) ((1 5 0)) ((1 4 0))
   ((1 8 1)) ((1 10 0)) ((1 0 0)) ((1 1 0)) ((1 8 0)) ((1 11 2) (2 0 1))
   ((1 5 1) (1 11 2)) ((2 0 1) (2 0 1)) ((0 0 1) (2 0 1)) ((1 4 0) (1 11 2))
   ((1 5 1) (2 0 0)) ((1 8 2) (2 0 0)) ((1 4 0) (1 5 1)) ((0 0 0) (1 7 1))
   ((0 0 0) (1 5 1)) ((1 1 1) (1 7 1)) ((1 5 1) (1 11 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 11 2)) ((1 9 0) (1 11 2))
   ((1 0 0) (1 6 0)) ((1 9 0) (2 0 1)) ((1 1 0) (1 5 1))
   ((1 4 0) (1 5 1) (1 11 2)) ((1 3 0) (1 5 1) (2 0 0))
   ((0 0 0) (1 7 1) (2 0 0)) ((1 0 0) (1 11 2) (2 0 0)))))

(FNNounSemtrans (TheList) Interpreter-TheWord (and (isa :NOUN Translator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interrogation-TheWord
 (and (isa :NOUN RequestingInformation)) (frame FN_Questioning)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial) ((PPFn by) performedBy)
    ((PPFn of) recipientOfInfo performedBy) (N performedBy)
    ((PPFn about) situationTopic))
   (:GAP (DNI recipientOfInfo) (INI recipientOfInfo)
    (CNI recipientOfInfo performedBy))
   (:GEN (Poss recipientOfInfo))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 3 0)) ((1 2 1)) ((1 1 0)) ((1 0 0))
   ((1 4 0) (3 0 0)) ((1 3 0) (1 4 0)) ((1 1 0) (3 0 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Interruption-TheWord
 (and (isa :NOUN Event) (relationInstanceExists interrupts :NOUN ProcessType))
 (frame FN_Interrupt_process)
 (bindingTemplate (TheList (:GAP (INI doneBy) (DNI fe_process))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intersection-TheWord
 (and (isa :NOUN Intersection-Street)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interstate-TheWord
 (and (isa :NOUN InterstateHighway)) (frame FN_Roadways)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interval-TheWord (and (isa :NOUN Frequency))
 (frame FN_Frequency)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Sfin fe_event)) (:GAP (DEN fe_interval))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Interval-TheWord (and (isa :NOUN ScalarInterval))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "intervertebral") Disc-TheWord
 (and (isa :NOUN InterVertebralDisc)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Interview-TheWord (and (isa :NOUN Interviewing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intestine-TheWord (and (isa :NOUN LargeIntestine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Intestine-TheWord (and (isa :NOUN SmallIntestine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inti-TheWord (and (isa :NOUN Intl-Peru))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "intravenous" "drip") Bag-TheWord
 (and (isa :NOUN IntravenousDripBag)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Introduction-TheWord
 (and (isa :NOUN Introduction-CW)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Invader-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy MilitaryInvasion :NOUN))
 (frame FN_Invading) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Invasion-TheWord (and (isa :NOUN MilitaryInvasion))
 (frame FN_Invading)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_invader))
   (:OBLIQUE-OBJECT ((PPFn by) fe_invader) ((PPFn of) fe_land)
    ((PPFn for) duration) ((PPFn from) from-Generic)
    ((PPFn in) fe_land temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects)
    ((PPFn ago) temporallyIntersects)
    (N fe_event_description fe_invader fe_land by-Underspecified
     temporallyIntersects)
    ((PPFn at) temporallyIntersects) (AVP temporallyIntersects)
    (AJP fe_degree fe_event_description by-Underspecified
     activeIngredientsOfType)
    (A fe_event_description fe_invader fe_particular_iteration eventOutcomes
     temporallyIntersects activeIngredientsOfType))
   (:GAP (DNI fe_invader fe_land) (INI fe_invader fe_land) (2nd eventOccursAt))
   (:NOUN (N instrument-UsedAsWeapon)) (:GEN (Poss fe_invader fe_land))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 11 4)) ((3 0 0)) ((1 11 2)) ((4 0 0)) ((1 0 0))
   ((1 11 1)) ((1 5 0) (1 9 0)) ((1 1 0) (1 11 5)) ((1 1 0) (1 5 1))
   ((1 1 0) (1 7 4)) ((1 1 0) (1 11 3)) ((1 0 0) (1 4 1)) ((1 4 1) (1 11 1))
   ((1 6 0) (1 11 1)) ((1 7 3) (1 11 1)) ((0 0 0) (1 5 1)) ((1 1 0) (1 4 1))
   ((1 4 0) (1 11 1)) ((1 1 0) (4 0 0)) ((1 0 0) (4 0 1)) ((1 0 0) (1 1 0))
   ((1 1 0) (1 11 1)) ((1 4 1) (1 10 0)) ((1 1 0) (1 10 0)) ((1 7 1) (1 10 0))
   ((1 1 0) (1 3 0) (1 10 2)) ((1 1 0) (1 10 3) (1 11 1))
   ((1 1 0) (1 8 0) (4 0 0)) ((1 1 0) (1 7 4) (4 0 0))
   ((1 1 0) (1 5 1) (1 7 1)) ((1 1 0) (1 4 1) (1 11 1))
   ((1 4 1) (1 7 0) (1 7 2)) ((1 3 0) (1 10 1) (4 0 0))
   ((1 5 1) (1 7 0) (1 11 0)) ((1 1 0) (1 4 1) (1 10 0))
   ((1 0 0) (1 1 0) (1 10 0)) ((0 0 0) (1 1 0) (1 10 0)))))

(FNNounSemtrans (TheList "invention") Artifact-TheWord
 (and (isa :NOUN Intangible)
      (relationExistsInstance inventedThing InventingSomething :NOUN))
 (frame FN_Achieving_first)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_new_idea))
   (:OBLIQUE-OBJECT ((PPFn for) purposeOfEvent) ((PPingFn for) purposeOfEvent)
    (N purposeOfEvent temporallyIntersects))
   (:GAP (DNI fe_new_idea))
   (:GEN (Poss subjectOfMentalSituation fe_new_idea))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 1)) ((0 0 0)) ((3 0 0)) ((1 0 0) (3 0 0))
   ((1 1 0) (1 2 1) (3 0 0)))))

(FNNounSemtrans (TheList) Invention-TheWord
 (and (isa :NOUN Intangible)
      (relationExistsInstance inventedThing InventingSomething :NOUN))
 (frame FN_Achieving_first)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_new_idea)
    ((PPingFn of) fe_new_idea purposeOfEvent))
   (:GAP (INI subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Invention-TheWord
 (and (isa :NOUN InventingSomething)) (frame FN_Coming_up_with)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "invention") [Process]-TheWord
 (and (isa :NOUN InventingSomething)) (frame FN_Coming_up_with)
 (bindingTemplate
  (TheList (:SUBJECT (NP outputCW))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation)
    (N subjectOfMentalSituation outputCW)
    ((PPFn of) subjectOfMentalSituation outputCW) ((PPFn in) purposeOfEvent))
   (:GAP (DNI subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 2 1)) ((1 1 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Inventor-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy InventingSomething :NOUN))
 (frame FN_Achieving_first)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (N fe_new_idea) ((PPFn of) fe_new_idea))
   (:GAP (DEN subjectOfMentalSituation) (DNI fe_new_idea) (INI fe_new_idea))
   (:NOUN (N subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Inventor-TheWord (and (isa :NOUN Inventor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inventory-TheWord
 (and (isa :NOUN PerformingAnInventory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inventory-TheWord (and (isa :NOUN Store-Generic))
 (frame FN_Store)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing resourceAvailable))
   (:OBLIQUE-OBJECT (N resourceAvailable) ((PPFn of) resourceAvailable))
   (:GAP (DEN fe_supply)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((1 1 0) (3 0 0)) ((0 0 1) (3 0 0))
   ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Inversion-TheWord
 (and (isa :NOUN TemperatureInversionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Invertebrate-TheWord (and (isa :NOUN Invertebrate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "inverter") Loop-TheWord
 (and (isa :NOUN InverterLoop)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inverter-TheWord (and (isa :NOUN Inverter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Inverter-TheWord (and (isa :NOUN Inverter-Electric))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Investigation-TheWord
 (and (isa :NOUN CriminalInvestigation)) (frame FN_Criminal_investigation)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfInvestigation fe_investigator fe_suspect))
   (:OBLIQUE-OBJECT (AJP duration) ((PPFn against) objectOfInvestigation)
    ((PPFn as) objectOfInvestigation)
    ((PPFn for) duration objectOfInvestigation)
    ((PPFn into) objectOfInvestigation) ((PPFn over) objectOfInvestigation)
    ((PPingFn for) objectOfInvestigation) (N fe_investigator)
    ((PPFn by) fe_investigator) ((PPFn of) objectOfInvestigation fe_suspect)
    ((PPFn after) temporallyIntersects) (AVP temporallyIntersects)
    (NP temporallyIntersects) ((PPFn on) temporallyIntersects))
   (:GAP (2nd objectOfInvestigation) (INI fe_investigator)
    (CNI fe_investigator)
    (DNI objectOfInvestigation fe_investigator fe_suspect))
   (:GEN (Poss fe_investigator))))
 (groupPatterns
  (TheSet ((0 0 2)) ((1 9 1)) ((1 9 0)) ((1 4 0)) ((0 0 0)) ((3 0 0)) ((1 8 0))
   ((0 0 1)) ((1 7 0)) ((0 0 2) (1 13 0)) ((0 0 2) (1 8 0)) ((0 0 2) (1 10 0))
   ((0 0 0) (1 11 0)) ((0 0 2) (1 6 0)) ((0 0 2) (1 5 0)) ((0 0 2) (1 3 1))
   ((0 0 1) (1 9 0)) ((1 4 0) (3 0 0)) ((0 0 1) (1 4 0)) ((1 4 0) (1 7 0))
   ((1 2 0) (1 8 0)) ((0 0 2) (1 3 0)) ((0 0 0) (1 8 0) (1 12 0))
   ((0 0 2) (1 3 1) (1 11 0)) ((0 0 2) (0 0 2) (1 3 1))
   ((0 0 2) (1 1 0) (1 8 0)) ((0 0 0) (0 0 0) (1 0 0))
   ((0 0 2) (0 0 2) (1 6 0) (1 8 0)))))

(FNNounSemtrans (TheList) Investigation-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Criminal_investigation)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfInvestigation fe_investigator fe_suspect))
   (:OBLIQUE-OBJECT (AJP duration) ((PPFn against) objectOfInvestigation)
    ((PPFn as) objectOfInvestigation)
    ((PPFn for) duration objectOfInvestigation)
    ((PPFn into) objectOfInvestigation) ((PPFn over) objectOfInvestigation)
    ((PPingFn for) objectOfInvestigation) (N fe_investigator)
    ((PPFn by) fe_investigator) ((PPFn of) objectOfInvestigation fe_suspect)
    ((PPFn after) temporallyIntersects) (AVP temporallyIntersects)
    (NP temporallyIntersects) ((PPFn on) temporallyIntersects))
   (:GAP (2nd objectOfInvestigation) (INI fe_investigator)
    (CNI fe_investigator)
    (DNI objectOfInvestigation fe_investigator fe_suspect))
   (:GEN (Poss fe_investigator))))
 (groupPatterns
  (TheSet ((0 0 2)) ((1 9 1)) ((1 9 0)) ((1 4 0)) ((0 0 0)) ((3 0 0)) ((1 8 0))
   ((0 0 1)) ((1 7 0)) ((0 0 2) (1 13 0)) ((0 0 2) (1 8 0)) ((0 0 2) (1 10 0))
   ((0 0 0) (1 11 0)) ((0 0 2) (1 6 0)) ((0 0 2) (1 5 0)) ((0 0 2) (1 3 1))
   ((0 0 1) (1 9 0)) ((1 4 0) (3 0 0)) ((0 0 1) (1 4 0)) ((1 4 0) (1 7 0))
   ((1 2 0) (1 8 0)) ((0 0 2) (1 3 0)) ((0 0 0) (1 8 0) (1 12 0))
   ((0 0 2) (1 3 1) (1 11 0)) ((0 0 2) (0 0 2) (1 3 1))
   ((0 0 2) (1 1 0) (1 8 0)) ((0 0 0) (0 0 0) (1 0 0))
   ((0 0 2) (0 0 2) (1 6 0) (1 8 0)))))

(FNNounSemtrans (TheList) Investigation-TheWord (and (isa :NOUN Investigation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Investing-TheWord (and (isa :NOUN Investing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "investment") Banker-TheWord
 (and (isa :NOUN SecuritiesUnderwriter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "investment") Company-TheWord
 (and (isa :NOUN InvestmentFirm)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Investment-TheWord (and (isa :NOUN IsolatingAnEnemy))
 (frame FN_Besieging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Investment-TheWord
 (and (isa :NOUN Investment-PromotingSomeoneInACeremony)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Investor-TheWord (and (isa :NOUN Investor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Invitation-TheWord (and (isa :NOUN Invitation-IBT))
 (frame FN_Request)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (VPto infoTransferred))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Invoice-TheWord (and (isa :NOUN Bill-PaymentRequest))
 (frame FN_Billing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) lender) (AJP fe_payment_status))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Involvement-TheWord
 (and (isa :NOUN Action)
      (relationInstanceExists deliberateActors :NOUN Person))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A doneBy) (N doneBy)) (:GAP (DNI fe_event))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Involvement-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance deliberateActors Event :NOUN))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A doneBy) (N doneBy)) (:GAP (DNI fe_event))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Iodine-TheWord (and (isa :NOUN Iodine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ion-TheWord (and (isa :NOUN Ion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ip" "phone" "add" "on") Module-TheWord
 (and (isa :NOUN PBXPhoneAddOnModule)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ip" "video" "streaming") System-TheWord
 (and (isa :NOUN AVContentDeliverySystem-InternetProtocol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iptv-TheWord
 (and (isa :NOUN TelevisionContentDelieverySystem-InternetProtocol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iran-TheWord (and (isa :NOUN Iran)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iranian-TheWord (and (isa :NOUN IranianPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iridium-TheWord (and (isa :NOUN Iridium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iris-TheWord (and (isa :NOUN Iris)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iris-TheWord (and (isa :NOUN Iris-EyePart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Irish-Catholic-TheWord
 (and (isa :NOUN IrishPerson) (isa :NOUN CatholicPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irish") Person-TheWord (and (isa :NOUN IrishPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irish") Pound-TheWord (and (isa :NOUN Pound-Ireland))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irish") Setter-TheWord (and (isa :NOUN IrishSetter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irish") Terrier-TheWord
 (and (isa :NOUN Terrier-Irish)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Irish-TheWord (and (isa :NOUN IrishPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irish") Wolfhound-TheWord
 (and (isa :NOUN IrishWolfhound)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "iron") Ore-TheWord (and (isa :NOUN IronOre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iron-TheWord (and (isa :NOUN ClothesIron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iron-TheWord (and (isa :NOUN Iron-GolfClub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iron-TheWord (and (isa :NOUN Iron))
 (frame FN_Substance)
 (bindingTemplate
  (TheList (:GAP (DEN stuffUsed)) (:NOUN (N fe_inherent_purpose))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "ironing") Board-TheWord
 (and (isa :NOUN IroningBoard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iroquois-TheWord
 (and (isa :NOUN Iroquois-EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irrational") Impulse-TheWord
 (and (isa :NOUN ImpulsiveUrge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irrational") Number-TheWord
 (and (isa :NOUN IrrationalNumber)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Irritant-TheWord
 (and (isa :NOUN PharmaceuticalType)
      (relationExistsInstance activeIngredientsOfType PharmacyProductType
       :NOUN))
 (frame FN_Active_substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Irritant-TheWord (and (isa :NOUN Irritant))
 (frame FN_Active_substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "irritable" "bowel") Syndrome-TheWord
 (and (isa :NOUN IrritableBowelSyndrome)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ischium-TheWord (and (isa :NOUN Ischium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Islam-TheWord (and (isa :NOUN Islam)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Island-TheWord (and (isa :NOUN Island))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn without) fe_descriptor) (NP (InverseBinaryPredicateFn nameString))
    (Num (InverseBinaryPredicateFn nameString))
    (A fe_container_possessor fe_descriptor
     (InverseBinaryPredicateFn nameString) fe_relative_location)
    (AVP fe_relative_location) ((PPFn in) fe_descriptor fe_relative_location)
    ((PPFn near) fe_relative_location) ((PPFn off) fe_relative_location)
    ((PPFn on) fe_relative_location)
    ((PPFn of) parts fe_container_possessor fe_descriptor
     (InverseBinaryPredicateFn nameString) fe_relative_location
     activeIngredientsOfType)
    (N parts fe_descriptor (InverseBinaryPredicateFn nameString)
     fe_relative_location activeIngredientsOfType)
    (AJP parts fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString) fe_relative_location
     activeIngredientsOfType))
   (:GAP (DEN eventLocale))
   (:GEN
    (Poss fe_container_possessor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 11 5)) ((0 13 5)) ((0 12 4)) ((0 10 0)) ((0 9 0)) ((0 11 4))
   ((0 8 0)) ((0 7 1)) ((0 12 3)) ((0 13 4)) ((0 5 3)) ((2 0 1)) ((0 4 0))
   ((0 5 2)) ((0 11 3)) ((0 3 0)) ((0 12 2)) ((0 13 3)) ((0 13 2)) ((0 0 0))
   ((0 2 0)) ((0 1 0)) ((0 11 2)) ((0 13 1)) ((0 11 1)) ((0 5 0)) ((0 11 0))
   ((0 13 0)) ((0 12 0)) ((0 10 0) (0 13 5)) ((0 11 3) (2 0 2))
   ((0 11 3) (0 13 4)) ((0 12 2) (0 12 2)) ((0 11 5) (0 13 1))
   ((0 11 3) (0 13 1)) ((0 7 0) (0 13 1)) ((0 5 1) (0 11 2)) ((0 13 4) (2 0 0))
   ((0 12 1) (2 0 0)) ((0 13 1) (2 0 0)) ((0 5 3) (0 6 0) (0 13 1))
   ((0 0 0) (0 5 1) (0 12 2)))))

(FNNounSemtrans (TheList) Isle-TheWord (and (isa :NOUN Island))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    (NP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 3 1)) ((0 3 0)) ((0 1 0) (0 4 0))
   ((0 1 0) (0 3 2)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Islet-TheWord (and (isa :NOUN (SmallFn Island)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts)
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn off) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn near) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 0 0)) ((0 4 0) (0 5 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Isoleucine-TheWord (and (isa :NOUN Isoleucine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "isopropyl") Alcohol-TheWord
 (and (isa :NOUN IsopropylAlcohol)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Isotope-TheWord (and (isa :NOUN Isotope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Isp-TheWord (and (isa :NOUN InternetServiceProvider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Israel-TheWord (and (isa :NOUN Israel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Issuance-TheWord
 (and (isa :NOUN CreationEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Creating)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) outputsCreated)
    ((PPFn in) temporallyIntersects))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Issue-TheWord (and (isa :NOUN Situation))
 (frame FN_Point_of_dispute)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Sfin fe_descriptor) (A fe_domain)
    ((PPFn between) groupMembers) ((PPFn about) fe_question)
    ((PPFn of) fe_question) (AJP fe_descriptor fe_question fe_status)
    (VPbrst fe_status))
   (:GAP (DEN fe_question) (INI fe_question) (DNI fe_question))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 5 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 5 0))
   ((0 4 0) (0 6 0)) ((0 3 0) (0 5 2)))))

(FNNounSemtrans (TheList) Issue-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Isthmus-TheWord (and (isa :NOUN Isthmus))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) It-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Neuter-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "italian") Greyhound-TheWord
 (and (isa :NOUN ItalianGreyhound)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Italian-TheWord (and (isa :NOUN ItalianPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Item-TheWord (and (isa :NOUN Entity))
 (frame FN_Entity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) (A activeIngredientsOfType)
    (Sub activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Its-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Neuter-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Itself-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Neuter-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Iv-TheWord
 (and (isa :NOUN IntravenousInfusionProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ivory-TheWord (and (isa :NOUN Ivory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jack" "o") Lantern-TheWord
 (and (isa :NOUN Jack-O-Lantern)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jack-TheWord (and (isa :NOUN Jack-LiftingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jack-TheWord (and (isa :NOUN Jack-TheCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jackal-TheWord (and (isa :NOUN Jackal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jacket-TheWord (and (isa :NOUN Jacket))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor mainConstituent)
    ((PPFn of) fe_descriptor mainConstituent)
    (N fe_descriptor mainConstituent clothingStyle)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 3 1)) ((0 1 1)) ((0 2 1)) ((0 3 0))
   ((0 3 2) (2 0 0)) ((0 2 2) (2 0 0)) ((0 2 1) (2 0 0)) ((0 2 1) (0 2 2))
   ((0 2 0) (2 0 0)) ((0 3 0) (2 0 0)) ((0 2 2) (0 3 0)) ((0 3 0) (0 3 1))
   ((0 2 1) (0 3 0)) ((0 1 0) (0 3 0)) ((0 3 0) (0 3 0))
   ((0 2 2) (0 3 0) (2 0 0)) ((0 2 0) (0 2 1) (2 0 0))
   ((0 2 1) (0 3 0) (2 0 0)) ((0 2 1) (0 3 0) (0 3 1))
   ((0 0 0) (0 3 0) (0 3 1)) ((0 0 1) (0 3 0) (0 3 0))
   ((0 2 1) (0 3 0) (0 3 0)))))

(FNNounSemtrans (TheList) Jackhammer-TheWord (and (isa :NOUN JackHammer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jackrabbit-TheWord (and (isa :NOUN Jackrabbit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jade-TheWord (and (isa :NOUN Jade-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jaguar-TheWord (and (isa :NOUN JaguarCat))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jail-TheWord
 (and (isa :NOUN PrisonSentencePunishment)) (frame FN_Being_incarcerated)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jail-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) objectFoundInLocation)
    ((PPFn in) objectFoundInLocation) ((PPFn near) objectFoundInLocation)
    ((PPFn of) objectFoundInLocation) ((PPFn on) objectFoundInLocation)
    ((PPFn outside) objectFoundInLocation) (AJP fe_inmates directingAgent)
    (N objectFoundInLocation (InverseBinaryPredicateFn nameString)
     directingAgent))
   (:GAP (DEN locationOfMaleficiaries)) (:GEN (Poss objectFoundInLocation))))
 (groupPatterns
  (TheSet ((0 7 2)) ((0 6 1)) ((0 7 1)) ((2 0 0)) ((0 5 0)) ((0 3 0)) ((0 1 0))
   ((0 0 0)) ((0 7 0)) ((0 6 0)) ((0 3 0) (0 7 2)) ((0 1 0) (0 6 1))
   ((0 7 1) (2 0 0)) ((0 4 0) (0 7 1)) ((0 2 0) (0 7 1)) ((0 1 0) (0 7 1)))))

(FNNounSemtrans (TheList) Jailhouse-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectFoundInLocation))
   (:GAP (DEN locationOfMaleficiaries))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Jalapeno-TheWord (and (isa :NOUN JalapenoPepper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jam-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jamaica-TheWord
 (and (isa :NOUN (TerritoryFn Jamaica))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jamaican") Dollar-TheWord
 (and (isa :NOUN Dollar-Jamaica)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Janitor-TheWord (and (isa :NOUN Janitor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) January-TheWord (and (isa :NOUN January))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_relative_time (InverseBinaryPredicateFn parts)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString) fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1)))))

(FNNounSemtrans (TheList) Japanese-TheWord (and (isa :NOUN JapanesePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jar-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    ((PPFn of) (InverseBinaryPredicateFn outputsCreated) containedObject)
    ((PPFn with) containedObject) (AJP containedObject fe_relative_location)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 3 1)) ((0 3 0)) ((0 1 0)) ((0 0 1)) ((0 0 0))
   ((0 2 0) (0 2 1)) ((0 0 1) (0 3 0)))))

(FNNounSemtrans (TheList) Jar-TheWord (and (isa :NOUN Jar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jaundice-TheWord (and (isa :NOUN Jaundice))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:GAP (DEN infects) (DNI objectActedOn) (INI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Jaunt-TheWord (and (isa :NOUN LocomotionEvent))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (NP situationLocation) ((PPFn in) situationLocation)
    ((PPFn on) situationLocation) ((PPFn out) situationLocation)
    ((PPFn round) situationLocation) ((PPFn with) accompaniedBy)
    ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    ((PPFn along) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn of) performedBy) ((PPFn from) from-Generic)
    (A duration temporallyIntersects)
    (AJP situationLocation duration fe_manner trajectory-Complete
     temporallyIntersects)
    (Sinterrog temporallyIntersects))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 8 0)) ((1 7 0)) ((1 6 0)) ((1 0 0)) ((1 13 3) (3 0 0))
   ((1 7 0) (1 13 4)) ((1 7 0) (3 0 0)) ((1 6 0) (3 0 0)) ((0 0 0) (1 12 0))
   ((1 6 0) (1 13 1)) ((1 5 0) (3 0 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 0))
   ((1 2 0) (3 0 0)) ((1 0 0) (3 0 0)) ((1 10 0) (1 13 0)) ((1 4 0) (1 13 1))
   ((0 0 0) (1 9 0) (1 13 4)) ((0 0 0) (1 9 0) (1 12 1))
   ((1 13 2) (1 14 0) (3 0 0)) ((0 0 0) (0 0 0) (1 7 0))
   ((1 7 0) (1 13 3) (3 0 0)) ((1 1 0) (1 13 1) (3 0 0))
   ((0 0 0) (1 7 0) (1 11 0) (1 12 1)))))

(FNNounSemtrans (TheList) Jaunt-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Javanese-TheWord (and (isa :NOUN JavaneseLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Javelin-TheWord (and (isa :NOUN Javelin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Javelin-TheWord
 (and (isa :NOUN JavelinThrowSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jaw-TheWord (and (isa :NOUN Jaw))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0)) ((0 0 0) (3 0 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Jazz-TheWord (and (isa :NOUN JazzMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jealousy-TheWord (and (isa :NOUN Jealousy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jean-TheWord (and (isa :NOUN Jeans)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jeans-TheWord (and (isa :NOUN Jeans))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_descriptor) (N mainConstituent)
    (AJP fe_descriptor clothingStyle) (A clothingStyle)
    ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 1 0) (2 0 0))
   ((0 1 0) (0 2 1)) ((0 0 0) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 3 0) (0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Jeep-TheWord (and (isa :NOUN Jeep-Traditional))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jeer-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) recipientOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn of) communicatorOfInfo)
    (Sinterrog fe_reason))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Jejunum-TheWord (and (isa :NOUN Jejunum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jellyfish-TheWord (and (isa :NOUN Jellyfish))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jerkin-TheWord (and (isa :NOUN Jacket))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Jeroboam-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jersey-TheWord (and (isa :NOUN T-Shirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jest-TheWord (and (isa :NOUN JokeTelling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jet") Engine-TheWord (and (isa :NOUN JetEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jet-TheWord (and (isa :NOUN JetPropelledAircraft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jew-TheWord (and (isa :NOUN JewishPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jew-TheWord
 (and (isa :NOUN IntelligentAgentTypeByBeliefSystem))
 (frame FN_People_by_religion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A comesFrom-Generic)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Jewel-TheWord (and (isa :NOUN GemStone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jeweler-TheWord
 (and (isa :NOUN
       (SubcollectionOfWithRespectFromTypeFn CraftWorker performedBy
        (MakingFn Jewelry))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jewellery-TheWord (and (isa :NOUN Jewelry))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_accoutrement) ((PPFn from) fe_descriptor)
    (AJP fe_descriptor mainConstituent) ((PPFn in) mainConstituent)
    (N fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 2)) ((0 3 0)) ((0 4 1)) ((0 2 1)) ((0 2 0)) ((0 0 0))
   ((0 2 0) (0 4 2)) ((0 2 0) (0 4 1)) ((0 2 0) (0 4 0))
   ((0 1 0) (0 2 0) (0 4 2)))))

(FNNounSemtrans (TheList "jewelry") Box-TheWord (and (isa :NOUN JewelryBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jewelry") Cleaner-TheWord
 (and (isa :NOUN JewelryCleaner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jewelry-TheWord (and (isa :NOUN Jewelry))
 (frame FN_Accoutrements) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jewish" "holy") Day-TheWord
 (and (isa :NOUN JewishHoliday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jiao-TheWord (and (isa :NOUN Jiao-China))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jigger-TheWord (and (isa :NOUN ShotGlass))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) containedObject))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "jigsaw") Puzzle-TheWord
 (and (isa :NOUN JigsawPuzzle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jitteriness-TheWord (and (isa :NOUN Nervousness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Job-Referral-TheWord (and (isa :NOUN JobReferral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Job-TheWord (and (isa :NOUN JobPosition))
 (frame FN_Being_employed)
 (bindingTemplate
  (TheList (:SUBJECT (NP employees employer))
   (:OBLIQUE-OBJECT (NP situationConstituents) ((PPFn for) employees)
    (AVP employer) ((PPFn with) fe_compensation employer)
    ((PPFn within) fe_field) ((PPFn at) employer eventOccursAt)
    ((PPFn in) employer fe_field employer) ((PPFn as) job) (VPing fe_task)
    ((PPingFn of) fe_task) (A fe_rank activeIngredientsOfType)
    (AJP fe_compensation employeeStatus job activeIngredientsOfType)
    (Srel activeIngredientsOfType)
    (N duration employer fe_field employer fe_task activeIngredientsOfType))
   (:GAP (DNI employees employer employer) (DEN job)
    (INI employees employer job fe_task))
   (:NOUN (N job)) (:GEN (Poss employees)) (:APPOSITIVE (NP job))))
 (groupPatterns
  (TheSet ((1 13 5)) ((1 10 1)) ((1 8 0)) ((1 9 0)) ((1 13 4)) ((1 7 0))
   ((1 11 2)) ((1 6 0)) ((1 5 0)) ((1 13 1)) ((1 12 0)) ((1 11 3)) ((3 0 0))
   ((1 13 2)) ((1 1 0)) ((0 0 0)) ((4 0 0)) ((1 13 0)) ((1 11 1)) ((1 11 0))
   ((1 0 0)) ((1 6 0) (1 11 3)) ((1 10 1) (1 13 1)) ((1 6 0) (1 13 4))
   ((1 6 1) (1 11 3)) ((1 11 3) (1 13 2)) ((1 3 1) (1 13 5)) ((1 5 0) (1 10 0))
   ((1 6 0) (1 13 1)) ((1 13 5) (4 0 0)) ((1 13 4) (4 0 0)) ((1 6 0) (4 0 0))
   ((1 5 0) (1 11 3)) ((0 0 1) (1 5 1)) ((1 3 1) (4 0 0)) ((1 5 0) (4 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (0 0 0)) ((1 7 0) (1 13 0)) ((1 13 0) (5 0 0))
   ((1 6 0) (1 13 0)) ((1 8 0) (1 11 1)) ((1 6 1) (1 11 1)) ((1 10 1) (1 11 0))
   ((1 4 0) (1 11 0)) ((1 6 0) (1 10 0) (1 13 5)) ((1 13 1) (1 13 4) (4 0 0))
   ((1 3 0) (1 5 0) (1 10 0)) ((1 7 0) (1 13 5) (4 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Job-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPto obligationsCreated))
   (:GAP (DEN obligationsCreated)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Joblessness-TheWord
 (and (isa :NOUN HasPositionRelationship)) (frame FN_Being_employed)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joblessness-TheWord (and (isa :NOUN Unemployment))
 (frame FN_Unemployment_rate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn among) groupMembers) (N fe_individuals)
    (AJP temporallyIntersects))
   (:GAP (DEN fe_employment) (DNI fe_individuals) (INI fe_value))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Jockey-TheWord (and (isa :NOUN Jockey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jodhpur-TheWord (and (isa :NOUN RidingPants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jodhpurs-TheWord (and (isa :NOUN RidingPants))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Joint-TheWord (and (isa :NOUN Joint-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joint-TheWord (and (isa :NOUN Joint-Junction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joint-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joint-TheWord
 (and (isa :NOUN Cigarette) (isa :NOUN Marijuana)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joke-TheWord (and (isa :NOUN Joke-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joke-TheWord (and (isa :NOUN Joke-IBT))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jollification-TheWord
 (and (isa :NOUN EntertainmentEvent)) (frame FN_Social_event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) amongThosePresent beneficiary) (AJP fe_degree)
    ((PPFn in) eventOccursAt) (NP eventOccursAt) ((PPFn around) eventOccursAt)
    (AVP temporallyIntersects) ((PPFn within) temporallyIntersects))
   (:GAP (DNI amongThosePresent host) (DEN fe_social_event))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 0 1)) ((0 4 0) (0 5 0)) ((0 1 0) (0 3 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Jordan-TheWord (and (isa :NOUN Jordan-TheNation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jordanian") Dinar-TheWord
 (and (isa :NOUN Dinar-Jordan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "joshua") Tree-TheWord (and (isa :NOUN JoshuaTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Joule-TheWord (and (isa :NOUN Joule)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Journal-TheWord (and (isa :NOUN JournalSeries))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Journal-TheWord (and (isa :NOUN Diary))
 (frame FN_Records)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_recorder))
   (:OBLIQUE-OBJECT ((PPFn of) fe_data)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_record)) (:GEN (Poss fe_recorder))))
 (groupPatterns (TheSet ((1 1 1)) ((3 0 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Journal-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N situationTopic)) (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Journalist-TheWord (and (isa :NOUN Journalist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Journey-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn of) distanceTranslated duration)
    ((PPFn till) duration) (VPing duration)
    (Sub (InverseBinaryPredicateFn explains-Generic))
    ((PPFn over) trajectory-Complete)
    ((PPFn across) situationLocation trajectory-Complete)
    ((PPFn through) trajectory-Complete) ((PPFn between) trajectory-Complete)
    ((PPFn to) to-Generic trajectory-Complete)
    ((PPFn down) trajectory-Complete)
    (VPto (InverseBinaryPredicateFn explains-Generic) to-Generic
     purposeOfEvent)
    ((PPFn with) fe_co-participant purposeOfEvent) ((PPFn from) from-Generic)
    ((PPFn at) rateOfEvent) ((PPFn during) temporallyIntersects)
    (AVP duration to-Generic temporallyIntersects)
    ((PPFn in) situationLocation duration fe_manner by-Underspecified
     deviceTypeUsed trajectory-Complete temporallyIntersects)
    (N distanceTranslated duration deviceTypeUsed trajectory-Complete
     temporallyIntersects)
    (AJP distanceTranslated duration
     (InverseBinaryPredicateFn explains-Generic) to-Generic trajectory-Complete
     temporallyIntersects)
    ((PPingFn after) temporallyIntersects)
    ((PPFn on) by-Underspecified deviceTypeUsed trajectory-Complete
     temporallyIntersects)
    ((PPFn for) duration travellerInTrip)
    (NP temporallyIntersects travellerInTrip)
    ((PPFn by) deviceTypeUsed trajectory-Complete travellerInTrip))
   (:GAP (CNI travellerInTrip) (INI travellerInTrip)
    (DNI situationLocation to-Generic travellerInTrip))
   (:GEN (Poss travellerInTrip))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 21 1)) ((1 23 2)) ((0 0 0)) ((1 20 3)) ((1 6 0))
   ((1 9 0)) ((1 7 0)) ((1 18 4)) ((1 23 0)) ((1 20 0)) ((1 8 0)) ((1 10 0))
   ((1 1 0)) ((1 18 1)) ((1 0 0)) ((1 11 0)) ((1 5 0)) ((0 0 0) (1 16 6))
   ((1 12 0) (3 0 0)) ((1 12 0) (1 22 0)) ((1 6 0) (3 0 0)) ((1 7 0) (3 0 0))
   ((1 17 3) (3 0 0)) ((1 17 3) (1 17 4)) ((1 17 2) (3 0 0)) ((0 0 0) (1 16 2))
   ((1 10 1) (3 0 0)) ((1 8 0) (3 0 0)) ((1 10 0) (3 0 0)) ((1 18 2) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 18 1) (3 0 0)) ((1 15 2) (1 18 1)) ((1 12 0) (1 18 1))
   ((1 5 1) (1 15 0)) ((1 17 2) (1 18 1)) ((0 0 0) (1 16 1)) ((0 0 0) (1 0 0))
   ((1 17 0) (1 21 1)) ((1 11 0) (3 0 0)) ((1 11 0) (1 16 4)) ((1 5 0) (3 0 0))
   ((1 16 0) (1 16 5)) ((1 5 0) (1 20 1)) ((1 5 0) (1 17 2))
   ((1 6 0) (1 22 0) (3 0 0)) ((1 19 0) (1 23 1) (3 0 0))
   ((1 7 0) (1 17 4) (3 0 0)) ((1 6 0) (1 10 2) (1 10 2))
   ((1 8 1) (1 23 1) (3 0 0)) ((0 0 0) (1 13 0) (1 18 3))
   ((0 0 0) (1 8 0) (1 12 0)) ((1 8 0) (1 11 1) (1 12 0))
   ((1 8 0) (1 17 2) (3 0 0)) ((0 0 0) (1 3 0) (1 21 0))
   ((1 8 0) (1 18 2) (3 0 0)) ((0 0 0) (1 18 1) (1 20 2))
   ((1 4 0) (1 14 0) (1 18 1)) ((0 0 0) (1 0 1) (1 23 0))
   ((0 0 0) (1 18 1) (1 20 1)) ((1 17 2) (1 18 1) (3 0 0))
   ((0 0 0) (1 17 2) (1 18 1)) ((0 0 0) (1 8 0) (1 17 1))
   ((0 0 0) (1 8 0) (1 18 1)) ((1 15 1) (1 18 1) (3 0 0))
   ((0 0 0) (1 10 0) (1 18 1)) ((1 10 2) (1 11 0) (3 0 0))
   ((0 0 0) (1 11 0) (1 17 0)) ((0 0 0) (1 5 1) (1 18 5) (3 0 0))
   ((1 15 1) (1 17 2) (1 22 0) (1 22 1)) ((1 8 0) (1 12 0) (1 17 2) (3 0 0))
   ((1 8 0) (1 12 0) (1 16 6) (1 20 0)) ((1 8 0) (1 12 0) (1 18 2) (3 0 0))
   ((0 0 0) (1 8 0) (1 12 0) (1 17 1)) ((1 8 0) (1 12 0) (1 17 1) (1 23 0))
   ((0 0 0) (1 11 0) (1 17 2) (1 18 1)) ((1 8 0) (1 11 0) (1 15 0) (1 17 3))
   ((0 0 0) (1 16 0) (1 18 0) (1 20 1))
   ((1 6 0) (1 8 0) (1 12 0) (1 16 3) (3 0 0)))))

(FNNounSemtrans (TheList "jovian") Planet-TheWord (and (isa :NOUN GasGiant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jpeg-TheWord (and (isa :NOUN JPEGFile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Judaism-TheWord (and (isa :NOUN Judaism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Judge-TheWord (and (isa :NOUN Judge))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Judgment-TheWord (and (isa :NOUN VerdictOfTrial))
 (frame FN_Legal_rulings)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_authority))
   (:OBLIQUE-OBJECT ((PPFn upon) fe_case) ((PPFn as) defendants))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Judiciary-TheWord (and (isa :NOUN JudicialAgent))
 (frame FN_Judicial_body) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Judo-TheWord (and (isa :NOUN JudoActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jug-TheWord (and (isa :NOUN Pitcher))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn on) fe_relative_location)
    (N containedObject mainConstituent deviceUse)
    (AJP mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 3 1)) ((0 1 0)) ((2 0 0)) ((0 2 1)) ((0 0 0)) ((0 2 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 2 1)) ((0 0 0) (0 3 0)) ((0 2 0) (0 2 1))
   ((0 1 0) (0 2 1) (0 2 2)))))

(FNNounSemtrans (TheList) Jug-TheWord (and (isa :NOUN (VolumeFn Pitcher)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N measurementResult) (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Juggle-TheWord (and (isa :NOUN Juggling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "juice") Maker-TheWord (and (isa :NOUN Juicer-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Juice-TheWord (and (isa :NOUN Juice)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AVP fe_descriptor)
    (N activeIngredientsOfType) (NP activeIngredientsOfType)
    (Poss activeIngredientsOfType) (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN objectActedOn)) (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 5 1)) ((0 5 0)) ((0 1 0) (0 4 0))
   ((0 3 0) (0 5 0)) ((0 2 0) (0 5 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Jukebox-TheWord (and (isa :NOUN Jukebox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) July-TheWord (and (isa :NOUN July))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:GAP (DNI fe_relative_time) (DEN fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jump") Rope-TheWord (and (isa :NOUN JumpRope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jump") Suit-TheWord (and (isa :NOUN JumpSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jump-TheWord (and (isa :NOUN Jumping))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jumper") Cable-TheWord (and (isa :NOUN JumperCables))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jumper-TheWord (and (isa :NOUN JumperDress))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor mainConstituent)
    (Poss clothingStyle) (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 3 0)) ((0 2 0)) ((0 3 1) (2 0 0))
   ((0 0 1) (0 2 2)) ((0 3 1) (0 3 2)) ((0 2 0) (2 0 0)) ((0 0 0) (0 3 2))
   ((0 2 0) (0 2 2)) ((0 2 0) (0 3 1)) ((0 2 0) (0 2 0))
   ((0 1 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Jumpsuit-TheWord (and (isa :NOUN JumpSuit))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Junction-TheWord (and (isa :NOUN Junction-Connector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) June-TheWord (and (isa :NOUN June))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP fe_count))
   (:GAP (DEN (InverseBinaryPredicateFn nameString) fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts))
    (DNI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "jungle") Gym-TheWord (and (isa :NOUN JungleGym))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jungle-TheWord (and (isa :NOUN TropicalRainForest))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn of) fe_container_possessor)
    (AJP fe_container_possessor fe_relative_location)
    ((PPFn beside) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "junior") College-TheWord
 (and (isa :NOUN College-2Year)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "junior" "high") School-TheWord
 (and (isa :NOUN MiddleSchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Junk-TheWord (and (isa :NOUN Junk))
 (frame FN_Desirability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Junk-TheWord (and (isa :NOUN Junk)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Junket-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP situationLocation) (N situationLocation to-Generic)
    ((PPFn to) to-Generic))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 1 1) (1 0 0)))))

(FNNounSemtrans (TheList) Junkie-TheWord
 (and (isa :NOUN Person)
      (hasPhysiologicalConditionType :NOUN (AddictionFn AddictiveSubstance)))
 (frame FN_Addiction)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_addict)) (:OBLIQUE-OBJECT (N fe_addictant))
   (:GAP (DEN fe_addict) (DNI fe_addictant)) (:NOUN (N fe_addict))))
 (groupPatterns (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Junkyard-TheWord (and (isa :NOUN Junkyard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jurassic-TheWord
 (and (isa :NOUN Jurassic-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jurisdiction-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance jurisdictionOverIndividual
       LegalGovernmentOrganization :NOUN))
 (frame FN_Authority) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jurisdiction-TheWord
 (and (isa :NOUN GeopoliticalEntity)
      (relationExistsInstance jurisdictionRegion LegalGovernmentOrganization
       :NOUN))
 (frame FN_Political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "jury") Duty-TheWord (and (isa :NOUN JuryDuty))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "justice" "of" "the") Peace-TheWord
 (and (isa :NOUN JusticeOfThePeace)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justice-TheWord (and (isa :NOUN Judge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justice-TheWord (and (isa :NOUN Justice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justice-TheWord (and (isa :NOUN JusticeOfThePeace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justice-TheWord (and (isa :NOUN RevengeAction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justification-TheWord
 (and (isa :NOUN (JustificationForFn :OBLIQUE-OBJECT))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justification-TheWord (and (isa :NOUN Justification))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Justness-TheWord (and (isa :NOUN Justice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Jute-TheWord (and (isa :NOUN Jute-Fiber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Juvenile-TheWord
 (and (isa :NOUN (JuvenileFn HomoSapiens))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "k" "12" "school") Building-TheWord
 (and (isa :NOUN SchoolBuilding-KThrough12)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kachin-TheWord (and (isa :NOUN KachinLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kafiri-TheWord (and (isa :NOUN KafiriLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kaftan-TheWord (and (isa :NOUN Tunic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn with) fe_descriptor))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Kaiser-TheWord (and (isa :NOUN Emperor-HeadOfState))
 (frame FN_Leadership)
 (bindingTemplate (TheList (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kamikaze-TheWord (and (isa :NOUN SuicideAttack))
 (frame FN_Suicide_attack) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kangaroo-TheWord (and (isa :NOUN Kangaroo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kannada-TheWord
 (and (isa :NOUN Kannada-DravidianLanguageFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "karate") Match-TheWord
 (and (isa :NOUN KarateSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Karate-TheWord (and (isa :NOUN KarateActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Karma-TheWord (and (isa :NOUN Karma)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kayak") Paddle-TheWord (and (isa :NOUN KayakPaddle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kayak-TheWord (and (isa :NOUN Kayak))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keel-TheWord (and (isa :NOUN Keel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keepsake-TheWord (and (isa :NOUN Keepsake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keeshond-TheWord (and (isa :NOUN Keeshond))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keg-TheWord (and (isa :NOUN Barrel-Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn below) fe_relative_location) ((PPFn in) fe_relative_location)
    (N mainConstituent deviceUse) (AJP deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 1 0)) ((0 3 0)) ((0 0 0)) ((0 4 0) (2 0 0))
   ((0 3 0) (0 3 1)))))

(FNNounSemtrans (TheList) Kennel-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kennel-TheWord (and (isa :NOUN Doghouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kenyan") Shilling-TheWord
 (and (isa :NOUN Shilling-Kenya)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kerchief-TheWord (and (isa :NOUN Kerchief))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kerosene-TheWord (and (isa :NOUN KeroseneFuel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kerry" "blue") Terrier-TheWord
 (and (isa :NOUN Terrier-KerryBlue)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ketamine-TheWord (and (isa :NOUN Ketamine))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ketchup-TheWord (and (isa :NOUN Ketchup))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Kettle-TheWord (and (isa :NOUN Kettle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kettle-TheWord (and (isa :NOUN Tympani))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "key") Lock-TheWord (and (isa :NOUN KeyLock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "key") Rack-TheWord (and (isa :NOUN KeyRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "key") Ring-TheWord (and (isa :NOUN KeyRing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Key-TheWord (and (isa :NOUN KeyOfLock))
 (frame FN_Key)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) fe_function)) (:GAP (DEN fe_key))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Key-TheWord (and (isa :NOUN (SmallFn Island)))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Key-TheWord
 (and (isa :NOUN ElectricalButton)
      (relationExistsInstance properPhysicalParts
       (CollectionUnionFn (TheSet Keyboard-MusicalInstrument ComputerKeyboard))
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keyboard-TheWord (and (isa :NOUN ComputerKeyboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keyboard-TheWord
 (and (isa :NOUN Keyboard-MusicalInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Keycard-TheWord
 (and (isa :NOUN KeylessEntryCardReader)) (frame FN_Key)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "keystroke" "dynamics") Monitor-TheWord
 (and (isa :NOUN KeystrokeDynamicsMonitor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Khan-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Khedive-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Khmer-TheWord (and (isa :NOUN KhmerLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kick") Board-TheWord (and (isa :NOUN KickBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kick") Scooter-TheWord (and (isa :NOUN KickScooter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kickback-TheWord (and (isa :NOUN Kickback))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kicker-TheWord (and (isa :NOUN FootballKicker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kid-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kid-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Kid-TheWord (and (isa :NOUN (JuvenileFn Goat)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kid-TheWord (and (isa :NOUN PrePubescentHuman))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn under) age) ((PPFn in) fe_descriptor)
    ((PPFn at) fe_descriptor) ((PPFn from) comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    (N fe_context_of_acquaintance fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    ((PPFn of) age comesFrom-Generic fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN age fe_persistent_characteristic fe_person) (2nd fe_person))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 5 4)) ((1 4 3)) ((1 3 0)) ((1 4 2)) ((1 7 0)) ((1 1 0))
   ((1 2 0)) ((1 4 1)) ((1 5 0)) ((1 0 0)) ((1 6 0)) ((1 4 0))
   ((1 4 2) (1 4 3)) ((1 5 2) (1 6 1)) ((1 4 1) (1 5 4)) ((1 3 0) (1 5 1))
   ((1 1 0) (1 7 0)) ((1 4 1) (1 7 0)) ((1 1 0) (1 4 1)) ((0 0 0) (1 4 3))
   ((1 3 0) (1 4 0)) ((1 4 0) (1 4 1)) ((1 4 3) (1 5 2) (1 5 3))
   ((1 4 1) (1 4 1) (1 5 2)) ((0 0 0) (1 4 3) (1 7 0))
   ((1 4 0) (1 4 1) (1 4 3)) ((1 4 0) (1 4 1) (1 4 2))
   ((1 3 0) (1 4 3) (1 4 3) (1 7 1)) ((1 1 0) (1 4 3) (1 4 3) (1 6 2)))))

(FNNounSemtrans (TheList) Kidnapper-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance perpetrator KidnappingSomeone :NOUN))
 (frame FN_Kidnapping)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt temporallyIntersects)
    (NP perpetrator temporallyIntersects victim) ((PPFn of) victim) (N victim))
   (:GAP (DEN perpetrator) (DNI victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 0 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 0 1))
   ((1 0 0) (1 1 1) (1 1 2)))))

(FNNounSemtrans (TheList) Kidnapping-TheWord
 (and (isa :NOUN KidnappingSomeone)) (frame FN_Kidnapping)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn by) perpetrator) ((PPFn at) eventOccursAt)
    ((PPFn from) eventOccursAt from-Generic)
    ((PPFn in) eventOccursAt temporallyIntersects) ((PPFn of) victim)
    (AJP perpetrator victim) (N victim))
   (:GAP (INI perpetrator victim) (DNI victim))
   (:GEN (Poss perpetrator victim))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 4 0)) ((1 6 0)) ((1 5 0)) ((1 1 0)) ((1 4 0) (3 0 0))
   ((1 0 0) (1 4 0)) ((0 0 0) (1 4 0)) ((1 3 0) (1 5 1)) ((1 2 0) (1 4 0))
   ((1 3 0) (1 3 1) (1 4 0)) ((1 2 1) (1 3 0) (1 3 1) (1 4 0)))))

(FNNounSemtrans (TheList) Kidnapping-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kidney") Doctor-TheWord
 (and (isa :NOUN Nephrologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kidney-TheWord (and (isa :NOUN Kidney))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kidney") Transplant-TheWord
 (and (isa :NOUN KidneyTransplantSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kids" "^") Pool-TheWord
 (and (isa :NOUN SwimmingPoolForChildren)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kill") Switch-TheWord (and (isa :NOUN KillSwitch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Killer-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance killers KillingByOrganism :NOUN))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim)) (:OBJECT (NP victim))
   (:OBLIQUE-OBJECT (NP instrument-Generic) (N instrument-Generic victim)
    ((PPFn of) victim))
   (:GAP (DEN causes-Underspecified killers) (INI victim) (DNI victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 0)) ((2 0 0)) ((2 1 0)) ((2 2 0))
   ((2 1 1)))))

(FNNounSemtrans (TheList) Killer-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "killer") Whale-TheWord (and (isa :NOUN KillerWhale))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Killing-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn by) killers) ((PPFn of) victim))
   (:GAP (CNI killers) (DNI killers victim)) (:GEN (Poss victim))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Kiln-TheWord (and (isa :NOUN Kiln)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kilo-TheWord (and (isa :NOUN Kilogram))
 (frame FN_Measure_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn massOfObject))
    ((PPFn of) (InverseBinaryPredicateFn massOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Kilobyte-TheWord (and (isa :NOUN Kilobyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kilogram-TheWord (and (isa :NOUN Kilogram))
 (frame FN_Measure_mass)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn massOfObject)))
   (:OBLIQUE-OBJECT (Num fe_count)
    ((PPFn of) (InverseBinaryPredicateFn massOfObject))
    (NP (InverseBinaryPredicateFn massOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Kilohertz-TheWord (and (isa :NOUN Kilohertz))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kiloliter-TheWord (and (isa :NOUN CubicMeter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kilometer-TheWord (and (isa :NOUN Kilometer))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Num fe_count) (AJP hasPhysicalQuantity)
    ((PPFn of) (InverseBinaryPredicateFn lengthOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DNI fe_count (InverseBinaryPredicateFn lengthOfObject))
    (DEN fe_unit))
   (:NOUN (N (InverseBinaryPredicateFn lengthOfObject)))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "kilometers" "per") Hour-TheWord
 (and (isa :NOUN KilometersPerHour)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kilowatt") Hour-TheWord
 (and (isa :NOUN KilowattHour)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kilowatt-TheWord (and (isa :NOUN Kilowatt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kilt-TheWord (and (isa :NOUN Kilt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2) (2 0 0)) ((0 0 0) (0 1 2))
   ((0 1 0) (0 1 1) (2 0 0)) ((0 1 0) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Kimono-TheWord (and (isa :NOUN Kimono))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    (N mainConstituent))
   (:GAP (DEN itemWorn))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Kin-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Kina-TheWord (and (isa :NOUN Kina-PapuaNewGuinea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kind-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category))
   (:OBLIQUE-OBJECT ((PPingFn of) fe_category) ((PPFn by) fe_item_property)
    ((PPFn of) fe_category fe_subtype)
    (AJP fe_category fe_item_property fe_type_property))
   (:GAP (DNI fe_category) (DEN fe_category fe_subtype))
   (:GEN (Poss fe_category fe_item_property))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 0 0)) ((1 0 0)) ((1 2 1)) ((1 2 0)) ((1 3 0))
   ((1 2 0) (1 3 2)) ((1 2 0) (1 3 1)) ((0 0 0) (3 0 1))
   ((1 3 0) (1 3 1) (1 3 1) (1 3 1) (1 3 1)))))

(FNNounSemtrans (TheList) Kindergarten-TheWord
 (and (isa :NOUN KindergartenInstitution)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kindness-TheWord (and (isa :NOUN GoodWill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kinetic") Energy-TheWord
 (and (isa :NOUN KineticEnergy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "king" "of") England-TheWord
 (and (isa :NOUN KingOfEngland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "king" "of") France-TheWord
 (and (isa :NOUN KingOfFrance)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) King-TheWord (and (isa :NOUN King-HeadOfState))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_governed) ((PPFn of) fe_governed))
   (:GAP (INI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:NOUN (N leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((4 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) King-TheWord (and (isa :NOUN King-ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) King-TheWord (and (isa :NOUN King-TheCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kingdom-TheWord (and (isa :NOUN BiologicalKingdom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kingdom-TheWord (and (isa :NOUN Monarchy))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor)
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor fe_population) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 1) (0 3 0)) ((0 1 1) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Kingfisher-TheWord (and (isa :NOUN Kingfisher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kinsfolk-TheWord
 (and (isa :NOUN Family-SocialEntity)) (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Kinsman-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter relatives))
   (:OBLIQUE-OBJECT ((PPFn of) fe_ego)) (:GAP (DEN fe_alter) (DNI fe_ego))
   (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((0 0 1)) ((3 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Kinswoman-TheWord
 (and (isa :NOUN Family-SocialEntity)) (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego))
   (:OBLIQUE-OBJECT (NP fe_alter) (AJP fe_degree) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0) (1 2 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Kiosk-TheWord (and (isa :NOUN RetailBusinessStand))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kip-TheWord (and (isa :NOUN NewKip-Laos))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kip-TheWord (and (isa :NOUN Sleeping))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (N duration) (NP temporallyIntersects)
    ((PPFn after) temporallyIntersects))
   (:GAP (CNI doneBy)) (:GEN (Poss duration))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Kiss-TheWord
 (and (isa :NOUN Kissing-TouchingLightly)) (frame FN_Manipulation)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Kisser-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Kissing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kitchen") Appliance-TheWord
 (and (isa :NOUN FoodOrDrinkPreparationDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kitchen") Cart-TheWord (and (isa :NOUN KitchenCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kitchen" "furniture") Set-TheWord
 (and (isa :NOUN KitchenSet-Furniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kitchen") Scale-TheWord
 (and (isa :NOUN KitchenScale)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kitchen") Storage-TheWord
 (and (isa :NOUN StorageConstructForKitchen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kitchen") Table-TheWord
 (and (isa :NOUN KitchenTable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kitchen-Table-TheWord (and (isa :NOUN KitchenTable))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kitchen-TheWord (and (isa :NOUN Kitchen))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kitchenette-TheWord (and (isa :NOUN Kitchen))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kitchenware-TheWord
 (and (isa :NOUN KitchenFurnishingsMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kite-TheWord (and (isa :NOUN Kite-TheBird))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kite-TheWord (and (isa :NOUN Kite-TheDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kitten-TheWord (and (isa :NOUN (JuvenileFn Cat)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kitty-TheWord (and (isa :NOUN Cat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kleenex-TheWord (and (isa :NOUN FacialTissue))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knapsack-TheWord (and (isa :NOUN Backpack))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent) (NP fe_relative_location))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Kneecap-TheWord (and (isa :NOUN Kneecap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "knee") Pad-TheWord (and (isa :NOUN KneePad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "knee") Surgery-TheWord (and (isa :NOUN KneeSurgery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knee-TheWord (and (isa :NOUN Knee))
 (frame FN_Body_parts)
 (bindingTemplate (TheList (:GAP (DEN actorPartsInvolved))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knickers-TheWord (and (isa :NOUN Underwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn in) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 2)) ((0 2 2)) ((0 2 1)) ((0 2 0)) ((0 3 3) (2 0 0))
   ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0)) ((0 1 0) (0 2 0)) ((0 2 0) (0 3 1))
   ((0 2 0) (0 2 0) (2 0 0)) ((0 0 0) (0 2 0) (0 2 2) (0 3 1)))))

(FNNounSemtrans (TheList "knife") Sharpener-TheWord
 (and (isa :NOUN KnifeSharpener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knife-TheWord (and (isa :NOUN TableKnife))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knife-TheWord (and (isa :NOUN CarvingKnife))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knife-TheWord (and (isa :NOUN Knife))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knight-TheWord (and (isa :NOUN Knight-ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knight-TheWord (and (isa :NOUN Knight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knitter-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy Knitting :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knitting-TheWord (and (isa :NOUN Knitting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "knitting") Needle-TheWord
 (and (isa :NOUN KnittingNeedle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knob-TheWord (and (isa :NOUN Knob))
 (frame FN_Controller_object)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (VPed deviceUse)
    (VPto deviceUse))
   (:GAP (DEN objectControlled))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Knocker-TheWord (and (isa :NOUN DoorKnocker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knoll-TheWord (and (isa :NOUN Mound-NGA))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn above) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn outside) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Knot-TheWord (and (isa :NOUN Knot)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Know-How-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (VPto fe_behavior_product) (A fe_knowledge)
    (AJP fe_knowledge))
   (:GAP (DEN fe_knowledge) (DNI fe_knowledge affectedAgent)
    (INI affectedAgent))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "knowledge") Base-TheWord
 (and (isa :NOUN KnowledgeBase)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Knowledge-TheWord (and (isa :NOUN AwarenessQuantity))
 (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    (Sfin topicOfIndividual) ((PPingFn of) topicOfIndividual)
    (VPto topicOfIndividual) ((PPFn through) fe_evidence)
    (AVP temporallyIntersects) ((PPFn of) topicOfIndividual situationTopic)
    (AJP subjectOfMentalSituation topicOfIndividual fe_evidence situationTopic)
    (N subjectOfMentalSituation fe_evidence situationTopic)
    ((PPFn about) situationTopic) ((PPFn concerning) situationTopic)
    ((PPFn on) topicOfIndividual situationTopic) ((PPFn in) situationTopic))
   (:GAP (CNI subjectOfMentalSituation topicOfIndividual)
    (DEN topicOfIndividual) (DNI situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 7 1)) ((1 8 0)) ((1 11 1)) ((1 6 1)) ((1 10 0))
   ((1 9 0)) ((1 8 2)) ((1 7 3)) ((1 7 0)) ((1 4 0)) ((1 8 1)) ((1 7 2))
   ((3 0 0)) ((1 1 0)) ((1 2 0)) ((1 6 0)) ((0 0 0)) ((1 11 1) (3 0 0))
   ((1 6 1) (3 0 0)) ((1 9 0) (3 0 0)) ((1 8 2) (3 0 0)) ((0 0 0) (1 6 1))
   ((0 0 0) (1 12 0)) ((0 0 0) (1 9 0)) ((1 6 1) (1 7 0)) ((1 8 1) (3 0 0))
   ((1 11 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 0 0) (1 6 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 6 0)) ((1 1 0) (1 7 0)) ((0 0 0) (1 7 2) (1 9 0))
   ((0 0 0) (1 5 0) (1 6 0)))))

(FNNounSemtrans (TheList) Knuckle-TheWord (and (isa :NOUN Knuckle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Koala-TheWord (and (isa :NOUN Koala)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kohl-TheWord (and (isa :NOUN Eyeliner))
 (frame FN_Body_decoration)
 (bindingTemplate (TheList (:GAP (DEN decorativeObjectsApplied))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "komodo") Dragon-TheWord
 (and (isa :NOUN KomodoDragon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Koruna-TheWord
 (and (isa :NOUN Koruna-Czeckoslovakia)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kraut-TheWord (and (isa :NOUN GermanPerson))
 (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (Srel fe_context_of_acquaintance))
   (:GAP (DEN comesFrom-Generic fe_person))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "krebs") Cycle-TheWord (and (isa :NOUN KrebsCycle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Krypton-TheWord (and (isa :NOUN Krypton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kudos-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo)
    ((PPFn for) recipientOfInfo fe_reason) ((PPFn of) fe_reason))
   (:GAP (2nd objectOfEvaluation)) (:GEN (Poss recipientOfInfo))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "kung") Fu-TheWord (and (isa :NOUN KungFuActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kuvasz-TheWord (and (isa :NOUN Kuvasz))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kuwaiti") Dinar-TheWord
 (and (isa :NOUN Dinar-Kuwait)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kuwaiti-TheWord (and (isa :NOUN KuwaitiPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "kvm") Switch-TheWord (and (isa :NOUN KVMSwitch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kwa-TheWord (and (isa :NOUN Kwa-CongoLanguageFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Kwanza-TheWord (and (isa :NOUN Kwanza-Angola))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lab") Glassware-TheWord
 (and (isa :NOUN LaboratoryGlassware)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lab-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString)
     locationUse))
   (:GAP (DEN eventLocale) (DNI locationUse))))
 (groupPatterns
  (TheSet ((0 1 2)) ((0 1 1)) ((0 0 0)) ((0 0 0) (0 1 0) (0 1 2)))))

(FNNounSemtrans (TheList) Lab-TheWord (and (isa :NOUN Laboratory))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Label-TheWord (and (isa :NOUN Label-IBO))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "label") Maker-TheWord (and (isa :NOUN LabelMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "labor") Day-TheWord (and (isa :NOUN LaborDay-US))
 (frame FN_Commemorative)
 (bindingTemplate
  (TheList
   (:GAP (DEN fe_dedicated_entity) (2nd fe_dedicated_type fe_honored_entity))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Labor-TheWord (and (isa :NOUN Labor-WorkingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Labor-TheWord (and (isa :NOUN WorkingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laboratory") Equipment-TheWord
 (and (isa :NOUN LaboratoryEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laboratory-TheWord (and (isa :NOUN Laboratory))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_container_possessor))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn of) fe_formational_cause) ((PPFn on) fe_relative_location)
    ((PPFn in) fe_relative_location)
    ((PPFn at) fe_container_possessor fe_relative_location)
    (N fe_container_possessor fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString) fe_relative_location locationUse)
    (A fe_container_possessor locationUse) ((PPFn for) locationUse))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString))
    (DNI locationUse) (INC locationUse))
   (:GEN (Poss fe_container_possessor fe_formational_cause))))
 (groupPatterns
  (TheSet ((1 6 5)) ((1 7 1)) ((1 5 1)) ((1 6 2)) ((3 0 1)) ((1 6 1)) ((1 0 0))
   ((1 6 0)) ((1 7 0)) ((1 6 5) (1 8 0)) ((1 4 0) (1 6 5)) ((1 5 1) (1 6 5))
   ((1 4 0) (1 6 3)) ((1 5 1) (1 6 3)) ((1 4 0) (3 0 1)) ((1 0 0) (1 8 0))
   ((1 0 0) (1 6 5)) ((1 0 0) (1 3 0)) ((1 0 0) (1 4 0)) ((1 5 0) (1 6 5))
   ((1 5 0) (1 7 1)) ((0 0 0) (1 6 5)) ((1 6 0) (1 6 5)) ((1 0 0) (1 6 0))
   ((1 4 0) (1 6 5) (3 0 1)) ((1 2 0) (1 6 3) (1 6 5))
   ((1 3 0) (1 6 5) (3 0 0)) ((1 3 0) (1 6 0) (1 6 4))
   ((1 0 0) (1 1 0) (1 7 0)))))

(FNNounSemtrans (TheList "laboratory") Thermometer-TheWord
 (and (isa :NOUN LaboratoryThermometer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "labrador") Retriever-TheWord
 (and (isa :NOUN LabradorRetriever)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lace-TheWord (and (isa :NOUN LaceCloth))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn outfitParts)))
   (:OBLIQUE-OBJECT ((PPFn in) (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts)) (AJP mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 0 0)) ((1 1 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Lace-TheWord (and (isa :NOUN Cord-Textile))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laceration-TheWord (and (isa :NOUN SkinLaceration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lack-TheWord (and (isa :NOUN Deficiency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lack-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn as) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn of) owns) (AVP temporallyIntersects))
   (:GAP (DNI owner) (INI owner)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 1 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Lackey-TheWord (and (isa :NOUN Assistant))
 (frame FN_Subordinates_and_superiors) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lacrimal") Duct-TheWord (and (isa :NOUN TearDuct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lacrimal") Gland-TheWord (and (isa :NOUN TearGland))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lacrimal") Secretion-TheWord
 (and (isa :NOUN Teardrop)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lactation-TheWord
 (and (isa :NOUN MilkSecretionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ladder-TheWord (and (isa :NOUN Ladder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ladle-TheWord (and (isa :NOUN Ladle))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Ladle-TheWord (and (isa :NOUN Ladle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lady-TheWord (and (isa :NOUN FemaleHuman))
 (frame FN_People)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) age fe_descriptor) (NP fe_descriptor)
    (N fe_context_of_acquaintance fe_descriptor) ((PPFn at) fe_descriptor)
    ((PPFn down) fe_descriptor) ((PPFn on) fe_descriptor) (Sfin fe_descriptor)
    ((PPFn from) comesFrom-Generic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    (AJP age fe_context_of_acquaintance fe_descriptor fe_ethnicity
     comesFrom-Generic fe_persistent_characteristic)
    (Sinterrog fe_descriptor fe_persistent_characteristic)
    ((PPingFn with) fe_descriptor fe_persistent_characteristic)
    (VPing fe_descriptor fe_persistent_characteristic)
    ((PPFn of) age fe_descriptor comesFrom-Generic
     fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 10 1)) ((0 13 3)) ((0 9 5)) ((0 13 2)) ((0 9 4)) ((0 9 3))
   ((0 10 0)) ((0 6 0)) ((0 5 0)) ((0 13 1)) ((0 0 1)) ((0 3 0)) ((0 2 0))
   ((0 9 1)) ((0 13 0)) ((0 9 0)) ((0 9 5) (0 12 1)) ((0 9 5) (0 11 1))
   ((0 8 1) (0 9 5)) ((0 9 5) (0 9 5)) ((0 7 0) (0 9 5)) ((0 9 3) (0 9 5))
   ((0 7 0) (0 9 3)) ((0 5 0) (0 9 5)) ((0 3 0) (0 9 5)) ((0 2 1) (0 9 5))
   ((0 9 3) (0 13 1)) ((0 4 0) (0 9 3)) ((0 8 0) (0 12 0)) ((0 1 0) (0 9 2))
   ((0 2 0) (0 9 5)) ((0 8 1) (0 9 1)) ((0 0 0) (0 8 1)) ((0 8 1) (0 9 0))
   ((0 7 0) (0 9 0)) ((0 9 0) (0 10 0)) ((0 0 1) (0 9 0))
   ((0 8 1) (0 9 5) (0 9 5)) ((0 0 1) (0 9 5) (0 9 5))
   ((0 9 3) (0 9 5) (0 11 0)) ((0 0 1) (0 9 3) (0 10 0))
   ((0 9 1) (0 9 5) (0 13 1)) ((0 9 3) (0 9 5) (0 10 1) (0 10 1))
   ((0 0 0) (0 8 0) (0 9 5) (0 9 5)))))

(FNNounSemtrans (TheList) Ladybug-TheWord (and (isa :NOUN Ladybug))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lagoon-TheWord (and (isa :NOUN Lagoon))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N fe_formational_cause (InverseBinaryPredicateFn nameString))
    (AJP parts (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn beside) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 2)) ((0 0 1)) ((0 1 1)) ((0 0 0)) ((2 0 0))
   ((0 1 0)))))

(FNNounSemtrans (TheList) Lake-TheWord (and (isa :NOUN Lake))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) parts) ((PPFn in) fe_relative_location)
    (AJP fe_container_possessor fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString) fe_relative_location)
    (N parts (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn at) fe_relative_location)
    ((PPFn of) parts (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn on) fe_relative_location) (A activeIngredientsOfType))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 0)) ((0 5 2)) ((0 1 0)) ((0 4 0)) ((0 3 2)) ((0 2 4))
   ((0 5 1)) ((0 2 2)) ((0 2 1)) ((0 2 0)) ((2 0 0)) ((0 0 0)) ((0 5 0))
   ((0 3 0)) ((0 1 0) (0 3 1)) ((0 1 0) (0 2 3)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList "lakeland") Terrier-TheWord
 (and (isa :NOUN Terrier-Lakeland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lama-TheWord (and (isa :NOUN Lama-Priest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lamb-TheWord (and (isa :NOUN Lamb-Meat))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Lamb-TheWord (and (isa :NOUN (JuvenileFn Sheep)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lambing-TheWord (and (isa :NOUN BirthEvent))
 (frame FN_Giving_birth) (bindingTemplate (TheList (:SUBJECT (NP birthChild))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "lamboid") Suture-TheWord
 (and (isa :NOUN LambdoidSuture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lamer-TheWord
 (and (isa :NOUN Person)
      ((Kappa (?agent ?lamer)
        (feelsTowardsPersonType ?agent ?lamer (NoAmountFn Desire)))
       Person :NOUN))
 (frame FN_Desirability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lamp-TheWord (and (isa :NOUN ElectricLamp))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lamp-TheWord (and (isa :NOUN LightingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lamppost-TheWord (and (isa :NOUN Lamppost))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lampshade-TheWord (and (isa :NOUN LampShade))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lamster-TheWord (and (isa :NOUN Fugitive))
 (frame FN_Fugitive) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "land") Line-TheWord
 (and (isa :NOUN TelephoneLandLine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "land") Mine-TheWord (and (isa :NOUN LandMine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Land-TheWord
 (and (isa :NOUN GeographicalRegion-Declared)) (frame FN_Locale_by_ownership)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn for) fe_inherent_purpose)
    (A fe_descriptor fe_inherent_purpose owner) (NP fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn off) fe_relative_location))
   (:GAP (DEN eventLocale) (CNI owner) (DNI owner)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 3 0)) ((3 0 0)) ((0 0 0)) ((1 2 2)) ((1 1 0))
   ((1 2 1)) ((1 2 0)) ((1 0 0)) ((0 0 0) (0 0 0)) ((1 2 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Land-TheWord (and (isa :NOUN Ground)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Land-TheWord (and (isa :NOUN RealEstate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Land-TheWord (and (isa :NOUN Soil-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Land-TheWord (and (isa :NOUN LandBody))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A parts) ((PPFn in) fe_container_possessor)
    (AJP fe_descriptor) ((PPFn of) parts fe_descriptor)
    ((PPFn near) fe_relative_location) ((PPFn around) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 0)) ((0 3 1)) ((0 2 0)) ((0 1 0)) ((0 3 0)) ((0 0 0))
   ((0 2 0) (0 4 0)) ((0 2 0) (0 3 1)) ((0 2 0) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Land-TheWord (and (isa :NOUN GeopoliticalRegion))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) parts) ((PPFn with) parts) (AJP fe_descriptor)
    (A fe_container_possessor fe_population)
    ((PPFn of) fe_descriptor (InverseBinaryPredicateFn nameString)
     fe_population)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_descriptor))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 3 1)) ((0 4 1)) ((0 4 0)) ((0 2 0)) ((0 3 0)) ((0 1 0))
   ((0 0 0)) ((0 3 1) (0 5 0)) ((0 4 1) (2 0 0)))))

(FNNounSemtrans (TheList "land" "transportation") Wheel-TheWord
 (and (isa :NOUN LandTransportationWheel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landfill-TheWord (and (isa :NOUN Landfill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "landing") Gear-TheWord
 (and (isa :NOUN AircraftLandingGear)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landing-TheWord
 (and (isa :NOUN Architectural_Structure)) (frame FN_Architectural_part)
 (bindingTemplate (TheList (:GAP (DEN parts)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landing-TheWord (and (isa :NOUN Landing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landing-TheWord (and (isa :NOUN WatercraftLanding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "landline") Telephone-TheWord
 (and (isa :NOUN LandlineTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landlord-TheWord (and (isa :NOUN Landlord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landmark-TheWord
 (and (isa :NOUN Landmark-Underspecified)) (frame FN_Importance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landmass-TheWord (and (isa :NOUN LandBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Landslide-TheWord (and (isa :NOUN Landslide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lane") Divider-TheWord
 (and (isa :NOUN SwimmingPoolLaneDivider)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lane-TheWord (and (isa :NOUN LaneOfRoadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectFoundInLocation) (AVP fe_characteristic)
    ((PPFn between) fe_endpoints) ((PPFn to) to-Generic)
    (AJP fe_characteristic mainConstituent)
    ((PPingFn through) trajectory-Complete) ((PPFn in) fe_relative_location)
    ((PPFn around) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn behind) fe_relative_location) ((PPFn outside) fe_relative_location)
    ((PPFn from) from-Generic)
    (N fe_characteristic (InverseBinaryPredicateFn nameString) deviceUse)
    (VPing deviceUse))
   (:GAP (DEN fe_roadway))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 13 0)) ((0 12 2)) ((0 11 0)) ((0 10 0)) ((0 6 0)) ((0 9 0))
   ((0 8 0)) ((2 0 0)) ((0 12 1)) ((0 3 0)) ((0 2 0)) ((0 4 0)) ((0 0 0))
   ((0 8 0) (0 12 1)) ((0 4 1) (0 8 0)) ((0 4 0) (0 12 2)) ((0 7 0) (0 12 0))
   ((0 1 0) (0 6 0)) ((0 4 0) (0 5 0)) ((0 3 0) (0 4 0)) ((0 2 0) (0 4 0))
   ((0 4 0) (0 12 0)) ((0 4 0) (0 4 0)))))

(FNNounSemtrans (TheList) Language-TheWord (and (isa :NOUN Language))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lantern-TheWord (and (isa :NOUN Lantern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lanthanum-TheWord (and (isa :NOUN Lanthanum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lap-TheWord (and (isa :NOUN Lap-BodyRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laparoscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lapse-TheWord (and (isa :NOUN Lapse)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laptop") Computer-TheWord
 (and (isa :NOUN LaptopComputer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laptop-TheWord (and (isa :NOUN LaptopComputer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Larceny-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn by) fe_specification))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Larceny-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn by) perpetrator) ((PPFn on) victim))
   (:GAP (DNI objectOfPossessionTransfer) (INI victim))
   (:GEN (Poss perpetrator))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Larch-TheWord (and (isa :NOUN LarchTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Larder-TheWord (and (isa :NOUN Pantry))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "large") Intestine-TheWord
 (and (isa :NOUN LargeIntestine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Larva-TheWord (and (isa :NOUN Larva)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laryngopharynx-TheWord (and (isa :NOUN HypoPharynx))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Larynx-TheWord (and (isa :NOUN Larynx))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lasagne-TheWord (and (isa :NOUN Lasagna))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) fe_descriptor)
    (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "laser") Diode-TheWord (and (isa :NOUN LaserDiode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laser-TheWord (and (isa :NOUN LASER-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lash-TheWord (and (isa :NOUN Punishment))
 (frame FN_Corporal_punishment)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) instrument-Generic)
    ((PPFn with) instrument-Generic) (NP eventOccursAt)
    ((PPingFn for) fe_reason) ((PPFn for) fe_reason) ((PPFn up) fe_severity))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 0)) ((0 1 0)) ((0 0 0)) ((0 4 0) (0 5 0))
   ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList "last") Name-TheWord (and (isa :NOUN HumanSurname))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "lateral" "file") Cabinet-TheWord
 (and (isa :NOUN LateralFileCabinet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lateral") Ventricle-TheWord
 (and (isa :NOUN LateralVentricle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Latex-TheWord
 (and (isa :NOUN Rubber-TheNaturalStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lathe-TheWord (and (isa :NOUN Lathe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "latisimus") Dorsi-TheWord
 (and (isa :NOUN LatissimusDorsi)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Latitude-TheWord (and (isa :NOUN LatitudeLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Latrine-TheWord (and (isa :NOUN Latrine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laugh-TheWord (and (isa :NOUN Laugh)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Launch-TheWord
 (and (isa :NOUN ShootingAProjectileWeapon)) (frame FN_Shoot_projectiles)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_projectile)
    (N situationLocation fe_projectile purposeOfEvent))
   (:GAP (INI doneBy) (DNI fe_projectile)) (:NOUN (N fe_projectile))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 1 1)) ((0 0 0) (0 1 2)))))

(FNNounSemtrans (TheList) Launcher-TheWord (and (isa :NOUN MissileLauncher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "launching") Pad-TheWord (and (isa :NOUN LaunchPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laundromat-TheWord (and (isa :NOUN Laundromat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laundry") Bag-TheWord (and (isa :NOUN LaundryBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laundry") Basket-TheWord
 (and (isa :NOUN LaundryBasket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laundry") Detergent-TheWord
 (and (isa :NOUN LaundryDetergent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laundry" "drying") Rack-TheWord
 (and (isa :NOUN ClothesDryingRack)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laundry") Hamper-TheWord
 (and (isa :NOUN LaundryHamper)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "laundry") Room-TheWord (and (isa :NOUN LaundryRoom))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (-- properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laundry-TheWord (and (isa :NOUN LaundryRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Laurel-TheWord (and (isa :NOUN LaurelBush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lava-TheWord (and (isa :NOUN Lava)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lavatory-TheWord (and (isa :NOUN Restroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "law" "enforcement") Agency-TheWord
 (and (isa :NOUN LawEnforcementAgency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "law") Firm-TheWord (and (isa :NOUN LawFirm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "law") School-TheWord (and (isa :NOUN LawSchool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Law-TheWord (and (isa :NOUN Law)) (frame FN_Law)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) lawProscribesActType) (AJP fe_jurisdiction)
    ((PPFn of) lawProscribesActType fe_jurisdiction)
    ((PPFn on) lawProscribesActType fe_required) ((PPFn in) startingDate)
    (A fe_jurisdiction activeIngredientsOfType)
    (N activeIngredientsOfType deviceUse) (VPing fe_required deviceUse))
   (:GAP (DEN fe_law) (DNI fe_required))
   (:GEN (Poss performedBy fe_jurisdiction))))
 (groupPatterns
  (TheSet ((0 7 1)) ((0 6 1)) ((0 5 1)) ((0 3 1)) ((2 0 1)) ((0 2 1)) ((0 1 0))
   ((0 5 0)) ((0 2 0)) ((0 0 0)) ((2 0 0)) ((0 5 1) (0 7 0)) ((0 3 1) (0 5 1))
   ((0 3 1) (0 5 0)) ((0 3 0) (0 6 0)) ((0 3 0) (2 0 1))
   ((0 3 0) (0 4 0) (0 5 1)))))

(FNNounSemtrans (TheList) Law-TheWord (and (isa :NOUN LawOfNature))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Law-TheWord (and (isa :NOUN LegalCode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Law-TheWord
 (and (isa :NOUN NaturalLaw-CodeOfConduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lawlessness-TheWord (and (isa :NOUN Anarchy))
 (frame FN_Chaos)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (Srel fe_descriptor)
    ((PPFn of) objectActedOn) (N objectActedOn) ((PPFn in) eventOccursAt)
    ((PPFn within) eventOccursAt))
   (:GAP (INI objectActedOn) (DEN objectActedOn hasState))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 4 0)) ((0 3 0) (0 4 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 2 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Lawmaker-TheWord (and (isa :NOUN Legislator))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP fe_governed)) (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "lawn") Chair-TheWord
 (and (isa :NOUN LawnChair-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lawn") Edging-TheWord (and (isa :NOUN LawnEdging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lawn") Furniture-TheWord
 (and (isa :NOUN LawnFurniture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lawn") Mower-TheWord (and (isa :NOUN LawnMower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lawn") Sprinkler-TheWord
 (and (isa :NOUN LawnSprinkler)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lawn-TheWord (and (isa :NOUN Lawn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lawnmower-TheWord (and (isa :NOUN LawnMower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lawsuit-TheWord (and (isa :NOUN Lawsuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lawyer-TheWord (and (isa :NOUN Lawyer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lawyer-TheWord (and (isa :NOUN Lawyer))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn at) employer) ((PPFn for) employer)
    ((PPFn from) employer) ((PPFn of) employer) ((PPFn with) employer)
    (NP fe_person) (N employer activeIngredientsOfType)
    (A fe_rank activeIngredientsOfType) (AJP fe_rank activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 7 1)) ((0 0 0)) ((1 5 0)) ((3 0 0)) ((1 3 0)) ((1 2 0))
   ((1 1 0)) ((1 0 0)) ((1 6 0)) ((0 0 0) (1 6 1)) ((0 0 0) (1 8 1))
   ((1 6 1) (4 0 0)) ((1 6 1) (3 0 0)) ((1 7 0) (3 0 0)) ((1 6 0) (1 7 0))
   ((1 0 0) (4 0 0)) ((3 0 0) (4 0 0)) ((0 0 0) (1 1 0)) ((1 6 0) (4 0 0))
   ((1 6 1) (1 7 0) (4 0 0)) ((1 7 1) (3 0 0) (4 0 0))
   ((1 1 0) (1 6 1) (1 8 0)) ((0 0 0) (1 4 0) (1 8 0)))))

(FNNounSemtrans (TheList) Lay-Off-TheWord (and (isa :NOUN EmployeeLayoff))
 (frame FN_Firing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lay-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Layer-TheWord (and (isa :NOUN Layer))
 (frame FN_Part_ordered_segments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Layman-TheWord (and (isa :NOUN Novice))
 (frame FN_Expertise) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Layoff-TheWord
 (and (isa :NOUN DischargeWithPrejudice)) (frame FN_Firing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lead" "acid") Battery-TheWord
 (and (isa :NOUN LeadAcidBattery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lead-TheWord (and (isa :NOUN CriminalInvestigation))
 (frame FN_Criminal_investigation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lead-TheWord
 (and (isa :NOUN (NthInSeriesFn (SomeFn Series) 1))) (frame FN_First_rank)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lead-TheWord (and (isa :NOUN Lead)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lead-TheWord (and (isa :NOUN PencilLead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lead-TheWord (and (isa :NOUN Actor))
 (frame FN_Performers_and_roles)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) fe_performance) (AJP activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:APPOSITIVE (NP performedBy))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((3 0 0)) ((1 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Leader-TheWord
 (and (isa :NOUN (NthInSeriesFn (SomeFn Series) 1))) (frame FN_First_rank)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leader-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn from) fe_descriptor) (N fe_governed)
    (NP fe_governed) ((PPFn of) fe_governed)
    ((PPFn in) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (A fe_descriptor fe_domain fe_governed activeIngredientsOfType)
    (AJP fe_descriptor fe_domain duration fe_governed activeIngredientsOfType))
   (:GAP (INI processTypeForAccomplishmentType fe_governed) (DNI fe_governed)
    (DEN leadersOfMovement))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 4 0)) ((3 0 0)) ((1 3 0)) ((0 0 0)) ((1 2 0)) ((1 6 3)) ((1 5 2))
   ((1 1 0)) ((1 6 1)) ((1 6 0)) ((1 5 0)) ((1 1 0) (1 6 4)) ((3 0 0) (4 0 0))
   ((0 0 1) (1 3 0)) ((0 0 1) (1 1 0)) ((1 1 0) (4 0 0)) ((1 5 2) (4 0 0))
   ((1 6 2) (3 0 0)) ((1 5 1) (3 0 0)) ((1 5 1) (1 6 3)) ((1 0 0) (1 5 3))
   ((1 5 0) (4 0 0)) ((0 0 1) (0 0 1) (1 3 0)) ((0 0 1) (1 1 0) (1 6 0)))))

(FNNounSemtrans (TheList) Leadership-TheWord (and (isa :NOUN Leadership))
 (frame FN_Leadership)
 (bindingTemplate (TheList (:GAP (DNI fe_governed) (DEN leadersOfMovement))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leaf-TheWord (and (isa :NOUN Leaf)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) League-TheWord (and (isa :NOUN League-Distance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) League-TheWord (and (isa :NOUN SportsLeague))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) League-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DNI hasMembers) (DEN fe_organization))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Leap-TheWord (and (isa :NOUN LeapYear))
 (frame FN_Calendric_unit) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "leap") Year-TheWord (and (isa :NOUN LeapYear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Learning-TheWord (and (isa :NOUN Learning))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lease") Option-TheWord (and (isa :NOUN LeaseOption))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lease-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lease-TheWord (and (isa :NOUN LeaseDocument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leash-TheWord (and (isa :NOUN AnimalLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "leather" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Leather)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leather-TheWord (and (isa :NOUN Leather))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "leave" "of") Absence-TheWord
 (and (isa :NOUN LeaveOfAbsence)) (frame FN_Temporary_leave)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn as) processTypeForAccomplishmentType)
    ((PPFn from) processTypeForAccomplishmentType) (AJP fe_depictive duration)
    (VPto purposeOfEvent) ((PPFn in) temporallyIntersects)
    ((PPFn at) temporallyIntersects))
   (:GAP (INI duration) (DNI processTypeForAccomplishmentType fe_person))
   (:GEN (Poss duration))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (1 5 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 2 1)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 1 0) (1 4 0)) ((0 0 0) (1 3 0) (1 4 0))
   ((0 0 0) (0 0 0) (1 2 1)) ((0 0 0) (1 2 0) (1 3 0))
   ((0 0 0) (1 1 0) (1 2 0)) ((0 0 0) (0 0 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Leave-TheWord (and (isa :NOUN GrantingPermission))
 (frame FN_Grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leave-TheWord (and (isa :NOUN LeaveOfAbsence))
 (frame FN_Temporary_leave)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person)) (:OBJECT (NP temporallyIntersects))
   (:OBLIQUE-OBJECT ((PPFn from) processTypeForAccomplishmentType)
    ((PPFn for) duration) ((PPFn until) duration) (VPto purposeOfEvent)
    (N duration activeIngredientsOfType) (AJP activeIngredientsOfType))
   (:GAP (INI duration) (CNI fe_person)
    (DNI processTypeForAccomplishmentType fe_person))
   (:GEN (Poss duration fe_person))))
 (groupPatterns
  (TheSet ((2 4 1)) ((4 0 1)) ((2 5 0) (4 0 0)) ((2 2 0) (2 4 1))
   ((0 0 0) (2 4 1)) ((0 0 0) (4 0 0)) ((0 0 0) (2 4 0))
   ((0 0 0) (2 1 0) (2 4 1)) ((0 0 0) (2 0 0) (2 3 0))
   ((0 0 0) (0 0 0) (1 0 0)) ((0 0 0) (0 0 0) (2 3 0)))))

(FNNounSemtrans (TheList "lebanese") Pound-TheWord
 (and (isa :NOUN Pound-Lebanon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lectern-TheWord (and (isa :NOUN Lectern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lector-TheWord (and (isa :NOUN Lecturer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lecture") Hall-TheWord (and (isa :NOUN LectureHall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lecture-TheWord (and (isa :NOUN Lecture-CW))
 (frame FN_Speak_on_topic)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn for) spectators) ((PPFn to) spectators)
    ((PPFn at) eventOccursAt) ((PPFn by) performedBy) ((PPFn from) performedBy)
    ((PPFn of) performedBy temporallyIntersects) ((PPFn on) situationTopic)
    (N fe_occasion situationTopic)
    ((PPFn in) eventOccursAt temporallyIntersects situationTopic)
    ((PPFn about) situationTopic) (AJP fe_manner situationTopic))
   (:GAP (INI spectators) (DNI performedBy) (CNI performedBy))
   (:GEN (Poss spectators performedBy))))
 (groupPatterns
  (TheSet ((1 8 2)) ((1 9 0)) ((3 0 1)) ((1 5 0)) ((1 4 0)) ((1 3 0)) ((0 0 0))
   ((1 6 0)) ((1 1 0)) ((1 6 0) (1 6 0)) ((1 4 0) (1 6 0)) ((1 4 0) (1 9 0))
   ((0 0 0) (1 6 0)) ((0 0 0) (1 9 0)) ((0 0 0) (1 10 1)) ((1 2 0) (1 8 2))
   ((1 8 0) (3 0 1)) ((0 0 0) (1 8 0)) ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((1 7 0) (3 0 1)) ((1 6 0) (3 0 0)) ((1 7 1) (3 0 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (1 7 0)) ((1 1 0) (1 10 0)) ((0 0 0) (1 6 0) (1 8 0))
   ((0 0 0) (1 2 0) (1 6 0)) ((1 2 0) (1 8 1) (3 0 1))
   ((1 5 1) (1 7 0) (3 0 1)) ((1 7 0) (1 8 1) (3 0 1))
   ((1 3 0) (1 7 0) (1 8 1)) ((0 0 0) (1 6 0) (3 0 0))
   ((0 0 0) (1 8 2) (3 0 0)) ((0 0 0) (1 1 0) (1 7 1))
   ((0 0 0) (1 0 0) (1 6 0)) ((0 0 0) (1 1 0) (3 0 1))
   ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Lecturer-TheWord (and (isa :NOUN Lecturer))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP (InverseBinaryPredicateFn teacherTypeOfField) instructor))
   (:OBLIQUE-OBJECT ((PPFn with) fe_depictive) ((PPFn at) eventOccursAt)
    ((PPFn from) eventOccursAt) ((PPFn of) eventOccursAt)
    ((PPFn to) eventOccursAt)
    (N eventOccursAt educationLevel
     (InverseBinaryPredicateFn teacherTypeOfField))
    (AJP fe_depictive (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn on) (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPingFn in) (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn for) duration (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPingFn of) (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPingFn on) (InverseBinaryPredicateFn teacherTypeOfField))
    (NP instructor) (AVP temporallyIntersects)
    ((PPFn in) eventOccursAt (InverseBinaryPredicateFn teacherTypeOfField)
     temporallyIntersects))
   (:GAP (DNI studentOf (InverseBinaryPredicateFn teacherTypeOfField))
    (DEN instructor))
   (:NOUN (N instructor)) (:GEN (Poss eventOccursAt studentOf))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 11 0)) ((1 7 0)) ((1 14 1)) ((1 9 1)) ((1 5 2))
   ((1 6 1)) ((4 0 1)) ((1 4 0)) ((1 3 0)) ((1 1 0)) ((0 0 1) (1 10 0))
   ((0 0 0) (1 12 0)) ((0 0 1) (1 5 2)) ((0 0 1) (1 6 1)) ((1 5 2) (4 0 1))
   ((0 0 1) (4 0 1)) ((0 0 1) (1 5 1)) ((0 0 1) (1 14 0)) ((0 0 1) (1 2 0))
   ((1 5 0) (3 0 0)) ((1 14 1) (4 0 0)) ((1 1 0) (1 7 0)) ((1 1 0) (1 14 1))
   ((0 0 1) (1 1 0)) ((1 9 0) (4 0 1)) ((1 0 0) (1 6 1))
   ((0 0 1) (1 4 0) (1 14 2)) ((0 0 1) (1 7 0) (1 14 0))
   ((0 0 1) (1 1 0) (1 8 0)) ((0 0 1) (1 1 0) (1 14 1))
   ((1 3 0) (1 12 0) (4 0 1)) ((0 0 1) (1 5 2) (1 6 0))
   ((0 0 1) (1 1 0) (1 6 0)) ((0 0 1) (1 1 0) (1 14 1) (1 14 2))
   ((0 0 1) (1 1 0) (1 13 0) (1 14 1)) ((0 0 1) (0 0 1) (1 1 0) (1 7 0))
   ((1 0 0) (1 5 2) (1 6 0) (1 6 0)))))

(FNNounSemtrans (TheList "led" "computer") Printer-TheWord
 (and (isa :NOUN ComputerPrinter-LED)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ledge-TheWord (and (isa :NOUN Ledge-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ledger-TheWord (and (isa :NOUN Ledger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "left") Atrium-TheWord (and (isa :NOUN LeftAtrium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "left" "coronary") Artery-TheWord
 (and (isa :NOUN LeftCoronaryArtery-MainTrunk)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "left" "gastric") Artery-TheWord
 (and (isa :NOUN LeftGastricArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "left" "gastric") Vein-TheWord
 (and (isa :NOUN LeftGastricVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "left") Hemisphere-TheWord
 (and (isa :NOUN (LeftObjectOfPairFn CerebralHemisphere))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Left-TheWord (and (isa :NOUN Turning))
 (frame FN_Change_direction) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Left-TheWord (and (isa :NOUN LeftObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Left-TheWord (and (isa :NOUN LeftSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Left-TheWord (and (isa :NOUN Democrat))
 (frame FN_People_along_political_spectrum)
 (bindingTemplate (TheList (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "left") Ventricle-TheWord
 (and (isa :NOUN LeftVentricle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leftist-TheWord (and (isa :NOUN Leftist))
 (frame FN_People_along_political_spectrum) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "leg") Bone-TheWord (and (isa :NOUN LegBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leg-TheWord (and (isa :NOUN Leg))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leg-TheWord (and (isa :NOUN PantLeg))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts)) (AJP mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Leg-TheWord (and (isa :NOUN LegOfPieceOfFurniture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leg-TheWord (and (isa :NOUN ShapedObject))
 (frame FN_Shaped_part)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "legal") Code-TheWord (and (isa :NOUN LegalCode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "legal") Document-TheWord
 (and (isa :NOUN LegalDocument)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "legal") Holiday-TheWord
 (and (isa :NOUN LegalHoliday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "legal") Pad-TheWord (and (isa :NOUN LegalPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Legend-TheWord (and (isa :NOUN Legend))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leggings-TheWord (and (isa :NOUN Legging))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    ((PPFn with) subRegions) (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 2)) ((0 2 1)) ((0 0 0)) ((0 2 1) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 2 2)) ((0 0 0) (0 2 1))
   ((0 0 0) (0 1 0) (0 2 1)) ((0 0 2) (0 2 0) (0 2 1))
   ((0 0 0) (0 0 2) (0 2 1)) ((0 0 0) (0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Leggings-TheWord (and (isa :NOUN Legging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Legislator-TheWord (and (isa :NOUN Legislator))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn from) fe_descriptor) (Srel fe_descriptor)
    (AJP fe_descriptor fe_domain activeIngredientsOfType))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 2 2)) ((3 0 0)) ((1 1 0)) ((1 2 0)) ((0 0 0) (1 2 1))
   ((1 0 0) (1 2 2)))))

(FNNounSemtrans (TheList) Legislature-TheWord
 (and (isa :NOUN LegislativeOrganization)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_governed)) (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Lego-TheWord (and (isa :NOUN Lego-TheToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Legume-TheWord
 (and (isa :NOUN (FruitFn Legume-ThePlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Legume-TheWord (and (isa :NOUN Legume-ThePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leguminosae-TheWord (and (isa :NOUN Legume-ThePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Legwarmers-TheWord (and (isa :NOUN Legging))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Lek-TheWord (and (isa :NOUN Lek-Albania))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lemon") Juice-TheWord (and (isa :NOUN LemonJuice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lemon-TheWord (and (isa :NOUN (FruitFn LemonTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lemon-TheWord (and (isa :NOUN LemonTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lemon") Zester-TheWord (and (isa :NOUN LemonZester))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lemonade-TheWord (and (isa :NOUN Lemonade))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lempira-TheWord (and (isa :NOUN Lempira-Honduras))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Length-TheWord (and (isa :NOUN Length))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP quantityMeasured (InverseBinaryPredicateFn lengthOfObject)))
   (:OBLIQUE-OBJECT (AJP quantityMeasured) (N quantityMeasured)
    (NP hasPhysicalQuantity quantityMeasured)
    ((PPFn of) quantityMeasured (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN hasPhysicalQuantity) (2nd quantityMeasured)
    (DNI (InverseBinaryPredicateFn lengthOfObject)))
   (:GEN (Poss (InverseBinaryPredicateFn lengthOfObject)))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 3 0)) ((0 0 1)) ((3 0 0)) ((1 2 0) (1 3 1))
   ((0 0 1) (1 3 0)) ((0 0 0) (1 3 1)) ((0 0 1) (1 2 1)) ((0 0 1) (1 1 0))
   ((0 0 1) (1 0 0)) ((1 2 0) (1 3 0)) ((1 0 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Leo-TheWord (and (isa :NOUN Leo-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leopard-TheWord (and (isa :NOUN Leopard))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lepidopterous") Insect-TheWord
 (and (isa :NOUN Lepidopteran)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leprosy-TheWord (and (isa :NOUN Leprosy))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) (NP objectActedOn)
    ((PPFn in) objectActedOn))
   (:GAP (DEN infects) (DNI objectActedOn) (INI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Lesbian-TheWord
 (and (isa :NOUN (ResidentFn Lesbos-Island-Greece))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lesbian-TheWord
 (and (isa :NOUN HomosexualFemaleHuman)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "letter") Opener-TheWord
 (and (isa :NOUN LetterOpener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Letter-TheWord (and (isa :NOUN Letter-Alphabetic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Letter-TheWord (and (isa :NOUN LetterCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Letter-TheWord (and (isa :NOUN Letter-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP authorOfLiteraryWork-CW))
   (:OBLIQUE-OBJECT (NP authorOfLiteraryWork-CW)
    ((PPFn from) authorOfLiteraryWork-CW) ((PPFn to) beneficiary)
    (VPto beneficiary) (AJP fe_genre) ((PPFn earlier) startingDate))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 1 0)) ((0 0 0)) ((3 0 0))
   ((1 0 0) (1 2 0) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Lettuce-TheWord (and (isa :NOUN Lettuce-Foodstuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Lettuce-TheWord (and (isa :NOUN LettucePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leukemia-TheWord (and (isa :NOUN Leukemia))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leukocyte-TheWord (and (isa :NOUN WhiteBloodCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lev-TheWord (and (isa :NOUN Lev-Bulgaria))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Level-TheWord (and (isa :NOUN LevelOfAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP eventOccursAt)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Level-TheWord (and (isa :NOUN Height))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP eventOccursAt quantityMeasured)
    ((PPFn of) (InverseBinaryPredicateFn heightOfObject))
    (N (InverseBinaryPredicateFn heightOfObject)))
   (:GAP (DEN hasPhysicalQuantity)
    (DNI quantityMeasured (InverseBinaryPredicateFn heightOfObject)))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Level-TheWord
 (and (isa :NOUN PersonTypeByPositionInOrg)) (frame FN_Rank)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfStateChange) (AJP fe_rank)
    (N objectOfStateChange fe_rank))
   (:GAP (DEN fe_rank) (2nd fe_rank) (DNI objectOfStateChange fe_rank))
   (:NOUN (N objectOfStateChange)) (:GEN (Poss fe_rank))
   (:APPOSITIVE (NP fe_rank))))
 (groupPatterns
  (TheSet ((1 0 0)) ((3 0 0)) ((4 0 0)) ((1 2 1)) ((1 1 0)) ((1 0 0) (5 0 0))
   ((1 0 0) (1 1 0)) ((0 0 0) (1 2 1)) ((1 2 1) (3 0 0)) ((1 1 0) (3 0 0))
   ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Lever-TheWord (and (isa :NOUN Lever)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Leverage-TheWord (and (isa :NOUN Leverage-Financial))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Levy-TheWord (and (isa :NOUN Levy-Charging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lexical") Database-TheWord
 (and (isa :NOUN LexicalDatabase-CW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lexicographer-TheWord (and (isa :NOUN Lexicographer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lhasa-TheWord (and (isa :NOUN LhasaApso))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liabilities-TheWord
 (and (isa :NOUN Liability-Obligation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liberal-TheWord (and (isa :NOUN Progressivism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "liberian") Dollar-TheWord
 (and (isa :NOUN Dollar-Liberia)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Libra-TheWord (and (isa :NOUN Libra-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Librarian-TheWord (and (isa :NOUN Librarian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Library-TheWord (and (isa :NOUN LibrarySpace))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Library-TheWord
 (and (isa :NOUN ComputerProgramLibrary)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Library-TheWord (and (isa :NOUN LibraryRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "libyan") Dinar-TheWord (and (isa :NOUN Dinar-Libya))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Licence-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "license") Plate-TheWord
 (and (isa :NOUN LicensePlate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "license" "plate") Frame-TheWord
 (and (isa :NOUN LicensePlateFrame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) License-TheWord (and (isa :NOUN License-IBO))
 (frame FN_Documents)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_right))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) License-TheWord
 (and (isa :NOUN License-LegalAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "licensed" "practical") Nurse-TheWord
 (and (isa :NOUN PracticalNurse)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lid-TheWord (and (isa :NOUN ContainerLid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lie-TheWord
 (and (isa :NOUN PropositionalInformationThing)
      (relationExistsInstance containsInfoPropositional-IBT Lying :NOUN))
 (frame FN_Prevarication)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy)) (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn about) situationTopic)
    ((PPFn of) performedBy situationTopic) ((PPingFn about) situationTopic))
   (:GAP (DNI situationTopic))))
 (groupPatterns
  (TheSet ((2 2 0)) ((2 1 1)) ((2 0 0)) ((2 1 0)) ((0 0 0))
   ((0 0 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Liechtensteiner-TheWord
 (and (isa :NOUN LiechtensteinPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lien-TheWord (and (isa :NOUN Lien)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lienal") Artery-TheWord
 (and (isa :NOUN SplenicArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Life-Cycle-TheWord
 (and (isa :NOUN BiologicalLifeCycle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "life") Cycle-TheWord
 (and (isa :NOUN BiologicalLifeCycle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "life") Insurance-TheWord
 (and (isa :NOUN LifeInsurance)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "life") Jacket-TheWord (and (isa :NOUN LifeJacket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "life") Preserver-TheWord
 (and (isa :NOUN LifePreserver)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "life") Raft-TheWord (and (isa :NOUN Lifeboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Life-TheWord (and (isa :NOUN Life))
 (frame FN_Biological_entity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn on) fe_descriptor))
   (:GAP (DEN fe_organism))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Life-TheWord (and (isa :NOUN Enthusiasm))
 (frame FN_Gusto)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBJECT (NP fe_person) (Sinterrog fe_person))
   (:OBLIQUE-OBJECT (AJP fe_degree))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((1 1 0) (2 0 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Life-TheWord (and (isa :NOUN LifeImprisonment))
 (frame FN_Imprisonment)
 (bindingTemplate
  (TheList (:SUBJECT (NP captive)) (:GAP (DNI performedBy) (INI fe_prison))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Life-TheWord (and (isa :NOUN Lifetime))
 (frame FN_Timespan)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_descriptor) ((PPFn in) fe_descriptor)
    ((PPFn with) fe_descriptor) ((PPFn till) duration) (VPbrst hasState)
    (N hasState) ((PPFn of) hasState) (Sfin hasState) (VPfin hasState)
    (VPing hasState)
    (A fe_descriptor duration (InverseBinaryPredicateFn parts))
    (AJP fe_descriptor duration (InverseBinaryPredicateFn parts)))
   (:GAP (INI hasState))))
 (groupPatterns
  (TheSet ((0 11 2)) ((0 9 0)) ((0 8 0)) ((0 7 0)) ((0 6 0)) ((0 5 0))
   ((0 3 0)) ((0 11 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 11 0))
   ((0 10 1) (0 10 2)) ((0 4 0) (0 11 1)) ((0 10 0) (0 10 2)))))

(FNNounSemtrans (TheList) Lifeboat-TheWord (and (isa :NOUN Lifeboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lifeguard-TheWord (and (isa :NOUN Lifeguard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lift-TheWord (and (isa :NOUN Elevator))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lifting-TheWord
 (and (isa :NOUN (CausingFn EndingASituation))) (frame FN_Cause_to_end)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_process hasState))
   (:GAP (CNI doneBy))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Ligament-TheWord (and (isa :NOUN Ligament))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ligation") Device-TheWord
 (and (isa :NOUN LigationDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "light" "bulb") Filament-TheWord
 (and (isa :NOUN Filament-LightBulb)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "light") Bulb-TheWord
 (and (isa :NOUN LightBulb-Incandescent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "light") Bulb-TheWord (and (isa :NOUN Lightbulb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "light" "emitting") Diode-TheWord
 (and (isa :NOUN LightEmittingDiode)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "light") Switch-TheWord
 (and (isa :NOUN LightSwitchOnWall)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Light-TheWord (and (isa :NOUN VisibleLight))
 (frame FN_Location_of_light)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter)) (:OBLIQUE-OBJECT (Poss fe_ground))
   (:GAP (DNI focalSubject fe_ground) (DEN fe_light))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "light") Year-TheWord (and (isa :NOUN LightYear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Light-Year-TheWord (and (isa :NOUN UnitOfDistance))
 (frame FN_Measure_linear_extent) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lighthouse-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lighting") Fixture-TheWord
 (and (isa :NOUN LightFixture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lightning-TheWord (and (isa :NOUN LightningEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lignite-TheWord (and (isa :NOUN Lignite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Likelihood-TheWord
 (and (isa :NOUN Likelihood-QuantityType)) (frame FN_Likelihood)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Sub situationConstituents) (AJP fe_degree)
    ((PPFn of) fe_hypothetical_event) ((PPingFn of) fe_hypothetical_event)
    (Sfin fe_hypothetical_event) (N fe_hypothetical_event)
    ((PPFn for) fe_hypothetical_event))
   (:GEN (Poss fe_hypothetical_event))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 6 0)) ((0 5 0)) ((0 1 0) (0 4 0))
   ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0)) ((0 1 0) (0 3 0) (1 0 0))
   ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Likelihood-TheWord
 (and (isa :NOUN Probability-QuantityType)) (frame FN_Probability)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lilac-TheWord (and (isa :NOUN Lilac)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lilangeni-TheWord
 (and (isa :NOUN Lilangeni-Swaziland)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Limb-TheWord (and (isa :NOUN Limb-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    (N fe_descriptor ownerOfProprietaryThing)
    ((PPFn of) ownerOfProprietaryThing) ((PPFn from) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (CNI ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing) (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 1)) ((1 0 0)) ((1 0 1) (1 3 0))
   ((1 1 0) (3 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 1 1)) ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Limb-TheWord (and (isa :NOUN TreeBranch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "limbic") System-TheWord
 (and (isa :NOUN LimbicSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lime") Juice-TheWord (and (isa :NOUN LimeJuice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lime-TheWord (and (isa :NOUN (FruitFn LimeTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lime-TheWord (and (isa :NOUN LimeTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Limekiln-TheWord (and (isa :NOUN Limekiln))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Limerick-TheWord (and (isa :NOUN Poem-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Limestone-TheWord (and (isa :NOUN Limestone))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Limousine-TheWord (and (isa :NOUN Limousine))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Linden-TheWord (and (isa :NOUN LindenTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "line" "replaceable") Unit-TheWord
 (and (isa :NOUN LineReplaceableUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord
 (and (isa :NOUN Boundary-Underspecified)) (frame FN_Boundary)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn between) fe_entities))
   (:GAP (DEN fe_boundary))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Line-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord (and (isa :NOUN ViolatingAnObligation))
 (frame FN_Compliance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord
 (and (isa :NOUN ComplianceStatusAttribute)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord (and (isa :NOUN LineOfObjects))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord (and (isa :NOUN LinearObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord (and (isa :NOUN ProductLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Line-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_endpoints) ((PPFn into) to-Generic)
    ((PPFn to) to-Generic)
    ((PPFn through) trajectory-Complete fe_relative_location)
    ((PPFn at) to-Generic fe_relative_location) (Poss fe_relative_location)
    ((PPFn from) from-Generic)
    (N fe_endpoints mainConstituent (InverseBinaryPredicateFn nameString)
     fe_relative_location deviceUse)
    (AJP fe_characteristic lengthOfObject (InverseBinaryPredicateFn nameString)
     fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 7 4)) ((0 8 4)) ((0 8 3)) ((0 3 0)) ((0 7 2)) ((0 7 1)) ((0 2 0))
   ((0 0 0)) ((0 6 0) (0 7 4)) ((0 7 3) (0 7 4)) ((0 7 2) (0 8 4))
   ((0 5 0) (0 7 2)) ((0 4 1) (0 7 2)) ((0 2 0) (0 7 4)) ((0 1 0) (0 7 4))
   ((0 2 0) (0 6 0)) ((0 2 0) (0 8 2)) ((0 0 0) (0 7 2)) ((0 7 4) (0 8 0))
   ((0 1 0) (0 8 0)) ((0 6 0) (0 7 4) (0 8 1)) ((0 3 1) (0 4 0) (0 7 2))
   ((0 7 0) (0 7 3) (0 7 4)))))

(FNNounSemtrans (TheList) Line-TheWord (and (isa :NOUN Line)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Num fe_count) (A fe_shape_prop) (AJP fe_shape_prop)
    ((PPFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 2 0) (0 3 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList "linear" "power") Supply-TheWord
 (and (isa :NOUN LinearPowerSupply)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "linear") Unit-TheWord
 (and (isa :NOUN UnitOfDistance)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Linebacker-TheWord
 (and (isa :NOUN FootballLinebacker)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Linen-TheWord (and (isa :NOUN LinenCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liner-TheWord (and (isa :NOUN LiningOfGarment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liner-TheWord (and (isa :NOUN OceanLiner))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lingerie-TheWord (and (isa :NOUN Lingerie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "lingual") Artery-TheWord
 (and (isa :NOUN LingualArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Linguist-TheWord (and (isa :NOUN Linguist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Linguistics-TheWord (and (isa :NOUN Linguistics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Cloth-TheWord (and (isa :NOUN Lining-Cloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lining-TheWord
 (and (isa :NOUN Lining-ProtectiveCovering)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lining-TheWord (and (isa :NOUN LiningOfGarment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Link-TheWord (and (isa :NOUN Junction-Connector))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Link-TheWord
 (and (isa :NOUN DeterminingInterrelationship))
 (frame FN_Make_cognitive_connection)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_concepts))
   (:GAP (INI subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Linoleum-TheWord (and (isa :NOUN Linoleum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lint") Brush-TheWord (and (isa :NOUN LintBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lion-TheWord (and (isa :NOUN Lion))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lip") Balm-TheWord (and (isa :NOUN LipBalm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lip") Gloss-TheWord (and (isa :NOUN LipGloss))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lip") Liner-TheWord (and (isa :NOUN LipLiner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lip-TheWord (and (isa :NOUN Lip-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 1)) ((1 0 0)) ((1 0 1) (3 0 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 0 1) (3 0 0)) ((1 0 0) (1 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Lipid-TheWord (and (isa :NOUN Lipid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liposuction-TheWord
 (and (isa :NOUN LiposuctionSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lipstick-TheWord (and (isa :NOUN Lipstick))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor))
   (:GEN (Poss objectDecorated))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Lipstick-TheWord (and (isa :NOUN Lipstick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "liquid" "laundry") Detergent-TheWord
 (and (isa :NOUN LiquidLaundryDetergent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "liquid") Product-TheWord
 (and (isa :NOUN LiquidTangibleArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "liquid" "shoe") Polish-TheWord
 (and (isa :NOUN ShoePolish-Liquid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liquid-TheWord (and (isa :NOUN Liquid-StateOfMatter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liquid-TheWord (and (isa :NOUN LiquidTangibleThing))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liquid-TheWord (and (isa :NOUN Liquid-StateOfMatter))
 (frame FN_Substance_by_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liquidation-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liquidator-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lira-TheWord (and (isa :NOUN Lira-Italy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lira-TheWord (and (isa :NOUN Lira-Turkey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) List-TheWord (and (isa :NOUN List-Information))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) List-TheWord (and (isa :NOUN List-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP authorOfLiteraryWork-CW))
   (:OBLIQUE-OBJECT (AJP fe_text) ((PPFn of) parts situationTopic))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((1 1 1)) ((1 0 0)) ((1 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Listing-TheWord
 (and (isa :NOUN (MakingAbstractFn List-Information))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Litchi-TheWord (and (isa :NOUN (FruitFn LycheeTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Litchi-TheWord (and (isa :NOUN LycheeTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liter-TheWord (and (isa :NOUN Liter))
 (frame FN_Measure_volume) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "literary") Composition-TheWord
 (and (isa :NOUN LiteraryWork-CW)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Literate-TheWord (and (isa :NOUN LiteratePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Literature-TheWord (and (isa :NOUN FieldOfStudy))
 (frame FN_Fields) (bindingTemplate (TheList (:GAP (DEN topicOfIndividual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Literature-TheWord (and (isa :NOUN LiteraryWork-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Literature-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) authorOfLiteraryWork-CW))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "lithium" "ion") Battery-TheWord
 (and (isa :NOUN LithiumIonBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lithium" "ion" "polymer") Battery-TheWord
 (and (isa :NOUN LithiumIonPolymerBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lithium" "iron" "phosphate") Battery-TheWord
 (and (isa :NOUN LithiumIronPhosphateBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lithium" "sulfur") Battery-TheWord
 (and (isa :NOUN LithiumSulfurBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lithium-TheWord (and (isa :NOUN Lithium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lithium" "titanate") Battery-TheWord
 (and (isa :NOUN LithiumTitanateBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lithosphere-TheWord (and (isa :NOUN Lithosphere))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lithuanian-TheWord
 (and (isa :NOUN LithuanianLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Litre-TheWord (and (isa :NOUN Liter))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN measurementResult fe_unit)) (:NOUN (N fe_unit))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "litter") Box-TheWord (and (isa :NOUN LitterBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Littoral-TheWord (and (isa :NOUN LittoralRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "live") Oak-TheWord (and (isa :NOUN LiveOak-Tree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liver-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liver-TheWord (and (isa :NOUN Liver))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "liver") Transplant-TheWord
 (and (isa :NOUN LiverTransplantSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Liverwort-TheWord (and (isa :NOUN Liverwort))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Livery-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn of) fe_descriptor) (N deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)) ((0 0 0) (0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Livestock-TheWord (and (isa :NOUN Livestock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "living") Quarters-TheWord
 (and (isa :NOUN HumanResidence)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "living" "room") Set-TheWord
 (and (isa :NOUN LivingRoomSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "living") Room-TheWord (and (isa :NOUN LivingRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Living-TheWord (and (isa :NOUN LivingRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Living-TheWord (and (isa :NOUN Living))
 (frame FN_Dead_or_alive)
 (bindingTemplate (TheList (:GAP (DEN affectedAgent))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lizard-TheWord (and (isa :NOUN Lizard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Llama-TheWord (and (isa :NOUN Llama)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "llama") Wool-TheWord (and (isa :NOUN LlamaWool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Load-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DNI fe_individuals) (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Loafer-TheWord (and (isa :NOUN Loafer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loam-TheWord (and (isa :NOUN Loam)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "loan") Application-TheWord
 (and (isa :NOUN LoanApplication)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loan-TheWord (and (isa :NOUN LoanAgreement))
 (frame FN_Lending) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lobby-TheWord (and (isa :NOUN Lobby-Room))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lobby-TheWord
 (and (isa :NOUN Lobby-PoliticalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lobbyist-TheWord (and (isa :NOUN Lobbyist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lobster-TheWord (and (isa :NOUN ClawedLobster))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lobster-TheWord (and (isa :NOUN ClawedLobster))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "local" "accommodations") Guide-TheWord
 (and (isa :NOUN LocalAccommodationsGuide)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "local") Anesthetic-TheWord
 (and (isa :NOUN LocalAnesthetic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "local" "attractions") Guide-TheWord
 (and (isa :NOUN LocalAttractionsGuide)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Local-TheWord
 (and (isa :NOUN SpatialThing-Localized)
      (relationInstanceExists originallyFromRegion :NOUN GeographicalRegion))
 (frame FN_Indigenous_origin)
 (bindingTemplate
  (TheList (:GAP (DNI comesFrom-Generic) (DEN objectActedOn comesFrom-Generic))
   (:NOUN (N objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Locale-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((1 0 1)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Locality-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Political_locales)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Location-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) (AJP fe_descriptor fe_relative_location)
    ((PPFn from) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn to) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Loch-TheWord (and (isa :NOUN Loch-Lake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loch-TheWord (and (isa :NOUN Loch-Cove))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    (AJP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Lock-TheWord (and (isa :NOUN HairOnHead-Human))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_hair) (AJP fe_hair_property)
    ((PPFn into) fe_hair_property) (N fe_hair_property))
   (:GAP (DEN toConfiguration fe_hair)
    (2nd toConfiguration ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 3 0) (2 0 0)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Lock-TheWord (and (isa :NOUN Lock)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lock-TheWord (and (isa :NOUN WaterwayLock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "locker") Room-TheWord (and (isa :NOUN LockerRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Locker-TheWord (and (isa :NOUN Locker))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent) ((PPFn of) owner)
    ((PPFn at) fe_relative_location) ((PPFn beside) fe_relative_location)
    ((PPFn by) fe_relative_location) ((PPFn on) fe_relative_location)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 6 2)) ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((2 0 0)) ((0 1 0))
   ((0 6 0)) ((0 6 1) (2 0 0)) ((0 2 0) (2 0 0)) ((0 0 0) (0 6 2)))))

(FNNounSemtrans (TheList) Locket-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn around) wornOn) ((PPFn at) wornOn)
    (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 3 0))
   ((0 0 0) (0 2 1)) ((0 1 0) (0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Locomotion-TheWord
 (and (isa :NOUN LocomotionEvent-Animal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Locomotive-TheWord (and (isa :NOUN TrainEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Locust-TheWord (and (isa :NOUN Locust))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lodge-TheWord (and (isa :NOUN Building))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N eventOccursAt)) (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Lodging-TheWord (and (isa :NOUN Lodging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loft-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "log") Holder-TheWord
 (and (isa :NOUN FireplaceLogHolder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Log-TheWord (and (isa :NOUN LogOfWood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Log-TheWord (and (isa :NOUN Log-Document))
 (frame FN_Records)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_data) (AJP fe_descriptor)
    (N activeIngredientsOfType))
   (:GAP (DEN fe_record)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((0 2 0)) ((2 0 0)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Logic-TheWord (and (isa :NOUN Logic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "logical") Relation-TheWord
 (and (isa :NOUN LogicalConnective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loin-TheWord (and (isa :NOUN Loin-MeatCut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lollipop-TheWord (and (isa :NOUN Lollipop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loner-TheWord (and (isa :NOUN Lonely))
 (frame FN_Sociability)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent)) (:GAP (DEN affectedAgent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "long") Bone-TheWord (and (isa :NOUN LongBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "long") Jump-TheWord
 (and (isa :NOUN LongJumpSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "long" "playing" "lp" "record") Album-TheWord
 (and (isa :NOUN PhonographRecord-LP)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "long" "saphenous") Vein-TheWord
 (and (isa :NOUN GreatSaphenousVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "long") Time-TheWord (and (isa :NOUN LongTime))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "long") Trousers-TheWord (and (isa :NOUN LongPants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "long") Underwear-TheWord
 (and (isa :NOUN LongUnderwear)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Longbow-TheWord (and (isa :NOUN LongBow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Longevity-TheWord (and (isa :NOUN Longevity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Longhand-TheWord
 (and (isa :NOUN CursiveStyleOfWriting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Longing-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) fe_event fe_focal_participant)
    (N fe_focal_participant) ((PPFn of) objectActedOn fe_focal_participant)
    (AJP fe_degree (InverseBinaryPredicateFn explains-Generic) fe_manner)
    (VPto fe_event fe_purpose_of_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 3 2)) ((1 2 1)) ((1 0 1)) ((2 0 0)) ((1 2 0)) ((1 3 2) (2 0 0))
   ((1 0 1) (2 0 0)) ((1 1 0) (2 0 0)) ((1 3 2) (1 4 0)) ((1 0 0) (1 3 2))
   ((1 2 0) (1 4 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 0 0)) ((1 0 1) (1 3 0))
   ((1 3 0) (1 4 0)) ((1 0 1) (1 4 1) (2 0 0)) ((1 0 1) (1 3 2) (2 0 0))
   ((1 3 2) (1 3 2) (1 4 0)) ((1 3 0) (1 3 1) (1 4 0))
   ((0 0 0) (1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList) Loofa-TheWord (and (isa :NOUN Loofah))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Look-TheWord (and (isa :NOUN MakingFacialExpression))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (NP fe_intended_perceiver))
   (:OBLIQUE-OBJECT (N fe_conveyed_emotion)
    ((PPFn of) fe_conveyed_emotion fe_internal_cause)
    (AJP fe_conveyed_emotion fe_internal_cause fe_manner)
    ((PPFn from) ownerOfProprietaryThing)
    ((PPFn on) fe_intended_perceiver subRegions))
   (:GAP (2nd ownerOfProprietaryThing)
    (DEN fe_expression ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 3 0)) ((2 1 0)) ((2 1 1) (4 0 0)) ((0 0 0) (2 1 1))
   ((2 2 1) (4 0 0)) ((0 0 0) (2 2 1)) ((0 0 0) (1 0 0)) ((2 0 0) (4 0 0))
   ((2 1 0) (2 4 1)) ((2 2 0) (2 4 1)) ((2 1 0) (4 0 0)) ((2 1 0) (2 3 0))
   ((2 2 0) (4 0 0)) ((2 2 0) (2 3 0)) ((0 0 0) (2 1 1) (2 4 0))
   ((0 0 0) (1 0 0) (2 2 1)) ((0 0 0) (1 0 0) (2 1 0))
   ((0 0 0) (2 2 0) (2 4 0)) ((0 0 0) (1 0 0) (2 2 0))
   ((0 0 0) (1 0 0) (2 2 0) (2 2 2)))))

(FNNounSemtrans (TheList) Look-TheWord (and (isa :NOUN Perceiving-Voluntary))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (NP fe_intended_perceiver))
   (:OBLIQUE-OBJECT (N fe_conveyed_emotion)
    ((PPFn of) fe_conveyed_emotion fe_internal_cause)
    (AJP fe_conveyed_emotion fe_internal_cause fe_manner)
    ((PPFn from) ownerOfProprietaryThing)
    ((PPFn on) fe_intended_perceiver subRegions))
   (:GAP (2nd ownerOfProprietaryThing)
    (DEN fe_expression ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 3 0)) ((2 1 0)) ((2 1 1) (4 0 0)) ((0 0 0) (2 1 1))
   ((2 2 1) (4 0 0)) ((0 0 0) (2 2 1)) ((0 0 0) (1 0 0)) ((2 0 0) (4 0 0))
   ((2 1 0) (2 4 1)) ((2 2 0) (2 4 1)) ((2 1 0) (4 0 0)) ((2 1 0) (2 3 0))
   ((2 2 0) (4 0 0)) ((2 2 0) (2 3 0)) ((0 0 0) (2 1 1) (2 4 0))
   ((0 0 0) (1 0 0) (2 2 1)) ((0 0 0) (1 0 0) (2 1 0))
   ((0 0 0) (2 2 0) (2 4 0)) ((0 0 0) (1 0 0) (2 2 0))
   ((0 0 0) (1 0 0) (2 2 0) (2 2 2)))))

(FNNounSemtrans (TheList "looking") Glass-TheWord (and (isa :NOUN Mirror))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lord" "s") Prayer-TheWord
 (and (isa :NOUN LordsPrayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lorry-TheWord (and (isa :NOUN Truck))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loss-TheWord
 (and (isa :NOUN (CompletingFn Competition))) (frame FN_Finish_competition)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) fe_competition))
   (:GEN (Poss adversaryInConflict))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Lot-TheWord (and (isa :NOUN LotOfLand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lotion-TheWord (and (isa :NOUN Lotion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lottery-TheWord (and (isa :NOUN Lottery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loudspeaker-TheWord (and (isa :NOUN AudioSpeaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "loufah") Sponge-TheWord (and (isa :NOUN Loofah))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lounge-TheWord (and (isa :NOUN WaitingRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lounging") Jacket-TheWord
 (and (isa :NOUN SmokingJacket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Love-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Love-TheWord (and (isa :NOUN Love)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lover-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2 fe_partners))
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn of) fe_partner_2))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partners))
   (:NOUN (NP fe_partner_1)) (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((0 0 2)) ((4 0 0)) ((1 1 0)) ((0 0 1)) ((0 0 0)) ((3 0 0) (4 0 0))
   ((0 0 0) (4 0 0)) ((0 0 0) (1 1 0)) ((1 0 0) (4 0 0)))))

(FNNounSemtrans (TheList "low" "calorie") Dessert-TheWord
 (and (isa :NOUN LowCalorieDessertFood)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "low") German-TheWord
 (and (isa :NOUN PlattdeutschLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "low" "lying") Wetland-TheWord
 (and (isa :NOUN LowLyingWetland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lower") California-TheWord
 (and (isa :NOUN BajaCalifornia-Peninsula)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lower") Class-TheWord (and (isa :NOUN LowerClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lower") Jaw-TheWord (and (isa :NOUN Jawbone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lower") Torso-TheWord (and (isa :NOUN LowerTorso))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Loyalty-TheWord (and (isa :NOUN Loyalty))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lozenge-TheWord (and (isa :NOUN Lozenge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lp-TheWord (and (isa :NOUN PhonographRecord-LP))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lsd-TheWord (and (isa :NOUN LSD))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lube") Gun-TheWord (and (isa :NOUN LubeGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Luck-TheWord (and (isa :NOUN Luck)) (frame FN_Luck)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn at) fe_state_of_affairs))
   (:GAP (INI affectedAgent) (DEN fe_state_of_affairs)
    (DNI fe_state_of_affairs))
   (:GEN (Poss affectedAgent))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Luge-TheWord (and (isa :NOUN Luge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "luggage") Compartment-TheWord
 (and (isa :NOUN TrunkOfCar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "luggage") Ensemble-TheWord
 (and (isa :NOUN LuggageSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "luggage") Organizer-TheWord
 (and (isa :NOUN LuggageOrganizer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "luggage") Tag-TheWord (and (isa :NOUN LuggageTag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Luggage-TheWord (and (isa :NOUN Luggage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lumbar") Plexus-TheWord
 (and (isa :NOUN LumbarPlexus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lumbar") Vertebra-TheWord
 (and (isa :NOUN LumbarVertebra)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lumber-TheWord (and (isa :NOUN Lumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lumberman-TheWord (and (isa :NOUN Lumberjack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lump-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed) (N stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 3 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "lunar") Calendar-TheWord
 (and (isa :NOUN LunarCalendar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lunar") Crater-TheWord (and (isa :NOUN Crater-Lunar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lunch-TheWord (and (isa :NOUN Lunch)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lunchroom-TheWord (and (isa :NOUN CafeteriaSpace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lung") Cancer-TheWord
 (and (isa :NOUN (CancerFn Lung))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lung-TheWord (and (isa :NOUN Lung))
 (frame FN_Body_parts)
 (bindingTemplate (TheList (:GAP (DEN actorPartsInvolved))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lung") Transplant-TheWord
 (and (isa :NOUN LungTransplantSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lure-TheWord (and (isa :NOUN FishingLure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lust-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPto fe_event) ((PPingFn for) fe_event)
    ((PPFn for) fe_event fe_focal_participant)
    ((PPFn of) objectActedOn fe_focal_participant)
    (AJP fe_degree fe_event objectActedOn fe_manner)
    (N fe_focal_participant fe_manner))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((0 4 3)) ((0 3 1)) ((0 5 0)) ((1 0 0)) ((0 3 0)) ((0 4 2)) ((0 1 0))
   ((0 4 0)) ((0 4 3) (0 4 3)) ((0 2 1) (0 4 3)) ((0 5 1) (1 0 0))
   ((0 4 3) (1 0 0)) ((0 2 1) (1 0 0)) ((0 5 0) (1 0 0)) ((0 0 0) (0 4 3))
   ((0 2 0) (0 3 0)) ((0 4 1) (1 0 0)) ((0 4 0) (0 5 0)) ((0 4 0) (1 0 0))
   ((0 0 0) (0 4 0)))))

(FNNounSemtrans (TheList) Lustre-TheWord (and (isa :NOUN Shiny))
 (frame FN_Location_of_light)
 (bindingTemplate
  (TheList (:SUBJECT (NP focalSubject))
   (:OBLIQUE-OBJECT (NP focalSubject) ((PPFn of) focalSubject)
    ((PPFn on) focalSubject) ((PPFn in) fe_ground)
    (AJP fe_depictive fe_manner))
   (:GAP (DEN fe_light))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 4 1) (1 4 1)))))

(FNNounSemtrans (TheList "luteinizing") Hormone-TheWord
 (and (isa :NOUN LuteinizingHormone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lutetium-TheWord (and (isa :NOUN Lutetium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lutheranism-TheWord
 (and (isa :NOUN LutheranReligion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "luxembourg") Franc-TheWord
 (and (isa :NOUN Franc-Luxembourg)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "luxury") Liner-TheWord (and (isa :NOUN CruiseShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lye-TheWord (and (isa :NOUN SodiumHydroxide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lye-TheWord (and (isa :NOUN PotassiumHydroxide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lymphocyte-TheWord (and (isa :NOUN Lymphocyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lymphoma-TheWord (and (isa :NOUN Lymphoma-Malignant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lynx-TheWord (and (isa :NOUN Lynx)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lyric-TheWord (and (isa :NOUN Lyric-WordsToSong))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "lysergic" "acid") Diethylamide-TheWord
 (and (isa :NOUN LSD)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Lysine-TheWord (and (isa :NOUN Lysine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "macaroni" "and") Cheese-TheWord
 (and (isa :NOUN MacaroniAndCheese)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mace-TheWord (and (isa :NOUN Mace-TheSpice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Macedonian-TheWord
 (and (isa :NOUN EthnicGroupOfMacedonians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Macedonian-TheWord
 (and (isa :NOUN MacedonianLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Macguffin-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance objectSought LookingForSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Machete-TheWord (and (isa :NOUN Machete))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Machicolation-TheWord (and (isa :NOUN Machicolation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "machine") Code-TheWord
 (and (isa :NOUN ComputerCode-Binary)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "machine") Gun-TheWord (and (isa :NOUN MachineGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Machine-Gun-TheWord (and (isa :NOUN MachineGun))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (N activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (0 1 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Machine-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N deviceUse) (A fe_user))
   (:GAP (DEN fe_gizmo)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Machine-TheWord (and (isa :NOUN MechanicalDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "machine") Tool-TheWord (and (isa :NOUN MachineTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Macintosh-TheWord (and (isa :NOUN RainCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mackerel-TheWord (and (isa :NOUN Mackerel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Macron-TheWord (and (isa :NOUN Macron-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "madagascar") Franc-TheWord
 (and (isa :NOUN Franc-Madagascar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mag-TheWord (and (isa :NOUN MagazineSeries))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP authorOfLiteraryWork-CW) (N fe_genre situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW fe_genre))))
 (groupPatterns (TheSet ((0 1 1)) ((2 0 1)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "magazine") Rack-TheWord
 (and (isa :NOUN MagazineRack)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magazine-TheWord (and (isa :NOUN MagazineCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magazine-TheWord (and (isa :NOUN MagazineSeries))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magazine-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_genre)
    (N authorOfLiteraryWork-CW fe_genre fe_title) (NP fe_title)
    ((PPFn about) situationTopic) ((PPFn of) situationTopic)
    ((PPFn on) situationTopic))
   (:GAP (DEN authorOfLiteraryWork-CW fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW fe_genre)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((2 0 1)) ((0 0 0)) ((0 1 1))
   ((0 1 2)) ((2 0 0)) ((0 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Maggot-TheWord (and (isa :NOUN Maggot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "magic") Marker-TheWord
 (and (isa :NOUN Marker-WritingImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magic-TheWord (and (isa :NOUN Magic))
 (frame FN_Ineffability)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT ((PPFn between) situationConstituents)
    (AJP fe_degree fe_property)
    ((PPFn of) (InverseBinaryPredicateFn explaines-Generic))
    (N (InverseBinaryPredicateFn explaines-Generic)))
   (:GAP (DEN fe_attribute) (DNI (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 3 0)) ((3 0 0)) ((1 1 1) (1 2 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Magician-TheWord (and (isa :NOUN Magician-Performer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magistrate-TheWord (and (isa :NOUN Judge))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A employer)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Magma-TheWord
 (and (isa :NOUN Underground) (isa :NOUN (LiquidFn LandStuff))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnate-TheWord (and (isa :NOUN Tycoon))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnesium-TheWord (and (isa :NOUN Magnesium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnet-TheWord (and (isa :NOUN Magnet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "magnetic") Compass-TheWord
 (and (isa :NOUN MagneticCompass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "magnetic" "force") Microscope-TheWord
 (and (isa :NOUN MagneticForceMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "magnetic") Tape-TheWord
 (and (isa :NOUN MagneticTape)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnetism-TheWord
 (and (isa :NOUN MagneticForceVector)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnetite-TheWord (and (isa :NOUN Magnetite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "magnifying") Glass-TheWord
 (and (isa :NOUN MagnifyingGlass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "magnitude") Relation-TheWord
 (and (isa :NOUN MagnitudeRelation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnolia-TheWord (and (isa :NOUN MagnoliaTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Magnum-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) containedObject))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Maharaja-TheWord
 (and (isa :NOUN Emperor-HeadOfState)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mahogany-TheWord
 (and (isa :NOUN (WoodFn MahoganyTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mahogany-TheWord (and (isa :NOUN MahoganyTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maid-TheWord (and (isa :NOUN Maid))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (AJP employeeStatus) ((PPFn at) employer)
    ((PPFn in) employer) ((PPFn of) employer) ((PPFn to) employer)
    (N employer activeIngredientsOfType) (A activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer activeIngredientsOfType))
   (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 5 1)) ((0 0 0)) ((3 0 0)) ((1 3 0)) ((1 5 0)) ((1 0 0))
   ((0 0 0) (1 5 1)) ((1 5 1) (3 0 0)) ((0 0 0) (3 0 0)) ((3 0 0) (4 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 6 0) (3 0 0))
   ((0 0 0) (1 4 0) (3 0 1)) ((0 0 0) (1 2 0) (1 5 1)))))

(FNNounSemtrans (TheList) Maiden-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mail-TheWord (and (isa :NOUN ChainMail))
 (frame FN_Armor) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mail-TheWord (and (isa :NOUN PostalService))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mail-TheWord (and (isa :NOUN DeliveringMail))
 (frame FN_Sent_items)
 (bindingTemplate (TheList (:GAP (DEN objectSent)) (:GEN (Poss to-Generic))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Mailbox-TheWord (and (isa :NOUN MailBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mailer-TheWord (and (isa :NOUN MailingTube))
 (frame FN_Containers) (bindingTemplate (TheList (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mailer-TheWord (and (isa :NOUN ShippingEnvelope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mailing") Address-TheWord
 (and (isa :NOUN MailingAddress)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mailing") Tube-TheWord (and (isa :NOUN MailingTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maillot-TheWord (and (isa :NOUN SwimSuit-OnePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mailman-TheWord (and (isa :NOUN MailCarrier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mailroom-TheWord (and (isa :NOUN Mailroom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Main-TheWord (and (isa :NOUN Ocean)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Main-TheWord (and (isa :NOUN Sea)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mainframe") Computer-TheWord
 (and (isa :NOUN MainframeComputer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mainframe-TheWord (and (isa :NOUN MainframeComputer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mainland-TheWord
 (and (isa :NOUN RelativeLocationalPredicate)) (frame FN_Locative_relation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_ground))
   (:GAP (DEN objectFoundInLocation) (DNI fe_ground))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mainstay-TheWord (and (isa :NOUN Mainstay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maintenance-TheWord
 (and (isa :NOUN Action) (activityState :NOUN OngoingStatus))
 (frame FN_Activity_ongoing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) processTypeForAccomplishmentType))
   (:GAP (DEN processTypeForAccomplishmentType))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Maisonette-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maize-TheWord (and (isa :NOUN CornPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "major") General-TheWord
 (and (isa :NOUN MajorGeneral-Rank)) (frame FN_Leadership)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Major-TheWord (and (isa :NOUN Major-Rank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Make-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) (AJP fe_type_property))
   (:GAP (DEN fe_subtype))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Make-Up-TheWord (and (isa :NOUN Makeup))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor)
    (N activeIngredientsOfType deviceUse))
   (:GAP (DEN decorativeObjectsApplied fe_decoration_descriptor))
   (:GEN (Poss objectDecorated))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)) ((2 0 0)) ((0 0 0) (0 0 0))
   ((0 1 1) (2 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Maker-TheWord (and (isa :NOUN Maker))
 (frame FN_Manufacturing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N productsCreated) ((PPFn of) productsCreated))
   (:GAP (DEN performedBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Maker-TheWord (and (isa :NOUN Maker)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Makeup-TheWord (and (isa :NOUN Makeup))
 (frame FN_Body_decoration) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Makeup-TheWord (and (isa :NOUN Makeup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malamute-TheWord (and (isa :NOUN AlaskanMalamute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malaria-TheWord (and (isa :NOUN Malaria))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "malawian" "monetary") Unit-TheWord
 (and (isa :NOUN (UnitOfMoneyOfGeopoliticalEntityFn Malawi))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malay-TheWord (and (isa :NOUN MalayLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "male") Aristocrat-TheWord
 (and (isa :NOUN (CollectionIntersectionFn (TheSet MaleHuman Aristocrat))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "male") Child-TheWord (and (isa :NOUN MaleChild))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "male" "reproductive") System-TheWord
 (and (isa :NOUN ReproductiveSystem-Male)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Male-TheWord (and (isa :NOUN MaleAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Male-TheWord (and (isa :NOUN MaleHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malediction-TheWord
 (and (isa :NOUN CommunicationAct-Single)
      (topicOfInfoTransfer :NOUN ?Evaluating1) (isa ?Evaluating1 Evaluating))
 (frame FN_Judgment_communication) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malefactor-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_descriptor) (Sinterrog fe_descriptor)
    (Srel fe_descriptor) ((PPFn of) comesFrom-Generic)
    (AJP fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 4 0)) ((0 2 0)) ((0 0 0) (0 4 0) (0 4 1)))))

(FNNounSemtrans (TheList) Malfunction-TheWord (and (isa :NOUN Malfunction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mali") Franc-TheWord (and (isa :NOUN Franc-Mali))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "malignant") Tumor-TheWord
 (and (isa :NOUN MalignantTumor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mall-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_function)) (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mallard-TheWord (and (isa :NOUN MallardDuck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malleability-TheWord (and (isa :NOUN Malleability))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malleus-TheWord (and (isa :NOUN Malleus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mallow-TheWord (and (isa :NOUN Mallow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malnourishment-TheWord (and (isa :NOUN Malnutrition))
 (frame FN_Medical_conditions)
 (bindingTemplate (TheList (:GAP (DEN infects) (DNI objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Malnutrition-TheWord (and (isa :NOUN Malnutrition))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (NP objectActedOn)
    ((PPFn among) objectActedOn))
   (:GAP (DEN infects) (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "malpractice") Lawsuit-TheWord
 (and (isa :NOUN MalpracticeSuit)) (frame FN_Law) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "malpractice") Suit-TheWord
 (and (isa :NOUN MalpracticeSuit)) (frame FN_LAW) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "maltese") Dog-TheWord
 (and (isa :NOUN Maltese-TheDog)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maltreatment-TheWord (and (isa :NOUN AnimalAbuse))
 (frame FN_Abusing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maltreatment-TheWord (and (isa :NOUN ChildAbuse))
 (frame FN_Abusing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maltreatment-TheWord (and (isa :NOUN SexualAbuse))
 (frame FN_Abusing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maltreatment-TheWord
 (and (isa :NOUN DomesticViolence)) (frame FN_Abusing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mammal-TheWord (and (isa :NOUN Mammal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mammalia-TheWord (and (isa :NOUN Mammal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mammary") Gland-TheWord
 (and (isa :NOUN MammaryGland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Man-TheWord (and (isa :NOUN AdultMaleHuman))
 (frame FN_People)
 (bindingTemplate
  (TheList
   (:SUBJECT ((PPFn with) fe_descriptor) (NP fe_person) (Num fe_person))
   (:OBJECT ((PPFn of) age fe_persistent_characteristic) (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) age fe_descriptor) ((PPFn at) fe_descriptor)
    (VPing fe_descriptor) ((PPFn on) fe_descriptor) (Sinterrog fe_descriptor)
    (A fe_ethnicity) ((PPFn from) fe_descriptor comesFrom-Generic)
    ((PPFn near) comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    ((PPFn of) age fe_ethnicity comesFrom-Generic fe_persistent_characteristic)
    (N fe_persistent_characteristic) (NP fe_person))
   (:GAP (DEN fe_person)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 1 0)) ((2 12 0)) ((4 0 0)) ((2 9 1)) ((2 10 3))
   ((2 8 3)) ((2 10 2)) ((2 7 0)) ((2 6 1)) ((2 8 2)) ((2 5 0)) ((2 3 0))
   ((2 0 1)) ((2 6 0)) ((2 1 0)) ((2 8 1)) ((2 10 0)) ((2 0 0)) ((2 8 0))
   ((0 1 0) (2 10 3)) ((0 1 0) (2 8 3)) ((2 8 3) (2 11 0)) ((2 8 3) (2 8 3))
   ((2 10 2) (4 0 0)) ((0 1 0) (2 6 1)) ((0 1 0) (2 10 1)) ((0 0 0) (0 1 0))
   ((0 1 0) (2 3 0)) ((0 1 0) (2 8 1)) ((2 9 0) (2 10 3)) ((2 0 1) (2 8 3))
   ((2 2 0) (2 4 0)) ((0 1 0) (2 8 0)) ((2 8 0) (2 8 3)) ((2 8 0) (2 8 2))
   ((0 1 0) (0 2 0) (1 0 1)) ((0 1 0) (2 0 1) (2 8 3))
   ((2 8 1) (2 8 2) (2 9 1)) ((0 1 0) (2 1 0) (2 8 1))
   ((2 0 1) (2 8 1) (2 8 3)) ((0 1 0) (2 8 3) (2 8 3) (2 9 1))
   ((2 0 1) (2 2 0) (2 8 3) (2 8 3)) ((0 1 0) (2 8 0) (2 8 3) (2 9 1))
   ((0 1 0) (2 0 1) (2 8 0) (2 8 3))
   ((0 1 0) (1 0 0) (2 8 1) (2 8 1) (2 8 1) (2 9 0)))))

(FNNounSemtrans (TheList "man" "^s") Watch-TheWord (and (isa :NOUN MensWatch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Management-TheWord (and (isa :NOUN Management))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Management-TheWord (and (isa :NOUN Manager))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manager-TheWord (and (isa :NOUN Manager))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn for) employer) ((PPFn of) employer)
    ((PPFn with) employer) (NP fe_person) ((PPFn at) employer fe_rank)
    (N employer employer fe_rank activeIngredientsOfType)
    (AJP employer activeIngredientsOfType)
    ((PPFn in) employer employer activeIngredientsOfType)
    (A employer fe_rank activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 7 2)) ((1 5 3)) ((1 8 2)) ((1 4 1)) ((1 8 1)) ((1 1 0)) ((1 7 0))
   ((1 4 0)) ((1 5 0)) ((0 0 0) (1 5 3)) ((1 5 3) (4 0 0)) ((1 5 2) (1 7 2))
   ((1 5 3) (1 8 0)) ((1 5 0) (4 0 0)) ((1 8 0) (4 0 0)) ((1 1 0) (1 5 3))
   ((1 5 3) (1 7 0)) ((1 7 0) (1 8 1)) ((1 4 0) (1 5 2)) ((0 0 0) (3 0 0))
   ((3 0 0) (4 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 4 0)) ((1 5 0) (4 0 0))
   ((0 0 0) (1 5 3) (3 0 0)) ((1 3 0) (1 5 3) (3 0 0))
   ((1 5 3) (3 0 0) (4 0 0)) ((0 0 0) (1 2 0) (1 5 3))
   ((1 1 0) (1 6 1) (4 0 0)) ((0 0 0) (1 0 0) (1 5 3))
   ((1 0 0) (1 5 3) (4 0 0)) ((0 0 0) (1 4 0) (1 5 3))
   ((1 5 0) (1 5 2) (4 0 0)) ((0 0 0) (1 1 0) (1 6 0))
   ((0 0 0) (1 4 0) (1 5 3) (1 7 0)))))

(FNNounSemtrans (TheList) Manatee-TheWord (and (isa :NOUN Manatee))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manchester") Terrier-TheWord
 (and (isa :NOUN Terrier-Manchester)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mandate-TheWord (and (isa :NOUN Decree))
 (frame FN_Deny_or_grant_permission)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_authority)
    ((PPFn for) (InverseBinaryPredicateFn explains-Generic))
    (VPto objectActedOn purposeOfEvent))
   (:GAP (DEN objectActedOn) (DNI fe_authority affectedAgent))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList) Mandate-TheWord (and (isa :NOUN GrantingPermission))
 (frame FN_Grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mandate-TheWord
 (and (isa :NOUN Mandate-ControlledLand)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mandibular") Joint-TheWord
 (and (isa :NOUN TemporoMandibularJoint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mandolin-TheWord (and (isa :NOUN Mandolin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mane-TheWord
 (and (isa :NOUN (HairOfLengthTypeFn Long))) (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn of) fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((0 0 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 0 0))
   ((1 0 0) (1 2 0) (3 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Manganese-TheWord (and (isa :NOUN Manganese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mango-TheWord (and (isa :NOUN (FruitFn MangoTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mangosteen-TheWord (and (isa :NOUN Mangosteen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mangrove-TheWord (and (isa :NOUN MangroveTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manhunt-TheWord
 (and (isa :NOUN LookingForSomething)
      (relationInstanceExists objectSought :NOUN Person))
 (frame FN_Seeking)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N performedBy) (AJP fe_degree fe_ground fe_manner)
    ((PPFn in) eventOccursAt) ((PPFn for) objectSought))
   (:GAP (2nd performedBy) (CNI performedBy))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 1 1)) ((0 0 0) (1 3 0)) ((1 0 0) (1 1 2))
   ((1 1 1) (1 1 2)) ((1 1 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList "manicure") Set-TheWord (and (isa :NOUN ManicureSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manicure-TheWord
 (and (isa :NOUN ManicuringSomething)
      (relationInstanceExists objectActedOn :NOUN Fingernail))
 (frame FN_Grooming)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AVP frequencyOfEvent))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Manicurist-TheWord
 (and (isa :NOUN Professional) (performedBy ?ManicuringSomething1 :NOUN)
      (isa ?ManicuringSomething1 ManicuringSomething))
 (frame FN_Grooming) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manifest-TheWord (and (isa :NOUN Indication))
 (frame FN_Condition_symptom_relation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manifestation-TheWord (and (isa :NOUN Manifestation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manipulation-TheWord
 (and (isa :NOUN Manipulating-InfluencingAnAgent)) (frame FN_Being_in_control)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manned") Spacecraft-TheWord
 (and (isa :NOUN MannedSpacecraft)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mannequin-TheWord (and (isa :NOUN FashionModel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manner-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (Sfin performedBy) (A fe_manner) (AJP fe_manner)
    (Sinterrog fe_manner))
   (:GAP (DNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0) (1 3 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Manner-TheWord (and (isa :NOUN MethodType))
 (frame FN_Manner) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manor-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manse-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manservant-TheWord (and (isa :NOUN Butler))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mansion-TheWord (and (isa :NOUN Mansion))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_function)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Manslaughter-TheWord (and (isa :NOUN Manslaughter))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) victim))
   (:GAP (DNI victim) (INI victim)) (:GEN (Poss victim))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Manta-TheWord (and (isa :NOUN MantaRay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mantel-TheWord
 (and (isa :NOUN Architectural_Structure)) (frame FN_Architectural_part)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mantel-TheWord (and (isa :NOUN Mantel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mantilla-TheWord (and (isa :NOUN Mantilla))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mantle-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn over) wornOn) (AJP fe_descriptor mainConstituent)
    (N mainConstituent) ((PPFn of) fe_descriptor mainConstituent)
    ((PPFn with) parts))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 3 0)) ((0 3 1) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 1 0) (0 1 1) (0 4 0)) ((0 0 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "manual") Brake-TheWord
 (and (isa :NOUN ManualBrakeSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual" "can") Opener-TheWord
 (and (isa :NOUN ManualCanOpener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual") Drill-TheWord (and (isa :NOUN ManualDrill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual") Razor-TheWord
 (and (isa :NOUN ShavingRazor-Manual)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual" "seat") Belt-TheWord
 (and (isa :NOUN Seatbelt-Manual)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual") Steering-TheWord
 (and (isa :NOUN ManualSteering)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manual-TheWord (and (isa :NOUN UserManual))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) situationTopic)
    ((PPFn of) (InverseBinaryPredicateFn textualPCWSubSections) situationTopic)
    (VPing situationTopic) (AJP fe_genre deviceUse)
    (N fe_genre situationTopic deviceUse))
   (:GAP (DEN fe_text))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 3 1)) ((0 2 0)) ((0 1 1)) ((0 4 1)) ((0 4 0)) ((0 1 0))
   ((0 0 0) (0 3 0)) ((0 3 0) (0 4 1)))))

(FNNounSemtrans (TheList "manual") Transmission-TheWord
 (and (isa :NOUN ManualTransmission)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual") Typewriter-TheWord
 (and (isa :NOUN ManualTypewriter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manual") Window-TheWord
 (and (isa :NOUN ManualCarWindow)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manually" "adjustable" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-ManuallyAdjustable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manufacture-TheWord (and (isa :NOUN Manufacturing))
 (frame FN_Manufacturing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn within) situationConstituents) (VPing fe_manner)
    ((PPFn by) fe_manner by-Underspecified) ((PPFn near) eventOccursAt)
    ((PPFn on) eventOccursAt) (N fe_manner productsCreated)
    ((PPFn of) productsCreated) (AJP fe_manner eventOccursAt purposeOfEvent)
    ((PPFn for) purposeOfEvent) ((PPFn from) inputsDestroyed)
    ((PPFn at) fe_factory temporallyIntersects)
    ((PPFn in) fe_factory eventOccursAt temporallyIntersects))
   (:GAP (2nd performedBy) (CNI performedBy)) (:GEN (Poss productsCreated))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 1)) ((0 6 0)) ((0 7 1)) ((0 2 0)) ((0 7 0)) ((0 0 0))
   ((0 5 1) (0 11 2)) ((0 5 1) (0 10 1)) ((0 5 1) (0 9 0)) ((0 6 0) (0 8 0))
   ((0 6 0) (0 7 2)) ((0 4 0) (0 5 1)) ((0 5 1) (0 11 1)) ((0 2 1) (0 5 1))
   ((0 1 0) (0 6 0)) ((0 5 0) (0 6 0)) ((0 6 0) (0 7 0)) ((0 6 0) (0 11 0))
   ((0 5 1) (0 10 0)) ((0 3 0) (0 5 1) (0 11 1)))))

(FNNounSemtrans (TheList) Manufacturer-TheWord
 (and (isa :NOUN ManufacturingOrganization)) (frame FN_Manufacturing)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (A eventOccursAt)
    (AJP fe_depictive eventOccursAt)
    (N fe_depictive eventOccursAt productsCreated) ((PPFn of) productsCreated))
   (:GAP (INI fe_factory) (DEN performedBy) (DNI productsCreated))
   (:APPOSITIVE (NP performedBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 4 0)) ((1 3 2)) ((0 0 0) (1 4 0)) ((1 3 2) (3 0 0))
   ((1 0 0) (1 3 2)) ((1 1 0) (1 3 2)) ((1 3 1) (1 4 0)) ((1 2 0) (1 3 2))
   ((0 0 0) (1 0 0) (1 3 2)) ((0 0 0) (1 3 1) (1 4 0))
   ((0 0 0) (1 2 1) (1 4 0)) ((0 0 0) (1 2 0) (1 4 0))
   ((0 0 0) (1 2 0) (1 3 2)) ((0 0 0) (1 0 0) (1 2 0))
   ((1 0 0) (1 2 0) (1 3 2)) ((0 0 0) (1 0 0) (1 3 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 2 0) (1 4 0)) ((0 0 0) (1 0 0) (1 2 0) (1 3 2)))))

(FNNounSemtrans (TheList) Manufacturing-TheWord (and (isa :NOUN Manufacturing))
 (frame FN_Manufacturing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_manner) (AJP fe_manner eventOccursAt)
    ((PPFn in) eventOccursAt performedBy) ((PPFn of) productsCreated)
    ((PPFn for) purposeOfEvent)
    (N eventOccursAt productsCreated inputsDestroyed))))
 (groupPatterns
  (TheSet ((0 5 2)) ((0 3 0)) ((0 5 1)) ((0 2 1)) ((0 2 0)) ((0 5 0)) ((0 1 1))
   ((0 1 0)) ((0 0 0)) ((0 3 0) (0 4 0)) ((0 2 0) (0 5 1)) ((0 1 1) (0 5 1))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Manuscript-TheWord (and (isa :NOUN Manuscript))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manuscript-TheWord
 (and (isa :NOUN Manuscript-Handwritten)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Manuscript-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "manx") Cat-TheWord (and (isa :NOUN ManxCat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Many-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (INI fe_individuals) (DEN fe_quantity) (DNI fe_quantity))
   (:NOUN (N fe_individuals))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Maoism-TheWord (and (isa :NOUN Maoism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Map-TheWord (and (isa :NOUN Map))
 (frame FN_Communicate_categorization) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Map-TheWord
 (and (isa :NOUN (HardcopyOfInformationTypeFn Map))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "maple") Leaf-TheWord
 (and (isa :NOUN (LeafFn MapleTree))) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "maple") Syrup-TheWord (and (isa :NOUN MapleSyrup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maple-TheWord (and (isa :NOUN (WoodFn MapleTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maple-TheWord (and (isa :NOUN MapleTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "maple") Tree-TheWord (and (isa :NOUN MapleTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mapmaking-TheWord (and (isa :NOUN Cartography))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maraca-TheWord (and (isa :NOUN RattleInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marathon-TheWord (and (isa :NOUN Marathon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marble-TheWord (and (isa :NOUN Marble-Ball))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marble-TheWord (and (isa :NOUN Marble-Stone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) March-TheWord (and (isa :NOUN March))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:GAP (DEN (InverseBinaryPredicateFn nameString) fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) March-TheWord (and (isa :NOUN Marching))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn around) situationLocation) ((PPFn to) to-Generic)
    ((PPFn into) to-Generic) ((PPFn with) fe_manner)
    ((PPFn across) trajectory-Complete) (AVP trajectory-Complete)
    ((PPFn through) trajectory-Complete) ((PPFn along) trajectory-Complete)
    ((PPFn towards) trajectory-Complete) ((PPFn up) trajectory-Complete)
    (VPto purposeOfEvent) ((PPFn in) eventOccursAt purposeOfEvent)
    ((PPFn by) performedBy)
    (AJP distanceTranslated duration fe_manner trajectory-Complete performedBy)
    ((PPFn of) distanceTranslated performedBy) (N purposeOfEvent performedBy)
    ((PPFn from) from-Generic) ((PPFn on) to-Generic temporallyIntersects)
    ((PPFn during) temporallyIntersects) (VPing temporallyIntersects)
    (NP temporallyIntersects) ((PPFn after) temporallyIntersects))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 14 1)) ((1 12 0)) ((1 11 0)) ((1 8 0)) ((1 6 0))
   ((1 7 0)) ((1 13 2)) ((1 1 0)) ((1 17 0)) ((1 13 0)) ((1 12 0) (1 15 0))
   ((1 11 0) (1 21 0)) ((1 11 0) (1 13 4)) ((1 9 0) (3 0 0)) ((1 8 0) (1 15 1))
   ((1 6 0) (3 0 0)) ((1 6 0) (1 12 0)) ((1 7 0) (3 0 0)) ((1 5 0) (3 0 0))
   ((1 12 0) (1 13 3)) ((1 6 0) (1 15 0)) ((1 4 0) (1 10 0)) ((1 3 0) (1 12 0))
   ((1 7 0) (1 13 2)) ((1 1 0) (1 16 0)) ((1 1 0) (3 0 0)) ((1 2 0) (3 0 0))
   ((1 1 0) (1 15 0)) ((1 15 0) (1 17 0)) ((1 4 0) (1 14 0)) ((1 6 0) (1 13 0))
   ((1 5 0) (1 13 0)) ((1 1 0) (1 13 0)) ((1 11 0) (1 15 0) (1 20 0))
   ((1 11 0) (1 11 1) (1 15 0)) ((1 6 0) (1 15 0) (1 17 1))
   ((1 6 0) (1 13 2) (1 15 0)) ((1 13 4) (1 17 0) (1 18 0))
   ((1 1 0) (1 15 0) (1 16 0)) ((1 1 0) (1 6 0) (1 15 0))
   ((0 0 0) (1 6 0) (1 13 0)) ((1 13 0) (1 13 2) (3 0 0))
   ((0 0 0) (1 0 0) (1 13 2)) ((1 6 0) (1 13 2) (1 14 1) (1 19 0))
   ((1 1 0) (1 13 2) (1 13 2) (3 0 0)) ((1 6 0) (1 13 1) (1 15 0) (1 17 1))
   ((1 1 0) (1 12 0) (1 13 1) (1 16 0)) ((1 1 0) (1 4 0) (1 13 0) (1 13 2)))))

(FNNounSemtrans (TheList) Marchioness-TheWord (and (isa :NOUN Marchioness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mardi") Gras-TheWord (and (isa :NOUN MardiGras))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mare" "s") Tail-TheWord (and (isa :NOUN CirrusCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mare-TheWord
 (and (isa :NOUN (AdultFn (FemaleFn Horse)))) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Margarine-TheWord (and (isa :NOUN Margarine))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marigold (and (isa :NOUN Calendula)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marijuana-TheWord (and (isa :NOUN Marijuana))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Marijuana-TheWord (and (isa :NOUN HempPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marimba-TheWord (and (isa :NOUN Xylophone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marina-TheWord (and (isa :NOUN Marina))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marine-TheWord (and (isa :NOUN MarinePersonnel))
 (frame FN_Member_of_military) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marines-TheWord (and (isa :NOUN MarineCorps))
 (frame FN_Military) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "marital") Status-TheWord
 (and (isa :NOUN PersonTypeByMaritalStatus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marjoram-TheWord (and (isa :NOUN Marjoram))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mark-TheWord (and (isa :NOUN Mark-Germany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mark-TheWord (and (isa :NOUN Mark-WestGermany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mark-TheWord (and (isa :NOUN VisualMark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mark-TheWord (and (isa :NOUN GameMark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marker-TheWord
 (and (isa :NOUN Marker-WritingImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "market") Economy-TheWord
 (and (isa :NOUN FreeMarketEconomicSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marketplace-TheWord
 (and (isa :NOUN Marketplace-Object)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "marking") Accessory-TheWord
 (and (isa :NOUN MarkingAccessory-Tool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "marking") Game-TheWord (and (isa :NOUN MarkingGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Markka-TheWord (and (isa :NOUN Markkaa-Finland))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marlin-TheWord (and (isa :NOUN Marlin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "marmalade") Tree-TheWord (and (isa :NOUN Sapote))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marquis-TheWord (and (isa :NOUN Marquis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "marriage") License-TheWord
 (and (isa :NOUN MarriageLicenseDocument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marriage-TheWord (and (isa :NOUN Marriage-Agreement))
 (frame FN_Forming_relationships)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_1) ((PPFn to) fe_partner_2)
    ((PPFn among) fe_partners) ((PPFn between) fe_partners)
    (AJP temporallyIntersects))
   (:GAP (INI fe_partner_1 fe_partner_2)) (:GEN (Poss fe_partner_1))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Marriage-TheWord (and (isa :NOUN WeddingCeremony))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marriage-TheWord
 (and (isa :NOUN WeddingEvent-Entire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "married") Name-TheWord (and (isa :NOUN HumanSurname))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Marrow-TheWord (and (isa :NOUN BoneMarrow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marseillaise-TheWord
 (and (isa :NOUN (NationalAnthemFn France))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marsh-TheWord (and (isa :NOUN Marsh))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N parts (InverseBinaryPredicateFn nameString))
    (AJP fe_formational_cause fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 3 0)) ((0 4 0)) ((0 2 1)) ((0 1 1)) ((0 0 0)) ((0 1 0))
   ((0 0 0) (0 3 0)) ((0 0 0) (0 2 1)) ((0 1 0) (0 2 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Marshal-TheWord
 (and (isa :NOUN Marshal-CommissionedOfficer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Marshland-TheWord (and (isa :NOUN Marsh))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Marsupial-TheWord (and (isa :NOUN Marsupial))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "martial") Art-TheWord
 (and (isa :NOUN MartialArtsActivity-Asian)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Martian-TheWord (and (isa :NOUN Martian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "martin" "luther" "king" "jr" "s") Birthday-TheWord
 (and (isa :NOUN MLKHoliday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "martini") Glass-TheWord
 (and (isa :NOUN MartiniGlass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Martyr-TheWord (and (isa :NOUN Martyr-Victim))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mascara-TheWord (and (isa :NOUN Mascara))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_decoration_descriptor))
   (:GAP (DEN decorativeObjectsApplied))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mascara-TheWord (and (isa :NOUN Mascara))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mask-TheWord (and (isa :NOUN Mask))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP wornOn) ((PPFn over) wornOn) ((PPFn with) parts)
    (N mainConstituent clothingStyle deviceUse) (AJP deviceUse)
    ((PPFn for) wearer))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 2)) ((0 4 0)) ((0 3 1)) ((0 3 0)) ((0 1 0))
   ((0 3 2) (0 5 0)) ((0 2 0) (0 3 1)) ((0 2 0) (0 3 0)) ((0 1 0) (0 3 2))
   ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Mask-TheWord (and (isa :NOUN Mask)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Masquerade-TheWord (and (isa :NOUN Masquerading))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mass") Noun-TheWord (and (isa :NOUN MassNoun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mass-TheWord (and (isa :NOUN Mass))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) fe_individuals)
    ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 2 0)))))

(FNNounSemtrans (TheList) Mass-TheWord
 (and (isa :NOUN Mass-CatholicChurchService)) (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) groupMembers) ((PPFn at) eventOccursAt)
    ((PPFn on) temporallyIntersects) (A temporallyIntersects)
    (N temporallyIntersects))
   (:GAP (DNI leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 4 0)) ((0 0 0) (0 3 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Massacre-TheWord (and (isa :NOUN Massacre))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers))
   (:OBLIQUE-OBJECT (N killers) ((PPFn by) killers) ((PPFn on) eventOccursAt)
    ((PPFn of) victim))
   (:GAP (DNI killers victim) (CNI killers victim))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 3 0)) ((1 2 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 3 0))
   ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Massage-TheWord (and (isa :NOUN Massaging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Massif-TheWord (and (isa :NOUN Mountain))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Mast-TheWord (and (isa :NOUN Mast-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "master") Bedroom-TheWord (and (isa :NOUN Bedroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "master" "in") Business-TheWord
 (and (isa :NOUN MasterOfBusinessAdministrationDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "master" "of") Arts-TheWord
 (and (isa :NOUN MasterOfArtsDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "master" "of") Science-TheWord
 (and (isa :NOUN MasterOfScienceDegree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "master" "s") Degree-TheWord
 (and (isa :NOUN MastersDegree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Master-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn with) fe_focal_participant) (AJP fe_degree hasSkill)
    (N hasSkill) ((PPFn in) hasSkill) ((PPingFn of) hasSkill)
    ((PPFn at) hasSkill) ((PPFn of) hasSkill) ((PPingFn at) hasSkill))
   (:GAP (DEN affectedAgent))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 1 1)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 7 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 1 1)) ((0 0 0) (1 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Master-TheWord (and (isa :NOUN ShipCaptain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Master-TheWord
 (and (isa :NOUN Person) (relationExistsInstance boss Person :NOUN))
 (frame FN_Subordinates_and_superiors)
 (bindingTemplate
  (TheList (:SUBJECT (NP boss)) (:OBJECT (Poss fe_subordinate))
   (:OBLIQUE-OBJECT ((PPFn of) fe_subordinate) (NP boss)) (:GAP (DEN boss))
   (:GEN (Poss fe_subordinate))))
 (groupPatterns (TheSet ((4 0 0)) ((1 0 0) (2 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Mastery-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent hasSkill))
   (:OBLIQUE-OBJECT ((PPFn on) fe_knowledge) ((PPFn over) fe_knowledge)
    ((PPFn of) fe_knowledge hasSkill) ((PPingFn of) hasSkill)
    (AJP fe_degree fe_knowledge hasSkill) (NP hasSkill) (N hasSkill)
    ((PPFn as) hasSkill) ((PPFn in) hasSkill))
   (:GAP (2nd affectedAgent) (DNI affectedAgent) (INI affectedAgent hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((0 0 1)) ((1 4 2)) ((1 3 0) (3 0 0))
   ((1 2 1) (3 0 0)) ((1 8 0) (3 0 0)) ((1 7 0) (3 0 0)) ((1 6 0) (3 0 0))
   ((1 4 2) (3 0 0)) ((0 0 0) (1 2 1)) ((0 0 0) (1 5 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (3 0 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0)) ((1 4 1) (3 0 0))
   ((1 2 0) (1 4 0)) ((1 3 0) (1 4 0) (3 0 0)) ((1 2 1) (1 4 0) (3 0 0)))))

(FNNounSemtrans (TheList) Mastication-TheWord (and (isa :NOUN Chewing))
 (frame FN_Grinding) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mastiff-TheWord (and (isa :NOUN Mastiff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Masturbation-TheWord (and (isa :NOUN Masturbating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mat-TheWord (and (isa :NOUN Mat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Match-TheWord (and (isa :NOUN Comparing))
 (frame FN_Evaluative_comparison) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Match-TheWord (and (isa :NOUN Competition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Match-TheWord (and (isa :NOUN Match-FireStarter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Match-TheWord (and (isa :NOUN SportsCompetition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mate-TheWord (and (isa :NOUN FirstMate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mate-TheWord (and (isa :NOUN InvolvedInRelationship))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT (AJP fe_depictive duration) ((PPFn of) fe_partner_2)
    ((PPFn from) fe_source_of_relationship))
   (:GAP (DEN fe_partner_1)) (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 1)) ((1 0 1)) ((0 0 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((1 0 1) (1 1 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 1) (1 1 0))
   ((0 0 0) (1 0 1) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Material-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance ingredients Artifact :NOUN))
 (frame FN_Ingredients)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) comesFrom-Generic)
    ((PPFn for) fe_product stuffUse)
    (A fe_product activeIngredientsOfType stuffUse) (VPing stuffUse)
    (AJP fe_descriptor activeIngredientsOfType stuffUse)
    (N fe_product stuffUse))
   (:GAP (DEN mainConstituent) (INI fe_product stuffUse)
    (DNI fe_product stuffUse) (2nd stuffUse))
   (:GEN (Poss fe_product))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 5 1)) ((0 4 2)) ((0 4 1)) ((0 2 1)) ((0 2 2)) ((0 5 0))
   ((0 2 0)) ((0 0 0)) ((0 4 0)) ((0 4 1) (0 4 2)) ((0 3 0) (2 0 0))
   ((0 1 0) (0 2 1)) ((0 1 1) (0 4 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Material-TheWord (and (isa :NOUN ExistingStuffType))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_inherent_purpose)
    (N fe_inherent_purpose) (VPbrst fe_inherent_purpose)
    (A fe_descriptor fe_inherent_purpose stuffUsed activeIngredientsOfType))
   (:GAP (DEN stuffUsed)) (:NOUN (N activeIngredientsOfType))
   (:APPOSITIVE (NP stuffUsed))))
 (groupPatterns
  (TheSet ((0 3 3)) ((0 3 2)) ((3 0 0)) ((0 1 0)) ((0 0 1)) ((0 3 1)) ((0 3 0))
   ((0 0 0)) ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Material-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N situationTopic) ((PPFn on) situationTopic))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Math-TheWord (and (isa :NOUN Mathematics))
 (frame FN_Fields) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mathematical") Notation-TheWord
 (and (isa :NOUN MathematicalNotation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mathematical") Relation-TheWord
 (and (isa :NOUN Relation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mathematical") Statement-TheWord
 (and (isa :NOUN MathematicalStatement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mathematician-TheWord (and (isa :NOUN Mathematician))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mathematics-TheWord (and (isa :NOUN Mathematics))
 (frame FN_Fields) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Matricide-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Matron-TheWord (and (isa :NOUN HeadNurse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mattress-TheWord (and (isa :NOUN Mattress))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mattress") Pad-TheWord (and (isa :NOUN MattressPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maturation-TheWord
 (and (isa :NOUN AccumulatingSteadily)) (frame FN_Progression)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maturation-TheWord (and (isa :NOUN ImprovementEvent))
 (frame FN_Progression) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maturity-TheWord
 (and (isa :NOUN HumanTypeByLifeStageType)) (frame FN_Age)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBLIQUE-OBJECT (AJP fe_degree))
   (:GAP (DEN age))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Maturity-TheWord
 (and (isa :NOUN MakingSomethingAvailable) (objectMadeAvailable :NOUN ?money)
      (isa ?money MonetaryValue) (yieldToMaturity ?bond ?money)
      (isa ?bond Bond-Agreement) (agreementMaturity ?bond ?date)
      (duration ?date ?duration) (greaterThan ?duration (DaysDuration 1)))
 (frame FN_Bond_maturation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_financial_instrument))
   (:OBLIQUE-OBJECT ((PPFn of) fe_financial_instrument))
   (:GAP (DNI fe_financial_instrument) (DEN temporallyIntersects))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Maturity-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maturity-TheWord (and (isa :NOUN Maturity))
 (frame FN_Social_interaction_evaluation)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT (AJP fe_degree) (AVP fe_degree)
    ((PPFn of) objectOfEvaluation))
   (:GAP (DNI objectOfEvaluation)) (:GEN (Poss objectOfEvaluation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 2 0))
   ((0 0 0) (1 1 0) (1 1 0)))))

(FNNounSemtrans (TheList) Matzo-TheWord (and (isa :NOUN UnleavenedBread))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mauritian") Rupee-TheWord
 (and (isa :NOUN Rupee-Mauritius)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maven-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree hasSkill) (N fe_knowledge hasSkill))
   (:APPOSITIVE (NP affectedAgent))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 1 1) (1 0 0)) ((0 0 1) (1 0 0))
   ((0 1 0) (1 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Maw-TheWord (and (isa :NOUN Mouth))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "maxillary") Artery-TheWord
 (and (isa :NOUN MaxillaryArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "maxillary") Sinus-TheWord
 (and (isa :NOUN MaxillarySinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "maxillary") Vein-TheWord
 (and (isa :NOUN MaxillaryVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Maxipad-TheWord (and (isa :NOUN MaxiPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) May-TheWord (and (isa :NOUN May))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    (NP (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit) (INI fe_relative_time (InverseBinaryPredicateFn parts))
    (DNI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Mayan-TheWord (and (isa :NOUN EthnicGroupOfMayans))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mayonnaise-TheWord (and (isa :NOUN Mayonnaise))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Mayor-TheWord (and (isa :NOUN Mayor))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (A fe_depictive) (N fe_depictive fe_governed)
    ((PPFn of) fe_governed) (AJP activeIngredientsOfType))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 0 1)) ((4 0 0)) ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((0 0 1) (0 0 1)) ((3 0 0) (4 0 0)) ((1 1 1) (4 0 0)) ((0 0 0) (0 0 0))
   ((1 0 0) (4 0 0)) ((1 1 0) (3 0 0)) ((1 0 0) (3 0 0))
   ((1 2 0) (1 3 0) (4 0 0)) ((1 1 0) (1 1 1) (4 0 0)))))

(FNNounSemtrans (TheList) Me-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mead-TheWord (and (isa :NOUN Meadow))
 (frame FN_Biological_area)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meadow-TheWord (and (isa :NOUN Meadow))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meadowland-TheWord (and (isa :NOUN Meadow))
 (frame FN_Biological_area)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meal-TheWord (and (isa :NOUN FlourOrMeal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meal-TheWord (and (isa :NOUN Meal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meaning-TheWord (and (isa :NOUN Concept))
 (frame FN_Linguistic_meaning)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_form fe_meaning))
   (:OBLIQUE-OBJECT (N fe_form) ((PPFn behind) fe_form) ((PPFn of) fe_form)
    (A fe_textual_location))
   (:GAP (DEN fe_meaning))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 2 0) (1 3 0))
   ((0 0 1) (1 2 0)))))

(FNNounSemtrans (TheList) Means-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn of) purposeOfEvent) (AJP purposeOfEvent)
    (VPto purposeOfEvent))
   (:GAP (DEN by-Underspecified) (DNI doneBy by-Underspecified))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Measles-TheWord (and (isa :NOUN Measles))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Measure-TheWord (and (isa :NOUN PhysicalAmountSlot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Measure-TheWord (and (isa :NOUN MeasuringSomething))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Measures-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_act) (AJP fe_manner) (VPed purposeOfEvent))
   (:GAP (DEN fe_act))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "measuring") Cup-TheWord
 (and (isa :NOUN MeasuringCup)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "meat") Cleaver-TheWord (and (isa :NOUN Cleaver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "meat") Grinder-TheWord (and (isa :NOUN MeatGrinder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meat-TheWord (and (isa :NOUN Meat)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (A fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType)
    (NP fe_descriptor activeIngredientsOfType) (Poss activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 2 1)) ((0 1 1)) ((0 3 0)) ((0 2 0)) ((0 0 0))
   ((0 1 0)) ((0 1 0) (0 2 1)) ((0 1 0) (0 1 1)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList "meat") Thermometer-TheWord
 (and (isa :NOUN MeatThermometer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mechanic-TheWord (and (isa :NOUN Mechanic))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical" "bike") Part-TheWord
 (and (isa :NOUN MechanicalBicyclePart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical" "car") Part-TheWord
 (and (isa :NOUN MechanicalAutoPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical") Device-TheWord
 (and (isa :NOUN MechanicalDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical") Engineer-TheWord
 (and (isa :NOUN MechanicalEngineer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical") Energy-TheWord
 (and (isa :NOUN MechanicalEnergy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical" "pencil" "lead") Refill-TheWord
 (and (isa :NOUN MechanicalPencilLead-Refill)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mechanical") Pencil-TheWord
 (and (isa :NOUN MechanicalPencil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mechanism-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A fe_descriptor) (N purposeOfEvent))
   (:GAP (INI doneBy) (DEN fe_descriptor by-Underspecified purposeOfEvent))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Medal-TheWord (and (isa :NOUN Medal-Physical))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn round) wornOn) ((PPFn of) fe_descriptor)
    (N fe_descriptor mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement) (2nd wearer))
   (:GEN (Poss fe_descriptor wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 3 2)) ((0 2 1)) ((0 3 1)) ((2 0 0)) ((0 1 0)) ((0 2 0))
   ((0 3 0)) ((0 2 0) (0 3 1)) ((0 2 1) (0 3 0)) ((0 1 0) (0 3 0))
   ((0 2 0) (0 3 0)) ((0 0 0) (0 3 1)))))

(FNNounSemtrans (TheList) Medallion-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn around) wornOn) ((PPFn at) wornOn)
    ((PPFn on) fe_descriptor) (AJP fe_descriptor mainConstituent)
    (N mainConstituent))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 1 0)) ((0 3 1) (2 0 0)) ((0 3 0) (0 4 0))
   ((0 0 0) (0 3 1)) ((0 0 0) (0 3 0)) ((0 2 0) (0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList "medevac") Helicopter-TheWord
 (and (isa :NOUN MedEvacHelicopter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Median-TheWord (and (isa :NOUN Median))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Care-TheWord
 (and (isa :NOUN MedicalCareEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Diagnosis-TheWord
 (and (isa :NOUN MedicalDiagnosis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical" "drug") Implant-TheWord
 (and (isa :NOUN MedicalDrugImplant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical" "injection") Tool-TheWord
 (and (isa :NOUN MedicalInjectionTool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Instrument-TheWord
 (and (isa :NOUN MedicalDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Practitioner-TheWord
 (and (isa :NOUN MedicalCareProfessional)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Scale-TheWord
 (and (isa :NOUN MedicalScale)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") School-TheWord
 (and (isa :NOUN MedicalSchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Science-TheWord
 (and (isa :NOUN Medicine-FieldOfStudy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medical") Thermometer-TheWord
 (and (isa :NOUN MedicalThermometer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Medication-TheWord (and (isa :NOUN DrugTherapy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Medicine-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPing activeIngredientsOfType))
   (:GAP (DEN medicalSpecialty) (INI medicalSpecialty))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Medicine-TheWord (and (isa :NOUN DrugSubstance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Medicine-TheWord
 (and (isa :NOUN Medicine-FieldOfStudy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medieval") Greek-TheWord
 (and (isa :NOUN ByzantineGreekLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meditation-TheWord (and (isa :NOUN Thinking))
 (frame FN_Cogitation)
 (bindingTemplate
  (TheList (:SUBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    ((PPFn of) subjectOfMentalSituation) (AJP fe_manner)
    ((PPFn on) situationTopic) ((PPFn about) situationTopic)
    ((PPFn over) situationTopic) ((PPFn upon) situationTopic)
    ((PPingFn on) situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 6 0)) ((1 3 0)) ((2 0 0)) ((1 1 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 2 0)) ((1 5 0) (2 0 0)) ((1 3 0) (2 0 0)) ((1 4 0) (2 0 0))
   ((1 0 0) (1 3 0)) ((1 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Meditation-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Medium-TheWord (and (isa :NOUN PsychicAdviser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Medley-TheWord (and (isa :NOUN DiverseGroup))
 (frame FN_Diversity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "medulla") Oblongata-TheWord
 (and (isa :NOUN MedullaOblongata)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meet-TheWord (and (isa :NOUN AbsoluteSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meeting-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors))
   (:OBLIQUE-OBJECT ((PPFn over) duration) ((PPFn with) fe_interlocutor_2)
    ((PPFn between) fe_interlocutors) ((PPFn up) eventOccursAt)
    (VPto purposeOfEvent) ((PPFn at) eventOccursAt temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects)
    ((PPFn of) fe_interlocutors temporallyIntersects)
    (AJP fe_depictive fe_manner temporallyIntersects)
    ((PPingFn on) situationTopic) ((PPFn about) situationTopic)
    ((PPFn concerning) situationTopic)
    (N duration fe_interlocutors situationTopic))
   (:GAP (DNI fe_interlocutors situationTopic)
    (INI fe_interlocutor_1 fe_interlocutors situationTopic)
    (CNI fe_interlocutor_1 situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 11 0)) ((1 13 2)) ((1 5 0)) ((3 0 1)) ((1 8 0)) ((1 2 0))
   ((0 0 1)) ((1 13 1)) ((1 1 0)) ((3 0 0)) ((0 0 0)) ((1 2 0) (1 12 0))
   ((0 0 1) (1 11 0)) ((1 8 1) (1 13 1)) ((1 7 0) (3 0 1)) ((1 8 0) (3 0 2))
   ((1 8 0) (1 9 2)) ((1 2 0) (1 9 2)) ((1 2 0) (1 4 0)) ((1 1 0) (3 0 2))
   ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0)) ((0 0 1) (1 0 0)) ((1 8 0) (1 13 0))
   ((1 6 0) (1 7 0) (1 8 0)) ((1 5 0) (1 8 0) (1 9 2))
   ((1 1 0) (1 6 1) (3 0 0)) ((0 0 0) (1 1 0) (1 6 1))
   ((0 0 0) (1 1 0) (1 9 1)) ((1 6 0) (1 8 0) (1 9 0))
   ((1 1 0) (1 6 0) (1 7 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 3 0) (1 5 1) (1 10 0)))))

(FNNounSemtrans (TheList) Meeting-TheWord
 (and (isa :NOUN Meeting-SocialGathering)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meeting-TheWord (and (isa :NOUN SportsEvent))
 (frame FN_Social_event)
 (bindingTemplate (TheList (:GAP (DEN fe_social_event))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meeting-TheWord
 (and (isa :NOUN InformationBearingPerformance)) (frame FN_Social_event)
 (bindingTemplate (TheList (:GAP (DEN fe_social_event))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meeting-TheWord (and (isa :NOUN EntertainmentEvent))
 (frame FN_Social_event)
 (bindingTemplate (TheList (:GAP (DEN fe_social_event))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Megabyte-TheWord (and (isa :NOUN Megabyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Megahertz-TheWord (and (isa :NOUN MegaHertz))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Megalopolis-TheWord (and (isa :NOUN (LargeFn City)))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Meiosis-TheWord (and (isa :NOUN Meiosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Melanin-TheWord (and (isa :NOUN Melanin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Melatonin-TheWord (and (isa :NOUN Melatonin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Melting-TheWord (and (isa :NOUN Melting))
 (frame FN_Apply_heat) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Member-TheWord
 (and (isa :NOUN ExternalAnatomicalPart)) (frame FN_Body_parts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Member-TheWord
 (and (isa :NOUN Individual) (relationExistsInstance parts Individual :NOUN))
 (frame FN_Membership)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers groupMembers))
   (:OBLIQUE-OBJECT ((PPFn of) groupMembers groupMembers)
    (A hasStatusWithOrganization) (AJP groupMembers hasStatusWithOrganization)
    ((PPFn in) hasStatusWithOrganization)
    (NP groupMembers hasStatusWithOrganization)
    (N groupMembers hasStatusWithOrganization))
   (:GAP (DNI groupMembers) (DEN groupMembers) (2nd groupMembers))
   (:GEN (Poss groupMembers))
   (:APPOSITIVE (NP groupMembers) (N groupMembers))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 5 0)) ((3 0 0)) ((1 0 0))
   ((0 0 0) (1 2 1)) ((0 0 0) (1 0 0)) ((1 0 0) (1 5 1)) ((1 0 0) (1 2 1))
   ((1 0 0) (1 1 0)) ((0 0 0) (1 4 1)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 2 0)) ((1 4 0) (4 1 0)) ((0 0 0) (1 5 0)) ((1 5 0) (4 0 0))
   ((1 0 0) (1 2 0) (1 2 1)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Membership-TheWord (and (isa :NOUN Membership))
 (frame FN_Membership)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT ((PPFn on) groupMembers)
    ((PPFn of) groupMembers groupMembers) (NP groupMembers)
    (N groupMembers groupMembers) (AJP groupMembers)
    (VPing hasStatusWithOrganization))
   (:GAP (INI groupMembers)) (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 3 0)) ((1 1 0) (1 5 0))
   ((1 1 0) (3 0 0)) ((1 2 0) (3 0 0)) ((1 0 0) (1 4 0)) ((1 1 0) (1 2 0))
   ((1 1 0) (1 3 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Meme-TheWord (and (isa :NOUN Meme)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Memo-TheWord (and (isa :NOUN Memorandum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Memoir-TheWord (and (isa :NOUN Autobiography))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn from) startingDate)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic) (N situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (2nd authorOfLiteraryWork-CW) (DEN fe_text))
   (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 1 0)) ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 0 0))
   ((0 2 1) (2 0 0)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Memorial-TheWord (and (isa :NOUN MemorialMarker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Memorization-TheWord (and (isa :NOUN Memorizing))
 (frame FN_Memorization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_completeness) (N fe_manner) ((PPFn of) fe_pattern)
    ((PPFn for) fe_pattern))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "memory") Device-TheWord
 (and (isa :NOUN InformationStorageDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Memory-TheWord (and (isa :NOUN Memory))
 (frame FN_Memory)
 (bindingTemplate
  (TheList (:GAP (DEN topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Memory-TheWord (and (isa :NOUN Remembering))
 (frame FN_Remembering_experience)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation fe_experience))
   (:OBLIQUE-OBJECT (N fe_context) ((PPingFn of) fe_experience)
    ((PPFn of) fe_experience topicOfIndividual) (AJP fe_manner fe_vividness))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 0 0)) ((0 0 1) (1 3 1)) ((1 2 0) (2 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 0)) ((1 0 0) (1 2 0) (2 0 0))
   ((0 0 0) (1 2 1) (2 0 0)))))

(FNNounSemtrans (TheList) Membrane-TheWord (and (isa :NOUN Membrane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "men" "^s") Room-TheWord (and (isa :NOUN MensRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "men" "^s") Clothing-TheWord
 (and (isa :NOUN MensClothing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meningitis-TheWord
 (and (isa :NOUN (InfectionFn Meninges))) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meninx-TheWord (and (isa :NOUN Meninges))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mennonitism-TheWord
 (and (isa :NOUN MennoniteReligion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Menopause-TheWord (and (isa :NOUN Menopause))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Menorrhagia-TheWord
 (and (isa :NOUN AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "menstrual") Cycle-TheWord
 (and (isa :NOUN MenstrualCycle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Menstruation-TheWord (and (isa :NOUN Menstruating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mental") Illness-TheWord
 (and (isa :NOUN PsychologicalAilment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mention-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo)
    ((PPFn on) genericPathway-Partial) ((PPFn as) infoTransferred)
    ((PPFn for) infoTransferred) ((PPingFn of) infoTransferred)
    (Sfin infoTransferred)
    ((PPFn in) genericPathway-Partial eventOccursAt performedBy)
    ((PPFn during) temporallyIntersects) ((PPFn at) temporallyIntersects)
    ((PPFn by) temporallyIntersects) ((PPFn of) infoTransferred situationTopic)
    ((PPFn about) infoTransferred situationTopic))
   (:GAP (CNI performedBy) (INI performedBy))
   (:GEN (Poss infoTransferred performedBy situationTopic))))
 (groupPatterns
  (TheSet ((1 10 1)) ((1 11 1)) ((1 8 0)) ((1 6 2)) ((0 0 0)) ((1 5 0))
   ((3 0 0)) ((1 4 0)) ((1 10 0)) ((1 3 0)) ((1 2 0)) ((1 11 0)) ((1 1 0))
   ((1 6 0)) ((1 9 0) (1 10 1)) ((0 0 0) (1 5 0)) ((1 4 0) (3 0 1))
   ((0 0 0) (1 10 0)) ((0 0 0) (1 2 0)) ((1 6 1) (1 10 0)) ((1 6 0) (3 0 2))
   ((1 6 0) (3 0 0)) ((1 6 0) (1 10 0)) ((0 0 0) (1 7 0) (1 10 0))
   ((0 0 0) (1 0 0) (1 10 0)))))

(FNNounSemtrans (TheList) Menu-TheWord (and (isa :NOUN RestaurantMenu))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meow-TheWord (and (isa :NOUN MeowingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Merchandise-TheWord (and (isa :NOUN Product))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "merchant" "marine") Ship-TheWord
 (and (isa :NOUN MerchantMarineShip-Bulk)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Merchant-TheWord (and (isa :NOUN Vendor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mercury-TheWord (and (isa :NOUN Mercury))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Merger-TheWord (and (isa :NOUN OrganizationMerger))
 (frame FN_Amalgamation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meridian-TheWord (and (isa :NOUN LongitudeLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meristem-TheWord (and (isa :NOUN Meristem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mermaid-TheWord (and (isa :NOUN Mermaid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Merman-TheWord (and (isa :NOUN Merman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meronym-TheWord
 (and (isa :NOUN LexicalWord) (isa ?word2 LexicalWord)
      (isa ?rel BinaryRelation) (arg1Isa ?rel LexicalWord)
      (arg2Isa ?rel LexicalWord) (?rel :NOUN ?word2))
 (frame FN_Word_relations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mesa-TheWord (and (isa :NOUN Mesa))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Mescal-TheWord (and (isa :NOUN Peyote))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mescaline-TheWord (and (isa :NOUN Mescaline))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mesozoic-TheWord
 (and (isa :NOUN Mesozoic-GeologicalEra)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mess") Jacket-TheWord (and (isa :NOUN MessJacket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mess-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:GAP (DEN fe_situation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mess-Up-TheWord
 (and (isa :NOUN (UnsuccessfulFn Attempting))) (frame FN_Bungling)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Message-TheWord (and (isa :NOUN Message-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Message-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP infoTransferred) ((PPFn at) eventOccursAt)
    ((PPFn by) performedBy))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Messenger-TheWord (and (isa :NOUN Courier-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "messenger") Rna-TheWord
 (and (isa :NOUN MatureMessengerRNA)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metabolism-TheWord (and (isa :NOUN MetabolicPathway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metabolism-TheWord (and (isa :NOUN Metabolism-Human))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metacarpal-TheWord (and (isa :NOUN MetaCarpal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metal-TheWord (and (isa :NOUN Metal))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "metal") Tube-TheWord (and (isa :NOUN MetalTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "metallurgical") Goods-TheWord
 (and (isa :NOUN MetallurgicalGoods)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metalwork-TheWord (and (isa :NOUN Metalwork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "metalworking") Tool-TheWord
 (and (isa :NOUN MetalworkingTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "metamorphic") Rock-TheWord
 (and (isa :NOUN MetamorphicRock)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metamorphosis-TheWord
 (and (isa :NOUN Metamorphosis-Insect)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metamorphosis-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent)) (frame FN_Undergo_change)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metaphysics-TheWord (and (isa :NOUN Metaphysics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metatarsal-TheWord (and (isa :NOUN Metatarsal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "meteor") Shower-TheWord
 (and (isa :NOUN MeteorShower)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "meteor") Swarm-TheWord
 (and (isa :NOUN (GroupFn Meteoroid))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meteor-TheWord (and (isa :NOUN Meteor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meteorite-TheWord (and (isa :NOUN Meteorite))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meteoroid-TheWord (and (isa :NOUN Meteoroid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "meteorological") Balloon-TheWord
 (and (isa :NOUN WeatherBalloon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "meteorological") Satellite-TheWord
 (and (isa :NOUN WeatherSatellite)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meteorologist-TheWord (and (isa :NOUN Meteorologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meteorology-TheWord (and (isa :NOUN Meteorology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meter-TheWord (and (isa :NOUN Meter))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn lengthOfObject)))
   (:OBLIQUE-OBJECT (unknown fe_count) (AJP fe_count hasPhysicalQuantity)
    ((PPFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((1 2 0)) ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Methamphetamine-TheWord
 (and (isa :NOUN Methamphetamine)) (frame FN_Intoxicants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Methane-TheWord (and (isa :NOUN Methane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Methane-TheWord (and (isa :NOUN Methane))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Methanol-TheWord (and (isa :NOUN MethylAlcohol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Method-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor) (N purposeOfEvent))
   (:GAP (DEN by-Underspecified) (INI doneBy purposeOfEvent)
    (DNI purposeOfEvent))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Method-TheWord (and (isa :NOUN TechniqueType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Methodism-TheWord (and (isa :NOUN MethodistReligion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "methodist") Church-TheWord
 (and (isa :NOUN MethodistReligion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Methylenedioxymethamphetamine-TheWord
 (and (isa :NOUN MDMA-TheStimulant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metical-TheWord (and (isa :NOUN Metical-Mozambique))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "metric") Ton-TheWord (and (isa :NOUN MetricTon))
 (frame FN_Measure_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn massOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "metric") Ton-TheWord (and (isa :NOUN MetricTon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metro-TheWord (and (isa :NOUN Subway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metronymic-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Metropolis-TheWord (and (isa :NOUN City))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (N (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor fe_population))
   (:GAP (DEN parts eventLocale))))
 (groupPatterns (TheSet ((0 2 1)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Mew-TheWord (and (isa :NOUN MeowingSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter)) (:OBLIQUE-OBJECT (AJP fe_manner))
   (:GEN (Poss emitter))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "mexican") Peso-TheWord (and (isa :NOUN Peso-Mexico))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mexican-TheWord (and (isa :NOUN MexicanPerson))
 (frame FN_People_by_origin) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mica-TheWord (and (isa :NOUN Mica))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microbe-TheWord (and (isa :NOUN Microorganism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microbiology-TheWord (and (isa :NOUN Microbiology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microfiche-TheWord (and (isa :NOUN Microfiche))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microfilm-TheWord (and (isa :NOUN Microfilm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microgram-TheWord (and (isa :NOUN (Micro Gram)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Micron-TheWord (and (isa :NOUN Micron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microorganism-TheWord (and (isa :NOUN Microorganism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microphone-TheWord (and (isa :NOUN Microphone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microscope-TheWord (and (isa :NOUN Microscope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microscopist-TheWord (and (isa :NOUN Microscopist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microsecond-TheWord
 (and (isa :NOUN MicroSecondsDuration)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "micrototer") Plate-TheWord
 (and (isa :NOUN MicrotiterPlate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "microwave") Oven-TheWord
 (and (isa :NOUN MicrowaveOven)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Microwave-TheWord (and (isa :NOUN MicrowaveOven))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "microwave") Transmitter-TheWord
 (and (isa :NOUN MicrowaveTransmitter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Midbrain-TheWord (and (isa :NOUN Midbrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Midday-TheWord (and (isa :NOUN Midday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn parts))
    ((PPFn on) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "middle" "cerebral") Artery-TheWord
 (and (isa :NOUN MiddleCerebralArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "middle") Class-TheWord (and (isa :NOUN MiddleClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "middle") Finger-TheWord
 (and (isa :NOUN MiddleFinger)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "middle") Name-TheWord
 (and (isa :NOUN HumanNameString)
      (relationExistsInstance middleName Agent-Generic :NOUN))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0) (3 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "middle" "of") Nowhere-TheWord
 (and (isa :NOUN RuralArea)) (frame FN_Isolated_places)
 (bindingTemplate (TheList (:GAP (DEN eventOccursAt))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Middle-TheWord
 (and (isa :NOUN SpatialThing)
      (relationExistsInstance surrounds-2D SpatialThing :NOUN))
 (frame FN_Part_inner_outer)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Middle-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance middlePartOfInterval TemporalThing :NOUN))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) occursDuring)) (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "middle" "thyroid") Vein-TheWord
 (and (isa :NOUN MiddleThyroidVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Midnight-TheWord
 (and (isa :NOUN TimeOfDay-MidnightHour)) (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn parts)) (NP (InverseBinaryPredicateFn parts))
    ((PPFn on) (InverseBinaryPredicateFn parts)))
   (:GAP (DNI fe_unit) (INI fe_relative_time (InverseBinaryPredicateFn parts))
    (DEN fe_unit (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Midnight-TheWord (and (isa :NOUN (HourOfDayFn 0)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Midriff-TheWord (and (isa :NOUN Abdomen))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Midwife-TheWord (and (isa :NOUN Midwife))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Midwifery-TheWord (and (isa :NOUN Midwife))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Might-TheWord (and (isa :NOUN Strength))
 (frame FN_Level_of_force_exertion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_degree fe_descriptor fe_domain)
    (AJP fe_descriptor fe_domain) ((PPFn of) objectActedOn fe_exerter))
   (:GEN (Poss fe_exerter))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 2 1)) ((0 0 2)) ((0 1 1) (0 2 1)) ((0 0 2) (1 0 0))
   ((0 0 2) (0 2 1)) ((0 1 0) (0 2 1)) ((0 0 1) (1 0 0)) ((0 0 1) (0 2 1))
   ((0 0 0) (1 0 0)) ((0 0 1) (0 2 0)) ((0 0 2) (0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Migraine-TheWord (and (isa :NOUN Migraine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Migration-TheWord (and (isa :NOUN AnimalMigration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mile-TheWord (and (isa :NOUN Mile))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT (NP fe_count) (Num fe_count) (AJP hasPhysicalQuantity)
    ((PPFn across) hasPhysicalQuantity) ((PPFn in) hasPhysicalQuantity)
    ((PPFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (2nd fe_count) (DEN fe_unit))
   (:NOUN (N (InverseBinaryPredicateFn lengthOfObject)))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((1 5 0)) ((1 4 0)) ((1 3 0)) ((1 2 0))
   ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList "miles" "per") Hour-TheWord
 (and (isa :NOUN MilesPerHour)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Milestone-TheWord (and (isa :NOUN Milestone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Milestone-TheWord (and (isa :NOUN Milestone-Goal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Militant-TheWord (and (isa :NOUN Militiaman))
 (frame FN_Irregular_combatants)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_combatant))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn of) fe_ethnicity)
    ((PPFn with) fe_persistent_characteristic) (A comesFrom-Generic fe_side_1)
    (N fe_descriptor fe_side_1)
    ((PPFn from) groupMembers comesFrom-Generic fe_side_1)
    (AJP age fe_descriptor comesFrom-Generic fe_persistent_characteristic
     fe_side_1 fe_side_2))
   (:GAP (DEN fe_combatant) (2nd purposeOfEvent fe_side_1))))
 (groupPatterns
  (TheSet ((1 6 5)) ((1 5 2)) ((1 6 4)) ((1 3 1)) ((1 4 1)) ((1 6 3)) ((1 3 0))
   ((1 5 1)) ((1 6 2)) ((1 5 0)) ((1 0 0)) ((1 4 0)) ((1 6 1)) ((0 0 0))
   ((0 0 0) (1 4 1)) ((1 2 0) (1 6 4)) ((1 3 1) (1 5 1)) ((1 3 1) (1 6 2))
   ((1 6 2) (1 6 3)) ((1 1 0) (1 6 2)) ((1 0 0) (1 4 1)) ((1 3 1) (1 6 1))
   ((0 0 0) (1 6 1)) ((0 0 0) (1 6 3)) ((1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList "military") Action-TheWord
 (and (isa :NOUN MilitaryEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Aircraft-TheWord
 (and (isa :NOUN MilitaryAircraft)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Airplane-TheWord
 (and (isa :NOUN MilitaryAirplane)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Attache-TheWord
 (and (isa :NOUN MilitaryAttache)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military" "coastal" "escort") Boat-TheWord
 (and (isa :NOUN CoastalEscortBoat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Equipment-TheWord
 (and (isa :NOUN MilitaryEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Forces-TheWord
 (and (isa :NOUN MilitaryOrganization)) (frame FN_Military)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A ownerOfProprietaryThing))
   (:GAP (DEN impactForce))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "military") Hardware-TheWord
 (and (isa :NOUN MilitaryHardware)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Helicopter-TheWord
 (and (isa :NOUN MilitaryHelicopter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Installation-TheWord
 (and (isa :NOUN MilitaryBase-Grounds)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Officer-TheWord
 (and (isa :NOUN MilitaryOfficer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military" "officer" "^s") Cap-TheWord
 (and (isa :NOUN MilitaryOfficersCap)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Platform-TheWord
 (and (isa :NOUN Platform-Military)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Service-TheWord
 (and (isa :NOUN MilitaryOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Military-TheWord
 (and (isa :NOUN MilitaryOrganization)) (frame FN_Military)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A ownerOfProprietaryThing) (AJP ownerOfProprietaryThing)
    (N ownerOfProprietaryThing))
   (:GAP (DEN impactForce) (DNI ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "military") Threat-TheWord
 (and (isa :NOUN MilitaryThreat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Uniform-TheWord
 (and (isa :NOUN MilitaryUniform)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Unit-TheWord
 (and (isa :NOUN MilitaryUnitTypeByEchelon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Vehicle-TheWord
 (and (isa :NOUN MilitaryVehicle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Watercraft-TheWord
 (and (isa :NOUN MilitaryWatercraft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "military") Weapon-TheWord
 (and (isa :NOUN MilitaryWeapon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Militia-TheWord (and (isa :NOUN Militia))
 (frame FN_Military) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Milk-TheWord (and (isa :NOUN Milk)) (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))
   (:GAP (DEN objectActedOn))
   (:GEN (Poss fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 0)) ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 1))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Milk-TheWord (and (isa :NOUN CowsMilk-Product))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "milking") Machine-TheWord
 (and (isa :NOUN MilkingMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Milkshake-TheWord (and (isa :NOUN Milkshake))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Milkweed-TheWord (and (isa :NOUN Milkweed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mill-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn in) fe_descriptor eventOccursAt)
    ((PPFn at) eventOccursAt) (AJP fe_descriptor fe_product)
    (N fe_descriptor eventOccursAt fe_product ownerOfProprietaryThing)
    ((PPFn of) eventOccursAt ownerOfProprietaryThing))
   (:GAP (DEN fe_business))
   (:GEN (Poss fe_descriptor eventOccursAt ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 2)) ((0 4 2)) ((2 0 1)) ((0 5 0)) ((0 1 1)) ((0 2 0)) ((0 4 1))
   ((0 4 0)) ((0 3 0)) ((0 4 2) (2 0 2)) ((0 4 1) (0 5 1)) ((0 4 2) (2 0 1))
   ((0 3 1) (0 5 0)) ((0 4 1) (0 4 2)) ((0 3 0) (2 0 2)) ((0 3 0) (0 5 1))
   ((0 4 2) (2 0 0)) ((0 3 0) (0 4 2)) ((0 4 0) (2 0 1)) ((0 3 0) (2 0 1))
   ((0 1 1) (0 3 0)) ((0 2 0) (0 3 0)) ((0 3 0) (0 4 0))
   ((0 2 0) (0 4 2) (2 0 2)) ((0 2 0) (0 4 2) (0 4 3))
   ((0 3 0) (0 4 2) (0 4 3)) ((0 0 0) (0 4 2) (0 5 0))
   ((0 1 0) (0 3 0) (0 4 2)) ((0 1 1) (0 3 0) (0 3 0)))))

(FNNounSemtrans (TheList) Mill-TheWord (and (isa :NOUN GrindingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Millennium-TheWord
 (and (isa :NOUN CalendarMillennium)) (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time)) (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Millennium-TheWord
 (and (isa :NOUN MillenniaDuration)) (frame FN_Measure_duration)
 (bindingTemplate (TheList (:GAP (DEN fe_unit)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Millet-TheWord (and (isa :NOUN MilletPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Millibar-TheWord
 (and (isa :NOUN (Milli Bar-UnitOfPressure))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Milligram-TheWord (and (isa :NOUN Milligram))
 (frame FN_Measure_mass)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn massOfObject)))
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn massOfObject))
    ((PPFn of) (InverseBinaryPredicateFn massOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Milliliter-TheWord (and (isa :NOUN (Milli Liter)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Millimeter-TheWord (and (isa :NOUN Millimeter))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn lengthOfObject)))
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn lengthOfObject))
    ((PPFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Millimeter-TheWord (and (isa :NOUN (Milli Meter)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Million-TheWord (and (isa :NOUN Millions-Quant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Millions-TheWord (and (isa :NOUN Millions-Quant))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DNI fe_individuals) (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Milliradian-TheWord (and (isa :NOUN Milliradian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Millisecond-TheWord
 (and (isa :NOUN MillisecondsDuration)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mime-TheWord (and (isa :NOUN Mime-Actor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Min-TheWord
 (and (isa :NOUN TaiwaneseChineseLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mine-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mine-TheWord
 (and (isa :NOUN Mine-ExcavationFacility)) (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (Srel fe_descriptor (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor fe_relative_location)
    ((PPFn below) fe_relative_location)
    ((PPFn in) situationConstituents fe_container_possessor
     fe_relative_location)
    (N fe_descriptor locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 2 0)) ((0 4 1)) ((0 1 0) (0 5 1)) ((0 1 1) (0 2 0))
   ((0 0 0) (0 5 1)) ((0 4 2) (0 5 0) (0 5 1)) ((0 2 0) (0 2 0) (0 5 1))
   ((0 3 0) (0 4 1) (0 5 1)) ((0 2 1) (0 4 0) (0 5 1))
   ((0 2 0) (0 2 0) (0 4 1) (0 5 1)))))

(FNNounSemtrans (TheList) Mine-TheWord (and (isa :NOUN Mine-Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor)
    (AJP fe_descriptor activeIngredientsOfType) (NP activeIngredientsOfType)
    (N activeIngredientsOfType doneBy))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 1 1)) ((0 1 0)) ((0 3 0) (0 3 1))
   ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Miner-TheWord (and (isa :NOUN Miner))
 (frame FN_Mining)
 (bindingTemplate (TheList (:GAP (DEN performedBy) (INI objectRemoved))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mineral") Jelly-TheWord
 (and (isa :NOUN PetroleumJelly)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mineral") Ore-TheWord (and (isa :NOUN MineralOre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mineral" "ore") Refinery-TheWord
 (and (isa :NOUN MineralOreRefinery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mineral") Water-TheWord
 (and (isa :NOUN MineralWater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mineral-TheWord (and (isa :NOUN Mineral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mineralogy-TheWord (and (isa :NOUN Mineralogy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mini" "audio") System-TheWord
 (and (isa :NOUN MiniAudioSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mini" "disc") Player-TheWord
 (and (isa :NOUN MiniDiscPlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mini-Fridge-TheWord
 (and (isa :NOUN Refrigerator-Compact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "miniature") Pinscher-TheWord
 (and (isa :NOUN MiniaturePinscher)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minibuses-TheWord (and (isa :NOUN Minibus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minicomputer-TheWord (and (isa :NOUN Minicomputer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minidisc-TheWord (and (isa :NOUN MiniDisc))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minim-TheWord (and (isa :NOUN Volume))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mining") Company-TheWord
 (and (isa :NOUN MiningOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minipad-TheWord (and (isa :NOUN MiniPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Miniskirt-TheWord (and (isa :NOUN Miniskirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (2 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Minister-TheWord
 (and (isa :NOUN Minister-Governmental)) (frame FN_Appellations)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minister-TheWord (and (isa :NOUN Minister))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn between) duration) ((PPFn from) duration)
    ((PPFn for) processTypeForAccomplishmentType duration fe_governed)
    ((PPFn of) fe_governed) (NP leadersOfMovement)
    (A fe_descriptor fe_governed
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     activeIngredientsOfType)
    (N fe_domain fe_governed activeIngredientsOfType)
    (AJP fe_descriptor fe_governed
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     activeIngredientsOfType))
   (:GAP (DNI fe_governed) (INI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 7 3)) ((1 4 0)) ((0 0 0)) ((1 5 2)) ((3 0 0)) ((1 2 2)) ((1 5 1))
   ((1 7 0)) ((1 2 0)) ((1 5 3) (1 6 1)) ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0))
   ((1 7 1) (1 7 2)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)) ((1 6 0) (4 0 0))
   ((0 0 1) (1 2 1) (1 7 1)) ((1 5 0) (1 5 3) (4 0 0))
   ((0 0 1) (0 0 1) (1 3 0) (1 6 2)) ((1 5 0) (1 5 0) (1 5 3) (4 0 0)))))

(FNNounSemtrans (TheList) Minister-TheWord
 (and (isa :NOUN Minister-Governmental)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ministry-TheWord (and (isa :NOUN Ministry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minivan-TheWord (and (isa :NOUN Minivan))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mink-TheWord (and (isa :NOUN Mink)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mink-TheWord (and (isa :NOUN MinkCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "minor") League-TheWord (and (isa :NOUN MinorLeague))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "minor") Tranquilizer-TheWord
 (and (isa :NOUN Anxiolytic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mint-TheWord (and (isa :NOUN Mint-FloweringPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mint-TheWord (and (isa :NOUN MintFlavoring))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minute-TheWord (and (isa :NOUN CalendarMinute))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Minute-TheWord (and (isa :NOUN MinutesDuration))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_count) (Num fe_count) (NP fe_count fe_process))
   (:GAP (DNI fe_process) (INI fe_count fe_process) (DEN fe_unit))
   (:NOUN (N fe_process))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 2 1)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Minute-TheWord
 (and (isa :NOUN Minute-UnitOfAngularMeasure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Miracle-TheWord (and (isa :NOUN Miracle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mire-TheWord (and (isa :NOUN WetlandRegion))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "mirror") Accessory-TheWord
 (and (isa :NOUN MirrorAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mirror-TheWord (and (isa :NOUN Mirror-Wall))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mirror-TheWord (and (isa :NOUN Mirror))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Misappropriation-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer))
   (:GAP (DNI perpetrator victim)
    (INI objectOfPossessionTransfer perpetrator victim))
   (:GEN (Poss perpetrator))))
 (groupPatterns (TheSet ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Misbehavior-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N performedBy) ((PPFn of) performedBy)
    (A performedBy fe_degree fe_domain) ((PPFn in) eventOccursAt)
    ((PPFn within) eventOccursAt) ((PPFn by) performedBy fe_standard)
    ((PPFn on) temporallyIntersects) (AJP temporallyIntersects)
    ((PPFn at) temporallyIntersects))
   (:GAP (2nd fe_domain) (-- fe_manner)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 7 0)) ((0 4 0)) ((0 3 0)) ((0 2 2)) ((0 2 1)) ((2 0 0))
   ((0 1 0)) ((0 0 0)) ((0 2 0)) ((0 2 2) (0 5 1)) ((0 2 2) (0 3 0))
   ((0 6 0) (2 0 0)) ((0 3 0) (2 0 0)) ((0 1 0) (0 2 2)) ((0 2 2) (0 5 0)))))

(FNNounSemtrans (TheList) Miscarriage-TheWord (and (isa :NOUN Miscarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mischance-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate (TheList (:GAP (DEN fe_undesirable_event))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Misconduct-TheWord
 (and (isa :NOUN Misconduct-Management)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Miscreant-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Misdeed-TheWord (and (isa :NOUN Misdeed))
 (frame FN_Misdeed) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Miser-TheWord
 (and (isa :NOUN Person) (hasPersonalQuantity :NOUN (NoAmountFn Generosity)))
 (frame FN_Stinginess)
 (bindingTemplate (TheList (:SUBJECT (NP fe_resource_controller))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Miserliness-TheWord
 (and (isa :NOUN (NoAmountFn Generosity))) (frame FN_Stinginess)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Misfortune-TheWord (and (isa :NOUN Misfortune))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn fe_undesirable_event))
   (:OBLIQUE-OBJECT (N objectActedOn) (NP objectActedOn)
    ((PPFn for) objectActedOn) ((PPFn on) eventOccursAt)
    ((PPFn in) fe_undesirable_event)
    ((PPFn of) objectActedOn fe_undesirable_event)
    ((PPingFn of) objectActedOn fe_undesirable_event)
    (VPto fe_undesirable_event) ((PPingFn at) fe_undesirable_event)
    ((PPingFn in) fe_undesirable_event))
   (:GAP (DEN fe_undesirable_event) (DNI objectActedOn fe_undesirable_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 6 1)) ((1 5 1))
   ((1 4 0)) ((1 9 0) (3 0 0)) ((1 8 0) (3 0 0)) ((0 0 1) (3 0 0))
   ((0 0 1) (1 2 0)) ((0 0 0) (1 7 0)) ((0 0 0) (1 6 1))
   ((0 0 0) (0 0 0) (1 7 0)) ((0 0 0) (1 3 0) (1 6 0)))))

(FNNounSemtrans (TheList) Misfortune-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mishap-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N causes-Underspecified) (NP objectActedOn)
    ((PPFn at) eventOccursAt))
   (:GAP (DNI objectActedOn) (DEN fe_undesirable_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 1 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Mismanagement-TheWord (and (isa :NOUN Mismanagement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Misnomer-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Misrepresentation-TheWord (and (isa :NOUN Lying))
 (frame FN_Prevarication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn by) performedBy)
    ((PPFn about) situationTopic) ((PPFn of) situationTopic)
    ((PPFn as) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 0)) ((1 0 0)) ((0 1 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 3 0) (1 0 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Miss-TheWord
 (and (isa :NOUN Female) (isa :NOUN Unmarried)) (frame FN_Appellations)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Miss-TheWord
 (and (isa :NOUN Action)
      (relationInstanceExists failureForAgents :NOUN Agent-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Missile-TheWord (and (isa :NOUN Missile))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:SUBJECT (NP instrument-UsedAsWeapon doneBy))
   (:OBLIQUE-OBJECT ((PPFn opposite) fe_descriptor)
    ((PPFn with) activeIngredientsOfType) (Srel deviceUse) (NP deviceUse)
    (A mainConstituent deviceUse doneBy)
    (AJP performedBy fe_descriptor mainConstituent activeIngredientsOfType
     deviceUse doneBy)
    (N performedBy fe_descriptor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType deviceUse doneBy))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss performedBy doneBy))))
 (groupPatterns
  (TheSet ((3 0 1)) ((0 0 1)) ((1 5 5)) ((1 4 2)) ((1 6 4)) ((1 5 4)) ((1 4 1))
   ((1 6 3)) ((1 5 3)) ((1 6 2)) ((1 4 0)) ((1 6 1)) ((1 5 1)) ((1 5 0))
   ((1 3 0) (3 0 1)) ((1 6 4) (1 6 5)) ((1 2 0) (1 6 4)) ((1 6 3) (3 0 1))
   ((1 5 3) (3 0 1)) ((1 6 3) (1 6 4)) ((1 4 1) (1 6 3)) ((1 5 3) (1 6 4))
   ((1 5 3) (1 6 3)) ((1 6 2) (3 0 1)) ((1 5 5) (1 6 2)) ((1 4 2) (1 6 2))
   ((1 6 2) (1 6 4)) ((1 4 1) (1 6 2)) ((1 6 2) (1 6 3)) ((1 5 3) (1 6 2))
   ((1 5 2) (1 6 3)) ((1 0 0) (1 6 3)) ((1 6 1) (1 6 3)) ((1 5 0) (1 6 4))
   ((0 0 0) (1 5 3) (1 6 3)) ((1 1 0) (1 6 3) (1 6 3))
   ((1 6 2) (1 6 3) (3 0 1)) ((1 5 3) (1 6 2) (3 0 1))
   ((1 6 2) (1 6 3) (1 6 4)) ((1 5 3) (1 5 3) (1 6 2))
   ((1 5 1) (1 6 3) (3 0 1)) ((1 5 1) (1 5 1) (1 5 1))
   ((0 0 0) (1 5 0) (1 5 4)) ((1 6 0) (1 6 2) (1 6 4))
   ((1 5 3) (1 6 2) (3 0 0)))))

(FNNounSemtrans (TheList "missing") Person-TheWord
 (and (isa :NOUN MissingPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mission-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:GAP (DNI obligationsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Missionary-TheWord (and (isa :NOUN Missionary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Missive-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mist-TheWord (and (isa :NOUN Mist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mistake-TheWord (and (isa :NOUN Mistake))
 (frame FN_Correctness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mistress-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT ((PPFn for) fe_partner_2) ((PPFn of) fe_partner_2)
    ((PPFn to) fe_partner_2))
   (:GAP (DEN fe_partner_1)) (:NOUN (NP fe_partner_1))
   (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 1)) ((0 0 0)) ((3 0 0) (4 0 0))
   ((0 0 0) (4 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Mite-TheWord (and (isa :NOUN Mite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mite-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "miter") Saw-TheWord (and (isa :NOUN MiterSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "miter") Saw-TheWord
 (and (isa :NOUN PoweredMiterSaw-CarpentryTool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Miter-TheWord (and (isa :NOUN Mitre-Hat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mitochondrion-TheWord (and (isa :NOUN Mitochondrion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mitral") Valve-TheWord (and (isa :NOUN MitralValve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mitre-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:GAP (DEN fe_accoutrement)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns (TheSet ((1 0 1)) ((1 0 0)))))

(FNNounSemtrans (TheList) Mitre-TheWord (and (isa :NOUN Mitre-Hat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mitt-TheWord (and (isa :NOUN Mitten))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent clothingStyle)
    (N fe_descriptor deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((0 1 1) (2 0 0)) ((0 0 0) (0 0 1))
   ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Mitten-TheWord (and (isa :NOUN Mitten))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN itemWorn))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 1)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Mix-TheWord (and (isa :NOUN MixForBakedGoods))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mix-TheWord (and (isa :NOUN Mixture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mixer-TheWord (and (isa :NOUN ElectricMixer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mixer-TheWord (and (isa :NOUN Mixer-AudioComponent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mixing") Bowl-TheWord (and (isa :NOUN Bowl-Mixing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mixture-TheWord (and (isa :NOUN Mixture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moan-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_internal_cause fe_manner) ((PPFn of) emitter))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 0 0)) ((1 0 1)) ((1 0 0)) ((0 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Moat-TheWord (and (isa :NOUN Moat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mob-TheWord (and (isa :NOUN (MobFn Person)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_individuals) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate fe_individuals))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "mobile") Home-TheWord (and (isa :NOUN MobileHome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mobile-TheWord (and (isa :NOUN MobileSculpture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mobility") Aid-TheWord (and (isa :NOUN MobilityAid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mocassin-TheWord (and (isa :NOUN Moccasin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mockery-TheWord (and (isa :NOUN Mockery))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn from) subjectOfMentalSituation)
    ((PPFn of) subjectOfMentalSituation objectOfEvaluation))
   (:GAP (DNI objectOfEvaluation)) (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 1 1)) ((3 0 0)) ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Mockingbird-TheWord (and (isa :NOUN Mockingbird))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "modal") Logic-TheWord (and (isa :NOUN ModalLogic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "model") Airplane-TheWord
 (and (isa :NOUN (ModelFn Airplane))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "model") Car-TheWord
 (and (isa :NOUN (ModelFn Automobile))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "model") Rocket-TheWord
 (and (isa :NOUN (ModelFn RocketPropelledTransportationDevice)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "model") Ship-TheWord
 (and (isa :NOUN (ModelFn Watercraft-Surface))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Model-TheWord (and (isa :NOUN Model-Artifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Model-TheWord (and (isa :NOUN ProductTypeByBrand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Model-TheWord (and (isa :NOUN ProfessionalModel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "model") Train-TheWord
 (and (isa :NOUN (ModelFn Train-TransportationDevice))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "model") Truck-TheWord
 (and (isa :NOUN (ModelFn Truck))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Modem-TheWord (and (isa :NOUN Modem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "modern") Greek-TheWord
 (and (isa :NOUN ModernGreekLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "modern") Hebrew-TheWord
 (and (isa :NOUN IsraeliHebrewLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "modern" "naval") Ship-TheWord
 (and (isa :NOUN ModernNavalShip)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Modicum-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Modification-TheWord
 (and (isa :NOUN (CausingFn IntrinsicStateChangeEvent)))
 (frame FN_Cause_change)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn for) purposeOfEvent))
   (:GAP (INI doneBy toState))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "modular") Home-TheWord (and (isa :NOUN ModularHome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "modular" "power") Cord-TheWord
 (and (isa :NOUN ModularPowerCord)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Modus-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mogul-TheWord (and (isa :NOUN Tycoon))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_domain))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Moisture-TheWord (and (isa :NOUN Wetness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Molar-TheWord (and (isa :NOUN MolarTooth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mold-TheWord (and (isa :NOUN Mold-Fungus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mole") Rat-TheWord (and (isa :NOUN MoleRat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mole-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (N fe_attachment) ((PPFn around) fe_attachment)
    ((PPFn on) fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN markCreated)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 0 0)) ((0 0 0) (0 0 0)) ((0 0 0) (1 2 0))
   ((1 2 0) (1 3 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 2 0) (1 3 0))
   ((0 0 0) (1 2 0) (1 3 0) (1 3 0)))))

(FNNounSemtrans (TheList) Mole-TheWord (and (isa :NOUN IntelligenceOperative))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "molecular") Biology-TheWord
 (and (isa :NOUN MolecularBiology)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Molecule-TheWord (and (isa :NOUN Molecule))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moll-TheWord (and (isa :NOUN InvolvedInRelationship))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:GAP (DEN fe_partner_1) (INI fe_partner_2)) (:NOUN (N fe_partner_1))
   (:GEN (Poss fe_partner_2))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0) (3 0 0)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Mollusca-TheWord (and (isa :NOUN Mollusk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mollusk-TheWord (and (isa :NOUN Mollusk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Molybdenum-TheWord (and (isa :NOUN Molybdenum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mom-TheWord (and (isa :NOUN HumanMother))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Monarch-TheWord (and (isa :NOUN Monarch-HeadOfState))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_governed) ((PPFn of) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns (TheSet ((0 0 0)) ((3 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Monarch-TheWord (and (isa :NOUN MonarchButterfly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monarchy-TheWord (and (isa :NOUN Monarchy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monastery-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString)) ((PPFn at) eventOccursAt)
    (AJP activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Monday-TheWord (and (isa :NOUN Monday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:GAP (DNI fe_relative_time) (DEN fe_relative_time fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "monetary") Unit-TheWord (and (isa :NOUN UnitOfMoney))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "money") Bag-TheWord (and (isa :NOUN MoneyBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "money") Clip-TheWord (and (isa :NOUN MoneyClip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "money") Order-TheWord (and (isa :NOUN MoneyOrder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "money") Sorter-TheWord (and (isa :NOUN MoneySorter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Money-TheWord (and (isa :NOUN Currency))
 (frame FN_Money)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_inherent_purpose) ((PPFn for) fe_inherent_purpose)
    (VPed fe_inherent_purpose) (VPto fe_inherent_purpose) (A comesFrom-Generic)
    (AJP startingDate activeIngredientsOfType))
   (:GAP (DEN moneyTransferred))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0)))))

(FNNounSemtrans (TheList) Mongol-TheWord (and (isa :NOUN MongolianPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mongoose-TheWord (and (isa :NOUN Mongoose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moniker-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "monitor") Cable-TheWord
 (and (isa :NOUN ComputerMonitorCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monitor-TheWord
 (and (isa :NOUN ComputerMonitor-VideoKind)) (frame FN_Information_display)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monitoring-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monk-TheWord (and (isa :NOUN Monk)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "monkey") Bar-TheWord (and (isa :NOUN JungleGym))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monkey-TheWord (and (isa :NOUN Monkey))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "monkey") Wrench-TheWord
 (and (isa :NOUN MonkeyWrench)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "monochrome" "electronic" "display") Device-TheWord
 (and (isa :NOUN MonochromeElectronicDisplayDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monocot-TheWord (and (isa :NOUN MonocotSubclass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monocular-TheWord (and (isa :NOUN Monocular))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monogram-TheWord
 (and (isa :NOUN SomethingToWearPart)) (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) (InverseBinaryPredicateFn outfitParts))
    (AJP fe_descriptor) (N fe_descriptor))
   (:GAP (DEN parts)) (:GEN (Poss wearer)) (:APPOSITIVE (NP fe_descriptor))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Monograph-TheWord (and (isa :NOUN Treatise))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N authorOfLiteraryWork-CW)
    ((PPFn by) authorOfLiteraryWork-CW) ((PPFn on) situationTopic)
    ((PPFn in) situationTopic) ((PPFn of) situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 4 0)) ((0 5 0)) ((0 1 0)) ((0 4 0) (2 0 0))
   ((0 3 0) (2 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Monomer-TheWord (and (isa :NOUN Monomer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monoplane-TheWord (and (isa :NOUN Monoplane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "monorail") Train-TheWord (and (isa :NOUN Monorail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monotheism-TheWord
 (and (isa :NOUN MonotheisticReligion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monotreme-TheWord (and (isa :NOUN Monotreme))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monsoon-Season-TheWord (and (isa :NOUN RainySeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monster-TheWord (and (isa :NOUN Monster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Monte-TheWord (and (isa :NOUN MonteGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Month-TheWord (and (isa :NOUN CalendarMonth))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_count) (AJP fe_relative_time) (A fe_relative_time)
    (AVP fe_relative_time))
   (:GAP (DEN fe_unit) (DNI fe_relative_time (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Month-TheWord (and (isa :NOUN MonthsDuration))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_count) (NP fe_count))
   (:GAP (INI fe_count) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Monument-TheWord (and (isa :NOUN Monument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moo-TheWord (and (isa :NOUN MooingSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moon-TheWord (and (isa :NOUN MoonOfAPlanet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moonrise-TheWord
 (and (isa :NOUN
       (SubcollectionOfWithRelationToTypeFn SomethingAppearingSomewhere
        objectEmplaced MoonOfAPlanet))
      (eventOccursAt :NOUN TheSkyAboveHere))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moonstone-TheWord (and (isa :NOUN Moonstone-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moor-TheWord (and (isa :NOUN Moor))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_relative_location)
    ((PPFn above) fe_relative_location) ((PPFn around) fe_relative_location)
    ((PPFn behind) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Moor-TheWord (and (isa :NOUN EthnicGroupOfMoors))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mop-TheWord (and (isa :NOUN Mop)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moped-TheWord (and (isa :NOUN Moped)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moraine-TheWord
 (and (isa :NOUN Moraine-Topographical)) (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_formational_cause)
    ((PPFn near) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Moral-TheWord (and (isa :NOUN Moral-AesopKind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Morass-TheWord (and (isa :NOUN Swamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Morass-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance doneBy Interfering :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moratorium-TheWord (and (isa :NOUN EndingASituation))
 (frame FN_Activity_pause)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) processTypeForAccomplishmentType)
    (N doneBy duration) ((PPFn for) duration)
    (AJP fe_completeness duration temporallyIntersects)
    ((PPFn at) temporallyIntersects))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (0 4 0)) ((0 0 0) (0 3 2)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 1 1)) ((0 0 0) (0 3 1)) ((0 0 0) (0 3 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Mormon-TheWord
 (and (isa :NOUN IntelligentAgentTypeByBeliefSystem))
 (frame FN_People_by_religion)
 (bindingTemplate
  (TheList
   (:GAP (DNI fe_person) (2nd hasBeliefSystems)
    (DEN fe_person hasBeliefSystems))
   (:NOUN (N fe_person))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Mormonism-TheWord (and (isa :NOUN Mormonism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Morn-TheWord (and (isa :NOUN Morning))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Morning-TheWord (and (isa :NOUN Morning))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    (AVP fe_relative_time) (NP fe_relative_time)
    (N fe_relative_time (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit) (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 1)) ((0 3 0)) ((0 4 0)) ((0 0 0)) ((0 2 0))
   ((0 1 0)))))

(FNNounSemtrans (TheList "moroccan") Dirham-TheWord
 (and (isa :NOUN Dirham-Morocco)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Morphine-TheWord (and (isa :NOUN Morphine))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Morphology-TheWord (and (isa :NOUN Morphology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Morsel-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Mortality-TheWord (and (isa :NOUN Dying))
 (frame FN_Death) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mortar-TheWord (and (isa :NOUN MortarLauncher))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mortarboard-TheWord (and (isa :NOUN Mortarboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mortgage") Banker-TheWord
 (and (isa :NOUN MortgageBanker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mortgage") Lender-TheWord
 (and (isa :NOUN MortgageLender)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mortgage-TheWord (and (isa :NOUN MortgageAgreement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mosaic-TheWord (and (isa :NOUN Mosaic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mosque-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Mosque-TheWord (and (isa :NOUN Mosque-Building))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mosquito") Bite-TheWord
 (and (isa :NOUN MosquitoBite)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mosquito-TheWord (and (isa :NOUN Mosquito))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moss-TheWord (and (isa :NOUN Moss)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motel-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList (:GAP (DEN fe_building))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Moth-TheWord (and (isa :NOUN Moth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mother-In-Law-TheWord
 (and (isa :NOUN FemaleHuman)
      (relationExistsInstance motherInLaw Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "mother" "s") Day-TheWord (and (isa :NOUN MothersDay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mother-TheWord (and (isa :NOUN HumanMother))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter))
   (:OBLIQUE-OBJECT ((PPFn of) fe_alter fe_ego) ((PPFn to) fe_ego))
   (:GAP (DNI fe_ego) (INI fe_ego) (DEN fe_alter fe_ego))
   (:GEN (Poss fe_alter fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((3 0 1)) ((1 0 1)) ((0 0 0) (3 0 1))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Mother-TheWord
 (and (isa :NOUN FemaleAnimal)
      (relationExistsInstance biologicalMother Animal :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motherboard-TheWord
 (and (isa :NOUN ComputerMotherBoard)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motion") Sickness-TheWord
 (and (isa :NOUN MotionSickness)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motion-TheWord
 (and (isa :NOUN Movement-TranslationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motion-TheWord
 (and (isa :NOUN Translation-LocationChange)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motion-TheWord
 (and (isa :NOUN Translation-NoLocationChange)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motivation-TheWord (and (isa :NOUN Motive))
 (frame FN_Reason)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy fe_state_of_affairs))
   (:OBLIQUE-OBJECT (A purposeOf-EventSit) ((PPFn behind) purposeOf-EventSit)
    ((PPFn for) purposeOf-EventSit) ((PPFn in) purposeOf-EventSit)
    ((PPFn towards) purposeOf-EventSit) ((PPFn of) doneBy)
    (VPing fe_state_of_affairs) (VPto purposeOf-EventSit fe_state_of_affairs))
   (:GAP (DNI purposeOf-EventSit doneBy) (DEN fe_state_of_affairs)
    (INI doneBy fe_state_of_affairs))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 7 0)) ((1 2 0)) ((1 1 0)) ((1 5 0)) ((0 0 0) (1 7 0))
   ((0 0 1) (1 7 0)) ((1 4 0) (3 0 0)) ((1 3 0) (3 0 0)) ((1 2 0) (1 7 1))
   ((0 0 1) (1 1 0)) ((1 7 1) (3 0 0)) ((1 6 0) (3 0 0)) ((1 5 0) (1 6 0))
   ((0 0 1) (1 5 0)) ((1 0 0) (3 0 0)) ((1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Motive-TheWord (and (isa :NOUN Motive))
 (frame FN_Reason)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_state_of_affairs))
   (:OBJECT ((PPFn of) purposeOf-EventSit))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Motley-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate (TheList (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "motor") Area-TheWord (and (isa :NOUN MotorCortex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motor") Nerve-TheWord (and (isa :NOUN MotorNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motor") Oil-TheWord
 (and (isa :NOUN MotorOil-PetroliumDerived)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motor") Oil-TheWord (and (isa :NOUN MotorOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motor") Scooter-TheWord
 (and (isa :NOUN MotorScooter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motor-TheWord (and (isa :NOUN Engine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motor") Vehicle-TheWord (and (isa :NOUN RoadVehicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motorboat-TheWord (and (isa :NOUN Motorboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motorcycle") Accessory-TheWord
 (and (isa :NOUN MotorcycleAccessory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motorcycle") Engine-TheWord
 (and (isa :NOUN MotorcycleEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motorcycle") Frame-TheWord
 (and (isa :NOUN MotorcycleFrame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motorcycle") Part-TheWord
 (and (isa :NOUN MotorcyclePart)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motorcycle") Seat-TheWord
 (and (isa :NOUN MotorcycleSeat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motorcycle-TheWord (and (isa :NOUN Motorcycle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motorcycling-TheWord
 (and (isa :NOUN (TransportViaFn Motorcycle))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "motorized") Wheelchair-TheWord
 (and (isa :NOUN ElectricWheelchair)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Motorway-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic) ((PPFn through) trajectory-Complete)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn around) fe_relative_location)
    ((PPFn at) fe_relative_location)
    (AJP fe_characteristic fe_frequency_of_use fe_relative_location)
    ((PPFn near) fe_relative_location) ((PPFn from) fe_endpoints from-Generic))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 8 1)) ((2 0 0)) ((0 7 0)) ((0 6 2)) ((0 1 0)) ((0 2 0)) ((0 0 0))
   ((0 6 1)) ((0 6 0)) ((0 2 0) (0 3 0)) ((0 2 0) (0 5 0)) ((0 2 0) (0 4 0))
   ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)) ((0 2 0) (0 8 0)) ((0 3 0) (0 6 0))
   ((0 2 1) (0 6 0)))))

(FNNounSemtrans (TheList) Mound-TheWord
 (and (isa :NOUN Mound-ConstructionArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mount-TheWord (and (isa :NOUN Mountain))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale fe_relative_location))
   (:NOUN (N (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 3 0)) ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "mountain") Bike-TheWord
 (and (isa :NOUN MountainBike)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mountain") Range-TheWord
 (and (isa :NOUN MountainRange)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mountain-TheWord (and (isa :NOUN Mountain))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_container_possessor)
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString))
    (N parts fe_descriptor (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn behind) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn beyond) fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 0)) ((0 5 0)) ((0 3 1)) ((0 2 2)) ((0 1 0)) ((0 3 0))
   ((0 0 0)) ((0 2 0)) ((0 2 1) (0 4 0)) ((0 1 1) (0 3 0)))))

(FNNounSemtrans (TheList) Mountain-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mountaineer-TheWord (and (isa :NOUN MountainClimber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mouse") Button-TheWord (and (isa :NOUN MouseButton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mouse") Pad-TheWord
 (and (isa :NOUN ComputerMousePad)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouse-TheWord (and (isa :NOUN Mouse-Rodent))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouse-TheWord (and (isa :NOUN ComputerMouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mouse") Trap-TheWord (and (isa :NOUN MouseTrap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mousse-TheWord (and (isa :NOUN HairMousse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mousse-TheWord (and (isa :NOUN HairStylingGel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mousse-TheWord (and (isa :NOUN Mousse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouth-TheWord (and (isa :NOUN Mouth))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0) (3 0 0)) ((1 0 0) (3 0 0))
   ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Mouth-TheWord (and (isa :NOUN MouthPortal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouth-TheWord (and (isa :NOUN ShapedObject))
 (frame FN_Shaped_part) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouthpiece-TheWord
 (and (isa :NOUN Mouthpiece-Instrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouthwash-TheWord (and (isa :NOUN Mouthwash))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mouton-TheWord (and (isa :NOUN Mutton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Move-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy)) (:OBLIQUE-OBJECT (NP fe_act))
   (:GAP (DEN fe_act))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Movement-TheWord
 (and (isa :NOUN CompositionMovement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Movement-TheWord
 (and (isa :NOUN IdeologicalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mover-TheWord (and (isa :NOUN Mover)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "movie") Actor-TheWord (and (isa :NOUN ActorInMovies))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "movie") Projector-TheWord
 (and (isa :NOUN MovieProjector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "movie") Reel-TheWord (and (isa :NOUN MovieReel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "movie") Theater-TheWord
 (and (isa :NOUN MovieTheaterSpace)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Movie-TheWord (and (isa :NOUN Movie-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "moving") Staircase-TheWord
 (and (isa :NOUN Escalator)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mp3-TheWord (and (isa :NOUN MP3File)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mp3") Player-TheWord (and (isa :NOUN MP3Player))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mp3") Player-TheWord
 (and (isa :NOUN MP3Player-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mp4-TheWord (and (isa :NOUN MP4File)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mre-TheWord (and (isa :NOUN Meal-ReadyToEat))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mri") Machine-TheWord (and (isa :NOUN MRIMachine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mrna-TheWord (and (isa :NOUN MatureMessengerRNA))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mucus-TheWord (and (isa :NOUN Mucus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mud") Flap-TheWord (and (isa :NOUN MudFlap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mud-TheWord (and (isa :NOUN Mud))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mudflat-TheWord (and (isa :NOUN MudFlat))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_formational_cause fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Mudguard-TheWord
 (and (isa :NOUN Fender-AutoBodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mudslide-TheWord (and (isa :NOUN Mudslide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muesli-TheWord (and (isa :NOUN Muesli))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muff-TheWord (and (isa :NOUN Earmuffs))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N wornOn mainConstituent)
    (AJP fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Muffin-TheWord (and (isa :NOUN Muffin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muffler-TheWord (and (isa :NOUN Muffler-VehiclePart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mug-TheWord (and (isa :NOUN DrinkingMug))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mugger-TheWord (and (isa :NOUN RobbingAnAgent))
 (frame FN_Robbery)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP by-Underspecified)) (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mugging-TheWord (and (isa :NOUN RobbingAnAgent))
 (frame FN_Robbery)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn by) perpetrator) (NP victim))
   (:GAP (DNI perpetrator victim)) (:NOUN (N victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "mule") Deer-TheWord (and (isa :NOUN MuleDeer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mule-TheWord (and (isa :NOUN Mule)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muleta-TheWord (and (isa :NOUN Muleta))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mullah-TheWord (and (isa :NOUN Mullah))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multi" "conductor" "insulated") Wire-TheWord
 (and (isa :NOUN MultiConductorInsulatedWire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multi" "media" "conference") Bridge-TheWord
 (and (isa :NOUN MultiMediaConferenceBridge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multi" "media" "conference") Phone-TheWord
 (and (isa :NOUN Telephone-MultiMediaConference)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multi" "mineral") Supplement-TheWord
 (and (isa :NOUN MultiMineralSupplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multi" "purpose" "fitness") Machine-TheWord
 (and (isa :NOUN FitnessMachine-MultiPurpose)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multi" "reed" "woodwind") Instrument-TheWord
 (and (isa :NOUN MultiReedWoodwindInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multifariousness-TheWord (and (isa :NOUN Diversity))
 (frame FN_Diversity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multilevel") Building-TheWord
 (and (isa :NOUN MultiLevelBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "multiple") Sclerosis-TheWord
 (and (isa :NOUN MultipleSclerosis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multiplex-TheWord (and (isa :NOUN MovieTheaterSpace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multiplexer-TheWord (and (isa :NOUN Multiplexer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multiplexing-TheWord
 (and (isa :NOUN SignalMultiplexing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multiplication-TheWord
 (and (isa :NOUN
       (CausingFn
        (SubcollectionOfWithRelationToTypeFn
         (CollectionSubsetFn IncreaseEvent
          (TheSetOf ?evt
           (and (eventOccursAt ?evt ?loc)
                (increasesSlot ?evt
                 (QuantitySlotForArg1Fn ?loc amountPresentAt)))))
         objectChangingValue SpatialThing-Localized))))
 (frame FN_Cause_proliferation_in_number) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multiplication-TheWord
 (and (isa :NOUN DoingMultiplication)) (frame FN_Commutative_process)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multiplication-TheWord
 (and (isa :NOUN DoingAddition)) (frame FN_Commutative_process)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Multitude-TheWord (and (isa :NOUN (LargeFn Group)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Multitude-TheWord
 (and (isa :NOUN Multitude-SocialGroup)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mum-TheWord (and (isa :NOUN HumanMother))
 (frame FN_Kinship) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mummification-TheWord (and (isa :NOUN Mummifying))
 (frame FN_Preserving)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) objectActedOn))
   (:GAP (DNI objectActedOn) (INI doneBy objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Mumps-TheWord (and (isa :NOUN Mumps))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Municipality-TheWord (and (isa :NOUN Municipality))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Municipality-TheWord (and (isa :NOUN Municipality))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Munitions-TheWord (and (isa :NOUN ProjectileWeapon))
 (frame FN_Ammunition)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A activeIngredientsOfType) (N activeIngredientsOfType))
   (:GAP (DEN typePrimaryFunction-DeviceUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Murder-TheWord (and (isa :NOUN Murder))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT (N killers) ((PPFn by) killers)
    ((PPingFn by) by-Underspecified) ((PPFn in) eventOccursAt)
    (AJP temporallyIntersects) ((PPFn of) fe_degree victim) (NP victim))
   (:GAP (DNI causes-Underspecified killers by-Underspecified victim)
    (INI causes-Underspecified killers victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 1)) ((1 6 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0))
   ((1 5 0)) ((1 1 0) (1 5 1)) ((1 3 0) (1 5 1)) ((1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList) Murder-TheWord (and (isa :NOUN Murder))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_degree) ((PPFn of) fe_degree))
   (:GAP (DEN fe_offense) (DNI victim))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Murderer-TheWord (and (isa :NOUN Murderer))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers victim))
   (:OBLIQUE-OBJECT (A killers)
    (N instrument-Generic eventOccursAt purposeOfEvent victim)
    ((PPFn for) victim) ((PPFn of) victim))
   (:GAP (DEN killers) (DNI victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 1)) ((1 1 3)) ((1 1 2)) ((1 1 1))
   ((0 0 0)) ((1 0 0)) ((1 1 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Murderer-TheWord (and (isa :NOUN Murderer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muscle-TheWord (and (isa :NOUN Muscle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muscle-TheWord (and (isa :NOUN MuscleTissue))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "muscular") Dystrophy-TheWord
 (and (isa :NOUN MuscularDystrophy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "muscular") Structure-TheWord
 (and (isa :NOUN MuscularSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musculus" "adductor") Brevis-TheWord
 (and (isa :NOUN AdductorBrevis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musculus" "adductor") Longus-TheWord
 (and (isa :NOUN AdductorLongus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musculus" "adductor") Magnus-TheWord
 (and (isa :NOUN AdductorMagnus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Museum-TheWord (and (isa :NOUN MuseumStructure))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_container_possessor) (A fe_descriptor)
    (N fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale) (INI locationUse))
   (:GEN (Poss fe_container_possessor fe_relative_location))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 4 2)) ((0 2 1)) ((0 3 1)) ((0 4 1)) ((0 4 0)) ((0 1 0))
   ((0 0 0)) ((0 4 0) (2 0 1)) ((0 3 2) (0 4 0)) ((0 2 1) (2 0 0))
   ((0 2 0) (0 3 1)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Museum-TheWord (and (isa :NOUN Museum-Organization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mushroom-TheWord (and (isa :NOUN MushroomCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mushroom-TheWord (and (isa :NOUN Mushroom-Broadly))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Musical-TheWord
 (and (isa :NOUN PlayPerformance-Musical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "music") Keyboard-TheWord
 (and (isa :NOUN Keyboard-MusicalInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "music") Single-TheWord (and (isa :NOUN MusicSingle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Music-TheWord (and (isa :NOUN Music)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Music-TheWord
 (and (isa :NOUN InformationBearingPerformance)) (frame FN_Performing_arts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A activeIngredientsOfType) (AJP activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN fe_performance))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "music") Track-TheWord (and (isa :NOUN MusicTrack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "music") Video-TheWord
 (and (isa :NOUN MusicVideoCopy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musical") Composition-TheWord
 (and (isa :NOUN MusicalComposition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musical" "instrument-purely") Acoustic-TheWord
 (and (isa :NOUN MusicalInstrument-PurelyAcoustic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musical") Instrument-TheWord
 (and (isa :NOUN MusicalInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musical") Organization-TheWord
 (and (isa :NOUN MusicPerformanceOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Musician-TheWord
 (and (isa :NOUN MusicalInstrumentPlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Musician-TheWord (and (isa :NOUN Musician))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Musician-TheWord (and (isa :NOUN MusicalPerformer))
 (frame FN_Performers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muslim-TheWord (and (isa :NOUN MuslimPerson))
 (frame FN_People_by_religion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn with) fe_descriptor)
    (A fe_ethnicity) ((PPFn from) comesFrom-Generic)
    ((PPFn of) fe_persistent_characteristic)
    (AJP age fe_ethnicity fe_persistent_characteristic hasBeliefSystems))
   (:GAP (CNI fe_person) (DEN fe_person hasBeliefSystems)
    (2nd hasBeliefSystems) (INI hasBeliefSystems))
   (:NOUN (N fe_person))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 5 3)) ((1 5 2)) ((1 3 0)) ((1 2 0)) ((1 5 0))
   ((0 0 0) (1 5 3)) ((0 0 0) (1 5 2)) ((0 0 0) (1 3 0)) ((0 0 0) (1 5 1))
   ((1 4 0) (1 5 1)) ((0 0 0) (1 1 0)) ((1 0 0) (1 5 2)))))

(FNNounSemtrans (TheList) Muslins-TheWord
 (and (isa :NOUN Clothing-Generic)
      (relationInstanceExists mainConstituent :NOUN NaturalFiberCloth))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Mustache-TheWord (and (isa :NOUN Moustache))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Mustang-TheWord (and (isa :NOUN MustangHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mustard") Gas-TheWord (and (isa :NOUN MustardGas))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mustard") Seed-TheWord (and (isa :NOUN MustardSeed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mustard-TheWord
 (and (isa :NOUN Mustard-ThePreparation)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mustelidae-TheWord (and (isa :NOUN Mustelidae))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "musteline") Mammal-TheWord
 (and (isa :NOUN Mustelidae)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mutation-TheWord (and (isa :NOUN Mutation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mutiny-TheWord (and (isa :NOUN Coup))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_selector))
   (:OBLIQUE-OBJECT ((PPFn over) situationConstituents)
    ((PPFn against) losesControl) (A fe_selector) ((PPFn by) fe_selector)
    (N fe_selector) ((PPFn among) fe_selector) ((PPFn of) fe_selector))
   (:GAP (2nd by-Underspecified takesControl) (DNI losesControl fe_selector))
   (:GEN (Poss losesControl))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 3 0)) ((1 5 0)) ((0 0 0)) ((1 4 0)) ((3 0 0)) ((1 1 0))
   ((1 2 0)) ((1 0 0)) ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Mutt-TheWord (and (isa :NOUN Dog-MixedBreed))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Muzzle-TheWord (and (isa :NOUN Snout-Animal))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Muzzle-TheWord (and (isa :NOUN MuzzleForAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mycelium-TheWord (and (isa :NOUN Mycelium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Myopia-TheWord (and (isa :NOUN Nearsightedness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Myriad-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Myself-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mystery-TheWord
 (and (isa :NOUN MysteryStory-Generic)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_genre situationTopic)
    ((PPFn with) fe_genre situationTopic))
   (:GAP (DEN fe_text)
    (2nd (InverseBinaryPredicateFn textualPCWSubSections) fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)) ((0 0 0) (3 0 0)) ((0 0 0) (0 0 0))
   ((0 0 1) (2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "mythical") Being-TheWord
 (and (isa :NOUN MythologicalThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "mythical") Monster-TheWord
 (and (isa :NOUN MythicalMonster)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nadir-TheWord (and (isa :NOUN Extreme))
 (frame FN_Extreme_point) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nail") Clippers-TheWord
 (and (isa :NOUN NailClippers)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nail-File-TheWord (and (isa :NOUN NailFile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nail" "polish") Remover-TheWord
 (and (isa :NOUN NailPolishRemover)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nail") Polish-TheWord (and (isa :NOUN NailPolish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nail") Scissors-TheWord
 (and (isa :NOUN NailScissors)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nail-TheWord (and (isa :NOUN Nail))
 (frame FN_Connectors) (bindingTemplate (TheList (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nail-TheWord (and (isa :NOUN Nail)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nail-TheWord (and (isa :NOUN Nail-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Naira-TheWord (and (isa :NOUN Naira-Nigeria))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nakedness-TheWord (and (isa :NOUN Nude))
 (frame FN_Wearing) (bindingTemplate (TheList (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "name") Tag-TheWord (and (isa :NOUN NameTag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Name-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList
   (:SUBJECT (N (InverseBinaryPredicateFn nameString))
    (NP objectActedOn (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) (Srel languageOriginOfName)
    (A languageOriginOfName) (NP (InverseBinaryPredicateFn nameString))
    ((PPFn like) (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_context objectActedOn (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor objectActedOn languageOriginOfName
     (InverseBinaryPredicateFn nameString) activeIngredientsOfType)
    (N objectActedOn (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))
   (:GAP (CNI objectActedOn) (INI objectActedOn)
    (DEN objectActedOn (InverseBinaryPredicateFn nameString))
    (DNI objectActedOn (InverseBinaryPredicateFn nameString)))
   (:NOUN (N (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))
   (:APPOSITIVE (N (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 2)) ((1 6 4)) ((4 0 0)) ((1 5 1)) ((1 0 0)) ((1 7 0))
   ((1 7 1)) ((5 1 0)) ((5 0 0)) ((1 6 3)) ((1 3 0)) ((1 6 1)) ((1 6 2))
   ((1 6 0)) ((1 7 2) (3 0 0)) ((1 6 4) (4 0 0)) ((1 5 1) (1 6 4))
   ((1 5 2) (4 0 0)) ((0 1 1) (4 0 0)) ((1 3 0) (4 0 0)) ((0 0 0) (4 0 0))
   ((0 1 0) (1 5 2)) ((0 1 0) (1 2 0)) ((1 1 0) (1 7 0)) ((1 5 1) (1 6 0))
   ((0 1 0) (1 6 0)) ((1 6 0) (1 7 0)) ((1 6 0) (1 6 3)) ((1 6 0) (1 6 1))
   ((1 6 0) (1 6 0)) ((1 5 0) (1 7 0)) ((0 1 0) (0 1 0) (1 4 0))
   ((0 1 0) (0 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Name-TheWord (and (isa :NOUN FamousIndividual))
 (frame FN_Fame)
 (bindingTemplate (TheList (:GAP (DNI fe_reason)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Name-TheWord (and (isa :NOUN ProperNameString))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nanny-TheWord (and (isa :NOUN (FemaleFn Goat)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nanny-TheWord (and (isa :NOUN Nanny)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nanosecond-TheWord (and (isa :NOUN UnitOfTime))
 (frame FN_Measure_duration) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nap-TheWord (and (isa :NOUN TakingANap))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (AJP duration) (N duration temporallyIntersects)
    ((PPFn in) temporallyIntersects))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 1)) ((0 0 0)) ((1 1 1) (2 0 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Napalm-TheWord (and (isa :NOUN Napalm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nape-TheWord
 (and (isa :NOUN Neck-AnimalBodyPart) (isa :NOUN BackSide))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    ((PPFn of) fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing) (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 1 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 1 0) (1 1 1)))))

(FNNounSemtrans (TheList) Naphtha-TheWord (and (isa :NOUN Naphtha))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "napkin") Ring-TheWord (and (isa :NOUN NapkinRing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Napkin-TheWord (and (isa :NOUN Napkin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Narcissus-TheWord (and (isa :NOUN Narcissus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Narc-TheWord
 (and (isa :NOUN UndercoverOperation-LawEnforcement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Narcotic-TheWord (and (isa :NOUN NarcoticDrug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Naris-TheWord (and (isa :NOUN Nostril))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nark-TheWord (and (isa :NOUN Reporting))
 (frame FN_Reporting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Narration-TheWord (and (isa :NOUN Narrative))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Narrator-TheWord (and (isa :NOUN Storyteller))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nasal-TheWord (and (isa :NOUN NasalBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nasopharynx-TheWord (and (isa :NOUN Nasopharynx))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nation-TheWord (and (isa :NOUN IndependentCountry))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor)
    ((PPFn throughout) fe_container_possessor) (AJP fe_descriptor)
    (A fe_descriptor (InverseBinaryPredicateFn nameString))
    (N fe_descriptor fe_population) ((PPFn of) fe_descriptor fe_population)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN fe_container_possessor eventLocale))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 4 1)) ((0 3 1)) ((0 5 0)) ((0 4 0)) ((0 2 0)) ((0 3 0))
   ((0 1 0)) ((0 2 0) (0 6 0)) ((0 3 0) (0 6 0)) ((0 2 0) (0 2 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList "national") Anthem-TheWord
 (and (isa :NOUN NationalAnthem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "national") Capital-TheWord
 (and (isa :NOUN CountryCapital)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "national") Guard-TheWord
 (and (isa :NOUN NationalGuardOrganization)) (frame FN_Military)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "national") Park-TheWord
 (and (isa :NOUN NationalPark)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "national" "rifle") Association-TheWord
 (and (isa :NOUN NationalRifleAssociation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) National-TheWord
 (and (isa :NOUN PersonWithNationality)) (frame FN_Origin)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) National-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance jurisdictionOverIndividual LegalAgent :NOUN))
 (frame FN_People_by_jurisdiction)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_jurisdiction)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Nationalism-TheWord
 (and (isa :NOUN NationalistIdeology)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nationalist") Leader-TheWord
 (and (isa :NOUN NationalistLeader)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nationalist-TheWord
 (and (isa :NOUN (BelieverFn NationalistIdeology))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Childbirth-TheWord
 (and (isa :NOUN NaturalChildbirth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Depression-TheWord
 (and (isa :NOUN Depression-Topographical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Disaster-TheWord
 (and (isa :NOUN NaturalDisaster)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Elevation-TheWord
 (and (isa :NOUN NaturalElevation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Fiber-TheWord
 (and (isa :NOUN NaturalFiberCloth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural" "gas" "powered") Device-TheWord
 (and (isa :NOUN NaturalGasPoweredDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural" "gas" "processing") Plant-TheWord
 (and (isa :NOUN NaturalGasProcessingPlant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Gas-TheWord (and (isa :NOUN NaturalGas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Hazard-TheWord
 (and (isa :NOUN NaturalHazard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Language-TheWord
 (and (isa :NOUN NaturalLanguage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Object-TheWord
 (and (isa :NOUN NaturalTangibleStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "natural") Phenomenon-TheWord (and (isa :NOUN Nature))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nature") Lover-TheWord
 (and (isa :NOUN Person) (likesType :NOUN NaturalThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nausea-TheWord (and (isa :NOUN UrgeToVomit))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:GAP (CNI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Nausea-TheWord (and (isa :NOUN Nausea))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:GAP (CNI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "nautical") Mile-TheWord
 (and (isa :NOUN NauticalMile)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nautilus-TheWord (and (isa :NOUN NuclearSubmarine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "naval") Battle-TheWord (and (isa :NOUN SeaBattle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "naval") Blockade-TheWord
 (and (isa :NOUN NavalBlockade)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "naval") Gun-TheWord (and (isa :NOUN NavalGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Navel-TheWord (and (isa :NOUN Navel))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing)
    (CNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "navigation") Device-TheWord
 (and (isa :NOUN NavigationDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "navigation") Satellite-TheWord
 (and (isa :NOUN NavigationSatellite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Navigator-TheWord
 (and (isa :NOUN Navigator-Explorer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "navy") Base-TheWord (and (isa :NOUN NavalShipBase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Navy-TheWord (and (isa :NOUN Navy))
 (frame FN_Military) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nearsightedness-TheWord
 (and (isa :NOUN Nearsightedness)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nebula-TheWord (and (isa :NOUN Nebula))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Necessity-TheWord
 (and (isa :NOUN NecessitatingSomething)) (frame FN_Being_necessary)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_requirement))
   (:OBLIQUE-OBJECT (VPto fe_dependent) (N fe_dependent fe_descriptor)
    ((PPFn in) fe_domain) (AJP fe_degree fe_descriptor fe_domain)
    ((PPFn for) fe_dependent fe_dependent_individual fe_requirement)
    ((PPFn of) fe_dependent fe_domain fe_requirement)
    ((PPingFn for) fe_requirement) ((PPFn to) fe_requirement))
   (:GAP (DEN fe_requirement))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 5 2)) ((1 4 2)) ((0 0 0)) ((1 5 1)) ((1 3 2)) ((1 5 0))
   ((1 1 0)) ((1 3 0)) ((1 2 0) (1 5 2)) ((0 0 0) (1 1 1)) ((1 3 1) (1 6 0))
   ((1 3 1) (1 5 2)) ((1 3 1) (1 4 2)) ((0 0 0) (1 3 1)) ((1 3 1) (1 4 1))
   ((0 0 0) (1 0 0)) ((1 3 1) (1 4 0)) ((0 0 0) (1 3 1) (1 5 1))
   ((0 0 0) (1 2 0) (1 3 1)) ((0 0 0) (1 3 1) (1 4 1)))))

(FNNounSemtrans (TheList) Necessity-TheWord (and (isa :NOUN NeedMicrotheory))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "neck") Brace-TheWord (and (isa :NOUN NeckBrace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neck-TheWord (and (isa :NOUN Neck-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 1 0) (3 0 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Neck-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neckband-TheWord (and (isa :NOUN CollarOfGarment))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) (InverseBinaryPredicateFn outfitParts))
    (AJP fe_descriptor))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Neckerchief-TheWord (and (isa :NOUN Neckerchief))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Necklace-TheWord (and (isa :NOUN Necklace))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn over) wornOn) ((PPFn round) wornOn)
    ((PPFn in) fe_descriptor) (AJP fe_descriptor mainConstituent)
    ((PPFn of) mainConstituent) (N mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 0)) ((0 5 0)) ((0 3 1)) ((0 3 0)) ((0 0 0))
   ((0 5 0) (2 0 0)) ((0 3 1) (0 5 1)) ((0 3 1) (0 4 0)) ((0 3 0) (0 4 0))
   ((0 3 0) (0 5 0)) ((0 3 0) (0 3 1)) ((0 1 0) (0 3 0))
   ((0 2 0) (0 5 0) (2 0 0)) ((0 3 0) (0 3 1) (2 0 0))
   ((0 3 0) (0 3 0) (0 5 0)))))

(FNNounSemtrans (TheList) Necklace-TheWord (and (isa :NOUN Necklace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Necktie-TheWord (and (isa :NOUN NeckTie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Neckwear-TheWord (and (isa :NOUN Necklace))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Neckwear-TheWord (and (isa :NOUN Tie-Clothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Necrophilia-TheWord (and (isa :NOUN Necrophilia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nectar-TheWord (and (isa :NOUN Nectar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nectary-TheWord (and (isa :NOUN Nectary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Need-TheWord (and (isa :NOUN Need-SystemCondition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Need-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance needs Agent-Generic :NOUN))
 (frame FN_Needing)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AVP fe_degree)
    ((PPFn of) subjectOfMentalSituation fe_dependent)
    (AJP fe_degree fe_dependent) (VPto fe_requirement))
   (:GAP (DNI subjectOfMentalSituation fe_dependent) (DEN fe_requirement)
    (INI subjectOfMentalSituation fe_consequences fe_dependent
     fe_requirement))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0) (1 2 1)) ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Needle-TheWord (and (isa :NOUN HypodermicSyringe))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Needle-TheWord (and (isa :NOUN Needle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Needlepoint-TheWord (and (isa :NOUN Needlepoint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Negative-TheWord
 (and (isa :NOUN NegativelyChargedRegion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Negligence-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Negotiation-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1))
   (:OBLIQUE-OBJECT ((PPFn between) fe_interlocutors)
    ((PPFn with) fe_interlocutor_1 fe_interlocutor_2 fe_interlocutors)
    (AJP fe_manner temporallyIntersects) ((PPFn on) situationTopic)
    ((PPFn for) purposeOfEvent situationTopic) (N situationTopic))
   (:GAP (DNI fe_interlocutor_1 fe_interlocutors situationTopic)
    (INI fe_interlocutor_1 fe_interlocutor_2 situationTopic))
   (:GEN (Poss fe_interlocutor_1 fe_interlocutors))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 1 2)) ((1 0 0)) ((1 1 1)) ((1 1 0)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 2 1)) ((1 4 0) (3 0 1)) ((1 1 1) (1 4 0)) ((0 0 0) (1 3 0))
   ((1 1 1) (1 2 0)) ((1 1 1) (1 4 1) (3 0 0)))))

(FNNounSemtrans (TheList) Negotiation-TheWord (and (isa :NOUN Negotiating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Negotiator-TheWord (and (isa :NOUN Negotiator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Negress-TheWord
 (and (isa :NOUN (FemaleFn EthnicGroupOfBlacks))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neigh-TheWord (and (isa :NOUN NeighingSound))
 (frame FN_Sounds) (bindingTemplate (TheList (:GEN (Poss emitter))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Neighbor-TheWord
 (and (isa :NOUN SpatialThing)
      (relationInstanceExists adjacentTo :NOUN SpatialThing))
 (frame FN_Adjacency) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neighbor-TheWord
 (and (isa :NOUN PersonTypeByRegionalAffiliation))
 (frame FN_People_by_residence)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Srel fe_descriptor) (AJP objectFoundInLocation))
   (:GAP (DEN fe_indicated_resident residents-Role))
   (:GEN (Poss fe_known_resident)) (:APPOSITIVE (NP fe_indicated_resident))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Neighborhood-TheWord (and (isa :NOUN Neighborhood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neodymium-TheWord (and (isa :NOUN Neodymium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "neon") Bulb-TheWord (and (isa :NOUN NeonLamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neon-TheWord (and (isa :NOUN Neon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neonate-TheWord (and (isa :NOUN NewbornBaby))
 (frame FN_People_by_age) (bindingTemplate (TheList (:GAP (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neonatologist-TheWord
 (and (isa :NOUN NeonatalPerinatalSpecialist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neonatology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn NeonatalPerinatalSpecialist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neophyte-TheWord
 (and (isa :NOUN BeginningAnActivity)) (frame FN_Activity_start)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nepalese") Rupee-TheWord
 (and (isa :NOUN Rupee-Nepal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nepalese-TheWord (and (isa :NOUN NepalesePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nepali-TheWord (and (isa :NOUN NepaliLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nephew-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance nephews Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego))
   (:OBLIQUE-OBJECT ((PPFn of) fe_ego) ((PPFn to) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((4 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Nephrologist-TheWord (and (isa :NOUN Nephrologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nephrology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Nephrologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nephron-TheWord (and (isa :NOUN Nephron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neptunium-TheWord (and (isa :NOUN Neptunium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nerve") Cell-TheWord
 (and (isa :NOUN (CellTypeOfTissueTypeFn NerveTissue))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nerve") Gas-TheWord (and (isa :NOUN NerveAgentType))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nerve-TheWord (and (isa :NOUN Nerve)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nervous") System-TheWord
 (and (isa :NOUN NervousSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nest-TheWord (and (isa :NOUN Nest)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "net") Force-TheWord (and (isa :NOUN NetForceVector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "net") Income-TheWord (and (isa :NOUN Profits))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Net-TheWord (and (isa :NOUN Profits))
 (frame FN_Earnings_and_losses)
 (bindingTemplate
  (TheList (:SUBJECT (NP basicPrice-Event))
   (:OBLIQUE-OBJECT (NP basicPrice-Event) (AJP temporallyIntersects))
   (:GAP (DEN basicPrice-Event)) (:GEN (Poss sellingPerformer))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Netting-TheWord (and (isa :NOUN Netting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "network" "connection" "indicator") Light-TheWord
 (and (isa :NOUN NetworkConnectionIndicatorLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "network") Device-TheWord
 (and (isa :NOUN NetworkDevice-Composite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "network" "hardware") Chassis-TheWord
 (and (isa :NOUN NetworkHardwareChassis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "network" "switch") Chassis-TheWord
 (and (isa :NOUN NetworkSwitchChassis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Network-TheWord (and (isa :NOUN Network))
 (frame FN_Network)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_connections nodeInSystem))
   (:OBLIQUE-OBJECT (A fe_descriptor) (VPed fe_descriptor)
    ((PPFn of) fe_connections nodesInSystem) (N fe_descriptor nodesInSystem)
    (AJP fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN nodeInSystem) (DNI nodesInSystem))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 3 1)) ((1 3 0)) ((1 4 0)) ((1 2 0)) ((0 0 1) (1 2 1))
   ((1 3 0) (3 0 0)) ((1 2 1) (1 4 0)) ((0 0 0) (1 0 0) (1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList) Neurologist-TheWord (and (isa :NOUN Neurologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neurology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Neurologist)))
 (frame FN_Medical_specialties)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A activeIngredientsOfType))
   (:GAP (DEN medicalSpecialty))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Neuron-TheWord (and (isa :NOUN Neuron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neurosurgeon-TheWord (and (isa :NOUN NeuroSurgeon))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neurotransmitter-TheWord
 (and (isa :NOUN Neurotransmitter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neutrality-TheWord (and (isa :NOUN IntelligentAgent))
 (frame FN_Partiality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A performedBy) (N performedBy) ((PPFn by) performedBy)
    ((PPFn towards) fe_dispute) ((PPFn over) fe_dispute) ((PPFn on) fe_dispute)
    (AJP fe_degree fe_domain) ((PPFn for) fe_sides) ((PPFn between) fe_sides)
    ((PPFn during) temporallyIntersects))
   (:GAP (INI performedBy) (DNI performedBy fe_dispute))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 8 0)) ((2 0 0)) ((0 0 0)) ((0 6 0)) ((0 8 0) (2 0 0))
   ((0 6 1) (0 7 0)) ((0 2 0) (0 6 1)) ((0 9 0) (2 0 0)) ((0 3 0) (0 6 1))
   ((0 5 0) (2 0 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList "neutron") Star-TheWord (and (isa :NOUN NeutronStar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Neutron-TheWord (and (isa :NOUN Neutron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "new" "world") Chat-TheWord (and (isa :NOUN Birdsong))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "new" "year" "s") Day-TheWord
 (and (isa :NOUN NewYearsDay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "new" "year" "s") Eve-TheWord
 (and (isa :NOUN NewYearsEveDay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "new") Yorker-TheWord
 (and (isa :NOUN (ResidentFn CityOfNewYorkNY))) (frame FN_People_by_origin)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (AJP age fe_ethnicity fe_persistent_characteristic)
    (Sinterrog fe_persistent_characteristic))
   (:GAP (DEN comesFrom-Generic fe_person))))
 (groupPatterns
  (TheSet ((1 0 2)) ((0 0 0)) ((1 0 0)) ((0 0 0) (1 0 2))
   ((1 0 1) (1 0 2) (1 1 0)))))

(FNNounSemtrans (TheList "new" "zealand") Dollar-TheWord
 (and (isa :NOUN Dollar-NewZealand)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "new") Zealander-TheWord
 (and (isa :NOUN NewZealandPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newborn-TheWord
 (and (isa :NOUN HumanTypeByLifeStageType)) (frame FN_People_by_age)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newfoundland-TheWord
 (and (isa :NOUN Newfoundland-TheDog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "news") Agency-TheWord (and (isa :NOUN NewsAgency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) News-TheWord (and (isa :NOUN News)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newscaster-TheWord (and (isa :NOUN Newscaster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newsletter-TheWord (and (isa :NOUN Newsletter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newsman-TheWord (and (isa :NOUN Journalist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newspaper-TheWord (and (isa :NOUN NewspaperCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newspaper-TheWord
 (and (isa :NOUN NewspaperOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newspaper-TheWord (and (isa :NOUN NewspaperSeries))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newspaper-TheWord (and (isa :NOUN NewspaperCopy))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N authorOfLiteraryWork-CW) (AJP fe_genre) (NP fe_title))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Newt-TheWord (and (isa :NOUN Newt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Newton-TheWord (and (isa :NOUN Newton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nez") Perce-TheWord
 (and (isa :NOUN NezPerce-EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nickel" "cadmium") Battery-TheWord
 (and (isa :NOUN NickelCadmiumBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nickel" "hydrogen") Battery-TheWord
 (and (isa :NOUN NickelHydrogenBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nickel" "metal" "hydride") Battery-TheWord
 (and (isa :NOUN NickelMetalHydrideBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nickel-TheWord (and (isa :NOUN Nickel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nickel-TheWord (and (isa :NOUN NickelCoin-US))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nickname-TheWord (and (isa :NOUN Nickname))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP objectActedOn (InverseBinaryPredicateFn nameString))
    (QUO (InverseBinaryPredicateFn nameString)))
   (:OBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) objectActedOn (InverseBinaryPredicateFn nameString))
    (QUO (InverseBinaryPredicateFn nameString)))
   (:GAP (DNI objectActedOn) (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))
   (:APPOSITIVE (N (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((2 2 1)) ((4 0 0)) ((2 2 0)) ((0 0 0)) ((2 1 0)) ((2 3 0) (4 0 0))
   ((2 2 1) (4 0 0)) ((0 0 1) (4 0 0)) ((0 1 0) (2 0 0)) ((0 0 1) (2 0 0))
   ((1 0 0) (5 0 0)) ((0 0 0) (2 3 0)) ((0 0 0) (2 2 1)))))

(FNNounSemtrans (TheList) Nicotine-TheWord (and (isa :NOUN Nicotine))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Niece-TheWord
 (and (isa :NOUN FemaleHuman) (relationExistsInstance nieces Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0))
   ((0 0 0) (1 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Niggardliness-TheWord
 (and (isa :NOUN (NoAmountFn Generosity))) (frame FN_Stinginess)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Night-TheWord (and (isa :NOUN Night))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:SUBJECT (A fe_relative_time)) (:OBJECT (AJP fe_relative_time))
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    ((PPFn after) fe_relative_time) ((PPFn in) fe_salient_event)
    ((PPFn of) fe_salient_event) (NP fe_unit)
    (N (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit) (INI fe_relative_time (InverseBinaryPredicateFn parts))
    (DNI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 5 0)) ((2 4 0)) ((2 3 0)) ((2 1 0)) ((0 0 0)) ((2 0 0))
   ((2 2 0)) ((1 0 0) (2 5 0)))))

(FNNounSemtrans (TheList) Nightcap-TheWord
 (and (isa :NOUN Cap) (isa :NOUN SleepWear)) (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Nightdress-TheWord (and (isa :NOUN NightGown))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn in) mainConstituent)
    (AJP fe_descriptor clothingStyle) ((PPingFn with) subRegions)
    ((PPFn with) subRegions) ((PPFn for) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 0 0)) ((0 2 0)) ((0 2 1) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 1 0) (0 2 1)) ((0 2 0) (2 0 0)) ((0 2 0) (0 4 0))
   ((0 2 0) (0 2 1)) ((0 0 0) (0 2 0)) ((0 2 0) (0 2 0))
   ((0 0 0) (0 2 0) (2 0 0)) ((0 0 0) (0 2 0) (0 3 0))
   ((0 0 0) (0 2 0) (0 2 1)) ((0 2 0) (0 2 0) (2 0 0))
   ((0 0 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Nightgown-TheWord (and (isa :NOUN NightGown))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent)
    (N fe_descriptor mainConstituent clothingStyle) ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 1 1) (2 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 1 2)) ((0 0 0) (0 1 1)) ((0 0 0) (0 1 1) (2 0 0))
   ((0 0 0) (0 1 0) (2 0 0)) ((0 0 0) (0 0 0) (0 1 1))
   ((0 0 0) (0 0 0) (0 0 1) (0 2 0)))))

(FNNounSemtrans (TheList) Nightie-TheWord (and (isa :NOUN NightGown))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) mainConstituent)
    (N mainConstituent clothingStyle) (AJP fe_descriptor clothingStyle)
    ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 1 1) (0 2 1) (0 3 0)) ((0 0 0) (0 1 1) (0 2 0)))))

(FNNounSemtrans (TheList) Nightingale-TheWord (and (isa :NOUN Nightingale))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nightmare-TheWord (and (isa :NOUN Nightmare))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nightwear-TheWord (and (isa :NOUN SleepWear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Nimbus-TheWord (and (isa :NOUN NimboStratusCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Niobium-TheWord (and (isa :NOUN Niobium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nipple-TheWord
 (and (isa :NOUN Nipple-AnimalBodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nitrate-TheWord (and (isa :NOUN Nitrate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nitrification") Process-TheWord
 (and (isa :NOUN NitrificationProcess-Bacterial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nitrogen-TheWord (and (isa :NOUN Nitrogen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nitroglycerin-TheWord
 (and (isa :NOUN Nitroglycerine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "no") Picnic-TheWord
 (and (isa :NOUN PurposefulAction)
      (relationInstanceExists degreeOfDifficulty :NOUN Difficult))
 (frame FN_Difficulty) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nobility-TheWord (and (isa :NOUN Nobility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "noble") Gas-TheWord
 (and (isa :NOUN NobleGasElementType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noise-TheWord
 (and (isa :NOUN AudibleSound)
      (loudnessLevel :NOUN (HighAmountFn AcousticNoiseLevel)))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy perceivedThings from-Generic))
   (:OBLIQUE-OBJECT (AJP perceivedThings) ((PPFn of) perceivedThings)
    ((PPingFn of) perceivedThings) (N perceivedThings)
    ((PPFn from) from-Generic))
   (:GAP (CNI doneBy)) (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((0 0 2)) ((1 1 0)) ((0 0 1)) ((1 0 0)) ((0 0 0))
   ((0 0 2) (1 3 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Noise-TheWord
 (and (isa :NOUN AudibleSound) (not (isa :NOUN SoundInformationBearingThing)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_component_sound) ((PPFn from) from-Generic))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "nom" "de") Guerre-TheWord
 (and (isa :NOUN ProperNameString)
      (relationExistsInstance pseudonym Soldier :NOUN))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nom" "de") Plume-TheWord
 (and (isa :NOUN ProperNameString)
      (relationExistsInstance pseudonym Author :NOUN))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nomination-TheWord
 (and (isa :NOUN NominatingSomeone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "non" "paper" "office") Device-TheWord
 (and (isa :NOUN Device-OfficeProduct-Stationery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "non" "perscription") Eyeware-TheWord
 (and (isa :NOUN Eyewear-NonPrescription)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Non-Proliferation-TheWord
 (and (isa :NOUN (ComplementOfInFn Proliferating Event)))
 (frame FN_Proliferating_in_number)
 (bindingTemplate (TheList (:GAP (DNI fe_set) (INI fe_set))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "non" "resealable" "storage") Can-TheWord
 (and (isa :NOUN SealedCan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "non" "vertical") Well-TheWord
 (and (isa :NOUN NonVerticalWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nonagon-TheWord (and (isa :NOUN Nonagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noncompliance-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noncompliance-TheWord
 (and (isa :NOUN ViolatingAnObligation)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noncompliance-TheWord
 (and (isa :NOUN ComplianceStatusAttribute)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nongovernmental") Organization-TheWord
 (and (isa :NOUN NonGovernmentalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noodle-TheWord (and (isa :NOUN Noodle))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor)
    (N fe_descriptor activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList "nook") Color-TheWord (and (isa :NOUN NookColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noon-TheWord (and (isa :NOUN TimeOfDay-NoonHour))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_relative_time)
    (N (InverseBinaryPredicateFn parts))
    ((PPFn on) fe_relative_time (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Noon-TheWord (and (isa :NOUN (HourOfDayFn 12)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Noradrenaline-TheWord
 (and (isa :NOUN Norepinephrine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nordic") Skiing-TheWord
 (and (isa :NOUN CrossCountrySkiing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Norethindrone-TheWord (and (isa :NOUN Norethindrone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "norfolk") Terrier-TheWord
 (and (isa :NOUN Terrier-Norfolk)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "north" "american") Country-TheWord
 (and (isa :NOUN NorthAmericanCountry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "north") American-TheWord
 (and (isa :NOUN NorthAmericanCitizenOrSubject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "north" "atlantic" "treaty") Organization-TheWord
 (and (isa :NOUN NATO)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "north" "celestial") Pole-TheWord
 (and (isa :NOUN NorthCelestialPole)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "north" "korean") Won-TheWord
 (and (isa :NOUN Won-NorthKorea)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "north") Sea-TheWord (and (isa :NOUN NorthSea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) North-South-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) North-TheWord (and (isa :NOUN North-Generally))
 (frame FN_Direction) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) North-TheWord (and (isa :NOUN North-Directly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) North-TheWord (and (isa :NOUN North-USRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) North-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts))
    (2nd (InverseBinaryPredicateFn parts)))
   (:NOUN (N parts)) (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((3 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "north") Wind-TheWord (and (isa :NOUN NorthWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Northeaster-TheWord (and (isa :NOUN NorthEastWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Northwest-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:GAP (DEN parts) (DNI parts (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "northwest") Wind-TheWord
 (and (isa :NOUN NorthWestWind)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "norwegian") Elkhound-TheWord
 (and (isa :NOUN NorwegianElkhound)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "norwegian") Krone-TheWord
 (and (isa :NOUN Krone-Norway)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Norwegian-TheWord (and (isa :NOUN NorwegianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "norwich") Terrier-TheWord
 (and (isa :NOUN Terrier-Norwich)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nose") Job-TheWord (and (isa :NOUN NoseJob))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nose") Plug-TheWord (and (isa :NOUN NosePlug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nose-TheWord (and (isa :NOUN Nose))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing) (CNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (3 0 0)) ((0 0 0) (1 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Nosecone-TheWord (and (isa :NOUN MissileHead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nostalgia-TheWord (and (isa :NOUN Nostalgia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nostril-TheWord (and (isa :NOUN Nostril))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 1) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Notary-TheWord (and (isa :NOUN NotaryPublic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "notary") Public-TheWord
 (and (isa :NOUN NotaryPublic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Notation-TheWord
 (and (isa :NOUN Notation-CommunicationConvention)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Note-TheWord (and (isa :NOUN LetterCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Note-TheWord (and (isa :NOUN Note-Document))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Notebook-TheWord (and (isa :NOUN Notebook))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Notepad-TheWord (and (isa :NOUN Notepad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nothing-TheWord (and (isa :NOUN Nothing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Notification-TheWord (and (isa :NOUN Informing))
 (frame FN_Telling)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn in) iboCreated)
    (Sfin infoTransferred) (N recipientOfInfo infoTransferred)
    ((PPFn from) performedBy) ((PPFn by) performedBy)
    (AJP fe_communicative_force fe_manner iboCreated temporallyIntersects)
    ((PPFn of) infoTransferred situationTopic)
    ((PPingFn of) infoTransferred situationTopic))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 3 1)) ((1 1 0)) ((1 6 2)) ((1 0 0)) ((1 3 0))
   ((0 0 1) (1 7 1)) ((0 0 1) (1 7 0)) ((1 6 2) (1 7 1)) ((1 6 0) (1 7 1))
   ((0 0 1) (1 6 0)) ((1 0 0) (1 8 1)) ((1 0 0) (1 5 0)) ((0 0 0) (1 2 0))
   ((0 0 1) (1 6 1) (1 7 1)) ((0 0 0) (1 6 0) (1 7 1))
   ((0 0 0) (1 6 0) (1 8 0)) ((0 0 0) (1 2 0) (1 4 0) (1 6 3)))))

(FNNounSemtrans (TheList) Notoriety-TheWord (and (isa :NOUN LevelOfRenown))
 (frame FN_Fame)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (NP objectActedOn fe_reason))))
 (groupPatterns (TheSet ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Nourishment-TheWord (and (isa :NOUN Food))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Novel-TheWord (and (isa :NOUN Novel-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn from) authorOfLiteraryWork-CW fe_text)
    (AJP authorOfLiteraryWork-CW fe_descriptor fe_genre fe_title
     situationTopic)
    (N authorOfLiteraryWork-CW fe_genre startingDate situationTopic)
    ((PPFn about) situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 2 3)) ((0 3 1)) ((0 2 2)) ((2 0 0)) ((0 5 0)) ((0 1 0))
   ((0 0 0)) ((0 3 0)) ((0 1 1) (0 3 1)) ((0 5 1) (2 0 0)) ((0 4 0) (2 0 0))
   ((0 3 3) (2 0 0)) ((0 0 0) (0 2 4)) ((2 0 0) (3 0 0)) ((0 1 0) (3 0 0))
   ((0 2 0) (0 3 2)) ((0 0 0) (0 3 1)) ((0 2 2) (0 3 0))
   ((0 2 1) (2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Novelette-TheWord (and (isa :NOUN (ShortFn Novella)))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP authorOfLiteraryWork-CW) (N mainConstituent))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Novelist-TheWord (and (isa :NOUN Novelist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Novella-TheWord (and (isa :NOUN Novella))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    (AJP authorOfLiteraryWork-CW startingDate))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns (TheSet ((3 0 0)) ((2 0 0)) ((0 0 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList "novelty") Magnet-TheWord
 (and (isa :NOUN NoveltyMagnet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) November-TheWord (and (isa :NOUN November))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn parts)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString) fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts))
    (2nd (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Novice-TheWord (and (isa :NOUN Novice))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn in) hasSkill) (AJP fe_degree hasSkill)
    (N fe_focal_participant hasSkill) (NP hasSkill) ((PPFn at) hasSkill)
    ((PPFn to) hasSkill) ((PPingFn at) hasSkill) ((PPingFn in) hasSkill))
   (:GAP (DEN affectedAgent) (DNI hasSkill)) (:NOUN (N affectedAgent))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 2 1)) ((1 1 1)) ((1 2 0)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 6 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 4 0)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "novitiate") Building-TheWord
 (and (isa :NOUN Novitiate-Building)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nowadays-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyIntersects TemporalThing :NOUN))
 (frame FN_Temporal_collocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear") Explosion-TheWord
 (and (isa :NOUN NuclearExplosion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear") Family-TheWord
 (and (isa :NOUN Family-Nuclear)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear" "generated") Electricity-TheWord
 (and (isa :NOUN NuclearGeneratedElectricity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear") Physicist-TheWord
 (and (isa :NOUN NuclearScientist)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear" "powered" "electric") Generator-TheWord
 (and (isa :NOUN ElectricalGenerator-Nuclear)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear") Product-TheWord
 (and (isa :NOUN NuclearProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear" "reactor") Hardware-TheWord
 (and (isa :NOUN NuclearReactorHardware)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuclear") Reactor-TheWord
 (and (isa :NOUN NuclearReactor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nucleon-TheWord (and (isa :NOUN Nucleon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nucleoplasm-TheWord (and (isa :NOUN Nucleoplasm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nucleotide-TheWord (and (isa :NOUN Nucleotide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nucleus-TheWord (and (isa :NOUN AtomicNucleus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nucleus-TheWord (and (isa :NOUN CellNucleus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nude-TheWord (and (isa :NOUN NudePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nudism-TheWord (and (isa :NOUN Naturism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nudist-TheWord
 (and (isa :NOUN (BelieverFn Naturism))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nudist-TheWord (and (isa :NOUN Nude)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nudity-TheWord (and (isa :NOUN Nude))
 (frame FN_Wearing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) wearer)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Number-TheWord
 (and (isa :NOUN Cardinal-Mathematical)) (frame FN_Cardinal_numbers)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_number)) (:OBJECT (NP fe_number))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (AJP fe_multiplier)
    (Num fe_number) (AVP fe_precision) (A fe_multiplier fe_precision))
   (:GAP (DEN fe_number) (DNI objectActedOn fe_number))
   (:NOUN (N objectActedOn fe_number))))
 (groupPatterns
  (TheSet ((2 0 0)) ((4 0 1)) ((2 1 0)) ((2 0 0) (2 4 1)) ((1 0 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((2 2 0) (4 0 0)) ((2 3 0) (2 4 0)))))

(FNNounSemtrans (TheList) Number-TheWord (and (isa :NOUN IDNumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Number-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals) ((PPFn in) fe_individuals)
    (A fe_q_prop) (AJP fe_degree fe_q_prop fe_quantity)
    (N fe_individuals fe_quantity))
   (:GAP (DNI fe_individuals massOfObject) (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 1 0)) ((0 4 0)) ((0 3 1)) ((0 0 0)) ((0 0 0) (0 4 1))
   ((0 0 0) (0 3 2)) ((0 0 0) (0 3 1)) ((0 0 0) (0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Number-TheWord (and (isa :NOUN Number-General))
 (frame FN_Quantity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "numbers") Pool-TheWord (and (isa :NOUN NumbersPool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Numeral-TheWord (and (isa :NOUN Numeral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nun-TheWord (and (isa :NOUN Nun)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nurse-TheWord (and (isa :NOUN Nursing))
 (frame FN_Medical_interaction_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nurse-TheWord (and (isa :NOUN Nurse))
 (frame FN_Medical_professionals)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_affliction fe_ethnicity comesFrom-Generic)
    ((PPFn from) comesFrom-Generic) ((PPFn at) employer) (A fe_rank)
    (N employer fe_rank activeIngredientsOfType)
    (VPed activeIngredientsOfType))
   (:GAP (DEN fe_professional)) (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 5 0)) ((2 0 0)) ((0 4 2)) ((0 3 0)) ((0 2 0)) ((0 4 0)) ((0 1 0))
   ((0 0 2)) ((0 0 1)) ((0 2 0) (0 4 1)) ((0 0 0) (0 2 0) (0 4 2)))))

(FNNounSemtrans (TheList "nursery" "laundry") Hamper-TheWord
 (and (isa :NOUN NurseryLaundryHamper)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nursery-TheWord (and (isa :NOUN Nursery-BabysRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nursing") School-TheWord
 (and (isa :NOUN NursingSchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nursing-TheWord (and (isa :NOUN Nursing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nursing-TheWord (and (isa :NOUN NursingYoung))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nut-TheWord (and (isa :NOUN Nut-TheDevice))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nut-TheWord (and (isa :NOUN EdibleNut))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Nut-TheWord (and (isa :NOUN Nut-TheDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nut-TheWord (and (isa :NOUN Nut-TheFruit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nutmeg-TheWord (and (isa :NOUN Nutmeg))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nutmeg") Tree-TheWord (and (isa :NOUN NutmegTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nutrient-TheWord (and (isa :NOUN Nutrient))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nutrition-TheWord
 (and (isa :NOUN (IngestingFn Nutrient))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nuts" "and") Bolts-TheWord
 (and (isa :NOUN MethodType)) (frame FN_Means) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nuts-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nutshell-TheWord (and (isa :NOUN NutShell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "nylon") Cloth-TheWord (and (isa :NOUN NylonCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nylon-TheWord (and (isa :NOUN Nylon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nylon-TheWord (and (isa :NOUN NylonCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Nystatin-TheWord (and (isa :NOUN Nystatin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oak-TheWord (and (isa :NOUN (WoodFn OakTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oak-TheWord (and (isa :NOUN OakTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oak") Tree-TheWord (and (isa :NOUN OakTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oar-TheWord (and (isa :NOUN Oar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oasis-TheWord (and (isa :NOUN Oasis))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn amid) fe_container_possessor) (N fe_descriptor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Oat-TheWord (and (isa :NOUN Oat-TheGrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oat-TheWord (and (isa :NOUN OatPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oath-TheWord (and (isa :NOUN Commitment))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy))
   (:OBLIQUE-OBJECT (N infoTransferred) (AJP infoTransferred)
    ((PPFn of) infoTransferred) ((PPFn to) recipientOfInfo infoTransferred)
    (Sfin infoTransferred) (VPto infoTransferred))
   (:GAP (DNI infoTransferred) (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((0 0 0)) ((3 0 0)) ((0 0 1)) ((0 0 1) (1 5 0))
   ((0 0 1) (1 4 0)) ((1 3 1) (3 0 0)) ((1 2 0) (3 0 0)) ((0 0 1) (1 2 0))
   ((1 1 0) (3 0 0)) ((1 3 0) (3 0 0)) ((0 0 1) (0 0 1) (1 5 0))
   ((0 0 1) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Oatmeal-TheWord (and (isa :NOUN Oatmeal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oats-TheWord (and (isa :NOUN Oat-TheGrain))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oats-TheWord (and (isa :NOUN OatPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Obituary-TheWord (and (isa :NOUN Obituary))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn for) beneficiary) ((PPFn to) beneficiary)
    (N (InverseBinaryPredicateFn textualPCWSubSections))
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections))
    (AJP authorOfLiteraryWork-CW fe_genre) ((PPFn of) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss situationTopic))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 6 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 5 0))
   ((0 4 0) (0 6 0)) ((0 3 0) (2 0 0)) ((0 1 0) (0 5 1)))))

(FNNounSemtrans (TheList "object-supporting") Furniture-TheWord
 (and (isa :NOUN Object-SupportingFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "object") Code-TheWord
 (and (isa :NOUN ComputerCode-Compiled)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Object-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Entity) (bindingTemplate (TheList (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Object-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Object-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP to-Generic by-Underspecified))
   (:OBJECT ((PPFn of) to-Generic) (NP to-Generic))
   (:OBLIQUE-OBJECT (N performedBy) (VPto to-Generic) ((PPFn for) to-Generic)
    ((PPFn in) by-Underspecified) ((PPingFn in) by-Underspecified)
    ((PPFn of) to-Generic by-Underspecified) (AJP fe_restrictor)
    ((PPFn to) fe_restrictor))
   (:GAP (DEN to-Generic)
    (INI performedBy fe_attribute to-Generic by-Underspecified))
   (:GEN (Poss performedBy by-Underspecified))))
 (groupPatterns
  (TheSet ((2 1 0)) ((2 5 0)) ((2 2 0)) ((2 5 1)) ((2 6 0)) ((1 0 0)) ((4 0 0))
   ((2 1 0) (4 0 1)) ((2 1 0) (2 5 1)) ((0 0 0) (2 5 1)) ((2 1 0) (4 0 0))
   ((2 5 0) (4 0 0)) ((2 0 0) (2 1 0)) ((2 1 0) (2 5 1) (2 7 0))
   ((0 0 1) (1 1 0) (4 0 1)) ((2 1 0) (2 4 0) (4 0 0))
   ((2 1 0) (2 3 0) (4 0 0)))))

(FNNounSemtrans (TheList) Objective-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy to-Generic) (VPing to-Generic))
   (:OBLIQUE-OBJECT (Poss performedBy) (A fe_domain) (VPto to-Generic)
    (NP to-Generic) (Sforto to-Generic)
    ((PPingFn of) to-Generic by-Underspecified)
    ((PPFn of) performedBy to-Generic by-Underspecified)
    ((PPFn behind) by-Underspecified) ((PPFn for) fe_restrictor)
    ((PPFn in) fe_domain by-Underspecified fe_restrictor)
    (N fe_attribute fe_domain fe_restrictor)
    (AJP to-Generic temporallyIntersects))
   (:GAP (INI fe_attribute) (DNI performedBy fe_attribute to-Generic)
    (DEN to-Generic) (2nd by-Underspecified))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 10 2)) ((1 6 2)) ((1 2 0)) ((0 1 0)) ((1 5 0)) ((1 3 0))
   ((1 10 1)) ((1 1 0)) ((3 0 0)) ((1 6 0)) ((1 3 0) (1 9 2)) ((1 2 0) (1 6 2))
   ((1 2 0) (1 7 0)) ((1 3 0) (1 6 2)) ((1 11 1) (3 0 0)) ((1 5 1) (1 11 0))
   ((1 2 0) (3 0 0)) ((0 1 0) (3 0 0)) ((1 4 0) (3 0 0)) ((1 5 0) (3 0 0))
   ((1 0 0) (1 6 1)) ((1 3 0) (1 6 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 6 1))
   ((1 9 0) (3 0 0)) ((1 10 1) (3 0 0)) ((1 1 0) (1 6 0)) ((1 10 0) (3 0 0))
   ((1 2 0) (1 9 2) (3 0 0)) ((1 2 0) (1 8 0) (3 0 0))
   ((0 0 1) (1 9 1) (3 0 0)) ((1 2 0) (3 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "objet" "d") Art-TheWord (and (isa :NOUN Sculpture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Obligation-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn under) fe_condition) (N obligationsCreated))
   (:GAP (DEN obligationsCreated)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Obliteration-TheWord
 (and (isa :NOUN DestructionEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Destroying) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oboe-TheWord (and (isa :NOUN Oboe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Observance-TheWord (and (isa :NOUN Compliant))
 (frame FN_Compliance)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) fe_norm))
   (:GAP (DEN fe_act) (DNI fe_norm)) (:GEN (Poss fe_norm affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (2 0 1)))))

(FNNounSemtrans (TheList) Observance-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) fe_norm))
   (:GAP (DEN fe_act) (DNI fe_norm)) (:GEN (Poss fe_norm affectedAgent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (2 0 1)))))

(FNNounSemtrans (TheList) Observation-TheWord
 (and (isa :NOUN Observation-Remark)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Observation-TheWord
 (and (isa :NOUN Perceiving-Voluntary)) (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (AJP performedBy) (NP fe_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn through) fe_direction)
    ((PPFn from) personFoundInLocation) ((PPFn in) personFoundInLocation)
    (AVP fe_manner) ((PPFn with) by-Underspecified) (A fe_manner performedBy)
    ((PPFn of) fe_phenomenon) (N performedBy fe_phenomenon))
   (:GAP (DNI performedBy fe_phenomenon)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 7 1)) ((0 0 0)) ((3 0 0)) ((1 7 0)) ((1 5 1)) ((1 0 0))
   ((1 6 0) (3 0 0)) ((1 7 1) (3 0 0)) ((0 1 0) (1 4 0)) ((1 3 0) (1 6 0))
   ((1 1 0) (3 0 0)) ((1 2 0) (1 5 0)) ((1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Observatory-TheWord
 (and (isa :NOUN AstronomicalObservatory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Observer-TheWord (and (isa :NOUN Observer-Formal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Obstacle-TheWord (and (isa :NOUN Obstacle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Obstetrician-TheWord (and (isa :NOUN Obstetrician))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Obstetrics-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Obstetrician)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Obstruction-TheWord (and (isa :NOUN Interfering))
 (frame FN_Hindering) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "occipital") Bone-TheWord
 (and (isa :NOUN OccipitalBone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "occipital") Lobe-TheWord
 (and (isa :NOUN OccipitalLobe)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "occipital") Vein-TheWord
 (and (isa :NOUN OccipitalVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "occluded") Front-TheWord
 (and (isa :NOUN OccludedFrontEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Occlusion-TheWord
 (and (isa :NOUN Eclipse-CelestialEvent)) (frame FN_Eclipse)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Occultation-TheWord
 (and (isa :NOUN Eclipse-CelestialEvent)) (frame FN_Eclipse)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Occupant-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance occupants HumanOccupationConstruct :NOUN))
 (frame FN_Residence)
 (bindingTemplate
  (TheList (:SUBJECT (NP residesInDwelling residents-Role))
   (:OBLIQUE-OBJECT ((PPFn for) residesInDwelling)
    ((PPFn from) residesInDwelling) ((PPFn in) residesInDwelling)
    ((PPFn of) residesInDwelling))
   (:GAP (DNI residesInDwelling) (DEN residents-Role))
   (:GEN (Poss residesInDwelling))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((0 0 1) (3 0 0))
   ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Occupation-TheWord
 (and (isa :NOUN Occupation-AnimalActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ocean") Acidification-TheWord
 (and (isa :NOUN OceanAcidification)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ocean-TheWord (and (isa :NOUN Ocean))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N (InverseBinaryPredicateFn nameString))
    (AJP (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 2 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Oceanographer-TheWord (and (isa :NOUN Oceanographer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oceanography-TheWord (and (isa :NOUN Oceanography))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ocellated") Turkey-TheWord
 (and (isa :NOUN OcellatedTurkey)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ocelot-TheWord (and (isa :NOUN Ocelot))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Octagon-TheWord (and (isa :NOUN Octagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) October-TheWord (and (isa :NOUN October))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:GAP (DEN (InverseBinaryPredicateFn nameString) fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Octopus-TheWord (and (isa :NOUN Octopus))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oculomotor-TheWord (and (isa :NOUN OculomotorNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oddity-TheWord
 (and (isa :NOUN (AbnormalFn IntentionalMentalSituation)))
 (frame FN_Idiosyncrasy) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Odds-TheWord
 (and (isa :NOUN Probability-QuantityType)) (frame FN_Probability)
 (bindingTemplate (TheList (:GAP (DNI fe_hypothetical_event) (DEN fe_odds))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ode-TheWord (and (isa :NOUN Ode)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) beneficiary) ((PPFn for) beneficiary)
    ((PPFn on) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0)) ((2 0 0) (3 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Odometer-TheWord (and (isa :NOUN Odometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Odor-TheWord (and (isa :NOUN Odor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) fe_perceptual_source)
    ((PPFn from) fe_perceptual_source) ((PPingFn of) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Odor-TheWord (and (isa :NOUN SmellPerception))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy perceivedThings from-Generic))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) perceivedThings)
    ((PPFn from) from-Generic) ((PPingFn from) from-Generic))
   (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 1)) ((1 1 0) (2 0 0))
   ((0 0 2) (1 1 0)) ((0 0 0) (1 1 0)) ((0 0 2) (0 0 2) (1 0 0)))))

(FNNounSemtrans (TheList) Odyssey-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP duration purposeOfEvent))
   (:GEN (Poss travellerInTrip))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 1) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Oeuvre-TheWord
 (and (isa :NOUN SomethingExisting) (outputsCreated ?CreationEvent1 :NOUN)
      (isa ?CreationEvent1 CreationEvent))
 (frame FN_Labor_product) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Offense-TheWord (and (isa :NOUN InsultingSomeone))
 (frame FN_Cause_emotion)
 (bindingTemplate (TheList (:SUBJECT (NP doneBy)) (:GAP (INI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Offensive-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (A performedBy) ((PPFn by) performedBy)
    ((PPFn over) duration) ((PPFn across) trajectory-Complete)
    ((PPFn toward) directionOfAttack trajectory-Complete)
    ((PPFn near) eventOccursAt) (VPto purposeOfEvent)
    ((PPFn for) fe_depictive purposeOfEvent) (NP temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    (Sub eventOccursAt temporallyIntersects)
    ((PPFn about) temporallyIntersects)
    (AVP directionOfAttack eventOccursAt temporallyIntersects)
    ((PPFn during) temporallyIntersects) ((PPFn against) victim)
    (N performedBy duration fe_manner by-Underspecified eventOccursAt
     purposeOfEvent temporallyIntersects instrument-UsedAsWeapon)
    (AJP performedBy fe_depictive duration frequencyOfEvent fe_manner
     eventOccursAt purposeOfEvent temporallyIntersects
     instrument-UsedAsWeapon))
   (:GAP (CNI performedBy) (DNI performedBy)
    (2nd fe_manner eventOccursAt victim) (INI victim))
   (:NOUN ((PPFn against) victim))
   (:GEN (Poss performedBy temporallyIntersects))))
 (groupPatterns
  (TheSet ((4 0 1)) ((1 15 6)) ((1 16 7)) ((1 6 0)) ((1 9 0)) ((1 15 2))
   ((1 16 4)) ((1 15 1)) ((1 16 2)) ((1 14 0)) ((1 15 4)) ((4 0 0)) ((1 1 0))
   ((0 0 0)) ((1 15 0)) ((1 16 0)) ((1 0 0)) ((1 16 8) (4 0 1))
   ((1 7 1) (1 15 5)) ((1 9 0) (1 15 6)) ((1 15 4) (1 16 7)) ((1 9 0) (1 15 4))
   ((1 6 0) (1 16 4)) ((1 7 1) (1 16 4)) ((1 15 4) (1 16 4))
   ((1 14 0) (1 16 3)) ((1 2 0) (1 9 0)) ((1 14 0) (4 0 0)) ((1 14 0) (1 16 0))
   ((1 1 0) (1 9 1)) ((1 1 0) (1 16 7)) ((0 0 0) (1 12 2)) ((1 15 0) (1 15 6))
   ((1 16 0) (1 16 7)) ((0 0 0) (1 16 6)) ((1 6 0) (1 15 0)) ((0 0 0) (1 14 0))
   ((1 15 4) (4 0 0)) ((1 1 0) (1 9 0)) ((1 1 0) (1 15 4)) ((1 1 0) (1 16 5))
   ((0 0 0) (1 15 4)) ((1 5 0) (1 15 0)) ((1 9 0) (1 15 0)) ((1 15 0) (1 15 4))
   ((1 0 0) (1 9 0)) ((1 4 1) (1 15 0)) ((1 0 0) (1 3 0)) ((1 1 0) (1 15 2))
   ((1 1 0) (1 16 4)) ((0 0 0) (1 16 4)) ((1 15 0) (1 16 4))
   ((1 16 0) (1 16 4)) ((0 0 0) (1 7 0)) ((1 15 0) (4 0 0)) ((1 0 0) (1 15 0))
   ((1 13 0) (1 14 0) (1 16 4)) ((0 0 0) (1 9 0) (1 14 0))
   ((0 0 0) (1 9 1) (1 14 0)) ((1 14 0) (1 15 3) (4 0 0))
   ((0 0 0) (1 6 0) (1 15 3)) ((0 0 0) (1 14 0) (1 16 4))
   ((1 8 0) (1 16 0) (1 16 4)) ((0 0 0) (1 6 0) (1 16 4))
   ((0 0 0) (1 4 0) (1 12 0)) ((0 0 0) (1 9 0) (4 0 0))
   ((0 0 0) (1 9 0) (1 9 1) (1 15 7)) ((0 0 0) (1 9 1) (1 10 1) (1 12 1))
   ((0 0 0) (1 6 0) (1 9 0) (1 11 0)) ((1 6 0) (1 9 1) (1 16 4) (4 0 0))
   ((1 1 0) (1 6 0) (1 9 1) (1 16 4)) ((1 9 0) (1 10 0) (1 15 0) (1 16 4))
   ((0 0 0) (1 6 0) (1 8 0) (1 16 1)) ((0 0 0) (1 8 0) (3 0 0) (4 0 0))
   ((1 0 0) (1 8 0) (1 9 0) (1 15 0))
   ((0 0 0) (1 9 0) (1 14 0) (1 15 2) (1 15 3))
   ((0 0 0) (1 8 0) (1 9 0) (1 9 1) (1 14 0) (1 15 3))
   ((0 0 0) (1 8 0) (1 14 0) (1 16 4) (1 16 4) (4 0 0)))))

(FNNounSemtrans (TheList) Offer-TheWord
 (and (isa :NOUN Offering-CommunicationAct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "office") Building-TheWord
 (and (isa :NOUN OfficeBuilding)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "office") Furniture-TheWord
 (and (isa :NOUN OfficeFurniture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "office") Product-TheWord
 (and (isa :NOUN OfficeProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Office-TheWord (and (isa :NOUN OfficeRoom))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (N deviceUse)
    ((PPFn of) deviceUse))
   (:GAP (DEN properPhysicalParts)) (:GEN (Poss deviceUse))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Office-TheWord (and (isa :NOUN OfficeSpace))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (N deviceUse)
    ((PPFn of) deviceUse))
   (:GAP (DEN properPhysicalParts)) (:GEN (Poss deviceUse))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Officer-TheWord (and (isa :NOUN Title))
 (frame FN_Appellations)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_context) (A activeIngredientsOfType)
    (N fe_context activeIngredientsOfType) (NP activeIngredientsOfType)
    ((PPFn of) fe_context activeIngredientsOfType))
   (:GAP (DEN fe_title)) (:GEN (Poss activeIngredientsOfType))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 2 1) (3 0 0)) ((0 4 0) (3 0 0)) ((0 2 0) (3 0 0))
   ((0 4 0) (0 4 1) (3 0 0)) ((0 3 0) (0 4 0) (3 0 0))
   ((0 2 1) (0 4 0) (3 0 0)) ((0 1 0) (0 4 0) (3 0 0))
   ((0 0 0) (2 0 0) (3 0 0)) ((0 2 0) (0 2 1) (3 0 0))
   ((0 1 0) (0 2 0) (3 0 0)))))

(FNNounSemtrans (TheList) Officer-TheWord
 (and (isa :NOUN OfficerInOrganization)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn in) fe_governed) ((PPFn of) fe_governed)
    (AJP fe_descriptor fe_domain fe_governed activeIngredientsOfType)
    (VPing fe_domain activeIngredientsOfType)
    (N fe_domain duration fe_governed activeIngredientsOfType))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 4 3)) ((1 3 1)) ((1 2 3)) ((1 1 0)) ((1 4 2)) ((1 3 0)) ((1 4 0))
   ((1 2 0)) ((1 1 0) (1 3 1)) ((1 2 3) (1 4 2)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 4 2)) ((1 4 0) (1 4 2)) ((1 2 1) (1 2 2)) ((1 4 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 2 0) (3 0 0)) ((1 0 0) (1 2 0)) ((1 2 0) (1 4 2))
   ((0 0 0) (1 1 0) (1 2 3)) ((0 0 0) (1 1 0) (1 1 0))
   ((0 0 0) (1 4 1) (1 4 2)))))

(FNNounSemtrans (TheList) Officer-TheWord (and (isa :NOUN MilitaryOfficer))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn from) employer) (N employer activeIngredientsOfType)
    (AJP fe_descriptor fe_ethnicity employer fe_rank activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((1 2 4)) ((1 1 1)) ((3 0 0)) ((1 0 0)) ((1 1 0)) ((1 2 0))
   ((0 0 0) (1 1 1)) ((1 1 1) (1 2 2)) ((1 1 1) (1 2 1)) ((1 1 0) (1 1 1))
   ((1 1 1) (1 2 3) (3 0 0)))))

(FNNounSemtrans (TheList) Officer-TheWord
 (and (isa :NOUN PoliceOfficer-Municipal)) (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn from) employer) (N employer activeIngredientsOfType)
    (AJP fe_descriptor fe_ethnicity employer fe_rank activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((1 2 4)) ((1 1 1)) ((3 0 0)) ((1 0 0)) ((1 1 0)) ((1 2 0))
   ((0 0 0) (1 1 1)) ((1 1 1) (1 2 2)) ((1 1 1) (1 2 1)) ((1 1 0) (1 1 1))
   ((1 1 1) (1 2 3) (3 0 0)))))

(FNNounSemtrans (TheList) Official-TheWord (and (isa :NOUN PublicOfficial))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn at) fe_depictive fe_governed)
    ((PPFn from) fe_governed) ((PPFn in) fe_descriptor fe_governed)
    ((PPFn of) fe_governed) ((PPFn within) fe_governed)
    (NP fe_governed leadersOfMovement)
    (VPbrst (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (N fe_domain fe_governed
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (AJP fe_descriptor fe_domain fe_governed activeIngredientsOfType)
    (A fe_governed (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     activeIngredientsOfType))
   (:GAP (DNI fe_governed) (INI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 3 0)) ((1 1 0)) ((1 0 1)) ((0 0 0)) ((1 5 0)) ((1 7 1))
   ((1 8 2)) ((1 9 0)) ((1 7 0)) ((1 8 0)) ((1 4 0) (1 9 1)) ((0 0 1) (1 7 1))
   ((1 7 1) (1 9 1)) ((1 8 1) (1 8 3)) ((1 7 0) (1 8 2)) ((1 7 0) (1 9 0))
   ((1 7 0) (1 7 1)) ((1 6 0) (1 8 0)) ((1 2 0) (1 7 1)) ((1 2 0) (1 9 0))
   ((1 0 1) (1 8 0)) ((1 7 1) (1 8 0)) ((1 8 0) (1 9 0)) ((1 7 0) (1 8 0))
   ((0 0 1) (1 2 1) (1 9 1)) ((1 5 1) (1 7 1) (1 9 1))
   ((1 9 0) (1 9 2) (4 0 0)) ((1 0 0) (1 7 1) (1 9 1))
   ((0 0 1) (1 2 0) (1 7 2) (3 0 0)))))

(FNNounSemtrans (TheList) Official-TheWord (and (isa :NOUN SportsOfficial))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Offshoot-TheWord (and (isa :NOUN BranchOrganization))
 (frame FN_Offshoot)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_branch)) (:OBLIQUE-OBJECT (AJP eventOccursAt))
   (:GEN (Poss fe_original_body))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Offspring-TheWord
 (and (isa :NOUN Family-SocialEntity)) (frame FN_Kinship)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Offspring-TheWord
 (and (isa :NOUN Animal)
      (relationExistsInstance biologicalOffspring Person :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ohm-TheWord (and (isa :NOUN Ohm)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Cartel-TheWord (and (isa :NOUN OilCartel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Color-TheWord (and (isa :NOUN ArtistsOilPaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil" "field") Equipment-TheWord
 (and (isa :NOUN OilFieldEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Filter-TheWord (and (isa :NOUN OilFilter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Industry-TheWord (and (isa :NOUN OilIndustry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Painting-TheWord (and (isa :NOUN OilPainting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Pipeline-TheWord (and (isa :NOUN OilPipeline))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil" "pressure") Gauge-TheWord
 (and (isa :NOUN OilPressureGauge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil" "pressure" "indicator") Light-TheWord
 (and (isa :NOUN OilPressureIndicatorLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Pump-TheWord (and (isa :NOUN OilPump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Refinery-TheWord (and (isa :NOUN OilRefinery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Tanker-TheWord (and (isa :NOUN Oiler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oil-TheWord (and (isa :NOUN CookingOil))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Oil-TheWord (and (isa :NOUN ArtistsOilPaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oil-TheWord (and (isa :NOUN Oil))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_inherent_purpose comesFrom-Generic)
    ((PPFn from) comesFrom-Generic)
    (AJP fe_descriptor comesFrom-Generic activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 1 0)) ((0 0 1)) ((0 2 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Oil-TheWord (and (isa :NOUN Petroleum-CrudeOil))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_inherent_purpose comesFrom-Generic)
    ((PPFn from) comesFrom-Generic)
    (AJP fe_descriptor comesFrom-Generic activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 1 0)) ((0 0 1)) ((0 2 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "oil") Treatment-TheWord
 (and (isa :NOUN OilTreatment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oil") Well-TheWord (and (isa :NOUN OilWell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oilfield-TheWord (and (isa :NOUN OilField))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oilman-TheWord (and (isa :NOUN OilFieldWorker))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oilseed-TheWord (and (isa :NOUN Oilseed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oilskin-TheWord (and (isa :NOUN RainCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ointment-TheWord (and (isa :NOUN Ointment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Okra-TheWord (and (isa :NOUN OkraPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "old" "church") Slavonic-TheWord
 (and (isa :NOUN ChurchSlavonicLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "old" "english") Sheepdog-TheWord
 (and (isa :NOUN OldEnglishSheepdog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "old") Master-TheWord
 (and (isa :NOUN OldMaster-Painter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "old") Norse-TheWord
 (and (isa :NOUN OldNorseLanguage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "old" "world") Buffalo-TheWord
 (and (isa :NOUN Buffalo)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "old" "world") Chat-TheWord (and (isa :NOUN Birdsong))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oldster-TheWord (and (isa :NOUN OldHuman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oled-TheWord
 (and (isa :NOUN OrganicLightEmittingDiode)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "olfactory") Nerve-TheWord
 (and (isa :NOUN OlfactoryNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Olive-TheWord (and (isa :NOUN (WoodFn OliveTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Olive-TheWord (and (isa :NOUN Olive-FleshColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Olive-TheWord (and (isa :NOUN Olive-Foodstuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Olive-TheWord (and (isa :NOUN (FruitFn OliveTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "olive") Oil-TheWord (and (isa :NOUN OliveOil))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "olive") Orchard-TheWord
 (and (isa :NOUN
       (CollectionIntersectionFn (TheSet Orchard (FieldFn OliveTree)))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "olive") Tree-TheWord (and (isa :NOUN OliveTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "olympic") Games-TheWord
 (and (isa :NOUN OlympicGames)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "omelette") Pan-TheWord (and (isa :NOUN OmelettePan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Omen-TheWord (and (isa :NOUN Signal)) (frame FN_Omen)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP fe_predictive_phenomenon) (VPing fe_predictive_phenomenon))
   (:OBLIQUE-OBJECT (N fe_future_phenomenon) ((PPFn of) fe_future_phenomenon)
    (Sfin fe_future_phenomenon) ((PPFn to) fe_interested_party)
    ((PPFn for) fe_future_phenomenon fe_interested_party) (AJP outcomeOfAction)
    (NP outcomeOfAction))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 0)) ((1 4 1)) ((1 1 0)) ((1 4 0)) ((0 1 0) (1 5 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Omnivore-TheWord (and (isa :NOUN Omnivore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Once-Over-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oncologist-TheWord (and (isa :NOUN Oncologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oncology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Oncologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "one-dollar") Bill-TheWord
 (and (isa :NOUN OneDollarBill-US)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "one-piece") Swimsuit-TheWord
 (and (isa :NOUN SwimSuit-OnePiece)) (frame FN_Clothing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "one" "bath") Dwelling-TheWord
 (and (isa :NOUN OneBathDwelling)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "one" "family" "room") Dwelling-TheWord
 (and (isa :NOUN OneFamilyRoomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "one" "living" "room") Dwelling-TheWord
 (and (isa :NOUN OneLivingRoomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "one" "piece") Swimsuit-TheWord
 (and (isa :NOUN SwimSuit-OnePiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) One-Piece-TheWord (and (isa :NOUN SwimSuit-OnePiece))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "one" "story") Building-TheWord
 (and (isa :NOUN OneStoryBuilding)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "onion") Bulb-TheWord (and (isa :NOUN Onion-Bulb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "onion") Plant-TheWord (and (isa :NOUN OnionPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Onion-TheWord (and (isa :NOUN Onion-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Onondaga-TheWord
 (and (isa :NOUN Onondaga-EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Onset-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Onset-TheWord
 (and (isa :NOUN AnEventBeginningSomething)) (frame FN_Process_start)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_event) (NP temporallyIntersects))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Onslaught-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) (Poss performedBy)
    (NP performedBy (InverseBinaryPredicateFn subEvents))
    ((PPFn with) fe_depictive) (VPing fe_depictive) ((PPFn from) eventOccursAt)
    (VPbrst eventOutcomes) (VPed fe_depictive purposeOfEvent eventOutcomes)
    (AVP fe_manner temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects) ((PPFn against) victim)
    ((PPFn on) victim)
    (AJP performedBy fe_manner fe_particular_iteration eventOutcomes
     temporallyIntersects instrument-UsedAsWeapon)
    ((PPFn of) performedBy instrument-UsedAsWeapon))
   (:GAP (CNI performedBy) (2nd fe_manner) (DNI performedBy victim))
   (:NOUN (Sfin fe_depictive eventOutcomes))))
 (groupPatterns
  (TheSet ((1 13 0)) ((1 12 0)) ((0 0 0) (1 13 0)) ((1 0 0) (1 11 0))
   ((1 6 0) (1 12 0)) ((1 5 0) (1 13 0)) ((1 12 2) (1 13 0))
   ((1 12 1) (1 12 5)) ((1 0 0) (1 12 1)) ((0 0 0) (1 7 0)) ((1 12 5) (3 0 0))
   ((0 0 0) (1 7 2) (3 0 1)) ((1 2 0) (1 7 1) (1 11 0))
   ((0 0 0) (1 9 0) (1 12 4)) ((0 0 0) (1 1 0) (1 4 0))
   ((1 13 0) (3 0 0) (3 0 1)) ((1 12 1) (3 0 0) (3 0 1))
   ((0 0 0) (1 1 0) (1 12 3) (3 0 1)) ((1 2 1) (1 9 1) (1 10 0) (1 12 5))
   ((0 0 0) (1 7 0) (1 12 2) (1 12 2) (1 13 1))
   ((0 0 0) (1 3 0) (1 8 0) (1 8 1) (1 12 0)))))

(FNNounSemtrans (TheList) Oodles-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Oomycetes-TheWord (and (isa :NOUN OomycetesClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opal-TheWord (and (isa :NOUN Opal-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "open-heart") Surgery-TheWord
 (and (isa :NOUN OpenHeartSurgery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "opera") Company-TheWord
 (and (isa :NOUN OperaCompany)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "opera") Singer-TheWord (and (isa :NOUN OperaSinger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opera-TheWord (and (isa :NOUN OperaHouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opera-TheWord (and (isa :NOUN OperaPerformance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "operating") Room-TheWord
 (and (isa :NOUN OperatingRoom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "operating") System-TheWord
 (and (isa :NOUN OperatingSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "operating") Table-TheWord
 (and (isa :NOUN OperatingTable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Operation-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_business ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (NP fe_descriptor) (A eventOccursAt)
    (AJP fe_business_name fe_descriptor fe_product ownerOfProprietaryThing)
    (N fe_descriptor fe_product fe_service_provider))
   (:GAP (DEN fe_business) (2nd fe_business_name))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 3 2)) ((3 0 0)) ((1 2 3)) ((1 3 1)) ((1 2 2)) ((1 0 0)) ((1 3 0))
   ((1 2 1)) ((0 0 1) (0 0 1)) ((1 3 1) (3 0 0)) ((1 1 0) (1 3 1))
   ((1 3 0) (1 3 1)) ((1 2 1) (1 3 1)) ((1 2 0) (1 2 3)) ((0 0 0) (1 2 1))
   ((1 2 1) (1 2 1) (1 3 1)))))

(FNNounSemtrans (TheList) Operation-TheWord (and (isa :NOUN MilitaryOperation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Operation-TheWord (and (isa :NOUN Operation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Operation-TheWord (and (isa :NOUN UsingADevice))
 (frame FN_Using)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy instrument-Generic))
   (:OBLIQUE-OBJECT ((PPFn of) instrument-Generic))
   (:GAP (DNI doneBy purposeOfEvent))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "ophthalmic") Artery-TheWord
 (and (isa :NOUN OphthalmicArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ophthalmologist-TheWord
 (and (isa :NOUN Ophthalmologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ophthalmoscope-TheWord
 (and (isa :NOUN Ophthalmoscope)) (frame FN_Medical_instruments)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opinion-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opinion-TheWord
 (and (isa :NOUN CycLSentence-Assertible)
      (relationExistsInstance opinions IntelligentAgent :NOUN))
 (frame FN_Opinion)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Opinion-TheWord (and (isa :NOUN Respect))
 (frame FN_Regard)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfEvaluation) (AJP fe_judgment))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList "opium") Poppy-TheWord
 (and (isa :NOUN OpiumPoppyPlant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opium-TheWord (and (isa :NOUN Opium))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_country_of_origin))
   (:GAP (DEN fe_intoxicant)) (:GEN (Poss fe_country_of_origin))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Opossum-TheWord (and (isa :NOUN Opossum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opponent-TheWord
 (and (isa :NOUN AllyingWithSomething)) (frame FN_Taking_sides)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn in) fe_descriptor)
    (VPing fe_descriptor) (N fe_issue)
    ((PPFn of) objectActedOn fe_issue fe_side)
    (AJP fe_degree fe_descriptor fe_side))
   (:GAP (DEN subjectOfMentalSituation) (DNI fe_issue) (INI fe_issue))
   (:GEN (Poss objectActedOn fe_side))))
 (groupPatterns
  (TheSet ((1 5 2)) ((1 4 1)) ((1 3 0)) ((3 0 1)) ((1 4 2)) ((3 0 0)) ((1 4 0))
   ((1 1 0) (3 0 1)) ((1 2 0) (1 4 1)) ((1 4 1) (1 5 1)) ((1 4 1) (1 5 0))
   ((1 0 0) (1 4 0)) ((1 4 0) (1 5 0)) ((0 0 0) (1 4 1) (1 5 0)))))

(FNNounSemtrans (TheList) Opportunity-TheWord (and (isa :NOUN Opportunity))
 (frame FN_Opportunity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_desirable_situation))
   (:GAP (DNI doneBy) (INI doneBy fe_desirable_situation) (DEN fe_opportunity))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Opposition-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance opponents Agent-Generic :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opposition-TheWord
 (and (isa :NOUN AllyingWithSomething)) (frame FN_Taking_sides)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Opthalmologist-TheWord
 (and (isa :NOUN Ophthalmologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "optic") Nerve-TheWord (and (isa :NOUN OpticNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "optical") Drive-TheWord
 (and (isa :NOUN OpticalDrive)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "optical") Illusion-TheWord
 (and (isa :NOUN OpticalIllusion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "optical") Microscope-TheWord
 (and (isa :NOUN Microscope-Optical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "optical" "sensor") Fiber-TheWord
 (and (isa :NOUN OpticalSensorFiber)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Optician-TheWord (and (isa :NOUN OpticalRetailer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Option-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance
       (Kappa (?evt ?poss)
        (and (actors ?evt ?actor)
             (optionsAvailable ?actor ?evt objectSelected ?poss)))
       Event :NOUN))
 (frame FN_Alternatives)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) doneBy) (N fe_situation)
    ((PPFn of) fe_situation) (Sfin fe_situation))
   (:GAP (DNI doneBy))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Option-TheWord
 (and (isa :NOUN OptionTransactionAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Optometrist-TheWord (and (isa :NOUN Optometrist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "or") Gate-TheWord (and (isa :NOUN OrGate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oral" "hygiene") Product-TheWord
 (and (isa :NOUN OralHygieneProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oral") Sex-TheWord (and (isa :NOUN OralSex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oral") Thermometer-TheWord
 (and (isa :NOUN OralThermometer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "orange") Juice-TheWord (and (isa :NOUN OrangeJuice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orange-TheWord (and (isa :NOUN (FruitFn OrangeTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orange-TheWord (and (isa :NOUN OrangeColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orange-TheWord (and (isa :NOUN (FruitFn OrangeTree)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "orange") Tree-TheWord (and (isa :NOUN OrangeTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orangutan-TheWord (and (isa :NOUN Orangutan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orbit-TheWord (and (isa :NOUN OrbitalPath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orbit-TheWord (and (isa :NOUN Orbiting))
 (frame FN_Path_traveled)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectMoving))
   (:OBLIQUE-OBJECT ((PPFn about) alongObject) ((PPFn above) alongObject)
    ((PPFn at) alongObject) ((PPFn around) alongObject)
    ((PPFn round) alongObject) (NP trajectory-Complete)
    ((PPFn of) objectMoving)
    (AJP fe_characteristic lengthOfObject objectMoving))
   (:GAP (DEN trajectory-Complete) (INI objectMoving))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 6 0)) ((1 7 2)) ((1 7 0)) ((0 0 0) (1 5 0))
   ((1 4 0) (3 0 0)) ((0 0 0) (1 3 0)) ((1 6 0) (1 7 0)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 7 0) (1 7 1)) ((0 0 0) (1 2 0) (1 7 0))
   ((0 0 0) (1 1 0) (1 7 0)) ((0 0 0) (1 0 0) (1 7 0)))))

(FNNounSemtrans (TheList) Orchard-TheWord (and (isa :NOUN Orchard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orchestra-TheWord (and (isa :NOUN Orchestra))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orchid-TheWord (and (isa :NOUN Orchid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orchidaceae-TheWord (and (isa :NOUN Orchid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orchis-TheWord (and (isa :NOUN Orchis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Order-TheWord (and (isa :NOUN BiologicalOrder))
 (frame FN_Biological_classification)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) groupMembers)) (:GAP (DEN fe_rank))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Order-TheWord (and (isa :NOUN ReligiousOrder))
 (frame FN_Organization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor)
    (AJP fe_container_possessor fe_descriptor)
    (N fe_container_possessor hasMembers) ((PPFn of) hasMembers))
   (:GAP (INI hasMembers) (2nd (InverseBinaryPredicateFn nameString))
    (DEN fe_organization))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1) (0 3 0)) ((0 1 1) (0 2 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Order-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (VPing infoTransferred)
    (VPto infoTransferred) ((PPFn for) infoTransferred) (AJP performedBy)
    ((PPFn of) performedBy)
    (N meansOfInfoTransfer infoTransferred temporallyIntersects))
   (:GAP (DNI recipientOfInfo infoTransferred performedBy))
   (:GEN (Poss recipientOfInfo performedBy))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 6 0)) ((1 2 0)) ((1 1 0)) ((1 6 1)) ((3 0 1)) ((1 4 0))
   ((3 0 0)) ((0 0 0)) ((0 0 1) (3 0 1)) ((0 0 1) (0 0 1)) ((1 6 2) (3 0 1))
   ((1 4 0) (1 5 0)) ((1 0 0) (1 3 0)) ((0 0 0) (1 6 1)))))

(FNNounSemtrans (TheList) Orders-TheWord
 (and (isa :NOUN Command) (isa :NOUN Document-CW)) (frame FN_Documents)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ordinary-TheWord
 (and (isa :NOUN PennyFarthingBicycle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ordination-TheWord
 (and (isa :NOUN InitiationCeremony)) (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn as) fe_new_status) ((PPFn to) fe_new_status)
    (AJP fe_new_status) ((PPFn of) groupMembers fe_new_status)
    (A fe_organization) ((PPFn at) eventOccursAt)
    ((PPFn in) fe_organization temporallyIntersects))
   (:GEN (Poss groupMembers fe_new_status))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 6 0)) ((0 4 0)) ((1 0 1)) ((0 3 1)) ((1 0 0)) ((0 3 0))
   ((0 6 1) (1 0 0)) ((0 1 0) (1 0 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 3 0))
   ((0 5 0) (0 6 1) (1 0 0)) ((0 2 0) (0 6 1) (1 0 0)))))

(FNNounSemtrans (TheList) Ordnance-TheWord (and (isa :NOUN ProjectileWeapon))
 (frame FN_Ammunition) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ordnance-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Ordovician-TheWord
 (and (isa :NOUN Ordovician-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ore-TheWord (and (isa :NOUN MineralOre))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organ-TheWord (and (isa :NOUN Organ)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organ-TheWord
 (and (isa :NOUN Organ-MusicalInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "organ") System-TheWord (and (isa :NOUN OrganSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "organic") Chemistry-TheWord
 (and (isa :NOUN OrganicChemistry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "organic") Process-TheWord
 (and (isa :NOUN BiologicalEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organism-TheWord (and (isa :NOUN Organism-Whole))
 (frame FN_Biological_entity) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organism-TheWord (and (isa :NOUN Organism-Whole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organist-TheWord
 (and (isa :NOUN (PlayerOfInstrumentFn Organ-MusicalInstrument)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "organization") Chart-TheWord
 (and (isa :NOUN OrganizationalChart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organization-TheWord
 (and (isa :NOUN Organization-Administration-Management)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organization-TheWord
 (and (isa :NOUN Organization-AnimalActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organization-TheWord (and (isa :NOUN Organization))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_organization))
   (:OBLIQUE-OBJECT ((PPFn of) hasMembers)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn in) duration eventOccursAt)
    (N hasMembers (InverseBinaryPredicateFn nameString) purposeOfEvent)
    (AJP fe_container_possessor fe_descriptor hasMembers purposeOfEvent)
    (VPing purposeOfEvent) (A purposeOfEvent) ((PPFn for) purposeOfEvent))
   (:GAP (INI hasMembers) (DNI hasMembers) (DEN fe_organization))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 6 0)) ((1 1 0)) ((1 3 1)) ((1 3 2)) ((1 4 3)) ((1 0 0))
   ((1 4 2)) ((3 0 0)) ((1 3 0)) ((1 3 0) (1 4 3)) ((1 4 2) (1 5 0))
   ((1 2 1) (1 4 2)) ((1 2 0) (1 4 3)) ((0 0 0) (0 0 0)) ((1 3 2) (3 0 0))
   ((1 4 0) (1 4 1)) ((1 2 1) (1 4 1) (1 4 3)) ((1 3 2) (1 4 1) (3 0 0)))))

(FNNounSemtrans (TheList "organized") Event-TheWord
 (and (isa :NOUN Event-Organized)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "organ") Transplant-TheWord
 (and (isa :NOUN OrganTransplantSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orgy-TheWord (and (isa :NOUN SexualOrgy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orientation-TheWord
 (and (isa :NOUN GeographicalDirection)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orifice-TheWord (and (isa :NOUN BodilyOrifice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Origami-TheWord (and (isa :NOUN OrigamiArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Origin-TheWord
 (and (isa :NOUN PersonWithNationality)) (frame FN_Origin)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (NP comesFrom-Generic))
   (:GAP (DNI objectActedOn) (DEN comesFrom-Generic))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Originator-TheWord
 (and (isa :NOUN InventingSomething)) (frame FN_Achieving_first)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Originator-TheWord
 (and (isa :NOUN DiscoveringSomething)) (frame FN_Achieving_first)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Originator-TheWord (and (isa :NOUN Pioneer))
 (frame FN_Achieving_first) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orlon-TheWord (and (isa :NOUN OrlonCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ornithologist-TheWord (and (isa :NOUN Ornithologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ornithology-TheWord (and (isa :NOUN Ornithology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oropharynx-TheWord (and (isa :NOUN OroPharynx))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orthodontist-TheWord (and (isa :NOUN Orthodontist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "orthodox") Church-TheWord
 (and (isa :NOUN OrthodoxChurchBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orthography-TheWord (and (isa :NOUN WritingSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orthopaedics-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orthopaedist-TheWord (and (isa :NOUN Orthopaedist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Orthopedist-TheWord (and (isa :NOUN Orthopaedist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oscilloscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Osculation-TheWord (and (isa :NOUN Osculation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Osmium-TheWord (and (isa :NOUN Osmium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Osprey-TheWord (and (isa :NOUN Osprey))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Osteopath-TheWord
 (and (isa :NOUN Doctor-Osteopathic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ostracism-TheWord
 (and (isa :NOUN OstracisingSomeone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ostrich-TheWord (and (isa :NOUN Ostrich))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Otoscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Otoscope-TheWord (and (isa :NOUN Otoscope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Otter-TheWord (and (isa :NOUN Otter))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Otterhound-TheWord (and (isa :NOUN Otterhound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ottoman-TheWord
 (and (isa :NOUN PersonWithNationality)) (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ouija") Set-TheWord (and (isa :NOUN OuijaSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ouija-TheWord (and (isa :NOUN OuijaSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ounce-TheWord (and (isa :NOUN Ounce))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) massOfObject) ((PPingFn of) massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Ounce-TheWord (and (isa :NOUN Ounce-Troy))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) massOfObject) ((PPingFn of) massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Ours-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ourself-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ourselves-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ouster-TheWord (and (isa :NOUN ChangeOfGovernment))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) losesControl) ((PPFn in) temporallyIntersects))
   (:GAP (CNI fe_selector))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Outback-TheWord (and (isa :NOUN RuralArea))
 (frame FN_Isolated_places)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_relative_location))
   (:GAP (DEN eventOccursAt)) (:GEN (Poss fe_relative_location))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Outbuilding-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Outcrop-TheWord (and (isa :NOUN RuggedTerrain))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn of) parts) (AJP parts fe_descriptor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList "outdoor") Game-TheWord
 (and (isa :NOUN OutdoorSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "outdoor") Mailbox-TheWord
 (and (isa :NOUN MailBox-OutDoor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "outdoor" "trash") Can-TheWord
 (and (isa :NOUN GarbageCan-Outdoor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Outdoors-TheWord
 (and (isa :NOUN Outdoors-ExposedToWeather)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "outer") Space-TheWord (and (isa :NOUN OuterSpace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Outfielder-TheWord
 (and (isa :NOUN BaseballOutfielder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Outfit-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) (A clothingStyle)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse)
    (N fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 3 2)) ((0 2 3)) ((0 3 1)) ((0 2 1)) ((0 2 0))
   ((0 3 2) (2 0 1)) ((0 3 1) (2 0 1)) ((0 1 0) (2 0 1)) ((0 2 0) (2 0 1))
   ((0 2 0) (0 3 2)) ((0 2 0) (0 2 3)) ((0 3 0) (0 3 1)) ((0 2 0) (2 0 0))
   ((0 2 0) (0 3 1)) ((0 2 0) (0 2 2)) ((0 2 0) (0 2 0))
   ((0 2 0) (0 3 1) (2 0 1)) ((0 2 0) (0 3 0) (2 0 1))
   ((0 0 0) (0 2 0) (0 2 0) (0 2 2)))))

(FNNounSemtrans (TheList) Outhouse-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) eventOccursAt) ((PPFn in) fe_relative_location))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "outpatient") Surgery-TheWord
 (and (isa :NOUN OutpatientSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Output-TheWord (and (isa :NOUN Production-Generic))
 (frame FN_Labor_product)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn throughout) temporallyIntersects))
   (:GAP (DNI causes-Underspecified) (INI fe_input) (DEN outputsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Outset-TheWord (and (isa :NOUN TemporalThing))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) occursDuring))
   (:GAP (DEN parts) (DNI occursDuring) (INI occursDuring))
   (:GEN (Poss occursDuring))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Outside-TheWord (and (isa :NOUN OutdoorLocation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oval-TheWord (and (isa :NOUN Ellipse))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_shape_prop) (AJP fe_shape_prop)
    ((PPFn from) stuffUsed) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList "ovarian") Artery-TheWord
 (and (isa :NOUN OvarianArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ovarian") Vein-TheWord (and (isa :NOUN OvarianVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ovary-TheWord (and (isa :NOUN Ovary-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ovary-TheWord (and (isa :NOUN Ovary-PlantPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oven") Mitt-TheWord
 (and (isa :NOUN Mitten) (isa :NOUN ThermalProtectiveAttire))
 (frame FN_Artifact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oven-TheWord (and (isa :NOUN Oven))
 (frame FN_Artifact)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP productsCreated fe_descriptor)
    (Sinterrog fe_descriptor)
    (VPed mainConstituent (InverseBinaryPredicateFn nameString))
    (N mainConstituent activeIngredientsOfType) ((PPFn for) deviceUse)
    (PPinterrog deviceUse))
   (:GAP (DEN productsCreated))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 0 1) (0 4 0)) ((0 0 1) (0 0 1))
   ((0 2 0) (0 2 1) (0 5 0)) ((0 0 0) (0 0 1) (0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Oven-TheWord (and (isa :NOUN Oven)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Overall-TheWord (and (isa :NOUN Overalls))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent)
    (AJP fe_descriptor mainConstituent deviceUse) ((PPFn of) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 0 0)) ((0 1 1)) ((0 1 0)) ((0 1 2) (2 0 1))
   ((0 0 0) (0 2 0)) ((0 1 0) (2 0 1)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 1 0)) ((0 1 0) (0 1 2) (2 0 1)))))

(FNNounSemtrans (TheList) Overcoat-TheWord (and (isa :NOUN Coat))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn of) mainConstituent)
    (AJP fe_descriptor clothingStyle) ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 3 0)) ((0 2 0) (0 2 1))
   ((0 0 0) (0 2 0)) ((0 2 0) (0 2 0)) ((0 0 0) (0 2 1) (2 0 0))
   ((0 2 0) (0 2 1) (0 2 1)) ((0 0 0) (0 2 0) (2 0 0))
   ((0 2 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Overdraft-TheWord
 (and (isa :NOUN BankCharge-Overdraft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Overdrive-TheWord
 (and (isa :NOUN OverdriveAutomaticTransmission)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Overgarment-TheWord (and (isa :NOUN OverGarment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Overhaul-TheWord
 (and (isa :NOUN ImprovingADevisedPracticeOrWork))
 (frame FN_Reforming_a_system) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "overhead") Projector-TheWord
 (and (isa :NOUN OverheadProjector)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Overlord-TheWord (and (isa :NOUN Warlord))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn in) fe_governed) ((PPFn of) fe_governed)
    (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Overnighter-TheWord (and (isa :NOUN CarryOnLuggage))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Overpass-TheWord (and (isa :NOUN Overpass))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent) ((PPFn in) fe_relative_location)
    ((PPFn at) fe_relative_location)
    (N (InverseBinaryPredicateFn nameString) deviceUse))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 3 0) (0 3 1)) ((0 1 0) (0 3 0))
   ((0 0 0) (0 3 1)))))

(FNNounSemtrans (TheList) Overthrow-TheWord
 (and (isa :NOUN Revolution-Political)) (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP losesControl))
   (:OBLIQUE-OBJECT ((PPFn of) losesControl losesControl)
    (AJP fe_manner fe_selector) ((PPFn in) temporallyIntersects)
    (N temporallyIntersects))
   (:GEN (Poss losesControl))))
 (groupPatterns
  (TheSet ((1 1 1)) ((2 0 0)) ((1 0 0)) ((1 0 0) (1 2 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Ovule-TheWord (and (isa :NOUN Ovule)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ovum-TheWord (and (isa :NOUN Ovum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Owl-TheWord (and (isa :NOUN Owl)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Owner-TheWord
 (and (isa :NOUN SocialBeing)
      (relationInstanceExists owns :NOUN SomethingExisting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Owner-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance situationConstituents OwningSomething :NOUN))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner owns))
   (:OBLIQUE-OBJECT (NP owner) (N owns) ((PPFn of) owns)) (:GAP (DEN owner))
   (:GEN (Poss owns))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 1)) ((1 1 0)) ((0 0 0) (1 2 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Ownership-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner))
   (:OBLIQUE-OBJECT (AJP owner) ((PPFn among) owner) ((PPFn of) owns) (N owns))
   (:GAP (DNI owns)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 3 0)) ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Ox-TheWord (and (isa :NOUN Ox)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oxidation-TheWord (and (isa :NOUN OxidationProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oxide-TheWord (and (isa :NOUN Oxide)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oxygen") Mask-TheWord (and (isa :NOUN OxygenMask))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oxygen-TheWord (and (isa :NOUN Oxygen))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "oxygenated") Blood-TheWord
 (and (isa :NOUN OxygenatedBlood)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oxytocin-TheWord (and (isa :NOUN Oxytocin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Oyster-TheWord (and (isa :NOUN Oyster))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ozone") Layer-TheWord
 (and (isa :NOUN OzoneLayer-PlanetEarth)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ozone-TheWord (and (isa :NOUN Ozone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pace-TheWord (and (isa :NOUN Pace-Speed))
 (frame FN_Speed_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP objectMoving) (AJP fe_degree rateOfEvent)
    ((PPFn of) objectMoving rateOfEvent) ((PPFn through) temporallyIntersects))
   (:GAP (DNI fe_attribute objectMoving) (DEN fe_attribute rateOfEvent))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 2 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 2 1) (0 3 0)))))

(FNNounSemtrans (TheList) Pachinko-TheWord (and (isa :NOUN Pachinko))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pachyderm-TheWord (and (isa :NOUN Pachyderm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pacifism-TheWord (and (isa :NOUN Pacifism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pack" "of") Card-TheWord
 (and (isa :NOUN DeckOfCards)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pack-TheWord (and (isa :NOUN PackagedProduct))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) (N fe_individuals)
    (NP fe_individuals) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals))
   (:GEN (Poss fe_individuals))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 0)) ((0 3 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 3 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Pack-TheWord (and (isa :NOUN PackagedObject))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP containedObject) ((PPFn of) containedObject)
    ((PPFn on) fe_relative_location) ((PPFn from) fe_relative_location)
    ((PPFn out) fe_relative_location) (N mainConstituent deviceUse)
    (AJP containedObject fe_descriptor fe_relative_location deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner) (N owner))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 5 1)) ((0 6 3)) ((0 2 0)) ((2 0 0)) ((2 1 0)) ((0 1 0))
   ((0 6 0)) ((0 4 0) (0 5 1)) ((0 5 1) (2 0 0)) ((0 1 0) (0 3 0))
   ((0 1 0) (2 0 0)) ((0 0 0) (0 6 1)) ((0 6 0) (0 6 1) (0 6 2))
   ((0 1 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Pack-TheWord
 (and (isa :NOUN (VolumeFn PackagedObject))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) fe_count (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList "package") Store-TheWord (and (isa :NOUN LiquorStore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Package-TheWord (and (isa :NOUN PackagedObject))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_aggregate_property) (AJP fe_aggregate_property)
    (N fe_aggregate_property) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (INI fe_individuals) (DNI fe_individuals))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 0 0)) ((0 2 0) (0 3 0)) ((0 1 0) (0 3 0))
   ((0 1 0) (0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList "packaged") Product-TheWord
 (and (isa :NOUN PackagedProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Packet-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Packet-TheWord (and (isa :NOUN Packet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "packing") Tape-TheWord (and (isa :NOUN PackingTape))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pad" "of") Paper-TheWord (and (isa :NOUN PadOfPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pad-TheWord (and (isa :NOUN MedicalPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pad-TheWord (and (isa :NOUN PadOfPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paddle-TheWord (and (isa :NOUN Paddle-Water))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paddle-TheWord (and (isa :NOUN TableTennisPaddle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paddle") Wheel-TheWord (and (isa :NOUN PaddleWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paddlewheel-TheWord (and (isa :NOUN PaddleWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Padlock-TheWord (and (isa :NOUN Padlock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paediatrics-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pagan-TheWord
 (and (isa :NOUN IntelligentAgentTypeByBeliefSystem))
 (frame FN_People_by_religion)
 (bindingTemplate (TheList (:GAP (DEN fe_person) (2nd hasBeliefSystems))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paganism-TheWord (and (isa :NOUN Paganism-Religion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Page-TheWord (and (isa :NOUN PageOfPaper-IBO))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pagoda-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Pagoda-TheWord (and (isa :NOUN Pagoda))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pail-TheWord (and (isa :NOUN Bucket))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPingFn of) containedObject)
    (AJP mainConstituent) ((PPFn on) fe_relative_location)
    (N containedObject mainConstituent deviceUse))
   (:GAP (DEN containerUsed deviceUse)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((2 0 0)) ((0 4 1)) ((0 2 0)) ((0 0 0)) ((0 4 0))
   ((0 4 2) (2 0 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 4 1)))))

(FNNounSemtrans (TheList) Pain-TheWord (and (isa :NOUN LevelOfPain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pain-TheWord (and (isa :NOUN SensoryQuantity))
 (frame FN_Perception_body) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paint") Brush-TheWord (and (isa :NOUN PaintBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paint-TheWord (and (isa :NOUN Paint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paint") Thinner-TheWord
 (and (isa :NOUN PaintThinner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paintbrush-TheWord (and (isa :NOUN PaintBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Painter-TheWord (and (isa :NOUN Painter-FineArtist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Painter-TheWord
 (and (isa :NOUN Painter-Tradesperson)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Painting-TheWord (and (isa :NOUN Painting-ArtForm))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn in) eventOccursAt)
    (NP eventOccursAt)
    ((PPFn of) performedBy fe_represented fe_state_of_represented startingDate)
    (N activeIngredientsOfType) (AJP fe_descriptor activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType))
   (:GAP (DEN productsCreated)) (:GEN (Poss performedBy fe_descriptor))))
 (groupPatterns
  (TheSet ((0 3 3)) ((0 3 2)) ((0 3 1)) ((0 5 0)) ((2 0 0)) ((0 3 0))
   ((0 3 1) (0 5 1)) ((0 2 0) (0 6 1)) ((0 5 0) (0 5 1)) ((0 3 3) (2 0 1))
   ((0 3 3) (0 5 0)) ((0 3 3) (0 6 0)) ((0 1 0) (2 0 0))
   ((0 3 1) (0 4 0) (0 5 0)) ((0 0 0) (0 3 1) (0 6 0)))))

(FNNounSemtrans (TheList "pair" "of") Scissors-TheWord
 (and (isa :NOUN Scissors)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pair" "of") Tongs-TheWord (and (isa :NOUN Tongs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pair" "of") Tweezers-TheWord
 (and (isa :NOUN Tweezers)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pair-TheWord (and (isa :NOUN Cardinal-Mathematical))
 (frame FN_Cardinal_numbers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn)) (:GAP (DEN fe_number))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Pajamas-TheWord (and (isa :NOUN Pajamas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pakistani") Rupee-TheWord
 (and (isa :NOUN Rupee-Pakistan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pakistani-TheWord (and (isa :NOUN PakistaniPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pal-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pal-TheWord (and (isa :NOUN InvolvedInRelationship))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partners))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_2) (AJP duration fe_relationship))
   (:GAP (DEN fe_partner_1) (DNI fe_partner_2)) (:GEN (Poss fe_partner_2))
   (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 1 1)) ((3 0 0)) ((1 0 0)) ((0 0 0) (3 0 0))
   ((3 0 0) (4 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Palace-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_building))
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_function)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 1)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Palace-TheWord (and (isa :NOUN PalaceBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palatine-TheWord (and (isa :NOUN PalateBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palazzo-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paleoanthropology-TheWord
 (and (isa :NOUN Paleoanthropology)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paleobotany-TheWord (and (isa :NOUN Paleobotany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paleontologist-TheWord
 (and (isa :NOUN Paleontologist)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paleontology-TheWord (and (isa :NOUN Paleontology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paleozoic-TheWord
 (and (isa :NOUN Palaeozoic-GeologicalEra)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palestinian-TheWord
 (and (isa :NOUN PalestinianPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palette-TheWord (and (isa :NOUN Palette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palladium-TheWord (and (isa :NOUN Palladium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palliation-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_affliction) ((PPFn of) fe_affliction)
    (AJP fe_affliction duration)
    (N drugAdministered
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((0 0 0) (0 3 1))
   ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Palliative-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pallium-TheWord (and (isa :NOUN Cape-Clothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "palm") Reading-TheWord (and (isa :NOUN PalmReading))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palm-TheWord (and (isa :NOUN PalmOfHand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palm-TheWord (and (isa :NOUN PalmTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "palm") Tree-TheWord (and (isa :NOUN PalmTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Palmae-TheWord (and (isa :NOUN PalmTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "palmtop") Computer-TheWord
 (and (isa :NOUN PalmtopComputer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pamphlet-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Panama-TheWord (and (isa :NOUN StrawHat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "pancake") Spatula-TheWord
 (and (isa :NOUN PancakeSpatula)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pancake") Batter-TheWord
 (and (isa :NOUN PancakeBatter)) (frame FN_Food) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pancake-TheWord (and (isa :NOUN Pancake))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 2 0)) ((0 2 0) (0 2 0)) ((0 1 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Pancreas-TheWord (and (isa :NOUN Pancreas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pancreatic") Cancer-TheWord
 (and (isa :NOUN (CancerFn Pancreas))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pane-TheWord (and (isa :NOUN WindowPane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "panelized") Home-TheWord
 (and (isa :NOUN PanelizedHome)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "panic") Attack-TheWord (and (isa :NOUN PanicAttack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Panic-TheWord (and (isa :NOUN Panic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pannier-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN containerUsed))
   (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Pansy-TheWord (and (isa :NOUN Pansy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pant") Leg-TheWord (and (isa :NOUN PantLeg))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Panther-TheWord (and (isa :NOUN Leopard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Panties-TheWord (and (isa :NOUN WomensUnderpants))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Pantry-TheWord (and (isa :NOUN Pantry))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pants") Suit-TheWord (and (isa :NOUN PantsSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pants-TheWord (and (isa :NOUN Pants))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) fe_descriptor) ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle) ((PPFn with) subRegions)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 1 0)) ((0 2 1)) ((0 2 0)) ((0 4 3) (2 0 0))
   ((0 3 0) (0 4 2)) ((0 2 0) (0 4 3)) ((0 2 0) (0 4 1)) ((0 2 0) (0 2 0))
   ((0 2 2) (0 4 0) (2 0 0)) ((0 0 0) (0 4 1) (0 4 2)))))

(FNNounSemtrans (TheList "panty") Liner-TheWord (and (isa :NOUN PantyLiner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pantyhose-TheWord (and (isa :NOUN Pantyhose))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn from) startingDate))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "paper") Airplane-TheWord
 (and (isa :NOUN PaperAirplane)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Bag-TheWord (and (isa :NOUN PaperBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Chase-TheWord (and (isa :NOUN PaperChase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Clip-TheWord (and (isa :NOUN PaperClip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Cutter-TheWord (and (isa :NOUN PaperCutter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Doll-TheWord (and (isa :NOUN PaperDoll))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Fastener-TheWord
 (and (isa :NOUN Clip-Fastener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper" "grocery") Bag-TheWord
 (and (isa :NOUN PaperGroceryBag)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Sack-TheWord (and (isa :NOUN PaperBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paper-TheWord (and (isa :NOUN NewspaperOrganization))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor eventOccursAt))
   (:GAP (DEN fe_business)) (:APPOSITIVE (NP fe_business_name))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0) (0 0 1)) ((0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Paper-TheWord (and (isa :NOUN Paper)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paper-TheWord (and (isa :NOUN ScholarlyArticle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paper-TheWord (and (isa :NOUN Paper))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_inherent_purpose)
    (N activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Paper-TheWord (and (isa :NOUN NewspaperSeries))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Towel-TheWord (and (isa :NOUN PaperTowel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Wrapping-TheWord
 (and (isa :NOUN PaperWrapping)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paperback-TheWord (and (isa :NOUN Paperback))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP authorOfLiteraryWork-CW)
    ((PPFn by) authorOfLiteraryWork-CW) (N fe_genre) ((PPFn of) parts fe_title)
    ((PPFn on) situationTopic) ((PPFn about) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 3 1)) ((0 3 0)) ((0 2 0)) ((2 0 0)) ((0 1 0))
   ((0 0 0) (0 4 0)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Paperclip-TheWord (and (isa :NOUN PaperClip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Papercut-TheWord (and (isa :NOUN SkinLaceration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paper") Cut-TheWord (and (isa :NOUN SkinLaceration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Papers-TheWord
 (and (isa :NOUN (GroupFn Document-CW))) (frame FN_Documents)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_bearer)) (:GAP (DEN fe_document) (INI fe_issuer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Paperweight-TheWord (and (isa :NOUN PaperWeight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Papillon-TheWord (and (isa :NOUN Papillon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "papua" "new") Guinea-TheWord
 (and (isa :NOUN PapuaNewGuinea)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Papuan-TheWord
 (and (isa :NOUN PapuanLanguageGrouping)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "papyrus") Sheet-TheWord
 (and (isa :NOUN PapyrusSheet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parachute-TheWord (and (isa :NOUN Parachute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parade-TheWord (and (isa :NOUN Parade))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paraglider-TheWord (and (isa :NOUN Paraglider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paraguay-TheWord (and (isa :NOUN Paraguay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parakeet-TheWord (and (isa :NOUN Parakeet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paralegal-TheWord (and (isa :NOUN Paralegal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parallel") Bars-TheWord
 (and (isa :NOUN GymParallelBars)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parallel") Circuit-TheWord
 (and (isa :NOUN ParallelCircuit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parallel" "computer") Cable-TheWord
 (and (isa :NOUN ParallelComputerCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parallelogram-TheWord (and (isa :NOUN Parallelogram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paramedic-TheWord
 (and (isa :NOUN EmergencyMedicalTechnician)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parameter-TheWord (and (isa :NOUN AgreementLineItem))
 (frame FN_Terms_of_agreement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor)) (:GAP (DEN fe_requirements))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Paramour-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1)) (:OBLIQUE-OBJECT (N fe_partner_1))
   (:GAP (DEN fe_partner_1 fe_partner_2)) (:GEN (Poss fe_partner_2))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)) ((3 0 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "paranasal") Sinus-TheWord
 (and (isa :NOUN NasalSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parapet-TheWord (and (isa :NOUN Parapet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parcellation-TheWord (and (isa :NOUN Parcellation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parchment-TheWord (and (isa :NOUN Parchment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pardon-TheWord (and (isa :NOUN Pardon))
 (frame FN_Pardon)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_authority fe_offender)) (:OBJECT (NP fe_offender))
   (:OBLIQUE-OBJECT (AJP fe_authority) ((PPFn from) fe_authority)
    ((PPFn by) fe_authority by-Underspecified) ((PPFn to) fe_offender)
    ((PPFn for) (InverseBinaryPredicateFn explains-Generic) fe_offender
     fe_offense)
    ((PPFn on) (InverseBinaryPredicateFn explains-Generic)
     temporallyIntersects)
    ((PPFn in) temporallyIntersects) (VPbrst temporallyIntersects)
    (NP temporallyIntersects))
   (:GAP (CNI fe_authority) (2nd fe_offense) (INI fe_offender fe_offense)
    (DNI fe_authority fe_offense))))
 (groupPatterns
  (TheSet ((2 4 1)) ((2 3 0)) ((0 0 1)) ((2 4 1) (2 7 0)) ((0 0 1) (2 1 0))
   ((0 0 1) (2 2 0)) ((0 0 0) (2 3 0)) ((0 0 0) (2 4 1)) ((0 0 0) (1 0 0))
   ((0 0 1) (2 4 2)) ((0 0 1) (2 4 0)) ((0 0 1) (2 5 0))
   ((0 0 0) (2 4 1) (2 8 0)) ((0 0 1) (2 0 0) (2 6 0))
   ((0 0 1) (2 0 0) (2 5 1)) ((0 0 1) (2 2 1) (2 4 2)))))

(FNNounSemtrans (TheList) Parent-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DNI fe_ego) (INI fe_ego) (DEN fe_alter relatives))
   (:NOUN (N fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 1) (0 0 1)))))

(FNNounSemtrans (TheList) Parent-TheWord (and (isa :NOUN Parent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parietal") Bone-TheWord
 (and (isa :NOUN ParietalBone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parietal") Lobe-TheWord
 (and (isa :NOUN ParietalLobe)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parish-TheWord
 (and (isa :NOUN Parish-State-Geopolitical)) (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_container_possessor fe_descriptor fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1) (0 0 2)))))

(FNNounSemtrans (TheList) Parishioner-TheWord
 (and (isa :NOUN PersonTypeByGeoPoliticalAffiliation)
      (relationExistsInstance citizenTypeOfGeopoliticalEntity
       Parish-State-Geopolitical :NOUN))
 (frame FN_People_by_jurisdiction)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_jurisdiction))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Park-TheWord (and (isa :NOUN Park))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN eventLocale) (DNI locationUse) (INI locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Park-TheWord (and (isa :NOUN Park-City))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN eventLocale) (DNI locationUse) (INI locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Parka-TheWord (and (isa :NOUN Parka))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 1 1) (2 0 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList "parking") Garage-TheWord
 (and (isa :NOUN ParkingGarage)) (frame FN_Locale_by_use)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parking") Lot-TheWord (and (isa :NOUN ParkingLot))
 (frame FN_Locale_by_use) (bindingTemplate (TheList (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parking") Meter-TheWord
 (and (isa :NOUN ParkingMeter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parking") Place-TheWord
 (and (isa :NOUN ParkingPlace)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parkway-TheWord (and (isa :NOUN ScenicRoadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_endpoints (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_roadway))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Parley-TheWord (and (isa :NOUN Conversation))
 (frame FN_Discussion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parliament-TheWord (and (isa :NOUN Parliament))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parliament-TheWord (and (isa :NOUN Parliament))
 (frame FN_Organization) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parliamentarian-TheWord
 (and (isa :NOUN Parliamentarian)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parliamentary") Democracy-TheWord
 (and (isa :NOUN ParliamentaryDemocracy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parlor-TheWord (and (isa :NOUN LivingRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parotid") Gland-TheWord
 (and (isa :NOUN ParotidGland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parrot-TheWord (and (isa :NOUN Parrot))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parse-TheWord (and (isa :NOUN ParseTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "parse") Tree-TheWord (and (isa :NOUN ParseTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parsec-TheWord (and (isa :NOUN Parsec))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parsimony-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_resource_controller))
   (:GEN (Poss fe_resource_controller))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "part" "of") Speech-TheWord
 (and (isa :NOUN SpeechPart)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Part-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance physicalParts Artifact :NOUN))
 (frame FN_Artifact_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Part-TheWord (and (isa :NOUN Membership))
 (frame FN_Membership)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT ((PPFn of) groupMembers))
   (:GAP (DEN groupMembers) (DNI groupMembers))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Part-TheWord (and (isa :NOUN PhysicalPartOfObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Part-TheWord (and (isa :NOUN Individual))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList (:SUBJECT (NP parts) (VPing parts)) (:OBJECT (NP parts))
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString))
    (AJP orientation parts fe_part_prop) (A orientation fe_part_prop)
    ((PPFn above) fe_part_prop)
    (N orientation fe_part_prop (InverseBinaryPredicateFn systemComponents))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (INI (InverseBinaryPredicateFn parts))
    (DNI (InverseBinaryPredicateFn parts)))
   (:GEN ((PPFn of) (InverseBinaryPredicateFn parts))
    (Poss fe_part_prop (InverseBinaryPredicateFn parts)))
   (:APPOSITIVE (N (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((4 1 1)) ((4 0 0)) ((2 5 0)) ((2 4 1)) ((2 1 2)) ((2 2 1)) ((2 4 0))
   ((2 0 0)) ((0 1 0) (2 5 0)) ((1 0 0) (2 5 0)) ((2 1 1) (2 5 0))
   ((2 5 0) (4 1 0)) ((2 3 0) (2 5 0)) ((2 4 1) (2 5 0)) ((2 1 2) (2 5 0))
   ((2 2 1) (2 5 0)) ((2 1 1) (2 1 2)) ((2 1 2) (2 1 2)) ((0 0 0) (2 5 0))
   ((2 1 0) (2 5 0)) ((2 2 0) (2 5 0)) ((2 4 2) (5 0 0))
   ((0 0 0) (2 1 2) (2 5 0)) ((0 0 0) (0 0 0) (2 5 0)))))

(FNNounSemtrans (TheList) Part-TheWord
 (and (isa :NOUN Actor)
      (relationExistsInstance castMembers (PerformingFn DramaticPerformance)
       :NOUN))
 (frame FN_Performers_and_roles)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) fe_performance) (AJP performedBy))
   (:GAP (INI spectators genericPathway-Partial fe_performance)
    (DNI fe_performance)
    (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((1 1 0)) ((3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Partiality-TheWord (and (isa :NOUN IntelligentAgent))
 (frame FN_Partiality)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N performedBy) (A fe_domain)
    ((PPFn of) performedBy fe_manifestation_of_bias) ((PPFn towards) fe_side_1)
    ((PPFn for) fe_side_1))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((2 0 0)) ((1 2 0)) ((1 4 0) (2 0 0))
   ((0 0 0) (1 3 0)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Participant-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance socialParticipants SocialOccurrence :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Participant-TheWord (and (isa :NOUN Action))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy doneBy))
   (:OBLIQUE-OBJECT ((PPFn for) duration) (NP fe_event) ((PPFn of) fe_event)
    (VPing fe_event) (N fe_degree_of_involvement fe_event eventOccursAt)
    (AJP fe_degree_of_involvement fe_manner)
    ((PPFn at) fe_event fe_manner eventOccursAt)
    ((PPFn in) fe_event eventOccursAt eventOccursAt))
   (:GAP (DNI fe_event eventOccursAt doneBy) (DEN doneBy doneBy))
   (:GEN (Poss fe_event eventOccursAt)) (:APPOSITIVE (NP doneBy))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 7 1)) ((1 4 2)) ((1 6 2)) ((1 3 0)) ((3 0 0)) ((1 2 0))
   ((1 7 0)) ((1 6 0)) ((1 1 0)) ((1 4 1)) ((1 4 0)) ((1 4 1) (1 7 1))
   ((0 0 0) (1 4 1)) ((1 4 1) (4 0 0)) ((1 6 0) (4 0 0)) ((1 0 0) (1 7 1))
   ((1 5 0) (1 7 1)) ((0 0 0) (1 5 0)) ((1 5 0) (1 7 0)) ((1 5 0) (1 6 1))
   ((0 0 0) (1 5 1) (1 6 0)) ((0 0 0) (1 5 0) (1 7 1))
   ((0 0 0) (1 4 1) (1 5 0)) ((0 0 0) (1 5 0) (1 7 0))
   ((1 5 0) (1 7 0) (4 0 0)))))

(FNNounSemtrans (TheList) Participant-TheWord
 (and (isa :NOUN IntelligentAgent)) (frame FN_Participation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy doneBy))
   (:OBLIQUE-OBJECT ((PPFn for) duration) (NP fe_event) ((PPFn of) fe_event)
    (VPing fe_event) (N fe_degree_of_involvement fe_event eventOccursAt)
    (AJP fe_degree_of_involvement fe_manner)
    ((PPFn at) fe_event fe_manner eventOccursAt)
    ((PPFn in) fe_event eventOccursAt eventOccursAt))
   (:GAP (DNI fe_event eventOccursAt doneBy) (DEN doneBy doneBy))
   (:GEN (Poss fe_event eventOccursAt)) (:APPOSITIVE (NP doneBy))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 7 1)) ((1 4 2)) ((1 6 2)) ((1 3 0)) ((3 0 0)) ((1 2 0))
   ((1 7 0)) ((1 6 0)) ((1 1 0)) ((1 4 1)) ((1 4 0)) ((1 4 1) (1 7 1))
   ((0 0 0) (1 4 1)) ((1 4 1) (4 0 0)) ((1 6 0) (4 0 0)) ((1 0 0) (1 7 1))
   ((1 5 0) (1 7 1)) ((0 0 0) (1 5 0)) ((1 5 0) (1 7 0)) ((1 5 0) (1 6 1))
   ((0 0 0) (1 5 1) (1 6 0)) ((0 0 0) (1 5 0) (1 7 1))
   ((0 0 0) (1 4 1) (1 5 0)) ((0 0 0) (1 5 0) (1 7 0))
   ((1 5 0) (1 7 0) (4 0 0)))))

(FNNounSemtrans (TheList) Participation-TheWord (and (isa :NOUN Action))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBJECT ((PPFn in) fe_event) (Poss doneBy))
   (:OBLIQUE-OBJECT ((PPFn in) fe_event) (NP fe_event) ((PPFn at) fe_event)
    (AJP fe_degree_of_involvement fe_manner) ((PPFn with) by-Underspecified)
    ((PPFn by) doneBy doneBy) ((PPFn of) doneBy) (N doneBy doneBy)
    ((PPFn on) fe_event temporallyIntersects))
   (:GAP (DNI fe_event doneBy)) (:GEN (Poss doneBy doneBy))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 5 0)) ((2 3 0)) ((2 3 1) (2 5 0)) ((2 8 0) (4 0 0))
   ((2 5 0) (2 8 0)) ((1 0 0) (1 1 0)) ((2 0 0) (2 6 0)) ((2 0 0) (2 5 0))
   ((2 2 0) (2 6 0)) ((2 1 0) (2 6 0)) ((2 0 0) (4 0 0)) ((0 0 0) (2 0 0))
   ((2 0 0) (2 7 0)) ((2 3 0) (2 5 0)) ((2 0 0) (2 3 0))
   ((2 0 0) (2 8 1) (4 0 0)) ((2 0 0) (2 4 0) (4 0 0))
   ((2 0 0) (2 3 1) (2 6 0)))))

(FNNounSemtrans (TheList) Participation-TheWord
 (and (isa :NOUN IntelligentAgent)) (frame FN_Participation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBJECT ((PPFn in) fe_event) (Poss doneBy))
   (:OBLIQUE-OBJECT ((PPFn in) fe_event) (NP fe_event) ((PPFn at) fe_event)
    (AJP fe_degree_of_involvement fe_manner) ((PPFn with) by-Underspecified)
    ((PPFn by) doneBy doneBy) ((PPFn of) doneBy) (N doneBy doneBy)
    ((PPFn on) fe_event temporallyIntersects))
   (:GAP (DNI fe_event doneBy)) (:GEN (Poss doneBy doneBy))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 5 0)) ((2 3 0)) ((2 3 1) (2 5 0)) ((2 8 0) (4 0 0))
   ((2 5 0) (2 8 0)) ((1 0 0) (1 1 0)) ((2 0 0) (2 6 0)) ((2 0 0) (2 5 0))
   ((2 2 0) (2 6 0)) ((2 1 0) (2 6 0)) ((2 0 0) (4 0 0)) ((0 0 0) (2 0 0))
   ((2 0 0) (2 7 0)) ((2 3 0) (2 5 0)) ((2 0 0) (2 3 0))
   ((2 0 0) (2 8 1) (4 0 0)) ((2 0 0) (2 4 0) (4 0 0))
   ((2 0 0) (2 3 1) (2 6 0)))))

(FNNounSemtrans (TheList) Particle-TheWord (and (isa :NOUN VerbParticle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Particle-TheWord (and (isa :NOUN SubAtomicParticle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Particle-TheWord (and (isa :NOUN Particle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Partition-TheWord
 (and (isa :NOUN Partition-ConstructionArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Partition-TheWord
 (and (isa :NOUN Separating-MovementEvent)) (frame FN_Separating)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) parts)
    ((PPFn of) (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Partner-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance member Partnership :NOUN))
 (frame FN_Collaboration)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2 fe_partners))
   (:OBLIQUE-OBJECT ((PPFn with) fe_partner_2 fe_partners)
    ((PPFn during) temporallyIntersects) ((PPFn until) temporallyIntersects)
    (N fe_undertaking) ((PPFn for) fe_undertaking)
    ((PPFn in) eventOccursAt fe_undertaking) ((PPFn on) fe_undertaking))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partner_2 fe_partners)
    (INI fe_undertaking))
   (:GEN (Poss fe_partner_1 fe_partner_2)) (:APPOSITIVE (NP fe_partner_1))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((3 0 0)) ((0 0 2) (1 6 0)) ((0 0 0) (1 0 1))
   ((1 5 1) (3 0 1)) ((1 3 0) (3 0 1)) ((0 0 1) (1 4 0)) ((1 5 0) (3 0 1))
   ((0 0 0) (1 0 0) (1 3 0)) ((1 4 0) (3 0 1) (4 0 0))
   ((0 0 0) (1 5 0) (3 0 1)) ((1 3 0) (1 6 0) (3 0 1) (4 0 0))
   ((0 0 0) (1 2 0) (1 5 0) (3 0 1))
   ((0 0 0) (1 1 0) (1 3 0) (1 5 0) (3 0 1)))))

(FNNounSemtrans (TheList) Partner-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:GAP (DEN fe_partner_1) (DNI fe_partner_2) (INI fe_partner_2))
   (:NOUN (N fe_partner_1)) (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)) ((2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Partnership-TheWord (and (isa :NOUN Partnership))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Parturition-TheWord (and (isa :NOUN BirthEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Party-TheWord (and (isa :NOUN (GroupFn Person)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_aggregate_property) (N fe_aggregate_property)
    ((PPFn of) fe_individuals)
    (AJP fe_aggregate_property (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_aggregate) (INI fe_individuals) (DNI fe_individuals))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 0 0)) ((0 1 0) (0 2 0))
   ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Party-TheWord (and (isa :NOUN PoliticalParty))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Party-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance deliberateActors Event :NOUN))
 (frame FN_Participation)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventOccursAt doneBy))
   (:OBLIQUE-OBJECT ((PPFn to) eventOccursAt))))
 (groupPatterns (TheSet ((0 0 1) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Party-TheWord (and (isa :NOUN Party-Celebration))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host fe_social_event))
   (:OBLIQUE-OBJECT ((PPFn for) amongThosePresent beneficiary)
    ((PPFn by) amongThosePresent host)
    (N beneficiary fe_occasion eventOccursAt fe_refreshment clothingStyle)
    (AVP temporallyIntersects) (NP clothingStyle temporallyIntersects)
    (AJP fe_descriptor duration temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects))
   (:GAP (CNI host) (DEN fe_social_event))
   (:GEN (Poss beneficiary host temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 6 0)) ((1 2 1)) ((1 2 3)) ((3 0 1)) ((0 0 1)) ((1 5 1))
   ((1 2 1) (3 0 2)) ((1 2 1) (1 6 1)) ((1 2 4) (3 0 1)) ((1 1 1) (1 2 2))
   ((0 0 1) (1 2 1)) ((1 0 1) (1 2 1)) ((1 2 1) (3 0 0)) ((0 0 1) (1 0 1))
   ((1 0 0) (1 5 2)) ((1 0 0) (1 3 0)) ((0 0 1) (1 0 0)) ((1 1 0) (3 0 0))
   ((0 0 1) (1 0 1) (1 7 1)) ((0 0 2) (1 2 0) (1 5 0))
   ((0 0 1) (1 0 0) (1 4 1)) ((0 0 1) (1 0 0) (1 2 3))
   ((0 0 1) (1 0 0) (1 7 0)) ((0 0 1) (1 0 1) (1 2 1) (1 6 1))
   ((0 0 0) (1 2 1) (1 7 0) (3 0 0)))))

(FNNounSemtrans (TheList) Pascal-TheWord
 (and (isa :NOUN Pascal-ProgrammingLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pascal-TheWord
 (and (isa :NOUN Pascal-UnitOfPressure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pasha-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Pass-TheWord (and (isa :NOUN Pass-Geographical))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT (AJP fe_formational_cause)
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn at) fe_relative_location) ((PPFn over) fe_relative_location)
    ((PPFn through) fe_relative_location) ((PPFn between) fe_relative_location)
    (N activeIngredientsOfType))
   (:GAP (DEN eventLocale))
   (:GEN (Poss fe_container_possessor (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((1 3 0)) ((3 0 1)) ((1 1 0)) ((1 0 0))
   ((1 2 0) (1 6 0)) ((0 0 0) (1 5 0)) ((1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Passage-TheWord (and (isa :NOUN Passage-Chapter-PCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Passage-TheWord (and (isa :NOUN Path-Simple))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Passageway-TheWord (and (isa :NOUN Path-Simple))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Passenger-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance passengers TransportationEvent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "passenger" "train") Car-TheWord
 (and (isa :NOUN PassengerTrainCar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Passion-TheWord (and (isa :NOUN Passion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "passive") Sonar-TheWord
 (and (isa :NOUN PassiveSonar-Device)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "passover") Eve-TheWord
 (and (isa :NOUN PassoverHoliday)) (frame FN_Commemorative)
 (bindingTemplate
  (TheList
   (:GAP (DEN fe_dedicated_entity) (2nd fe_dedicated_type fe_honored_entity))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Passover-TheWord (and (isa :NOUN PassoverHoliday))
 (frame FN_Commemorative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Passport-TheWord (and (isa :NOUN Passport))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_bearer)) (:OBLIQUE-OBJECT (VPto fe_right))
   (:GAP (DEN fe_document))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Passport-TheWord (and (isa :NOUN Passport))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Password-TheWord (and (isa :NOUN Communicating))
 (frame FN_Communication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Password-TheWord (and (isa :NOUN Password))
 (frame FN_Key) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Password-TheWord (and (isa :NOUN Password-Computer))
 (frame FN_Key) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "password") File-TheWord
 (and (isa :NOUN PasswordFile)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Past-TheWord (and (isa :NOUN Biography))
 (frame FN_Individual_history)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A fe_domain) ((PPFn between) doneBy)
    ((PPFn of) fe_events doneBy) (AJP doneBy temporallyIntersects))
   (:GAP (DEN fe_events)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 3 1) (3 0 0))
   ((1 2 0) (1 3 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "pasta") Maker-TheWord (and (isa :NOUN PastaMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pasta-TheWord (and (isa :NOUN Pasta)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((0 2 1) (0 2 1)) ((0 0 0) (0 1 0))
   ((0 2 0) (0 2 0)) ((0 1 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Pasta-TheWord (and (isa :NOUN PastaDish))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) (N activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((0 2 1) (0 2 1)) ((0 0 0) (0 1 0))
   ((0 2 0) (0 2 0)) ((0 1 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Pasta-TheWord (and (isa :NOUN Pasta)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "paste" "shoe") Polish-TheWord
 (and (isa :NOUN ShoePolish-Paste)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paste-TheWord (and (isa :NOUN Paste)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pasteurization-TheWord
 (and (isa :NOUN Pasteurization)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pastry-TheWord (and (isa :NOUN Pastry-Stuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 2 1)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Pasture-TheWord (and (isa :NOUN Pasture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pat-TheWord (and (isa :NOUN PatOfButter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patch-TheWord (and (isa :NOUN ComputerPatchProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patch-TheWord (and (isa :NOUN Patch-PieceOfCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patella-TheWord (and (isa :NOUN Kneecap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Path-TheWord (and (isa :NOUN Path-Customary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Path-TheWord (and (isa :NOUN TravelRoute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Path-TheWord (and (isa :NOUN Trajectory))
 (frame FN_Path_traveled)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) objectMoving))
   (:GAP (DEN trajectory-Complete)) (:GEN (Poss objectMoving))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Path-TheWord (and (isa :NOUN PathArtifact))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_endpoints) ((PPFn towards) to-Generic)
    ((PPFn up) to-Generic) (Sub to-Generic) (VPing to-Generic)
    ((PPFn to) to-Generic)
    (AJP fe_characteristic fe_frequency_of_use lengthOfObject)
    ((PPFn alongside) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn in) fe_relative_location)
    ((PPFn on) fe_direction fe_relative_location)
    (A fe_characteristic fe_frequency_of_use fe_relative_location)
    ((PPFn above) fe_relative_location) ((PPFn from) fe_endpoints from-Generic)
    (N fe_characteristic (InverseBinaryPredicateFn nameString)
     trajectory-Complete fe_relative_location deviceUse)
    (NP fe_direction deviceUse))
   (:GAP (DEN trajectory-Complete fe_roadway))))
 (groupPatterns
  (TheSet ((0 10 1)) ((0 14 3)) ((0 11 2)) ((0 8 0)) ((0 14 2)) ((0 14 1))
   ((0 1 0)) ((0 5 0)) ((0 11 0)) ((0 6 0)) ((0 13 1) (0 15 1))
   ((0 9 0) (0 14 4)) ((0 12 0) (0 14 3)) ((0 8 0) (0 10 1))
   ((0 10 1) (0 14 1)) ((0 1 0) (0 13 1)) ((0 6 1) (0 10 1)) ((0 0 0) (0 14 4))
   ((0 11 1) (0 13 0)) ((0 0 0) (0 11 1)) ((0 14 3) (0 15 0))
   ((0 4 0) (0 10 0)) ((0 11 0) (0 13 1)) ((0 6 0) (0 7 0)) ((0 11 0) (0 14 2))
   ((0 3 0) (0 14 0)) ((0 1 0) (0 6 0)) ((0 1 0) (0 11 0))
   ((0 0 0) (0 9 0) (0 14 4)) ((0 1 0) (0 11 0) (0 14 2))
   ((0 2 0) (0 6 2) (0 11 0)))))

(FNNounSemtrans (TheList) Pathname-TheWord (and (isa :NOUN Pathname))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pathogen-TheWord (and (isa :NOUN HumanPathogen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pathway-TheWord (and (isa :NOUN Path-Generic))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_characteristic)
    ((PPFn between) fe_endpoints) ((PPFn across) trajectory-Complete)
    ((PPFn along) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPingFn through) trajectory-Complete)
    (AJP fe_characteristic lengthOfObject mainConstituent trajectory-Complete)
    ((PPFn to) to-Generic fe_relative_location)
    ((PPFn on) fe_relative_location) ((PPFn of) fe_relative_location)
    ((PPFn from) from-Generic)
    (N mainConstituent fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 11 2)) ((0 9 0)) ((0 11 1)) ((0 2 0)) ((0 11 0)) ((0 6 2))
   ((0 7 0)) ((0 1 0)) ((0 6 0)) ((0 6 1) (0 6 3)) ((0 7 0) (0 10 0))
   ((0 6 0) (0 8 0)) ((0 5 0) (0 6 0)) ((0 4 0) (0 6 0)) ((0 2 0) (0 6 0))
   ((0 6 0) (0 7 0)) ((0 1 0) (0 6 0)) ((0 3 0) (0 6 0) (0 7 1))
   ((0 0 0) (0 6 0) (0 11 0)))))

(FNNounSemtrans (TheList) Patient-TheWord (and (isa :NOUN MedicalPatient))
 (frame FN_Medical_interaction_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "patio") Furniture-TheWord
 (and (isa :NOUN PatioFurniture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patio-TheWord (and (isa :NOUN Terrace-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patricide-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patriotism-TheWord (and (isa :NOUN Patriotism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patronymic-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Patter-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_degree fe_manner)
    ((PPingFn of) fe_noisy_event objectMoving)
    ((PPFn of) fe_noisy_event objectMoving))
   (:GAP (INI fe_ground))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 2 1)) ((0 3 1)) ((0 1 0)) ((0 1 1) (0 3 0))
   ((0 0 0) (0 3 1)) ((0 1 1) (0 2 1)))))

(FNNounSemtrans (TheList) Pattern-TheWord (and (isa :NOUN Pattern-Declarative))
 (frame FN_Pattern)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (VPed fe_descriptor)
    ((PPFn of) fe_entities))
   (:GAP (DNI fe_entities))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Pause-TheWord (and (isa :NOUN EndingASituation))
 (frame FN_Activity_pause) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pavement-TheWord (and (isa :NOUN Pavement))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) (AVP fe_characteristic)
    (N mainConstituent (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location) ((PPFn of) fe_relative_location)
    ((PPFn beside) fe_relative_location) ((PPFn by) fe_relative_location)
    ((PPFn outside) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 4 0)) ((0 3 0)) ((0 6 0)) ((0 5 0)) ((0 2 1)) ((0 2 0))
   ((0 1 0)) ((0 0 0)) ((0 0 0) (0 4 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Pavilion-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Paving-TheWord (and (isa :NOUN Pavement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paw-TheWord (and (isa :NOUN Paw))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 1) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Pawn-TheWord (and (isa :NOUN Pawn-ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pax-TheWord (and (isa :NOUN Person))
 (frame FN_People) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pay") Phone-TheWord (and (isa :NOUN PayPhone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pay") Stub-TheWord (and (isa :NOUN PayStub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Payback-TheWord (and (isa :NOUN RevengeAction))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_punishment))
   (:OBLIQUE-OBJECT (AJP fe_depictive) (AVP fe_depictive)
    ((PPingFn for) fe_injury) ((PPFn for) fe_injury))
   (:GAP (DNI fe_offender))))
 (groupPatterns
  (TheSet ((0 0 0) (1 3 0)) ((0 0 0) (1 1 0) (1 3 0)) ((0 0 0) (1 0 0) (1 2 0))
   ((0 0 0) (1 3 0) (1 3 0) (1 3 0)))))

(FNNounSemtrans (TheList) Payer-TheWord
 (and (isa :NOUN SocialBeing) (relationExistsInstance payer Paying :NOUN))
 (frame FN_Commerce_pay)
 (bindingTemplate
  (TheList (:SUBJECT (NP buyer))
   (:GAP (INI objectOfPossessionTransfer seller))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Payment-TheWord (and (isa :NOUN Paying))
 (frame FN_Commerce_pay)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP buyer objectOfPossessionTransfer moneyTransferred seller)
    (Poss seller))
   (:OBLIQUE-OBJECT ((PPFn from) buyer) ((PPFn upon) situationConstituents)
    (AVP frequencyOfEvent) (Num frequencyOfEvent)
    ((PPFn towards) objectOfPossessionTransfer)
    (N objectOfPossessionTransfer moneyTransferred)
    ((PPFn by) buyer by-Underspecified moneyTransferred)
    ((PPFn about) moneyTransferred) (VPto purposeOfEvent)
    ((PPFn between) rateOfEvent)
    ((PPFn of) objectOfPossessionTransfer moneyTransferred rateOfEvent)
    ((PPFn to) seller)
    ((PPFn on) situationConstituents objectOfPossessionTransfer rateOfEvent
     temporallyIntersects)
    ((PPFn at) by-Underspecified temporallyIntersects)
    (NP moneyTransferred rateOfEvent temporallyIntersects)
    (AJP situationConstituents frequencyOfEvent fe_manner moneyTransferred
     rateOfEvent temporallyIntersects)
    ((PPFn for) objectOfPossessionTransfer temporallyIntersects)
    ((PPFn in) situationConstituents objectOfPossessionTransfer
     moneyTransferred temporallyIntersects))
   (:GAP (DEN moneyTransferred) (CNI buyer objectOfPossessionTransfer seller)
    (INI buyer objectOfPossessionTransfer seller)
    (DNI buyer objectOfPossessionTransfer moneyTransferred seller)
    (2nd moneyTransferred seller))
   (:GEN (Poss buyer seller temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 0 3)) ((1 10 1)) ((1 14 0)) ((1 5 1)) ((1 16 0)) ((1 15 1))
   ((1 6 2)) ((1 12 2)) ((3 0 2)) ((0 0 0)) ((1 5 0)) ((0 1 0)) ((1 17 2))
   ((1 6 0)) ((1 10 1) (1 10 2)) ((1 5 0) (1 15 3)) ((1 10 0) (1 15 2))
   ((1 5 0) (1 15 1)) ((0 0 0) (1 11 0)) ((1 5 1) (1 6 0)) ((1 5 0) (3 0 0))
   ((1 0 0) (1 10 1)) ((0 0 0) (1 5 0)) ((0 0 0) (1 17 2)) ((0 0 3) (1 5 0))
   ((0 0 2) (3 0 1)) ((1 10 1) (1 11 0)) ((1 9 0) (1 13 1)) ((0 0 0) (1 4 0))
   ((0 0 1) (1 17 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 12 0))
   ((1 7 0) (1 15 1) (1 17 3)) ((0 0 2) (1 14 1) (1 15 0))
   ((1 5 0) (1 15 0) (1 16 1)) ((0 0 3) (1 3 0) (1 15 0))
   ((1 6 0) (1 10 1) (1 11 0)) ((1 5 0) (1 11 0) (3 0 0))
   ((1 0 0) (1 10 1) (1 15 5)) ((0 0 3) (1 5 1) (1 12 3))
   ((0 0 0) (1 11 0) (1 16 0)) ((0 0 0) (1 5 0) (1 11 0))
   ((0 0 3) (1 5 0) (1 10 1)) ((0 0 0) (1 12 1) (1 15 4))
   ((0 0 0) (1 2 0) (1 17 2)) ((0 0 3) (1 2 0) (1 17 2))
   ((1 1 0) (1 12 3) (1 15 1)) ((0 0 0) (0 0 0) (1 13 0))
   ((0 0 3) (0 0 3) (1 0 0) (1 15 4)) ((0 0 0) (1 8 0) (1 11 0) (1 15 2))
   ((1 6 0) (1 11 0) (1 17 1) (1 17 2)) ((0 0 0) (1 5 1) (1 8 0) (1 12 1))
   ((0 0 0) (1 6 1) (1 14 2) (1 16 0)) ((0 0 0) (1 5 0) (1 5 1) (1 12 1)))))

(FNNounSemtrans (TheList) Pca-TheWord (and (isa :NOUN PrintedCircuitAssembly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pdf-TheWord
 (and (isa :NOUN PortableDocumentFormatFile)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pea") Jacket-TheWord (and (isa :NOUN PeaJacket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pea") Pod-TheWord (and (isa :NOUN PeaPod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pea-TheWord (and (isa :NOUN Pea-Foodstuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor activeIngredientsOfType)
    (AJP activeIngredientsOfType) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Pea-TheWord (and (isa :NOUN (SeedFn PeaPlant)))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor activeIngredientsOfType)
    (AJP activeIngredientsOfType) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Pea-TheWord (and (isa :NOUN PeaPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peak-TheWord (and (isa :NOUN Summit))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Peak-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_part_prop) (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 2 0)) ((0 3 0)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Peak-TheWord (and (isa :NOUN Summit))
 (frame FN_Relational_natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn above) fe_relative_location))
   (:GAP (DEN fe_focal_feature) (DNI fe_landmark_feature))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Peal-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_component_sound emitter))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Peanut-Butter-TheWord (and (isa :NOUN PeanutButter))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "peanut") Butter-TheWord
 (and (isa :NOUN PeanutButter)) (frame FN_Food) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "peanut") Oil-TheWord (and (isa :NOUN PeanutOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peanut-TheWord (and (isa :NOUN (SeedFn PeanutPlant)))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "peanut") Plant-TheWord (and (isa :NOUN PeanutPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pear-TheWord (and (isa :NOUN (FruitFn PearTree)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pear") Tree-TheWord (and (isa :NOUN PearTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peat-TheWord (and (isa :NOUN Peat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pebble-TheWord (and (isa :NOUN Pebble))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pecan-TheWord (and (isa :NOUN (FruitFn PecanTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pecan-TheWord (and (isa :NOUN (WoodFn PecanTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pecan-TheWord (and (isa :NOUN PecanTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peccadillo-TheWord (and (isa :NOUN Misdeed))
 (frame FN_Misdeed) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pectoral-TheWord (and (isa :NOUN PectoralMuscle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pectoralis") Major-TheWord
 (and (isa :NOUN PectoralisMajor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pectoralis") Minor-TheWord
 (and (isa :NOUN PectoralisMinor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peculation-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer))
   (:GAP (INI objectOfPossessionTransfer perpetrator) (CNI perpetrator))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Peculiarity-TheWord
 (and (isa :NOUN (AbnormalFn IntentionalMentalSituation)))
 (frame FN_Idiosyncrasy)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A objectActedOn)) (:GAP (DEN fe_idiosyncrasy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Pedestal-TheWord (and (isa :NOUN Pedestal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pedestrian-TheWord (and (isa :NOUN Pedestrian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pediatrician-TheWord (and (isa :NOUN Pediatrician))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pedicure-TheWord
 (and (isa :NOUN ManicuringSomething)
      (relationInstanceExists objectActedOn :NOUN Toenail))
 (frame FN_Grooming)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBLIQUE-OBJECT (N objectActedOn))
   (:GAP (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Peek-TheWord (and (isa :NOUN PeekingAtSomething))
 (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn inside) fe_direction) ((PPFn into) fe_direction)
    ((PPFn round) fe_direction) ((PPFn through) fe_direction)
    ((PPFn under) fe_direction) (AJP fe_manner) (A fe_manner) (AVP fe_manner)
    ((PPFn at) fe_phenomenon)
    ((PPFn in) fe_direction by-Underspecified hasState))
   (:GAP (CNI performedBy))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 4 0)) ((1 3 0)) ((1 1 0)) ((1 9 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 8 0) (1 9 2)) ((0 0 0) (1 7 0) (1 9 1))
   ((0 0 0) (1 3 0) (1 8 0)) ((0 0 0) (1 1 0) (1 6 0))
   ((0 0 0) (1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Peel-TheWord (and (isa :NOUN PlantEpidermis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peep-TheWord
 (and (isa :NOUN AudibleSound)
      (loudnessLevel :NOUN (LowAmountFn AcousticNoiseLevel)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) emitter) ((PPFn out) emitter))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Peer-TheWord (and (isa :NOUN Peer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peg-Leg-TheWord
 (and (isa :NOUN (ArtificialBodyPartOfTypeFn Leg)))
 (frame FN_Body_description_part) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peg-TheWord (and (isa :NOUN FastenerConnection))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pekinese-TheWord (and (isa :NOUN Pekingese-TheDog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pelican-TheWord (and (isa :NOUN Pelican))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pelt-TheWord (and (isa :NOUN Skin) (isa :NOUN Fur))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing)
    (N fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 2 1)) ((1 0 0)) ((1 2 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Pelt-TheWord (and (isa :NOUN FurPelt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pelvis-TheWord (and (isa :NOUN Pelvis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pembroke-TheWord
 (and (isa :NOUN WelshCorgi-Pembroke)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pen") Body-TheWord (and (isa :NOUN PenBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pen") Cap-TheWord (and (isa :NOUN PenCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pen") Name-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) ((PPFn of) objectActedOn)
    (AJP activeIngredientsOfType))
   (:GEN (Poss objectActedOn))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((3 0 0)) ((2 0 0)) ((1 1 0)) ((1 0 0)) ((1 1 0) (1 2 0))
   ((2 0 0) (3 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Pen-TheWord (and (isa :NOUN AnimalPen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pen-TheWord (and (isa :NOUN WritingPen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pen-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pen") Tip-TheWord (and (isa :NOUN PenTip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "penal") Code-TheWord (and (isa :NOUN PenalCode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Penalty-TheWord (and (isa :NOUN Punishment))
 (frame FN_Rewards_and_punishments)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy fe_response_action))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfEvaluation fe_reason)
    ((PPingFn against) fe_reason) ((PPingFn for) fe_reason)
    (N fe_response_action) ((PPFn of) fe_reason fe_response_action)
    ((PPingFn of) fe_reason fe_response_action) (AVP temporallyIntersects))
   (:GAP (2nd fe_reason) (INI doneBy objectOfEvaluation fe_response_action))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 4 1)) ((1 5 0)) ((1 1 0)) ((1 4 0)) ((1 0 1)) ((1 2 0))
   ((1 0 0)) ((1 3 0)) ((0 0 0)) ((0 0 1) (1 0 1) (1 6 0)))))

(FNNounSemtrans (TheList) Penalty-TheWord (and (isa :NOUN Reward))
 (frame FN_Rewards_and_punishments)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy fe_response_action))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfEvaluation fe_reason)
    ((PPingFn against) fe_reason) ((PPingFn for) fe_reason)
    (N fe_response_action) ((PPFn of) fe_reason fe_response_action)
    ((PPingFn of) fe_reason fe_response_action) (AVP temporallyIntersects))
   (:GAP (2nd fe_reason) (INI doneBy objectOfEvaluation fe_response_action))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 4 1)) ((1 5 0)) ((1 1 0)) ((1 4 0)) ((1 0 1)) ((1 2 0))
   ((1 0 0)) ((1 3 0)) ((0 0 0)) ((0 0 1) (1 0 1) (1 6 0)))))

(FNNounSemtrans (TheList "pencil") Eraser-TheWord
 (and (isa :NOUN Eraser-Pencil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pencil-Holder-TheWord
 (and (isa :NOUN ContainerArtifact)
      (relationInstanceExists holderFor :NOUN WritingImplement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pencil") Lead-TheWord (and (isa :NOUN PencilLead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pencil-TheWord (and (isa :NOUN Pencil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pendant-TheWord (and (isa :NOUN Pendant))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn round) wornOn) (N fe_descriptor mainConstituent)
    ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((0 3 1)) ((0 1 0)) ((0 0 0)) ((0 1 1) (2 0 0))
   ((0 1 1) (0 3 2)) ((0 1 1) (0 3 0)) ((0 3 0) (0 3 1) (0 3 2)))))

(FNNounSemtrans (TheList) Penguin-TheWord (and (isa :NOUN Penguin))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Penicillin-TheWord (and (isa :NOUN Penicillin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peninsula-TheWord (and (isa :NOUN Peninsula))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString))
    (N fe_container_possessor (InverseBinaryPredicateFn nameString))
    (A (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn opposite) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 2 1)) ((0 1 1)) ((0 3 0)) ((0 0 0)) ((0 2 0))
   ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Penis-TheWord (and (isa :NOUN Penis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Penitence-TheWord (and (isa :NOUN Regret))
 (frame FN_Contrition)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBLIQUE-OBJECT (AJP fe_degree))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Penitentiary-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) objectFoundInLocation)
    ((PPFn in) objectFoundInLocation) (N objectFoundInLocation directingAgent)
    (AJP directingAgent))
   (:GAP (DEN locationOfMaleficiaries))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 1)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Penknife-TheWord
 (and (isa :NOUN (SmallFn PocketKnife))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pennsylvanian-TheWord
 (and (isa :NOUN Pennsylvanian-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "penny") Ante-TheWord (and (isa :NOUN PennyAntePoker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "penny" "farthing") Bicycle-TheWord
 (and (isa :NOUN PennyFarthingBicycle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Penny-TheWord (and (isa :NOUN PennyCoin-US))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pennywhistle-TheWord
 (and (isa :NOUN Whistle-Instrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pension-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pensiveness-TheWord (and (isa :NOUN Pensiveness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pentagon-TheWord (and (isa :NOUN Pentagon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pentathlon-TheWord
 (and (isa :NOUN ModernWomensPentathlon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pentathlon-TheWord
 (and (isa :NOUN PentathlonSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Penthouse-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList (:GAP (DEN fe_building))
   (:GEN (Poss (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Penutian-TheWord
 (and (isa :NOUN Penutian-EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) People-TheWord (and (isa :NOUN Tribe))
 (frame FN_Kinship) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) People-TheWord (and (isa :NOUN (GroupFn Person)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) People-TheWord (and (isa :NOUN Person))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (AJP fe_descriptor))
   (:OBLIQUE-OBJECT ((PPFn on) fe_descriptor) (Sub fe_descriptor)
    (VPing fe_context_of_acquaintance fe_descriptor)
    (A fe_descriptor comesFrom-Generic) ((PPFn from) comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic)
    (N fe_ethnicity comesFrom-Generic fe_persistent_characteristic)
    ((PPFn in) fe_context_of_acquaintance fe_descriptor
     fe_persistent_characteristic)
    ((PPFn of) fe_ethnicity comesFrom-Generic fe_persistent_characteristic)
    (Srel fe_context_of_acquaintance fe_descriptor fe_persistent_characteristic
     fe_person)
    (Sinterrog fe_descriptor fe_persistent_characteristic fe_person))
   (:GAP (DEN fe_person))
   (:GEN (Poss fe_context_of_acquaintance comesFrom-Generic))))
 (groupPatterns
  (TheSet ((1 11 2)) ((1 11 1)) ((1 6 1)) ((1 9 2)) ((1 8 2)) ((1 7 2))
   ((1 5 4)) ((1 10 2)) ((3 0 1)) ((1 9 1)) ((1 4 0)) ((1 7 1)) ((1 5 3))
   ((1 3 1)) ((1 9 0)) ((1 7 0)) ((1 5 2)) ((1 2 1)) ((1 1 0)) ((1 11 0))
   ((1 6 0)) ((1 0 0)) ((1 8 1)) ((0 0 0)) ((1 5 1)) ((1 3 0)) ((1 10 1))
   ((1 2 0)) ((1 10 0)) ((3 0 0)) ((1 8 0)) ((1 5 0)) ((1 5 4) (1 6 1))
   ((1 7 1) (1 10 2)) ((1 10 1) (1 10 3)) ((1 0 0) (1 5 4)) ((1 5 4) (1 8 1))
   ((1 5 4) (1 5 4) (1 5 4)))))

(FNNounSemtrans (TheList "pepper") Grinder-TheWord
 (and (isa :NOUN PepperGrinder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pepper") Shaker-TheWord
 (and (isa :NOUN PepperShaker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pepper-TheWord (and (isa :NOUN Pepper-Foodstuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 1)) ((0 1 0)) ((0 0 0)) ((0 0 1) (0 1 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Pepper-TheWord (and (isa :NOUN Pepper-TheSpice))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 1)) ((0 1 0)) ((0 0 0)) ((0 0 1) (0 1 0))
   ((0 0 0) (0 2 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Pepper-TheWord (and (isa :NOUN BlackPepperVine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "peptic") Ulcer-TheWord (and (isa :NOUN StomachUlcer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perambulator-TheWord (and (isa :NOUN BabyCarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "percent") Sign-TheWord
 (and (isa :NOUN PercentSign-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Percentage-TheWord (and (isa :NOUN Percent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perception-TheWord (and (isa :NOUN Perceiving))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP perceivedThings))
   (:OBLIQUE-OBJECT (AJP fe_ground) (N fe_ground) ((PPFn as) perceivedThings)
    ((PPFn of) perceivedThings from-Generic))
   (:GAP (CNI doneBy) (INI fe_ground doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 0 0)) ((3 0 0)) ((1 0 0)) ((1 2 0) (1 3 1))
   ((1 3 0) (3 0 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList "percussion") Instrument-TheWord
 (and (isa :NOUN PercussionInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Percussion-TheWord (and (isa :NOUN DrumInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peregrination-TheWord
 (and (isa :NOUN Travel-TripEvent)) (frame FN_Travel)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP situationLocation) ((PPFn of) situationLocation)
    ((PPFn in) situationLocation duration) ((PPFn at) duration))
   (:GEN (Poss travellerInTrip))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 2 0) (1 0 0)) ((0 1 0) (0 3 0) (1 0 0))
   ((0 0 0) (0 2 1) (1 0 0)))))

(FNNounSemtrans (TheList) Peregrine-TheWord (and (isa :NOUN PeregrineFalcon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Performance-TheWord
 (and (isa :NOUN EntertainmentPerformance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Performance-TheWord
 (and (isa :NOUN InformationBearingPerformance)) (frame FN_Performing_arts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN fe_performance))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Performer-TheWord (and (isa :NOUN Artist-Performer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perfume-TheWord (and (isa :NOUN Perfume))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perfume-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature)) (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP from-Generic))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    ((PPFn of) perceivedThings from-Generic))
   (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 1)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Pericardium-TheWord (and (isa :NOUN Pericardium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pericarp-TheWord (and (isa :NOUN Pericarp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peril-TheWord (and (isa :NOUN RiskTaking))
 (frame FN_Run_risk)
 (bindingTemplate
  (TheList (:SUBJECT (NP resourceInEvent))
   (:OBLIQUE-OBJECT ((PPFn of) eventOccursAt) (AJP fe_severity))
   (:NOUN (Sfin objectActedOn)) (:GEN (Poss resourceInEvent affectedAgent))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((2 0 0) (3 0 1)) ((0 0 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList "perimeter") Sensor-TheWord
 (and (isa :NOUN PerimeterSensor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perimeter-TheWord
 (and (isa :NOUN (PerimeterFn :REPLACE))) (frame FN_Part_inner_outer)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (N fe_part_prop (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts fe_part_prop (InverseBinaryPredicateFn parts)))
   (:GEN (Poss parts (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 1)) ((2 0 0)) ((0 1 0)) ((0 2 1)) ((0 0 1)) ((0 1 0) (0 2 0))
   ((0 0 1) (2 0 1)) ((0 0 1) (0 1 0)) ((0 0 0) (2 0 1)))))

(FNNounSemtrans (TheList) Period-TheWord (and (isa :NOUN Frequency))
 (frame FN_Frequency)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_event) (VPing fe_event) ((PPFn of) fe_interval)
    (AJP fe_event fe_time_span))
   (:GAP (DEN fe_interval))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 3 0) (0 3 1)))))

(FNNounSemtrans (TheList) Period-TheWord (and (isa :NOUN GeologicalPeriod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Period-TheWord (and (isa :NOUN Menstruating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Period-TheWord (and (isa :NOUN HistoricPeriod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Period-TheWord (and (isa :NOUN Period-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "periodic") Event-TheWord
 (and (isa :NOUN RegularlyRepeatedEventType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "periodic") Table-TheWord
 (and (isa :NOUN PeriodicTable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Periodical-TheWord (and (isa :NOUN PeriodicalCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Periodical-TheWord (and (isa :NOUN PeriodicalSeries))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Periodical-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Periodontist-TheWord (and (isa :NOUN Periodontist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Permian-TheWord
 (and (isa :NOUN Permian-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Permic-TheWord
 (and (isa :NOUN Permic-UralicLanguageFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Permission-TheWord
 (and (isa :NOUN GrantingPermission)) (frame FN_Grant_permission)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Permit-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Permit-TheWord (and (isa :NOUN GrantingPermission))
 (frame FN_Permitting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "peroneal") Vein-TheWord
 (and (isa :NOUN PeronealVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peronosporaceae-TheWord
 (and (isa :NOUN PeronosporaceaeFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perplexity-TheWord
 (and (isa :NOUN Confusion-Generic)) (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn about) situationTopic)
    ((PPFn as) situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((2 0 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "perscription") Eyeware-TheWord
 (and (isa :NOUN Eyewear-Corrective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "persian") Cat-TheWord (and (isa :NOUN PersianCat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "persian") Gulf-TheWord (and (isa :NOUN PersianGulf))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Persian-TheWord (and (isa :NOUN IranianPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Persistence-TheWord (and (isa :NOUN Continuation))
 (frame FN_Process_continue)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn after) duration) ((PPFn beyond) duration)
    ((PPingFn of) fe_event) ((PPFn of) fe_event) ((PPingFn in) fe_event)
    ((PPFn on) eventOccursAt) ((PPFn in) fe_event temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 4 0)) ((0 3 0)) ((0 6 0)) ((0 3 0) (0 6 1))
   ((0 3 0) (0 5 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Person-TheWord (and (isa :NOUN WholeBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Person-TheWord (and (isa :NOUN Person))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn on) fe_descriptor)
    ((PPFn outside) fe_descriptor) ((PPFn under) age fe_descriptor)
    ((PPFn from) comesFrom-Generic)
    ((PPFn of) age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    (N age fe_descriptor fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((1 7 2)) ((1 6 3)) ((1 4 0)) ((1 5 2)) ((1 6 2)) ((1 8 0)) ((1 3 1))
   ((1 2 0)) ((1 1 0)) ((1 5 1)) ((1 0 0)) ((1 7 1)) ((1 6 1)) ((1 3 0))
   ((1 7 0)) ((1 6 0)) ((0 0 0) (1 5 3)) ((0 0 0) (1 7 2)) ((0 0 0) (1 6 3))
   ((1 6 3) (1 8 1)) ((1 6 3) (1 7 2)) ((1 5 3) (1 6 1)) ((1 5 0) (1 6 1))
   ((1 6 0) (1 6 1)) ((0 0 0) (1 6 3) (1 6 3)) ((1 6 1) (1 6 1) (1 8 0)))))

(FNNounSemtrans (TheList) Persona-TheWord (and (isa :NOUN SocialQuantity))
 (frame FN_Impression) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Personage-TheWord (and (isa :NOUN Person))
 (frame FN_People) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal") Computer-TheWord
 (and (isa :NOUN PersonalComputer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal" "digital") Assistant-TheWord
 (and (isa :NOUN PersonalDigitalAssistant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal" "flotation") Device-TheWord
 (and (isa :NOUN LifePreserver)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal" "hygiene") Product-TheWord
 (and (isa :NOUN PersonalHygieneProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal" "mini" "disc") Player-TheWord
 (and (isa :NOUN PersonalMiniDiscPlayer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal" "mp3") Player-TheWord
 (and (isa :NOUN PersonalMP3Player)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal") Organizer-TheWord
 (and (isa :NOUN PersonalOrganizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal") Product-TheWord
 (and (isa :NOUN PersonalProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Personal-TheWord (and (isa :NOUN PersonalAd))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personal") Watercraft-TheWord
 (and (isa :NOUN PersonalWatercraft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "personality") Inventory-TheWord
 (and (isa :NOUN PersonalityInventory-CW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Personnel-TheWord (and (isa :NOUN WorkAgreement))
 (frame FN_Employing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn from) employer) (A fe_field)
    (Num fe_subgroup) (N employer fe_field fe_task))
   (:GAP (DEN employees employer) (DNI employer fe_task)
    (INI employer fe_task))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 4 2)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 4 0))
   ((0 0 0)))))

(FNNounSemtrans (TheList) Perspiration-TheWord (and (isa :NOUN Sweating))
 (frame FN_Excreting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perspiration-TheWord (and (isa :NOUN Sweat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perusal-TheWord (and (isa :NOUN Reading))
 (frame FN_Reading_perception) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Perusal-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    ((PPFn of) subjectOfMentalSituation fe_ground) (AJP fe_degree fe_manner)
    ((PPFn for) fe_phenomenon))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_ground))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 1 1)) ((0 1 1) (0 3 0))
   ((0 1 1) (0 2 1)) ((0 1 1) (2 0 0)) ((0 1 1) (0 2 0)))))

(FNNounSemtrans (TheList) Perversion-TheWord
 (and (isa :NOUN ParaphilicSexualBehavior)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peseta-TheWord (and (isa :NOUN Peseta-Spain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peso-TheWord (and (isa :NOUN Peso-Mexico))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pesticide-TheWord (and (isa :NOUN Pesticide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pet") Door-TheWord (and (isa :NOUN PetDoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pet") Food-TheWord (and (isa :NOUN PetFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pet") Product-TheWord
 (and (isa :NOUN PetProductMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pet") Shop-TheWord (and (isa :NOUN PetStore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pet") Store-TheWord (and (isa :NOUN PetStore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pet-TheWord (and (isa :NOUN DomesticPet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petal-TheWord (and (isa :NOUN Petal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petfood-TheWord
 (and (isa :NOUN DomesticatedAnimalFood)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petiole-TheWord (and (isa :NOUN LeafPetiole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "petit") Jury-TheWord (and (isa :NOUN Jury-Petit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petition-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) infoTransferred) (VPto infoTransferred)
    (N performedBy) ((PPFn by) performedBy) ((PPFn from) performedBy)
    ((PPFn on) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 4 0)) ((0 4 0) (0 5 0)) ((0 1 0) (0 3 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "petri") Dish-TheWord (and (isa :NOUN PetriDish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petrochemical-TheWord (and (isa :NOUN Petrochemical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petrolatum-TheWord (and (isa :NOUN PetroleumJelly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "petroleum" "based") Product-TheWord
 (and (isa :NOUN PetroleumBasedProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "petroleum") Product-TheWord
 (and (isa :NOUN PetroleumProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petroleum-TheWord
 (and (isa :NOUN Petroleum-CrudeOil)) (frame FN_Substance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Petticoat-TheWord (and (isa :NOUN Slip))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_descriptor) (N mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn) (INI wearer) (DNI wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 2)) ((0 1 0)) ((0 2 0)) ((0 1 0) (2 0 0))
   ((0 2 1) (0 2 2)) ((0 0 0) (0 2 2)) ((0 1 0) (0 2 0))
   ((0 1 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Petunia-TheWord (and (isa :NOUN Petunia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pg-TheWord (and (isa :NOUN ParentalGuidanceRating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pg-13-TheWord
 (and (isa :NOUN ParentalGuidance13Rating)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peyote-TheWord (and (isa :NOUN Peyote))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phalanx-TheWord (and (isa :NOUN Phalanx-Bone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pharaoh-TheWord (and (isa :NOUN Pharaoh-HeadOfState))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pharmaceutical" "sales") Item-TheWord
 (and (isa :NOUN PharmaceuticalSalesItem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pharmacist-TheWord (and (isa :NOUN Pharmacist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pharmacy-TheWord
 (and (isa :NOUN Pharmacy-FieldOfStudy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phase-TheWord
 (and (isa :NOUN ?MATTERTYPEBYPHYSICALSTATE)
      (isa ?MATTERTYPEBYPHYSICALSTATE MatterTypeByPhysicalState))
 (frame FN_Thermodynamic_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phase-TheWord (and (isa :NOUN Phase)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phd-TheWord (and (isa :NOUN PhDDegree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pheasant-TheWord (and (isa :NOUN Pheasant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phial-TheWord (and (isa :NOUN Ampule))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phial-TheWord (and (isa :NOUN Vial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "philippine") Peso-TheWord
 (and (isa :NOUN Peso-Philippines)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Philosopher-TheWord (and (isa :NOUN Philosopher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Philosophy-TheWord (and (isa :NOUN Philosophy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phloem-TheWord (and (isa :NOUN PhloemNetwork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phlox-TheWord (and (isa :NOUN PhloxPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pho-TheWord (and (isa :NOUN Pho)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phobia-TheWord (and (isa :NOUN Phobia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "phone") Keypad-TheWord
 (and (isa :NOUN TelephoneKeypad)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "phone") Number-TheWord (and (isa :NOUN PhoneNumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phone-TheWord (and (isa :NOUN Telephone))
 (frame FN_Artifact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phone-TheWord (and (isa :NOUN Telephone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phonebook-TheWord
 (and (isa :NOUN TelephoneDirectory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phonetician-TheWord (and (isa :NOUN Phonetician))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phoney-TheWord (and (isa :NOUN NonNaturalThing))
 (frame FN_Artificiality)
 (bindingTemplate (TheList (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "phonograph") Record-TheWord
 (and (isa :NOUN PhonographRecord)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phonologist-TheWord (and (isa :NOUN Phonologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phonology-TheWord (and (isa :NOUN Phonology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phosgene-TheWord (and (isa :NOUN Phosgene))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phosphate-TheWord (and (isa :NOUN Phosphate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "phosphoric") Acid-TheWord
 (and (isa :NOUN PhosphoricAcid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phosphorite-TheWord (and (isa :NOUN Phosphorite))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phosphorus-TheWord (and (isa :NOUN Phosphorus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "photo") Album-TheWord (and (isa :NOUN PhotoAlbum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photo-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N performedBy)) (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Photocopier-TheWord
 (and (isa :NOUN PhotocopyMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photocopy-TheWord (and (isa :NOUN IBTCopying))
 (frame FN_Duplication) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photocopy-TheWord (and (isa :NOUN Photocopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photoelectricity-TheWord
 (and (isa :NOUN Electricity)) (frame FN_Electricity)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photograph-TheWord (and (isa :NOUN Photograph))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photograph-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_represented))
   (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Photographer-TheWord (and (isa :NOUN Photographer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "photographic") Film-TheWord
 (and (isa :NOUN PhotographicFilm)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "photographic" "light") Stand-TheWord
 (and (isa :NOUN PhotographicLightStand)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photography-TheWord
 (and (isa :NOUN (PracticeFn (MakingFn Photograph)))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photometer-TheWord (and (isa :NOUN Photometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photosynthesis-TheWord
 (and (isa :NOUN Photosynthesis-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phrasing-TheWord (and (isa :NOUN Encoding))
 (frame FN_Encoding)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) infoTransferred)
    ((PPingFn by) performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Phrenology-TheWord (and (isa :NOUN Phrenology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Phylum-TheWord (and (isa :NOUN BiologicalPhylum))
 (frame FN_Biological_classification) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "physical") Filter-TheWord (and (isa :NOUN Filter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "physical") Therapist-TheWord
 (and (isa :NOUN PhysicalTherapist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "physical") Therapy-TheWord
 (and (isa :NOUN PhysicalTherapy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Physician-TheWord (and (isa :NOUN Doctor-Medical))
 (frame FN_Medical_professionals)
 (bindingTemplate (TheList (:GAP (DEN fe_professional))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Physicist-TheWord (and (isa :NOUN Physicist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Physics-TheWord (and (isa :NOUN Physics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "physiological") Psychology-TheWord
 (and (isa :NOUN Neuropsychology)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "physiological") State-TheWord
 (and (isa :NOUN PhysiologicalCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Physiologist-TheWord (and (isa :NOUN Physiologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Physiology-TheWord (and (isa :NOUN Physiology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Physique-TheWord
 (and (isa :NOUN AnimalTypeByPhysicalBuild)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pia") Mater-TheWord (and (isa :NOUN PiaMater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pianist-TheWord (and (isa :NOUN Pianist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "piano") Key-TheWord
 (and (isa :NOUN MechanicalButton)
      (relationExistsInstance physicalParts Piano-Acoustic :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piano-TheWord (and (isa :NOUN Piano-Acoustic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piano-TheWord (and (isa :NOUN Piano-Acoustic))
 (frame FN_Noise_makers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (DEN deviceUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Piccolo-TheWord (and (isa :NOUN Piccolo-Woodwind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pick-TheWord (and (isa :NOUN SelectingSomething))
 (frame FN_Choosing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_inherent_purpose) (AJP temporallyIntersects))
   (:GEN (Poss subjectOfMentalSituation)) (:APPOSITIVE (NP chosenItem))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Pick-TheWord (and (isa :NOUN Pick-TheTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pick-TheWord (and (isa :NOUN Pickaxe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pick-Up-TheWord (and (isa :NOUN PickupTruck))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "picket") Fence-TheWord (and (isa :NOUN PicketFence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pickle-TheWord (and (isa :NOUN PickledFood))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pickle-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn with) (InverseBinaryPredicateFn explains-Generic))
    (Sinterrog (InverseBinaryPredicateFn explains-Generic))
    (Swhether (InverseBinaryPredicateFn explains-Generic)))
   (:GAP (DEN fe_situation))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Pickpocket-TheWord (and (isa :NOUN Pickpocket))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:GAP (DEN perpetrator) (INI objectOfPossessionTransfer victim))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Pickup-TheWord (and (isa :NOUN PickupTruck))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pickup" "truck") Bed-TheWord
 (and (isa :NOUN PickupTruckBed)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Picnic-Table-TheWord (and (isa :NOUN PicnicTable))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Picnic-TheWord (and (isa :NOUN HavingAPicnic))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn by) eventOccursAt) ((PPFn on) eventOccursAt)
    ((PPFn along) eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn in) eventOccursAt)
    (N amongThosePresent host (InverseBinaryPredicateFn nameString) fe_occasion
     eventOccursAt temporallyIntersects))
   (:GAP (CNI host) (DEN fe_social_event))
   (:GEN (Poss amongThosePresent host))))
 (groupPatterns
  (TheSet ((1 5 5)) ((1 4 0)) ((1 3 0)) ((1 5 4)) ((1 5 3)) ((3 0 1)) ((0 0 1))
   ((1 5 1)) ((3 0 0)) ((0 0 0)) ((1 2 0) (1 5 5)) ((1 1 0) (3 0 1))
   ((0 0 1) (1 0 0)) ((0 0 1) (3 0 1)) ((1 5 0) (1 5 2)))))

(FNNounSemtrans (TheList) Picture-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A fe_descriptor)
    ((PPFn from) mainConstituent)
    ((PPFn of) fe_represented fe_state_of_represented)
    ((PPingFn of) fe_state_of_represented))
   (:GAP (DEN productsCreated)) (:GEN (Poss fe_represented))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 4 0)) ((0 3 1)) ((2 0 0)) ((0 3 0)) ((0 2 0))
   ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList "picture") Frame-TheWord
 (and (isa :NOUN FrameForPictureOrMirror)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pidgin-TheWord (and (isa :NOUN PidginLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pie") Crust-TheWord (and (isa :NOUN PieCrust))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pie-TheWord (and (isa :NOUN Pie)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "piece" "moving") Game-TheWord
 (and (isa :NOUN PieceMovingGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "piece-moving") Game-TheWord
 (and (isa :NOUN PieceMovingGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "piece" "of") Cloth-TheWord
 (and (isa :NOUN PieceOfCloth)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "piece" "of" "stored" "computer") Data-TheWord
 (and (isa :NOUN ComputerDataArtifact-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piece-TheWord (and (isa :NOUN ConceptualWork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piece-TheWord (and (isa :NOUN Individual))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piece-TheWord (and (isa :NOUN GamePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piece-TheWord
 (and (isa :NOUN SeparatePhysicalPartOfObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piece-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:SUBJECT (NP stuffUsed))
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed)
    (N fe_piece_prop stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 0 0)) ((1 2 1)) ((1 2 0)) ((1 0 0)) ((1 0 0) (1 1 0))
   ((1 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Pier-TheWord (and (isa :NOUN Dock)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pig-TheWord (and (isa :NOUN Pig)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pigeon-TheWord (and (isa :NOUN Pigeon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "piggy") Bank-TheWord (and (isa :NOUN PiggyBank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pike-TheWord (and (isa :NOUN Pike-Fish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pile-TheWord (and (isa :NOUN Pile))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) fe_individuals)
    ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DNI massOfObject) (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Pile-TheWord (and (isa :NOUN Pile))
 (frame FN_Quantity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pilferage-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer))
   (:GAP (DNI objectOfPossessionTransfer)
    (INI objectOfPossessionTransfer perpetrator))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Pilferer-TheWord (and (isa :NOUN Thief))
 (frame FN_Theft) (bindingTemplate (TheList (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pilfering-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer) (AJP fe_manner))
   (:GAP (INI perpetrator)) (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Pilgrimage-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn with) fe_co-participant)
    (AJP duration frequencyOfEvent) ((PPFn to) to-Generic)
    ((PPFn towards) to-Generic) ((PPFn through) trajectory-Complete)
    ((PPFn along) trajectory-Complete) ((PPFn around) trajectory-Complete)
    (VPto purposeOfEvent) ((PPFn from) from-Generic)
    ((PPFn in) situationLocation duration purposeOfEvent temporallyIntersects)
    (AVP to-Generic fe_iterations temporallyIntersects)
    (N temporallyIntersects) (A temporallyIntersects)
    ((PPFn during) temporallyIntersects) ((PPFn for) duration travellerInTrip)
    ((PPFn of) travellerInTrip))
   (:GAP (DNI to-Generic travellerInTrip)) (:GEN (Poss travellerInTrip))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 15 0)) ((1 14 1)) ((1 13 0)) ((1 5 0)) ((1 2 0))
   ((1 9 0)) ((1 12 0) (3 0 0)) ((0 0 0) (1 9 2)) ((0 0 0) (1 6 0))
   ((0 0 0) (1 2 0)) ((1 2 0) (1 9 3)) ((1 2 0) (1 11 0)) ((1 2 0) (1 8 0))
   ((1 1 1) (3 0 0)) ((1 1 1) (1 2 0)) ((1 1 0) (1 2 0))
   ((0 0 0) (0 0 0) (1 9 3)) ((0 0 0) (1 2 0) (1 10 2))
   ((1 3 0) (1 4 0) (3 0 0)) ((1 1 1) (1 2 0) (3 0 0))
   ((1 1 1) (1 2 0) (1 8 0)) ((0 0 0) (1 2 0) (1 7 0) (1 9 3))
   ((0 0 0) (1 9 1) (1 10 0) (1 10 1)) ((0 0 0) (0 0 0) (1 1 1) (1 2 0))
   ((0 0 0) (1 0 0) (1 1 1) (1 2 0))
   ((0 0 0) (0 0 0) (1 1 1) (1 2 0) (1 14 0)))))

(FNNounSemtrans (TheList) Piling-TheWord (and (isa :NOUN Piling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pill") Bottle-TheWord
 (and (isa :NOUN MedicineBottle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pill-TheWord (and (isa :NOUN Pill)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pill-TheWord (and (isa :NOUN Tablet-Ingestible))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pillow-TheWord (and (isa :NOUN Pillow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pillowcase-TheWord (and (isa :NOUN Pillowcase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pillow") Fight-TheWord
 (and (isa :NOUN Fight-Physical)
      (relationInstanceExists weaponUsed :NOUN Pillow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pilot") Burner-TheWord (and (isa :NOUN PilotLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pilot") Light-TheWord (and (isa :NOUN PilotLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pilot-TheWord (and (isa :NOUN AirplanePilot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pilsner") Glass-TheWord
 (and (isa :NOUN PilsnerGlass)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pimp-TheWord (and (isa :NOUN Pimp)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pimple-TheWord
 (and (isa :NOUN Pustule-Object)
      (relationExistsInstance outputsCreated Acne :NOUN))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn at) fe_attachment) ((PPFn beside) fe_attachment)
    ((PPFn on) fe_attachment) (AJP fe_descriptor))
   (:GAP (DEN markCreated))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 3 0)) ((1 2 0)) ((1 0 0)) ((0 0 0) (1 2 0))
   ((1 2 0) (1 3 0)) ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Pin-TheWord (and (isa :NOUN Pin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pin-TheWord
 (and (isa :NOUN PersonalIdentificationNumber)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinaceae-TheWord (and (isa :NOUN PinaceaeFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinafore-TheWord (and (isa :NOUN Apron))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn like) fe_descriptor)
    (AJP fe_descriptor clothingStyle) ((PPFn for) wearer))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList "pinball") Ball-TheWord (and (isa :NOUN PinballBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pinball") Machine-TheWord
 (and (isa :NOUN PinballMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinball-TheWord (and (isa :NOUN PlayingPinball))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pincer-TheWord (and (isa :NOUN Tweezers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinch-TheWord (and (isa :NOUN Pinch))
 (frame FN_Measure_by_action) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinch-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinch-TheWord (and (isa :NOUN Pinch))
 (frame FN_Quantity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pine-TheWord (and (isa :NOUN (WoodFn PineTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pine-TheWord (and (isa :NOUN PineTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pine") Tree-TheWord (and (isa :NOUN PineTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pineal") Gland-TheWord (and (isa :NOUN PinealBody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pineapple-TheWord
 (and (isa :NOUN (FruitFn PineapplePlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pineapple") Plant-TheWord
 (and (isa :NOUN PineapplePlant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinecone-TheWord (and (isa :NOUN (SeedFn PineTree)))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ping") Pong-TheWord (and (isa :NOUN TableTennisGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ping" "pong") Table-TheWord
 (and (isa :NOUN PingPongTable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pink-TheWord (and (isa :NOUN PinkColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinkie-TheWord (and (isa :NOUN LittleFinger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pinochle-TheWord (and (isa :NOUN Pinochle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pint-TheWord (and (isa :NOUN Pint-US))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_count)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DNI (InverseBinaryPredicateFn volumeOfObject)) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Pioneer-TheWord (and (isa :NOUN Pioneer))
 (frame FN_Achieving_first)
 (bindingTemplate
  (TheList (:GAP (DEN subjectOfMentalSituation) (INI fe_new_idea))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pipe") Bomb-TheWord (and (isa :NOUN PipeBomb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pipe-TheWord (and (isa :NOUN Pipe-ConduitArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pipe-TheWord (and (isa :NOUN Pipe-SmokingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pipeline-TheWord (and (isa :NOUN Pipeline))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pipette-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 1 2)) ((0 1 1)) ((0 0 1)) ((0 1 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Piquet-TheWord (and (isa :NOUN Piquet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piracy-TheWord (and (isa :NOUN HostileSeizure))
 (frame FN_Piracy)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn with) fe_manner) ((PPFn at) eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn on) eventOccursAt)
    ((PPFn against) transporter))
   (:GAP (DEN fe_event) (DNI perpetrator) (INI perpetrator))
   (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 0)) ((1 2 0)) ((1 1 0)) ((3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Pirate-TheWord
 (and (isa :NOUN CriminalInfringerOfCopyright)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pirate-TheWord (and (isa :NOUN Pirate-Sailor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Piranha-TheWord (and (isa :NOUN Piranha))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pirate-TheWord (and (isa :NOUN Pirate-Sailor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pisces-TheWord (and (isa :NOUN Pisces-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pistachio-TheWord (and (isa :NOUN Pistachio-TheNut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pistil-TheWord (and (isa :NOUN Gynoecium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pistol-TheWord (and (isa :NOUN Handgun))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString) startingDate)
    (N mainConstituent (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType)
    (AJP mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 1 2) (2 0 0))
   ((0 2 1) (2 0 0)) ((0 1 2) (0 2 1)) ((0 2 1) (0 2 1)) ((0 1 1) (2 0 0))
   ((0 2 0) (0 2 2)) ((0 0 1) (0 1 2) (0 2 1)) ((0 1 1) (0 1 2) (2 0 0))
   ((0 1 0) (0 2 1) (0 2 1)))))

(FNNounSemtrans (TheList) Pit-TheWord (and (isa :NOUN Pit-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pit-TheWord (and (isa :NOUN Quarry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pit") Viper-TheWord (and (isa :NOUN PitViper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pita-TheWord (and (isa :NOUN PitaBread))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pitch-TheWord (and (isa :NOUN Tar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pitcher") Plant-TheWord
 (and (isa :NOUN OldWorldPitcherPlant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pitcher-TheWord (and (isa :NOUN Pitcher))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pitcher-TheWord (and (isa :NOUN BaseballPitcher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pituitary-TheWord (and (isa :NOUN PituitaryGland))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pity-TheWord (and (isa :NOUN Pity))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N topicOfIndividual) ((PPFn for) topicOfIndividual)
    ((PPFn of) topicOfIndividual) ((PPFn on) topicOfIndividual)
    ((PPFn in) eventAffectsBodyPart) (AJP fe_degree fe_manner)
    ((PPFn about) situationTopic))
   (:GAP (DNI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 6 0)) ((3 0 0)) ((0 0 0)) ((1 5 0)) ((1 0 0)) ((1 2 0))
   ((1 4 0) (1 5 1)) ((1 5 1) (3 0 0)) ((0 0 0) (1 5 1)) ((1 1 0) (1 5 1))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0) (1 5 0)))))

(FNNounSemtrans (TheList) Pixel-TheWord (and (isa :NOUN Pixel-UnitOfCount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pizza") Cutter-TheWord (and (isa :NOUN PizzaCutter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pizza") Pan-TheWord (and (isa :NOUN PizzaPan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pizza-Pan-TheWord (and (isa :NOUN PizzaPan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pizza-TheWord (and (isa :NOUN Pizza)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pizzeria-TheWord (and (isa :NOUN Pizzeria))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "place") Mat-TheWord (and (isa :NOUN PlaceMat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "place" "of") Worship-TheWord
 (and (isa :NOUN ReligiousBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Place-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale)) (:OBJECT (N fe_inherent_purpose))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_formational_cause)
    (VPto fe_inherent_purpose) (N fe_inherent_purpose) (NP eventLocale)
    ((PPFn to) fe_related_event) ((PPFn in) fe_descriptor fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale) (2nd fe_relative_location))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 0 0)) ((2 3 0)) ((2 0 0)) ((4 0 0)) ((0 0 0) (2 6 1))
   ((1 0 0) (2 4 0)) ((2 0 0) (2 7 0)) ((0 0 0) (2 0 0)) ((2 0 0) (2 2 0))
   ((2 0 0) (2 1 0) (2 6 1)) ((2 0 0) (2 5 0) (2 6 0)))))

(FNNounSemtrans (TheList) Placebo-TheWord (and (isa :NOUN Placebo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Placement-TheWord
 (and (isa :NOUN PuttingSomethingSomewhere)) (frame FN_Placing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) to-Generic) ((PPFn at) to-Generic)
    ((PPFn in) fe_degree to-Generic) ((PPFn on) to-Generic)
    ((PPFn within) to-Generic) (AJP fe_manner) ((PPFn of) objectPlaced)
    (N objectPlaced))
   (:GAP (CNI doneBy) (INI doneBy) (DNI to-Generic objectPlaced))
   (:GEN (Poss doneBy objectPlaced))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 2 1)) ((0 1 0)) ((2 0 1)) ((0 7 0)) ((0 0 0))
   ((0 4 0) (0 6 0)) ((0 0 0) (2 0 1)) ((0 3 0) (0 6 0)) ((0 2 1) (0 6 0))
   ((0 2 1) (0 7 0)) ((0 6 0) (2 0 0)) ((0 2 0) (0 6 0))
   ((0 2 1) (0 5 0) (0 6 0)))))

(FNNounSemtrans (TheList) Placental-TheWord (and (isa :NOUN Eutheria))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Placket-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plague-TheWord (and (isa :NOUN BubonicPlague))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN infects) (INI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Plague-TheWord (and (isa :NOUN PneumonicPlague))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN infects) (INI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Plain-Clothes-TheWord
 (and (isa :NOUN PoliceInspector)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plain-TheWord (and (isa :NOUN Plain-Topographical))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    ((PPFn of) parts fe_container_possessor
     (InverseBinaryPredicateFn nameString))
    (N fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 3 0)) ((0 4 0)) ((0 1 2)) ((0 2 2)) ((0 0 2)) ((0 1 1))
   ((0 2 1)) ((0 1 0)) ((0 0 1)) ((0 2 0)) ((0 0 0)) ((0 2 2) (0 3 0))
   ((0 0 1) (0 2 2)) ((0 1 2) (0 2 0)) ((0 1 0) (2 0 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Plan-TheWord (and (isa :NOUN ArchitecturalPlan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plan-TheWord
 (and (isa :NOUN PlanSpecificationMicrotheory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plan-TheWord (and (isa :NOUN Strategy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plan-TheWord (and (isa :NOUN Project))
 (frame FN_Project)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn for) processTypeForAccomplishmentType)
    (VPbrst fe_descriptor) (AJP fe_descriptor) (VPto to-Generic)
    (N fe_descriptor to-Generic) (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (INI doneBy) (DEN fe_project)
    (DNI doneBy to-Generic topicOfIndividual))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 2 0)) ((3 0 0)) ((1 5 0)) ((1 3 0)) ((1 0 0))
   ((0 0 0) (1 4 1)) ((0 0 0) (1 1 0)) ((1 3 0) (1 4 0) (1 4 0)))))

(FNNounSemtrans (TheList) Plan-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (A performedBy) (VPto to-Generic) (VPbrst to-Generic)
    (AJP to-Generic) (N fe_attribute to-Generic)
    ((PPFn with) by-Underspecified))
   (:GAP (DNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 1 0)) ((1 1 0) (3 0 0)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 2 0) (1 5 0)))))

(FNNounSemtrans (TheList "plane") Figure-TheWord
 (and (isa :NOUN TwoDimensionalGeometricThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plane-TheWord (and (isa :NOUN FlatSurfaceRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plane-TheWord (and (isa :NOUN Plane-TheTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plane-TheWord (and (isa :NOUN Airplane))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn from) fe_itinerary) ((PPFn to) fe_itinerary))
   (:GAP (DEN transporter))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Planeload-TheWord
 (and (isa :NOUN (VolumeFn Airplane))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Planet-TheWord (and (isa :NOUN Planet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plankton-TheWord (and (isa :NOUN Plankton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Planner-TheWord (and (isa :NOUN PlannerProgram))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Planner-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance plannerOfEvent PurposefulAction :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plant") Material-TheWord
 (and (isa :NOUN VegetableMatter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plant") Organ-TheWord
 (and (isa :NOUN BotanicalOrgan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plant") Part-TheWord (and (isa :NOUN PlantPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plant") Product-TheWord
 (and (isa :NOUN PlantProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plant") Stand-TheWord (and (isa :NOUN PlantStand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plant-TheWord (and (isa :NOUN ManufacturingFacility))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale)) (:OBJECT (NP fe_descriptor))
   (:OBLIQUE-OBJECT (Sub situationConstituents fe_descriptor)
    ((PPFn in) fe_container_possessor fe_descriptor fe_relative_location)
    ((PPFn at) fe_container_possessor fe_relative_location)
    ((PPFn near) fe_relative_location) ((PPFn on) fe_relative_location)
    (A fe_descriptor fe_relative_location locationUse)
    (N fe_container_possessor fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString) fe_relative_location locationUse)
    (AJP fe_descriptor locationUse) ((PPingFn for) locationUse)
    (NP locationUse) (Srel locationUse) (VPto locationUse))
   (:GAP (DEN eventLocale) (DNI locationUse) (INI locationUse)
    (INC locationUse))
   (:GEN (Poss fe_container_possessor fe_formational_cause))))
 (groupPatterns
  (TheSet ((2 11 0)) ((2 6 5)) ((2 7 1)) ((2 5 2)) ((2 3 0)) ((2 6 4))
   ((2 5 1)) ((2 6 3)) ((2 7 0)) ((2 6 0)) ((2 4 0) (2 6 5)) ((2 3 0) (2 6 5))
   ((2 1 2) (2 6 5)) ((2 2 1) (2 6 5)) ((2 6 2) (2 6 5)) ((2 2 1) (4 0 1))
   ((2 1 2) (2 6 2)) ((2 6 1) (2 6 5)) ((2 6 5) (2 7 0)) ((2 7 0) (2 7 1))
   ((2 5 2) (2 7 0)) ((2 1 2) (2 6 1)) ((2 6 5) (4 0 0)) ((2 7 1) (4 0 0))
   ((2 2 0) (2 6 5)) ((2 5 2) (2 6 0)) ((2 1 2) (4 0 0)) ((2 1 0) (2 7 0))
   ((1 0 0) (2 0 0)) ((2 1 2) (2 6 4) (2 6 5)) ((2 2 1) (2 6 3) (2 6 5))
   ((2 6 1) (2 6 5) (2 10 0)) ((2 2 1) (2 6 1) (2 6 5))
   ((2 1 2) (2 6 5) (2 7 0)) ((2 2 1) (2 6 5) (2 7 0))
   ((2 1 2) (2 5 0) (2 8 0)) ((2 1 1) (2 6 1) (2 6 5))
   ((0 0 0) (2 6 5) (4 0 0)) ((2 1 0) (2 6 5) (2 7 0))
   ((2 0 1) (2 2 1) (2 7 0) (2 9 0)))))

(FNNounSemtrans (TheList) Plant-TheWord (and (isa :NOUN Plant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plantae-TheWord (and (isa :NOUN Plant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Planter-TheWord (and (isa :NOUN Planter-Flowerpot))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 1 2)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Planter-TheWord (and (isa :NOUN Planter-Flowerpot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plantronics") Headset-TheWord
 (and (isa :NOUN PlantronicsHeadset)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plaque-TheWord (and (isa :NOUN Plaque))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plash-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) emitter) ((PPingFn of) emitter))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Plasma-TheWord (and (isa :NOUN Plasma-StateOfMatter))
 (frame FN_Substance_by_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plasma-TheWord (and (isa :NOUN BloodPlasma))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plaster") Board-TheWord
 (and (isa :NOUN PlasterBoard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plaster") Cast-TheWord
 (and (isa :NOUN CastForBrokenBone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plaster-TheWord
 (and (isa :NOUN PlasterTheConstructionMaterial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Bag-TheWord (and (isa :NOUN PlasticBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Bottle-TheWord
 (and (isa :NOUN PlasticBottle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Box-TheWord (and (isa :NOUN PlasticBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Container-TheWord
 (and (isa :NOUN PlasticContainer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Explosive-TheWord
 (and (isa :NOUN HighExplosive)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType) (Srel deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon))
   (:APPOSITIVE (N (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((0 0 0) (0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "plastic") Film-TheWord (and (isa :NOUN PlasticFilm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic" "grocery") Bag-TheWord
 (and (isa :NOUN PlasticGroceryBag)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Jar-TheWord (and (isa :NOUN PlasticJar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Surgery-TheWord
 (and (isa :NOUN CosmeticSurgery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plastic-TheWord (and (isa :NOUN Plastic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Wrap-TheWord (and (isa :NOUN PlasticWrap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plastic") Wrapper-TheWord
 (and (isa :NOUN PlasticWrapper)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plate") Glass-TheWord (and (isa :NOUN PlateGlass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plate" "steel") Armor-TheWord
 (and (isa :NOUN PlateSteelArmor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plate-TheWord (and (isa :NOUN Plate-Shield))
 (frame FN_Armor) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plate-TheWord (and (isa :NOUN DinnerPlate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plate-TheWord (and (isa :NOUN Plate-Shield))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plate-TheWord (and (isa :NOUN TectonicPlate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plateau-TheWord (and (isa :NOUN Plateau))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    (NP fe_relative_location) ((PPFn in) fe_relative_location)
    (AJP parts (InverseBinaryPredicateFn nameString) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 2)) ((0 1 1)) ((0 0 1)) ((0 4 1)) ((2 0 0)) ((0 1 0))
   ((0 0 0)) ((0 4 0)) ((0 0 1) (0 1 2)) ((0 0 1) (0 3 0)) ((0 0 1) (0 2 0))
   ((0 0 0) (0 1 2)))))

(FNNounSemtrans (TheList) Platelet-TheWord (and (isa :NOUN Platelet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Platform-TheWord (and (isa :NOUN Platform))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Platinum-TheWord (and (isa :NOUN Platinum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Platoon-TheWord
 (and (isa :NOUN Platoon-MilitaryEchelon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Platter-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    ((PPFn with) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Platter-TheWord (and (isa :NOUN Platter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Platter-TheWord (and (isa :NOUN ServingPlatter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Platypus-TheWord (and (isa :NOUN Platypus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Play-TheWord (and (isa :NOUN PlayPerformance))
 (frame FN_Performing_arts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Playboy-TheWord (and (isa :NOUN Playboy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Player-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance competingAgents Competition :NOUN))
 (frame FN_Competition)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_competition) ((PPFn in) eventOccursAt)
    (A fe_competition fe_rank) (AJP fe_rank)
    ((PPFn on) fe_competition eventOccursAt))
   (:GAP (DNI fe_competition) (DEN doneBy doneBy)) (:GEN (Poss fe_competition))
   (:APPOSITIVE (NP doneBy))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 0 0)) ((0 3 0) (2 0 0)) ((0 3 0) (0 4 0))
   ((0 0 0) (0 3 0)) ((0 2 0) (0 2 1)) ((0 0 0) (3 0 0))
   ((0 0 0) (0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Player-TheWord (and (isa :NOUN GamePlayer))
 (frame FN_Competition)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_competition) ((PPFn in) eventOccursAt)
    (A fe_competition fe_rank) (AJP fe_rank)
    ((PPFn on) fe_competition eventOccursAt))
   (:GAP (DNI fe_competition) (DEN doneBy doneBy)) (:GEN (Poss fe_competition))
   (:APPOSITIVE (NP doneBy))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 0 0)) ((0 3 0) (2 0 0)) ((0 3 0) (0 4 0))
   ((0 0 0) (0 3 0)) ((0 2 0) (0 2 1)) ((0 0 0) (3 0 0))
   ((0 0 0) (0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Player-TheWord (and (isa :NOUN MediaPlayingDevice))
 (frame FN_Gizmo) (bindingTemplate (TheList (:OBLIQUE-OBJECT (N deviceUse))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Player-TheWord (and (isa :NOUN Artist-Performer))
 (frame FN_Performers)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) employer) (N activeIngredientsOfType))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Playground-TheWord (and (isa :NOUN Playground))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Playhouse-TheWord
 (and (isa :NOUN PlayhouseClubhouse)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "playing") Card-TheWord (and (isa :NOUN PlayingCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "playing") Field-TheWord
 (and (isa :NOUN AthleticField)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Playpen-TheWord (and (isa :NOUN BabyPlayYard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Playroom-TheWord (and (isa :NOUN CommonRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plaything-TheWord (and (isa :NOUN Toy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plaza-TheWord (and (isa :NOUN ShoppingMallBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plaza-TheWord (and (isa :NOUN TownSquare))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plea-TheWord (and (isa :NOUN Plea-Legal))
 (frame FN_Entering_of_plea)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_accused caseTriedIn justiceOfCourt))
   (:OBLIQUE-OBJECT ((PPFn to) fe_charges) (AJP fe_plea)
    ((PPFn of) fe_charges fe_plea) (N fe_charges fe_plea) (A fe_plea)
    ((PPFn at) temporallyIntersects) ((PPFn on) temporallyIntersects)
    ((PPFn by) justiceOfCourt temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (DNI fe_accused fe_charges caseTriedIn justiceOfCourt) (DEN fe_plea)
    (INI fe_charges justiceOfCourt fe_plea))
   (:GEN (Poss fe_accused temporallyIntersects))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 2 1)) ((1 3 1)) ((1 4 0)) ((0 0 2)) ((1 3 0)) ((0 0 0))
   ((0 0 1)) ((1 2 1) (3 0 1)) ((1 2 1) (3 0 0)) ((1 3 1) (3 0 0))
   ((1 1 0) (3 0 0)) ((0 0 0) (1 2 1)) ((1 2 0) (3 0 0))
   ((1 1 0) (1 5 0) (1 7 0)) ((0 0 0) (1 6 0) (1 8 0))
   ((1 0 0) (1 3 1) (1 7 1) (1 8 1)))))

(FNNounSemtrans (TheList) Plea-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy))
   (:OBLIQUE-OBJECT (VPto infoTransferred) ((PPingFn of) infoTransferred)
    (Sfin infoTransferred) (AJP fe_manner infoTransferred performedBy)
    ((PPingFn for) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((2 0 0)) ((0 0 1)) ((1 3 2)) ((1 2 0)) ((0 0 0))
   ((1 1 0) (1 3 1)) ((1 3 0) (2 0 0)) ((1 0 0) (1 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Pleading-TheWord (and (isa :NOUN CriminalCharge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pleasure-TheWord (and (isa :NOUN Pleasure-Feeling))
 (frame FN_Emotions_of_mental_activity)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:GAP (CNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Handheld-TheWord (and (isa :NOUN Plectrum-Handheld))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Mechanism-TheWord
 (and (isa :NOUN Plectrum-Mechanism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plectrum-TheWord (and (isa :NOUN Plectrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pledge-TheWord (and (isa :NOUN Commitment))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo infoTransferred performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT (VPto infoTransferred) (Sfin infoTransferred)
    (N infoTransferred) ((PPFn to) recipientOfInfo infoTransferred)
    (QUO infoTransferred) ((PPFn by) performedBy)
    (AJP infoTransferred performedBy) ((PPFn from) performedBy)
    ((PPFn of) infoTransferred performedBy situationTopic))
   (:GAP (INI recipientOfInfo) (CNI performedBy)
    (DNI recipientOfInfo infoTransferred performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 1 0)) ((0 0 1)) ((0 0 2)) ((2 8 2)) ((4 0 0)) ((2 8 1)) ((0 0 0))
   ((0 0 2) (2 0 0)) ((2 1 0) (4 0 0)) ((2 1 0) (2 7 0)) ((2 1 0) (2 5 0))
   ((2 4 0) (4 0 0)) ((2 3 1) (4 0 0)) ((2 8 0) (4 0 0)) ((2 7 0) (2 8 0))
   ((2 5 0) (2 8 0)) ((0 0 1) (4 0 0)) ((0 0 1) (2 6 1)) ((0 0 2) (2 2 0))
   ((2 5 0) (2 6 0)) ((2 0 0) (4 0 0)) ((2 1 0) (2 3 0) (4 0 0))
   ((0 0 2) (1 0 0) (2 1 0)))))

(FNNounSemtrans (TheList) Pleiades-TheWord (and (isa :NOUN Pleiades))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plethora-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Plexiglas-TheWord (and (isa :NOUN AcrylicSheet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pliers-TheWord (and (isa :NOUN Pliers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plight-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))
   (:GAP (DEN fe_situation)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Plop-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_manner) ((PPFn of) emitter objectMoving))
   (:GAP (INI fe_ground))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 1 1)))))

(FNNounSemtrans (TheList) Plot-TheWord (and (isa :NOUN CartesianGraphCW))
 (frame FN_Graph_shape) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plot-TheWord (and (isa :NOUN PlotOfStory))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plow-TheWord
 (and (isa :NOUN PlowAgriculturalImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plug-TheWord (and (isa :NOUN Stopper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plum-TheWord (and (isa :NOUN (FruitFn PlumTree)))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plumber-TheWord (and (isa :NOUN Plumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plumbing") Fixture-TheWord
 (and (isa :NOUN PlumbingFixture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plumbing-TheWord
 (and (isa :NOUN PlumbingSystem-Building)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plunger-TheWord (and (isa :NOUN Plunger-HandTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plunk-TheWord (and (isa :NOUN Sound))
 (frame FN_Sounds) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "plus") Sign-TheWord
 (and (isa :NOUN PlusSign-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plutonium-TheWord (and (isa :NOUN Plutonium))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor)
    (AJP fe_descriptor activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Plyers-TheWord (and (isa :NOUN Pliers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Plywood-TheWord (and (isa :NOUN Plywood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pneumoconiosis-TheWord
 (and (isa :NOUN Pneumoconiosis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poacher-TheWord (and (isa :NOUN Poacher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pocket") Protector-TheWord
 (and (isa :NOUN PocketProtector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pocket-TheWord (and (isa :NOUN PocketOfGarment))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N wornOn (InverseBinaryPredicateFn outfitParts))
    ((PPFn in) (InverseBinaryPredicateFn outfitParts))
    (AJP (InverseBinaryPredicateFn outfitParts) fe_descriptor))
   (:GAP (DEN (InverseBinaryPredicateFn outfitParts) parts) (2nd wearer))
   (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 3 1)) ((2 0 0)) ((0 0 0)) ((0 2 0)) ((0 1 1) (2 0 0))
   ((0 3 0) (2 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Pocket-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_descriptor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Pocketknife-TheWord (and (isa :NOUN PocketKnife))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Podiatry-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Podunk-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationInstanceExists farFrom :NOUN HighPopulationRegionOrPolity))
 (frame FN_Isolated_places) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poem-TheWord (and (isa :NOUN Poem-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_text))
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) ((PPFn to) beneficiary)
    (A fe_genre) (AJP fe_genre languageWrittenIn)
    ((PPFn from) authorOfLiteraryWork-CW
     (InverseBinaryPredicateFn textualPCWSubSections) startingDate)
    (NP fe_text fe_title) ((PPFn about) situationTopic)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections) mainConstituent
     languageWrittenIn startingDate situationTopic)
    (N authorOfLiteraryWork-CW fe_genre startingDate situationTopic)
    ((PPFn on) situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (CNI authorOfLiteraryWork-CW) (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((1 10 1)) ((1 7 4)) ((1 6 0)) ((0 0 0)) ((4 0 0)) ((1 7 3))
   ((1 8 2)) ((1 7 2)) ((1 3 1)) ((1 8 1)) ((1 3 0)) ((1 2 0)) ((1 7 0))
   ((1 1 0)) ((1 4 2)) ((3 0 0)) ((1 10 0)) ((1 4 0)) ((1 0 0))
   ((1 8 1) (1 9 0)) ((1 3 0) (1 9 0)) ((1 3 0) (1 5 1)) ((1 3 1) (1 8 1))
   ((1 9 0) (3 0 0)) ((1 8 3) (3 0 0)) ((1 0 0) (1 7 4)) ((1 0 0) (1 6 0))
   ((1 5 0) (3 0 0)) ((3 0 0) (4 0 0)) ((1 0 0) (4 0 0)) ((1 8 0) (4 0 0))
   ((1 0 0) (1 3 1)) ((1 7 1) (3 0 0)) ((1 8 1) (3 0 0)) ((1 2 0) (1 10 0))
   ((1 8 1) (1 10 0)) ((1 0 0) (1 4 1)) ((1 8 1) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Poem-TheWord (and (isa :NOUN PoeticWork))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_text))
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) ((PPFn to) beneficiary)
    (A fe_genre) (AJP fe_genre languageWrittenIn)
    ((PPFn from) authorOfLiteraryWork-CW
     (InverseBinaryPredicateFn textualPCWSubSections) startingDate)
    (NP fe_text fe_title) ((PPFn about) situationTopic)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections) mainConstituent
     languageWrittenIn startingDate situationTopic)
    (N authorOfLiteraryWork-CW fe_genre startingDate situationTopic)
    ((PPFn on) situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (CNI authorOfLiteraryWork-CW) (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((1 10 1)) ((1 7 4)) ((1 6 0)) ((0 0 0)) ((4 0 0)) ((1 7 3))
   ((1 8 2)) ((1 7 2)) ((1 3 1)) ((1 8 1)) ((1 3 0)) ((1 2 0)) ((1 7 0))
   ((1 1 0)) ((1 4 2)) ((3 0 0)) ((1 10 0)) ((1 4 0)) ((1 0 0))
   ((1 8 1) (1 9 0)) ((1 3 0) (1 9 0)) ((1 3 0) (1 5 1)) ((1 3 1) (1 8 1))
   ((1 9 0) (3 0 0)) ((1 8 3) (3 0 0)) ((1 0 0) (1 7 4)) ((1 0 0) (1 6 0))
   ((1 5 0) (3 0 0)) ((3 0 0) (4 0 0)) ((1 0 0) (4 0 0)) ((1 8 0) (4 0 0))
   ((1 0 0) (1 3 1)) ((1 7 1) (3 0 0)) ((1 8 1) (3 0 0)) ((1 2 0) (1 10 0))
   ((1 8 1) (1 10 0)) ((1 0 0) (1 4 1)) ((1 8 1) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Poem-TheWord (and (isa :NOUN PoetrySystem))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_text))
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) ((PPFn to) beneficiary)
    (A fe_genre) (AJP fe_genre languageWrittenIn)
    ((PPFn from) authorOfLiteraryWork-CW
     (InverseBinaryPredicateFn textualPCWSubSections) startingDate)
    (NP fe_text fe_title) ((PPFn about) situationTopic)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections) mainConstituent
     languageWrittenIn startingDate situationTopic)
    (N authorOfLiteraryWork-CW fe_genre startingDate situationTopic)
    ((PPFn on) situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic))
   (:GAP (CNI authorOfLiteraryWork-CW) (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((1 10 1)) ((1 7 4)) ((1 6 0)) ((0 0 0)) ((4 0 0)) ((1 7 3))
   ((1 8 2)) ((1 7 2)) ((1 3 1)) ((1 8 1)) ((1 3 0)) ((1 2 0)) ((1 7 0))
   ((1 1 0)) ((1 4 2)) ((3 0 0)) ((1 10 0)) ((1 4 0)) ((1 0 0))
   ((1 8 1) (1 9 0)) ((1 3 0) (1 9 0)) ((1 3 0) (1 5 1)) ((1 3 1) (1 8 1))
   ((1 9 0) (3 0 0)) ((1 8 3) (3 0 0)) ((1 0 0) (1 7 4)) ((1 0 0) (1 6 0))
   ((1 5 0) (3 0 0)) ((3 0 0) (4 0 0)) ((1 0 0) (4 0 0)) ((1 8 0) (4 0 0))
   ((1 0 0) (1 3 1)) ((1 7 1) (3 0 0)) ((1 8 1) (3 0 0)) ((1 2 0) (1 10 0))
   ((1 8 1) (1 10 0)) ((1 0 0) (1 4 1)) ((1 8 1) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Poet-TheWord (and (isa :NOUN Poet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poetry-TheWord (and (isa :NOUN PoetrySystem))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn of) authorOfLiteraryWork-CW) (A fe_genre)
    (N fe_genre languageWrittenIn) (AJP fe_genre languageWrittenIn)
    ((PPFn in) languageWrittenIn) ((PPFn on) situationTopic)
    ((PPFn about) situationTopic) ((PPingFn of) situationTopic))
   (:GAP (2nd authorOfLiteraryWork-CW) (DNI authorOfLiteraryWork-CW)
    (DEN fe_text))
   (:GEN (Poss authorOfLiteraryWork-CW fe_genre))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 6 0)) ((0 7 0)) ((0 4 1)) ((0 3 0)) ((0 4 0)) ((0 2 0))
   ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 3 1)) ((2 0 1)) ((0 3 0) (0 5 0))
   ((0 3 0) (0 4 1)) ((0 6 0) (2 0 0)) ((0 3 0) (2 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Podium-TheWord (and (isa :NOUN Lectern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pogrom-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn by) killers) ((PPFn in) temporallyIntersects)
    ((PPFn of) temporallyIntersects) ((PPFn against) victim)
    (AJP killers victim) (N victim))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 5 0)) ((1 4 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 4 1))
   ((1 2 0) (1 4 0)) ((1 1 0) (1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList "point" "and" "shoot") Camera-TheWord
 (and (isa :NOUN AutomaticCamera)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "point") System-TheWord
 (and (isa :NOUN PointSystem-WritingSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Point-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing parts) (AJP fe_descriptor)
    (N fe_descriptor fe_inherent_purpose) ((PPFn in) fe_relative_location)
    ((PPFn at) fe_relative_location))
   (:GAP (DEN eventLocale)) (:NOUN (N fe_descriptor))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 2 1)) ((2 0 0)) ((0 2 1) (0 4 0)) ((0 1 0) (0 3 0))
   ((0 1 0) (3 0 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Poinsettia-TheWord (and (isa :NOUN FloweringPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "poison") Gas-TheWord (and (isa :NOUN ToxicGas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "poison") Ivy-TheWord
 (and (isa :NOUN PoisonIvy-Plant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poison-TheWord (and (isa :NOUN ToxicSubstance))
 (frame FN_Toxic_substance)
 (bindingTemplate
  (TheList (:GAP (DEN poisonedWith) (INI victim)) (:NOUN (N poisonedWith))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) PoisonIvy-TheWord (and (isa :NOUN PoisonIvy-Plant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poisoning-TheWord (and (isa :NOUN Poisoning))
 (frame FN_Cause_harm)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT (AJP causes-Underspecified)
    (N causes-Underspecified instrument-Generic) ((PPFn of) victim))
   (:GAP (INI doneBy victim))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((1 1 1)) ((1 1 0) (1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Poker-TheWord (and (isa :NOUN Poker-CardGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "polar") Circle-TheWord
 (and (isa :NOUN PolarCircle-LatitudeLine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polarfleece-TheWord
 (and (isa :NOUN PolarfleeceCloth)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polarity-TheWord (and (isa :NOUN LogicSignal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pole-TheWord (and (isa :NOUN AxialPoleOfPlanet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pole-TheWord (and (isa :NOUN Pole-Rod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pole-TheWord (and (isa :NOUN PoleForPoleVaulting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pole" "vault") Bar-TheWord
 (and (isa :NOUN PoleVaultBar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pole") Vault-TheWord
 (and (isa :NOUN PolevaultSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pole" "vaulting") Pole-TheWord
 (and (isa :NOUN PoleForPoleVaulting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polecat-TheWord (and (isa :NOUN OldWorldPolecat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polemic-TheWord (and (isa :NOUN Reasoning))
 (frame FN_Reasoning)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn against) resultantThought)
    ((PPFn on) resultantThought) ((PPFn about) resultantThought)
    (AJP fe_manner) ((PPFn at) temporallyIntersects))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 3 0)) ((1 0 0)) ((0 5 0) (1 0 0)) ((0 1 0) (1 0 0))
   ((0 2 0) (0 4 0) (1 0 0)) ((0 1 0) (0 4 0) (1 0 0))
   ((0 0 0) (0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList "police") Action-TheWord
 (and (isa :NOUN PoliceAction)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Car-TheWord (and (isa :NOUN PoliceCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Cruiser-TheWord (and (isa :NOUN PoliceCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Department-TheWord
 (and (isa :NOUN PoliceOrganization)) (frame FN_Law_enforcement_agency)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Department-TheWord
 (and (isa :NOUN LocalPoliceOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Officer-TheWord
 (and (isa :NOUN PoliceOfficer-Municipal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Report-TheWord
 (and (isa :NOUN PoliceReport)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "police") Station-TheWord
 (and (isa :NOUN PoliceStation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Police-TheWord (and (isa :NOUN PoliceOrganization))
 (frame FN_Law_enforcement_agency)
 (bindingTemplate (TheList (:GAP (DEN fe_agency) (DNI fe_jurisdiction))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Police-TheWord (and (isa :NOUN PoliceOrganization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Police-TheWord
 (and (isa :NOUN PoliceOfficer-Municipal)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Policeman-TheWord
 (and (isa :NOUN LawEnforcementOfficer)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Policy-TheWord (and (isa :NOUN Policy))
 (frame FN_Law)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) performedBy fe_required)
    ((PPFn for) fe_required)
    (AJP fe_jurisdiction fe_required activeIngredientsOfType))
   (:GAP (INI lawProscribesActType) (DEN fe_law) (DNI fe_required))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 2 0)) ((2 0 0)) ((0 0 0)) ((0 1 0) (0 2 1))
   ((0 0 1) (0 2 2) (2 0 0)))))

(FNNounSemtrans (TheList) Policy-TheWord
 (and (isa :NOUN InsurancePolicyDocument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polio-TheWord (and (isa :NOUN PolioInfection))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polish-TheWord (and (isa :NOUN PolishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polish-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance stuffUsed PolishingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "political") Campaign-TheWord
 (and (isa :NOUN PoliticalElectionCampaign)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "political") Movement-TheWord
 (and (isa :NOUN PoliticalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "political") Orientation-TheWord
 (and (isa :NOUN PoliticalBeliefSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "political") System-TheWord
 (and (isa :NOUN GeopoliticalEntityBySystemOfGovernment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "political") Unit-TheWord
 (and (isa :NOUN PoliticalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Politician-TheWord (and (isa :NOUN Politician))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor employer fe_rank))
   (:GAP (DEN fe_person)) (:GEN (Poss employer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (0 0 2)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Politics-TheWord (and (isa :NOUN PoliticalScience))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pollen-TheWord (and (isa :NOUN Pollen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pollination-TheWord
 (and (isa :NOUN PollinatingSomePlant)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pollutant-TheWord (and (isa :NOUN Pollutant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pollution-TheWord (and (isa :NOUN PollutionProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polo-Neck-TheWord (and (isa :NOUN PoloShirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "polo") Shirt-TheWord (and (isa :NOUN PoloShirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polonium-TheWord (and (isa :NOUN Polonium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polyester-TheWord (and (isa :NOUN PolyesterCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "polyethylene" "glycol") 200-TheWord
 (and (isa :NOUN PolyethyleneGlycol-200)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polygon-TheWord (and (isa :NOUN Polygon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polymerase-TheWord
 (and (isa :NOUN NucleicAcidPolymerase)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polyploid-TheWord (and (isa :NOUN PolyploidCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polypropylene-TheWord (and (isa :NOUN Polypropylene))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polytheism-TheWord
 (and (isa :NOUN PolytheisticReligion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pom-Pom-TheWord (and (isa :NOUN PomPom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pomegranate-TheWord (and (isa :NOUN PomegranateTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pomeranian-TheWord
 (and (isa :NOUN Pomeranian-TheDog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pommel") Horse-TheWord
 (and (isa :NOUN GymPommelHorse)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poncho-TheWord (and (isa :NOUN Poncho))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 0 0) (0 0 2) (2 0 0)))))

(FNNounSemtrans (TheList "pond") Scum-TheWord (and (isa :NOUN PondScum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pond-TheWord (and (isa :NOUN Pond))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn near) fe_relative_location)
    (AJP fe_formational_cause fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn on) fe_relative_location)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location
     activeIngredientsOfType))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 5 2)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 5 1)) ((0 1 1)) ((0 5 0))
   ((0 1 0)) ((0 0 0) (0 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Pons-TheWord (and (isa :NOUN Pons)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pony-TheWord (and (isa :NOUN Pony)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poodle-TheWord (and (isa :NOUN Poodle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pool") Ball-TheWord (and (isa :NOUN PoolBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pool") Table-TheWord (and (isa :NOUN PoolTable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pool-Table-TheWord (and (isa :NOUN PoolTable))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pool-TheWord (and (isa :NOUN PoolGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pool-TheWord (and (isa :NOUN Puddle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pool-TheWord (and (isa :NOUN TidePool))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) (AVP fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn near) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn on) fe_relative_location)
    (AJP parts fe_formational_cause activeIngredientsOfType)
    (N parts activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 7 1)) ((0 6 2)) ((0 5 0)) ((0 2 0)) ((0 4 0)) ((0 0 0)) ((0 6 0))
   ((0 2 0) (0 7 1)) ((0 2 0) (0 6 2)) ((0 0 0) (0 6 2)) ((0 0 0) (0 3 0))
   ((0 0 0) (0 2 0)) ((0 2 0) (0 6 0)) ((0 1 0) (0 6 0))
   ((0 2 0) (0 6 1) (0 7 0)))))

(FNNounSemtrans (TheList "pop") Song-TheWord (and (isa :NOUN HitSong-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pop-TheWord (and (isa :NOUN SoftDrink))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "popcorn") Popper-TheWord
 (and (isa :NOUN PopcornPopper)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Popcorn-TheWord (and (isa :NOUN Popcorn-Popped))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pope-TheWord (and (isa :NOUN Pope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poplar-TheWord (and (isa :NOUN (WoodFn Poplar)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poplar-TheWord (and (isa :NOUN Poplar))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "poplar") Tree-TheWord (and (isa :NOUN Poplar))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "popliteal") Vein-TheWord
 (and (isa :NOUN PoplitealVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poppy-TheWord (and (isa :NOUN PoppyPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Population-TheWord (and (isa :NOUN PopulationOfBLOs))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_aggregate_property) (A fe_individuals)
    ((PPFn of) fe_container_possessor fe_individuals)
    (AJP fe_aggregate_property fe_individuals)
    (N fe_aggregate_property fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals) (INI fe_individuals))
   (:GEN ((PPFn of) fe_container_possessor) (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 2 1)) ((0 4 1)) ((0 3 1)) ((2 1 0)) ((2 0 0)) ((0 2 0))
   ((0 0 0)) ((0 4 0)) ((0 3 0)) ((0 2 1) (0 3 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Population-TheWord
 (and (isa :NOUN Population-Ecological)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPing fe_aggregate_property) (A fe_individuals)
    ((PPFn of) fe_container_possessor fe_individuals)
    (AJP fe_aggregate_property fe_individuals)
    (N fe_aggregate_property fe_individuals) ((PPingFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals) (INI fe_individuals))
   (:GEN ((PPFn of) fe_container_possessor) (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 2 1)) ((0 4 1)) ((0 3 1)) ((2 1 0)) ((2 0 0)) ((0 2 0))
   ((0 0 0)) ((0 4 0)) ((0 3 0)) ((0 2 1) (0 3 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList "population") Density-TheWord
 (and (isa :NOUN DensityOfPopulation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Porcelain-TheWord (and (isa :NOUN Porcelain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Porch-TheWord (and (isa :NOUN Porch))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Porcupine-TheWord (and (isa :NOUN Porcupine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pore-TheWord (and (isa :NOUN SkinPore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pork-TheWord (and (isa :NOUN Pork)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "porn") Star-TheWord (and (isa :NOUN PornStar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pornography-TheWord
 (and (isa :NOUN PornographicMaterial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Porosity-TheWord (and (isa :NOUN Porosity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Porpoise-TheWord (and (isa :NOUN Porpoise))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Port-TheWord (and (isa :NOUN Seaport))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale) (INI locationUse))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Port-TheWord (and (isa :NOUN SeaportFacility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Port-TheWord (and (isa :NOUN LeftSide))
 (frame FN_Non-gradable_proximity) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "portable" "audio" "cassette") Player-TheWord
 (and (isa :NOUN PortableCassetteRecorder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "portal") Vein-TheWord
 (and (isa :NOUN HepaticPortalVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Portent-TheWord (and (isa :NOUN Signal))
 (frame FN_Omen)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_predictive_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn for) fe_future_phenomenon)
    ((PPFn of) fe_future_phenomenon) (AJP outcomeOfAction))
   (:GAP (DNI outcomeOfAction fe_predictive_phenomenon))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Porter-TheWord (and (isa :NOUN BaggagePorter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "portfolio") Case-TheWord
 (and (isa :NOUN PortfolioCase)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Portion-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Portrait-TheWord
 (and (isa :NOUN PortraitPerspective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "portuguese") Escudo-TheWord
 (and (isa :NOUN Escudo-Portugal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Portuguese-TheWord
 (and (isa :NOUN PortugueseLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Position-TheWord (and (isa :NOUN JobPosition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Position-TheWord (and (isa :NOUN PositionVector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Position-TheWord (and (isa :NOUN SpatialPredicate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Position-TheWord (and (isa :NOUN Title))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Position-TheWord
 (and (isa :NOUN AnimalTypeByPosture)) (frame FN_Posture)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_depictive))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Positive-TheWord
 (and (isa :NOUN PositivelyChargedRegion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Posse-TheWord (and (isa :NOUN Team))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPingFn of) fe_individuals)
    ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Possession-TheWord (and (isa :NOUN Possession))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Possession-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Possession-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner)) (:GAP (DNI owns) (DEN owns))
   (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Possessor-TheWord (and (isa :NOUN OwningSomething))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner))
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn for) fe_depictive)
    (VPfin fe_depictive) (VPbrst fe_depictive) (A fe_manner) ((PPFn of) owns))
   (:GAP (DEN owner) (DNI owns)) (:GEN (Poss owns))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0) (1 5 0)) ((1 4 0) (1 5 0)) ((1 0 0) (1 5 0))
   ((1 3 0) (3 0 0)) ((1 1 0) (1 2 0) (1 5 0)))))

(FNNounSemtrans (TheList) Possibility-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance
       (Kappa (?evt ?poss)
        (and (actors ?evt ?actor)
             (optionsAvailable ?actor ?evt objectSelected ?poss)))
       Event :NOUN))
 (frame FN_Alternatives)
 (bindingTemplate (TheList (:SUBJECT (NP doneBy)) (:GAP (DNI fe_situation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Possibility-TheWord
 (and (isa :NOUN Likelihood-QuantityType)) (frame FN_Likelihood)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPingFn of) fe_hypothetical_event)
    ((PPFn of) fe_hypothetical_event) (Sfin fe_hypothetical_event))))
 (groupPatterns (TheSet ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Possum-TheWord (and (isa :NOUN Opossum))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "post") Office-TheWord
 (and (isa :NOUN PostOfficeBuilding)) (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "post") Office-TheWord
 (and (isa :NOUN PostOfficeOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Post-TheWord
 (and (isa :NOUN Place)
      (relationExistsInstance posting-Military-Generic
       ModernMilitaryOrganization :NOUN))
 (frame FN_Assigned_location)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:GAP (DEN fe_station))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Post-TheWord (and (isa :NOUN Post)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Post-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance objectSent SendingSomething :NOUN))
 (frame FN_Sent_items) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "postage") Stamp-TheWord
 (and (isa :NOUN PostageStamp)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Postage-TheWord (and (isa :NOUN PostageStamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Postcard-TheWord (and (isa :NOUN PostCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poster-TheWord (and (isa :NOUN Poster))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor))
   (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Posterior-TheWord (and (isa :NOUN BackSide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "posterior" "cerebral") Artery-TheWord
 (and (isa :NOUN PosteriorCerebralArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "posture") Chair-TheWord (and (isa :NOUN KneeChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Posture-TheWord (and (isa :NOUN AnimalTypeByPosture))
 (frame FN_Posture)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (AVP fe_manner) ((PPFn on) purposeOfEvent))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Potash-TheWord (and (isa :NOUN Potash))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pot") Holder-TheWord (and (isa :NOUN PotHolder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pot-TheWord (and (isa :NOUN PotteryArtifact))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A containedObject) ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location)
    ((PPFn for) deviceUse) (AJP containedObject mainConstituent deviceUse)
    (N containedObject mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss containedObject owner))))
 (groupPatterns
  (TheSet ((0 6 3)) ((0 6 2)) ((0 3 0)) ((0 2 0)) ((2 0 1)) ((0 6 1)) ((0 5 1))
   ((2 0 0)) ((0 1 0)) ((0 6 0)) ((0 5 0)) ((0 5 2) (0 6 2)) ((0 4 0) (0 6 0))
   ((0 5 0) (0 6 2)) ((0 1 0) (2 0 1)) ((0 6 1) (2 0 0)) ((0 0 0) (0 6 1))
   ((0 6 1) (0 6 1) (0 6 2)) ((0 6 1) (0 6 1) (0 6 1)))))

(FNNounSemtrans (TheList) Pot-TheWord (and (isa :NOUN StoveTopCookingPot))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A containedObject) ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location)
    ((PPFn for) deviceUse) (AJP containedObject mainConstituent deviceUse)
    (N containedObject mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss containedObject owner))))
 (groupPatterns
  (TheSet ((0 6 3)) ((0 6 2)) ((0 3 0)) ((0 2 0)) ((2 0 1)) ((0 6 1)) ((0 5 1))
   ((2 0 0)) ((0 1 0)) ((0 6 0)) ((0 5 0)) ((0 5 2) (0 6 2)) ((0 4 0) (0 6 0))
   ((0 5 0) (0 6 2)) ((0 1 0) (2 0 1)) ((0 6 1) (2 0 0)) ((0 0 0) (0 6 1))
   ((0 6 1) (0 6 1) (0 6 2)) ((0 6 1) (0 6 1) (0 6 1)))))

(FNNounSemtrans (TheList) Pot-TheWord (and (isa :NOUN PlantPot))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A containedObject) ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location)
    ((PPFn for) deviceUse) (AJP containedObject mainConstituent deviceUse)
    (N containedObject mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss containedObject owner))))
 (groupPatterns
  (TheSet ((0 6 3)) ((0 6 2)) ((0 3 0)) ((0 2 0)) ((2 0 1)) ((0 6 1)) ((0 5 1))
   ((2 0 0)) ((0 1 0)) ((0 6 0)) ((0 5 0)) ((0 5 2) (0 6 2)) ((0 4 0) (0 6 0))
   ((0 5 0) (0 6 2)) ((0 1 0) (2 0 1)) ((0 6 1) (2 0 0)) ((0 0 0) (0 6 1))
   ((0 6 1) (0 6 1) (0 6 2)) ((0 6 1) (0 6 1) (0 6 1)))))

(FNNounSemtrans (TheList) Pot-TheWord (and (isa :NOUN Marijuana))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "potting") Soil-TheWord (and (isa :NOUN PottingSoil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Potassium-TheWord (and (isa :NOUN Potassium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "potato") Chip-TheWord (and (isa :NOUN PotatoChip))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "potato") Salad-TheWord (and (isa :NOUN PotatoSalad))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Potato-TheWord (and (isa :NOUN Potato-Foodstuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))
   (:GEN (Poss fe_descriptor))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 2 1) (1 0 0))
   ((0 1 0) (0 1 1)) ((0 0 0) (0 0 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Potato-TheWord (and (isa :NOUN PotatoPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Potency-TheWord (and (isa :NOUN Effectiveness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "potential") Energy-TheWord
 (and (isa :NOUN PotentialEnergy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Potential-TheWord (and (isa :NOUN Capability))
 (frame FN_Capability)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AVP fe_degree) ((PPFn of) objectActedOn)
    (AJP fe_degree fe_event) (VPto fe_event) ((PPFn for) fe_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 4 0) (2 0 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 1))
   ((0 0 0) (0 0 0) (1 3 0)) ((1 0 0) (1 2 1) (2 0 0))
   ((0 0 0) (1 2 0) (1 2 1)))))

(FNNounSemtrans (TheList) Pothole-TheWord (and (isa :NOUN Pothole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Potpourri-TheWord (and (isa :NOUN PotpourriForHome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Potter-TheWord (and (isa :NOUN Potter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "potter" "^s") Wheel-TheWord
 (and (isa :NOUN PottersWheel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pottery-TheWord (and (isa :NOUN PotteryArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "potty") Chair-TheWord (and (isa :NOUN PottyChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pouch-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject mainConstituent)
    ((PPFn at) fe_relative_location) ((PPFn on) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn out) fe_relative_location)
    ((PPFn round) fe_relative_location) (AJP activeIngredientsOfType deviceUse)
    (N mainConstituent fe_relative_location activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 7 3)) ((0 6 1)) ((0 5 0)) ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 1))
   ((0 7 0)) ((0 0 0)) ((0 4 0) (0 7 3)) ((0 2 0) (0 6 1)) ((0 3 0) (0 6 0))
   ((0 7 3) (2 0 0)) ((0 6 1) (2 0 0)) ((0 7 2) (2 0 0)) ((0 7 1) (2 0 0))
   ((0 2 0) (0 7 0)) ((0 1 0) (0 7 0)) ((0 7 0) (2 0 0)) ((0 0 0) (0 7 0)))))

(FNNounSemtrans (TheList) Poultry-TheWord (and (isa :NOUN Poultry-Meat))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Pound-TheWord (and (isa :NOUN Pound-UnitOfMass))
 (frame FN_Measure_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Num fe_count)
    ((PPFn of) (InverseBinaryPredicateFn massOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Pound-TheWord (and (isa :NOUN Pound-UnitOfForce))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pounds" "per" "square") Inch-TheWord
 (and (isa :NOUN PoundsPerSquareInch)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pout-TheWord (and (isa :NOUN Pouting))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_conveyed_emotion fe_manner))
   (:GAP (DEN fe_expression)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 1)) ((1 0 0)) ((1 0 1) (3 0 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Poverty-TheWord (and (isa :NOUN Poverty))
 (frame FN_Wealthiness)
 (bindingTemplate (TheList (:GAP (DNI fe_person) (INI fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "powder") Room-TheWord (and (isa :NOUN Restroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Powder-TheWord (and (isa :NOUN Powder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "powdered" "laundry") Detergent-TheWord
 (and (isa :NOUN PowderedLaundryDetergent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "powdered") Milk-TheWord (and (isa :NOUN MilkPowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Brake-TheWord
 (and (isa :NOUN PowerBrakeSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "cord") Adapter-TheWord
 (and (isa :NOUN PowerCordAdapter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Cord-TheWord (and (isa :NOUN PowerCord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "door") Lock-TheWord
 (and (isa :NOUN AutoPowerDoorLock)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "lawn") Mower-TheWord
 (and (isa :NOUN LawnMower-Power)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Line-TheWord (and (isa :NOUN PowerLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "of") Attorney-TheWord
 (and (isa :NOUN PowerOfAttorney)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Plant-TheWord
 (and (isa :NOUN PowerPlantBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Plant-TheWord
 (and (isa :NOUN NuclearReactor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Sander-TheWord (and (isa :NOUN PowerSander))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Saw-TheWord (and (isa :NOUN PowerSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "shovel") Excavator-TheWord
 (and (isa :NOUN Excavator-Vehicle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Station-TheWord
 (and (isa :NOUN PowerPlantBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "steering") Fluid-TheWord
 (and (isa :NOUN PowerSteeringFluid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Steering-TheWord
 (and (isa :NOUN PowerSteering)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Strip-TheWord (and (isa :NOUN PowerStrip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power" "sun") Roof-TheWord
 (and (isa :NOUN AutoPowerSunRoof)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Supply-TheWord (and (isa :NOUN PowerSupply))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Power-TheWord (and (isa :NOUN Power))
 (frame FN_Electricity)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_electricity from-Generic))
   (:OBLIQUE-OBJECT (NP fe_inherent_purpose) (VPbrst fe_inherent_purpose)
    (VPto fe_inherent_purpose) (AJP fe_descriptor from-Generic)
    (A from-Generic) (N fe_descriptor from-Generic) ((PPFn from) from-Generic)
    (Sub fe_inherent_purpose from-Generic))
   (:GAP (DEN fe_electricity))
   (:NOUN (N fe_descriptor fe_inherent_purpose from-Generic))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 6 0)) ((0 0 1)) ((3 0 2)) ((1 5 1)) ((1 3 1)) ((1 4 0))
   ((1 7 0)) ((1 0 0)) ((3 0 1)) ((0 0 0)) ((3 0 0)) ((1 3 0))
   ((0 0 1) (1 2 0)) ((1 1 0) (3 0 2)) ((1 5 0) (3 0 2)) ((1 3 0) (3 0 2))
   ((1 3 0) (1 3 1)))))

(FNNounSemtrans (TheList) Power-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Power-TheWord (and (isa :NOUN EnergyStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Power-TheWord (and (isa :NOUN Power-Quality))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Tool-TheWord (and (isa :NOUN Tool-PowerTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "power") Unit-TheWord (and (isa :NOUN UnitOfPower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pp3") Battery-TheWord (and (isa :NOUN PP3Battery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "practical") Joke-TheWord (and (isa :NOUN Prank))
 (frame FN_Prank) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Practice-TheWord (and (isa :NOUN Business))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_business))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) eventOccursAt)
    ((PPFn at) eventOccursAt) (A fe_descriptor fe_product)
    (N eventOccursAt fe_product fe_service_provider))
   (:GAP (DEN fe_business) (2nd fe_business_name))
   (:GEN (Poss ownerOfProprietaryThing fe_service_provider))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 4 2)) ((3 0 0)) ((1 4 1)) ((1 3 1)) ((1 1 0)) ((1 0 0))
   ((1 4 1) (3 0 0)) ((1 3 1) (3 0 0)) ((1 1 0) (1 3 1)) ((1 2 0) (1 3 1))
   ((1 3 1) (1 4 0)) ((1 0 0) (1 4 1)) ((1 0 0) (1 3 1)) ((1 0 0) (1 4 0))
   ((1 0 0) (1 0 0)) ((1 0 0) (1 4 1) (3 0 0)) ((1 0 0) (1 1 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Practice-TheWord
 (and (isa :NOUN CulturalConvention-Specification)) (frame FN_Custom)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Practice-TheWord
 (and (isa :NOUN Practicing-Preparing)) (frame FN_Practice)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) (N temporallyIntersects))
   (:GAP (DNI objectActedOn) (INI performedBy))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Praenomen-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pragmatics-TheWord (and (isa :NOUN Pragmatics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prairie-TheWord (and (isa :NOUN Prairie))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N eventLocale (InverseBinaryPredicateFn nameString))
    (AJP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Praise-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo objectOfEvaluation fe_reason))
   (:OBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn from) communicatorOfInfo)
    ((PPFn of) communicatorOfInfo objectOfEvaluation)
    ((PPFn to) objectOfEvaluation) ((PPFn on) objectOfEvaluation)
    ((PPFn upon) objectOfEvaluation)
    (AJP communicatorOfInfo fe_degree fe_manner)
    ((PPFn in) genericPathway-Partial) ((PPingFn for) fe_reason)
    ((PPFn for) objectOfEvaluation fe_reason) (Sfin fe_reason)
    ((PPFn by) fe_reason))
   (:GAP (CNI communicatorOfInfo)
    (DNI communicatorOfInfo objectOfEvaluation genericPathway-Partial
     situationTopic))
   (:GEN (Poss communicatorOfInfo objectOfEvaluation))))
 (groupPatterns
  (TheSet ((2 5 2)) ((2 7 0)) ((4 0 0)) ((2 0 0)) ((2 1 1)) ((2 8 0)) ((0 0 1))
   ((2 2 0) (2 8 1)) ((2 7 0) (2 8 0)) ((0 0 1) (2 7 0)) ((0 0 1) (2 8 1))
   ((2 5 2) (4 0 0)) ((2 0 0) (2 5 2)) ((2 5 0) (2 5 2)) ((2 1 1) (4 0 0))
   ((2 8 0) (4 0 0)) ((0 0 1) (4 0 0)) ((0 0 1) (2 0 0)) ((0 0 0) (4 0 1))
   ((0 0 0) (2 4 0)) ((0 0 0) (2 3 0)) ((0 0 0) (2 1 1)) ((0 0 0) (2 8 0))
   ((2 5 1) (2 8 0)) ((0 0 1) (2 0 0) (2 8 1)) ((0 0 1) (2 0 0) (2 10 0))
   ((0 0 0) (2 4 0) (2 8 1)) ((0 0 0) (2 3 0) (2 9 0))
   ((0 0 0) (2 3 0) (2 7 0)) ((0 0 0) (2 3 0) (2 8 1))
   ((0 0 0) (2 6 0) (4 0 1)) ((0 0 0) (1 0 0) (2 6 0))
   ((2 0 0) (2 5 2) (2 8 1)) ((2 0 0) (2 5 2) (2 8 0))
   ((0 0 1) (2 0 0) (2 5 2)) ((0 0 0) (2 5 2) (2 8 0))
   ((0 0 1) (0 0 1) (2 5 2)) ((0 0 1) (0 0 1) (2 1 0))
   ((0 0 1) (2 0 0) (2 5 1)) ((0 0 0) (2 2 0) (4 0 0))
   ((0 0 0) (0 0 0) (4 0 1)) ((0 0 0) (2 2 0) (2 5 2) (2 6 0))
   ((0 0 2) (1 0 0) (2 0 0) (2 5 1)))))

(FNNounSemtrans (TheList) Pralidoxime-TheWord (and (isa :NOUN Pralidoxime))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pram-TheWord (and (isa :NOUN BabyCarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prank-TheWord (and (isa :NOUN Prank))
 (frame FN_Prank) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Praseodymium-TheWord (and (isa :NOUN Praseodymium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prayer-TheWord (and (isa :NOUN Prayer-SacredText))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prayer-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT (Sub temporallyIntersects)
    ((PPFn of) activeIngredientsOfType) (VPto activeIngredientsOfType))))
 (groupPatterns (TheSet ((1 2 0)) ((0 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "praying") Mantis-TheWord
 (and (isa :NOUN PrayingMantis)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pre" "cut") Home-TheWord (and (isa :NOUN PreCutHome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pre-Emption-TheWord
 (and (isa :NOUN PreventingFromHappening)) (frame FN_Preventing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pre" "recorded" "video") Tape-TheWord
 (and (isa :NOUN VideoCassette-PreRecorded)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Preamplifier-TheWord (and (isa :NOUN Preamplifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Precambrian-TheWord
 (and (isa :NOUN Precambrian-GeologicalEra)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Precession-TheWord
 (and (isa :NOUN Precession-Action)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Precipitation-TheWord
 (and (isa :NOUN PrecipitationProcess)) (frame FN_Precipitation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Precision-TheWord (and (isa :NOUN Accuracy))
 (frame FN_Accuracy) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Precursor-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Ingredients)
 (bindingTemplate
  (TheList (:SUBJECT (NP mainConstituent))
   (:OBLIQUE-OBJECT ((PPFn for) fe_product) (A activeIngredientsOfType)
    (N fe_product activeIngredientsOfType) ((PPFn to) fe_product stuffUse)
    (AJP fe_descriptor activeIngredientsOfType stuffUse)
    ((PPFn of) fe_product stuffUse))
   (:GAP (DEN mainConstituent) (DNI fe_product) (INI fe_product))
   (:GEN (Poss fe_product))))
 (groupPatterns
  (TheSet ((1 4 2)) ((1 2 1)) ((3 0 0)) ((1 0 0)) ((1 2 0)) ((0 0 0) (1 5 1))
   ((1 2 0) (1 4 1)) ((1 1 0) (1 2 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 4 0))
   ((1 3 0) (1 4 0)) ((1 4 0) (1 5 0)) ((0 0 0) (1 3 1) (1 4 0))
   ((0 0 0) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Predator-TheWord (and (isa :NOUN Predator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Predicament-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPingFn of) fe_situation)
    ((PPFn after) temporallyIntersects) ((PPFn by) temporallyIntersects))
   (:GAP (DEN fe_situation))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "predicate") Calculus-TheWord
 (and (isa :NOUN PredicateLogic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prediction-TheWord (and (isa :NOUN Expectation))
 (frame FN_Expectation)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) situationTopic) ((PPFn about) situationTopic))
   (:GAP (INI subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Prediction-TheWord
 (and (isa :NOUN MakingAPrediction)) (frame FN_Predicting)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Predisposition-TheWord
 (and (isa :NOUN PurposefulAction)
      (relationExistsInstance
       (Kappa (?actor ?sit) (disposedToPlayRole ?actor ?sit performedBy))
       Agent-Generic :NOUN))
 (frame FN_Inclination) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prednisone-TheWord (and (isa :NOUN Prednisone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Preemption-TheWord
 (and (isa :NOUN Canceling-Declaring-Evaluating))
 (frame FN_Preventing_or_letting) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prefabricated") Home-TheWord
 (and (isa :NOUN ManufacturedHome)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Preferment-TheWord
 (and (isa :NOUN PreferringSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pregnancy-TheWord (and (isa :NOUN Pregnancy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prejudice-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationInstanceExists biases :NOUN CycLSentence-Assertible))
 (frame FN_Partiality) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prejudice-TheWord (and (isa :NOUN Prejudice))
 (frame FN_Partiality) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Preliminary-TheWord
 (and (isa :NOUN PreparingForSituation)) (frame FN_Preliminaries)
 (bindingTemplate
  (TheList (:SUBJECT (Sfin fe_preparatory_act) (NP doneBy fe_preparatory_act))
   (:OBLIQUE-OBJECT (NP fe_preparatory_act) (VPto fe_preparatory_act)
    ((PPFn to) purposeOfEvent) (AJP fe_descriptor purposeOfEvent))
   (:GAP (2nd doneBy) (INI doneBy) (DEN fe_preparatory_act)
    (DNI purposeOfEvent))
   (:NOUN (Sfin fe_preparatory_act))))
 (groupPatterns
  (TheSet ((0 1 0)) ((1 1 0)) ((1 2 0)) ((0 0 0)) ((0 0 0) (1 2 0))
   ((0 1 1) (1 2 0)) ((1 0 0) (1 2 0)) ((1 2 0) (3 0 0))
   ((0 1 1) (1 3 0) (1 3 1)))))

(FNNounSemtrans (TheList) Premier-TheWord (and (isa :NOUN Premier-Title))
 (frame FN_Appellations) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Premier-TheWord
 (and (isa :NOUN Premier-HeadOfGovernment)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT (A fe_governed) (AJP fe_governed) ((PPFn of) fe_governed)
    (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 1) (1 2 0))
   ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Premolar-TheWord (and (isa :NOUN BicuspidTooth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Premonition-TheWord (and (isa :NOUN Expectation))
 (frame FN_Expectation)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) situationTopic))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Preparation-TheWord
 (and (isa :NOUN PreparingForSituation)) (frame FN_Activity_prepare)
 (bindingTemplate
  (TheList (:SUBJECT (NP by-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn for) processTypeForAccomplishmentType))
   (:GAP (CNI doneBy) (INI doneBy))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Prepuce-TheWord (and (isa :NOUN Foreskin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Presage-TheWord (and (isa :NOUN Signal))
 (frame FN_Omen)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_predictive_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn of) fe_future_phenomenon))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Presbyterianism-TheWord
 (and (isa :NOUN PresbyterianReligion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Preschool-TheWord (and (isa :NOUN DayCareCenter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prescription-TheWord
 (and (isa :NOUN Prescription-PIT)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prescription") Drug-TheWord
 (and (isa :NOUN PrescriptionDrug)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Presence-TheWord (and (isa :NOUN Presence))
 (frame FN_Presence)
 (bindingTemplate
  (TheList (:OBJECT (NP objectActedOn) ((PPFn of) objectActedOn))
   (:OBLIQUE-OBJECT (N objectActedOn) ((PPFn of) objectActedOn)
    ((PPFn in) objectFoundInLocation))
   (:GAP (DNI objectFoundInLocation))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 1 0) (1 2 0)) ((1 0 0) (1 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Present-TheWord (and (isa :NOUN Gift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Present-TheWord (and (isa :NOUN BirthdayPresent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Presentation-TheWord (and (isa :NOUN Presentation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Preservation-TheWord
 (and (isa :NOUN (PreventingFn Spoiling))) (frame FN_Preserving)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A objectActedOn) ((PPFn of) objectActedOn))
   (:GAP (INI doneBy stuffUsed)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Preservation-TheWord
 (and (isa :NOUN ProtectingSomething)) (frame FN_Preserving)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A objectActedOn) ((PPFn of) objectActedOn))
   (:GAP (INI doneBy stuffUsed)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Preservative-TheWord
 (and (isa :NOUN Preservative-Food)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "president" "of" "the" "united") States-TheWord
 (and (isa :NOUN UnitedStatesPresident)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) President-TheWord
 (and (isa :NOUN President-HeadOfGovernmentOrHeadOfState))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) President-TheWord
 (and (isa :NOUN PresidentOfOrganization)) (frame FN_Leadership)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) President-TheWord (and (isa :NOUN Chairman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) President-TheWord
 (and (isa :NOUN President-CorporateOfficer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Press-TheWord (and (isa :NOUN (GroupFn Journalist)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Press-TheWord (and (isa :NOUN WaffleMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pressure") Cook-TheWord
 (and (isa :NOUN PressureCooker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pressure") Gauge-TheWord
 (and (isa :NOUN PressureGauge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pressure-TheWord (and (isa :NOUN CoercingAnAgent))
 (frame FN_Attempt_suasion)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBLIQUE-OBJECT ((PPFn upon) recipientOfInfo)
    ((PPFn on) recipientOfInfo topicOfIndividual) (VPto topicOfIndividual)
    (Sforto topicOfIndividual) (VPed fe_degree) ((PPFn from) performedBy)
    (AJP fe_degree fe_manner performedBy) (N performedBy) (A situationTopic)
    ((PPFn for) topicOfIndividual situationTopic) ((PPFn over) situationTopic))
   (:GAP (2nd recipientOfInfo) (INI recipientOfInfo performedBy)
    (DNI recipientOfInfo topicOfIndividual performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 1)) ((3 0 0)) ((0 0 1)) ((1 6 1)) ((1 7 0)) ((1 2 0)) ((1 3 0))
   ((1 1 1)) ((1 5 0)) ((1 1 0)) ((1 5 0) (1 10 0)) ((1 5 0) (1 9 1))
   ((0 0 1) (1 9 1)) ((1 2 0) (1 5 0)) ((1 2 0) (1 7 0)) ((1 1 0) (1 8 0))
   ((1 0 0) (1 6 2)) ((0 0 1) (1 1 0)) ((0 0 0) (1 5 0)) ((1 1 0) (1 2 0))
   ((0 0 0) (1 2 0)) ((1 5 0) (1 6 0) (1 9 1)) ((1 2 0) (1 5 0) (1 6 0))
   ((1 3 0) (1 4 0) (1 5 0)) ((0 0 0) (1 5 0) (1 9 1))
   ((0 0 1) (1 1 0) (1 2 0)) ((0 0 0) (1 2 0) (1 5 0))
   ((1 1 0) (1 6 1) (1 6 2)) ((0 0 1) (1 6 0) (1 9 0))
   ((0 0 0) (1 2 0) (1 6 0)) ((0 0 0) (1 2 0) (1 5 0) (1 8 0)))))

(FNNounSemtrans (TheList) Pressure-TheWord (and (isa :NOUN Pressure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pressure") Unit-TheWord
 (and (isa :NOUN UnitOfPressure)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Presumption-TheWord
 (and (isa :NOUN AwarenessQuantity)) (frame FN_Awareness)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    ((PPFn against) topicOfIndividual) ((PPFn in) topicOfIndividual)
    ((PPFn of) subjectOfMentalSituation topicOfIndividual)
    ((PPingFn against) topicOfIndividual) ((PPingFn of) topicOfIndividual)
    (Sfin topicOfIndividual) ((PPFn about) situationTopic))
   (:GAP (CNI subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 0)) ((0 5 0)) ((0 4 0)) ((0 3 1)) ((0 2 0)) ((0 1 0))
   ((0 6 0) (2 0 0)) ((0 3 1) (2 0 0)) ((0 3 0) (0 6 0)) ((0 0 0) (0 3 1)))))

(FNNounSemtrans (TheList) Prevarication-TheWord
 (and (isa :NOUN PropositionalInformationThing)
      (relationExistsInstance containsInfoPropositional-IBT Lying :NOUN))
 (frame FN_Prevarication)
 (bindingTemplate
  (TheList (:SUBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT ((PPFn of) situationTopic)) (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Prevention-TheWord
 (and (isa :NOUN PreventingFromHappening)) (frame FN_Preventing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prey-TheWord (and (isa :NOUN Prey)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "price") Tag-TheWord (and (isa :NOUN PriceTag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Price-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance basicPrice-Event Buying :NOUN))
 (frame FN_Commerce_scenario)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer seller))
   (:OBLIQUE-OBJECT ((PPFn to) objectOfPossessionTransfer)
    ((PPFn for) objectOfPossessionTransfer)
    ((PPFn on) objectOfPossessionTransfer)
    ((PPingFn on) objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer moneyTransferred)
    (NP objectOfPossessionTransfer moneyTransferred) ((PPFn per) rateOfEvent)
    ((PPFn by) rateOfEvent) (N objectOfPossessionTransfer seller))
   (:GAP (DNI objectOfPossessionTransfer) (DEN moneyTransferred)
    (INI buyer moneyTransferred seller))
   (:GEN (Poss seller))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 1)) ((1 4 1)) ((1 3 0)) ((1 2 0)) ((1 4 0)) ((1 1 0))
   ((0 0 0)) ((1 5 0)) ((1 8 0)) ((0 0 0) (1 7 0)) ((1 7 0) (1 8 0))
   ((1 1 0) (1 5 1)) ((0 0 0) (1 4 1)) ((1 0 0) (1 8 0))
   ((1 4 0) (1 6 0) (1 8 1)))))

(FNNounSemtrans (TheList) Price-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance totalCharge TemporalThing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prickly") Pear-TheWord (and (isa :NOUN PricklyPear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pride-TheWord (and (isa :NOUN Pride)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Priest-TheWord (and (isa :NOUN Priest))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "primarily" "paper") Product-TheWord
 (and (isa :NOUN PrimarilyPaperStationeryProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Primary-TheWord (and (isa :NOUN PrimaryElection))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Primate-TheWord (and (isa :NOUN Primate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prime") Minister-TheWord
 (and (isa :NOUN PrimeMinister-HeadOfGovernment)) (frame FN_Leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed) (AJP fe_descriptor fe_governed)
    (AVP temporallyIntersects) (A fe_governed activeIngredientsOfType))
   (:GAP (DNI fe_governed)
    (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:NOUN (N leadersOfMovement))
   (:APPOSITIVE (N leadersOfMovement) (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 3 1)) ((3 1 0)) ((0 2 0) (3 1 0)) ((0 0 0) (2 0 0))
   ((0 1 1) (2 0 0)) ((0 3 0) (3 1 0)) ((0 0 0) (0 1 0) (3 0 0)))))

(FNNounSemtrans (TheList "prime") Number-TheWord (and (isa :NOUN PrimeNumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prime-TheWord (and (isa :NOUN PrimeNumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prince" "of") Wales-TheWord
 (and (isa :NOUN PrinceOfWales)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prince-TheWord (and (isa :NOUN Prince))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Princess-TheWord (and (isa :NOUN Princess))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Principal-TheWord (and (isa :NOUN Headmaster))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_governed) ((PPFn at) fe_governed)
    ((PPFn in) fe_governed) ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 1 0)) ((1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Principality-TheWord (and (isa :NOUN Monarchy))
 (frame FN_Political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Principle-TheWord
 (and (isa :NOUN EthicsCodeOfConduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Principle-TheWord (and (isa :NOUN PhysicalPrinciple))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "print") Shop-TheWord (and (isa :NOUN PrintShop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Print-TheWord (and (isa :NOUN PrintReproduction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "printed" "circuit") Board-TheWord
 (and (isa :NOUN PrintedCircuitBoard)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Printing-TheWord
 (and (isa :NOUN PrintedStyleOfWriting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prison") Term-TheWord
 (and (isa :NOUN PrisonSentencePunishment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prison-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) objectFoundInLocation)
    ((PPFn outside) objectFoundInLocation)
    (AJP fe_descriptor objectFoundInLocation)
    (N fe_descriptor fe_inmates objectFoundInLocation
     (InverseBinaryPredicateFn nameString) directingAgent)
    (A objectFoundInLocation directingAgent))
   (:GAP (DEN locationOfMaleficiaries))))
 (groupPatterns
  (TheSet ((0 3 4)) ((0 4 1)) ((0 3 3)) ((0 3 2)) ((0 4 0)) ((0 3 1))
   ((0 3 2) (0 3 4)) ((0 2 1) (0 3 3)) ((0 1 0) (0 3 1)) ((0 0 0) (0 3 1))
   ((0 3 1) (0 3 2)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList "prisoner" "s") Base-TheWord
 (and (isa :NOUN PrisonersBase)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "private" "business" "exchange") Telephone-TheWord
 (and (isa :NOUN PBXCapableTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "private") Eye-TheWord (and (isa :NOUN Detective))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "private") Investigator-TheWord
 (and (isa :NOUN Detective)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prizefighter-TheWord (and (isa :NOUN Prizefighter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pro-TheWord (and (isa :NOUN Professional))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent)) (:OBLIQUE-OBJECT (N hasSkill))
   (:GAP (DEN affectedAgent) (DNI hasSkill) (INI hasSkill))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Probability-TheWord
 (and (isa :NOUN Likelihood-QuantityType)) (frame FN_Likelihood)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_hypothetical_event))
   (:OBLIQUE-OBJECT ((PPFn in) situationConstituents) (NP fe_degree)
    (AJP fe_degree (InverseBinaryPredicateFn explains-Generic))
    ((PPFn of) fe_hypothetical_event) (Sfin fe_hypothetical_event)
    ((PPFn for) fe_hypothetical_event) (Sforto fe_hypothetical_event)
    ((PPingFn of) fe_hypothetical_event) ((PPFn at) temporallyIntersects))
   (:GAP (DNI (InverseBinaryPredicateFn explains-Generic)))
   (:NOUN (Sfin fe_hypothetical_event))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 7 0)) ((1 3 0)) ((1 5 0)) ((3 0 0) (3 0 0))
   ((1 2 1) (1 7 0)) ((1 1 0) (1 6 0)) ((1 1 0) (1 5 0)) ((1 2 0) (1 4 0))
   ((1 0 0) (1 3 0)) ((1 2 0) (1 4 0) (1 8 0)) ((0 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Probability-TheWord
 (and (isa :NOUN ProbabilityInterval)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Probability-TheWord
 (and (isa :NOUN Probability-QuantityType)) (frame FN_Probability)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Probe-TheWord (and (isa :NOUN CriminalInvestigation))
 (frame FN_Criminal_investigation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn into) objectOfInvestigation)
    (N objectOfInvestigation fe_investigator) ((PPFn by) fe_investigator))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Problem-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn fe_situation) (Swhether fe_situation))
   (:OBLIQUE-OBJECT (A fe_domain) ((PPFn by) objectActedOn)
    (Srel objectActedOn)
    (N fe_domain (InverseBinaryPredicateFn explains-Generic))
    (VPto fe_situation) ((PPFn of) fe_situation)
    ((PPFn in) eventOccursAt fe_situation) (NP fe_domain fe_situation)
    ((PPFn for) temporallyIntersects))
   (:GAP (INI objectActedOn) (DEN fe_situation)
    (DNI objectActedOn fe_situation))
   (:GEN (Poss objectActedOn)) (:APPOSITIVE (NP fe_situation))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((1 7 1)) ((4 0 0)) ((1 2 0)) ((1 1 0)) ((1 5 0))
   ((1 3 1)) ((1 0 0)) ((1 7 0)) ((1 3 0)) ((0 0 1) (1 8 0)) ((0 0 0) (1 6 1))
   ((1 4 0) (1 6 0)) ((0 0 0) (1 6 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Problem-TheWord (and (isa :NOUN ProblemToBeSolved))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Proboscis-TheWord
 (and (isa :NOUN Trunk-TheAppendage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Procedure-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N purposeOfEvent))
   (:GAP (INI doneBy) (DNI doneBy by-Underspecified) (DEN by-Underspecified))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Proceeding-TheWord (and (isa :NOUN LegalProceeding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Process-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means) (bindingTemplate (TheList (:GAP (DEN by-Underspecified))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Process-TheWord (and (isa :NOUN StrictlyMentalEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Process-TheWord (and (isa :NOUN ProcessType))
 (frame FN_Process)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_process) (A fe_process)
    (N fe_process) (NP fe_process) ((PPingFn of) fe_process))
   (:GAP (DEN fe_process))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 4 0) (0 5 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "processing") Plant-TheWord (and (isa :NOUN Refinery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Proclamation-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) infoTransferred) (N infoTransferred)
    ((PPFn to) recipientOfInfo infoTransferred) (Sfin infoTransferred)
    (VPing infoTransferred) ((PPFn by) performedBy)
    ((PPFn about) situationTopic))
   (:GAP (CNI performedBy)) (:GEN (Poss genericPathway-Partial performedBy))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 5 0)) ((0 0 0)) ((1 4 0)) ((1 0 0)) ((3 0 0))
   ((1 6 0) (3 0 1)) ((0 0 0) (1 6 0)) ((1 4 0) (3 0 1)) ((1 3 0) (3 0 1))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 1)) ((1 0 0) (3 0 1)) ((0 0 0) (1 1 0))
   ((1 2 0) (3 0 1)) ((1 0 0) (1 2 0)) ((0 0 0) (0 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Proctologist-TheWord (and (isa :NOUN Proctologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Procurement-TheWord
 (and (isa :NOUN GainingUserRights)) (frame FN_Getting)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Produce-TheWord
 (and (isa :NOUN ProduceMarketCategory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Producer-TheWord (and (isa :NOUN Producer-Movie))
 (frame FN_Behind_the_scenes)
 (bindingTemplate
  (TheList (:SUBJECT (NP ibtCreator fe_studio))
   (:OBLIQUE-OBJECT (A (InverseBinaryPredicateFn citizens))
    ((PPFn of) fe_production) ((PPFn for) fe_production)
    ((PPFn on) fe_production) ((PPFn at) fe_studio)
    (AJP (InverseBinaryPredicateFn citizens) activeIngredientsOfType)
    (N genericPathway-Partial fe_production activeIngredientsOfType))
   (:GAP (2nd ibtCreator) (DEN ibtCreator))
   (:GEN (Poss (InverseBinaryPredicateFn citizens) fe_production))
   (:APPOSITIVE (NP ibtCreator))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 5 1)) ((3 0 1)) ((1 3 0)) ((1 1 0)) ((1 2 0)) ((1 6 1))
   ((1 5 0)) ((1 6 0)) ((1 6 1) (1 6 2)) ((0 0 0) (1 4 0)) ((0 0 1) (1 1 0))
   ((0 0 0) (3 0 1)) ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0)) ((3 0 1) (4 0 0))
   ((1 1 0) (4 0 0)) ((1 5 0) (1 5 1)) ((1 5 0) (4 0 0)) ((1 5 0) (1 6 0))
   ((0 0 0) (1 6 0)) ((1 6 0) (4 0 0)) ((0 0 1) (1 1 0) (3 0 0))
   ((0 0 0) (1 0 0) (1 1 0)) ((1 6 0) (1 6 2) (4 0 0))
   ((1 5 0) (1 6 0) (4 0 0)))))

(FNNounSemtrans (TheList) Producer-TheWord
 (and (isa :NOUN ManufacturingOrganization)) (frame FN_Manufacturing)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N fe_depictive) (AJP by-Underspecified eventOccursAt)
    ((PPFn of) productsCreated))))
 (groupPatterns (TheSet ((0 0 0) (1 1 0) (1 2 0)) ((1 0 0) (1 1 1) (1 2 0)))))

(FNNounSemtrans (TheList "product") Label-TheWord
 (and (isa :NOUN ProductLabel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Product-TheWord
 (and (isa :NOUN CommutativeRelation)
      (isa :NOUN MathematicalFunctionOnScalars))
 (frame FN_Commutative_statement) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Product-TheWord (and (isa :NOUN Product))
 (frame FN_Manufacturing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_depictive) (AJP purposeOfEvent))
   (:GAP (DNI fe_factory performedBy) (DEN productsCreated))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Production-TheWord
 (and (isa :NOUN CreationEvent)
      (relationInstanceExists doneBy :NOUN SomethingExisting))
 (frame FN_Creating)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) outputsCreated) ((PPFn in) eventOccursAt))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Production-TheWord
 (and (isa :NOUN
       (IntentionallyFn (CollectionIntersection2Fn CreationEvent Action))))
 (frame FN_Intentionally_create)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N outputsCreated) ((PPFn of) outputsCreated))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Production-TheWord
 (and (isa :NOUN Production-Generic)) (frame FN_Manufacturing)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy productsCreated))
   (:OBLIQUE-OBJECT (NP frequencyOfEvent)
    ((PPFn at) situationConstituents fe_factory eventOccursAt)
    ((PPFn in) eventOccursAt) (unknown performedBy) ((PPFn of) productsCreated)
    (AJP fe_manner eventOccursAt productsCreated) ((PPFn on) inputsDestroyed)
    ((PPFn from) inputsDestroyed) (AVP frequencyOfEvent temporallyIntersects)
    ((PPFn for) fe_consumer purposeOfEvent temporallyIntersects)
    (N fe_manner performedBy productsCreated temporallyIntersects))
   (:GAP (CNI performedBy) (INI fe_factory performedBy productsCreated)
    (DNI performedBy productsCreated))
   (:NOUN (N productsCreated)) (:GEN (Poss performedBy productsCreated))))
 (groupPatterns
  (TheSet ((1 5 2)) ((0 0 0)) ((0 0 1)) ((3 0 0)) ((1 10 0)) ((1 5 0))
   ((4 0 1)) ((1 4 0)) ((1 10 2)) ((1 1 1)) ((1 9 0)) ((1 4 0) (1 10 3))
   ((1 9 2) (1 10 2)) ((1 4 0) (1 7 0)) ((0 0 1) (1 8 1)) ((1 3 0) (1 4 0))
   ((1 10 2) (4 0 0)) ((0 0 0) (4 0 1)) ((0 0 0) (1 4 0)) ((1 4 0) (1 10 1))
   ((1 10 1) (1 10 2)) ((1 2 0) (1 10 2)) ((1 1 2) (1 10 2)) ((1 4 0) (1 5 1))
   ((1 6 0) (1 10 0)) ((1 0 0) (1 4 0)) ((1 4 0) (1 8 0)) ((0 0 1) (1 1 1))
   ((0 0 1) (1 1 0)) ((0 0 0) (1 4 0) (1 9 1)) ((1 4 0) (1 9 0) (4 0 0)))))

(FNNounSemtrans (TheList) Production-TheWord (and (isa :NOUN ProductionEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "production") Well-TheWord
 (and (isa :NOUN ProductionWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Profession-TheWord
 (and (isa :NOUN PersonTypeByOccupation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Professional-TheWord
 (and (isa :NOUN PersonWithOccupation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Professor-TheWord (and (isa :NOUN Professor))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventOccursAt instructor))
   (:OBLIQUE-OBJECT (AJP fe_depictive) ((PPFn for) duration)
    ((PPFn at) eventOccursAt) ((PPFn from) duration eventOccursAt)
    ((PPFn of) eventOccursAt (InverseBinaryPredicateFn teacherTypeOfField))
    (N eventOccursAt educationLevel
     (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPingFn of) (InverseBinaryPredicateFn teacherTypeOfField))
    (QUO instructor) (AVP temporallyIntersects)
    ((PPFn in) eventOccursAt eventOccursAt
     (InverseBinaryPredicateFn teacherTypeOfField) temporallyIntersects))
   (:GAP (INI studentOf (InverseBinaryPredicateFn teacherTypeOfField))
    (DNI eventOccursAt educationLevel studentOf
     (InverseBinaryPredicateFn teacherTypeOfField))
    (DEN instructor))
   (:NOUN (N instructor)) (:GEN (Poss eventOccursAt studentOf))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 4 1)) ((1 5 2)) ((1 5 1)) ((1 9 2)) ((3 0 0)) ((0 0 0))
   ((1 9 0)) ((1 3 1)) ((4 0 1)) ((1 0 0)) ((0 0 1) (1 4 1)) ((1 5 2) (4 0 1))
   ((0 0 1) (1 5 1)) ((0 0 1) (1 5 2)) ((0 0 1) (1 2 0)) ((1 4 1) (4 0 0))
   ((0 0 1) (1 9 0)) ((1 2 0) (1 5 2)) ((1 5 0) (1 5 2)) ((0 0 1) (1 5 0))
   ((1 5 2) (4 0 0)) ((1 4 0) (3 0 0)) ((1 2 0) (1 9 2))
   ((1 5 2) (1 7 0) (1 9 0)) ((0 0 1) (1 2 0) (1 9 3))
   ((0 0 1) (1 5 2) (4 0 0)) ((0 0 1) (1 4 1) (1 9 0))
   ((0 0 1) (1 2 0) (1 5 2)) ((0 0 1) (1 5 0) (1 5 2))
   ((0 0 1) (1 2 0) (1 4 1)) ((0 0 1) (1 1 0) (1 2 0))
   ((0 0 1) (1 2 0) (1 6 0) (1 9 3)) ((0 0 1) (1 2 0) (1 4 1) (1 8 0))
   ((0 0 1) (1 2 0) (1 3 0) (1 4 1)))))

(FNNounSemtrans (TheList) Professor-TheWord (and (isa :NOUN Professor))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn at) employer) ((PPFn from) employer)
    (N employer fe_rank activeIngredientsOfType)
    ((PPFn of) activeIngredientsOfType)
    ((PPFn in) employer activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 2)) ((0 0 0)) ((1 4 0)) ((1 2 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 2)) ((1 4 1) (4 0 0)) ((1 2 2) (4 0 0)) ((1 2 1) (4 0 0))
   ((1 2 2) (1 4 0)) ((0 0 0) (1 4 0)) ((1 1 0) (4 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 2 1) (1 3 0)) ((0 0 0) (1 3 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 3 0)) ((0 0 0) (1 0 0) (1 2 2))
   ((1 2 0) (1 2 2) (4 0 0)) ((0 0 0) (1 0 0) (1 2 1))
   ((0 0 0) (1 2 1) (1 2 2) (3 0 0)) ((0 0 0) (1 2 1) (1 3 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 2 1) (1 3 0)) ((0 0 0) (0 0 0) (1 3 0) (1 4 0)))))

(FNNounSemtrans (TheList) Proficiency-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent hasSkill))
   (:OBLIQUE-OBJECT ((PPFn among) affectedAgent) ((PPFn in) hasSkill)
    (AJP hasSkill) (N hasSkill) ((PPFn of) affectedAgent hasSkill)
    ((PPingFn in) hasSkill) ((PPFn as) hasSkill))
   (:GAP (INI affectedAgent) (DNI affectedAgent hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 4 1)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 1)) ((3 0 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 2 0) (3 0 0))
   ((1 2 0) (1 4 0)) ((1 0 0) (1 5 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Profit-TheWord (and (isa :NOUN Profits))
 (frame FN_Earnings_and_losses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) sellingPerformer))
   (:GAP (DNI sellingPerformer) (DEN basicPrice-Event))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Profligacy-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_resource_controller)
    ((PPFn of) fe_resource_controller))
   (:GEN (Poss fe_resource_controller))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Progesterone-TheWord (and (isa :NOUN Progesterone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Progestin-TheWord (and (isa :NOUN Progesterone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Program-TheWord (and (isa :NOUN ComputerProgram-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Program-TheWord
 (and (isa :NOUN EntertainmentPerformance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Program-TheWord (and (isa :NOUN Project))
 (frame FN_Project)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy fe_project topicOfIndividual))
   (:OBLIQUE-OBJECT ((PPFn on) processTypeForAccomplishmentType)
    ((PPFn by) doneBy) ((PPFn with) processTypeForAccomplishmentType doneBy)
    (Srel fe_descriptor) ((PPFn in) fe_field)
    (VPto processTypeForAccomplishmentType to-Generic)
    (AJP doneBy fe_descriptor fe_field fe_manner) (AVP fe_manner)
    ((PPFn for) to-Generic topicOfIndividual)
    (A processTypeForAccomplishmentType doneBy fe_field to-Generic
     topicOfIndividual)
    (N processTypeForAccomplishmentType doneBy duration fe_field to-Generic
     (InverseBinaryPredicateFn nameString) topicOfIndividual)
    ((PPFn of) processTypeForAccomplishmentType doneBy to-Generic
     (InverseBinaryPredicateFn nameString) topicOfIndividual)
    (NP topicOfIndividual))
   (:GAP (DNI processTypeForAccomplishmentType doneBy) (2nd doneBy)
    (INI processTypeForAccomplishmentType doneBy to-Generic)
    (DEN processTypeForAccomplishmentType fe_project))
   (:GEN (Poss doneBy) (NP doneBy))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 0 1)) ((4 0 0)) ((1 6 3)) ((1 5 1)) ((1 10 4)) ((1 9 3))
   ((1 4 0)) ((1 10 3)) ((1 6 2)) ((1 9 4)) ((1 10 6)) ((1 10 5)) ((3 0 0))
   ((1 1 0)) ((1 9 1)) ((1 0 0)) ((1 11 0)) ((1 9 2)) ((1 8 0)) ((1 3 0))
   ((1 10 1)) ((1 10 0)) ((1 10 5) (1 11 3)) ((1 6 3) (1 10 6))
   ((1 6 3) (1 9 4)) ((1 9 3) (1 12 0)) ((1 9 3) (1 10 6)) ((1 6 3) (1 11 2))
   ((1 10 2) (1 11 4)) ((1 8 0) (1 10 2)) ((0 0 2) (3 0 0)) ((1 9 4) (3 0 0))
   ((1 10 6) (3 1 0)) ((1 9 4) (3 1 0)) ((0 0 0) (1 10 6)) ((0 0 0) (1 9 4))
   ((1 6 0) (1 10 6)) ((1 9 1) (1 10 6)) ((1 10 6) (3 0 0)) ((1 10 6) (1 11 1))
   ((1 9 1) (1 9 4)) ((1 10 5) (3 0 0)) ((1 2 1) (1 6 3)) ((0 0 0) (1 7 0))
   ((1 8 0) (3 0 0)) ((1 1 0) (1 5 1)) ((1 5 1) (3 0 0)) ((1 10 4) (3 0 0))
   ((0 0 0) (1 10 4)) ((1 10 1) (1 10 4)) ((1 10 1) (1 10 3))
   ((1 9 2) (1 10 1)) ((1 9 2) (3 0 0)) ((1 8 1) (1 10 0)) ((1 5 1) (1 10 4))
   ((1 4 0) (1 10 0)) ((1 10 0) (1 10 3)) ((1 9 0) (1 9 2)) ((1 11 0) (3 0 0))
   ((1 10 0) (3 0 0)) ((0 0 0) (1 10 0)) ((1 10 0) (1 10 1)) ((1 9 1) (1 10 0))
   ((0 0 0) (1 6 3) (1 10 6)) ((1 6 3) (1 10 6) (3 0 0))
   ((0 0 0) (1 9 3) (1 10 6)) ((0 0 0) (1 10 4) (1 10 6))
   ((0 0 0) (1 6 1) (1 10 6)) ((0 0 0) (1 2 0) (1 9 4))
   ((1 5 0) (1 6 3) (1 9 1)))))

(FNNounSemtrans (TheList) Programmer-TheWord
 (and (isa :NOUN ComputerProgrammer)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "programming") Language-TheWord
 (and (isa :NOUN AbstractProgrammingLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Progress-TheWord
 (and (isa :NOUN Improvement-Transformation)) (frame FN_Progression)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (A fe_domain) (N fe_domain) ((PPFn since) duration)
    ((PPFn of) objectActedOn) ((PPFn on) objectActedOn)
    ((PPFn with) objectActedOn) ((PPFn within) objectActedOn)
    ((PPFn in) duration objectActedOn eventOccursAt)
    ((PPFn toward) fe_post_state) (AVP temporallyIntersects)
    ((PPFn following) temporallyIntersects)
    (AJP fe_degree fe_domain temporallyIntersects))
   (:GAP (2nd situationConstituents objectActedOn) (DNI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 11 2)) ((1 7 2)) ((3 0 0)) ((1 6 0)) ((1 5 0))
   ((1 4 0)) ((1 3 0)) ((1 7 1)) ((0 0 0)) ((1 11 1)) ((1 1 0)) ((1 0 0))
   ((1 11 0)) ((1 8 0) (3 0 0)) ((1 7 0) (3 0 0)) ((1 1 0) (1 7 2))
   ((1 0 0) (1 7 2)) ((1 2 0) (1 7 2) (1 11 0)) ((0 0 0) (1 9 0) (1 10 0)))))

(FNNounSemtrans (TheList "progress") Report-TheWord
 (and (isa :NOUN ProgressReport)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Progression-TheWord
 (and (isa :NOUN AccumulatingSteadily)) (frame FN_Progression)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Progression-TheWord
 (and (isa :NOUN ImprovementEvent)) (frame FN_Progression)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prohibition-TheWord (and (isa :NOUN Prohibition))
 (frame FN_Prohibiting_or_licensing)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_state_of_affairs))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "project") Manager-TheWord
 (and (isa :NOUN ProjectManager)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Project-TheWord (and (isa :NOUN Project))
 (frame FN_Project)
 (bindingTemplate
  (TheList (:SUBJECT (NP topicOfIndividual))
   (:OBLIQUE-OBJECT (VPing processTypeForAccomplishmentType)
    (AJP doneBy fe_descriptor fe_field) (VPto to-Generic)
    (NP (InverseBinaryPredicateFn nameString))
    (N processTypeForAccomplishmentType doneBy fe_field to-Generic
     (InverseBinaryPredicateFn nameString) topicOfIndividual)
    (A fe_descriptor fe_field topicOfIndividual))
   (:GAP (INI doneBy) (DNI fe_field)
    (2nd (InverseBinaryPredicateFn nameString))
    (DEN processTypeForAccomplishmentType fe_project))))
 (groupPatterns
  (TheSet ((1 4 5)) ((1 5 2)) ((1 3 0)) ((1 4 4)) ((1 1 1)) ((1 4 2)) ((1 4 3))
   ((0 0 0) (1 4 3)) ((1 2 0) (1 4 5)) ((1 2 0) (1 4 4)) ((1 1 0) (1 5 1))
   ((1 1 2) (1 4 0)) ((1 0 0) (1 5 0)) ((1 1 1) (1 4 0))
   ((1 2 0) (1 4 1) (1 4 5)))))

(FNNounSemtrans (TheList "projectile" "shell-fixed") Loading-TheWord
 (and (isa :NOUN ProjectileShell-FixedLoading)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projectile") Pierce-TheWord
 (and (isa :NOUN ProjectileShell-Pierce)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projectile" "shell-semi" "fixed") Loading-TheWord
 (and (isa :NOUN ProjectileShell-SemiFixedLoading)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projectile" "shell-separate") Loading-TheWord
 (and (isa :NOUN ProjectileShell-SeparateLoading)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projectile" "shell-spin") Stabilized-TheWord
 (and (isa :NOUN ProjectileShell-SpinStabilized)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projectile") Ball-TheWord
 (and (isa :NOUN ProjectileSlug-Ball)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Projectile-TheWord
 (and (isa :NOUN Projectile-Device)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projection") Device-TheWord
 (and (isa :NOUN ProjectionDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "projection") Television-TheWord
 (and (isa :NOUN ProjectionTelevision)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Projectionist-TheWord
 (and (isa :NOUN MovieProjectionist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Projector-TheWord
 (and (isa :NOUN ProjectionDisplayDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prom-TheWord (and (isa :NOUN Prom)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Promenade-TheWord (and (isa :NOUN Prom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Promenade-TheWord (and (isa :NOUN Proenadem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Promethium-TheWord (and (isa :NOUN Promethium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Promise-TheWord (and (isa :NOUN Promise))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn of) infoTransferred)
    (VPto infoTransferred) ((PPingFn about) infoTransferred)
    (Sfin infoTransferred) ((PPFn by) performedBy) (N performedBy)
    ((PPFn about) situationTopic))
   (:GAP (DNI recipientOfInfo infoTransferred) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 4 0)) ((3 0 0)) ((1 2 0)) ((1 7 0) (3 0 0))
   ((0 0 0) (1 7 0)) ((1 2 0) (3 0 0)) ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 3 0)) ((1 1 0) (1 6 0)) ((1 0 0) (1 2 0)) ((1 0 0) (3 0 0))
   ((1 1 0) (1 5 0)))))

(FNNounSemtrans (TheList) Promise-TheWord
 (and (isa :NOUN (IndirectlyFn Promise))) (frame FN_Omen)
 (bindingTemplate
  (TheList (:OBJECT (Sfin fe_future_phenomenon))
   (:OBLIQUE-OBJECT (AJP fe_future_phenomenon))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Promontory-TheWord (and (isa :NOUN Promontory))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Promotion-TheWord (and (isa :NOUN PromotingSomeone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "promotional") Item-TheWord
 (and (isa :NOUN PromotionalProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Promulgation-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pronoun-TheWord (and (isa :NOUN Pronoun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pronouncement-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy situationTopic))
   (:OBLIQUE-OBJECT (Sfin infoTransferred) ((PPFn by) performedBy)
    ((PPFn from) performedBy) ((PPFn of) infoTransferred performedBy)
    ((PPFn about) situationTopic)
    (AJP recipientOfInfo fe_manner situationTopic) ((PPFn on) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((0 0 1)) ((2 0 0)) ((1 3 1)) ((1 2 0)) ((1 1 0))
   ((0 0 0)) ((1 3 0)) ((1 5 0)) ((1 6 0) (2 0 0)) ((0 0 1) (2 0 0))
   ((1 3 1) (1 6 0)) ((1 3 1) (1 5 2)) ((0 0 0) (1 4 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 5 1)))))

(FNNounSemtrans (TheList) Proof-TheWord (and (isa :NOUN Evidence-Indication))
 (frame FN_Evidence)
 (bindingTemplate
  (TheList (:OBJECT ((PPFn of) fe_proposition))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) fe_proposition))
   (:GAP (DEN fe_support))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Prop-TheWord (and (isa :NOUN StageProp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Propane-TheWord (and (isa :NOUN Propane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "propeller") Plane-TheWord
 (and (isa :NOUN PropellerDrivenAirplane)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "proper") Noun-TheWord
 (and (isa :NOUN ProperCountNoun)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Property-TheWord
 (and (isa :NOUN GeographicalRegion)
      (relationExistsInstance owns IntelligentAgent :NOUN))
 (frame FN_Locale_by_ownership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Property-TheWord
 (and (isa :NOUN AttributeCharacteristicOfAnEntity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Property-TheWord (and (isa :NOUN Property))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner))
   (:OBLIQUE-OBJECT (A owner) (AJP owner) (N owner) ((PPFn of) owner))
   (:GAP (DNI owner) (INI owner) (DEN owns)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((0 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Prophecy-TheWord (and (isa :NOUN MakingAPrediction))
 (frame FN_Predicting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_eventuality) (N fe_eventuality performedBy)
    (AJP fe_descriptor temporallyIntersects))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 1 1)) ((0 0 0)) ((0 2 0)) ((0 1 0) (0 2 1))
   ((0 0 0) (1 0 0)) ((0 2 0) (1 0 0)))))

(FNNounSemtrans (TheList) Prophet-TheWord (and (isa :NOUN Prophet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Proposal-TheWord (and (isa :NOUN Proposal))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn through) genericPathway-Partial)
    ((PPFn for) infoTransferred) (VPto recipientOfInfo infoTransferred)
    (Sfin infoTransferred) (Srel infoTransferred) ((PPFn by) performedBy)
    (AJP fe_manner performedBy) ((PPFn from) performedBy)
    ((PPFn after) temporallyIntersects) ((PPFn on) temporallyIntersects)
    (AVP temporallyIntersects) (NP temporallyIntersects)
    (N infoTransferred situationTopic) ((PPFn about) situationTopic))
   (:GAP (INI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 0)) ((1 5 0)) ((1 12 0)) ((1 3 0)) ((1 1 0))
   ((0 0 0) (1 13 0)) ((0 0 0) (1 8 0)) ((0 0 0) (1 11 0)) ((1 2 1) (3 0 0))
   ((1 2 1) (1 5 0)) ((0 0 0) (1 2 1)) ((1 2 1) (1 6 1)) ((1 4 0) (3 0 0))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 5 0)) ((1 1 0) (1 6 1)) ((1 2 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0) (1 1 0)) ((0 0 0) (1 6 0) (1 10 0))
   ((1 2 1) (1 5 0) (1 6 0)) ((0 0 0) (1 1 0) (1 6 0))
   ((0 0 0) (1 2 0) (1 12 1)) ((0 0 0) (1 2 0) (1 9 0))
   ((0 0 0) (1 2 0) (1 8 0)) ((0 0 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Proposition-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial) (Sfin infoTransferred)
    ((PPFn for) recipientOfInfo infoTransferred) ((PPFn about) situationTopic)
    ((PPFn concerning) situationTopic)
    ((PPFn of) genericPathway-Partial infoTransferred performedBy
     situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 5 3)) ((1 4 0)) ((1 3 0)) ((1 5 2)) ((1 1 0)) ((1 5 1)) ((1 0 0))
   ((1 2 0)) ((1 3 0) (2 0 0)) ((0 0 0) (1 1 0)) ((1 2 1) (2 0 0))
   ((1 1 0) (1 5 0)) ((1 1 0) (1 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "propositional") Logic-TheWord
 (and (isa :NOUN PropositionalLogic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prosperity-TheWord (and (isa :NOUN GainingInWealth))
 (frame FN_Thriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt))
   (:GAP (DEN objectActedOn) (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((3 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Prosperity-TheWord (and (isa :NOUN GrowthEvent))
 (frame FN_Thriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt))
   (:GAP (DEN objectActedOn) (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((3 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "prostate") Gland-TheWord (and (isa :NOUN Prostate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prostitute-TheWord (and (isa :NOUN Prostitute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prostitution-TheWord (and (isa :NOUN Prostitution))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protactinium-TheWord (and (isa :NOUN Protactinium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protection-TheWord
 (and (isa :NOUN ProtectingSomething)) (frame FN_Protecting)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protective") Covering-TheWord
 (and (isa :NOUN Cover-Protector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protective") Garment-TheWord
 (and (isa :NOUN ProtectiveAttire)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protective" "human") Equipment-TheWord
 (and (isa :NOUN ProtectiveEquipment-Human)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protective") System-TheWord
 (and (isa :NOUN ProtectiveSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protectorate-TheWord (and (isa :NOUN Protectorate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protege-TheWord (and (isa :NOUN Teaching))
 (frame FN_Education_teaching) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protein") Molecule-TheWord
 (and (isa :NOUN ProteinMolecule)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protein") Synthesis-TheWord
 (and (isa :NOUN (BiochemicalSynthesisFn ProteinMolecule))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protein-TheWord (and (isa :NOUN ProteinStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Proterozoic-TheWord
 (and (isa :NOUN Proterozoic-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protestant-TheWord (and (isa :NOUN ProtestantPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protest") March-TheWord
 (and (isa :NOUN ProtestMarch)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "protestant") Denomination-TheWord
 (and (isa :NOUN ProtestantReligion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protocol-TheWord (and (isa :NOUN Law)) (frame FN_Law)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)) (NP startingDate)
    (AJP activeIngredientsOfType))
   (:GAP (2nd fe_law) (DEN fe_law))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Proton-TheWord (and (isa :NOUN Proton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protoplasm-TheWord (and (isa :NOUN Protoplasm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protozoa-TheWord (and (isa :NOUN Protozoan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Protozoan-TheWord (and (isa :NOUN Protozoan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Province-TheWord (and (isa :NOUN Province))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Provision-TheWord
 (and (isa :NOUN (MakingAvailableFn Provisions))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Provision-TheWord (and (isa :NOUN Provisions))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Provision-TheWord (and (isa :NOUN GivingSomething))
 (frame FN_Supply) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Provision-TheWord (and (isa :NOUN AgreementLineItem))
 (frame FN_Terms_of_agreement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) fe_requirements))
   (:GAP (DNI outputsCreated)
    (INI fe_desired_state_of_affairs fe_party fe_regulated_entity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Provision-TheWord
 (and (isa :NOUN Obligation)
      (relationExistsInstance obligationsCreated Agreement :NOUN))
 (frame FN_Terms_of_agreement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) fe_requirements))
   (:GAP (DNI outputsCreated)
    (INI fe_desired_state_of_affairs fe_party fe_regulated_entity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Prowess-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP hasSkill))
   (:OBLIQUE-OBJECT ((PPFn of) affectedAgent) ((PPFn in) hasSkill)
    ((PPFn at) hasSkill) (AJP fe_focal_participant fe_knowledge hasSkill)
    (N hasSkill)
    ((PPFn as) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)) hasSkill)
    ((PPFn with) fe_focal_participant hasSkill)
    ((PPingFn at) fe_focal_participant hasSkill) ((PPingFn in) hasSkill)
    (A hasSkill))
   (:GAP (DNI affectedAgent) (INI affectedAgent hasSkill) (2nd hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 9 0)) ((3 0 0)) ((1 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0))
   ((1 8 0) (3 0 0)) ((1 7 1) (3 0 0)) ((1 6 1) (3 0 0)) ((1 2 0) (3 0 0))
   ((1 5 1) (3 0 0)) ((1 4 0) (3 0 0)) ((1 3 2) (3 0 0)) ((1 5 0) (3 0 0))
   ((1 3 1) (3 0 0)) ((1 7 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 3 0) (3 0 0)))))

(FNNounSemtrans (TheList "proxy") Server-TheWord
 (and (isa :NOUN ProxyServer-Network)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Proxy-TheWord (and (isa :NOUN Intermediary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "prudhoe") Bay-TheWord (and (isa :NOUN PrudhoeBay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prune-TheWord (and (isa :NOUN Prune)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pruning") Saw-TheWord (and (isa :NOUN PruningSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pruning") Shears-TheWord
 (and (isa :NOUN PruningShears)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pseudonym-TheWord
 (and (isa :NOUN ProperNameString)
      (relationExistsInstance pseudonym Agent-Generic :NOUN))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT
    ((PPFn of) objectActedOn (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:NOUN (N (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 0 1)) ((3 0 0)) ((3 0 0) (4 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Psilocybin-TheWord (and (isa :NOUN Psilocybin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psoriasis-TheWord (and (isa :NOUN Psoriasis))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychiatrist-TheWord (and (isa :NOUN Psychiatrist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychiatry-TheWord (and (isa :NOUN Psychiatry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "psychic") Phenomena-TheWord
 (and (isa :NOUN ParanormalEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "psychoactive") Drug-TheWord
 (and (isa :NOUN PsychoactiveAgent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychoanalysis-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychoanalyst-TheWord
 (and (isa :NOUN Doctor-Medical)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psycholinguistics-TheWord
 (and (isa :NOUN Psycholinguistics)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "psychological") Feature-TheWord
 (and (isa :NOUN MentalSituation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "psychological") Test-TheWord
 (and (isa :NOUN PsychologicalTesting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychologist-TheWord (and (isa :NOUN Psychologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychology-TheWord (and (isa :NOUN Psychology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychometry-TheWord (and (isa :NOUN Psychometrics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychotherapist-TheWord
 (and (isa :NOUN Psychotherapist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Psychotherapy-TheWord
 (and (isa :NOUN PsychologicalTherapy)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pub-TheWord (and (isa :NOUN BarBuilding))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Pub-TheWord (and (isa :NOUN Bar-Place))
 (frame FN_Locale_by_use) (bindingTemplate (TheList (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puberty-TheWord (and (isa :NOUN Puberty))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pubic") Hair-TheWord (and (isa :NOUN PubicHair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pubis-TheWord (and (isa :NOUN PubicBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "public" "address") System-TheWord
 (and (isa :NOUN PublicAddressSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "public") Speaking-TheWord
 (and (isa :NOUN PublicSpeaking)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "public") Toilet-TheWord
 (and (isa :NOUN PublicRestroom)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Publication-TheWord
 (and (isa :NOUN PublishedMaterial)) (frame FN_Publishing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Publication-TheWord
 (and (isa :NOUN PublishedConceptualWork)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_genre) ((PPFn in) startingDate)
    ((PPFn from) startingDate))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Publicist-TheWord (and (isa :NOUN Publicist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Publisher-TheWord (and (isa :NOUN PublishingCompany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puce-TheWord (and (isa :NOUN Color)) (frame FN_Color)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puck-TheWord (and (isa :NOUN HockeyPuck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pudding-TheWord (and (isa :NOUN Pudding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puddle-TheWord (and (isa :NOUN Puddle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pueblo-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "puerto") Rican-TheWord
 (and (isa :NOUN PuertoRicanPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puffin-TheWord (and (isa :NOUN Puffin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pug-TheWord (and (isa :NOUN Pug-TheDog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pula-TheWord (and (isa :NOUN Pula-Botswana))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pull-Out-TheWord
 (and (isa :NOUN WithdrawingFromCombat)) (frame FN_Withdraw_from_participation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_organization) ((PPFn from) fe_organization)
    ((PPFn of) doneBy) ((PPFn by) doneBy))
   (:GAP (DNI processTypeForAccomplishmentType doneBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList "pull") Saw-TheWord (and (isa :NOUN Backsaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pull-TheWord (and (isa :NOUN PullingAnObject))
 (frame FN_Manipulation)
 (bindingTemplate (TheList (:GAP (INI objectActedOn)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Pull-TheWord (and (isa :NOUN SocialPower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pulley-TheWord (and (isa :NOUN Pulley))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pullover-TheWord (and (isa :NOUN Sweater-Pullover))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle)
    ((PPFn with) fe_descriptor subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 0 2)) ((0 1 1)) ((0 0 0)) ((0 0 2) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 2 1)) ((0 0 0) (0 1 2)) ((0 0 0) (0 0 2))
   ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 1 2) (0 1 2)) ((0 0 1) (0 0 2) (0 2 0))
   ((0 0 0) (0 0 0) (0 0 2)) ((0 0 0) (0 0 2) (0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList "pulmonary") Artery-TheWord
 (and (isa :NOUN PulmonaryArtery-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pulmonary") Artery-TheWord
 (and (isa :NOUN PulmonaryArtery-Main)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pulmonary") Trunk-TheWord
 (and (isa :NOUN PulmonaryTrunk)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pulmonary") Valve-TheWord
 (and (isa :NOUN PulmonaryValve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pulmonary") Vein-TheWord
 (and (isa :NOUN PulmonaryVein-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pulmonic") Valve-TheWord
 (and (isa :NOUN PulmonaryValve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pulse-TheWord
 (and (isa :NOUN IntegerExtent)
      (relationExistsInstance pulseRate Animal :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pulse-TheWord (and (isa :NOUN Heartbeating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pulverization-TheWord
 (and (isa :NOUN PulverizationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pump-TheWord (and (isa :NOUN Pump-Mechanical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pump-TheWord (and (isa :NOUN Pump-TheShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pumpkin") Pie-TheWord (and (isa :NOUN PumpkinPie))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pumpkin") Pie-TheWord (and (isa :NOUN PumpkinPie))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pumpkin") Plant-TheWord
 (and (isa :NOUN PumpkinPlant)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pumpkin-TheWord (and (isa :NOUN Pumpkin-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pumpkin-TheWord (and (isa :NOUN PumpkinPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pumpkin-TheWord
 (and (isa :NOUN (FruitFn PumpkinPlant))) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "punch") Bowl-TheWord (and (isa :NOUN Bowl-Serving))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punch-TheWord (and (isa :NOUN Punch-TheTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punctuality-TheWord
 (and (isa :NOUN Event) (isa ?modal UnaryModalOperator)
      (?modal (endingPoint ?act ?intended-time))
      (endingPoint :NOUN ?actual-time)
      (isa ?rel ComplexTemporalPredicate-BasePartition)
      (?rel ?actual-time ?intended-time))
 (frame FN_Relative_time) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punctuation-TheWord (and (isa :NOUN PunctuationMark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punishment_Act-TheWord (and (isa :NOUN Punishment))
 (frame FN_Rewards_and_punishments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punishment_Act-TheWord (and (isa :NOUN Reward))
 (frame FN_Rewards_and_punishments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punishment_Penalty-TheWord
 (and (isa :NOUN Punishment)) (frame FN_Rewards_and_punishments)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Punishment_Penalty-TheWord (and (isa :NOUN Reward))
 (frame FN_Rewards_and_punishments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pupa-TheWord (and (isa :NOUN Pupa)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pupil-TheWord (and (isa :NOUN Pupil-EyePart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:GAP (DEN actorPartsInvolved))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Pupil-TheWord (and (isa :NOUN Student))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP studentOf instructor))
   (:OBLIQUE-OBJECT (A educationLevel) (AJP educationLevel)
    ((PPFn at) eventOccursAt educationLevel)
    ((PPFn from) eventOccursAt educationLevel)
    (N eventOccursAt educationLevel
     (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn in) eventOccursAt educationLevel
     (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn of) eventOccursAt instructor) ((PPFn under) instructor))
   (:GAP (DEN studentOf) (DNI eventOccursAt instructor)) (:NOUN (N studentOf))
   (:GEN (Poss eventOccursAt instructor))))
 (groupPatterns
  (TheSet ((4 0 1)) ((1 6 1)) ((0 0 1)) ((1 5 2)) ((0 0 0)) ((1 5 1)) ((1 3 1))
   ((1 2 1)) ((1 1 0)) ((1 0 0)) ((1 4 1)) ((4 0 0)) ((1 6 0)) ((1 5 0))
   ((1 3 0)) ((1 2 0)) ((1 4 0)) ((1 4 1) (4 0 1)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 6 1)) ((1 3 0) (1 4 1)) ((1 2 0) (1 4 1))
   ((1 4 2) (3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Puppet-TheWord (and (isa :NOUN Puppet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puppy-TheWord (and (isa :NOUN (JuvenileFn Dog)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Purchase-TheWord (and (isa :NOUN Buying))
 (frame FN_Commerce_buy) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Purchaser-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance buyer MonetaryExchangeOfUserRights :NOUN))
 (frame FN_Commerce_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pure" "imaginary") Number-TheWord
 (and (isa :NOUN ImaginaryNumber)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pure") Mathematics-TheWord
 (and (isa :NOUN PureMathematics)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puree-TheWord (and (isa :NOUN Puree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Purgative-TheWord (and (isa :NOUN Laxative))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Purge-TheWord (and (isa :NOUN RemovingSomething))
 (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) (AJP fe_manner from-Generic)
    (N doneBy from-Generic) ((PPFn from) from-Generic)
    ((PPFn of) from-Generic objectRemoved) ((PPFn on) objectRemoved)
    (Sfin objectRemoved))
   (:GAP (CNI doneBy) (DNI from-Generic objectRemoved)
    (INI doneBy objectRemoved))
   (:GEN (Poss doneBy from-Generic objectRemoved))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 2 0)) ((2 0 1)) ((0 4 0)) ((0 2 1)) ((2 0 2)) ((0 5 0))
   ((0 4 1)) ((0 1 1)) ((0 2 1) (2 0 0)) ((0 5 0) (2 0 0)) ((0 3 0) (0 4 1))
   ((0 1 0) (0 4 0)) ((0 1 0) (0 4 1)) ((0 3 0) (0 4 1) (0 6 0)))))

(FNNounSemtrans (TheList) Purple-TheWord (and (isa :NOUN PurpleColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Purpose-TheWord
 (and (isa :NOUN NormativeSpecification)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Purpose-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP to-Generic by-Underspecified))
   (:OBJECT (Poss performedBy) ((PPFn of) to-Generic))
   (:OBLIQUE-OBJECT ((PPFn outside) fe_domain) (N fe_domain to-Generic)
    ((PPingFn of) to-Generic) (VPto to-Generic) (A fe_attribute to-Generic)
    ((PPFn as) to-Generic) (AJP to-Generic by-Underspecified)
    ((PPingFn by) by-Underspecified)
    ((PPFn of) performedBy to-Generic by-Underspecified)
    (NP to-Generic by-Underspecified))
   (:GAP (DNI performedBy fe_attribute) (CNI performedBy to-Generic)
    (INI performedBy to-Generic) (DEN to-Generic))
   (:NOUN (N to-Generic by-Underspecified) (Sfin by-Underspecified)
    (VPto by-Underspecified) (VPfin by-Underspecified)
    (VPing by-Underspecified))
   (:GEN (Poss performedBy by-Underspecified))))
 (groupPatterns
  (TheSet ((0 0 1)) ((1 1 0)) ((2 8 1)) ((2 5 0)) ((0 0 0)) ((2 9 0)) ((2 1 0))
   ((5 0 1)) ((2 6 1)) ((5 0 0)) ((2 6 0)) ((2 1 1)) ((2 4 0)) ((1 0 0))
   ((2 8 0)) ((2 3 0) (4 4 0)) ((2 3 0) (5 0 1)) ((2 3 0) (2 8 2))
   ((2 2 0) (4 3 0)) ((0 0 1) (2 2 0)) ((2 8 1) (4 3 0)) ((0 0 1) (2 8 1))
   ((0 0 0) (2 8 2)) ((2 8 2) (2 9 0)) ((0 0 1) (2 9 0)) ((2 9 0) (2 9 1))
   ((2 8 2) (4 0 0)) ((0 0 1) (2 1 1)) ((2 1 1) (4 2 0)) ((2 1 1) (4 1 0))
   ((2 1 1) (4 0 1)) ((2 4 1) (4 0 1)) ((2 0 0) (2 9 0)) ((2 3 0) (5 0 0))
   ((2 2 0) (5 0 0)) ((0 0 1) (0 0 1) (2 3 0)) ((2 3 0) (2 3 0) (2 8 2))
   ((2 3 0) (2 4 1) (2 7 0)))))

(FNNounSemtrans (TheList) Purr-TheWord (and (isa :NOUN PurringSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) (Sfin fe_manner) ((PPFn of) emitter)
    ((PPingFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((0 0 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 1 0))
   ((1 0 0) (1 0 0) (2 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Purse-TheWord (and (isa :NOUN Purse))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) containedObject) (N mainConstituent)
    ((PPFn of) containedObject mainConstituent))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Pursuer-TheWord (and (isa :NOUN Event))
 (frame FN_Cotheme)
 (bindingTemplate
  (TheList (:SUBJECT (NP accompaniedBy performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) accompaniedBy) (AJP distanceTranslated))
   (:GAP (DNI accompaniedBy) (DEN performedBy)) (:GEN (Poss accompaniedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0)) ((0 0 1) (1 0 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Pursuit-TheWord (and (isa :NOUN CorruptingSomeone))
 (frame FN_Cotheme)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) situationLocation) ((PPFn of) accompaniedBy)
    (VPing fe_depictive) (AJP distanceTranslated fe_manner)
    ((PPFn across) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) from-Generic) ((PPFn by) performedBy) (N performedBy))
   (:GAP (INI accompaniedBy to-Generic performedBy) (DEN performedBy)
    (DNI accompaniedBy performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 0)) ((0 0 0)) ((1 8 0)) ((1 4 0)) ((1 1 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 7 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 6 0)) ((1 3 1) (1 7 0)) ((0 0 0) (1 3 1)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 1))
   ((1 0 0) (1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Pursuit-TheWord (and (isa :NOUN Following))
 (frame FN_Cotheme)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) situationLocation) ((PPFn of) accompaniedBy)
    (VPing fe_depictive) (AJP distanceTranslated fe_manner)
    ((PPFn across) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) from-Generic) ((PPFn by) performedBy) (N performedBy))
   (:GAP (INI accompaniedBy to-Generic performedBy) (DEN performedBy)
    (DNI accompaniedBy performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 0)) ((0 0 0)) ((1 8 0)) ((1 4 0)) ((1 1 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 7 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 6 0)) ((1 3 1) (1 7 0)) ((0 0 0) (1 3 1)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 1))
   ((1 0 0) (1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Pursuit-TheWord (and (isa :NOUN PursuingAnEnemy))
 (frame FN_Cotheme)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) situationLocation) ((PPFn of) accompaniedBy)
    (VPing fe_depictive) (AJP distanceTranslated fe_manner)
    ((PPFn across) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) from-Generic) ((PPFn by) performedBy) (N performedBy))
   (:GAP (INI accompaniedBy to-Generic performedBy) (DEN performedBy)
    (DNI accompaniedBy performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 0)) ((0 0 0)) ((1 8 0)) ((1 4 0)) ((1 1 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 7 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 6 0)) ((1 3 1) (1 7 0)) ((0 0 0) (1 3 1)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 1))
   ((1 0 0) (1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Pursuit-TheWord (and (isa :NOUN Pursuit))
 (frame FN_Cotheme)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) situationLocation) ((PPFn of) accompaniedBy)
    (VPing fe_depictive) (AJP distanceTranslated fe_manner)
    ((PPFn across) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) from-Generic) ((PPFn by) performedBy) (N performedBy))
   (:GAP (INI accompaniedBy to-Generic performedBy) (DEN performedBy)
    (DNI accompaniedBy performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 0)) ((0 0 0)) ((1 8 0)) ((1 4 0)) ((1 1 0))
   ((1 5 0) (3 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 7 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 6 0)) ((1 3 1) (1 7 0)) ((0 0 0) (1 3 1)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 1))
   ((1 0 0) (1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList) Pursuit-TheWord
 (and (isa :NOUN (AttemptingFn AchievingSomething)))
 (frame FN_Seeking_to_achieve)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectSought fe_state_of_affairs))
   (:GAP (INI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Pus-TheWord (and (isa :NOUN Pus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "push") Cart-TheWord (and (isa :NOUN PushCart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Push-TheWord (and (isa :NOUN CoercingAnAgent))
 (frame FN_Attempt) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Push-TheWord
 (and (isa :NOUN
       (CausingFn
        (CollectionSubsetFn IntrinsicStateChangeEvent
         (TheSetOf ?chg
          (and (objectOfStateChange ?chg ?obj) (fromState ?obj ?from-st)
               (isa ?from-st GenericQuantity) (toState ?obj ?to-st)
               (isa ?to-st GenericQuantity) (different ?from-st ?to-st)))))))
 (frame FN_Cause_change_of_position_on_a_scale) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pushover-TheWord
 (and (isa :NOUN Person) (agentCoerced ?CoercingAnAgent1 :NOUN)
      (isa ?CoercingAnAgent1 CoercingAnAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pustule-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn in) fe_descriptor) (VPing fe_descriptor))
   (:GAP (DEN markCreated))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 1 0)) ((0 2 0) (0 3 0)) ((0 1 0) (0 2 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Putter-TheWord (and (isa :NOUN Putter-GolfClub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "puzzle") Piece-TheWord
 (and (isa :NOUN SeparatePhysicalPartOfObject)
      (relationExistsInstance JigsawPuzzle nil :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Puzzle-TheWord (and (isa :NOUN Puzzle-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pvc") Pipe-TheWord (and (isa :NOUN PVCPipe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pvc-TheWord (and (isa :NOUN PolyvinylChloride))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pyelonephritis-TheWord
 (and (isa :NOUN Pyelonephritis)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pyjama-TheWord (and (isa :NOUN Pajamas))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle) ((PPFn with) subRegions)
    (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 0 0)) ((0 2 1) (2 0 0)) ((0 2 1) (0 2 2))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 0 1)) ((0 2 0) (0 2 1) (2 0 0))
   ((0 0 0) (0 0 1) (0 2 1)) ((0 0 0) (0 1 0) (0 2 1) (2 0 0))
   ((0 0 0) (0 0 0) (0 2 1) (2 0 0)))))

(FNNounSemtrans (TheList) Pylon-TheWord (and (isa :NOUN PowerLineTower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pylon-TheWord (and (isa :NOUN Pylon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pyloric") Vein-TheWord
 (and (isa :NOUN RightGastricVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pyramid-TheWord (and (isa :NOUN PyramidMonument))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pyramid-TheWord (and (isa :NOUN Pyramid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "pyrotechnic") Device-TheWord
 (and (isa :NOUN PyrotechnicDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Python-TheWord (and (isa :NOUN Python))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "qatari") Riyal-TheWord (and (isa :NOUN Riyal-Qatar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Qatari-TheWord (and (isa :NOUN QatarPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quack-TheWord (and (isa :NOUN QuackingSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (NP fe_component_sound) (AJP fe_component_sound fe_manner)
    ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 1)) ((0 0 0) (1 1 1)) ((1 1 0) (2 0 0))
   ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList) Quadriceps-TheWord (and (isa :NOUN Quadriceps))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quadrilateral-TheWord (and (isa :NOUN Quadrilateral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quake-TheWord
 (and (isa :NOUN MovementEvent) (not (isa :NOUN Translocation)))
 (frame FN_Moving_in_place) (bindingTemplate (TheList (:GAP (INI doneBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quality-TheWord (and (isa :NOUN LevelOfQuality))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quality-TheWord (and (isa :NOUN Quality))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quantity-TheWord (and (isa :NOUN ScalarInterval))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quantity-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject)
    (AJP fe_q_prop fe_quantity))
   (:GAP (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 1)) ((0 0 1) (0 1 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Quantity-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantity)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) objectActedOn fe_value))
   (:GAP (DNI objectActedOn) (DEN fe_quantity) (INI fe_value))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Quarantine-TheWord (and (isa :NOUN Quarantine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quarrel-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) (AJP fe_arguers)
    ((PPFn among) fe_arguers) ((PPFn between) fe_arguers)
    ((PPFn of) fe_arguer1 fe_arguers) (NP fe_arguer2 fe_arguers fe_issue)
    ((PPFn about) fe_issue) ((PPFn over) fe_issue) (Sfin fe_issue))
   (:GEN (Poss fe_arguer1))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 5 2)) ((1 4 1)) ((1 3 0)) ((1 2 0)) ((0 0 0))
   ((1 5 1)) ((1 1 0)) ((1 0 0)) ((1 5 0)) ((0 0 0) (1 6 0)) ((1 5 0) (1 5 2))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 4 0)) ((1 5 0) (1 5 2) (2 0 0)))))

(FNNounSemtrans (TheList) Quart-TheWord (and (isa :NOUN Quart-US))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP measurementResult)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Quarter-TheWord (and (isa :NOUN FiscalQuarter))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time))
   (:GAP (DEN fe_unit) (INI (InverseBinaryPredicateFn parts))
    (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Quarter-TheWord (and (isa :NOUN AcademicQuarter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quarter-TheWord (and (isa :NOUN QuarterCoin-US))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quarter-TheWord (and (isa :NOUN QuartersDuration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quarter-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Quarterback-TheWord
 (and (isa :NOUN FootballQuarterback)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quarters-TheWord (and (isa :NOUN Dormitory))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quartet-TheWord
 (and (isa :NOUN Quartet-MusicalPerformanceGroup)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_individuals) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Quartz-TheWord (and (isa :NOUN Quartz))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quarry-TheWord (and (isa :NOUN Quarry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quasar-TheWord (and (isa :NOUN Quasar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Qubit-TheWord (and (isa :NOUN Qubit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Queasiness-TheWord (and (isa :NOUN UrgeToVomit))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) (N temporallyIntersects))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 1 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Quechua-TheWord
 (and (isa :NOUN EthnicGroupOfQuechua)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Queen-TheWord (and (isa :NOUN Queen))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((3 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Queen-TheWord (and (isa :NOUN Queen-ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Queen-TheWord (and (isa :NOUN Queen-HeadOfState))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Queen-TheWord (and (isa :NOUN Queen-TheCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Queen-TheWord (and (isa :NOUN Queen-WifeOfAKing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Query-TheWord (and (isa :NOUN RequestingInformation))
 (frame FN_Questioning)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPFn by) performedBy)
    ((PPFn from) performedBy) (N performedBy situationTopic)
    ((PPFn about) situationTopic) ((PPFn regarding) situationTopic)
    ((PPFn as) situationTopic) (AJP situationTopic) ((PPFn on) situationTopic))
   (:GAP (CNI performedBy) (DNI situationTopic)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 3 0)) ((1 5 0)) ((1 4 0)) ((1 3 1))
   ((1 0 0)) ((1 5 0) (3 0 0)) ((1 8 0) (3 0 0)) ((1 6 0) (3 0 0))
   ((1 4 0) (3 0 0)) ((1 7 0) (3 0 0)) ((1 2 0) (1 6 0)) ((0 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Quest-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) to-Generic) (VPto to-Generic))
   (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((0 1 0) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "question") Mark-TheWord
 (and (isa :NOUN QuestionMark-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Question-TheWord (and (isa :NOUN Question-IBT))
 (frame FN_Questioning)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) ((PPingFn of) infoTransferred)
    ((PPFn from) performedBy) ((PPFn about) situationTopic)
    ((PPingFn about) situationTopic) ((PPingFn on) situationTopic)
    ((PPFn at) situationTopic) (VPto situationTopic))
   (:GAP (CNI performedBy) (INI recipientOfInfo performedBy)
    (DNI recipientOfInfo infoTransferred situationTopic))))
 (groupPatterns
  (TheSet ((2 5 0)) ((2 4 0)) ((2 3 0)) ((2 0 0)) ((2 2 0)) ((0 0 1))
   ((0 0 1) (2 1 0)) ((0 0 0) (2 3 0)) ((2 2 0) (2 4 0)) ((0 0 1) (2 4 0))
   ((0 0 1) (2 3 0)) ((0 0 1) (2 6 0) (2 7 0)) ((0 0 1) (1 0 0) (2 4 0))
   ((0 0 1) (1 0 0) (2 3 0)))))

(FNNounSemtrans (TheList) Questioning-TheWord
 (and (isa :NOUN RequestingInformation)) (frame FN_Questioning)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) performedBy) (N performedBy)
    ((PPFn by) performedBy) ((PPFn of) recipientOfInfo performedBy)
    ((PPFn about) situationTopic))
   (:GAP (DNI recipientOfInfo) (CNI performedBy))
   (:GEN (Poss recipientOfInfo performedBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((3 0 1)) ((1 4 1)) ((1 3 0)) ((1 2 0))
   ((0 0 0) (1 5 0)) ((1 3 0) (3 0 0)) ((1 0 0) (1 5 0)) ((1 0 0) (3 0 1))
   ((1 0 0) (1 1 0) (1 5 0)) ((1 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Questionnaire-TheWord
 (and (isa :NOUN Questionnaire-CW)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quetzal-TheWord (and (isa :NOUN Quetzal-Guatemala))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quickie-TheWord
 (and (isa :NOUN SexualCopulation) (duration :NOUN ShortTime)) (frame FN_Sex)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quiet-TheWord
 (and (isa :NOUN (BecomingFn (NoAmountFn AcousticNoiseLevel))))
 (frame FN_Becoming_silent)
 (bindingTemplate (TheList (:GAP (CNI performedBy)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quilt-TheWord (and (isa :NOUN Quilt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quinine-TheWord (and (isa :NOUN Quinine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quintet-TheWord (and (isa :NOUN Ensemble))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_individuals) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Quiver-TheWord
 (and (isa :NOUN MovementEvent) (not (isa :NOUN Translocation)))
 (frame FN_Moving_in_place) (bindingTemplate (TheList (:GAP (INI doneBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quorum-TheWord (and (isa :NOUN Quorum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quotation-TheWord (and (isa :NOUN Quotation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quotient-TheWord
 (and (isa :NOUN MathematicalFunctionOnScalars)
      (not (isa :NOUN CommutativeRelation)))
 (frame FN_Non-commutative_statement) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) R-TheWord (and (isa :NOUN RestrictedRating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rabbi-TheWord (and (isa :NOUN Rabbi))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rabbit-TheWord (and (isa :NOUN Rabbit))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raccoon-TheWord (and (isa :NOUN Raccoon-Common))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "race" "car") Driver-TheWord
 (and (isa :NOUN RaceCarDriver)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Race-TheWord (and (isa :NOUN RacingSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Race-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_category) (AJP fe_type_property))
   (:GAP (DNI fe_category) (INI fe_category) (DEN fe_subtype))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Racehorse-TheWord (and (isa :NOUN Racehorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Racer-TheWord (and (isa :NOUN RaceCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "racing") Circuit-TheWord (and (isa :NOUN RaceTrack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rack" "computer") Chassis-TheWord
 (and (isa :NOUN RackComputerChassis)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Racket-TheWord
 (and (isa :NOUN Racket-SportsEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radar") Detector-TheWord
 (and (isa :NOUN RadarDetector-AutomobileAccessory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radar") Reflector-TheWord
 (and (isa :NOUN RadarReflector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radar-TheWord (and (isa :NOUN RadarDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radial-TheWord (and (isa :NOUN RadialTire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radial") Vein-TheWord (and (isa :NOUN RadialVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radian-TheWord (and (isa :NOUN Radian))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radiator") Cap-TheWord (and (isa :NOUN RadiatorCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radiator") Flush-TheWord
 (and (isa :NOUN RadiatorFlush)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radiator") Sealant-TheWord
 (and (isa :NOUN RadiatorSealant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radiator") Tester-TheWord
 (and (isa :NOUN RadiatorTester)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radiator-TheWord
 (and (isa :NOUN Radiator-VehiclePart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radiator") Treatment-TheWord
 (and (isa :NOUN RadiatorTreatment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radical-TheWord (and (isa :NOUN Extremist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radicle-TheWord (and (isa :NOUN Radicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Beacon-TheWord
 (and (isa :NOUN NavigationBeacon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Dish-TheWord (and (isa :NOUN RadioDish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Receiver-TheWord
 (and (isa :NOUN RadioReceiver)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Scanner-TheWord
 (and (isa :NOUN RadioScanner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Show-TheWord (and (isa :NOUN RadioShow-IBT))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Station-TheWord
 (and (isa :NOUN RadioStation-Organization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Telescope-TheWord
 (and (isa :NOUN RadioTelescope)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radio-TheWord (and (isa :NOUN AutomobileRadio))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radio-TheWord (and (isa :NOUN Radio)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radio-TheWord (and (isa :NOUN RadioBroadcasting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radio-TheWord (and (isa :NOUN RadioReceiver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Transmitter-TheWord
 (and (isa :NOUN RadioTransmitter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "radio") Wave-TheWord (and (isa :NOUN RadioWave))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radioactivity-TheWord
 (and (isa :NOUN NuclearProcess)) (frame FN_Nuclear_process)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radiologist-TheWord (and (isa :NOUN Radiologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radiology-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList (:GAP (DEN medicalSpecialty))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radiosonde-TheWord (and (isa :NOUN Radiosonde))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radiotelephone-TheWord
 (and (isa :NOUN CordlessTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radiotherapy-TheWord
 (and (isa :NOUN RadiationTherapy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radish-TheWord (and (isa :NOUN (RootFn RadishPlant)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radish-TheWord (and (isa :NOUN Radish-Foodstuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radish-TheWord (and (isa :NOUN RadishPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radium-TheWord (and (isa :NOUN Radium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radius-TheWord (and (isa :NOUN Radius-Bone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Radon-TheWord (and (isa :NOUN Radon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raffle-TheWord (and (isa :NOUN Lottery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raft-TheWord (and (isa :NOUN Raft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raft-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Rafter-TheWord (and (isa :NOUN Rafter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rafting-TheWord (and (isa :NOUN Rafting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rags-TheWord (and (isa :NOUN Ragged))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N clothingStyle) ((PPFn of) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "ragweed") Pollen-TheWord
 (and (isa :NOUN (PollenFn Ragweed))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ragweed-TheWord (and (isa :NOUN Ragweed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raid-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N performedBy by-Underspecified)
    ((PPFn across) trajectory-Complete) ((PPFn from) from-Generic)
    ((PPFn in) temporallyIntersects) ((PPFn by) temporallyIntersects)
    ((PPFn on) victim)
    (AJP fe_manner fe_particular_iteration instrument-UsedAsWeapon))
   (:GAP (CNI performedBy) (INI victim))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 0 0) (1 0 1) (1 5 0)) ((0 0 0) (1 4 0) (1 5 0) (1 6 1))
   ((0 0 0) (1 1 0) (1 2 0) (1 3 0) (1 6 0)))))

(FNNounSemtrans (TheList) Rail-TheWord (and (isa :NOUN Railing))
 (frame FN_Architectural_part) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rail-TheWord (and (isa :NOUN Rail-Bar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rail-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList (:GAP (DEN mainConstituent fe_roadway)) (:NOUN (N fe_roadway))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "railroad") Set-TheWord
 (and (isa :NOUN PlayRailroadSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Railroad-TheWord (and (isa :NOUN Railway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_endpoints)
    (AJP fe_characteristic (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn near) fe_relative_location)
    (N (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 1)) ((0 2 0)) ((0 4 0)) ((0 1 1)) ((0 0 0))
   ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList "railroad") Track-TheWord (and (isa :NOUN Railway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "railroad") Train-TheWord
 (and (isa :NOUN Train-TransportationDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "railway") Signal-TheWord
 (and (isa :NOUN RailwaySignal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "railway") Station-TheWord
 (and (isa :NOUN RailroadStation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Railway-TheWord (and (isa :NOUN RailwayOrganization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Railway-TheWord (and (isa :NOUN Railway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_endpoints) (NP fe_endpoints)
    ((PPFn to) to-Generic)
    (AJP fe_characteristic mainConstituent
     (InverseBinaryPredicateFn nameString))
    ((PPFn on) trajectory-Complete) ((PPFn through) trajectory-Complete)
    (N fe_characteristic fe_endpoints mainConstituent
     (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn near) fe_relative_location)
    (A fe_characteristic fe_relative_location) ((PPFn from) from-Generic))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 11 0)) ((0 7 0)) ((0 8 0)) ((0 6 4)) ((0 10 1)) ((2 0 0))
   ((0 5 0)) ((0 4 0)) ((0 6 3)) ((0 3 2)) ((0 2 0)) ((0 0 0)) ((0 1 0))
   ((0 6 1)) ((0 3 0)) ((0 6 3) (2 0 0)) ((0 6 3) (0 9 0)) ((0 6 3) (0 7 0))
   ((0 6 3) (0 8 0)) ((0 0 0) (0 6 3)) ((0 0 0) (0 6 2)) ((0 3 0) (0 7 0))
   ((0 3 0) (0 6 4)) ((0 6 0) (0 6 3)) ((0 2 0) (0 3 0)) ((0 0 0) (0 10 0))
   ((0 2 0) (0 4 0) (0 11 0)) ((0 2 0) (0 6 3) (0 11 0))
   ((0 3 0) (0 3 1) (0 11 0)))))

(FNNounSemtrans (TheList) Raiment-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "rain") Forest-TheWord
 (and (isa :NOUN TropicalRainForest)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rain-TheWord (and (isa :NOUN RainProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rain-TheWord (and (isa :NOUN Rainwater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rain-TheWord (and (isa :NOUN RainProcess))
 (frame FN_Precipitation)
 (bindingTemplate (TheList (:GAP (DEN fe_precipitation))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rainbow-TheWord (and (isa :NOUN Rainbow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raincoat-TheWord (and (isa :NOUN RainCoat))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent clothingStyle)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 0) (2 0 0))
   ((0 1 0) (2 0 0)) ((0 1 0) (0 1 2)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0))
   ((0 0 1) (0 1 0) (2 0 0)) ((0 1 0) (0 1 0) (0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Raindrop-TheWord (and (isa :NOUN Raindrop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rainfall-TheWord
 (and (isa :NOUN PrecipitationProcess)) (frame FN_Precipitation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rainforest-TheWord (and (isa :NOUN Rainforest))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale fe_relative_location))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Rainforest-TheWord
 (and (isa :NOUN TropicalRainForest)) (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale fe_relative_location))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Rainstorm-TheWord (and (isa :NOUN RainStormAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rainstorm-TheWord (and (isa :NOUN WeatherEvent))
 (frame FN_Weather)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt)
    (AJP eventOccursAt fe_specification) (N temporallyIntersects))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Rainwater-TheWord (and (isa :NOUN Rainwater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rainy") Season-TheWord (and (isa :NOUN RainySeason))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rainy-Season-TheWord (and (isa :NOUN RainySeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raisin-TheWord (and (isa :NOUN Raisin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rake-TheWord (and (isa :NOUN Rake)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rally-TheWord (and (isa :NOUN Rally)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ram-TheWord (and (isa :NOUN RAM)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ramekin-TheWord (and (isa :NOUN Ramekin-BakingDish))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "ramjet") Engine-TheWord
 (and (isa :NOUN RamjetEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ramjet-TheWord (and (isa :NOUN RamjetEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ramp-TheWord (and (isa :NOUN Ramp)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rampart-TheWord (and (isa :NOUN Rampart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ranch-TheWord (and (isa :NOUN LivestockFarm))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Rancher-TheWord (and (isa :NOUN Rancher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rand-TheWord (and (isa :NOUN Rand-SouthAfrica))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Range-TheWord (and (isa :NOUN CookingRange))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))
   (:GAP (DEN fe_descriptor fe_gizmo))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Range-TheWord (and (isa :NOUN DrivingRange))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N fe_descriptor (InverseBinaryPredicateFn nameString) locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 2)) ((0 0 1) (0 0 2)) ((0 0 0) (0 0 2)))))

(FNNounSemtrans (TheList) Range-TheWord (and (isa :NOUN FiringRange))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N fe_descriptor (InverseBinaryPredicateFn nameString) locationUse))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 2)) ((0 0 1) (0 0 2)) ((0 0 0) (0 0 2)))))

(FNNounSemtrans (TheList) Range-TheWord (and (isa :NOUN HillRange))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT
    (N parts fe_formational_cause (InverseBinaryPredicateFn nameString))
    (Sub fe_relative_location)
    (AJP fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn of) parts fe_relative_location)
    (VPing fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 0)) ((1 0 0)) ((1 2 1) (1 6 0)) ((1 0 1) (1 2 2))
   ((1 2 0) (1 3 0)) ((1 4 0) (1 5 0)) ((1 0 0) (1 4 1)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 0 2)) ((0 0 0) (1 4 0)) ((1 0 0) (1 2 2) (3 0 0))
   ((1 0 0) (1 0 2) (1 1 0)))))

(FNNounSemtrans (TheList) Range-TheWord (and (isa :NOUN MountainRange))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT
    (N parts fe_formational_cause (InverseBinaryPredicateFn nameString))
    (Sub fe_relative_location)
    (AJP fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn of) parts fe_relative_location)
    (VPing fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 0)) ((1 0 0)) ((1 2 1) (1 6 0)) ((1 0 1) (1 2 2))
   ((1 2 0) (1 3 0)) ((1 4 0) (1 5 0)) ((1 0 0) (1 4 1)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 0 2)) ((0 0 0) (1 4 0)) ((1 0 0) (1 2 2) (3 0 0))
   ((1 0 0) (1 0 2) (1 1 0)))))

(FNNounSemtrans (TheList "rangefinder") Camera-TheWord
 (and (isa :NOUN RangefinderCamera)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rank-TheWord
 (and (isa :NOUN PersonTypeByPositionInOrg)) (frame FN_Rank)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfStateChange))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfStateChange fe_rank) (AJP fe_rank))))
 (groupPatterns (TheSet ((1 0 0) (1 1 0)) ((0 0 0) (0 0 0) (1 0 1)))))

(FNNounSemtrans (TheList "rap") Music-TheWord (and (isa :NOUN RapMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rap-TheWord (and (isa :NOUN RapMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rap-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_manner)
    ((PPFn of) fe_component_sound fe_noisy_event))
   (:GAP (INI objectMoving))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Rape-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_specification) (N fe_specification)
    ((PPFn of) victim) ((PPFn on) victim))
   (:GAP (DEN fe_offense fe_specification))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Rape-TheWord (and (isa :NOUN Rape)) (frame FN_Rape)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT (AJP fe_degree perpetrator)
    ((PPFn alongside) eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn of) victim)
    (NP temporallyIntersects victim) ((PPFn by) perpetrator victim)
    ((PPFn on) temporallyIntersects victim))
   (:GAP (INI perpetrator victim) (DNI perpetrator victim))
   (:GEN (Poss perpetrator victim))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 6 0)) ((3 0 1)) ((1 4 0)) ((1 5 1)) ((1 0 1)) ((0 0 0))
   ((1 3 0) (1 4 0)) ((1 1 0) (1 4 0)) ((1 4 0) (3 0 0)) ((1 4 0) (1 6 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 6 1)) ((0 0 0) (1 5 1)) ((1 4 0) (1 5 0))
   ((1 2 0) (1 4 0) (1 7 0)) ((0 0 0) (1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Rapid-TheWord (and (isa :NOUN Rapids))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rapids-TheWord (and (isa :NOUN Rapids))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Rapist-TheWord
 (and (isa :NOUN HomoSapiens) (relationExistsInstance perpetrator Rape :NOUN))
 (frame FN_Rape)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Sinterrog eventOutcomes) (NP perpetrator victim)
    ((PPFn of) victim))
   (:GAP (DEN perpetrator) (DNI victim) (INI victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Rapper-TheWord (and (isa :NOUN Rapper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rash-TheWord (and (isa :NOUN Rash-Object))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (AJP fe_descriptor)
    (VPing fe_descriptor) (A fe_descriptor) ((PPFn of) fe_descriptor)
    (N fe_attachment causes-Underspecified fe_descriptor))
   (:GAP (DEN markCreated) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 0)) ((0 5 2)) ((0 1 0)) ((0 5 1)) ((0 5 0))
   ((0 1 0) (0 4 0)) ((0 1 0) (0 3 0)) ((0 3 0) (0 3 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Rasp-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_manner) (N fe_manner)
    ((PPFn of) fe_noisy_event emitter objectMoving))
   (:GAP (INI fe_ground))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 3 0)) ((0 2 0)) ((0 3 2)) ((0 1 0) (0 3 1))
   ((0 1 0) (0 3 0)) ((0 0 0) (0 3 2)))))

(FNNounSemtrans (TheList "raspberry") Plant-TheWord
 (and (isa :NOUN RaspberryPlant)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Raspberry-TheWord
 (and (isa :NOUN (FruitFn RaspberryPlant))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rat-TheWord (and (isa :NOUN Rat)) (frame FN_Animals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rate" "of") Exchange-TheWord
 (and (isa :NOUN exchangeRateDuring)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rate-TheWord (and (isa :NOUN MoneyPerQuantityRate))
 (frame FN_Price_per_unit)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_product))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_product) (NP seller))
   (:GAP (DEN fe_price) (DNI fe_product)) (:GEN (Poss seller))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Rate-TheWord (and (isa :NOUN Rate))
 (frame FN_Rate_quantification)
 (bindingTemplate
  (TheList (:SUBJECT (NP rateOfEvent))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn for) objectActedOn)
    ((PPFn of) objectActedOn fe_event) (Sfin fe_event)
    (AJP fe_descriptor fe_event activeIngredientsOfType)
    (N fe_event activeIngredientsOfType))
   (:GAP (DEN rateOfEvent))
   (:NOUN (NP objectActedOn) (VPbrst fe_event) (VPed fe_event)
    (VPing fe_event))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 3 0)) ((1 2 1)) ((1 5 0)) ((1 4 1)) ((3 1 0) (4 0 0))
   ((1 2 1) (4 0 0)) ((1 5 0) (4 0 0)) ((1 2 0) (1 2 1)) ((1 1 0) (1 4 1))
   ((1 4 0) (3 2 0)) ((1 4 0) (3 1 0)) ((1 2 1) (1 4 0))
   ((0 0 0) (1 2 0) (1 2 1)) ((1 4 0) (1 4 2) (3 3 0))
   ((1 4 0) (1 5 0) (3 0 0)) ((1 0 0) (1 2 1) (1 4 0)))))

(FNNounSemtrans (TheList) Rate-TheWord (and (isa :NOUN Speed))
 (frame FN_Speed_description)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectMoving)) (:GAP (DEN rateOfEvent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Ratification-TheWord
 (and (isa :NOUN RatifyingSomething)) (frame FN_Ratification)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn by) fe_ratifier))
   (:GAP (DEN fe_proposal) (DNI fe_proposal fe_ratifier)
    (INI fe_proposal fe_ratifier))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Ratio-TheWord (and (isa :NOUN Ratio)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rational") Number-TheWord
 (and (isa :NOUN RationalNumber)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rattle-TheWord (and (isa :NOUN RattleInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rattle-TheWord (and (isa :NOUN MusicalInstrument))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rattlesnake-TheWord (and (isa :NOUN Rattlesnake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rave-TheWord (and (isa :NOUN Rave-DanceParty))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt)
    ((PPFn on) eventOccursAt temporallyIntersects) (NP temporallyIntersects)
    (AJP fe_degree duration clothingStyle temporallyIntersects)
    (N duration host clothingStyle temporallyIntersects))
   (:GAP (DEN fe_social_event)) (:NOUN (N amongThosePresent))
   (:GEN (Poss host temporallyIntersects))))
 (groupPatterns
  (TheSet ((4 0 1)) ((1 5 2)) ((1 4 2)) ((1 4 1)) ((0 0 0)) ((3 0 0))
   ((1 4 2) (1 4 2)) ((1 2 0) (4 0 1)) ((1 1 0) (1 4 3)) ((1 0 0) (1 5 3))
   ((1 0 0) (1 4 3)) ((1 0 0) (1 5 1)) ((0 0 0) (1 4 2)) ((0 0 0) (4 0 0))
   ((1 1 0) (1 4 2) (4 0 1)) ((1 0 0) (1 3 0) (1 4 2))
   ((1 2 0) (1 2 0) (1 5 0) (4 0 0))
   ((0 0 1) (1 0 0) (1 2 1) (1 4 0) (1 4 1)))))

(FNNounSemtrans (TheList) Raven-TheWord (and (isa :NOUN Raven)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ravine-TheWord (and (isa :NOUN Gorge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ravine-TheWord (and (isa :NOUN Ravine))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_relative_location)
    ((PPFn of) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "raw") Food-TheWord (and (isa :NOUN RawFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ray-TheWord (and (isa :NOUN Ray-Fish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rayon-TheWord (and (isa :NOUN Rayon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rayon-TheWord (and (isa :NOUN RayonCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Razor-TheWord (and (isa :NOUN Razor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "razor") Wire-TheWord (and (isa :NOUN RazorWire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reaction-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reaction-TheWord
 (and (isa :NOUN Action) (relationInstanceExists inReactionTo :NOUN Situation))
 (frame FN_Response)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_response) ((PPFn to) fe_trigger))
   (:GAP (DNI doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList "reactive") Armor-TheWord
 (and (isa :NOUN ReactiveArmor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reactor-TheWord (and (isa :NOUN NuclearReactor))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) fe_relative_location)
    ((PPFn in) fe_container_possessor fe_descriptor fe_relative_location)
    ((PPFn near) fe_relative_location)
    (A fe_container_possessor fe_descriptor locationUse)
    (N fe_container_possessor fe_descriptor eventLocale
     (InverseBinaryPredicateFn nameString) fe_relative_location locationUse)
    (AJP fe_descriptor fe_relative_location locationUse))
   (:GAP (2nd fe_relative_location) (INI locationUse) (DNI locationUse)
    (DEN eventLocale locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 5)) ((0 3 2)) ((0 0 0)) ((0 4 4)) ((0 4 3)) ((0 5 0)) ((0 4 1))
   ((0 3 1)) ((0 0 0) (0 3 2)) ((0 3 2) (0 4 5)) ((0 1 2) (0 5 2))
   ((0 4 5) (0 5 1)) ((0 0 0) (0 4 5)) ((0 4 3) (0 4 5)) ((0 1 2) (0 4 3))
   ((0 4 1) (0 4 5)) ((0 4 5) (0 5 0)) ((0 3 2) (0 5 0)) ((0 1 2) (0 4 1))
   ((0 4 1) (0 4 2)) ((0 3 2) (0 4 0)) ((0 0 0) (0 3 0)) ((0 5 0) (2 0 0))
   ((0 3 1) (0 4 3) (0 4 5)) ((0 4 1) (0 4 5) (0 5 0))
   ((0 1 1) (0 4 5) (0 5 0)) ((0 0 0) (0 4 5) (0 5 0))
   ((0 4 1) (0 5 0) (0 5 0)) ((0 1 2) (0 3 2) (0 4 0))
   ((0 3 2) (0 4 1) (2 0 0)) ((0 3 2) (0 5 0) (2 0 0))
   ((0 1 0) (0 4 1) (0 4 5)) ((0 1 2) (0 4 1) (2 0 0))
   ((0 0 0) (0 3 2) (0 4 5) (0 5 0)) ((0 1 0) (0 3 1) (0 4 1) (0 4 5))
   ((0 2 0) (0 3 1) (0 3 2) (0 4 3) (2 0 0)))))

(FNNounSemtrans (TheList) Reader-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationInstanceExists performedBy :NOUN Reading))
 (frame FN_Reading_perception)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) ibtRead)) (:GAP (DEN fe_reader))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "reading") Glasses-TheWord
 (and (isa :NOUN Eyeglasses-Corrective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reading-TheWord
 (and (isa :NOUN CycLExpression)
      (relationExistsInstance meaningSentenceOfTextType ObjectType :NOUN))
 (frame FN_Linguistic_meaning) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "real" "estate") Agent-TheWord
 (and (isa :NOUN RealEstateAgent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "real") Number-TheWord (and (isa :NOUN RealNumber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "real") Property-TheWord (and (isa :NOUN RealEstate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reality-TheWord
 (and (isa :NOUN Thing) (not (isa :NOUN ConjecturalContext))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Realm-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Realtor-TheWord (and (isa :NOUN RealEstateAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reappraisal-TheWord (and (isa :NOUN Evaluating))
 (frame FN_Assessing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rear" "folding" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-RearFolding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rear-TheWord (and (isa :NOUN BackSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList "rear" "window" "with") Defroster-TheWord
 (and (isa :NOUN RearWindowWithDefroster)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rear" "wipe") Wiper-TheWord
 (and (isa :NOUN RearWindowWiperAndWasher)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rearview") Mirror-TheWord
 (and (isa :NOUN AutomotiveMirror)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reason-TheWord
 (and (isa :NOUN Thing)
      (relationInstanceExists causes-Underspecified :NOUN Thing))
 (frame FN_Causation)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn for) fe_effect) (Sfin fe_effect))
   (:GAP (DEN causes-Underspecified) (DNI fe_effect))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Reason-TheWord (and (isa :NOUN Motive))
 (frame FN_Reason)
 (bindingTemplate
  (TheList
   (:SUBJECT (Sun purposeOf-EventSit) (VPfin purposeOf-EventSit)
    (Sfin fe_state_of_affairs) (NP doneBy fe_state_of_affairs))
   (:OBJECT (VPfin purposeOf-EventSit))
   (:OBLIQUE-OBJECT (AJP purposeOf-EventSit) ((PPFn behind) purposeOf-EventSit)
    ((PPFn for) purposeOf-EventSit) ((PPingFn for) purposeOf-EventSit)
    (PPinterrog purposeOf-EventSit) (Sforto purposeOf-EventSit)
    (Sinterrog purposeOf-EventSit) (Srel purposeOf-EventSit)
    (VPto purposeOf-EventSit) (Sfin purposeOf-EventSit fe_state_of_affairs)
    (A fe_state_of_affairs) (NP doneBy fe_state_of_affairs))
   (:GAP (CNI purposeOf-EventSit doneBy) (DNI purposeOf-EventSit doneBy)
    (INI doneBy fe_state_of_affairs) (DEN fe_state_of_affairs))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 7 0)) ((2 5 0)) ((2 9 0)) ((2 3 0)) ((2 1 0)) ((2 10 0))
   ((2 6 0)) ((2 8 0)) ((2 4 0)) ((2 2 0)) ((0 2 0) (2 7 0)) ((0 3 1) (2 7 0))
   ((2 3 0) (4 0 0)) ((0 2 0) (2 3 0)) ((0 3 0) (2 2 0))
   ((0 2 0) (2 3 0) (4 0 0)) ((2 0 0) (2 9 1) (2 11 0))
   ((0 0 0) (0 1 0) (0 3 0) (1 0 0) (2 11 1)))))

(FNNounSemtrans (TheList) Reasoning-TheWord (and (isa :NOUN Reasoning))
 (frame FN_Reasoning)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) performedBy) (AJP fe_manner))
   (:GAP (DEN resultantThought))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Reassurance-TheWord (and (isa :NOUN Reassurance))
 (frame FN_Reassuring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) objectActedOn)
    (AJP fe_manner genericPathway-Partial) (Sfin infoTransferred)
    ((PPFn about) fe_situation) ((PPFn in) fe_situation)
    ((PPFn on) fe_situation) ((PPFn by) performedBy))
   (:GAP (DNI objectActedOn infoTransferred fe_situation)
    (INI infoTransferred performedBy) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 0)) ((1 5 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((1 1 1) (1 2 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 2 0))
   ((1 1 0) (1 2 0) (3 0 0)) ((0 0 1) (1 0 0) (1 4 0))
   ((0 0 1) (1 1 0) (1 3 0)) ((0 0 0) (1 1 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Rebel-TheWord (and (isa :NOUN Rebel))
 (frame FN_Rebellion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rebellion-TheWord (and (isa :NOUN Coup))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_selector) ((PPFn of) fe_selector))
   (:OBLIQUE-OBJECT ((PPFn over) situationConstituents)
    ((PPFn against) losesControl losesControl)
    (A by-Underspecified fe_selector) (N situationConstituents fe_selector)
    ((PPFn by) fe_selector) (AJP fe_degree fe_selector) ((PPFn of) fe_selector)
    (Poss fe_selector) ((PPFn in) temporallyIntersects))
   (:GAP (DNI losesControl) (CNI fe_selector) (2nd fe_selector))
   (:GEN (Poss fe_selector))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 7 0)) ((0 1 0)) ((1 6 0)) ((1 3 1)) ((1 5 1)) ((1 2 1))
   ((1 1 0)) ((1 3 0)) ((1 1 0) (1 5 1)) ((0 0 0) (1 1 0)) ((1 2 0) (1 4 0))
   ((1 5 0) (3 0 0)) ((1 3 1) (1 5 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 2 1))
   ((1 1 0) (1 2 1) (1 8 0)))))

(FNNounSemtrans (TheList) Rebuff-TheWord
 (and (isa :NOUN Replying) (relationInstanceExists inReplyTo :NOUN Proposal))
 (frame FN_Respond_to_proposal) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rebuke-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo communicatorOfInfo))
   (:OBJECT (NP fe_reason))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo)
    ((PPFn from) communicatorOfInfo) ((PPFn by) communicatorOfInfo)
    (AVP fe_manner) (AJP fe_degree fe_manner)
    ((PPFn for) recipientOfInfo fe_reason)
    ((PPFn of) recipientOfInfo fe_reason) (Sforto fe_reason) (Sfin fe_reason)
    ((PPingFn for) fe_reason))
   (:GAP (CNI communicatorOfInfo) (INI fe_reason)
    (DNI recipientOfInfo fe_reason))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 1 0)) ((2 7 0)) ((2 6 1)) ((2 5 1)) ((2 3 0)) ((2 0 0))
   ((2 6 0)) ((2 0 0) (4 0 0)) ((2 0 0) (2 9 0)) ((2 2 0) (2 5 0))
   ((0 0 1) (2 5 0)) ((2 1 0) (2 8 0)) ((2 0 0) (2 4 1)) ((2 4 1) (2 6 0))
   ((2 4 1) (2 5 0)) ((0 0 0) (2 4 1)) ((2 4 1) (4 0 0)) ((2 4 0) (2 6 0))
   ((2 0 0) (2 4 1) (2 5 1)) ((0 0 0) (2 1 0) (2 4 0) (2 5 1))
   ((0 0 0) (1 0 0) (1 0 0) (2 1 0) (2 4 1)))))

(FNNounSemtrans (TheList) Receipt-TheWord (and (isa :NOUN PurchaseReceipt))
 (frame FN_Receiving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Receiver-TheWord (and (isa :NOUN Receiver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "receiving") Antenna-TheWord
 (and (isa :NOUN ReceivingAntenna)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reception-TheWord (and (isa :NOUN ReceptionParty))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP amongThosePresent host))
   (:OBLIQUE-OBJECT ((PPFn for) amongThosePresent) ((PPFn by) host)
    (VPto fe_occasion) (AJP duration clothingStyle) (NP temporallyIntersects)
    ((PPFn before) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects)
    (N fe_occasion eventOccursAt fe_refreshment clothingStyle
     temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects))
   (:GAP (CNI host) (DEN fe_social_event)) (:GEN (Poss beneficiary host))))
 (groupPatterns
  (TheSet ((1 8 3)) ((1 8 2)) ((1 7 0)) ((1 9 0)) ((1 8 1)) ((1 8 0)) ((1 1 0))
   ((1 6 0)) ((1 0 0)) ((0 0 0)) ((1 8 2) (1 9 1)) ((1 7 1) (1 9 0))
   ((1 8 2) (1 9 0)) ((1 6 0) (1 8 0)) ((0 0 1) (1 3 1)) ((1 7 1) (1 8 2))
   ((0 0 1) (1 6 0)) ((1 6 0) (1 8 2)) ((1 8 0) (1 9 0)) ((1 3 0) (1 6 0))
   ((1 8 0) (3 0 0)) ((1 0 0) (1 3 1)) ((0 0 0) (1 8 3)) ((0 0 0) (1 6 0))
   ((0 0 0) (1 9 0)) ((1 0 0) (1 9 0)) ((1 1 0) (1 7 1) (1 8 4))
   ((1 1 0) (1 2 0) (1 9 0)) ((0 0 1) (1 9 0) (3 0 1))
   ((0 0 0) (1 4 0) (1 9 0)) ((0 0 1) (1 0 0) (1 6 1))
   ((0 0 1) (1 0 0) (1 5 0)) ((0 0 1) (1 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Receptionist-TheWord (and (isa :NOUN Receptionist))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn at) employer) ((PPFn for) employer)
    ((PPFn of) employer) ((PPFn in) employer employer)
    (N employer fe_rank activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((1 4 1)) ((0 0 0)) ((3 0 0)) ((1 2 0)) ((1 3 0)) ((1 0 0)) ((1 4 0))
   ((1 0 0) (1 4 2)) ((1 0 0) (1 4 1)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((1 4 0) (4 0 0)) ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Recess-TheWord (and (isa :NOUN Recess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "recessed") Light-TheWord
 (and (isa :NOUN RecessedLight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rechargable") Battery-TheWord
 (and (isa :NOUN RechargeableBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recipe-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recipe-TheWord (and (isa :NOUN Recipe-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recipient-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance toPossessor ChangeInUserRights :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reciprocation-TheWord (and (isa :NOUN Reciprocation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reciprocity-TheWord (and (isa :NOUN Reciprocation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recital-TheWord
 (and (isa :NOUN (CollectionIntersection2Fn PublicEvent MusicalPerformance))
      (relationInstanceExists performedBy :NOUN Soloist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recitative-TheWord (and (isa :NOUN Recitative))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recliner-TheWord (and (isa :NOUN RecliningChair))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recliner-TheWord (and (isa :NOUN RecliningChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "reclining" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Reclinable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recluse-TheWord (and (isa :NOUN IntelligentAgent))
 (frame FN_Sociability)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent)) (:GAP (DEN affectedAgent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "recoilless") Gun-TheWord
 (and (isa :NOUN RecoillessGun)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "recoilless" "missile") Launcher-TheWord
 (and (isa :NOUN RecoillessLauncher)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recollection-TheWord (and (isa :NOUN Memory))
 (frame FN_Memory)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) subjectOfMentalSituation)
    (AJP fe_degree fe_manner temporallyIntersects)
    (N topicOfIndividual situationTopic)
    ((PPFn of) subjectOfMentalSituation situationTopic)
    ((PPingFn of) situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 1 2)) ((0 1 1)) ((0 1 0)) ((1 0 0)) ((0 3 0))
   ((0 1 1) (0 4 0)) ((0 1 1) (0 3 1)) ((0 1 0) (0 4 0)) ((0 1 0) (0 3 1))
   ((0 4 0) (1 0 0)) ((0 3 1) (1 0 0)) ((0 0 0) (0 2 1)) ((0 1 1) (1 0 0))
   ((0 1 0) (1 0 0)) ((0 2 0) (1 0 0)))))

(FNNounSemtrans (TheList) Reconnaissance-TheWord
 (and (isa :NOUN Reconnaissance-MilitaryOperation)) (frame FN_Scrutiny)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_ground))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "record") Head-TheWord (and (isa :NOUN RecordHead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "record") Player-TheWord
 (and (isa :NOUN RecordPlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Record-TheWord (and (isa :NOUN Record))
 (frame FN_Records)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_recorder))
   (:OBLIQUE-OBJECT ((PPFn of) fe_data) ((PPFn on) fe_data)
    ((PPFn than) fe_descriptor) ((PPFn by) objectActedOn)
    ((PPFn for) objectActedOn) (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN fe_record)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 6 0)) ((3 0 0)) ((1 3 0)) ((1 5 0)) ((0 0 0) (1 4 0))
   ((1 2 0) (1 5 0)) ((1 0 0) (1 6 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (0 0 0) (1 1 0)) ((1 0 0) (1 5 0) (1 5 1)))))

(FNNounSemtrans (TheList) Record-TheWord (and (isa :NOUN WrittenRecord))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "recorded" "video") Product-TheWord
 (and (isa :NOUN RecordedVideoProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recording-TheWord (and (isa :NOUN RecordedIBO))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recording-TheWord
 (and (isa :NOUN AudioConceptualWork)) (frame FN_Records)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recovery-TheWord
 (and (isa :NOUN RecoveringFromAilment)) (frame FN_Recovery)
 (bindingTemplate
  (TheList (:SUBJECT (NP patientInCareEvent))
   (:OBLIQUE-OBJECT ((PPFn from) fe_affliction) ((PPFn of) patientInCareEvent)
    (AJP fe_degree fe_manner patientInCareEvent))
   (:GAP (DNI fe_affliction patientInCareEvent) (INI patientInCareEvent))
   (:GEN (Poss patientInCareEvent))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 2)) ((1 0 0)) ((1 1 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 0 0) (1 2 1)))))

(FNNounSemtrans (TheList) Recreation-TheWord
 (and (isa :NOUN RecreationalActivity)) (frame FN_Stimulus_focus)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) objectActedOn))
   (:GAP (DEN (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Recrimination-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) recipientOfInfo)
    ((PPFn from) communicatorOfInfo) (AJP fe_degree)
    ((PPFn of) objectOfEvaluation) ((PPFn about) situationTopic)
    ((PPFn for) situationTopic) ((PPFn over) situationTopic))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 4 0)) ((0 3 0)) ((1 0 0)) ((0 1 0)) ((0 0 0))
   ((0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList "rectal") Thermometer-TheWord
 (and (isa :NOUN RectalThermometer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rectangle-TheWord (and (isa :NOUN Rectangle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rectifier-TheWord (and (isa :NOUN Rectifier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rector-TheWord (and (isa :NOUN Minister))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Recuperation-TheWord
 (and (isa :NOUN RecoveringFromAilment)) (frame FN_Recovery)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_affliction) ((PPFn from) fe_affliction)
    (AJP fe_manner) ((PPFn of) patientInCareEvent))
   (:GAP (DNI fe_affliction)) (:GEN (Poss patientInCareEvent))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 1 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Recycling-TheWord (and (isa :NOUN Recycling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "red" "blood") Cell-TheWord
 (and (isa :NOUN RedBloodCell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "red") Cell-TheWord (and (isa :NOUN RedBloodCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "red" "giant") Star-TheWord
 (and (isa :NOUN RedGiantStar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Red-TheWord (and (isa :NOUN RedColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "red") Wine-TheWord (and (isa :NOUN RedWine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "red") Wolf-TheWord (and (isa :NOUN Wolf-Red))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Redhead-TheWord (and (isa :NOUN RedHairedHuman))
 (frame FN_Body_description_part)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_individual)) (:OBLIQUE-OBJECT (NP fe_individual))
   (:GAP (DEN fe_individual))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Reduction-TheWord
 (and (isa :NOUN
       (CausingFn
        (CollectionSubsetFn IntrinsicStateChangeEvent
         (TheSetOf ?chg
          (and (objectOfStateChange ?chg ?obj) (fromState ?obj ?from-st)
               (isa ?from-st GenericQuantity) (toState ?obj ?to-st)
               (isa ?to-st GenericQuantity) (different ?from-st ?to-st)))))))
 (frame FN_Cause_change_of_position_on_a_scale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_attribute objectOfStateChange)
    ((PPFn in) objectOfStateChange) (AJP fe_manner))
   (:GAP (DNI doneBy))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Redwood-TheWord
 (and (isa :NOUN (WoodFn RedwoodTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Redwood-TheWord (and (isa :NOUN RedwoodTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "redwood") Tree-TheWord (and (isa :NOUN RedwoodTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reed-TheWord (and (isa :NOUN Reed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reed-TheWord (and (isa :NOUN ReedWoodwindInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reef-TheWord (and (isa :NOUN Reef))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor)
    ((PPFn of) fe_container_possessor) (AJP activeIngredientsOfType)
    (N parts (InverseBinaryPredicateFn nameString) activeIngredientsOfType))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 0)) ((0 3 1)) ((0 1 0)) ((0 0 0)) ((0 3 0))
   ((0 3 1) (2 0 0)))))

(FNNounSemtrans (TheList) Reek-TheWord (and (isa :NOUN FoulOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_perceptual_source))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Reek-TheWord (and (isa :NOUN NauseatingOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_perceptual_source))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Reek-TheWord
 (and (isa :NOUN Reeking-ExudingSomething))
 (frame FN_Chemical-sense_description)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_perceptual_source))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Reek-TheWord (and (isa :NOUN StrongOdor))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) perceivedThings)
    ((PPFn from) from-Generic) ((PPFn off) from-Generic)
    (AVP temporallyIntersects) (N temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 5 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList) Reelection-TheWord
 (and (isa :NOUN ReelectionForOffice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refectory-TheWord (and (isa :NOUN DiningHall))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Referral-TheWord (and (isa :NOUN Referral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Referee-TheWord (and (isa :NOUN Referee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reference-TheWord (and (isa :NOUN Referral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "reference") Book-TheWord
 (and (isa :NOUN ReferenceWork)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refill-TheWord (and (isa :NOUN OfficeProductRefill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "refined" "petroleum") Product-TheWord
 (and (isa :NOUN PetroleumProduct-Refined)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refinisher-TheWord (and (isa :NOUN Refinisher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reflection-TheWord (and (isa :NOUN Thinking))
 (frame FN_Cogitation)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation fe_manner)
    ((PPFn on) situationTopic) ((PPFn about) situationTopic)
    ((PPFn upon) situationTopic) ((PPingFn of) situationTopic))
   (:GAP (DNI situationTopic)) (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((1 1 0)) ((1 2 0)) ((0 0 0)) ((1 0 1) (1 1 0))
   ((1 0 1) (1 2 0)) ((1 1 0) (3 0 0)) ((1 2 0) (3 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Reflection-TheWord
 (and (isa :NOUN Reflection-Visual)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reflector-TheWord (and (isa :NOUN Reflector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reflector-TheWord (and (isa :NOUN ReflectorForAuto))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reform-TheWord (and (isa :NOUN SocialReformEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reform-TheWord
 (and (isa :NOUN ImprovingADevisedPracticeOrWork))
 (frame FN_Reforming_a_system)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N objectActedOn) (A objectActedOn)
    (AJP objectActedOn purposeOfEvent))
   (:GAP (INI doneBy causes-Underspecified)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (0 2 1) (2 0 0)))))

(FNNounSemtrans (TheList) Refrigerant-TheWord
 (and (isa :NOUN FluidTangibleThing)
      (relationExistsInstance stuffUsed Refrigeration :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "refrigerated" "display") Case-TheWord
 (and (isa :NOUN RefrigeratedDisplayCase)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "refrigerated" "storage") Device-TheWord
 (and (isa :NOUN RefrigeratedStorageDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "refrigeration") System-TheWord
 (and (isa :NOUN AirCoolingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refrigerator-TheWord (and (isa :NOUN Refrigerator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refulgence-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refulgence-TheWord (and (isa :NOUN VisibleLight))
 (frame FN_Location_of_light) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refund-TheWord (and (isa :NOUN LoanRepaying))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refuse-TheWord (and (isa :NOUN Garbage-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refusal-TheWord (and (isa :NOUN DecliningARequest))
 (frame FN_Agree_or_refuse_to_act)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP fe_interlocutor performedBy) (Poss performedBy)
    (N performedBy))
   (:OBLIQUE-OBJECT (AJP frequencyOfEvent fe_manner) (VPto fe_proposed_action)
    ((PPFn of) fe_proposed_action performedBy) ((PPFn by) performedBy)
    ((PPFn on) (InverseBinaryPredicateFn explains-Generic)
     temporallyIntersects))
   (:GAP (2nd fe_interlocutor)
    (DNI fe_interlocutor fe_proposed_action performedBy))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 1)) ((1 1 0) (1 2 1)) ((0 0 1) (1 1 0))
   ((0 2 0) (1 1 0)) ((0 1 0) (1 2 0)) ((0 0 1) (1 2 0))
   ((1 1 0) (1 3 0) (1 4 1)) ((0 0 0) (1 0 1) (1 1 0))
   ((1 0 1) (1 1 0) (1 2 1)) ((0 0 1) (1 0 1) (1 1 0))
   ((0 0 1) (1 1 0) (1 4 0)) ((0 0 0) (0 0 0) (1 0 0) (1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList) Refusal-TheWord
 (and (isa :NOUN Refusing-CommunicationAct)) (frame FN_Agree_or_refuse_to_act)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP fe_interlocutor performedBy) (Poss performedBy)
    (N performedBy))
   (:OBLIQUE-OBJECT (AJP frequencyOfEvent fe_manner) (VPto fe_proposed_action)
    ((PPFn of) fe_proposed_action performedBy) ((PPFn by) performedBy)
    ((PPFn on) (InverseBinaryPredicateFn explains-Generic)
     temporallyIntersects))
   (:GAP (2nd fe_interlocutor)
    (DNI fe_interlocutor fe_proposed_action performedBy))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 1)) ((1 1 0) (1 2 1)) ((0 0 1) (1 1 0))
   ((0 2 0) (1 1 0)) ((0 1 0) (1 2 0)) ((0 0 1) (1 2 0))
   ((1 1 0) (1 3 0) (1 4 1)) ((0 0 0) (1 0 1) (1 1 0))
   ((1 0 1) (1 1 0) (1 2 1)) ((0 0 1) (1 0 1) (1 1 0))
   ((0 0 1) (1 1 0) (1 4 0)) ((0 0 0) (0 0 0) (1 0 0) (1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList) Regalia-TheWord (and (isa :NOUN OverGarment))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP clothingStyle) (N clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Regalia-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP clothingStyle) (N clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Regard-TheWord (and (isa :NOUN Respect))
 (frame FN_Regard)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn for) objectOfEvaluation) (AJP fe_judgment))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Regard-TheWord (and (isa :NOUN Topic))
 (frame FN_Topic) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Regent-TheWord (and (isa :NOUN Regent-HeadOfState))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reggae-TheWord (and (isa :NOUN ReggaeMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Regicide-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing) (bindingTemplate (TheList (:GAP (DEN by-Underspecified))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Regime-TheWord (and (isa :NOUN Law)) (frame FN_Law)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType)) (:GAP (DEN fe_law))
   (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Regime-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (VPbrst fe_depictive) (A fe_governed)
    ((PPFn in) fe_governed) (AJP fe_descriptor fe_governed leadersOfMovement)
    ((PPFn of) leadersOfMovement temporallyIntersects)
    (N fe_descriptor fe_governed leadersOfMovement activeIngredientsOfType))
   (:GAP (DNI fe_governed) (DEN leadersOfMovement))
   (:GEN (Poss fe_governed leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 5 3)) ((1 4 1)) ((3 0 1)) ((1 4 0)) ((1 5 2)) ((1 2 0)) ((1 3 1))
   ((1 1 0)) ((3 0 0)) ((1 5 1)) ((1 5 0)) ((1 3 0)) ((1 0 0))
   ((1 4 0) (1 5 3)) ((1 2 0) (3 0 1)) ((1 2 0) (1 4 0)) ((1 3 1) (1 3 2))
   ((1 3 0) (3 0 1)) ((0 0 0) (1 3 0) (1 5 3)))))

(FNNounSemtrans (TheList) Regimen-TheWord (and (isa :NOUN Regimen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Regiment-TheWord
 (and (isa :NOUN Regiment-MilitaryEchelon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Region-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_container_possessor)
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Region-TheWord (and (isa :NOUN GeographicalRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Region-TheWord (and (isa :NOUN Region))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "registered") Nurse-TheWord
 (and (isa :NOUN RegisteredNurse)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "regular") Polygon-TheWord
 (and (isa :NOUN RegularPolygon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Regulation-TheWord (and (isa :NOUN Law))
 (frame FN_Law)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn against) lawProscribesActType)
    (VPing lawProscribesActType)
    ((PPFn of) performedBy lawProscribesActType fe_jurisdiction)
    ((PPFn on) lawProscribesActType fe_required) ((PPFn to) fe_required)
    (VPed startingDate)
    (N performedBy lawProscribesActType fe_required activeIngredientsOfType)
    (A performedBy activeIngredientsOfType))
   (:GAP (DEN fe_law) (DNI fe_required) (INI lawProscribesActType fe_required))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 7 1)) ((1 6 3)) ((1 4 0)) ((1 3 1)) ((1 3 0)) ((1 2 1))
   ((1 0 0)) ((1 6 1)) ((0 0 0)) ((1 7 0)) ((1 5 0) (1 6 3)) ((1 1 0) (1 6 3))
   ((1 2 2) (1 6 3)) ((1 2 0) (1 6 3)) ((1 3 0) (3 0 0)) ((1 2 1) (1 6 0)))))

(FNNounSemtrans (TheList) Rehabilitation-TheWord
 (and (isa :NOUN Rehabilitation-Medical)) (frame FN_Cure)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn from) fe_affliction)
    ((PPFn for) patientInCareEvent))
   (:GAP
    (INI fe_affliction performedBy patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:GEN (Poss patientInCareEvent))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 1 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "rehabilitation") Specialist-TheWord
 (and (isa :NOUN PhysicalMedicineAndRehabilitationSpecialist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rehearsal-TheWord
 (and (isa :NOUN Practicing-Preparing)) (frame FN_Practice)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn with) fe_co-participant)
    (AJP fe_manner) ((PPFn for) objectActedOn fe_occasion)
    ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt temporallyIntersects)
    (Sub temporallyIntersects) (NP fe_iterations temporallyIntersects)
    ((PPFn on) objectActedOn temporallyIntersects))
   (:GEN (Poss performedBy duration))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 7 1)) ((1 5 0)) ((1 3 1)) ((1 1 0)) ((1 8 0)) ((1 0 0))
   ((1 4 0) (1 8 1)) ((1 2 0) (1 4 0)) ((1 4 0) (1 7 0)) ((1 1 0) (1 5 1))
   ((0 0 1) (1 7 1)) ((1 3 1) (2 0 0)) ((0 0 1) (1 3 1)) ((0 0 0) (1 3 1))
   ((0 0 1) (1 5 0) (1 7 1)) ((1 3 0) (1 5 0) (1 5 1))
   ((1 6 0) (1 8 0) (2 0 1)))))

(FNNounSemtrans (TheList) Reich-TheWord (and (isa :NOUN Reich)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rein-TheWord (and (isa :NOUN Reins)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reincarnation-TheWord (and (isa :NOUN Reincarnation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reincarnation-TheWord
 (and (isa :NOUN ReincarnationBeliefSystems)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reindeer-TheWord (and (isa :NOUN Reindeer))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reinstatement-TheWord (and (isa :NOUN Reinstatement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reinvigoration-TheWord
 (and (isa :NOUN RefreshingSomething)) (frame FN_Rejuvenation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rejection-TheWord
 (and (isa :NOUN Replying) (relationInstanceExists inReplyTo :NOUN Proposal))
 (frame FN_Respond_to_proposal)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_proposal))
   (:GAP (INI fe_interlocutor) (DNI performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Rejoinder-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response)
 (bindingTemplate
  (TheList (:SUBJECT (Poss performedBy) (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) (N genericPathway-Partial)
    (QUO infoTransferred) (Sfin infoTransferred) ((PPFn by) performedBy)
    ((PPFn to) fe_trigger))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((3 0 0)) ((0 1 0)) ((1 3 0)) ((1 2 0)) ((1 4 0) (1 5 0))
   ((1 3 0) (3 0 0)) ((1 1 0) (1 3 0) (3 0 0))
   ((0 0 0) (1 0 0) (1 2 0) (1 5 0)) ((0 0 0) (1 0 0) (1 2 0) (1 2 0)))))

(FNNounSemtrans (TheList) Rejuvenation-TheWord
 (and (isa :NOUN RefreshingSomething)) (frame FN_Rejuvenation)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (A doneBy objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Relation-TheWord (and (isa :NOUN Relation))
 (frame FN_Relation)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn between) fe_entities)
    ((PPFn with) objectOfMentalSituation) (AJP fe_relation_type))
   (:GAP (INI fe_entities) (DNI fe_entities objectOfMentalSituation)
    (CNI fe_entities objectOfMentalSituation objectOfMentalSituation))
   (:GEN (Poss objectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 2 0)) ((1 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "relational") Database-TheWord
 (and (isa :NOUN RelationalDatabase-CW)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relationship-TheWord (and (isa :NOUN Associate))
 (frame FN_Cognitive_connection)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn with) fe_concept_2) (AJP fe_degree))
   (:GEN (Poss fe_concept_1))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Relationship-TheWord
 (and (isa :NOUN PersonTypeByPersonalRelationshipStatus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relationship-TheWord
 (and (isa :NOUN PersonalAssociationPredicate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relationship-TheWord (and (isa :NOUN Relation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "relative") Humidity-TheWord
 (and (isa :NOUN RelativeHumidity)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relative-TheWord
 (and (isa :NOUN Family-SocialEntity)) (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DNI fe_ego) (INI fe_ego) (DEN fe_alter relatives))
   (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Relative-TheWord
 (and (isa :NOUN Person) (relationExistsInstance relatives Person :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relay-TheWord (and (isa :NOUN RelayRaceSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relay-TheWord (and (isa :NOUN ElectricalRelay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Release-TheWord
 (and (isa :NOUN ReleasingFromConfinement)) (frame FN_Releasing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) captor) (Poss transferredThing)
    ((PPFn of) transferredThing) ((PPFn in) temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects))
   (:GAP (DNI objectFoundInLocation) (INI captor objectFoundInLocation))))
 (groupPatterns (TheSet ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0) (0 4 0) (0 4 1)))))

(FNNounSemtrans (TheList) Reliability-TheWord
 (and (isa :NOUN Trusting-GrantingPermission)) (frame FN_Trust)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_information)) (:OBLIQUE-OBJECT (AJP fe_manner))
   (:GAP (INI subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Reliance-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance relyOn-Generic Agent-Generic :NOUN))
 (frame FN_Reliance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_degree) (AJP fe_degree) (AVP fe_degree)
    ((PPFn on) instrument-Generic fe_intermediary by-Underspecified)
    ((PPFn by) affectedAgent) (VPto purposeOfEvent))
   (:GAP (2nd instrument-Generic fe_intermediary) (CNI affectedAgent)
    (DNI purposeOfEvent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 3 0)) ((0 3 2) (0 5 0)) ((0 3 2) (2 0 0))
   ((0 3 2) (0 4 0)) ((0 3 0) (2 0 0)) ((0 0 0) (0 3 2)) ((0 1 0) (0 3 2))
   ((0 2 0) (0 3 1)) ((0 1 0) (0 3 2) (0 5 0)))))

(FNNounSemtrans (TheList) Relief-TheWord (and (isa :NOUN Relief-Feeling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relief-TheWord (and (isa :NOUN SuccoringSomeone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Religion-TheWord (and (isa :NOUN Religion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Religionist-TheWord (and (isa :NOUN ReligiousPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "religious") Ceremony-TheWord
 (and (isa :NOUN ReligiousCeremony)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "religious") Holiday-TheWord
 (and (isa :NOUN ReligiousHoliday)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "religious") Leader-TheWord
 (and (isa :NOUN ReligiousLeader)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "religious") Music-TheWord
 (and (isa :NOUN GospelMusic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Religious-TheWord (and (isa :NOUN ReligiousPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Relish-TheWord (and (isa :NOUN Enjoyment))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn for) topicOfIndividual)
    ((PPFn in) eventAffectsBodyPart) (AJP fe_degree fe_manner))
   (:GAP (DNI topicOfIndividual objectActedOn))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((1 1 0) (1 2 1)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Relish-TheWord (and (isa :NOUN Relish-Food))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reluctance-TheWord (and (isa :NOUN Reluctance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Remainder-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationInstanceExists
       (Kappa (?remaining ?processing)
        (amenableToBe (objectActedOn ?processing ?remaining)))
       :NOUN Action))
 (frame FN_Left_to_do)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_process)) (:GAP (DEN fe_remainder))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Remains-TheWord
 (and (isa :NOUN Resource)
      (relationExistsInstance unchangedActors DestructionEvent :NOUN))
 (frame FN_Remainder)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_original_context unchangedActors))
   (:GAP (DEN fe_remainder) (INI unchangedActors))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Remark-TheWord (and (isa :NOUN Remark))
 (frame FN_Statement)
 (bindingTemplate
  (TheList
   (:SUBJECT ((PPFn as) by-Underspecified) (QUO infoTransferred)
    (N performedBy) (NP performedBy) (Poss performedBy))
   (:OBJECT (Sfin infoTransferred))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (AJP fe_manner)
    (QUO infoTransferred) (NP infoTransferred) (Sfin infoTransferred)
    ((PPFn at) eventOccursAt) ((PPFn by) performedBy)
    ((PPFn of) infoTransferred performedBy) ((PPFn from) performedBy)
    ((PPFn in) genericPathway-Partial performedBy temporallyIntersects)
    ((PPingFn about) infoTransferred situationTopic)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic)
    ((PPFn concerning) situationTopic) ((PPFn regarding) situationTopic))
   (:GAP (DNI performedBy) (INI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 10 1)) ((2 11 0)) ((2 12 0)) ((4 0 0)) ((2 7 1)) ((2 8 0))
   ((2 6 0)) ((0 3 0)) ((2 4 0)) ((2 9 0)) ((2 1 0)) ((2 0 0))
   ((2 10 1) (4 0 0)) ((2 14 0) (4 0 0)) ((2 12 0) (4 0 0)) ((2 13 0) (4 0 0))
   ((2 11 0) (4 0 0)) ((0 4 0) (2 12 0)) ((2 7 1) (2 11 0)) ((2 8 0) (2 11 0))
   ((0 3 0) (2 10 1)) ((0 3 0) (2 13 0)) ((0 3 0) (2 11 0)) ((2 5 0) (2 9 2))
   ((2 4 0) (4 0 0)) ((2 4 0) (2 8 0)) ((2 4 0) (2 6 0)) ((0 3 0) (2 4 0))
   ((0 1 0) (2 8 0)) ((2 2 0) (4 0 0)) ((0 4 0) (2 2 0)) ((2 7 0) (2 9 1))
   ((2 3 0) (2 7 1)) ((2 9 0) (2 11 0)) ((0 3 0) (2 9 0)) ((2 1 0) (2 10 0))
   ((2 0 0) (2 10 1)) ((2 0 0) (4 0 0)) ((2 0 0) (2 6 0))
   ((0 0 0) (0 2 0) (1 0 0)) ((2 0 0) (2 2 0) (4 0 0)))))

(FNNounSemtrans (TheList) Remarriage-TheWord (and (isa :NOUN Remarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Remedy-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP performedBy drugAdministered patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:OBLIQUE-OBJECT (N fe_affliction) ((PPFn against) fe_affliction)
    ((PPFn to) fe_affliction) (NP drugAdministered) (A drugAdministered)
    ((PPFn of) drugAdministered)
    (AJP fe_degree drugAdministered
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    ((PPFn for) fe_affliction patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    ((PPingFn of) (InverseBinaryPredicateFn treatmentAppliedToCondition)))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 2)) ((0 0 3)) ((1 6 2)) ((1 7 1)) ((0 0 1)) ((1 4 0))
   ((1 7 0)) ((1 1 0)) ((1 0 0)) ((1 6 1) (1 6 2)) ((0 0 3) (1 6 0))
   ((0 0 1) (1 7 0)) ((1 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((0 0 2) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Remedy-TheWord (and (isa :NOUN Remedy))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP performedBy drugAdministered patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:OBLIQUE-OBJECT (N fe_affliction) ((PPFn against) fe_affliction)
    ((PPFn to) fe_affliction) (NP drugAdministered) (A drugAdministered)
    ((PPFn of) drugAdministered)
    (AJP fe_degree drugAdministered
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    ((PPFn for) fe_affliction patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    ((PPingFn of) (InverseBinaryPredicateFn treatmentAppliedToCondition)))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 2)) ((0 0 3)) ((1 6 2)) ((1 7 1)) ((0 0 1)) ((1 4 0))
   ((1 7 0)) ((1 1 0)) ((1 0 0)) ((1 6 1) (1 6 2)) ((0 0 3) (1 6 0))
   ((0 0 1) (1 7 0)) ((1 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((0 0 2) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Reminder-TheWord (and (isa :NOUN Reminder))
 (frame FN_Evoking)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT (AJP fe_degree) (Sub fe_phenomenon)
    ((PPFn of) fe_phenomenon) (NP temporallyIntersects))
   (:GAP (CNI subjectOfMentalSituation) (INI subjectOfMentalSituation)
    (DNI fe_phenomenon))))
 (groupPatterns (TheSet ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Remnant-TheWord
 (and (isa :NOUN (RemnantOfTangibleFn :REPLACE))) (frame FN_Remainder)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_remainder))
   (:OBLIQUE-OBJECT ((PPFn in) objectFoundInLocation)
    ((PPFn on) objectFoundInLocation) ((PPFn from) fe_original_context)
    ((PPFn of) fe_original_context unchangedActors))
   (:GAP (2nd objectFoundInLocation) (DEN fe_remainder))
   (:GEN (Poss unchangedActors))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 3 1)) ((0 0 0) (1 3 1))
   ((1 1 0) (1 3 1)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Remnant-TheWord (and (isa :NOUN Resource))
 (frame FN_Remainder)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_remainder))
   (:OBLIQUE-OBJECT ((PPFn in) objectFoundInLocation)
    ((PPFn on) objectFoundInLocation) ((PPFn from) fe_original_context)
    ((PPFn of) fe_original_context unchangedActors))
   (:GAP (2nd objectFoundInLocation) (DEN fe_remainder))
   (:GEN (Poss unchangedActors))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 3 1)) ((0 0 0) (1 3 1))
   ((1 1 0) (1 3 1)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Remonstrance-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn of) communicatorOfInfo)
    ((PPFn to) objectOfEvaluation) ((PPFn against) objectOfEvaluation)
    (AJP fe_manner))
   (:GAP (DNI objectOfEvaluation)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 3 0)) ((3 0 0)) ((1 0 0)) ((1 2 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Remorse-TheWord (and (isa :NOUN Regret))
 (frame FN_Contrition)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn about) objectActedOn) ((PPFn at) objectActedOn)
    ((PPFn for) objectActedOn) ((PPFn over) objectActedOn)
    ((PPingFn at) objectActedOn) ((PPingFn for) objectActedOn)
    (Sfin objectActedOn) (AJP fe_authenticity fe_degree) (AVP fe_degree)
    ((PPFn of) objectActedOn) ((PPFn in) eventAffectsBodyPart))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 10 0)) ((2 0 0)) ((1 9 0)) ((0 0 0)) ((1 7 0)) ((1 6 0))
   ((1 5 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0) (1 8 0)) ((1 7 1) (2 0 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0)) ((1 3 0) (1 8 0))
   ((0 0 0) (1 2 0) (1 7 1)))))

(FNNounSemtrans (TheList "remote" "sensing") Satellite-TheWord
 (and (isa :NOUN EarthRemoteSensingSatellite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "remote") Starter-TheWord
 (and (isa :NOUN RemoteStarter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "removable" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Removable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "removable" "hard") Top-TheWord
 (and (isa :NOUN RemovableHardtop)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Removal-TheWord (and (isa :NOUN RemovingSomething))
 (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn into) to-Generic)
    ((PPFn to) to-Generic) ((PPFn through) trajectory-Complete)
    ((PPFn from) from-Generic) ((PPFn of) objectRemoved) (N objectRemoved)
    (AJP objectRemoved))
   (:GAP (CNI doneBy) (INI from-Generic) (DNI from-Generic objectRemoved))
   (:GEN (Poss objectRemoved))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 6 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 5 0)) ((0 0 0) (0 7 0)) ((0 4 0) (2 0 0))
   ((0 4 0) (0 5 0)) ((0 2 0) (0 4 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 5 0)))))

(FNNounSemtrans (TheList "renal") Artery-TheWord (and (isa :NOUN RenalArtery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "renal") Vein-TheWord (and (isa :NOUN RenalVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "renewable") Energy-TheWord
 (and (isa :NOUN Energy-Renewable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rennet-TheWord (and (isa :NOUN Rennet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Renown-TheWord (and (isa :NOUN LevelOfRenown))
 (frame FN_Fame) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rental") Car-TheWord (and (isa :NOUN RentalCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rental") Home-TheWord
 (and (isa :NOUN RenterOccupiedHousehold)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rent-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance groundRent HumanResidence :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rent-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance monthlyPayment RentalAgreement :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Renter-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance renter RentalAgreement :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Renunciation-TheWord (and (isa :NOUN Abdicating))
 (frame FN_Renunciation)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (AJP topicOfIndividual) ((PPFn of) topicOfIndividual)
    ((PPFn in) genericPathway-Partial temporallyIntersects))
   (:GAP (DNI topicOfIndividual) (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 1 0) (3 0 0)) ((1 1 0) (1 2 1) (3 0 0))
   ((0 0 0) (0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Reorganization-TheWord
 (and (isa :NOUN Reorganization)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Repairman-TheWord (and (isa :NOUN MaintenancePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reparation-TheWord
 (and (isa :NOUN Compensation)
      (relationExistsInstance obligationsCreated Wrongdoing :NOUN))
 (frame FN_Reparation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reparations-TheWord (and (isa :NOUN FinePenalizing))
 (frame FN_Fining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Repayment-TheWord (and (isa :NOUN LoanRepaying))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Repayment-TheWord (and (isa :NOUN RepaymentPlan))
 (frame FN_Repayment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Repentance-TheWord (and (isa :NOUN Regret))
 (frame FN_Contrition)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn eventAffectsBodyPart))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) (A fe_authenticity)
    (AJP fe_authenticity fe_degree) ((PPFn of) objectActedOn))
   (:GAP (DEN objectActedOn))
   (:GEN (Poss objectActedOn eventAffectsBodyPart))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 1)) ((1 2 0)) ((1 1 0)) ((3 0 1)) ((1 0 0))
   ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0)) ((0 0 1) (0 0 1) (1 2 0)))))

(FNNounSemtrans (TheList) Repertoire-TheWord
 (and (isa :NOUN (GroupFn MusicalComposition))) (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_individuals) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Replacement-TheWord
 (and (isa :NOUN ReplacingSomething)) (frame FN_Replacing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Replacement-TheWord
 (and (isa :NOUN ReplacementEvent)) (frame FN_Take_place_of)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_new)) (:OBLIQUE-OBJECT ((PPFn for) objectRemoved))
   (:GAP (DNI fe_new)
    (INI fe_function (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Replica-TheWord (and (isa :NOUN IBTCopying))
 (frame FN_Duplication)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (NP copyProduced) (AJP fe_fidelity) (AVP fe_fidelity)
    (N fe_degree itemCopied) ((PPFn of) itemCopied))
   (:GAP (DEN copyProduced))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 1)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 1 0) (1 4 0))
   ((1 0 0) (1 1 0)) ((1 3 0) (1 3 1)))))

(FNNounSemtrans (TheList) Reply-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response)
 (bindingTemplate
  (TheList (:SUBJECT (QUO infoTransferred) (NP recipientOfInfo performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT (QUO infoTransferred) (Sfin infoTransferred)
    ((PPFn in) infoTransferred) ((PPFn of) performedBy)
    ((PPFn from) performedBy) ((PPFn by) performedBy)
    (Sub temporallyIntersects) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic) ((PPFn to) fe_trigger))
   (:GAP (INI infoTransferred) (CNI performedBy)
    (DNI recipientOfInfo fe_trigger))
   (:GEN (Poss recipientOfInfo performedBy))))
 (groupPatterns
  (TheSet ((2 9 0)) ((2 3 0)) ((2 4 0)) ((2 1 0)) ((0 0 0)) ((2 2 0)) ((4 0 0))
   ((0 1 0)) ((2 9 0) (4 0 1)) ((2 5 0) (2 9 0)) ((0 1 1) (2 9 0))
   ((2 4 0) (2 8 0)) ((0 1 1) (2 7 0)) ((2 1 0) (2 4 0)) ((0 0 0) (2 3 0))
   ((0 1 0) (2 1 0)) ((0 1 1) (0 1 1) (2 9 0)) ((2 0 0) (2 3 0) (2 6 0))
   ((0 1 1) (0 1 1) (1 0 0) (2 9 0)) ((0 1 0) (2 0 0) (2 3 0) (2 9 0)))))

(FNNounSemtrans (TheList) Report-TheWord (and (isa :NOUN NewsArticle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Report-TheWord
 (and (isa :NOUN WrittenReportOnSituation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Report-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP recipientOfInfo infoTransferred performedBy situationTopic))
   (:OBJECT (VPfin infoTransferred))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (Sfin infoTransferred)
    ((PPingFn of) infoTransferred) (VPbrst infoTransferred)
    (VPing infoTransferred) ((PPFn by) performedBy)
    ((PPFn from) performedBy temporallyIntersects)
    ((PPFn in) genericPathway-Partial performedBy temporallyIntersects)
    ((PPFn since) temporallyIntersects)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn on) infoTransferred situationTopic)
    ((PPFn of) infoTransferred performedBy situationTopic)
    (N performedBy temporallyIntersects situationTopic) (NP situationTopic)
    ((PPingFn on) situationTopic)
    (AJP recipientOfInfo fe_depictive fe_iterations fe_manner infoTransferred
     fe_particular_iteration situationTopic)
    ((PPFn concerning) situationTopic) ((PPFn regarding) situationTopic))
   (:GAP (DEN genericPathway-Partial infoTransferred)
    (CNI infoTransferred performedBy)
    (DNI infoTransferred performedBy situationTopic)
    (INI infoTransferred performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 17 0)) ((2 10 1)) ((2 16 0)) ((2 9 1)) ((0 0 3)) ((4 0 0))
   ((2 11 1)) ((2 6 0)) ((2 5 0)) ((0 0 2)) ((2 12 2)) ((2 3 0)) ((2 10 0))
   ((2 15 4)) ((2 1 0)) ((2 2 0)) ((2 7 0)) ((2 11 2)) ((2 12 0)) ((2 11 0))
   ((2 15 1)) ((2 0 0)) ((2 10 1) (4 0 0)) ((2 9 1) (4 0 0))
   ((2 11 1) (2 16 0)) ((0 0 3) (2 6 0)) ((2 6 0) (2 15 6)) ((2 5 0) (2 10 1))
   ((0 0 2) (2 14 0)) ((0 0 2) (2 10 1)) ((0 0 2) (2 9 1)) ((0 0 2) (2 13 0))
   ((2 7 1) (2 7 2)) ((0 0 2) (2 4 0)) ((2 1 0) (4 0 0)) ((2 1 0) (2 6 0))
   ((0 0 2) (2 1 0)) ((2 1 0) (2 12 0)) ((2 2 0) (4 0 0)) ((2 5 0) (2 10 0))
   ((2 11 0) (4 0 0)) ((2 7 0) (2 7 2)) ((2 1 0) (2 15 3)) ((2 9 0) (2 15 3))
   ((1 0 0) (2 15 2)) ((2 6 0) (2 15 1)) ((2 12 0) (2 15 1)) ((0 0 0) (2 10 1))
   ((0 0 0) (2 9 1)) ((2 0 0) (4 0 0)) ((2 0 0) (2 12 1)) ((0 0 0) (2 11 0))
   ((2 15 0) (2 15 3)) ((2 0 0) (2 15 1)) ((0 0 2) (2 0 0) (2 9 1))
   ((0 0 1) (2 8 0) (2 11 2) (2 15 5)) ((2 0 0) (2 5 0) (2 6 1) (2 15 1)))))

(FNNounSemtrans (TheList) Report-TheWord (and (isa :NOUN Reporting))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) (A fe_genre)
    (AJP authorOfLiteraryWork-CW fe_genre mainConstituent startingDate)
    ((PPFn from) authorOfLiteraryWork-CW startingDate)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections) startingDate)
    (N authorOfLiteraryWork-CW (InverseBinaryPredicateFn textualPCWSubSections)
     fe_genre languageWrittenIn startingDate situationTopic)
    ((PPingFn on) situationTopic) ((PPFn into) situationTopic)
    ((PPFn on) situationTopic) ((PPFn about) situationTopic)
    ((PPFn of) startingDate situationTopic) (NP startingDate situationTopic))
   (:GAP (INI authorOfLiteraryWork-CW) (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW startingDate))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 8 0)) ((0 10 1)) ((0 10 0)) ((0 4 1)) ((0 2 2))
   ((0 4 0)) ((0 5 1)) ((2 0 0)) ((0 3 0)) ((0 0 0)) ((0 2 0)) ((0 5 0))
   ((0 4 1) (0 5 5)) ((0 5 3) (0 9 0)) ((0 5 2) (0 11 1)) ((0 1 0) (0 8 0))
   ((0 1 0) (0 10 1)) ((0 1 0) (0 9 0)) ((0 5 1) (0 9 0)) ((0 2 3) (0 4 0))
   ((0 3 0) (0 5 5)) ((0 5 0) (0 5 4)) ((0 8 0) (2 0 0)) ((0 9 0) (2 0 0))
   ((0 0 0) (0 8 0)) ((0 0 0) (0 7 0)) ((0 5 0) (0 5 5)) ((2 0 0) (3 0 0))
   ((0 3 0) (0 11 0)) ((0 2 3) (0 3 0)) ((0 0 0) (0 11 0)) ((0 0 0) (0 5 4))
   ((0 3 1) (0 5 0)) ((0 2 3) (0 5 0)) ((0 2 1) (0 5 0)) ((0 3 0) (0 4 0))
   ((0 0 0) (0 6 0) (2 0 1)) ((0 2 3) (0 3 0) (3 0 0)))))

(FNNounSemtrans (TheList) Reporter-TheWord (and (isa :NOUN Journalist))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Repository-TheWord
 (and (isa :NOUN StorageConstructInABuilding)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reprehension-TheWord
 (and (isa :NOUN CommunicationAct-Single)
      (topicOfInfoTransfer :NOUN ?Evaluating1) (isa ?Evaluating1 Evaluating))
 (frame FN_Judgment_communication) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Representation-TheWord
 (and (isa :NOUN Representation-CooperationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "representational") Process-TheWord
 (and (isa :NOUN RepresentationalCognitiveProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Representative-TheWord
 (and (isa :NOUN USRepresentative)) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_domain activeIngredientsOfType))
   (:GAP (DEN leadersOfMovement)) (:GEN (Poss fe_governed))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 1)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Representative-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists represents :NOUN IntelligentAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reprimand-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP recipientOfInfo communicatorOfInfo genericPathway-Partial))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo)
    ((PPFn from) communicatorOfInfo) (A fe_manner)
    ((PPFn on) genericPathway-Partial) ((PPingFn for) fe_reason)
    ((PPFn for) fe_reason) (AVP temporallyIntersects) (NP temporallyIntersects)
    (Sub temporallyIntersects))
   (:GAP (DNI recipientOfInfo fe_reason))))
 (groupPatterns
  (TheSet ((0 0 0)) ((2 5 0)) ((2 3 0) (2 5 0)) ((0 0 2) (2 2 0))
   ((2 1 0) (2 6 0)) ((0 0 0) (2 1 0)) ((2 1 0) (2 4 0)) ((0 0 1) (2 0 0))
   ((0 0 0) (2 2 0) (2 5 0) (2 7 0)) ((0 0 1) (1 0 0) (2 2 0) (2 8 0))
   ((0 0 1) (1 0 0) (2 2 0) (2 5 0)) ((0 0 0) (2 1 0) (2 2 0) (2 4 0)))))

(FNNounSemtrans (TheList) Reproach-TheWord (and (isa :NOUN Chiding))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_reason)) (:OBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn from) subjectOfMentalSituation)
    ((PPFn of) objectOfEvaluation) ((PPFn to) objectOfEvaluation)
    (AJP fe_manner) (Sfin fe_reason) ((PPFn about) fe_reason)
    ((PPFn at) fe_reason) ((PPingFn of) fe_reason))
   (:GAP (DNI subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 4 0)) ((2 7 0)) ((2 6 0)) ((2 5 0)) ((2 2 0)) ((2 1 0)) ((4 0 0))
   ((2 0 0)) ((2 4 0) (4 0 0)) ((2 3 0) (4 0 0)) ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Reprobate-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (Sinterrog fe_descriptor)
    (AJP fe_persistent_characteristic)
    ((PPFn of) fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "reprocessed") Uranium-TheWord
 (and (isa :NOUN ReprocessedUranium)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reprocessing-TheWord
 (and (isa :NOUN MaterialHandling)) (frame FN_Processing_materials)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (A mainConstituent) (N mainConstituent)
    ((PPFn of) mainConstituent) ((PPFn at) eventOccursAt)
    (VPto purposeOfEvent))
   (:GAP (INI doneBy fe_alterant mainConstituent) (DNI mainConstituent))
   (:NOUN (N doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((3 0 0)) ((1 2 0) (1 4 0))
   ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0)) ((1 1 0) (4 0 0)))))

(FNNounSemtrans (TheList) Reproduction-TheWord
 (and (isa :NOUN BiologicalReproductionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "reproductive") Organ-TheWord
 (and (isa :NOUN SexOrgan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "reproductive") System-TheWord
 (and (isa :NOUN ReproductiveSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reproof-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo communicatorOfInfo))
   (:OBLIQUE-OBJECT ((PPFn from) communicatorOfInfo) (AJP fe_manner)
    ((PPingFn for) fe_reason))
   (:GAP (DNI recipientOfInfo))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 1 0) (1 2 0)) ((0 0 1) (1 1 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Reptile-TheWord (and (isa :NOUN Reptile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reptilia-TheWord (and (isa :NOUN Reptile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Republican-TheWord (and (isa :NOUN Republican))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Repugnance-TheWord
 (and (isa :NOUN (HighAmountFn Disgust))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reputation-TheWord (and (isa :NOUN LevelOfRenown))
 (frame FN_Fame)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_reason) ((PPFn as) fe_reason))
   (:GAP (DNI objectActedOn fe_reason)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Request-TheWord (and (isa :NOUN Request))
 (frame FN_Request)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (VPto infoTransferred)
    ((PPFn to) recipientOfInfo infoTransferred)
    (Sfin meansOfInfoTransfer infoTransferred) ((PPFn from) performedBy)
    (AJP fe_manner performedBy)
    ((PPFn for) recipientOfInfo infoTransferred situationTopic))
   (:GAP (DNI recipientOfInfo infoTransferred performedBy))
   (:NOUN (N infoTransferred)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 0 0)) ((4 0 0)) ((3 0 0)) ((0 0 0) (1 2 1))
   ((1 1 1) (4 0 0)) ((1 5 1) (4 0 0)) ((1 3 0) (1 5 1)) ((0 0 0) (1 5 1))
   ((1 4 1) (1 5 1)) ((0 0 0) (1 2 0)) ((1 4 0) (4 0 0)) ((0 0 0) (1 5 2))
   ((1 1 0) (4 0 0)) ((1 0 0) (1 3 0)) ((1 1 0) (1 5 1))
   ((1 0 0) (1 1 0) (4 0 0)) ((0 0 0) (1 1 0) (1 5 1))
   ((1 0 0) (1 4 0) (1 5 0) (4 0 0)))))

(FNNounSemtrans (TheList) Requirement-TheWord
 (and (isa :NOUN NecessitatingSomething)) (frame FN_Being_necessary)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) fe_dependent) ((PPFn of) fe_dependent))
   (:GAP (INI requirementOfThing) (DEN fe_requirement))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Rescue-TheWord (and (isa :NOUN RescuingSomeone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "research") Paper-TheWord
 (and (isa :NOUN ResearchPaper)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "research") Project-TheWord
 (and (isa :NOUN ResearchProject)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Research-TheWord (and (isa :NOUN Research))
 (frame FN_Research)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy situationTopic))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn among) fe_population)
    ((PPFn for) purposeOfEvent) ((PPFn by) performedBy) (NP performedBy)
    ((PPFn from) fe_manner performedBy) (AVP temporallyIntersects)
    ((PPFn over) temporallyIntersects)
    ((PPFn on) fe_manner eventOccursAt situationTopic)
    (N fe_field fe_question performedBy situationTopic)
    ((PPFn into) fe_question situationTopic)
    (AJP fe_manner by-Underspecified performedBy temporallyIntersects
     situationTopic)
    ((PPFn in) fe_field eventOccursAt situationTopic)
    ((PPFn of) fe_manner fe_question performedBy situationTopic)
    ((PPFn about) situationTopic) (VPing situationTopic)
    (A fe_field by-Underspecified eventOccursAt performedBy situationTopic
     activeIngredientsOfType))
   (:GAP (CNI performedBy) (INI fe_question performedBy situationTopic)
    (DNI situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 16 5)) ((1 15 0)) ((1 8 2)) ((1 13 3)) ((1 14 0)) ((1 12 2))
   ((1 9 3)) ((1 11 4)) ((1 16 4)) ((0 0 1)) ((3 0 0)) ((1 13 2)) ((1 3 0))
   ((1 11 2)) ((1 16 3)) ((1 13 1)) ((1 10 0)) ((1 9 1)) ((1 2 0)) ((1 1 0))
   ((1 12 1)) ((1 11 1)) ((1 16 1)) ((1 13 0)) ((1 12 0)) ((1 9 0)) ((1 16 0))
   ((1 10 1) (3 0 0)) ((1 12 2) (3 0 0)) ((1 9 3) (3 0 0)) ((0 0 0) (1 8 2))
   ((0 0 0) (1 13 3)) ((0 0 0) (1 10 1)) ((0 0 0) (1 12 2)) ((1 10 1) (1 11 2))
   ((1 8 2) (1 16 3)) ((1 16 3) (1 16 4)) ((1 6 0) (1 10 1)) ((1 5 1) (1 11 3))
   ((1 3 0) (1 11 3)) ((1 10 0) (1 16 5)) ((1 10 0) (3 0 0)) ((1 3 0) (1 10 0))
   ((1 4 0) (1 10 0)) ((1 2 0) (3 0 0)) ((0 0 0) (1 12 1)) ((1 16 1) (3 0 0))
   ((1 10 0) (1 11 0)) ((1 8 1) (1 11 0)) ((1 5 0) (1 16 1))
   ((1 12 0) (1 16 5)) ((1 9 3) (1 12 0)) ((1 8 2) (1 16 0))
   ((1 11 3) (1 16 0)) ((1 11 1) (1 16 0)) ((1 8 0) (1 12 0))
   ((1 3 0) (1 11 3) (1 11 4)) ((0 0 0) (1 7 0) (1 10 1))
   ((1 8 2) (1 9 2) (1 16 3)) ((0 0 0) (1 0 0) (1 8 2))
   ((1 8 2) (1 16 2) (3 0 0)) ((1 3 0) (1 11 3) (1 12 1))
   ((0 0 0) (1 8 2) (1 11 0)) ((1 11 0) (1 11 1) (1 13 2))
   ((1 2 0) (1 16 0) (1 16 4)) ((1 3 0) (1 8 2) (1 11 3) (1 16 0)))))

(FNNounSemtrans (TheList "research") Worker-TheWord
 (and (isa :NOUN Researcher)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Researcher-TheWord (and (isa :NOUN Researcher))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Resentment-TheWord (and (isa :NOUN Resentment))
 (frame FN_Experiencer_focus)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBJECT (NP topicOfIndividual))
   (:OBLIQUE-OBJECT ((PPFn about) topicOfIndividual)
    ((PPFn against) topicOfIndividual) ((PPFn as) topicOfIndividual)
    ((PPFn at) topicOfIndividual) ((PPFn of) topicOfIndividual)
    ((PPFn towards) topicOfIndividual) ((PPingFn at) topicOfIndividual)
    (Sfin topicOfIndividual) (A fe_degree) ((PPFn from) objectActedOn)
    (N objectActedOn) ((PPFn in) objectActedOn)
    ((PPFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPingFn for) (InverseBinaryPredicateFn explains-Generic))
    (AVP fe_degree (InverseBinaryPredicateFn explains-Generic))
    ((PPFn on) eventAffectsBodyPart) (AJP fe_degree objectActedOn fe_manner))
   (:GAP (INI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((4 0 0)) ((0 0 0)) ((2 15 0) (2 16 2)) ((2 16 2) (4 0 0))
   ((2 11 0) (2 16 2)) ((2 16 0) (4 0 0)) ((2 10 0) (2 16 0)) ((2 7 0) (2 9 0))
   ((0 0 0) (2 7 0)) ((2 6 0) (4 0 0)) ((2 5 0) (4 0 0)) ((0 0 0) (2 5 0))
   ((2 4 0) (4 0 0)) ((2 3 0) (2 16 1)) ((2 1 0) (4 0 0)) ((2 1 0) (2 16 1))
   ((2 0 0) (2 9 0)) ((2 3 0) (2 16 2) (4 0 0)) ((2 3 0) (2 13 0) (4 0 0))
   ((0 0 0) (1 0 0) (2 12 0)) ((2 4 0) (2 14 0) (2 14 1))
   ((2 2 0) (2 16 0) (4 0 0)) ((0 0 0) (2 1 0) (2 8 0))
   ((0 0 0) (0 0 0) (2 3 0) (2 16 0)) ((0 0 0) (0 0 0) (2 1 0) (2 16 0)))))

(FNNounSemtrans (TheList) Reservation-TheWord (and (isa :NOUN Reservation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reserve-TheWord (and (isa :NOUN Store-Generic))
 (frame FN_Store)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (VPing fe_descriptor)
    (N resourceAvailable) ((PPFn of) resourceAvailable))
   (:GAP (DEN fe_supply)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0) (0 2 0) (2 0 0)) ((0 0 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Reservoir-TheWord (and (isa :NOUN FluidReservoir))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A (InverseBinaryPredicateFn outputsCreated))
    ((PPFn of) containedObject) ((PPFn in) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn on) fe_relative_location)
    (AJP fe_descriptor activeIngredientsOfType) (VPing activeIngredientsOfType)
    (Srel deviceUse)
    (N containedObject mainConstituent fe_relative_location
     activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 8 4)) ((0 6 0)) ((0 8 3)) ((0 5 1)) ((2 0 0)) ((0 4 0)) ((0 2 0))
   ((0 3 0)) ((0 8 2)) ((0 8 1)) ((0 1 0)) ((0 8 0)) ((0 2 0) (0 8 4))
   ((0 5 0) (0 7 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Reservoir-TheWord (and (isa :NOUN WaterReservoir))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "reset") Button-TheWord (and (isa :NOUN ResetButton))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Residence-TheWord
 (and (isa :NOUN ResidentialBuilding)) (frame FN_Buildings)
 (bindingTemplate
  (TheList (:GAP (DEN fe_building))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Residence-TheWord (and (isa :NOUN HumanResidence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Residency-TheWord (and (isa :NOUN ResidingSomewhere))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Resident-TheWord (and (isa :NOUN ResidingSomewhere))
 (frame FN_Residence)
 (bindingTemplate
  (TheList (:SUBJECT (NP residents-Role))
   (:OBLIQUE-OBJECT (AJP residesInDwelling) (N residesInDwelling)
    ((PPFn at) residesInDwelling) ((PPFn in) residesInDwelling)
    ((PPFn of) residesInDwelling) ((PPFn on) residesInDwelling)
    (NP residents-Role))
   (:GAP (DNI residesInDwelling) (DEN residents-Role))
   (:NOUN (N residents-Role)) (:GEN (Poss residesInDwelling))
   (:APPOSITIVE (NP residents-Role))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 5 0)) ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((1 1 0) (1 6 0)) ((1 1 0) (5 0 0))
   ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Resignation-TheWord (and (isa :NOUN Resigning))
 (frame FN_Quitting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) topicOfStatusChange)
    ((PPFn after) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn over) (InverseBinaryPredicateFn explains-Generic)) ((PPFn as) job)
    ((PPFn from) employer job) ((PPFn in) temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GEN (Poss topicOfStatusChange temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 5 0) (1 0 0)) ((0 0 0) (1 0 1))
   ((0 0 0) (0 6 0)) ((0 0 0) (0 5 0)) ((0 4 1) (1 0 0)) ((0 3 0) (1 0 0))
   ((0 2 0) (1 0 0)) ((0 4 0) (1 0 0)) ((0 4 1) (0 6 0) (1 0 0))
   ((0 3 0) (0 5 0) (1 0 0)) ((0 1 0) (0 6 0) (1 0 0)))))

(FNNounSemtrans (TheList) Resin-TheWord (and (isa :NOUN Resin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Resistor-TheWord (and (isa :NOUN Resistor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Resolution-TheWord (and (isa :NOUN Resolution))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Resort-TheWord (and (isa :NOUN Resort-Attraction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "resort") Area-TheWord
 (and (isa :NOUN Resort-Attraction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Resource-TheWord (and (isa :NOUN Resources))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Respect-TheWord
 (and (isa :NOUN (EvaluatingFn Goodness-Generic))) (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn from) subjectOfMentalSituation)
    ((PPFn for) objectOfEvaluation))
   (:GAP (INI subjectOfMentalSituation fe_reason) (DNI fe_reason))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Respect-TheWord (and (isa :NOUN Respect))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Respiration-TheWord (and (isa :NOUN Respiration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "respiratory") Disease-TheWord
 (and (isa :NOUN RespiratoryAilment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "respiratory") System-TheWord
 (and (isa :NOUN RespiratorySystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Respite-TheWord (and (isa :NOUN Resting-Relaxing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Response-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner by-Underspecified genericPathway-Partial)
    (QUO infoTransferred) ((PPFn by) performedBy) ((PPFn of) performedBy)
    ((PPFn from) performedBy) ((PPFn to) recipientOfInfo fe_trigger)
    (Poss fe_trigger) (VPto fe_trigger))
   (:GAP (DEN infoTransferred) (CNI recipientOfInfo performedBy)
    (DNI recipientOfInfo infoTransferred performedBy fe_trigger))
   (:NOUN (N recipientOfInfo)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 0 0)) ((4 0 0)) ((1 3 0)) ((1 5 1)) ((3 0 0)) ((1 2 0))
   ((1 0 1)) ((0 0 0) (1 7 0)) ((1 5 0) (4 0 0)) ((0 0 0) (1 4 0))
   ((1 6 0) (4 0 0)) ((1 5 1) (4 0 0)) ((1 3 0) (1 5 1)) ((0 0 1) (1 5 1))
   ((1 0 2) (1 5 1)) ((0 0 1) (1 1 0) (1 5 1)) ((0 0 1) (1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Response-TheWord (and (isa :NOUN Action))
 (frame FN_Response)
 (bindingTemplate
  (TheList (:SUBJECT (Poss doneBy) (NP doneBy fe_response) (Sfin fe_response))
   (:OBLIQUE-OBJECT ((PPFn from) doneBy) ((PPFn of) doneBy)
    (NP fe_responding_entity) ((PPFn in) eventOccursAt fe_responding_entity)
    ((PPFn by) doneBy fe_responding_entity) ((PPFn against) fe_response)
    (A hasPhysicalQuantity fe_responding_entity fe_response) (Sfin fe_response)
    ((PPFn on) temporallyIntersects) ((PPFn at) temporallyIntersects)
    (N doneBy hasPhysicalQuantity temporallyIntersects)
    ((PPFn after) temporallyIntersects) ((PPFn to) fe_trigger)
    ((PPFn for) fe_trigger)
    (AJP doneBy hasPhysicalQuantity fe_manner
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)) temporallyIntersects
     fe_trigger)
    (VPto fe_trigger) ((PPFn towards) fe_trigger))
   (:GAP (INC doneBy) (INI doneBy) (2nd doneBy fe_responding_entity)
    (DEN fe_responding_entity fe_response) (CNI doneBy fe_response)
    (DNI doneBy fe_responding_entity fe_trigger))
   (:GEN (Poss doneBy fe_responding_entity))))
 (groupPatterns
  (TheSet ((1 15 0)) ((1 16 0)) ((1 7 0)) ((1 6 2)) ((1 10 1)) ((1 6 0))
   ((1 0 0)) ((1 12 0)) ((1 4 0)) ((1 2 0)) ((1 14 2)) ((1 14 1)) ((1 14 0))
   ((0 1 1) (1 15 0)) ((1 3 1) (1 6 0)) ((1 13 0) (3 0 0)) ((1 1 0) (1 15 0))
   ((1 1 0) (1 12 0)) ((1 4 0) (1 12 0)) ((0 1 0) (1 12 0)) ((1 10 0) (1 13 0))
   ((0 1 0) (1 10 2)) ((1 0 0) (1 14 4)) ((0 0 0) (1 14 3)) ((1 0 0) (1 14 3))
   ((0 1 0) (1 5 0)) ((0 2 0) (1 12 0)) ((0 1 1) (1 12 0)) ((1 12 0) (3 0 0))
   ((0 1 0) (1 14 5)) ((1 0 0) (1 14 2)) ((1 4 0) (1 14 2)) ((1 1 0) (1 14 2))
   ((0 1 1) (1 11 0) (1 12 0)) ((1 12 0) (1 14 1) (3 0 1))
   ((1 0 0) (1 12 0) (1 14 4)) ((1 10 0) (1 12 0) (1 14 4))
   ((1 12 0) (1 14 2) (3 0 0)) ((0 1 0) (1 12 0) (1 14 2))
   ((1 10 0) (1 12 0) (1 14 2)) ((0 1 0) (1 9 0) (1 14 2))
   ((1 8 0) (1 10 0) (1 14 2)) ((0 1 1) (1 12 0) (1 14 2))
   ((1 3 0) (1 12 0) (1 14 2)) ((1 4 1) (1 6 1) (1 14 2) (1 15 0))
   ((0 1 1) (1 1 0) (1 12 0) (1 14 2)))))

(FNNounSemtrans (TheList) Responsibility-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPingFn while) fe_condition) (AJP obligationsCreated)
    ((PPFn for) obligationsCreated) (VPto obligationsCreated) (N doneBy)
    (NP doneBy) ((PPFn of) doneBy))
   (:GAP (DEN obligationsCreated) (DNI obligationsCreated doneBy))
   (:APPOSITIVE (VPing obligationsCreated))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 2 0)) ((0 0 0) (0 0 0)) ((1 3 0) (1 6 0))
   ((1 1 0) (1 2 0)) ((0 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "rest") Room-TheWord (and (isa :NOUN Restroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rest-TheWord (and (isa :NOUN Resting-Relaxing))
 (frame FN_Rest)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_rest) (DNI parts (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Restaurant-TheWord (and (isa :NOUN RestaurantSpace))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor) (AJP fe_descriptor)
    (N fe_descriptor fe_relative_location))
   (:GAP (DEN eventLocale) (INI locationUse))
   (:GEN (NP fe_relative_location))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Restaurant-TheWord
 (and (isa :NOUN Restaurant-Organization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Restitution-TheWord
 (and (isa :NOUN Compensation)
      (relationExistsInstance obligationsCreated Wrongdoing :NOUN))
 (frame FN_Reparation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Restlessness-TheWord (and (isa :NOUN Restlessness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Restraint-TheWord
 (and (isa :NOUN Restraint-PhysicalDevice)) (frame FN_Hindering)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Result-TheWord
 (and (isa :NOUN Thing)
      (relationInstanceExists causes-Underspecified :NOUN Thing))
 (frame FN_Causation)
 (bindingTemplate
  (TheList (:SUBJECT (NP causes-Underspecified))
   (:OBLIQUE-OBJECT (Sfin fe_effect) (NP fe_effect) (AJP fe_manner)
    ((PPFn of) causes-Underspecified temporallyIntersects))
   (:GAP (INI doneBy objectActedOn) (DEN fe_effect)
    (DNI doneBy objectActedOn causes-Underspecified fe_effect))
   (:NOUN (Sfin fe_effect))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 0 0)) ((1 3 0)) ((0 0 0)) ((1 0 0) (1 3 0))
   ((1 1 0) (1 3 0)) ((1 3 0) (3 0 0)) ((1 1 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Resurrection-TheWord (and (isa :NOUN Resurrection))
 (frame FN_Resurrection)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) ((PPFn for) affectedAgent)
    ((PPFn of) affectedAgent))
   (:GAP (DNI affectedAgent)) (:GEN (Poss affectedAgent))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Resuscitation-TheWord
 (and (isa :NOUN RefreshingSomething)) (frame FN_Rejuvenation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Retailer-TheWord (and (isa :NOUN RetailOrganization))
 (frame FN_Commerce_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Retailer-TheWord
 (and (isa :NOUN Buying) (relationInstanceExists seller :NOUN SocialBeing))
 (frame FN_Commerce_sell)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer))
   (:OBLIQUE-OBJECT (A objectOfPossessionTransfer)
    (N objectOfPossessionTransfer) ((PPFn for) objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer))
   (:GAP (DEN buyer seller))))
 (groupPatterns (TheSet ((1 3 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Retaliation-TheWord (and (isa :NOUN RevengeAction))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_punishment))
   (:OBLIQUE-OBJECT (AJP performedBy) ((PPFn from) performedBy)
    ((PPFn for) fe_injury) ((PPFn to) fe_injury) ((PPingFn for) fe_injury)
    ((PPFn by) performedBy instrument-Generic) ((PPFn against) fe_offender)
    (N performedBy fe_punishment) (A performedBy fe_manner fe_punishment)
    ((PPFn in) temporallyIntersects) ((PPFn on) temporallyIntersects))
   (:GAP (CNI performedBy) (DNI fe_injury fe_offender) (INI fe_offender))
   (:NOUN (Sfin fe_punishment)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 8 2)) ((1 8 1)) ((1 7 1)) ((1 2 0)) ((1 6 0)) ((4 0 0)) ((1 1 0))
   ((1 5 0)) ((0 0 0)) ((1 0 0)) ((1 5 1) (1 8 1)) ((0 0 1) (1 4 0))
   ((0 0 1) (1 2 0)) ((1 2 0) (3 0 0)) ((1 5 0) (1 6 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 0)) ((1 6 0) (1 8 0)) ((0 0 1) (0 0 1) (1 2 0))
   ((0 0 0) (1 2 0) (1 10 0)) ((0 0 0) (1 2 0) (1 9 0))
   ((0 0 1) (1 2 0) (1 7 0)))))

(FNNounSemtrans (TheList) Retardation-TheWord
 (and (isa :NOUN MentalRetardation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reticence-TheWord (and (isa :NOUN Reticence))
 (frame FN_Volubility)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) performedBy) ((PPingFn in) fe_text)
    ((PPingFn over) situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 2 0) (1 0 0)) ((0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Reticule-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reticulum-TheWord (and (isa :NOUN Organ))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Retina-TheWord (and (isa :NOUN Retina))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Retirement-TheWord (and (isa :NOUN Resigning))
 (frame FN_Quitting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) topicOfStatusChange) ((PPFn as) job)
    ((PPFn from) employer fe_field job) ((PPingFn from) job)
    ((PPFn in) temporallyIntersects) ((PPFn on) temporallyIntersects))
   (:GEN (Poss topicOfStatusChange temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 2 2)) ((1 0 0)) ((0 0 0)) ((0 5 0) (1 0 0)) ((0 4 0) (1 0 0))
   ((0 0 0) (1 0 1)) ((0 3 0) (1 0 0)) ((0 2 2) (1 0 0)) ((0 1 0) (1 0 0))
   ((0 2 1) (1 0 0)) ((0 2 0) (1 0 0)))))

(FNNounSemtrans (TheList) Retort-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response)
 (bindingTemplate
  (TheList (:SUBJECT (QUO infoTransferred) (NP performedBy) (Poss performedBy))
   (:OBLIQUE-OBJECT ((PPFn at) recipientOfInfo) (AJP fe_manner)
    (NP infoTransferred) (QUO infoTransferred) (Sfin infoTransferred)
    ((PPFn from) performedBy) ((PPFn about) situationTopic)
    ((PPFn to) infoTransferred fe_trigger))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 1)) ((2 0 0)) ((1 5 0)) ((0 1 0)) ((1 4 0)) ((0 1 0) (1 7 1))
   ((0 1 0) (1 6 0)) ((1 4 0) (2 0 0)) ((1 4 0) (1 5 0)) ((1 3 0) (2 0 0))
   ((0 2 0) (1 3 0)) ((0 1 0) (1 3 0)) ((0 1 0) (1 7 0)) ((1 2 0) (2 0 0))
   ((0 0 0) (1 1 0)) ((0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Retreat-TheWord
 (and (isa :NOUN RetreatingFromAnArea)) (frame FN_Quitting_a_place)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn behind) fe_intended_goal)
    ((PPFn into) fe_intended_goal) ((PPFn to) fe_intended_goal)
    ((PPFn across) trajectory-Complete) ((PPFn along) trajectory-Complete)
    ((PPFn through) trajectory-Complete) ((PPFn towards) trajectory-Complete)
    ((PPFn over) trajectory-Complete) (N performedBy) ((PPFn by) performedBy)
    (AJP fe_manner performedBy) ((PPFn of) performedBy)
    ((PPFn from) from-Generic))
   (:GAP (CNI performedBy) (DNI performedBy from-Generic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 11 0)) ((1 8 0)) ((1 12 0)) ((1 10 1)) ((1 7 0))
   ((1 1 0)) ((1 12 0) (3 0 0)) ((1 9 0) (1 12 0)) ((1 8 0) (1 12 0))
   ((1 10 1) (1 12 0)) ((1 5 0) (3 0 0)) ((1 10 0) (3 0 0)) ((0 0 0) (1 10 0))
   ((1 2 0) (3 0 0)) ((1 2 0) (1 9 0)) ((1 1 0) (1 8 0)) ((1 0 0) (3 0 0))
   ((1 2 0) (1 10 0)) ((1 6 0) (1 10 0) (3 0 0)) ((1 5 0) (1 10 0) (3 0 0))
   ((0 0 0) (1 4 0) (1 10 0)) ((0 0 0) (1 3 0) (1 10 0))
   ((0 0 0) (1 2 0) (1 10 0)))))

(FNNounSemtrans (TheList) Retribution-TheWord (and (isa :NOUN RevengeAction))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_injury))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPingFn for) fe_injury)
    (AJP performedBy fe_manner) ((PPFn on) fe_offender)
    ((PPFn upon) fe_offender) ((PPFn from) fe_offender)
    ((PPFn against) fe_offender) ((PPFn for) fe_injury fe_offender))
   (:GAP (DNI fe_injury fe_offender)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 2 1)) ((1 3 0)) ((1 6 0)) ((3 0 0)) ((0 0 0))
   ((1 2 1) (1 7 1)) ((0 0 1) (1 2 1)) ((1 2 0) (1 3 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 1 0) (1 5 0)) ((0 0 0) (1 2 1) (1 4 0) (1 7 0)))))

(FNNounSemtrans (TheList) Retriever-TheWord (and (isa :NOUN Retriever-Dog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "retromandibular") Vein-TheWord
 (and (isa :NOUN RetroMandibularVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Return-TheWord (and (isa :NOUN ArrivingAtAPlace))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectMoving))
   (:OBLIQUE-OBJECT ((PPFn into) to-Generic) ((PPFn to) to-Generic)
    (AJP fe_manner) ((PPFn towards) trajectory-Complete)
    ((PPFn from) from-Generic) ((PPFn of) objectMoving)
    ((PPFn by) deviceTypeUsed objectMoving temporallyIntersects))
   (:GAP (DNI to-Generic) (CNI objectMoving)) (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 1 0)) ((3 0 0)) ((1 5 0)) ((0 0 0) (1 6 2))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 6 1)) ((1 0 0) (3 0 0)) ((1 4 0) (3 0 0))
   ((1 4 0) (1 5 0)) ((1 1 0) (1 6 0)) ((1 1 0) (1 4 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Return-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance investmentReturn Investing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Reunion-TheWord (and (isa :NOUN Reunion-Gathering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revelation-TheWord
 (and (isa :NOUN RevealingTrueInformation)) (frame FN_Reveal_secret)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_information performedBy))
   (:OBLIQUE-OBJECT (Sfin fe_information) ((PPFn by) performedBy)
    ((PPFn from) performedBy) ((PPFn of) fe_information performedBy)
    (AJP temporallyIntersects) (AVP temporallyIntersects)
    ((PPFn about) situationTopic) ((PPFn on) situationTopic)
    ((PPFn concerning) situationTopic) ((PPingFn about) situationTopic))
   (:GAP (CNI performedBy) (INI performedBy) (DNI performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 7 0)) ((1 8 0)) ((1 6 0)) ((3 0 0)) ((1 3 1)) ((1 2 0))
   ((1 1 0)) ((0 0 1)) ((1 0 0)) ((1 3 0)) ((0 0 0)) ((1 5 0) (1 6 0))
   ((1 4 0) (1 8 0)) ((1 4 0) (1 6 0)) ((1 8 0) (3 0 0)) ((1 6 0) (3 0 0))
   ((1 1 0) (1 7 0)) ((0 0 1) (1 6 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0))
   ((1 3 0) (3 0 0)) ((1 2 0) (1 3 0)) ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Revenge-TheWord (and (isa :NOUN RevengeAction))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_injured_party fe_punishment))
   (:OBLIQUE-OBJECT ((PPFn of) performedBy) ((PPFn for) fe_injury)
    ((PPingFn for) fe_injury) (AJP fe_degree fe_manner) ((PPFn on) fe_offender)
    ((PPFn upon) fe_offender) ((PPFn against) fe_offender)
    (Sinterrog fe_punishment) ((PPingFn by) fe_punishment) (VPed fe_punishment)
    (NP temporallyIntersects) (AVP temporallyIntersects))
   (:GAP (CNI performedBy) (2nd fe_injured_party fe_injury)
    (DNI fe_injury fe_offender)
    (INI fe_injured_party fe_injury fe_offender fe_punishment))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 0 0)) ((0 0 0)) ((1 1 0)) ((3 0 0)) ((0 0 2) (1 1 0))
   ((0 0 1) (1 9 0)) ((1 2 0) (1 3 0)) ((0 0 2) (1 0 0)) ((0 0 0) (1 8 0))
   ((1 4 0) (3 0 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 1)) ((0 0 0) (1 5 0))
   ((0 0 0) (3 0 0)) ((0 0 2) (1 1 0) (3 0 0)) ((0 0 2) (1 4 0) (3 0 0))
   ((0 0 2) (1 0 0) (1 5 0)) ((0 0 0) (1 2 0) (1 4 0))
   ((0 0 0) (1 3 0) (1 4 0)) ((0 0 0) (1 4 0) (3 0 0))
   ((0 0 0) (0 0 0) (1 1 0)) ((0 0 2) (1 2 0) (1 4 0) (3 0 0))
   ((0 0 0) (1 4 0) (1 11 0) (3 0 0)) ((0 0 0) (1 7 0) (1 10 0) (3 0 0)))))

(FNNounSemtrans (TheList) Revenger-TheWord
 (and (isa :NOUN SocialBeing)
      (relationExistsInstance performedBy RevengeAction :NOUN))
 (frame FN_Revenge) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revenue-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance revenue SocialBeing :NOUN))
 (frame FN_Earnings_and_losses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectOfPossessionTransfer by-Underspecified))
   (:GAP (INI sellingPerformer) (DEN basicPrice-Event))
   (:GEN (Poss sellingPerformer))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Reverence-TheWord (and (isa :NOUN Reverence))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn for) objectOfEvaluation)
    ((PPFn to) objectOfEvaluation) ((PPFn towards) objectOfEvaluation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 1 0)) ((1 1 0) (2 0 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "reverse") Mortgage-TheWord
 (and (isa :NOUN ReverseMortgage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Review-TheWord (and (isa :NOUN Review-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revitalization-TheWord
 (and (isa :NOUN RefreshingSomething)) (frame FN_Rejuvenation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revival-TheWord (and (isa :NOUN Resurgence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revival-TheWord (and (isa :NOUN RefreshingSomething))
 (frame FN_Rejuvenation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))
   (:GAP (DNI causes-Underspecified))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Revolt-TheWord (and (isa :NOUN Coup))
 (frame FN_Change_of_leadership)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn against) losesControl))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Revolution-TheWord
 (and (isa :NOUN Revolution-Political)) (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_selector))
   (:OBLIQUE-OBJECT ((PPFn by) by-Underspecified) ((PPFn against) losesControl)
    (VPto eventOutcomes) (A takesControl fe_selector)
    (AJP by-Underspecified fe_selector)
    ((PPFn in) eventOccursAt temporallyIntersects)
    (N fe_selector temporallyIntersects))
   (:GAP (DNI losesControl)
    (INI fe_function takesControl losesControl losesControl
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)) fe_selector))
   (:NOUN (NP eventOutcomes)) (:GEN (Poss fe_selector))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 6 1)) ((4 0 0)) ((1 4 1)) ((1 3 1)) ((1 2 0)) ((3 0 0))
   ((1 6 0)) ((1 1 0)) ((1 5 0)) ((1 3 0)) ((1 5 1) (1 6 0)) ((1 1 0) (4 0 0))
   ((0 0 0) (1 1 0)) ((1 4 0) (4 0 0)) ((1 0 0) (1 2 0))
   ((1 1 0) (1 4 0) (4 0 0)))))

(FNNounSemtrans (TheList) Revolutionary-TheWord (and (isa :NOUN Revolutionary))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_depictive))
   (:GAP
    (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)) fe_selector))))
 (groupPatterns (TheSet ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Revolutionist-TheWord (and (isa :NOUN Revolutionary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "revolutions" "per") Minute-TheWord
 (and (isa :NOUN RevolutionsPerMinute)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revolver-TheWord (and (isa :NOUN Revolver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Revolver-TheWord (and (isa :NOUN Revolver))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType)
    (AJP fe_descriptor doneBy))
   (:GAP (DEN instrument-UsedAsWeapon) (-- instrument-UsedAsWeapon))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 1)) ((0 0 0)) ((0 1 0)) ((0 0 1) (2 0 0))
   ((0 0 0) (0 0 1) (0 1 1)))))

(FNNounSemtrans (TheList) Revulsion-TheWord (and (isa :NOUN Disgust))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (Sinterrog situationConstituents)
    ((PPFn amongst) objectActedOn) (AJP fe_degree objectActedOn)
    (NP objectActedOn) ((PPFn within) objectActedOn)
    ((PPFn in) eventAffectsBodyPart)
    ((PPFn towards) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn against) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn for) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn with) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn from) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn of) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn about) situationTopic))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 13 0)) ((1 6 0)) ((1 12 0)) ((1 11 0)) ((1 8 0)) ((1 7 0))
   ((1 5 0)) ((2 0 0)) ((1 4 0)) ((0 0 0)) ((1 3 0)) ((1 2 0)) ((1 0 0))
   ((1 10 0) (2 0 0)) ((1 9 0) (2 0 0)) ((1 8 0) (2 0 0)) ((1 2 1) (1 7 0))
   ((1 1 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Reward-TheWord (and (isa :NOUN Reward))
 (frame FN_Rewards_and_punishments)
 (bindingTemplate (TheList (:GAP (DNI doneBy objectOfEvaluation fe_reason))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rf") Combiner-TheWord (and (isa :NOUN RFCombiner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhenium-TheWord (and (isa :NOUN Rhenium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rheumatologist-TheWord
 (and (isa :NOUN Rheumatologist)) (frame FN_Medical_professionals)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rheumatology-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Rheumatologist)))
 (frame FN_Medical_specialties) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhino-TheWord (and (isa :NOUN Rhinoceros))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhinoceros-TheWord (and (isa :NOUN Rhinoceros))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhizome-TheWord (and (isa :NOUN Rhizome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rhodesian") Ridgeback-TheWord
 (and (isa :NOUN RhodesianRidgeback)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhodium-TheWord (and (isa :NOUN Rhodium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhododendron-TheWord (and (isa :NOUN Rhododendron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhomboid-TheWord (and (isa :NOUN Rhomboid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhombus-TheWord (and (isa :NOUN Rhombus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhyme-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rhythm-TheWord (and (isa :NOUN RhythmicSound))
 (frame FN_Temporal_pattern)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_process)
    (Sing fe_process))
   (:GAP (DEN fe_pattern))))
 (groupPatterns (TheSet ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "rib") Cage-TheWord (and (isa :NOUN RibCage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rib-TheWord (and (isa :NOUN Rib-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ribbon-TheWord (and (isa :NOUN HairRibbon))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) wornOn) (AJP fe_descriptor mainConstituent)
    ((PPFn of) fe_descriptor mainConstituent)
    (N mainConstituent clothingStyle deviceUse) ((PPFn for) deviceUse))
   (:GAP (DEN fe_accoutrement) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 1)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 3 2) (2 0 0)) ((0 1 0) (0 4 0)) ((0 1 0) (0 3 0))
   ((0 1 0) (0 3 2) (2 0 0)) ((0 1 0) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Ribbon-TheWord (and (isa :NOUN FastenerConnection))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_connected_item)
    ((PPFn in) fe_connected_item) ((PPFn at) eventOccursAt)
    (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN fe_connector))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 3 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0)))))

(FNNounSemtrans (TheList) Ribbon-TheWord (and (isa :NOUN Tape))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_connected_item)
    ((PPFn in) fe_connected_item) ((PPFn at) eventOccursAt)
    (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN fe_connector))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 3 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0)))))

(FNNounSemtrans (TheList) Ribosome-TheWord (and (isa :NOUN Ribosome))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rice") Cooker-TheWord (and (isa :NOUN RiceCooker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rice-TheWord (and (isa :NOUN Rice-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rice-TheWord (and (isa :NOUN RicePlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rice") Paddy-TheWord
 (and (isa :NOUN (FieldFn RicePlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ricin-TheWord (and (isa :NOUN RicinToxin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rickets-TheWord (and (isa :NOUN Rickets))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rickettsia-TheWord (and (isa :NOUN Rickettsia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rictus-TheWord (and (isa :NOUN Grinning))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) fe_conveyed_emotion fe_expression)
    (AJP fe_degree fe_internal_cause fe_manner))
   (:GAP (DEN fe_expression))))
 (groupPatterns
  (TheSet ((1 1 2)) ((1 1 1)) ((1 0 0)) ((1 0 0) (1 1 2))
   ((0 0 0) (1 0 1) (1 1 2)) ((1 1 0) (1 1 2) (1 1 2)))))

(FNNounSemtrans (TheList) Riddle-TheWord (and (isa :NOUN Riddle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ride-TheWord (and (isa :NOUN AmusementParkRide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ride-TheWord
 (and (isa :NOUN TransportationEvent) (rider :NOUN ?actor)
      (vehicle :NOUN ?vehicle) (on-Physical :NOUN ?actor))
 (frame FN_Ride_vehicle)
 (bindingTemplate
  (TheList (:SUBJECT (NP transporter))
   (:OBLIQUE-OBJECT (AJP distanceTranslated) ((PPFn to) to-Generic)
    ((PPFn from) from-Generic) (N duration transporter)
    ((PPFn on) transporter))
   (:GAP (INI to-Generic rider))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 3 0) (1 3 1)) ((1 0 0) (1 3 1))
   ((1 1 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Ridge-TheWord (and (isa :NOUN Ridge))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn within) fe_container_possessor)
    ((PPFn in) fe_container_possessor fe_relative_location)
    ((PPFn on) fe_container_possessor fe_relative_location)
    ((PPFn above) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn of) parts fe_container_possessor
     (InverseBinaryPredicateFn nameString) fe_relative_location)
    (AJP parts fe_descriptor fe_relative_location activeIngredientsOfType)
    (N parts fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location activeIngredientsOfType)
    (VPing activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 2 1)) ((0 5 3)) ((0 1 1)) ((0 4 0)) ((0 3 0)) ((0 7 3))
   ((0 6 2)) ((0 5 2)) ((0 7 2)) ((0 7 1)) ((0 6 1)) ((0 1 0)) ((0 5 0))
   ((0 7 0)) ((0 6 0)) ((0 6 2) (0 7 4)) ((0 3 0) (0 7 3)) ((0 5 2) (0 7 3))
   ((0 2 1) (0 7 2)) ((0 1 1) (0 7 2)) ((0 0 0) (0 6 3)) ((0 1 1) (0 6 0))
   ((0 2 0) (0 7 0)) ((0 5 1) (0 7 0)))))

(FNNounSemtrans (TheList) Ridicule-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_communication)
 (bindingTemplate
  (TheList (:SUBJECT (NP communicatorOfInfo objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn amongst) communicatorOfInfo)
    ((PPFn by) communicatorOfInfo) ((PPFn from) communicatorOfInfo)
    ((PPFn on) objectOfEvaluation) ((PPFn against) objectOfEvaluation)
    ((PPFn into) objectOfEvaluation)
    ((PPFn of) communicatorOfInfo objectOfEvaluation) (AJP fe_manner)
    ((PPFn for) fe_reason) ((PPFn because of) fe_reason)
    ((PPingFn for) fe_reason))
   (:GAP (CNI communicatorOfInfo)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 10 0)) ((1 9 0)) ((1 7 0)) ((1 6 1)) ((0 0 1)) ((1 3 0))
   ((3 0 0)) ((1 6 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 6 0) (1 7 0))
   ((1 6 1) (3 0 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 4 0))
   ((0 0 1) (0 0 1) (1 8 0)))))

(FNNounSemtrans (TheList "riding") Board-TheWord (and (isa :NOUN SportBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "riding") Boot-TheWord (and (isa :NOUN RidingBoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "riding") Helmet-TheWord
 (and (isa :NOUN RidingHelmet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "riding") Mower-TheWord
 (and (isa :NOUN LawnMower-Riding)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Riel-TheWord (and (isa :NOUN Riel-Cambodia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rifle") Grenade-TheWord
 (and (isa :NOUN RifleGrenade)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rifle") Range-TheWord (and (isa :NOUN FiringRange))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rifle-TheWord (and (isa :NOUN Rifle))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) parts) (A activeIngredientsOfType)
    (AJP activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 2)) ((0 3 1)) ((0 2 0)) ((0 0 0)) ((0 3 0))
   ((0 3 1) (2 0 0)) ((0 2 0) (0 2 0)) ((0 1 0) (0 2 0) (0 3 1)))))

(FNNounSemtrans (TheList) Rigging-TheWord (and (isa :NOUN Rigging))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "right") Atrium-TheWord (and (isa :NOUN RightAtrium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "right" "coronary") Artery-TheWord
 (and (isa :NOUN RightCoronaryArtery-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "right") Hemisphere-TheWord
 (and (isa :NOUN (RightObjectOfPairFn CerebralHemisphere))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Right-TheWord (and (isa :NOUN Turning))
 (frame FN_Change_direction) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Right-TheWord (and (isa :NOUN RightObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Right-TheWord (and (isa :NOUN Rights-Abstract))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Right-TheWord (and (isa :NOUN RightSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DNI parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Right-TheWord (and (isa :NOUN Republican))
 (frame FN_People_along_political_spectrum) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "right") Ventricle-TheWord
 (and (isa :NOUN RightVentricle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rightist-TheWord (and (isa :NOUN Rightist))
 (frame FN_People_along_political_spectrum) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rigidity-TheWord (and (isa :NOUN Rigidity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rill-TheWord (and (isa :NOUN (SmallFn Stream)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) parts)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Rim-TheWord (and (isa :NOUN Rim-BoundaryLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rind-TheWord (and (isa :NOUN ShapedObject))
 (frame FN_Shaped_part) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ring") Finger-TheWord (and (isa :NOUN RingFinger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ring-TheWord (and (isa :NOUN Ring-Jewelry))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) ((PPFn with) fe_descriptor)
    (AJP mainConstituent clothingStyle)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement) (2nd wearer))
   (:GEN (Poss fe_descriptor wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 3 2)) ((0 3 1)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 3 2) (2 0 1)) ((0 3 0) (2 0 1)) ((0 2 0) (0 2 1)) ((0 3 2) (2 0 0))
   ((0 2 0) (0 3 2) (2 0 1)) ((0 3 0) (0 3 1) (0 3 2) (2 0 1)))))

(FNNounSemtrans (TheList) Ring-TheWord (and (isa :NOUN Ring-Jewelry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ring-TheWord (and (isa :NOUN RingShapedObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ringer-TheWord
 (and (isa :NOUN (CausingFn EmittingSound))) (frame FN_Cause_to_make_noise)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N doneBy)) (:GAP (DEN doneBy) (INI doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Riot-TheWord (and (isa :NOUN Rioting))
 (frame FN_Chaos) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Riposte-TheWord (and (isa :NOUN Replying))
 (frame FN_Communication_response)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn from) performedBy) ((PPFn of) performedBy)
    ((PPingFn about) situationTopic) (Sfin infoTransferred fe_trigger)
    (NP fe_trigger) ((PPFn to) recipientOfInfo fe_trigger))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 5 1)) ((1 4 0)) ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 3 0)) ((1 5 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (2 0 0)) ((0 0 0) (1 3 0)) ((1 5 0) (2 0 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 3 0) (1 3 1)))))

(FNNounSemtrans (TheList) Rise-TheWord (and (isa :NOUN AscendingEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList (:SUBJECT (N fe_attribute) (NP fe_attribute objectOfStateChange))
   (:OBLIQUE-OBJECT (AJP fe_attribute) (N fe_attribute)
    ((PPFn over) fe_correlated_variable) ((PPFn on) fe_correlated_variable)
    ((PPFn in) fe_attribute fe_correlated_variable)
    ((PPFn with) fe_correlated_variable)
    (NP fe_attribute fe_degree fe_difference)
    ((PPFn to) fe_final_state fe_final_value) ((PPFn above) fe_final_value)
    ((PPFn from) fe_initial_value)
    ((PPFn of) fe_correlated_variable fe_difference objectOfStateChange)
    (A fe_degree rateOfEvent)
    ((PPFn by) fe_attribute fe_degree fe_difference temporallyIntersects))
   (:GAP (DNI fe_attribute fe_initial_state objectOfStateChange)
    (2nd objectOfStateChange)
    (INI fe_attribute fe_difference objectOfStateChange))
   (:GEN (Poss objectOfStateChange))))
 (groupPatterns
  (TheSet ((0 1 1)) ((1 4 0)) ((0 1 0)) ((1 10 2)) ((1 7 0) (3 0 0))
   ((1 6 2) (1 7 1)) ((1 6 0) (1 8 0)) ((1 4 0) (1 6 2)) ((0 1 0) (1 10 1))
   ((0 1 0) (1 12 2)) ((0 1 0) (1 6 2)) ((1 1 0) (1 10 1)) ((1 4 0) (1 11 0))
   ((1 6 0) (1 6 1)) ((0 1 0) (1 5 0)) ((1 1 0) (1 10 0)) ((1 1 0) (1 4 1))
   ((1 3 0) (1 10 1)) ((0 1 1) (1 2 0)) ((0 0 0) (1 12 0))
   ((1 6 2) (1 7 1) (1 9 0)) ((0 1 1) (1 4 0) (1 11 1))
   ((0 1 0) (1 7 1) (1 9 0)) ((1 1 0) (1 7 1) (1 9 0))
   ((1 6 0) (1 7 1) (1 12 2)) ((1 1 0) (1 7 1) (1 12 1))
   ((1 0 0) (1 1 0) (1 10 1) (1 12 3)))))

(FNNounSemtrans (TheList) Rise-TheWord
 (and (isa :NOUN (ApparentFn AscendingEvent))) (frame FN_Sidereal_appearance)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_astronomical_entity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Risk-TheWord
 (and (isa :NOUN
       (AttemptingFn
        (CollectionSubsetFn PurposefulAction
         (TheSetOf ?act
          (and (performedBy ?act ?agt) (degreeOfDifficulty ?act Challenging)
               (immediateRisk ?act ?agt HarmingAnAgent maleficiary)))))))
 (frame FN_Daring)
 (bindingTemplate
  (TheList (:SUBJECT (VPfin objectActedOn) (NP doneBy))
   (:OBLIQUE-OBJECT (VPing objectActedOn))))
 (groupPatterns (TheSet ((0 1 0) (1 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Risk-TheWord (and (isa :NOUN Event))
 (frame FN_Run_risk)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPto objectActedOn)
    (NP objectActedOn resourceInEvent affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn during) objectActedOn) (Sub objectActedOn)
    (N resourceInEvent) ((PPFn of) fe_bad_outcome)
    ((PPingFn of) fe_bad_outcome) (Sfin fe_bad_outcome)
    ((PPFn by) affectedAgent) (AJP fe_severity))
   (:GAP (DNI objectActedOn fe_bad_outcome)
    (INI fe_bad_outcome affectedAgent))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 1 2)) ((1 5 0)) ((0 1 1)) ((1 6 0)) ((0 1 2) (1 5 0))
   ((0 1 2) (1 4 0)) ((0 1 2) (1 3 0)) ((0 1 2) (1 1 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 3 0)) ((0 1 0) (1 2 0)) ((0 1 2) (1 3 0) (1 7 0)))))

(FNNounSemtrans (TheList) Risk-TheWord (and (isa :NOUN RiskTaking))
 (frame FN_Run_risk)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPto objectActedOn)
    (NP objectActedOn resourceInEvent affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn during) objectActedOn) (Sub objectActedOn)
    (N resourceInEvent) ((PPFn of) fe_bad_outcome)
    ((PPingFn of) fe_bad_outcome) (Sfin fe_bad_outcome)
    ((PPFn by) affectedAgent) (AJP fe_severity))
   (:GAP (DNI objectActedOn fe_bad_outcome)
    (INI fe_bad_outcome affectedAgent))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 1 2)) ((1 5 0)) ((0 1 1)) ((1 6 0)) ((0 1 2) (1 5 0))
   ((0 1 2) (1 4 0)) ((0 1 2) (1 3 0)) ((0 1 2) (1 1 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 3 0)) ((0 1 0) (1 2 0)) ((0 1 2) (1 3 0) (1 7 0)))))

(FNNounSemtrans (TheList) Risk-TheWord (and (isa :NOUN VulnerableThing))
 (frame FN_Run_risk)
 (bindingTemplate
  (TheList
   (:SUBJECT (VPto objectActedOn)
    (NP objectActedOn resourceInEvent affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn during) objectActedOn) (Sub objectActedOn)
    (N resourceInEvent) ((PPFn of) fe_bad_outcome)
    ((PPingFn of) fe_bad_outcome) (Sfin fe_bad_outcome)
    ((PPFn by) affectedAgent) (AJP fe_severity))
   (:GAP (DNI objectActedOn fe_bad_outcome)
    (INI fe_bad_outcome affectedAgent))))
 (groupPatterns
  (TheSet ((1 3 0)) ((0 1 2)) ((1 5 0)) ((0 1 1)) ((1 6 0)) ((0 1 2) (1 5 0))
   ((0 1 2) (1 4 0)) ((0 1 2) (1 3 0)) ((0 1 2) (1 1 0)) ((1 0 0) (1 3 0))
   ((0 0 0) (1 3 0)) ((0 1 0) (1 2 0)) ((0 1 2) (1 3 0) (1 7 0)))))

(FNNounSemtrans (TheList) Rite-TheWord (and (isa :NOUN Ritual)) (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP leadersOfMovement groupMembers activeIngredientsOfType))
   (:OBLIQUE-OBJECT (NP fe_desired_state_of_affairs)
    (VPto fe_desired_state_of_affairs) ((PPFn from) leadersOfMovement)
    ((PPingFn of) by-Underspecified) ((PPFn by) groupMembers)
    ((PPFn into) fe_organization) ((PPFn in) eventOccursAt)
    ((PPFn at) eventOccursAt)
    (A fe_desired_state_of_affairs activeIngredientsOfType)
    (AJP fe_manner activeIngredientsOfType)
    ((PPFn of) fe_object fe_organization activeIngredientsOfType)
    (N fe_desired_state_of_affairs activeIngredientsOfType)
    ((PPFn for) groupMembers temporallyIntersects activeIngredientsOfType))
   (:GAP (INI leadersOfMovement)) (:GEN (Poss groupMembers))))
 (groupPatterns
  (TheSet ((1 10 2)) ((1 12 2)) ((1 11 1)) ((1 9 1)) ((1 8 1)) ((1 10 1))
   ((1 3 0)) ((1 0 0)) ((1 11 0)) ((1 8 0)) ((1 7 0) (1 8 1))
   ((1 5 0) (1 10 2)) ((1 9 1) (1 10 0)) ((1 8 1) (3 0 0)) ((1 11 1) (1 12 0))
   ((1 4 0) (1 9 1)) ((1 9 0) (1 11 1)) ((0 0 0) (1 9 1)) ((0 0 0) (1 8 1))
   ((1 6 0) (1 11 0)) ((0 0 0) (1 1 0)) ((0 0 2) (1 6 0) (1 12 1))
   ((1 6 0) (1 9 0) (1 10 2)) ((0 0 1) (1 2 0) (1 8 1))
   ((0 0 0) (1 3 0) (1 8 1)))))

(FNNounSemtrans (TheList) Ritual-TheWord
 (and (isa :NOUN CulturalConvention-Specification)) (frame FN_Custom)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent)) (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN objectOfCritique)
    (DNI objectOfCritique affectedAgent fe_society))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Ritual-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N fe_desired_state_of_affairs fe_organization eventOccursAt)
    ((PPFn for) activeIngredientsOfType)
    (AJP fe_organization temporallyIntersects activeIngredientsOfType)
    ((PPFn of) fe_desired_state_of_affairs fe_organization
     activeIngredientsOfType))
   (:GAP (DEN instrument-Generic eventOccursAt))
   (:GEN (Poss leadersOfMovement fe_organization))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 2)) ((0 2 1)) ((0 0 2)) ((2 0 1)) ((0 3 1)) ((0 0 1))
   ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 3 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Rival-TheWord (and (isa :NOUN Competition))
 (frame FN_Competition)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:GAP (DNI fe_competition doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Rival-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance competingAgents Competition :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rivalry-TheWord (and (isa :NOUN Competition))
 (frame FN_Competition)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn between) doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "river") Otter-TheWord (and (isa :NOUN RiverOtter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) River-TheWord (and (isa :NOUN River))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts fe_container_possessor)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn between) fe_relative_location)
    ((PPFn in) fe_container_possessor fe_relative_location)
    ((PPFn through) fe_relative_location)
    (N parts (InverseBinaryPredicateFn nameString) fe_relative_location
     activeIngredientsOfType)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_container_possessor fe_relative_location))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 5 3)) ((0 6 2)) ((2 0 1)) ((0 4 0)) ((0 3 1)) ((0 5 2)) ((0 1 0))
   ((0 5 1)) ((0 6 1)) ((0 0 1)) ((0 6 0)) ((0 0 0)) ((0 5 0))
   ((0 3 1) (0 5 3)) ((0 3 1) (0 6 2)) ((0 3 1) (0 5 1)) ((0 2 0) (0 5 1))
   ((0 0 1) (0 5 3)) ((0 0 1) (0 6 2)) ((0 5 3) (0 6 0)) ((0 5 1) (2 0 0))
   ((0 3 0) (0 5 1)) ((0 0 1) (0 5 3) (3 0 0)))))

(FNNounSemtrans (TheList) Riverbank-TheWord (and (isa :NOUN Riverbank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rivet-TheWord (and (isa :NOUN Rivet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rna-TheWord (and (isa :NOUN RNAStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rna-TheWord (and (isa :NOUN RNAMolecule))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "road") Atlas-TheWord (and (isa :NOUN RoadAtlas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "road") Construction-TheWord
 (and (isa :NOUN RoadConstructing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Road-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_direction) (VPing fe_characteristic fe_direction)
    ((PPFn to) to-Generic) (A fe_characteristic lengthOfObject)
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    (Poss (InverseBinaryPredicateFn nameString))
    ((PPFn through) trajectory-Complete) ((PPFn around) trajectory-Complete)
    ((PPFn for) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location)
    (NP fe_relative_location) ((PPFn from) from-Generic)
    (N fe_characteristic (InverseBinaryPredicateFn nameString)
     fe_relative_location deviceUse)
    (AJP fe_characteristic fe_direction fe_frequency_of_use lengthOfObject
     mainConstituent fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 15 6)) ((0 14 3)) ((2 0 0)) ((0 10 0)) ((0 12 0)) ((0 14 2))
   ((0 15 5)) ((0 6 0)) ((0 7 0)) ((0 4 0)) ((0 14 1)) ((0 15 4)) ((0 3 1))
   ((0 2 0)) ((0 14 0)) ((0 15 0)) ((0 11 0) (0 14 3)) ((0 6 0) (0 14 3))
   ((0 5 0) (0 10 0)) ((0 11 0) (0 14 1)) ((0 2 0) (0 14 2))
   ((0 11 0) (0 15 2)) ((0 10 0) (0 15 2)) ((0 14 2) (0 15 2))
   ((0 6 0) (0 15 2)) ((0 14 0) (0 14 2)) ((0 9 0) (0 15 0))
   ((0 14 2) (0 15 0)) ((0 3 0) (0 8 0)) ((0 15 0) (0 15 2)) ((0 1 1) (0 15 0))
   ((0 15 0) (0 15 1)) ((0 1 0) (0 15 0)) ((0 15 0) (0 15 0))
   ((0 2 0) (0 13 0) (0 14 1)) ((0 2 0) (0 13 0) (0 15 3))
   ((0 2 0) (0 13 0) (0 15 0)) ((0 0 0) (0 6 0) (0 15 0)))))

(FNNounSemtrans (TheList) Roadway-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) ((PPFn between) fe_endpoints)
    ((PPFn to) to-Generic) ((PPFn through) trajectory-Complete)
    ((PPFn of) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 0 0)) ((0 0 0) (0 4 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Roar-TheWord (and (isa :NOUN RoaringSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_component_sound fe_manner) (N fe_manner)
    ((PPFn of) fe_internal_cause fe_noisy_event emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 2)) ((0 0 0)) ((1 2 1)) ((1 0 1)) ((1 2 0))
   ((1 1 0) (1 2 2)) ((1 0 1) (1 2 2)) ((0 0 0) (1 0 1)) ((1 0 1) (1 2 1))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 2 2)) ((1 0 1) (1 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Roast-TheWord (and (isa :NOUN Roast-MeatCut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Robber-TheWord (and (isa :NOUN BankRobber))
 (frame FN_Robbery)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT (AJP by-Underspecified) (N from-Generic)
    ((PPFn of) from-Generic))
   (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Robbery-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree)) (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Robbery-TheWord (and (isa :NOUN RobbingAnAgent))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree)) (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Robe-TheWord (and (isa :NOUN Robe))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn of) fe_descriptor mainConstituent)
    (AJP fe_descriptor clothingStyle) ((PPFn with) subRegions)
    (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 2)) ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 4 1) (2 0 0))
   ((0 2 1) (0 4 1)) ((0 1 0) (2 0 0)) ((0 4 0) (2 0 0)) ((0 2 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 2 0) (0 3 0)) ((0 2 0) (0 2 1)) ((0 1 1) (0 2 0))
   ((0 2 0) (0 4 1)) ((0 2 0) (0 2 0)) ((0 2 0) (0 4 1) (2 0 0))
   ((0 2 0) (0 2 0) (2 0 0)) ((0 1 1) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Robin-TheWord (and (isa :NOUN Robin-American))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Robot-TheWord (and (isa :NOUN Robot)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "robotic") Arm-TheWord (and (isa :NOUN RoboticArm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "robotic") Hand-TheWord (and (isa :NOUN RobotHand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "robotic" "surgical") System-TheWord
 (and (isa :NOUN RoboticSurgicalSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Robotics-TheWord (and (isa :NOUN Robotics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock" "and" "roll") Band-TheWord
 (and (isa :NOUN RockBand)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock") Band-TheWord (and (isa :NOUN RockBand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock") Candy-TheWord (and (isa :NOUN RockCandy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock") Climbing-TheWord
 (and (isa :NOUN RockClimbing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock" "cornish") Hen-TheWord
 (and (isa :NOUN CornishHen-Meat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock") Music-TheWord (and (isa :NOUN RockMusic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock") Pile-TheWord
 (and (isa :NOUN (PileFn StoneObject-Natural))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rock") Salt-TheWord (and (isa :NOUN RockSalt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rock-TheWord (and (isa :NOUN StoneObject-Natural))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rock-TheWord (and (isa :NOUN StoneStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rocker-TheWord (and (isa :NOUN RockingChair))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rocket") Engine-TheWord
 (and (isa :NOUN RocketEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rocket") Engineer-TheWord
 (and (isa :NOUN RocketEngineer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rocket") Ship-TheWord (and (isa :NOUN Spacecraft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rocket-TheWord (and (isa :NOUN RocketEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rocket-TheWord
 (and (isa :NOUN RocketPropelledTransportationDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rocket-TheWord
 (and (isa :NOUN RocketPropelledDevice)) (frame FN_Weapon)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rocking") Chair-TheWord
 (and (isa :NOUN RockingChair)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rocking-Chair-TheWord (and (isa :NOUN RockingChair))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rocksalt-TheWord (and (isa :NOUN RockSalt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rod-TheWord (and (isa :NOUN Rod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rodent-TheWord (and (isa :NOUN Rodent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rodeo-TheWord (and (isa :NOUN Rodeo)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rodomontade-TheWord (and (isa :NOUN Boasting))
 (frame FN_Bragging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roe-TheWord (and (isa :NOUN Egg-Fish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roentgenogram-TheWord (and (isa :NOUN XRayTest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "role" "playing") Game-TheWord
 (and (isa :NOUN RolePlayingGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Role-TheWord
 (and (isa :NOUN Actor)
      (relationExistsInstance castMembers (PerformingFn DramaticPerformance)
       :NOUN))
 (frame FN_Performers_and_roles)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:GAP (INI spectators fe_performance) (DNI performedBy)
    (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "roll" "on") Deodorant-TheWord
 (and (isa :NOUN RollOnDeodorant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "roll" "on") Dispenser-TheWord
 (and (isa :NOUN RollOnDispenser)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roll-TheWord (and (isa :NOUN Bun)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 1 1)) ((0 1 0)) ((0 0 1) (0 1 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Roll-TheWord (and (isa :NOUN RollTheContainer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "roller") Coaster-TheWord
 (and (isa :NOUN RollerCoaster)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "roller") Skate-TheWord (and (isa :NOUN RollerSkate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rolling") Pin-TheWord (and (isa :NOUN RollingPin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rom-TheWord (and (isa :NOUN ROM)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roman-TheWord (and (isa :NOUN AncientRomanPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Romance-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate (TheList (:GAP (INI fe_partners)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Romanian-TheWord (and (isa :NOUN RomanianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roof-TheWord (and (isa :NOUN RoofOfAConstruction))
 (frame FN_Architectural_part)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Roofer-TheWord (and (isa :NOUN Roofer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "roofing") Slate-TheWord
 (and (isa :NOUN RoofingSlate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rook-TheWord (and (isa :NOUN Rook-ChessPiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "room" "freshener") Spray-TheWord
 (and (isa :NOUN RoomSpray)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Room-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList (:SUBJECT (NP properPhysicalParts))
   (:OBLIQUE-OBJECT (VPing deviceUse)
    (N activeIngredientsOfType deviceUse (InverseBinaryPredicateFn parts)))
   (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet ((1 1 2)) ((1 0 0)) ((1 1 1)) ((1 1 0)))))

(FNNounSemtrans (TheList) Room-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roomful-TheWord
 (and (isa :NOUN (VolumeFn RoomInAConstruction))) (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Roommate-TheWord
 (and (isa :NOUN Person) (relationInstanceExists roommates :NOUN Person))
 (frame FN_People_by_residence)
 (bindingTemplate
  (TheList (:NOUN (N fe_indicated_resident)) (:GEN (Poss fe_known_resident))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Rooster-TheWord (and (isa :NOUN (MaleFn Chicken)))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Root-TheWord (and (isa :NOUN Root)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "root") Beer-TheWord (and (isa :NOUN RootBeer))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rope-TheWord (and (isa :NOUN Rope))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_connected_item) ((PPFn around) eventOccursAt)
    ((PPFn on) eventOccursAt) ((PPFn round) eventOccursAt)
    (AJP mainConstituent)
    (N eventOccursAt mainConstituent activeIngredientsOfType deviceUse)
    ((PPFn for) deviceUse))
   (:GAP (DEN fe_connector)) (:GEN (Poss fe_connected_item))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 3)) ((0 5 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((2 0 0)) ((0 0 0)) ((0 5 3) (2 0 0)) ((0 5 2) (2 0 0)) ((0 0 0) (0 5 2))
   ((0 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Rosacea-TheWord (and (isa :NOUN Rosacea))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rose-TheWord (and (isa :NOUN RoseBush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rose-TheWord (and (isa :NOUN (FlowerFn RoseBush)))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rosebush-TheWord (and (isa :NOUN RoseBush))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rosemary-TheWord (and (isa :NOUN Rosemary))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rot-TheWord (and (isa :NOUN DecompositionProcess))
 (frame FN_Rotting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rotary") Cutter-TheWord
 (and (isa :NOUN RotaryCutter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rotary" "phone") Dial-TheWord
 (and (isa :NOUN RotaryDial-Telephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rotary") Tiller-TheWord
 (and (isa :NOUN RotaryTiller)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rotation-TheWord (and (isa :NOUN Movement-Rotation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rottweiler-TheWord (and (isa :NOUN Rottweiler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rotunda-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rouge-TheWord (and (isa :NOUN Rouge))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) wornOn))
   (:GAP (DEN decorativeObjectsApplied)) (:GEN (Poss objectDecorated))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Rouge-TheWord (and (isa :NOUN Rouge)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Roulette-TheWord (and (isa :NOUN Roulette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Round-TheWord (and (isa :NOUN ProjectileWeapon))
 (frame FN_Ammunition)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN typePrimaryFunction-DeviceUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "round") Trip-TheWord
 (and (isa :NOUN Translation-RoundTrip)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rout-TheWord (and (isa :NOUN DefeatedSituation))
 (frame FN_Beat_opponent)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_event_description) ((PPFn of) loserInOutcome)
    (N fe_competition fe_score) (AVP fe_score) ((PPFn on) temporallyIntersects)
    ((PPFn in) temporallyIntersects) ((PPFn at) eventOccursAt)
    ((PPFn by) winnerInConflict))
   (:GAP (DNI winnerInConflict)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 7 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 5 0))
   ((0 1 0) (0 3 0)) ((0 1 0) (0 2 0) (0 2 1) (2 0 0))
   ((0 0 0) (0 1 0) (0 4 0) (0 6 0) (0 7 0)))))

(FNNounSemtrans (TheList) Route-TheWord (and (isa :NOUN PathChain))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_roadway))
   (:OBLIQUE-OBJECT (A fe_characteristic)
    (AJP fe_characteristic fe_frequency_of_use) (VPto to-Generic)
    ((PPFn to) to-Generic) ((PPFn along) trajectory-Complete)
    ((PPFn through) trajectory-Complete) ((PPFn in) fe_relative_location)
    ((PPFn from) from-Generic)
    (N fe_direction mainConstituent (InverseBinaryPredicateFn nameString)
     trajectory-Complete fe_relative_location deviceUse)
    (VPing deviceUse))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 5)) ((1 8 2)) ((1 8 1)) ((1 2 0)) ((1 3 0))
   ((1 8 3) (1 8 4)) ((1 2 0) (1 8 5)) ((1 3 0) (1 7 0)) ((1 0 0) (1 8 5))
   ((1 3 0) (1 7 0) (1 8 5)) ((1 1 1) (1 2 0) (3 0 0))
   ((1 5 0) (1 6 0) (1 8 0)) ((1 1 0) (1 4 0) (1 5 0) (1 7 0))
   ((0 0 0) (1 1 0) (1 2 0) (1 7 0)))))

(FNNounSemtrans (TheList) Router-TheWord (and (isa :NOUN Router-CarpentryTool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Row-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Row-TheWord (and (isa :NOUN RowOfObjects))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Row-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1 fe_arguers fe_issue))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) (N fe_arguers)
    ((PPFn between) fe_arguers) ((PPFn about) fe_issue) ((PPFn on) fe_issue)
    ((PPFn over) fe_issue) ((PPingFn about) fe_issue) ((PPingFn over) fe_issue)
    (AJP fe_manner))
   (:GEN (Poss fe_arguer1 fe_arguers))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 6 0)) ((1 5 0)) ((1 4 0)) ((1 3 0)) ((0 0 2)) ((2 0 1))
   ((1 2 0)) ((0 0 1)) ((1 1 0)) ((1 0 0)) ((1 5 0) (1 8 0)) ((0 0 2) (1 3 0))
   ((1 2 0) (1 8 0)) ((1 5 0) (2 0 1)) ((1 2 0) (1 5 0)) ((0 0 2) (1 2 0))
   ((0 0 1) (1 7 0)) ((0 0 1) (1 6 0)) ((0 0 1) (1 3 0)) ((0 0 1) (1 2 0))
   ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 8 0))
   ((0 0 2) (1 0 0) (2 0 0)) ((0 0 0) (1 0 0) (1 4 0))
   ((0 0 0) (1 0 0) (1 3 0)) ((0 0 0) (0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 5 0) (1 8 0)))))

(FNNounSemtrans (TheList) Row-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rowboat-TheWord (and (isa :NOUN Rowboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rowing") Boat-TheWord (and (isa :NOUN Rowboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rowing") Machine-TheWord
 (and (isa :NOUN RowingMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rowing-TheWord (and (isa :NOUN RowingSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "royal") Casino-TheWord
 (and (isa :NOUN Casino-TheGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "royal") Charter-TheWord
 (and (isa :NOUN RoyalCharter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Royalty-TheWord (and (isa :NOUN RoyalFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rpg-TheWord
 (and (isa :NOUN RocketPropelledDevice) (isa :NOUN Grenade)) (frame FN_Weapon)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rpg-TheWord (and (isa :NOUN RolePlayingGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubber") Ball-TheWord (and (isa :NOUN RubberBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubber") Band-TheWord (and (isa :NOUN RubberBand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubber") Boot-TheWord (and (isa :NOUN RubberBoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubber") Eraser-TheWord
 (and (isa :NOUN Eraser-Pencil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubber") Spatula-TheWord
 (and (isa :NOUN RubberSpatula)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubber") Stamp-TheWord
 (and (isa :NOUN RubberStampDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rubber-TheWord (and (isa :NOUN Rubber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubbing") Alcohol-TheWord
 (and (isa :NOUN IsopropylAlcohol)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rube" "goldberg") Device-TheWord
 (and (isa :NOUN RubeGoldbergDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rubella-TheWord (and (isa :NOUN Rubella))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rubicon-TheWord (and (isa :NOUN Rubicon-Creek))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rubidium-TheWord (and (isa :NOUN Rubidium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rubik" "^s") Cube-TheWord
 (and (isa :NOUN RubiksCube)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruble-TheWord (and (isa :NOUN Ruble-Russia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruby-TheWord (and (isa :NOUN Ruby-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rucksack-TheWord (and (isa :NOUN Backpack))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn on) fe_relative_location) (AJP activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Rudder-TheWord (and (isa :NOUN Rudder-ShipPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rug-TheWord (and (isa :NOUN Rug))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rug-TheWord (and (isa :NOUN Carpet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rugby") Ball-TheWord (and (isa :NOUN RugbyBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rule-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_governed leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn with) fe_governed) (A leadersOfMovement)
    (N leadersOfMovement) ((PPFn of) leadersOfMovement)
    (AJP fe_descriptor fe_governed leadersOfMovement))
   (:GAP (DNI fe_governed leadersOfMovement)) (:GEN (Poss leadersOfMovement))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((1 4 2)) ((3 0 0)) ((0 0 1)) ((1 4 1))
   ((1 3 0) (1 4 0)) ((1 2 0) (1 4 0)) ((0 0 0) (1 0 0) (1 3 0))
   ((0 0 0) (0 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Rule-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rule-TheWord
 (and (isa :NOUN DurationOfAMonarchsPower)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rule-TheWord (and (isa :NOUN Ruler-MeasuringDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruler-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_depictive fe_descriptor) ((PPFn from) duration)
    ((PPFn of) fe_depictive fe_governed) (A fe_depictive fe_governed)
    (N fe_governed) ((PPFn over) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed)) (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((1 4 0)) ((1 3 1)) ((1 0 1)) ((1 0 0)) ((1 3 0))
   ((0 0 0) (1 5 0)) ((0 0 0) (1 2 1)) ((1 4 0) (4 0 0)) ((3 0 0) (4 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList) Ruler-TheWord (and (isa :NOUN Ruler-MeasuringDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruling-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruling-TheWord (and (isa :NOUN VerdictOfTrial))
 (frame FN_Verdict) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rum-TheWord (and (isa :NOUN Rum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruminant-TheWord (and (isa :NOUN Ruminant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rump-TheWord (and (isa :NOUN Buttocks))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "rumpus") Room-TheWord (and (isa :NOUN CommonRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Run-Through-TheWord
 (and (isa :NOUN Practicing-Preparing)) (frame FN_Practice)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn by) performedBy)
    (A fe_iterations) (AJP fe_manner) ((PPFn for) fe_occasion)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (2nd objectActedOn) (DNI objectActedOn performedBy fe_occasion))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 1 0)) ((1 2 0)) ((0 0 0) (1 2 0)) ((0 0 1) (1 5 1))
   ((1 0 0) (1 2 0)) ((1 2 0) (3 0 0)) ((0 0 1) (1 3 0))
   ((1 2 0) (1 4 0) (1 5 0)) ((0 0 1) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Rundle-TheWord (and (isa :NOUN RungOfLadder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rung-TheWord (and (isa :NOUN Rung-Crosspiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Runner-TheWord (and (isa :NOUN Runner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "running") Back-TheWord
 (and (isa :NOUN FootballHalfback)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "running") Shoe-TheWord (and (isa :NOUN RunningShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "running") Track-TheWord
 (and (isa :NOUN RunningTrack)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Runway-TheWord (and (isa :NOUN AirplaneRunway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic fe_frequency_of_use mainConstituent)
    ((PPFn in) fe_relative_location) ((PPFn of) fe_relative_location)
    (N fe_characteristic mainConstituent (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn at) fe_relative_location))
   (:GAP (DEN fe_roadway)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 4 0)) ((0 3 3)) ((0 3 2)) ((0 0 2)) ((0 3 0))
   ((0 0 0)) ((0 0 1) (0 2 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0) (0 3 1)))))

(FNNounSemtrans (TheList) Rupiah-TheWord (and (isa :NOUN Rupiah-Indonesia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rush") Hour-TheWord (and (isa :NOUN RushHour))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "russian") Bank-TheWord (and (isa :NOUN RussianBank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "russian" "orthodox") Church-TheWord
 (and (isa :NOUN RussianOrthodoxChurchBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Russian-TheWord (and (isa :NOUN RussianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rustication-TheWord
 (and (isa :NOUN Rustication-SystemCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rustle-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_degree fe_manner)
    ((PPFn in) eventOccursAt) ((PPFn under) eventOccursAt)
    ((PPingFn of) emitter)
    ((PPFn of) (InverseBinaryPredicateFn explains-Generic) fe_noisy_event
     emitter objectMoving))
   (:GAP (2nd (InverseBinaryPredicateFn explains-Generic))
    (INI fe_ground objectMoving))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 2)) ((0 5 1)) ((0 5 3)) ((0 5 0)) ((0 1 1) (0 5 2))
   ((0 0 0) (0 5 3)) ((0 3 0) (0 5 0)) ((0 2 0) (0 5 0)) ((0 1 0) (0 5 2))
   ((0 1 0) (0 5 1)) ((0 1 0) (0 2 0) (0 5 2)))))

(FNNounSemtrans (TheList "rustproofing") Paint-TheWord
 (and (isa :NOUN RustproofingPaint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rustproofing-TheWord
 (and (isa :NOUN CarRustproofing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ruthenium-TheWord (and (isa :NOUN Ruthenium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rutherfordium-TheWord (and (isa :NOUN Rutherfordium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "rwanda") Franc-TheWord (and (isa :NOUN Franc-Rwanda))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rye-TheWord (and (isa :NOUN Rye-TheGrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rye-TheWord (and (isa :NOUN RyePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sa" "g" "d" "producer") Observation-TheWord
 (and (isa :NOUN SAGDProducerWell-Observation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saber-TheWord (and (isa :NOUN FencingSabre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sabotage-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator victim))
   (:OBLIQUE-OBJECT (A perpetrator fe_specification) (AJP fe_specification)
    ((PPFn of) victim) ((PPFn in) victim))
   (:GAP (DEN fe_offense) (CNI perpetrator) (INI victim)
    (DNI perpetrator victim))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 0 1)) ((1 0 1)) ((0 0 0) (1 3 0)) ((1 0 0) (1 2 0))
   ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Sabre-TheWord (and (isa :NOUN FencingSabre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saccharin-TheWord (and (isa :NOUN Saccharin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sack-TheWord (and (isa :NOUN Bag))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N containedObject mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 2)) ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0))
   ((0 2 1) (0 2 2)) ((0 1 0) (2 0 0)) ((0 0 0) (0 2 2)) ((0 0 0) (2 0 0))
   ((0 2 0) (2 0 0)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList) Sack-TheWord (and (isa :NOUN PaperBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sackcloth-TheWord (and (isa :NOUN Burlap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sackful-TheWord (and (isa :NOUN (VolumeFn PaperBag)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "sacral") Plexus-TheWord
 (and (isa :NOUN SacralPlexus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sacral") Vertebra-TheWord
 (and (isa :NOUN SacralVertebra)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sacrament-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP groupMembers))
   (:OBLIQUE-OBJECT (A fe_organization)
    ((PPFn of) fe_desired_state_of_affairs activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 0 0)) ((0 0 0)) ((1 1 0)) ((0 0 0) (1 1 1)))))

(FNNounSemtrans (TheList "sacred") Text-TheWord (and (isa :NOUN SacredText))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sacrifice-TheWord (and (isa :NOUN Sacrifice))
 (frame FN_Rite)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_object) (AJP fe_manner fe_object)
    ((PPFn of) fe_object) ((PPFn by) fe_organization)
    (N fe_object activeIngredientsOfType))
   (:GAP (INI leadersOfMovement)) (:GEN (Poss fe_object))))
 (groupPatterns
  (TheSet ((0 4 1)) ((2 0 0)) ((0 2 0)) ((0 4 0)) ((0 1 1)) ((0 0 0))
   ((0 2 0) (0 4 1)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Sacristy-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sacrum-TheWord (and (isa :NOUN Sacrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "saddle") Horse-TheWord
 (and (isa :NOUN Horse-Domesticated)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saddle-TheWord (and (isa :NOUN Saddle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saddleback-TheWord
 (and (isa :NOUN Saddle-TerrainFeature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sadism-TheWord
 (and (isa :NOUN SadisticSexualBehavior)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sadness-TheWord (and (isa :NOUN Sadness))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn for) fe_empathy_target)
    ((PPFn within) objectActedOn) ((PPFn of) fe_event objectActedOn)
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPingFn of) (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 1)) ((0 0 0)) ((1 3 0)) ((0 0 0) (1 5 0))
   ((1 1 0) (2 0 0)) ((1 0 0) (1 4 0)) ((1 0 0) (2 0 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Sadness-TheWord (and (isa :NOUN Sadness))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Safari-TheWord (and (isa :NOUN Safari))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip) (N travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn in) situationLocation)
    ((PPFn round) situationLocation) (NP situationLocation duration)
    ((PPFn at) to-Generic) ((PPFn to) to-Generic)
    (N duration deviceTypeUsed purposeOfEvent) (VPto purposeOfEvent)
    (VPing transporterTypeOfTransportType))
   (:GAP (CNI travellerInTrip)) (:GEN (Poss travellerInTrip))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 1 0)) ((1 7 0)) ((1 6 0)) ((1 5 1)) ((1 3 0)) ((1 4 0))
   ((1 0 0)) ((0 0 0) (1 2 1)) ((1 0 0) (1 5 2)) ((1 1 0) (1 5 1))
   ((1 2 0) (1 5 0)))))

(FNNounSemtrans (TheList "safe") House-TheWord
 (and (isa :NOUN SafeHouse-Refuge)) (frame FN_Locale_by_use)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "safe") House-TheWord
 (and (isa :NOUN SafeHouse-Refuge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Safe-TheWord (and (isa :NOUN SafeTheLocker))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn at) fe_relative_location)
    ((PPFn for) deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Safeguard-TheWord
 (and (isa :NOUN ProtectingSomething)) (frame FN_Protecting)
 (bindingTemplate
  (TheList
   (:GAP (INI objectProtected) (DNI objectProtected fe_danger)
    (DEN actionProtectsFromAttackOfType))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "safety") Blitz-TheWord
 (and (isa :NOUN Blitzing-Football)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "safety") Device-TheWord
 (and (isa :NOUN SafetyDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "safety") Glass-TheWord
 (and (isa :NOUN SafetyGlasses)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Safety-Glasses-TheWord
 (and (isa :NOUN SafetyGlasses)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "safety") Switch-TheWord
 (and (isa :NOUN SafetySwitch)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Safety-TheWord (and (isa :NOUN VulnerableThing))
 (frame FN_Being_at_risk)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A resourceInEvent) (AJP resourceInEvent)
    ((PPFn of) fe_dangerous_entity))
   (:GAP (DNI resourceInEvent fe_harmful_event))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Saffron-TheWord (and (isa :NOUN Saffron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saga-TheWord (and (isa :NOUN Saga)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP authorOfLiteraryWork-CW situationTopic)
    (N situationTopic) ((PPingFn of) situationTopic)
    ((PPFn about) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList "sagd" "injector") Well-TheWord
 (and (isa :NOUN SAGDInjectorWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sagd" "lower") Well-TheWord
 (and (isa :NOUN SAGDProducerWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sagittal") Suture-TheWord
 (and (isa :NOUN SagittalSuture)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sagittarius-TheWord
 (and (isa :NOUN Sagittarius-TheSign)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sahara-TheWord (and (isa :NOUN SaharaDesert))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sail-TheWord (and (isa :NOUN Sail-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sailboat-TheWord (and (isa :NOUN Sailboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sailor") Cap-TheWord (and (isa :NOUN SailorCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sailor-TheWord (and (isa :NOUN CrewMemberOnShip))
 (frame FN_Member_of_military) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "saint") Bernard-TheWord
 (and (isa :NOUN SaintBernard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saint-TheWord (and (isa :NOUN Saint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saint-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists moralCharacter :NOUN MoralQuality))
 (frame FN_People_by_morality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_context_of_acquaintance) (AJP fe_descriptor))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "salad") Dressing-TheWord
 (and (isa :NOUN SaladDressing)) (frame FN_Food) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "salad") Fork-TheWord (and (isa :NOUN SaladFork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salad-TheWord (and (isa :NOUN Salad)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salamander-TheWord (and (isa :NOUN Salamander))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salami-TheWord (and (isa :NOUN Salami))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sale-TheWord
 (and (isa :NOUN Buying) (relationInstanceExists seller :NOUN SocialBeing))
 (frame FN_Commerce_sell)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer moneyTransferred))
   (:OBLIQUE-OBJECT ((PPFn to) buyer)
    ((PPFn of) objectOfPossessionTransfer eventOccursAt) ((PPFn by) seller)
    ((PPFn after) temporallyIntersects)
    (N objectOfPossessionTransfer temporallyIntersects)
    (NP temporallyIntersects) ((PPFn in) temporallyIntersects))
   (:GAP (DEN objectOfPossessionTransfer)
    (INI buyer objectOfPossessionTransfer seller)
    (DNI buyer objectOfPossessionTransfer seller))
   (:GEN (Poss seller))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 4 0)) ((1 0 0)) ((0 0 0) (1 5 0)) ((1 0 0) (1 1 1))
   ((1 4 0) (3 0 0)) ((0 0 1) (1 1 0) (1 6 0)) ((1 0 0) (1 1 1) (3 0 0))
   ((1 1 0) (1 2 0) (1 3 0)) ((1 0 0) (1 4 0) (3 0 0))
   ((1 0 0) (1 1 0) (1 2 0) (1 4 1)))))

(FNNounSemtrans (TheList) Sale-TheWord (and (isa :NOUN Buying)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sales") Associate-TheWord
 (and (isa :NOUN SalesPerson)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sales") Tax-TheWord
 (and (isa :NOUN MonetaryValue) (relationExistsInstance salesTax Buying :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salesman-TheWord (and (isa :NOUN SalesPerson))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn for) employer) ((PPFn at) employer)
    ((PPFn on) employer) (N employer activeIngredientsOfType)
    (AJP fe_descriptor fe_rank activeIngredientsOfType)
    ((PPFn in) employer employer activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:NOUN (N fe_person)) (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 4 2)) ((1 1 0)) ((3 0 0)) ((0 0 0) (1 5 2))
   ((1 3 1) (3 0 0)) ((1 2 0) (1 3 1)) ((1 3 0) (1 3 1)) ((0 0 0) (1 3 1))
   ((1 5 0) (4 0 0)) ((0 0 0) (1 0 0)) ((1 3 1) (1 4 0)) ((1 4 0) (1 5 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 4 1) (1 5 0)) ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Salesperson-TheWord (and (isa :NOUN SalesPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salesperson-TheWord (and (isa :NOUN SalesPerson))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saleswoman-TheWord (and (isa :NOUN Saleswoman))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "salic") Law-TheWord
 (and (isa :NOUN SalicLaw-LegalCode)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "saline" "breast") Implant-TheWord
 (and (isa :NOUN BreastImplant-Saline)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salinometer-TheWord (and (isa :NOUN Salinometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saliva-TheWord (and (isa :NOUN Saliva))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "salivary") Gland-TheWord
 (and (isa :NOUN SalivaryGland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salivation-TheWord (and (isa :NOUN Salivating))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salmon-TheWord (and (isa :NOUN Salmon))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salmon-TheWord (and (isa :NOUN Salmon))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_descriptor)
    (AJP fe_descriptor activeIngredientsOfType) (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0)) ((0 1 0) (0 2 0)) ((0 1 0) (0 1 1))
   ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Salmon-TheWord (and (isa :NOUN (MeatFn Salmon)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salon-TheWord (and (isa :NOUN LivingRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salon-TheWord (and (isa :NOUN HairSalon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "salt") Marsh-TheWord (and (isa :NOUN SaltMarsh))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salt-TheWord (and (isa :NOUN TableSalt))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "salt") Shaker-TheWord (and (isa :NOUN SaltShaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saltshaker-TheWord (and (isa :NOUN SaltShaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saluki-TheWord (and (isa :NOUN Saluki))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "salvage") Ship-TheWord (and (isa :NOUN SalvageShip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salvage-TheWord (and (isa :NOUN SalvagingSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salvation-TheWord (and (isa :NOUN Salvation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salver-TheWord (and (isa :NOUN Container))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Salyut-TheWord (and (isa :NOUN Salyut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Samarium-TheWord (and (isa :NOUN Samarium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Samhita-TheWord
 (and (isa :NOUN Samhita-VedicLiterature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Samoan-TheWord (and (isa :NOUN EthnicGroupOfSamoans))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Samovar-TheWord (and (isa :NOUN HotBeveragePot))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Samoyed-TheWord (and (isa :NOUN Samoyed-TheDog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sample-TheWord (and (isa :NOUN ExtractedSample))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sample-TheWord (and (isa :NOUN TakingASample))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sampling") Frequency-TheWord
 (and (isa :NOUN SamplingFrequency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sampling") Rate-TheWord
 (and (isa :NOUN SamplingRate-Frequency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "samurai") Sword-TheWord
 (and (isa :NOUN JapaneseSamuraiSword)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "san") Marinese-TheWord
 (and (isa :NOUN SanMarinoPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sanction-TheWord (and (isa :NOUN ImposingSanctions))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sanction-TheWord (and (isa :NOUN Sanction))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_offender)) (:OBJECT (NP fe_offender))
   (:OBLIQUE-OBJECT (N performedBy) ((PPFn of) fe_injured_party)
    ((PPFn for) fe_injury) (A fe_manner) ((PPFn against) fe_offender)
    ((PPFn on) fe_injury fe_offender) (Sub temporallyIntersects)
    (NP performedBy temporallyIntersects)
    ((PPFn since) fe_injury temporallyIntersects)
    (AJP performedBy fe_degree fe_depictive duration temporallyIntersects))
   (:GAP (CNI performedBy) (2nd fe_offender) (DEN fe_injury fe_punishment)
    (DNI performedBy fe_injured_party fe_injury fe_offender fe_punishment)
    (INI performedBy fe_injured_party fe_injury fe_punishment))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 7 1)) ((2 0 0)) ((0 0 0)) ((2 5 0)) ((2 4 0)) ((2 7 0))
   ((2 5 1) (2 9 3)) ((0 0 1) (2 9 0)) ((2 0 0) (2 5 1)) ((2 4 0) (4 0 0))
   ((0 0 0) (2 9 4)) ((2 0 0) (2 3 0)) ((0 0 1) (2 3 0) (2 6 0))
   ((0 0 0) (2 2 0) (2 4 0)) ((0 0 0) (2 2 0) (2 5 1))
   ((0 0 0) (2 5 1) (2 9 1)) ((0 0 1) (0 0 1) (2 0 0) (2 8 1))
   ((0 0 0) (1 0 0) (2 1 0) (2 8 0) (2 9 2)))))

(FNNounSemtrans (TheList "sand") Castle-TheWord (and (isa :NOUN SandCastle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sand") Dune-TheWord (and (isa :NOUN Dune))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sand-TheWord (and (isa :NOUN SandMob))
 (frame FN_Substance)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N comesFrom-Generic))
   (:GAP (DEN stuffUsed)) (:GEN (Poss comesFrom-Generic))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Sandal-TheWord (and (isa :NOUN Sandal))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) (N fe_descriptor clothingStyle)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 2 0)) ((0 2 1) (2 0 0)) ((0 2 0) (2 0 0))
   ((0 2 0) (0 2 0)) ((0 0 0) (0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Sandal-TheWord (and (isa :NOUN Sandal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandalwood-TheWord
 (and (isa :NOUN (WoodFn SandalwoodTree))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sandalwood") Tree-TheWord
 (and (isa :NOUN SandalwoodTree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandbank-TheWord (and (isa :NOUN Streambank))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn off) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sandbar-TheWord
 (and (isa :NOUN Bar-Topographical)
      (relationInstanceExists mainConstituent :NOUN SandMob))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor)
    (AJP fe_relative_location) ((PPFn at) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sandboard-TheWord (and (isa :NOUN Sandboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandbox-TheWord (and (isa :NOUN Sandbox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandcastle-TheWord (and (isa :NOUN SandCastle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandpaper-TheWord (and (isa :NOUN Sandpaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandspit-TheWord
 (and (isa :NOUN (SmallFn Peninsula))
      (relationInstanceExists mainConstituent :NOUN SandMob))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandstone-TheWord (and (isa :NOUN Sandstone))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sandwich-TheWord (and (isa :NOUN Sandwich))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sanitary") Pad-TheWord
 (and (isa :NOUN SanitaryNapkin)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sanskrit") Literature-TheWord
 (and (isa :NOUN SanskritLiterature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "santa") Hat-TheWord (and (isa :NOUN SantaCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sao" "tome" "and") Principe-TheWord
 (and (isa :NOUN SaoTomeAndPrincipe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sapling-TheWord (and (isa :NOUN Sapling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sapphire-TheWord (and (isa :NOUN Sapphire-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saprophyte-TheWord (and (isa :NOUN Saprophyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sarcophagus-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) mainConstituent fe_relative_location)
    (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((2 0 0)) ((0 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 1) (0 1 1)))))

(FNNounSemtrans (TheList) Sardinia-TheWord (and (isa :NOUN Sardinia))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sari-TheWord (and (isa :NOUN Dress))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Sarin-TheWord (and (isa :NOUN Sarin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sarong-TheWord (and (isa :NOUN Sarong-Skirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_descriptor)
    (N mainConstituent) ((PPFn with) subRegions))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Sartorius-TheWord (and (isa :NOUN Sartorius))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sash-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) wornOn) ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent)
    (N fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 2 0) (2 0 0))
   ((0 2 0) (0 3 1)) ((0 2 0) (0 2 0)) ((0 2 1) (0 3 2) (2 0 0))
   ((0 1 0) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Sash-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satanism-TheWord (and (isa :NOUN Satanism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satchel-TheWord (and (isa :NOUN Backpack))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) parts)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((0 2 0)) ((0 0 0)) ((0 2 1) (2 0 0)))))

(FNNounSemtrans (TheList "satellite" "communications") Equipment-TheWord
 (and (isa :NOUN SatelliteCommunicationsEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "satellite") Receiver-TheWord
 (and (isa :NOUN SatelliteReceiver)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satellite-TheWord (and (isa :NOUN Satellite-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satellite-TheWord
 (and (isa :NOUN Satellite-HeavenlyBody)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "satellite") Transmitter-TheWord
 (and (isa :NOUN SatelliteTransmitter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "satellite" "tv") Antenna-TheWord
 (and (isa :NOUN SatelliteTVAntenna)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "satin") Cloth-TheWord (and (isa :NOUN SatinCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satins-TheWord
 (and (isa :NOUN Clothing-Generic)
      (relationInstanceExists mainConstituent :NOUN SatinCloth))
 (frame FN_Clothing) (bindingTemplate (TheList (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satisfaction-TheWord (and (isa :NOUN Satisfaction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Satrap-TheWord
 (and (isa :NOUN IranianPerson) (isa :NOUN PublicOfficial))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:NOUN (N leadersOfMovement))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Saturday-TheWord (and (isa :NOUN Saturday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:GAP (DEN fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sauce") Pan-TheWord (and (isa :NOUN Saucepan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sauce-TheWord (and (isa :NOUN Sauce)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Sauceboat-TheWord (and (isa :NOUN GravyBoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saucer-TheWord (and (isa :NOUN Saucer))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saucer-TheWord (and (isa :NOUN Discus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sauna-TheWord (and (isa :NOUN Sauna)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sausage") Casing-TheWord
 (and (isa :NOUN SausageCasing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sausage-TheWord (and (isa :NOUN MeatSausage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Savagery-TheWord (and (isa :NOUN Brutality))
 (frame FN_Violence) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Savanna-TheWord (and (isa :NOUN Savannah))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn in) fe_relative_location)
    (AJP fe_relative_location))
   (:GAP (DEN eventLocale fe_relative_location))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 0)) ((2 0 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Saver-TheWord (and (isa :NOUN SavingsAccount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "savings") Account-TheWord
 (and (isa :NOUN SavingsAccount)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Savor-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature)) (frame FN_Sensation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Savory-TheWord (and (isa :NOUN SavoryFood))
 (frame FN_Chemical-sense_description) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Savory-TheWord (and (isa :NOUN SavoryTaste))
 (frame FN_Chemical-sense_description) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "saw") Horse-TheWord (and (isa :NOUN SawHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "saw") Palmetto-TheWord
 (and (isa :NOUN SawPalmetto-Drug)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saw-TheWord (and (isa :NOUN Saw)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sawdust-TheWord (and (isa :NOUN Sawdust))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sawhorse-TheWord (and (isa :NOUN SawHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sax-TheWord (and (isa :NOUN Saxophone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saxifrage-TheWord (and (isa :NOUN Saxifrage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saxophone-TheWord (and (isa :NOUN Saxophone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Saxophone-TheWord (and (isa :NOUN MusicalInstrument))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scab-TheWord (and (isa :NOUN Scab)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scads-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Scale-TheWord (and (isa :NOUN Scale-AnimalBodyPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scale-TheWord (and (isa :NOUN Scale-Specification))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scalpel-TheWord (and (isa :NOUN Scalpel))
 (frame FN_Medical_instruments)
 (bindingTemplate (TheList (:GAP (DEN instrument-Generic))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scalpel-TheWord (and (isa :NOUN Scalpel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scandal-TheWord (and (isa :NOUN Scandal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scandinavian") Country-TheWord
 (and (isa :NOUN ScandinavianCountry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scandium-TheWord (and (isa :NOUN Scandium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scanner-TheWord (and (isa :NOUN Scanner-Optical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scanner-TheWord (and (isa :NOUN ScannerRadioWave))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scanning" "electron") Microscope-TheWord
 (and (isa :NOUN ScanningElectronMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scanning" "probe") Microscope-TheWord
 (and (isa :NOUN ScanningProbeMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scanning" "tunnelling") Microscope-TheWord
 (and (isa :NOUN ScanningTunnelingMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scapula-TheWord (and (isa :NOUN Scapula))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scar-TheWord (and (isa :NOUN Scar))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn across) fe_attachment) ((PPFn at) fe_attachment)
    ((PPFn beneath) fe_attachment) ((PPFn in) fe_attachment)
    ((PPFn near) fe_attachment) ((PPFn on) fe_attachment) (Sfin fe_attachment)
    ((PPFn from) fe_attachment causes-Underspecified)
    (VPed causes-Underspecified) (VPing fe_attachment fe_descriptor)
    (A fe_attachment fe_descriptor) (AJP causes-Underspecified fe_descriptor)
    (N fe_attachment causes-Underspecified fe_descriptor)
    ((PPFn of) causes-Underspecified fe_descriptor))
   (:GAP (2nd ownerOfProprietaryThing)
    (DEN markCreated ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 9 1)) ((1 13 1)) ((1 12 2)) ((1 11 1)) ((1 8 0))
   ((1 13 0)) ((1 7 1)) ((1 12 1)) ((1 11 0)) ((1 6 0)) ((1 5 0)) ((1 2 0))
   ((1 9 0)) ((1 0 0)) ((1 10 1) (1 10 1)) ((1 11 0) (3 0 0))
   ((1 12 0) (3 0 0)) ((1 6 0) (1 11 1)) ((1 7 0) (1 11 1)) ((1 5 0) (1 11 1))
   ((1 3 0) (1 12 2)) ((1 1 0) (1 11 1)) ((1 0 0) (1 11 1)) ((1 10 1) (1 12 0))
   ((1 9 1) (1 10 0)) ((1 5 0) (1 7 1)) ((1 0 0) (1 11 0)) ((1 7 1) (1 12 0))
   ((1 7 1) (1 10 1) (1 10 1)) ((1 5 0) (1 11 1) (1 12 1))
   ((1 4 0) (1 10 1) (1 10 1)) ((0 0 0) (1 5 0) (1 10 1) (1 10 1))
   ((0 0 0) (1 0 0) (1 11 1) (1 11 1)) ((0 0 0) (1 5 0) (1 11 1) (1 12 1))
   ((0 0 0) (0 0 0) (1 7 0) (1 7 1) (1 11 1)))))

(FNNounSemtrans (TheList) Scarceness-TheWord (and (isa :NOUN Scarcity))
 (frame FN_Scarcity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scarcity-TheWord (and (isa :NOUN Scarcity))
 (frame FN_Scarcity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scare-TheWord (and (isa :NOUN PanicAttack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scarf-TheWord (and (isa :NOUN Scarf))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 0 2)) ((0 1 1)) ((0 0 0)) ((0 1 1) (2 0 0))
   ((0 0 1) (2 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 1 0) (0 1 1))
   ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 1 1) (2 0 0)) ((0 0 0) (0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Scavenger-TheWord (and (isa :NOUN Scavenger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scene-TheWord (and (isa :NOUN Scene-Dramatic))
 (frame FN_Locale_by_event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_defining_event)
    (AJP fe_defining_event fe_descriptor) (NP fe_defining_event eventLocale)
    (N fe_defining_event fe_relative_location)
    ((PPFn beyond) fe_relative_location))
   (:GAP (DNI fe_defining_event) (INI fe_defining_event) (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 0 0)) ((0 2 0)) ((0 1 1)) ((0 1 0) (0 2 1))
   ((0 1 1) (0 3 0)))))

(FNNounSemtrans (TheList) Scene-TheWord (and (isa :NOUN ImageSpace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scene-TheWord (and (isa :NOUN Scene-Dramatic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scene-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature)) (frame FN_Sensation)
 (bindingTemplate (TheList (:GAP (DEN perceivedThings))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scent-TheWord (and (isa :NOUN Odor))
 (frame FN_Chemical-sense_description) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scent-TheWord (and (isa :NOUN Odor))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP perceivedThings from-Generic))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N perceivedThings)
    ((PPFn from) from-Generic) ((PPFn of) perceivedThings from-Generic))
   (:GEN (Poss perceivedThings from-Generic))))
 (groupPatterns
  (TheSet ((2 0 1)) ((1 3 1)) ((1 2 0)) ((0 0 1)) ((2 0 0)) ((1 3 0)) ((0 0 0))
   ((1 0 0)) ((0 0 0) (2 0 1)) ((1 1 0) (2 0 1)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Scepter-TheWord
 (and (isa :NOUN Rod) (isa :NOUN SymbolicObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schadenfreude-TheWord
 (and (isa :NOUN Delight) (evokes ?ARG1 :NOUN)
      (isa ?ARG1
       (CollectionIntersection2Fn Misfortune EventCausingDistressOrPain)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schedule-TheWord (and (isa :NOUN Schedule))
 (frame FN_Timetable)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) subjectOfMentalSituation fe_events)
    (AJP fe_descriptor duration)
    ((PPFn for) subjectOfMentalSituation fe_time_of_implementation)
    (N fe_events fe_time_of_implementation))
   (:GAP (DNI subjectOfMentalSituation fe_events) (DEN fe_timetable))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((1 3 0)) ((1 1 0)) ((1 3 0) (3 0 0))
   ((1 3 1) (3 0 0)) ((1 0 1) (1 2 1)) ((1 0 1) (1 1 1)) ((1 1 0) (3 0 0))
   ((1 1 0) (1 3 0)) ((1 1 0) (1 2 1)) ((1 3 0) (1 3 1) (3 0 0))
   ((1 3 0) (1 3 0) (3 0 0)) ((1 1 0) (1 3 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 3 0)) ((0 0 0) (1 1 0) (1 2 1))
   ((1 0 0) (1 1 0) (1 1 1)))))

(FNNounSemtrans (TheList) Scheme-TheWord (and (isa :NOUN Project))
 (frame FN_Project) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schipperke-TheWord (and (isa :NOUN Schipperke))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schizophrenia-TheWord (and (isa :NOUN Schizophrenia))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scholar-TheWord (and (isa :NOUN Scholar))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scholarship-TheWord
 (and (isa :NOUN ScholarshipAgreement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "school") Bus-TheWord (and (isa :NOUN SchoolBus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) School-TheWord
 (and (isa :NOUN School-AcademicOrganization)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) School-TheWord (and (isa :NOUN Weekday))
 (frame FN_Calendric_unit) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) School-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_container_possessor) (A fe_descriptor locationUse)
    (N fe_container_possessor fe_descriptor locationUse)
    ((PPFn of) locationUse) (AJP fe_descriptor locationUse))
   (:GAP (DEN eventLocale) (DNI locationUse))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 2 1)) ((0 4 0)) ((0 0 0) (0 3 0)) ((0 2 0) (0 2 2))
   ((0 1 1) (0 2 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) School-TheWord (and (isa :NOUN SchoolBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) School-TheWord (and (isa :NOUN SchoolInstitution))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "school") Year-TheWord (and (isa :NOUN AcademicYear))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time)) (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "school") Year-TheWord (and (isa :NOUN AcademicYear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schoolbus-TheWord (and (isa :NOUN SchoolBus))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schoolmaster-TheWord (and (isa :NOUN Headmaster))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP instructor))
   (:OBLIQUE-OBJECT (N eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn of) eventOccursAt) ((PPFn for) studentOf))
   (:GAP (DEN instructor)) (:GEN (Poss studentOf))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Schoolmate-TheWord (and (isa :NOUN Schoolmate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Schoolmistress-TheWord (and (isa :NOUN Headmaster))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP instructor)) (:GAP (DEN instructor))
   (:GEN (Poss studentOf))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Schoolteacher-TheWord (and (isa :NOUN Schoolteacher))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP studentOf instructor))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn with) eventOccursAt)
    (AJP educationLevel) ((PPFn of) studentOf))
   (:GAP (DEN instructor)) (:GEN (Poss studentOf))))
 (groupPatterns
  (TheSet ((0 0 1)) ((3 0 0)) ((0 0 0)) ((1 2 0)) ((0 0 1) (0 0 1))
   ((0 0 1) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 1) (1 1 0)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Schooner-TheWord (and (isa :NOUN Schooner))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "schottky") Diode-TheWord
 (and (isa :NOUN SchottkyDiode)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sciatic") Nerve-TheWord
 (and (isa :NOUN SciaticNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sciatica-TheWord (and (isa :NOUN Sciatica))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "science") Museum-TheWord
 (and (isa :NOUN ScienceMuseum-Organization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Science-TheWord
 (and (isa :NOUN ScientificFieldOfStudy)) (frame FN_Craft)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "science") Fiction-TheWord
 (and (isa :NOUN PropositionalConceptualWork-ScienceFictionGenre))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "science" "fiction") Writer-TheWord
 (and (isa :NOUN ScienceFictionWriter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scientific") Knowledge-TheWord
 (and (isa :NOUN Science)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scientific") Theory-TheWord
 (and (isa :NOUN ScientificTheory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scientist-TheWord (and (isa :NOUN Scientist))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (VPed fe_descriptor) ((PPFn at) employer employer)
    ((PPFn from) comesFrom-Generic employer)
    ((PPFn in) employer activeIngredientsOfType)
    (A fe_descriptor employer fe_ethnicity comesFrom-Generic fe_rank
     activeIngredientsOfType)
    (N employer employer fe_rank activeIngredientsOfType)
    (AJP fe_descriptor comesFrom-Generic fe_persistent_characteristic fe_rank
     activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss comesFrom-Generic))
   (:APPOSITIVE (N fe_person) (NP fe_person))))
 (groupPatterns
  (TheSet ((1 6 4)) ((1 4 5)) ((1 6 3)) ((1 2 1)) ((0 0 0)) ((4 1 0)) ((1 6 2))
   ((1 2 0)) ((1 6 1)) ((1 4 3)) ((1 4 2)) ((1 1 0)) ((1 5 0)) ((1 4 0))
   ((1 6 4) (4 1 0)) ((1 5 2) (4 1 0)) ((1 3 0) (1 5 3)) ((1 1 0) (1 6 3))
   ((1 1 0) (1 4 4)) ((1 4 5) (3 0 0)) ((1 2 0) (1 4 5)) ((1 4 3) (1 5 3))
   ((1 2 1) (1 6 1)) ((1 1 0) (1 6 1)) ((1 6 1) (4 0 0)) ((1 4 1) (1 4 5))
   ((1 3 1) (1 6 0)) ((1 0 0) (1 4 2)) ((1 4 0) (1 6 0)))))

(FNNounSemtrans (TheList) Scintillation-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scion-TheWord (and (isa :NOUN Family-SocialEntity))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_ego)) (:GAP (DEN fe_alter))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Scissors-TheWord (and (isa :NOUN Scissors))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scoliosis-TheWord (and (isa :NOUN Scoliosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sconce-TheWord
 (and (isa :NOUN Sconce-LightingDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scoop-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scoop-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT (AJP fe_count)
    ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    (NP (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Scoopful-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scooter-TheWord (and (isa :NOUN Scooter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scooter-TheWord (and (isa :NOUN Scooter))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scorcher-TheWord (and (isa :NOUN VeryHot))
 (frame FN_Ambient_temperature)
 (bindingTemplate
  (TheList (:SUBJECT (NP temporallyIntersects))
   (:OBLIQUE-OBJECT (AJP fe_degree))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Score-TheWord (and (isa :NOUN 20))
 (frame FN_Cardinal_numbers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn)) (:GAP (DEN fe_number))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Score-TheWord (and (isa :NOUN MusicalScore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Score-TheWord (and (isa :NOUN ScoringPoints))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scores-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Scorn-TheWord (and (isa :NOUN Contempt))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation objectOfEvaluation))
   (:OBLIQUE-OBJECT ((PPFn of) subjectOfMentalSituation objectOfEvaluation)
    ((PPFn for) objectOfEvaluation) ((PPFn upon) objectOfEvaluation)
    ((PPFn on) objectOfEvaluation) ((PPFn in) eventAffectsBodyPart)
    (AJP subjectOfMentalSituation fe_degree fe_manner) ((PPFn at) fe_reason)
    (NP fe_reason))
   (:GAP (CNI subjectOfMentalSituation) (DNI objectOfEvaluation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((3 0 0)) ((1 0 0)) ((1 2 0)) ((1 1 0))
   ((1 5 2) (3 0 0)) ((1 0 1) (3 0 0)) ((1 1 0) (3 0 0)) ((0 0 1) (3 0 0))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 0 1)) ((1 0 1) (1 5 0))
   ((0 0 0) (1 3 0) (1 7 0)) ((1 1 0) (1 5 2) (3 0 0))
   ((0 0 0) (1 1 0) (1 5 1)))))

(FNNounSemtrans (TheList) Scorpio-TheWord (and (isa :NOUN Scorpio-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scorpion-TheWord (and (isa :NOUN Scorpion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scot-TheWord (and (isa :NOUN ScottishPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scotch") Terrier-TheWord
 (and (isa :NOUN Terrier-Scottish)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scottish") Deerhound-TheWord
 (and (isa :NOUN ScottishDeerhound)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scottish") Gaelic-TheWord
 (and (isa :NOUN ScottishGaelicLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scowl-TheWord (and (isa :NOUN Scowling))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (NP fe_intended_perceiver))
   (:OBLIQUE-OBJECT (AJP fe_conveyed_emotion)
    ((PPFn of) fe_internal_cause ownerOfProprietaryThing)
    ((PPFn on) subRegions))
   (:GAP (DEN fe_expression) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 2 0)) ((4 0 0)) ((2 1 1)) ((0 0 0)) ((2 1 0)) ((2 0 0))
   ((0 0 0) (2 2 0)) ((0 0 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Scramble-TheWord (and (isa :NOUN LocomotionEvent))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) situationLocation) ((PPFn to) to-Generic)
    (AJP distanceTranslated fe_manner) ((PPFn over) trajectory-Complete)
    ((PPFn down) trajectory-Complete) ((PPFn round) trajectory-Complete)
    (N situationLocation trajectory-Complete)
    ((PPFn along) trajectory-Complete) ((PPFn for) trajectory-Complete)
    ((PPFn through) trajectory-Complete)
    ((PPFn up) to-Generic trajectory-Complete) (VPto trajectory-Complete)
    ((PPFn among) performedBy) ((PPFn between) trajectory-Complete performedBy)
    ((PPFn away) from-Generic))
   (:GAP (CNI performedBy))))
 (groupPatterns
  (TheSet ((0 13 1)) ((0 11 0)) ((0 10 1)) ((0 5 0)) ((0 8 0)) ((0 7 0))
   ((0 6 1)) ((0 3 0)) ((0 2 1)) ((0 1 0)) ((0 10 0)) ((0 2 0)) ((0 0 0))
   ((0 6 0)) ((0 9 0) (0 14 0)) ((0 11 0) (0 12 0)) ((0 2 1) (0 3 0))
   ((0 2 1) (0 5 0)) ((0 2 1) (0 4 0)) ((0 2 1) (0 13 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList "scrambled") Egg-TheWord
 (and (isa :NOUN ScrambledEgg)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrambled-Egg-TheWord (and (isa :NOUN ScrambledEgg))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scramjet") Engine-TheWord
 (and (isa :NOUN SupersonicCombustionRamjetEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrap-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed) (N stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Scrapbook-TheWord (and (isa :NOUN Scrapbook))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrape-TheWord (and (isa :NOUN Predicament))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) ((PPFn over) fe_ground)
    ((PPFn of) fe_noisy_event objectMoving))
   (:GAP (DNI fe_ground))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 2 1)) ((0 1 0) (0 2 1)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList) Scrape-TheWord
 (and (isa :NOUN ScrapingScratchingSound)) (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) ((PPFn over) fe_ground)
    ((PPFn of) fe_noisy_event objectMoving))
   (:GAP (DNI fe_ground))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 2 1)) ((0 1 0) (0 2 1)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList) Screech-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn at) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) from-Generic) (AJP fe_manner)
    ((PPFn of) fe_internal_cause fe_noisy_event emitter objectMoving))
   (:GAP (INI fe_ground)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 3 2)) ((0 0 0)) ((1 3 1)) ((1 2 0)) ((1 1 0)) ((1 3 3))
   ((1 2 0) (3 0 0)) ((1 2 0) (1 3 2)) ((0 0 0) (1 3 0))
   ((0 0 0) (0 0 0) (1 2 0)) ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "screen") Door-TheWord (and (isa :NOUN ScreenDoor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "screen") Saver-TheWord (and (isa :NOUN ScreenSaver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screen-TheWord (and (isa :NOUN MovieScreen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screen-TheWord (and (isa :NOUN VideoScreen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screen-TheWord (and (isa :NOUN WindowScreen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screenplay-TheWord (and (isa :NOUN Screenplay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screenplay-TheWord
 (and (isa :NOUN MysteryStory-Generic)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) situationTopic) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Screw-TheWord (and (isa :NOUN Screw-Connector))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screw-TheWord (and (isa :NOUN Screw-Connector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Screw-Up-TheWord
 (and (isa :NOUN (UnsuccessfulFn Attempting))) (frame FN_Bungling)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "screw" "up") [Event]-TheWord
 (and (isa :NOUN (UnsuccessfulFn Attempting))) (frame FN_Bungling)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn objectActedOn))
   (:OBLIQUE-OBJECT (A fe_degree) (AJP situationLocation fe_degree))))
 (groupPatterns
  (TheSet ((1 1 0)) ((0 0 0)) ((0 0 0) (1 1 1)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Screwdriver-TheWord (and (isa :NOUN Screwdriver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Script-TheWord (and (isa :NOUN PlayScript))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Script-TheWord (and (isa :NOUN WritingSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Script-TheWord (and (isa :NOUN (ScriptOfCWFn Story)))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP authorOfLiteraryWork-CW)
    ((PPFn by) authorOfLiteraryWork-CW) ((PPFn from) authorOfLiteraryWork-CW)
    (N authorOfLiteraryWork-CW fe_genre) ((PPFn about) situationTopic)
    ((PPFn of) fe_title situationTopic) (Sforto situationTopic)
    ((PPFn for) beneficiary deviceUse))
   (:GAP (DEN fe_text) (2nd fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW fe_genre))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 1)) ((0 4 0)) ((0 7 1)) ((0 5 0)) ((2 0 1)) ((0 3 1))
   ((0 7 0)) ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 3 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Scroll-TheWord (and (isa :NOUN Scroll))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrotum-TheWord (and (isa :NOUN Scrotum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scrub") Brush-TheWord (and (isa :NOUN ScrubBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scrub") Nurse-TheWord (and (isa :NOUN SurgicalNurse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrub-TheWord
 (and (isa :NOUN ScrubbyVegetationRegion)) (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "scrubbing") Cleanser-TheWord
 (and (isa :NOUN ScrubbingCleanser)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scrubbing") Pad-TheWord
 (and (isa :NOUN ScrubbingPad)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrunch-TheWord (and (isa :NOUN Sound))
 (frame FN_Sounds) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scrutiny-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ground))
   (:OBLIQUE-OBJECT (N subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation) ((PPFn from) subjectOfMentalSituation)
    ((PPFn over) fe_ground) ((PPFn of) subjectOfMentalSituation fe_ground)
    (AJP subjectOfMentalSituation fe_degree fe_manner))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_ground))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((1 2 0)) ((1 0 0)) ((1 4 1)) ((0 0 0)) ((1 1 0))
   ((1 2 0) (1 5 2)) ((1 1 0) (1 5 2)) ((1 4 1) (1 5 2)) ((0 0 0) (1 5 2))
   ((1 4 1) (3 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 4 1))
   ((0 0 0) (1 0 0)) ((1 3 0) (1 5 0)) ((0 0 0) (1 5 0))
   ((0 0 0) (1 2 0) (1 5 2)) ((0 0 0) (1 1 0) (1 5 2))
   ((0 0 0) (1 1 0) (1 5 1)))))

(FNNounSemtrans (TheList "scsi") Cable-TheWord (and (isa :NOUN SCSICable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scuba") Tank-TheWord
 (and (isa :NOUN ScubaDivingTank)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scud" "b") Missile-TheWord (and (isa :NOUN Scud))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scud-B-TheWord (and (isa :NOUN Scud))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "scud" "c") Missile-TheWord (and (isa :NOUN Scud))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scuffle-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT ((PPFn over) fe_issue) ((PPFn of) fe_manner)
    (AJP fe_degree by-Underspecified) (N eventOccursAt) ((PPFn with) fe_side_2)
    ((PPFn between) fe_sides) ((PPFn at) eventOccursAt temporallyIntersects)
    (NP temporallyIntersects) ((PPFn on) temporallyIntersects)
    ((PPFn as) temporallyIntersects))
   (:GAP (DNI fe_side_1) (INI fe_side_2 fe_sides))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 1 0)) ((1 0 0)) ((1 5 0) (1 7 0)) ((1 3 0) (1 7 0))
   ((1 2 0) (1 5 0)) ((0 0 0) (1 4 0) (1 9 0)) ((0 0 0) (1 3 0) (1 6 1))
   ((0 0 0) (1 2 1) (1 4 0)) ((0 0 0) (1 4 0) (1 6 0) (1 8 0)))))

(FNNounSemtrans (TheList) Scull-TheWord (and (isa :NOUN Scull)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Scullery-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sculptor-TheWord (and (isa :NOUN Sculptor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sculpture-TheWord (and (isa :NOUN Sculpture))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList (:OBJECT (NP productsCreated)) (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Scurvy-TheWord (and (isa :NOUN Scurvy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sea-Lion-TheWord (and (isa :NOUN SeaLion))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sea") Otter-TheWord (and (isa :NOUN SeaOtter))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sea") Sponge-TheWord (and (isa :NOUN NaturalSponge))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sea-TheWord (and (isa :NOUN Sea))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor) (A fe_descriptor)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) parts fe_container_possessor
     (InverseBinaryPredicateFn nameString))
    (N (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn off) fe_relative_location)
    ((PPFn outside) fe_relative_location)
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))
   (:GAP (DEN eventLocale))
   (:GEN (Poss fe_container_possessor fe_relative_location))))
 (groupPatterns
  (TheSet ((1 8 2)) ((3 0 1)) ((1 6 0)) ((1 5 0)) ((1 4 1)) ((1 3 2)) ((1 2 0))
   ((1 4 0)) ((1 8 1)) ((1 8 0)) ((1 1 0)) ((3 0 0)) ((1 3 1)) ((1 0 0))
   ((1 3 0)) ((1 7 0) (1 8 2)) ((1 2 0) (1 8 2)) ((1 8 2) (3 0 0))
   ((0 0 0) (1 8 2) (3 0 0)))))

(FNNounSemtrans (TheList "sea") Turtle-TheWord (and (isa :NOUN SeaTurtle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seabed-TheWord (and (isa :NOUN Seabed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seaboard-TheWord (and (isa :NOUN Seacoast))
 (frame FN_Relational_natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seafloor-TheWord (and (isa :NOUN Seabed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seagull-TheWord (and (isa :NOUN Seagull))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seahorse-TheWord (and (isa :NOUN Seahorse))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seal-TheWord (and (isa :NOUN Seal-Animal))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seal-TheWord (and (isa :NOUN USNavySEAL))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seal-TheWord (and (isa :NOUN Sealant))
 (frame FN_Fastener)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn around) fe_container_portal)
    ((PPFn on) containerUsed fe_container_portal)
    ((PPFn with) fe_container_portal) ((PPFn of) containerUsed performedBy)
    (Srel fe_descriptor) (AJP fe_descriptor activeIngredientsOfType)
    (N containerUsed fe_container_portal mainConstituent
     activeIngredientsOfType deviceUse))
   (:GAP (DNI containerUsed) (DEN deviceUsed))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 6 1)) ((0 6 3)) ((0 5 1)) ((0 6 2))
   ((0 1 0)) ((0 3 0)) ((0 6 0)) ((0 5 0)) ((0 5 1) (0 6 4)) ((0 6 2) (0 6 3))
   ((0 5 0) (0 6 2)) ((0 4 0) (0 5 0) (0 5 1)) ((0 3 1) (0 5 0) (0 6 2)))))

(FNNounSemtrans (TheList) Seal-TheWord (and (isa :NOUN SealingAnArea))
 (frame FN_Fastener)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn around) fe_container_portal)
    ((PPFn on) containerUsed fe_container_portal)
    ((PPFn with) fe_container_portal) ((PPFn of) containerUsed performedBy)
    (Srel fe_descriptor) (AJP fe_descriptor activeIngredientsOfType)
    (N containerUsed fe_container_portal mainConstituent
     activeIngredientsOfType deviceUse))
   (:GAP (DNI containerUsed) (DEN deviceUsed))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 6 1)) ((0 6 3)) ((0 5 1)) ((0 6 2))
   ((0 1 0)) ((0 3 0)) ((0 6 0)) ((0 5 0)) ((0 5 1) (0 6 4)) ((0 6 2) (0 6 3))
   ((0 5 0) (0 6 2)) ((0 4 0) (0 5 0) (0 5 1)) ((0 3 1) (0 5 0) (0 6 2)))))

(FNNounSemtrans (TheList) Sealant-TheWord (and (isa :NOUN Sealant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sealyham") Terrier-TheWord
 (and (isa :NOUN Terrier-Sealyham)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seam-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Seamstress-TheWord
 (and (isa :NOUN
       (ProfessionalFn
        (SubcollectionOfWithRelationFromTypeFn Person performedBy
         SewingActivity))))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seamount-TheWord (and (isa :NOUN Seamount))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location) (NP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Seaplane-TheWord (and (isa :NOUN FloatPlane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seaport-TheWord (and (isa :NOUN Seaport))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Search-TheWord (and (isa :NOUN LookingForSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Search-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation fe_ground))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation)
    ((PPFn among) fe_ground) ((PPFn through) fe_ground) ((PPFn in) fe_ground)
    (AJP fe_manner) (VPing by-Underspecified)
    ((PPFn for) fe_ground fe_phenomenon)
    (N subjectOfMentalSituation fe_ground by-Underspecified fe_phenomenon)
    ((PPFn of) fe_ground fe_phenomenon))
   (:GAP (CNI subjectOfMentalSituation) (INI subjectOfMentalSituation)
    (DNI fe_ground fe_phenomenon))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 6 1)) ((1 7 3)) ((3 0 0)) ((0 0 0)) ((1 2 0)) ((1 8 0))
   ((1 7 1)) ((1 0 0)) ((1 6 1) (3 0 0)) ((1 7 3) (3 0 0)) ((1 0 0) (1 6 1))
   ((1 7 2) (3 0 0)) ((1 3 0) (3 0 0)) ((1 1 0) (1 6 1)) ((1 7 2) (1 8 0))
   ((1 0 0) (1 4 0)) ((0 0 1) (1 4 0)) ((1 4 0) (1 8 0)) ((1 2 0) (3 0 0))
   ((1 8 0) (3 0 0)) ((1 6 0) (3 0 0)) ((1 0 0) (1 7 1)) ((1 7 0) (1 8 0))
   ((1 4 0) (1 6 1) (3 0 0)) ((1 0 0) (1 4 0) (1 6 1))
   ((1 4 0) (1 5 0) (1 8 0)) ((0 0 0) (1 4 0) (1 8 0))
   ((0 0 0) (1 4 0) (1 6 1) (1 8 0)))))

(FNNounSemtrans (TheList) Seashore-TheWord (and (isa :NOUN Seacoast))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Season-TheWord (and (isa :NOUN SeasonOfYear))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seasoning-TheWord (and (isa :NOUN Spice))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seasoning-TheWord (and (isa :NOUN Herb))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "seat" "belt") Lock-TheWord
 (and (isa :NOUN SeatBeltLock)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "seat") Belt-TheWord (and (isa :NOUN SafetySeatBelt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seat-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts)))
   (:GAP (DEN parts) (2nd wearer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Seat-TheWord (and (isa :NOUN AutomobileSeat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seat-TheWord
 (and (isa :NOUN CenterOfAuthority-GeographicalRegion)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seat-TheWord (and (isa :NOUN SeatingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seat-TheWord (and (isa :NOUN SeatingDeviceSeat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seat-TheWord (and (isa :NOUN SpaceInAHOC))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seat-TheWord
 (and (isa :NOUN VehiclePart) (isa :NOUN SeatingDevice))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) SeatBelt-TheWord (and (isa :NOUN SafetySeatBelt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seatbelt-TheWord (and (isa :NOUN SafetySeatBelt))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seawater-TheWord (and (isa :NOUN SeaWater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seaweed-TheWord (and (isa :NOUN Seaweed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secant-TheWord (and (isa :NOUN SecantFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secession-TheWord (and (isa :NOUN SecessionEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Second-Mate-TheWord (and (isa :NOUN ShipsSecondMate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Second-TheWord (and (isa :NOUN CalendarSecond))
 (frame FN_Calendric_unit) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Second-TheWord (and (isa :NOUN UnitOfTime))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_count) (Num fe_count) ((PPFn of) fe_process)
    (VPing fe_process))
   (:GAP (INI fe_process) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Second-TheWord
 (and (isa :NOUN Second-UnitOfAngularMeasure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Second-TheWord (and (isa :NOUN SecondsDuration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secret-TheWord (and (isa :NOUN Secret))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "secretary" "of") Defense-TheWord
 (and (isa :NOUN MinisterOfDefense)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "secretary" "of") Energy-TheWord
 (and (isa :NOUN MinisterOfEnergy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secretary-TheWord (and (isa :NOUN SecretaryGeneral))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secretary-TheWord (and (isa :NOUN Secretary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secretin-TheWord (and (isa :NOUN Secretin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secretion-TheWord (and (isa :NOUN Secretion-Bodily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Secretion-TheWord (and (isa :NOUN SecretionEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sect-TheWord (and (isa :NOUN ReligiousDenomination))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sect-TheWord (and (isa :NOUN ReligiousDenomination))
 (frame FN_Offshoot) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Section-TheWord (and (isa :NOUN Chapter-PCW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Section-TheWord
 (and (isa :NOUN Section-MilitaryOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Section-TheWord (and (isa :NOUN Section-PCW))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A orientation) (AJP fe_part_prop) (N fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    ((PPFn in) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 0)) ((0 2 0)) ((0 1 0)) ((0 2 0) (0 3 0))
   ((0 1 0) (0 3 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Sector-TheWord
 (and (isa :NOUN EconomicSector-Localized)) (frame FN_Fields)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N processTypeForAccomplishmentType))
   (:GAP (DNI processTypeForAccomplishmentType))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Sector-TheWord (and (isa :NOUN SectorShapedObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "security") Council-TheWord
 (and (isa :NOUN UNSecurityCouncil)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "security") Device-TheWord
 (and (isa :NOUN SecurityDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Security-TheWord (and (isa :NOUN VulnerableThing))
 (frame FN_Being_at_risk)
 (bindingTemplate
  (TheList (:SUBJECT (NP resourceInEvent))
   (:OBLIQUE-OBJECT (A resourceInEvent) (AJP resourceInEvent)
    (N resourceInEvent) ((PPFn to) resourceInEvent) (unknown resourceInEvent)
    (AVP fe_degree) ((PPFn in) fe_domain))
   (:GAP (DEN resourceInEvent)
    (INI resourceInEvent fe_dangerous_entity fe_harmful_event)
    (DNI resourceInEvent fe_dangerous_entity fe_harmful_event))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 1 0)) ((1 3 0)) ((1 2 0)) ((1 0 0))
   ((0 0 0) (1 5 0) (1 6 0)))))

(FNNounSemtrans (TheList) Security-TheWord (and (isa :NOUN ProtectionGoal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Security-TheWord (and (isa :NOUN Security-Emotion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Security-TheWord (and (isa :NOUN TradeableSecurity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sedan-TheWord (and (isa :NOUN SedanCar))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sedative-TheWord (and (isa :NOUN Barbiturate))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Sedative-TheWord (and (isa :NOUN Depressant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sediment-TheWord (and (isa :NOUN Sediment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sedimentary") Rock-TheWord
 (and (isa :NOUN SedimentaryRock)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sedimentation-TheWord
 (and (isa :NOUN SedimentationProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) See-TheWord
 (and (isa :NOUN BishopsCenterOfAuthority)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) See-TheWord (and (isa :NOUN CapitalCityOfRegion))
 (frame FN_Relational_political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seed-TheWord (and (isa :NOUN Seed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seedling-TheWord (and (isa :NOUN Seedling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seedpod-TheWord
 (and (isa :NOUN Pod) (relationInstanceExists protectiveContains :NOUN Seed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Segment-TheWord
 (and (isa :NOUN ExistingObjectType)
      (relationExistsInstance segments SegmentedCordlikeObject :NOUN))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop) (N (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Segregation-TheWord (and (isa :NOUN Segregation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Segway-TheWord (and (isa :NOUN Segway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seine-TheWord (and (isa :NOUN SeineNet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "seismic") Wave-TheWord (and (isa :NOUN SeismicWave))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seizure-TheWord (and (isa :NOUN TakingSomething))
 (frame FN_Taking)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy)
    (Sinterrog (InverseBinaryPredicateFn subEvents))
    ((PPFn for) (InverseBinaryPredicateFn explains-Generic)) (AJP fe_manner)
    ((PPFn at) eventOccursAt) ((PPFn from) doneBy from-Generic)
    ((PPFn of) objectTaken) ((PPFn in) eventOccursAt temporallyIntersects)
    (Sub temporallyIntersects) (N doneBy objectTaken temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (INI from-Generic)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 1)) ((1 6 0) (1 7 1)) ((1 7 0) (1 9 1))
   ((1 3 0) (1 6 0)) ((1 2 0) (1 6 0)) ((1 6 0) (3 0 0)) ((1 5 0) (1 9 1))
   ((1 0 0) (1 9 1)) ((1 9 0) (1 9 1)) ((1 0 0) (1 6 0)) ((0 0 0) (1 6 0))
   ((1 4 0) (1 6 0) (1 10 0)) ((1 3 0) (1 5 1) (1 6 0))
   ((1 6 0) (1 9 2) (3 0 0)) ((1 4 0) (1 6 0) (3 0 0))
   ((0 0 0) (1 7 0) (1 9 1)) ((0 0 0) (1 6 0) (1 7 0) (1 7 1) (1 8 0))
   ((0 0 0) (1 1 0) (1 6 0) (1 7 0) (1 7 1)))))

(FNNounSemtrans (TheList) Selection-TheWord
 (and (isa :NOUN SelectingSomething)) (frame FN_Choosing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) choices))
   (:GAP (INI chosenItem subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Selenium-TheWord (and (isa :NOUN Selenium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "self") Tanner-TheWord (and (isa :NOUN SelfTanners))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "self") Portrait-TheWord
 (and (isa :NOUN Self-portrait)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Self-TheWord
 (and (isa :NOUN LinguisticExpressionPeg)
      (relationInstanceExists intendedReferent :NOUN Thing))
 (frame FN_Proper_reference)
 (bindingTemplate
  (TheList (:GAP (DEN objectActedOn) (DNI fe_intended_referent))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Selfie-TheWord (and (isa :NOUN Self-portrait))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seller-TheWord
 (and (isa :NOUN SocialBeing) (relationExistsInstance seller Buying :NOUN))
 (frame FN_Commerce_sell)
 (bindingTemplate
  (TheList (:SUBJECT (NP seller))
   (:OBLIQUE-OBJECT (N objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer))
   (:GAP (DEN seller)) (:NOUN (N seller)) (:GEN (Poss buyer))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((4 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Seller-TheWord (and (isa :NOUN Vendor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Selling-TheWord (and (isa :NOUN SalesActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semanticist-TheWord (and (isa :NOUN Semanticist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semantics-TheWord (and (isa :NOUN Semantics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semen-TheWord (and (isa :NOUN Semen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semester-TheWord (and (isa :NOUN AcademicSemester))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semi-TheWord (and (isa :NOUN SemiTrailer-Truck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "semiautomatic") Firearm-TheWord
 (and (isa :NOUN SemiAutomaticFirearm)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semicolon-TheWord
 (and (isa :NOUN Semicolon-TheSymbol)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "semiconductor" "device" "manufacture")
 Facility-TheWord (and (isa :NOUN SemiconductorDeviceManufactureFacility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semiconductor-TheWord
 (and (isa :NOUN SemiconductorDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Semiconductor-TheWord
 (and (isa :NOUN SemiconductorStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "seminal") Vesicle-TheWord
 (and (isa :NOUN SeminalVesicle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seminar-TheWord (and (isa :NOUN SeminarSeries))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seminoma-TheWord
 (and (isa :NOUN (CancerFn Testicle))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Senate-TheWord (and (isa :NOUN Senate))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList
   (:GAP (DEN leadersOfMovement)
    (INI processTypeForAccomplishmentType fe_governed
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Senegalese-TheWord (and (isa :NOUN SenegalPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "senior" "high") School-TheWord
 (and (isa :NOUN HighSchool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sennheiser") Headset-TheWord
 (and (isa :NOUN SennheiserHeadset)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sensation-TheWord (and (isa :NOUN Perceiving))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy perceivedThings from-Generic))
   (:OBLIQUE-OBJECT ((PPFn in) actorPartsInvolved) (N fe_descriptor)
    (AJP fe_descriptor perceivedThings) (VPto from-Generic)
    ((PPFn of) from-Generic) ((PPingFn of) from-Generic))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((0 0 2)) ((0 0 1)) ((1 2 1)) ((2 0 0)) ((0 0 0))
   ((1 2 0)) ((0 0 0) (1 4 0)) ((1 1 0) (1 4 0)) ((1 2 0) (1 3 0))
   ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList "sense" "of") Humor-TheWord
 (and (isa :NOUN (AbilityWithRespectToFn JokeTelling))) (frame FN_Inclination)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfCritique) (AJP fe_degree))
   (:GAP (CNI objectActedOn) (DNI objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Sense-TheWord
 (and (isa :NOUN CycLExpression)
      (relationExistsInstance meaningSentenceOfTextType ObjectType :NOUN))
 (frame FN_Linguistic_meaning)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_form))
   (:OBLIQUE-OBJECT ((PPFn of) fe_form fe_referent) ((PPingFn of) fe_referent)
    (Srel fe_referent) ((PPFn in) fe_referent)
    (AJP fe_degree fe_textual_location) (VPed fe_textual_location)
    ((PPFn at) fe_textual_location))
   (:GAP (INI fe_form) (DEN fe_meaning)) (:GEN (Poss fe_textual_location))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 5 0)) ((3 0 0)) ((1 4 1)) ((1 2 0)) ((1 1 0)) ((1 0 1))
   ((1 4 0)) ((1 0 0) (1 4 1)) ((0 0 0) (1 6 0)))))

(FNNounSemtrans (TheList) Sense-TheWord (and (isa :NOUN Perceiving))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N perceivedThings)
    (Sfin perceivedThings) ((PPFn of) perceivedThings from-Generic)
    ((PPingFn of) from-Generic))
   (:GAP (CNI doneBy) (DNI doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 1)) ((1 3 0)) ((1 1 0)) ((1 3 1) (3 0 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 3 1)) ((1 3 0) (3 0 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 0 0) (1 3 1)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 3 0) (3 0 0)))))

(FNNounSemtrans (TheList) Sensitivity-TheWord
 (and (isa :NOUN AllergicReaction)) (frame FN_Health_response)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent fe_trigger))
   (:OBLIQUE-OBJECT (AJP actorPartsInvolved) (NP actorPartsInvolved)
    ((PPFn of) actorPartsInvolved) ((PPFn to) fe_trigger) (VPto fe_trigger))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 3 0)) ((0 0 1)) ((1 1 0)) ((0 0 1) (2 0 0))
   ((1 2 0) (1 3 0)) ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList "sensory" "enhancement") Aural-TheWord
 (and (isa :NOUN SensoryEnhancementDevice-Aural)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sensory" "enhancement") Visual-TheWord
 (and (isa :NOUN SensoryEnhancementDevice-Visual)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sensory" "enhancement") Device-TheWord
 (and (isa :NOUN SensoryEnhancementDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sensory") Nerve-TheWord
 (and (isa :NOUN SensoryNerve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sentence-TheWord (and (isa :NOUN Sentencing-Legal))
 (frame FN_Sentencing)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_convict caseTriedIn)) (:OBJECT (NP fe_convict))
   (:OBLIQUE-OBJECT ((PPFn between) fe_convict) ((PPFn on) fe_convict)
    ((PPFn by) caseTriedIn) ((PPFn for) fe_convict fe_term_of_sentence)
    (NP fe_term_of_sentence) (A activeIngredientsOfType)
    (N fe_term_of_sentence activeIngredientsOfType)
    ((PPFn of) fe_convict fe_term_of_sentence activeIngredientsOfType)
    (AJP fe_depictive activeIngredientsOfType))
   (:GAP (DEN fe_sentence) (INI fe_convict caseTriedIn fe_term_of_sentence)
    (DNI fe_convict caseTriedIn fe_term_of_sentence))
   (:GEN (Poss fe_convict))))
 (groupPatterns
  (TheSet ((2 6 1)) ((2 6 0)) ((2 4 0)) ((2 8 0)) ((2 3 1)) ((2 7 2)) ((2 3 0))
   ((2 2 0)) ((2 5 0)) ((2 6 0) (2 6 1)) ((0 0 0) (2 7 2)) ((2 6 1) (2 7 0))
   ((0 0 0) (2 6 1)) ((2 5 0) (2 6 1)) ((2 0 0) (2 5 0)) ((0 0 0) (2 5 0))
   ((0 0 0) (2 6 0)) ((0 0 0) (2 7 1)) ((0 0 0) (4 0 0))
   ((0 0 0) (2 7 1) (2 8 1)) ((0 0 1) (2 1 0) (2 6 1))
   ((0 0 1) (2 1 0) (2 5 0)) ((0 0 0) (2 6 0) (2 6 1))
   ((0 0 0) (2 5 0) (2 6 0)) ((0 0 0) (2 2 0) (2 6 0))
   ((0 0 0) (2 5 0) (2 6 0) (2 6 1)) ((0 0 1) (1 0 0) (2 5 0) (2 6 0) (2 6 1))
   ((0 0 0) (2 2 0) (2 5 0) (2 6 0) (2 6 1)))))

(FNNounSemtrans (TheList) Sentence-TheWord (and (isa :NOUN NLSentence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sepal-TheWord (and (isa :NOUN Sepal)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Separation-TheWord
 (and (isa :NOUN CreationOrDestructionEvent)) (frame FN_Forming_relationships)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT ((PPFn from) fe_partner_2) ((PPFn between) fe_partners)
    ((PPFn of) fe_partners))
   (:GAP (DNI fe_partner_1 fe_partner_2 fe_partners) (INI fe_partners))
   (:GEN (Poss fe_partner_1 fe_partners))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Separation-TheWord (and (isa :NOUN SeparationEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) September-TheWord (and (isa :NOUN September))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "septic") System-TheWord
 (and (isa :NOUN SepticSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "septic") Tank-TheWord (and (isa :NOUN SepticTank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sequence-TheWord (and (isa :NOUN Series))
 (frame FN_Sequence)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_entities))
   (:GAP (DNI fe_entities objectOfMentalSituation objectOfMentalSituation))
   (:GEN (Poss fe_entities))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sequin-TheWord (and (isa :NOUN Sequin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sequoia-TheWord (and (isa :NOUN RedwoodTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Serape-TheWord (and (isa :NOUN Serape))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Serbian-TheWord
 (and (isa :NOUN EthnicGroupOfSerbians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Serendipity-TheWord (and (isa :NOUN Luck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sergeant-TheWord (and (isa :NOUN Sergeant-Rank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "serial") Bus-TheWord
 (and (isa :NOUN HardwareSerialBus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "serial" "computer") Cable-TheWord
 (and (isa :NOUN SerialComputerCable)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Serial-TheWord (and (isa :NOUN MediaSeriesProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "series") Circuit-TheWord
 (and (isa :NOUN SeriesCircuit)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Series-TheWord (and (isa :NOUN MediaSeriesProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Series-TheWord (and (isa :NOUN Series))
 (frame FN_Sequence)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_entities) (A fe_entities fe_relation_type)
    (AJP fe_relation_type))
   (:GAP (DNI fe_entities))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 1)))))

(FNNounSemtrans (TheList) Sermon-TheWord (and (isa :NOUN Sermon))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn in) mainConstituent) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic) ((PPFn of) situationTopic)
    (N startingDate deviceUse))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 0)) ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0))
   ((0 5 0) (0 5 1) (3 0 0)) ((0 3 0) (0 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Serotonin-TheWord (and (isa :NOUN Serotonin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "serratus" "posterior") Inferior-TheWord
 (and (isa :NOUN SerratusPosteriorInferior)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "serratus" "posterior") Superior-TheWord
 (and (isa :NOUN SerratusPosteriorSuperior)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Serum-TheWord (and (isa :NOUN BloodPlasma-Liquid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Servant-TheWord (and (isa :NOUN Servant))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn with) fe_descriptor) (NP fe_person))
   (:OBJECT (Poss employer))
   (:OBLIQUE-OBJECT ((PPFn at) employer) ((PPFn from) employer)
    ((PPFn of) employer) ((PPFn to) employer) ((PPFn with) employer)
    (NP fe_person) (N employer activeIngredientsOfType)
    (A employer activeIngredientsOfType) ((PPFn in) activeIngredientsOfType)
    (AJP employeeStatus activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss employer)) (:APPOSITIVE (NP fe_person))))
 (groupPatterns
  (TheSet ((2 9 1)) ((2 8 0)) ((2 6 1)) ((2 7 1)) ((0 1 0)) ((2 5 0)) ((4 0 0))
   ((2 3 0)) ((2 2 0)) ((2 1 0)) ((2 0 0)) ((2 6 0)) ((0 1 0) (2 6 1))
   ((0 1 0) (2 7 1)) ((1 0 0) (2 5 0)) ((0 1 0) (4 0 0)) ((4 0 0) (5 0 0))
   ((0 1 0) (2 4 0)) ((0 1 0) (2 3 0)) ((0 1 0) (2 2 0)) ((0 1 0) (2 7 0))
   ((0 0 0) (2 5 0)) ((2 6 1) (2 9 0)) ((0 1 0) (0 1 0) (2 7 1))
   ((0 1 0) (2 7 1) (4 0 0)) ((0 1 0) (0 1 0) (2 9 0)))))

(FNNounSemtrans (TheList "server" "cabinet") Kit-TheWord
 (and (isa :NOUN ConfiguredServerCabinet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Server-TheWord (and (isa :NOUN ComputerServer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Server-TheWord (and (isa :NOUN Waitperson))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "service") Book-TheWord
 (and (isa :NOUN ServiceBook-SacredText)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "service") Member-TheWord
 (and (isa :NOUN MilitaryPerson)) (frame FN_Member_of_military)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N sovereignAllegianceOfOrg)
    (A comesFrom-Generic))
   (:GAP (2nd sovereignAllegianceOfOrg) (DEN fe_person))
   (:GEN (Poss (InverseBinaryPredicateFn hasMembers)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 2 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Service-TheWord (and (isa :NOUN ChurchService))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP activeIngredientsOfType))
   (:OBLIQUE-OBJECT ((PPFn for) groupMembers) ((PPFn of) groupMembers)
    (AJP fe_organization) ((PPFn in) eventOccursAt) (AVP temporallyIntersects)
    ((PPFn on) temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects) (A activeIngredientsOfType)
    (N eventOccursAt temporallyIntersects activeIngredientsOfType))
   (:GAP (INI leadersOfMovement))
   (:GEN (Poss groupMembers temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 8 2)) ((1 7 0)) ((3 0 1)) ((1 6 1)) ((1 8 1)) ((1 3 0)) ((1 6 0))
   ((1 8 0)) ((1 2 0)) ((0 0 0) (1 3 0)) ((1 5 0) (1 6 0)) ((1 8 0) (1 8 1))
   ((1 2 0) (1 3 0)) ((1 8 2) (3 0 0)) ((1 1 0) (1 8 2)) ((1 0 0) (1 7 0))
   ((1 4 0) (1 6 0) (1 8 2)))))

(FNNounSemtrans (TheList) Service-TheWord (and (isa :NOUN ServiceOrganization))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP activeIngredientsOfType))
   (:OBLIQUE-OBJECT ((PPFn for) groupMembers) ((PPFn of) groupMembers)
    (AJP fe_organization) ((PPFn in) eventOccursAt) (AVP temporallyIntersects)
    ((PPFn on) temporallyIntersects)
    ((PPFn at) eventOccursAt temporallyIntersects) (A activeIngredientsOfType)
    (N eventOccursAt temporallyIntersects activeIngredientsOfType))
   (:GAP (INI leadersOfMovement))
   (:GEN (Poss groupMembers temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 8 2)) ((1 7 0)) ((3 0 1)) ((1 6 1)) ((1 8 1)) ((1 3 0)) ((1 6 0))
   ((1 8 0)) ((1 2 0)) ((0 0 0) (1 3 0)) ((1 5 0) (1 6 0)) ((1 8 0) (1 8 1))
   ((1 2 0) (1 3 0)) ((1 8 2) (3 0 0)) ((1 1 0) (1 8 2)) ((1 0 0) (1 7 0))
   ((1 4 0) (1 6 0) (1 8 2)))))

(FNNounSemtrans (TheList "serving") Utensil-TheWord
 (and (isa :NOUN ServingUtensil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sesame") Oil-TheWord (and (isa :NOUN SesameOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sesame") Seed-TheWord (and (isa :NOUN SesameSeed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sesame-TheWord (and (isa :NOUN SesamePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Set-TheWord (and (isa :NOUN Set-Mathematical))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) (NP fe_aggregate_property)
    ((PPFn of) fe_individuals) ((PPingFn of) fe_individuals)
    (N fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 4 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Setter-TheWord (and (isa :NOUN Setter-TheDog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Settlement-TheWord (and (isa :NOUN Colonization))
 (frame FN_Colonization) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Settlement-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor fe_formational_cause))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Settler-TheWord (and (isa :NOUN Settler))
 (frame FN_Colonization)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor originallyFromRegion) (N purposeOfEvent))
   (:GAP (DEN fe_colonists) (DNI originallyFromRegion fe_new_area))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Seventy-Eight-TheWord
 (and (isa :NOUN PhonographRecord-78)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Several-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "sewage") System-TheWord (and (isa :NOUN SewerSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sewage-TheWord (and (isa :NOUN Sewage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sewer-TheWord (and (isa :NOUN SewerSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sewer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy SewingActivity :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewer") Main-TheWord (and (isa :NOUN SewerLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing" "machine") Needle-TheWord
 (and (isa :NOUN SewingNeedle-Machine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing") Machine-TheWord
 (and (isa :NOUN SewingMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing") Needle-TheWord
 (and (isa :NOUN SewingNeedle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing" "pattern") Piece-TheWord
 (and (isa :NOUN SewingPatternPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing") Pattern-TheWord
 (and (isa :NOUN SewingPattern)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing") Pin-TheWord (and (isa :NOUN SewingPin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sewing") Scissors-TheWord
 (and (isa :NOUN SewingScissors)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sex-TheWord (and (isa :NOUN BiologicalSex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sex-TheWord (and (isa :NOUN SexualBehavior))
 (frame FN_Sex) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sextant-TheWord (and (isa :NOUN Sextant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sextet-TheWord
 (and (isa :NOUN Ensemble) (groupCardinality :NOUN 6)) (frame FN_Aggregate)
 (bindingTemplate (TheList (:GAP (DEN fe_aggregate)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sexual") Activity-TheWord
 (and (isa :NOUN SexualBehavior)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sexual") Assault-TheWord
 (and (isa :NOUN SexualAssault)) (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_degree))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "sexual") Harassment-TheWord
 (and (isa :NOUN SexualHarassment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sexual") Harassment-TheWord
 (and (isa :NOUN SexualHarassment)) (frame FN_Offenses)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim)) (:OBLIQUE-OBJECT ((PPFn against) victim))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "sexual") Intercourse-TheWord
 (and (isa :NOUN SexualCopulation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sexual") Love-TheWord
 (and (isa :NOUN SexualBehavior)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sexual") Reproduction-TheWord
 (and (isa :NOUN SexualReproductionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "seychelles") Rupee-TheWord
 (and (isa :NOUN Rupee-Seychelles)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seychelles-TheWord (and (isa :NOUN Seychelles))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shack-TheWord (and (isa :NOUN Shack))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shade-TheWord (and (isa :NOUN Color)) (frame FN_Type)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shadow-TheWord (and (isa :NOUN Shadow))
 (frame FN_Optical_image) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shaft-TheWord (and (isa :NOUN Shaft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shah-TheWord (and (isa :NOUN Shah))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Shahaptian-TheWord
 (and (isa :NOUN Shahaptian-EthnicGroupOfNewWorldNatives)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shaker-TheWord (and (isa :NOUN ShakerDispenser))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shaking-TheWord (and (isa :NOUN Shivering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shako-TheWord (and (isa :NOUN Hat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) parts))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "shale") Oil-TheWord (and (isa :NOUN ShaleOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shale-TheWord (and (isa :NOUN Shale))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shaman-TheWord (and (isa :NOUN Shaman))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shampoo-TheWord (and (isa :NOUN Shampoo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shanty-TheWord (and (isa :NOUN Shack))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shape-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Num fe_count) (A fe_count fe_shape_prop)
    (AJP fe_count fe_shape_prop) (N fe_shape_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_shape)) (:NOUN (N fe_shape_prop))))
 (groupPatterns
  (TheSet ((0 4 0)) ((2 0 0)) ((0 3 0)) ((0 2 1)) ((0 1 1)) ((0 2 1) (0 4 0))
   ((0 2 0) (0 2 1)) ((0 0 0) (0 2 1)) ((0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Shard-TheWord
 (and (isa :NOUN ExistingObjectType)
      (relationExistsInstance outputsCreated ShatteringEvent :NOUN))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) (N stuffUsed) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Shard-TheWord (and (isa :NOUN Shard))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) (N stuffUsed) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Shareware-TheWord (and (isa :NOUN Shareware))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shark-TheWord (and (isa :NOUN Shark))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sharpening") Tool-TheWord
 (and (isa :NOUN SharpeningTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shaver-TheWord (and (isa :NOUN ElectricShaver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shaving") Cream-TheWord
 (and (isa :NOUN ShavingCream)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shaving") Gel-TheWord (and (isa :NOUN ShavingCream))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shaving") Kit-TheWord (and (isa :NOUN DoppKit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shawl-TheWord (and (isa :NOUN Shawl))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn about) wornOn) (AJP fe_descriptor mainConstituent)
    (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 0)) ((0 2 1) (2 0 0)) ((0 1 1) (2 0 0))
   ((0 1 0) (2 0 0)) ((0 1 0) (0 2 2)) ((0 1 0) (0 2 1)) ((0 1 0) (0 1 1))
   ((0 1 0) (0 2 0)) ((0 1 0) (0 1 0)) ((0 0 0) (0 2 0))
   ((0 1 0) (0 2 1) (2 0 0)) ((0 1 0) (0 1 0) (0 2 1))
   ((0 1 0) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Shawl-TheWord (and (isa :NOUN Scarf)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) She-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Singular-NLAttr Feminine-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shear") Legs-TheWord (and (isa :NOUN ShearLegs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shebang-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shed-TheWord (and (isa :NOUN StorageShed))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheen-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheen-TheWord (and (isa :NOUN Shiny))
 (frame FN_Location_of_light)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) focalSubject) ((PPFn on) fe_ground)
    ((PPingFn on) fe_ground))
   (:GAP (DEN fe_light))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Sheep-TheWord (and (isa :NOUN Sheep))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sheep") Wool-TheWord (and (isa :NOUN SheepWool))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheepherder-TheWord (and (isa :NOUN Sheepherder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sheepskin") Coat-TheWord
 (and (isa :NOUN SheepskinCoat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sheet") Music-TheWord (and (isa :NOUN MusicalText))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sheet" "of" "writing") Paper-TheWord
 (and (isa :NOUN SheetOfWritingPaper)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sheet") Protector-TheWord
 (and (isa :NOUN SheetProtector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sheet") Set-TheWord (and (isa :NOUN SheetSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheet-TheWord (and (isa :NOUN BedSheet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheet-TheWord (and (isa :NOUN Pamphlet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheet-TheWord (and (isa :NOUN Sheet-BoatLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheet-TheWord (and (isa :NOUN SheetOfSomeStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheet-TheWord (and (isa :NOUN Shroud-BoatPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheet-TheWord (and (isa :NOUN SheetShapedObject))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList (:SUBJECT (NP stuffUsed))
   (:OBLIQUE-OBJECT (A fe_shape_prop) ((PPFn of) stuffUsed) (N stuffUsed)
    (AJP fe_shape_prop stuffUsed) ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 1 0)) ((0 0 0)) ((1 2 0)) ((1 3 1)) ((1 1 0) (1 3 0))
   ((1 2 0) (1 3 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Sheetrock-TheWord (and (isa :NOUN Sheetrock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sheik-TheWord (and (isa :NOUN Sheik))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP (DNI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))
   (:APPOSITIVE (N leadersOfMovement) (NP leadersOfMovement))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((3 1 0)) ((3 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Shelf-TheWord (and (isa :NOUN Shelf))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shelf-TheWord (and (isa :NOUN Shelf)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shelf-TheWord (and (isa :NOUN ShelfEdge-Undersea))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts fe_container_possessor)
    ((PPFn in) fe_relative_location) ((PPFn to) fe_relative_location)
    (VPing fe_relative_location) ((PPFn around) fe_relative_location)
    ((PPFn at) fe_relative_location) ((PPFn on) fe_relative_location)
    (AJP parts (InverseBinaryPredicateFn nameString) activeIngredientsOfType)
    (N parts fe_container_possessor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 8 3)) ((0 6 0)) ((0 1 0)) ((0 5 0)) ((0 8 2)) ((0 7 1)) ((0 0 0))
   ((0 8 0)) ((0 7 2) (0 7 2)) ((0 4 0) (0 7 2)) ((0 7 2) (0 8 1))
   ((0 0 0) (0 3 0)) ((0 2 0) (0 8 0)) ((0 0 1) (0 7 0))
   ((0 1 0) (0 8 0) (0 8 2)))))

(FNNounSemtrans (TheList) Shell-TheWord
 (and (isa :NOUN ProjectileShellAssembly)) (frame FN_Ammunition)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shell-TheWord (and (isa :NOUN Eggshell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shell-TheWord (and (isa :NOUN ProjectileCasing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shell-TheWord (and (isa :NOUN RowingShell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shell-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance surfaceParts PartiallyTangible :NOUN))
 (frame FN_Part_inner_outer) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shell-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance internalParts PartiallyTangible :NOUN))
 (frame FN_Part_inner_outer) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shell-TheWord (and (isa :NOUN ArtilleryShell))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) fe_descriptor) (N deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Shellfish-TheWord (and (isa :NOUN Shellfish))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shellfish-TheWord (and (isa :NOUN Shellfish))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) (AJP fe_descriptor)
    ((PPFn in) fe_descriptor))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Shelter-TheWord (and (isa :NOUN ShelterConstruction))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_function fe_relative_location)
    (A activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Shelter-TheWord (and (isa :NOUN ShelterConstruction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shelter-TheWord (and (isa :NOUN ShelteringArtifact))
 (frame FN_Protecting)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectProtected))
   (:OBLIQUE-OBJECT ((PPFn in) actionProtectsFromAttackOfType))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "shelving") Unit-TheWord
 (and (isa :NOUN ShelvingSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shetland") Pony-TheWord
 (and (isa :NOUN ShetlandPony)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shetland") Sheepdog-TheWord
 (and (isa :NOUN ShetlandSheepdog)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shield-TheWord (and (isa :NOUN Shield))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shield-TheWord (and (isa :NOUN Shield))
 (frame FN_Protecting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shift-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent) (objectOfStateChange :NOUN ?obj)
      (fromState ?obj ?from-st) (isa ?from-st GenericQuantity)
      (toState ?obj ?to-st) (isa ?to-st GenericQuantity)
      (different ?from-st ?to-st))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_attribute) ((PPFn to) fe_final_state)
    ((PPFn from) fe_initial_state))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Shift-TheWord (and (isa :NOUN WomensClothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn in) mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0) (0 2 1)) ((0 2 0) (2 0 0))
   ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Shift-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent)) (frame FN_Undergo_change)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shin-TheWord (and (isa :NOUN Shin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shindig-TheWord (and (isa :NOUN Dance-Party))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP duration) (N fe_occasion))
   (:GAP (DEN fe_social_event)) (:GEN (Poss host))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Shine-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) emitter))
   (:GAP (DEN rediationEmitted))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Shingle-TheWord
 (and (isa :NOUN Shake-BuildingMaterial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shingle-TheWord
 (and (isa :NOUN Shingle-BuildingMaterial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shinto-TheWord (and (isa :NOUN Shintoism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ship") Canal-TheWord
 (and (isa :NOUN NavigationCanal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ship") Captain-TheWord (and (isa :NOUN ShipCaptain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ship-TheWord (and (isa :NOUN Ship))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP ownerOfProprietaryThing deviceUse) (NP transporter))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "ship-building") Industry-TheWord
 (and (isa :NOUN ShipbuildingIndustry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shipment-TheWord (and (isa :NOUN SendingSomething))
 (frame FN_Sending) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shipment-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance objectSent SendingSomething :NOUN))
 (frame FN_Sent_items)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) objectSent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "shipping") Address-TheWord
 (and (isa :NOUN ShippingAddress)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shipping") Envelope-TheWord
 (and (isa :NOUN ShippingEnvelope)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shipping") Label-TheWord
 (and (isa :NOUN ShippingLabel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shipping-TheWord (and (isa :NOUN Shipping))
 (frame FN_Sending) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ship-repairing") Industry-TheWord
 (and (isa :NOUN ShipRepairingIndustry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shipwreck-TheWord (and (isa :NOUN Shipwreck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shipyard-TheWord (and (isa :NOUN Shipyard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shirt-TheWord (and (isa :NOUN Shirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) (AJP fe_descriptor clothingStyle)
    ((PPFn with) subRegions) (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (AJP fe_descriptor) (Poss wearer))))
 (groupPatterns
  (TheSet ((2 1 0)) ((0 3 2)) ((0 2 0)) ((0 3 1)) ((0 3 0)) ((0 1 0))
   ((0 3 2) (2 1 0)) ((0 3 1) (2 1 0)) ((0 3 0) (2 1 0)) ((2 0 0) (2 1 0))
   ((0 1 0) (2 1 0)) ((0 0 0) (0 3 2)) ((0 1 0) (0 2 0)) ((0 1 0) (0 3 1))
   ((0 1 0) (0 1 1)) ((0 1 0) (0 3 0)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 1 0) (2 1 0)) ((0 1 0) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Shirtwaist-TheWord (and (isa :NOUN Blouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shit-TheWord (and (isa :NOUN Feces))
 (frame FN_Desirability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shitload-TheWord
 (and (isa :NOUN (HighAmountFn Quantity))) (frame FN_Quantified_mass)
 (bindingTemplate (TheList (:GAP (DEN fe_quantity)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shoal-TheWord (and (isa :NOUN Shoal))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_formational_cause) (AJP fe_relative_location)
    ((PPFn along) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "shock") Absorber-TheWord
 (and (isa :NOUN ShockAbsorber)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shock-TheWord (and (isa :NOUN LearningThat))
 (frame FN_Just_found_out)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP objectActedOn (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT (VPto fe_degree) ((PPFn to) objectActedOn)
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn over) (InverseBinaryPredicateFn explaines-Generic))
    (AJP fe_degree temporallyIntersects))
   (:GAP (DNI (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 4 1)) ((3 0 0)) ((0 0 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 4 0)) ((0 0 1) (1 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Shock-TheWord
 (and (isa :NOUN Shock-PhysiologicalCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoe") Box-TheWord (and (isa :NOUN Shoebox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoe") Organizer-TheWord
 (and (isa :NOUN ShoeOrganizer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoe") Polish-TheWord
 (and (isa :NOUN ShoePolish-Paste)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoe") Polish-TheWord
 (and (isa :NOUN ShoePolish-Liquid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoe") Shop-TheWord (and (isa :NOUN ShoeStore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shoe-TheWord (and (isa :NOUN Shoe))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn with) fe_descriptor)
    (AJP fe_descriptor clothingStyle) ((PPingFn for) deviceUse)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 3)) ((0 4 2)) ((0 2 1)) ((0 4 1)) ((0 4 0)) ((0 2 0))
   ((0 4 2) (2 0 0)) ((0 2 1) (2 0 0)) ((0 2 1) (0 4 1)) ((0 2 0) (2 0 0))
   ((0 2 0) (0 4 2)) ((0 2 0) (0 4 1)) ((0 1 0) (0 2 0)) ((0 2 0) (0 2 0))
   ((0 0 0) (0 3 0) (0 4 1)) ((0 2 0) (0 2 0) (0 4 3))
   ((0 2 0) (0 4 0) (0 4 1)) ((0 1 0) (0 2 0) (0 4 1) (0 4 2)))))

(FNNounSemtrans (TheList) Shoelace-TheWord (and (isa :NOUN ShoeLace))
 (frame FN_Clothing_parts)
 (bindingTemplate (TheList (:GAP (DEN parts)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Shoelace-TheWord (and (isa :NOUN ShoeLace))
 (frame FN_Connectors) (bindingTemplate (TheList (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shoot-TheWord (and (isa :NOUN PlantShoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shooter-TheWord (and (isa :NOUN Sniper-Professional))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shooting-TheWord (and (isa :NOUN ShootingSomeone))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers))
   (:OBLIQUE-OBJECT ((PPFn with) instrument-Generic) ((PPFn by) killers)
    ((PPFn near) eventOccursAt) ((PPFn at) eventOccursAt) (AJP eventOutcomes)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects) ((PPFn of) victim)
    (N killers temporallyIntersects victim))
   (:GAP (INI killers victim)) (:GEN (Poss temporallyIntersects) (NP victim))))
 (groupPatterns
  (TheSet ((1 7 0)) ((3 1 0)) ((1 8 2)) ((1 8 0)) ((1 7 0) (3 0 0))
   ((1 4 0) (1 7 0)) ((1 1 0) (1 7 0)) ((0 0 0) (0 0 0)) ((1 0 0) (1 8 1))
   ((1 5 0) (1 5 1) (1 6 0) (1 7 0)) ((1 3 0) (1 5 0) (1 5 1) (1 7 0))
   ((1 1 0) (1 2 0) (1 5 0) (1 5 1) (1 7 0)))))

(FNNounSemtrans (TheList) Shootout-TheWord (and (isa :NOUN ShootingAGun))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_manner) ((PPFn with) fe_side_2)
    ((PPFn at) temporallyIntersects) ((PPFn on) temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 1 0) (1 3 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (1 0 1) (1 2 0)))))

(FNNounSemtrans (TheList) Shop-TheWord (and (isa :NOUN RetailStore))
 (frame FN_Businesses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP fe_product) (N fe_service_provider))
   (:GAP (DEN fe_business))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Shop-TheWord (and (isa :NOUN RetailStoreSpace))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPed fe_descriptor)
    (AJP parts fe_descriptor fe_formational_cause)
    ((PPFn on) fe_relative_location)
    ((PPFn in) eventLocale fe_relative_location) (N locationUse))
   (:GAP (DEN eventLocale) (INI locationUse))
   (:GEN (Poss fe_container_possessor locationUse))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 4 0)) ((0 3 1)) ((0 1 2)) ((0 1 1)) ((2 0 0)) ((0 1 0))
   ((0 1 1) (0 2 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Shoplifter-TheWord (and (isa :NOUN Thief))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:GAP (DEN perpetrator) (INI objectOfPossessionTransfer victim))
   (:NOUN (N perpetrator))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Shoplifting-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP frequencyOfEvent) ((PPFn among) perpetrator)
    ((PPFn in) perpetrator) ((PPFn of) objectOfPossessionTransfer perpetrator)
    ((PPFn from) from-Generic) (N temporallyIntersects))
   (:GAP (INI objectOfPossessionTransfer perpetrator)
    (CNI perpetrator from-Generic))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 4 0)) ((0 3 0) (0 4 0))
   ((0 0 0) (0 1 0) (0 5 0)))))

(FNNounSemtrans (TheList "shopping") Cart-TheWord
 (and (isa :NOUN ShoppingCart)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shopping-TheWord (and (isa :NOUN Shopping))
 (frame FN_Shopping)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_degree) (AJP fe_depictive eventOccursAt)
    ((PPFn in) eventOccursAt) (N objectOfPossessionTransfer purposeOfEvent))
   (:GAP (DEN objectOfPossessionTransfer) (DNI performedBy)
    (INI objectOfPossessionTransfer performedBy))
   (:NOUN (N eventOccursAt))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 3 1)) ((0 2 0)) ((2 0 0)) ((0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Shore-TheWord (and (isa :NOUN Shoreline))
 (frame FN_Relational_natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_landmark_feature))
   (:GAP (DEN fe_focal_feature))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Shorebird-TheWord (and (isa :NOUN ShoreBird))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shoreline-TheWord (and (isa :NOUN Shoreline))
 (frame FN_Relational_natural_features)
 (bindingTemplate
  (TheList (:GAP (DEN fe_focal_feature)) (:GEN (Poss fe_landmark_feature))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "short") Bone-TheWord (and (isa :NOUN ShortBone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "short") Pants-TheWord (and (isa :NOUN ShortPants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "short") Ton-TheWord (and (isa :NOUN ShortTon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shortage-TheWord (and (isa :NOUN Shortage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shortbread-TheWord
 (and (isa :NOUN ShortBread-Generic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shorts-TheWord (and (isa :NOUN ShortPants))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor)
    (N fe_descriptor clothingStyle deviceUse)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 2)) ((0 2 2)) ((0 1 1)) ((0 2 1)) ((0 1 0)) ((0 2 0))
   ((0 1 2) (2 0 1)) ((0 1 1) (2 0 1)) ((0 2 0) (2 0 1)) ((0 1 2) (0 2 0))
   ((0 1 1) (0 2 0)) ((0 2 0) (0 2 1)) ((0 0 0) (0 2 0))
   ((0 2 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Shoshonean-TheWord
 (and (isa :NOUN Shoshonean-Uto-AztecanLanguageFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shot") Glass-TheWord (and (isa :NOUN ShotGlass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shot") Put-TheWord
 (and (isa :NOUN ShotPutSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shot-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shot-TheWord (and (isa :NOUN ShootingAGun))
 (frame FN_Use_firearm)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_iterations) ((PPFn in) eventOccursAt)
    ((PPFn as) temporallyIntersects) ((PPFn at) temporallyIntersects))
   (:GAP (DNI doneBy) (INI doneBy fe_firearm))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Shotgun-TheWord (and (isa :NOUN Shotgun))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoulder") Bag-TheWord (and (isa :NOUN ShoulderBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shoulder") Pad-TheWord
 (and (isa :NOUN ShoulderPad-Protective)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shoulder-TheWord (and (isa :NOUN Shoulder))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBJECT (Poss ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (NP actorPartsInvolved))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Shoulder-TheWord (and (isa :NOUN ShoulderJoint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shout-TheWord (and (isa :NOUN Shouting))
 (frame FN_AudibleSound) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shouting-TheWord (and (isa :NOUN Shouting))
 (frame FN_AudibleSound) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shovel") Board-TheWord (and (isa :NOUN ShovelBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shovel-TheWord (and (isa :NOUN Shovel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Show-TheWord
 (and (isa :NOUN EntertainmentPerformance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Showdown-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_issue fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn over) fe_issue)
    (AJP fe_degree fe_depictive fe_manner) ((PPFn at) eventOccursAt)
    (VPto purposeOfEvent) ((PPFn against) fe_side_2) ((PPFn with) fe_side_2)
    ((PPFn between) fe_sides) (N fe_manner eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (DNI fe_side_1) (INI fe_issue fe_side_1 fe_side_2))
   (:GEN (Poss fe_sides))))
 (groupPatterns
  (TheSet ((1 6 0)) ((0 0 2)) ((1 7 1)) ((3 0 0)) ((1 0 0)) ((1 6 0) (1 8 0))
   ((0 0 1) (1 5 0)) ((1 2 0) (1 6 0)) ((1 2 0) (1 7 2)) ((0 0 2) (1 1 2))
   ((0 0 0) (1 6 0)) ((1 1 0) (1 4 0)) ((0 0 1) (1 3 0) (1 5 0))
   ((0 0 1) (1 5 0) (1 7 0)) ((1 1 1) (1 1 2) (1 5 0)))))

(FNNounSemtrans (TheList "shower" "curtain") Ring-TheWord
 (and (isa :NOUN ShowerCurtainRing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shower") Curtain-TheWord
 (and (isa :NOUN ShowerCurtain)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shower") Head-TheWord (and (isa :NOUN ShowerHead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "shower") Stall-TheWord (and (isa :NOUN ShowerStall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shower-TheWord (and (isa :NOUN ShowerStall))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shower-TheWord (and (isa :NOUN TakingAShower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shower-TheWord (and (isa :NOUN PrecipitationProcess))
 (frame FN_Precipitation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP duration fe_manner) (NP eventOccursAt)
    ((PPFn on) eventOccursAt) ((PPFn of) fe_precipitation)
    ((PPFn by) temporallyIntersects) (N fe_precipitation temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (DEN fe_precipitation)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 1)) ((0 3 0)) ((0 0 1)) ((0 0 0)) ((0 5 0) (0 6 1))
   ((0 4 0) (0 6 0)) ((0 2 0) (0 5 0)) ((0 0 1) (0 4 0)) ((0 0 1) (0 3 0))
   ((0 0 1) (0 5 0)) ((0 0 1) (0 1 0)) ((0 0 1) (0 0 1)))))

(FNNounSemtrans (TheList) Showerhead-TheWord (and (isa :NOUN ShowerHead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shred-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance outputsCreated ShreddingEvent :NOUN))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "shredded") Pork-TheWord
 (and (isa :NOUN ShreddedPork)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shredder-TheWord (and (isa :NOUN Shredder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shrimp-TheWord (and (isa :NOUN Shrimp))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shrimp-TheWord (and (isa :NOUN ShrimpCocktail))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType) (N activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0) (0 0 1)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Shrub-TheWord (and (isa :NOUN Bush))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shrubbery-TheWord (and (isa :NOUN (MobFn Bush)))
 (frame FN_Biological_area)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shuffle-TheWord (and (isa :NOUN LocomotionEvent))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic) (N fe_manner)
    (AJP duration fe_manner) ((PPFn of) performedBy))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 0 0)) ((1 2 1) (1 3 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Shut-Eye-TheWord (and (isa :NOUN Sleeping))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (N duration) (Sfin temporallyIntersects))
   (:GAP (CNI doneBy))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Shutdown-TheWord (and (isa :NOUN EndingASituation))
 (frame FN_Process_stop)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) temporallyIntersects))
   (:GAP (DNI fe_process))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Shutter-TheWord (and (isa :NOUN ShutterForWindow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shuttlecock-TheWord (and (isa :NOUN BadmintonBirdie))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "siamese") Cat-TheWord (and (isa :NOUN SiameseCat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "siberian") Larch-TheWord
 (and (isa :NOUN SiberianLarchTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sibling-TheWord
 (and (isa :NOUN Animal) (relationInstanceExists siblings :NOUN Animal))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sibling-TheWord
 (and (isa :NOUN Animal) (relationExistsInstance siblings Person :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sicilian-TheWord (and (isa :NOUN SicilianPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sickness-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N causes-Underspecified) ((PPFn to) causes-Underspecified)
    ((PPFn in) actorPartsInvolved objectActedOn eventOccursAt)
    (AVP eventOccursAt))
   (:GAP (DNI actorPartsInvolved objectActedOn) (INI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 2)) ((3 0 0)) ((1 2 1)) ((0 0 0)) ((1 0 0)) ((1 2 0))
   ((1 1 0) (3 0 0)) ((1 0 0) (1 2 2)) ((1 2 2) (1 3 0) (3 0 0)))))

(FNNounSemtrans (TheList "side" "by" "side" "refrigerator") Freezer-TheWord
 (and (isa :NOUN Refrigerator-SideBySide)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "side") Effect-TheWord
 (and (isa :NOUN PhysiologicalConditionType)
      (sideEffectTypeOfUsingDrugType :NOUN DrugSubstance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "side") Table-TheWord (and (isa :NOUN SideTable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Side-TheWord (and (isa :NOUN AllyingWithSomething))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (A fe_part_prop (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts fe_part_prop) (INI (InverseBinaryPredicateFn parts))
    (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 2 1)) ((0 0 0) (0 1 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Side-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts))
    (A fe_part_prop (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts fe_part_prop) (INI (InverseBinaryPredicateFn parts))
    (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 2 1)) ((0 0 0) (0 1 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Side-TheWord (and (isa :NOUN AllyingWithSomething))
 (frame FN_Taking_sides)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_side) ((PPFn against) fe_side)
    ((PPFn of) fe_side) ((PPFn during) temporallyIntersects))
   (:GAP (DNI objectActedOn subjectOfMentalSituation fe_issue)
    (DEN subjectOfMentalSituation fe_side))
   (:GEN (Poss fe_side))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((1 1 0)) ((1 3 0) (1 4 0)) ((0 0 0) (3 0 0))
   ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Sidearm-TheWord (and (isa :NOUN Sidearm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Siderosis-TheWord (and (isa :NOUN Siderosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sidestep-TheWord (and (isa :NOUN AvoidingSomething))
 (frame FN_Avoiding) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sidestep-TheWord (and (isa :NOUN AvoidingSomething))
 (frame FN_Dodging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sidestep-TheWord (and (isa :NOUN DodgingSomething))
 (frame FN_Dodging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sidewalk") Bench-TheWord
 (and (isa :NOUN SidewalkBench)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sidewalk-TheWord (and (isa :NOUN Sidewalk))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic fe_frequency_of_use)
    (N mainConstituent) ((PPFn under) fe_relative_location)
    (NP fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn outside) fe_relative_location))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 0 1)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Sidewinder-TheWord
 (and (isa :NOUN Sidewinder-Missile)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Siding-TheWord (and (isa :NOUN SidingForBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Siege-TheWord (and (isa :NOUN IsolatingAnEnemy))
 (frame FN_Besieging)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) temporallyIntersects)
    ((PPFn at) temporallyIntersects) ((PPFn to) victim))
   (:GAP (DNI performedBy victim))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList "sierra") Leonean-TheWord
 (and (isa :NOUN SierraLeonePerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sierra") Leonian-TheWord
 (and (isa :NOUN SierraLeonePerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sigh-TheWord (and (isa :NOUN Sighing))
 (frame FN_Breathing)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT (VPing fe_depictive) (A fe_internal_cause)
    ((PPFn of) doneBy fe_internal_cause)
    (AJP duration fe_internal_cause fe_manner))
   (:GAP (DEN primaryObjectMoving)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0) (1 3 2)) ((1 2 1) (3 0 0))
   ((0 0 0) (1 2 1)) ((0 0 0) (1 3 1)) ((0 0 0) (1 1 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 1) (1 3 2)) ((0 0 0) (1 2 1) (1 3 0))
   ((0 0 0) (1 0 0) (1 3 2)))))

(FNNounSemtrans (TheList "sight") Seer-TheWord (and (isa :NOUN Tourist))
 (frame FN_Touring) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sight-TheWord (and (isa :NOUN Sight-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sight-TheWord
 (and (isa :NOUN Distance-Absolute)
      (lessThanOrEqualTo :NOUN WithinVisibleDistance))
 (frame FN_Range)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_event doneBy))
   (:OBLIQUE-OBJECT (NP distanceTranslated) ((PPFn of) doneBy))
   (:GAP (DEN distanceTranslated) (DNI fe_event doneBy)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 1) (1 0 0)))))

(FNNounSemtrans (TheList) Sight-TheWord (and (isa :NOUN VisualPerception))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy perceivedThings))
   (:OBLIQUE-OBJECT (AVP fe_degree) (AJP fe_descriptor) (unknown fe_descriptor)
    ((PPFn in) fe_ground) ((PPFn of) perceivedThings) (Sfin perceivedThings)
    ((PPingFn of) perceivedThings))
   (:GAP (DEN fe_descriptor) (DNI doneBy perceivedThings) (INI from-Generic))
   (:GEN (Poss doneBy perceivedThings))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 6 0)) ((1 4 0)) ((0 0 1)) ((3 0 0)) ((1 2 0)) ((1 1 0))
   ((1 4 0) (3 0 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 4 0)) ((1 1 0) (1 5 0))
   ((1 1 0) (1 4 0)) ((0 0 1) (1 1 0)) ((1 0 0) (1 1 0))
   ((0 0 1) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Sight-TheWord (and (isa :NOUN Tourism))
 (frame FN_Touring) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sights-TheWord (and (isa :NOUN Tourism))
 (frame FN_Touring)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn visitingSite)))
   (:OBLIQUE-OBJECT (Sfin fe_depictive) (VPbrst fe_depictive)
    ((PPFn of) eventOccursAt) (A eventOccursAt)
    (AJP fe_depictive eventOccursAt) ((PPFn in) fe_depictive eventOccursAt)
    ((PPFn outside) eventOccursAt) ((PPFn on) temporallyIntersects) (N doneBy))
   (:GAP (DEN (InverseBinaryPredicateFn visitingSite)) (DNI doneBy)
    (INI doneBy))
   (:GEN (Poss eventOccursAt))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 5 1)) ((3 0 0)) ((1 6 0)) ((1 3 0)) ((1 0 0)) ((1 4 0))
   ((1 4 1) (1 8 0)) ((1 2 0) (1 4 0)) ((0 0 0) (1 5 0))
   ((0 0 0) (1 4 0) (1 7 0)) ((0 0 0) (1 1 0) (3 0 0))
   ((0 0 0) (1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Sightseeing-TheWord (and (isa :NOUN Sightseeing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sigmoid") Colon-TheWord
 (and (isa :NOUN SigmoidFlexure)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sigmoid") Sinus-TheWord
 (and (isa :NOUN SigmoidSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sigmoidoscope-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sign" "of" "the") Zodiac-TheWord
 (and (isa :NOUN PersonTypeByEuropeanZodiacSign)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sign-TheWord (and (isa :NOUN Indication))
 (frame FN_Sign)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP fe_indicator) (Sfin fe_indicator) (VPing fe_indicator)
    (VPto fe_indicator))
   (:OBJECT ((PPFn of) fe_indicated))
   (:OBLIQUE-OBJECT ((PPFn for) fe_indicated) ((PPFn of) fe_indicated)
    ((PPingFn of) fe_indicated) (Sfin fe_indicated) (Sub fe_indicator)
    (NP fe_indicator) (A fe_reliability) (AJP fe_reliability))
   (:GAP (CNI fe_indicated) (DNI fe_indicated) (DEN fe_indicator))))
 (groupPatterns
  (TheSet ((2 3 0)) ((2 2 0)) ((2 1 0)) ((0 1 0)) ((0 0 0)) ((2 2 0) (2 7 0))
   ((2 1 0) (2 7 0)) ((2 4 0) (2 6 0)) ((0 1 0) (2 2 0)) ((1 0 0) (2 5 0))
   ((0 3 0) (2 1 0)) ((0 2 0) (2 1 0)) ((0 0 0) (2 1 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (2 3 0) (2 7 0)))))

(FNNounSemtrans (TheList) Sign-TheWord (and (isa :NOUN SignTheDisplay))
 (frame FN_Sign)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP fe_indicator) (Sfin fe_indicator) (VPing fe_indicator)
    (VPto fe_indicator))
   (:OBJECT ((PPFn of) fe_indicated))
   (:OBLIQUE-OBJECT ((PPFn for) fe_indicated) ((PPFn of) fe_indicated)
    ((PPingFn of) fe_indicated) (Sfin fe_indicated) (Sub fe_indicator)
    (NP fe_indicator) (A fe_reliability) (AJP fe_reliability))
   (:GAP (CNI fe_indicated) (DNI fe_indicated) (DEN fe_indicator))))
 (groupPatterns
  (TheSet ((2 3 0)) ((2 2 0)) ((2 1 0)) ((0 1 0)) ((0 0 0)) ((2 2 0) (2 7 0))
   ((2 1 0) (2 7 0)) ((2 4 0) (2 6 0)) ((0 1 0) (2 2 0)) ((1 0 0) (2 5 0))
   ((0 3 0) (2 1 0)) ((0 2 0) (2 1 0)) ((0 0 0) (2 1 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (2 3 0) (2 7 0)))))

(FNNounSemtrans (TheList "signal") Processing-TheWord
 (and (isa :NOUN SignalProcessing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Signal-TheWord (and (isa :NOUN Gesture))
 (frame FN_Gesture)
 (bindingTemplate
  (TheList
   (:GAP (INI recipientOfInfo communicatorOfInfo) (DNI infoTransferred))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Signal-TheWord
 (and (isa :NOUN InformationBearingThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Signal-TheWord (and (isa :NOUN Signal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Signatory-TheWord
 (and (isa :NOUN MakingAnAgreement)
      (relationInstanceExists subEvents :NOUN AffixingSignature))
 (frame FN_Sign_agreement)
 (bindingTemplate
  (TheList (:SUBJECT (NP agreeingAgents))
   (:OBLIQUE-OBJECT ((PPFn to) outputsCreated))
   (:GAP (DNI outputsCreated) (DEN agreeingAgents))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Signatory-TheWord (and (isa :NOUN Signature))
 (frame FN_Sign_agreement)
 (bindingTemplate
  (TheList (:SUBJECT (NP agreeingAgents))
   (:OBLIQUE-OBJECT ((PPFn to) outputsCreated))
   (:GAP (DNI outputsCreated) (DEN agreeingAgents))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Signature-TheWord (and (isa :NOUN MakingAnAgreement))
 (frame FN_Sign_agreement)
 (bindingTemplate
  (TheList (:SUBJECT (NP outputsCreated))
   (:OBLIQUE-OBJECT ((PPFn on) outputsCreated)
    ((PPFn of) outputsCreated agreeingAgents))
   (:GAP (DNI agreeingAgents) (DEN outputsCreated))
   (:GEN (Poss agreeingAgents))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0) (1 1 1)) ((1 1 0) (3 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Signature-TheWord (and (isa :NOUN Signature))
 (frame FN_Sign_agreement)
 (bindingTemplate
  (TheList (:SUBJECT (NP outputsCreated))
   (:OBLIQUE-OBJECT ((PPFn on) outputsCreated)
    ((PPFn of) outputsCreated agreeingAgents))
   (:GAP (DNI agreeingAgents) (DEN outputsCreated))
   (:GEN (Poss agreeingAgents))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0) (1 1 1)) ((1 1 0) (3 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Signboard-TheWord (and (isa :NOUN SignTheDisplay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Significance-TheWord
 (and (isa :NOUN Probability-QuantityType)) (frame FN_Probability)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silencer-TheWord
 (and (isa :NOUN Muffler-VehiclePart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silhouette-TheWord (and (isa :NOUN VisualImage))
 (frame FN_Optical_image) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silicon") Dioxide-TheWord
 (and (isa :NOUN SiliconDioxide)) (frame FN_Substance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silicon-TheWord (and (isa :NOUN Silicon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silicone" "breast") Implant-TheWord
 (and (isa :NOUN BreastImplant-Silicone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silicosis-TheWord (and (isa :NOUN Silicosis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silk") Flower-TheWord (and (isa :NOUN SilkFlower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silk-TheWord (and (isa :NOUN SilkCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silks-TheWord
 (and (isa :NOUN Clothing-Generic)
      (relationInstanceExists mainConstituent :NOUN SilkCloth))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "silky") Terrier-TheWord
 (and (isa :NOUN Terrier-Silky)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sill-TheWord (and (isa :NOUN Sill-TerrainFeature))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sill-TheWord (and (isa :NOUN WindowSill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silo-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate (TheList (:GAP (DEN eventLocale) (DNI locationUse))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silo-TheWord (and (isa :NOUN GrainSilo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silurian-TheWord
 (and (isa :NOUN Silurian-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silver") Medal-TheWord
 (and (isa :NOUN SilverMedal-Physical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silver" "oxide") Battery-TheWord
 (and (isa :NOUN SilverOxideBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silver-TheWord (and (isa :NOUN Silver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silverfish-TheWord (and (isa :NOUN Silverfish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silverware") Piece-TheWord
 (and (isa :NOUN SilverwarePiece)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "silverware") Spoon-TheWord
 (and (isa :NOUN Spoon-SilverwarePiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Silverware-TheWord (and (isa :NOUN SilverwarePiece))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "simple" "logic") Cell-TheWord
 (and (isa :NOUN SimpleLogicCell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Simultaneity-TheWord
 (and (isa :NOUN TemporalThing)
      (relationInstanceExists cotemporal :NOUN TemporalThing))
 (frame FN_Simultaneity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sin-TheWord (and (isa :NOUN ImmoralAct))
 (frame FN_Misdeed)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_misdeed))
   (:OBLIQUE-OBJECT ((PPFn against) fe_injured_party) (VPto fe_misdeed)
    (AJP fe_severity) ((PPFn in) fe_severity)
    ((PPFn of) by-Underspecified perpetrator))
   (:GAP (DEN fe_misdeed) (DNI perpetrator) (INI perpetrator)
    (CNI perpetrator))
   (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 4 1)) ((1 4 0)) ((1 1 0) (1 2 0))
   ((1 2 0) (3 0 0)) ((1 2 0) (1 3 0)) ((0 0 0) (1 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Sine-TheWord (and (isa :NOUN SineFn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Singer-TheWord (and (isa :NOUN Singer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "single" "family") Residence-TheWord
 (and (isa :NOUN SingleResidenceUnit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "single" "mode" "fiber" "optic") Cable-TheWord
 (and (isa :NOUN FiberOpticCable-SingleMode)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "single") Quote-TheWord
 (and (isa :NOUN QuotationMark-Single)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "single" "reed" "woodwind") Instrument-TheWord
 (and (isa :NOUN SingleReedWoodwindInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "single" "user") Computer-TheWord
 (and (isa :NOUN SingleUserComputer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Singlet-TheWord (and (isa :NOUN Undershirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sink-TheWord (and (isa :NOUN Sink)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sinkhole-TheWord (and (isa :NOUN Sinkhole))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sinner-TheWord
 (and (isa :NOUN Person)
      (moralCharacter :NOUN (MediumToHighAmountFn Badness-Moral)))
 (frame FN_People_by_morality) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sinus-TheWord (and (isa :NOUN NasalSinus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sip-TheWord
 (and (isa :NOUN LiquidTangibleThing)
      (relationExistsInstance consumedObject DrinkingASip :NOUN))
 (frame FN_Ingestion)
 (bindingTemplate
  (TheList (:SUBJECT (NP bodilyDoer))
   (:OBLIQUE-OBJECT ((PPFn of) consumedObject))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Siphon-TheWord (and (isa :NOUN SiphonTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sir-TheWord (and (isa :NOUN BecomingWidelyKnown))
 (frame FN_Attention_getting)
 (bindingTemplate (TheList (:GAP (DEN fe_address_term))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Siren-TheWord (and (isa :NOUN Siren)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Siren-TheWord (and (isa :NOUN MusicalInstrument))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sisal-TheWord (and (isa :NOUN Sisal-Fiber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sisal-TheWord (and (isa :NOUN SisalPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sister-In-Law-TheWord
 (and (isa :NOUN FemaleHuman)
      (relationInstanceExists sisterInLaw :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego relatives))
   (:OBLIQUE-OBJECT ((PPFn of) fe_ego) ((PPFn to) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((0 0 2)) ((3 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Sister-TheWord
 (and (isa :NOUN FemaleHuman) (relationExistsInstance sisters Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego))
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn of) fe_ego) (NP relatives))
   (:GAP (INI fe_ego) (DEN fe_alter relatives)) (:NOUN (N fe_alter relatives))
   (:GEN (Poss fe_ego)) (:APPOSITIVE (N fe_alter))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 1)) ((4 0 0)) ((1 1 0)) ((0 0 1)) ((0 0 1) (0 0 1))
   ((0 0 0) (4 0 0)) ((0 0 0) (1 1 0)) ((3 0 0) (4 0 0)) ((4 0 0) (5 0 0))
   ((1 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Sister-TheWord
 (and (isa :NOUN Person) (relationExistsInstance sisters Person :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Site-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts) ((PPFn in) fe_container_possessor)
    ((PPFn on) fe_container_possessor) (AJP fe_descriptor)
    ((PPFn of) parts fe_formational_cause))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((0 4 0)) ((0 0 0)) ((0 2 0) (0 3 0))
   ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Site-TheWord
 (and (isa :NOUN EnduringThing-Localized)) (frame FN_Locale_by_event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_defining_event) ((PPFn for) fe_defining_event)
    ((PPFn of) fe_defining_event) (A fe_descriptor) (AJP fe_descriptor)
    ((PPFn in) fe_relative_location))
   (:GAP (DNI fe_defining_event) (INI fe_defining_event) (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((0 3 0)) ((0 0 0) (0 5 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Site-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventLocale))
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    ((PPFn in) fe_relative_location)
    (N fe_container_possessor fe_descriptor fe_relative_location locationUse)
    (AJP fe_descriptor fe_relative_location locationUse)
    (A fe_container_possessor locationUse) (VPto locationUse))
   (:GAP (DEN eventLocale) (INI locationUse) (DNI locationUse))
   (:APPOSITIVE (NP eventLocale))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 3)) ((1 4 1)) ((1 1 0)) ((1 2 2)) ((1 2 1)) ((1 3 0))
   ((0 0 0) (1 5 0)) ((1 1 0) (1 2 3)) ((1 2 2) (1 2 3)) ((1 2 3) (1 3 1))
   ((1 3 0) (1 3 2)) ((1 2 0) (1 2 3)) ((1 2 3) (1 4 0)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Sitting-TheWord (and (isa :NOUN LivingRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "six" "cylinder") Engine-TheWord
 (and (isa :NOUN SixCylinderEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Six-Shooter-TheWord (and (isa :NOUN Revolver))
 (frame FN_Weapon)
 (bindingTemplate (TheList (:GAP (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Size-TheWord (and (isa :NOUN Size))
 (frame FN_Measurable_attributes)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn in) objectActedOn))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Sizzle-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Frying)))
 (frame FN_Sounds)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_manner))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Skate-TheWord (and (isa :NOUN Skate-TheShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skateboard") Deck-TheWord
 (and (isa :NOUN Skateboard-BoardPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skateboard-TheWord (and (isa :NOUN Skateboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skeletal") Muscle-TheWord
 (and (isa :NOUN SkeletalMuscle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skeletal") Muscle-TheWord
 (and (isa :NOUN StriatedMuscle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skeletal") System-TheWord
 (and (isa :NOUN SkeletalSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skeleton-TheWord (and (isa :NOUN SkeletalSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skeptic-TheWord (and (isa :NOUN Confidence))
 (frame FN_Certainty) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skepticism-TheWord (and (isa :NOUN Confidence))
 (frame FN_Certainty) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skerry-TheWord (and (isa :NOUN (SmallFn Island)))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn nameString))
    ((PPFn off) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "ski") Area-TheWord (and (isa :NOUN SkiArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Boot-TheWord (and (isa :NOUN SkiBoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Cap-TheWord (and (isa :NOUN StockingCap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Carrier-TheWord (and (isa :NOUN SkiCarrier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Jump-TheWord (and (isa :NOUN SkiJump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Lift-TheWord (and (isa :NOUN SkiLift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Pole-TheWord (and (isa :NOUN SkiPole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ski-TheWord (and (isa :NOUN Ski-BoardPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ski-TheWord (and (isa :NOUN SnowSki)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ski") Tow-TheWord (and (isa :NOUN SkiLift))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skibob-TheWord (and (isa :NOUN Snowbike))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skid") Mark-TheWord (and (isa :NOUN SkidMark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skidmark-TheWord (and (isa :NOUN SkidMark))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skill-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (N fe_knowledge (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GAP (DNI affectedAgent) (DEN fe_behavior_product hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "skilled") Worker-TheWord
 (and (isa :NOUN SkilledWorker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skillet-TheWord (and (isa :NOUN Skillet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skim") Milk-TheWord (and (isa :NOUN SkimMilk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skin") Cancer-TheWord
 (and (isa :NOUN (CancerFn Skin))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skin") Cell-TheWord
 (and (isa :NOUN (CellTypeOfTissueTypeFn EpidermalTissue))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skin") Disease-TheWord (and (isa :NOUN SkinAilment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skin-TheWord (and (isa :NOUN Skin))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn around) fe_attachment) ((PPFn at) fe_attachment)
    ((PPFn beneath) fe_attachment) ((PPFn between) fe_attachment)
    ((PPFn from) fe_attachment) ((PPFn over) fe_attachment)
    ((PPFn under) fe_attachment) (AJP fe_descriptor) (NP fe_descriptor)
    ((PPFn on) fe_attachment fe_descriptor)
    (N fe_attachment fe_descriptor ownerOfProprietaryThing)
    ((PPFn of) fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing) (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 11 1)) ((3 0 0)) ((1 10 2)) ((1 10 1)) ((1 7 0)) ((1 6 0))
   ((1 9 0)) ((1 11 0)) ((1 4 0)) ((1 2 0)) ((1 0 0)) ((1 3 0))
   ((1 9 1) (3 0 0)) ((1 8 0) (3 0 0)) ((0 0 0) (1 7 0)) ((1 7 0) (1 10 2))
   ((1 10 1) (3 0 0)) ((1 7 0) (3 0 0)) ((1 7 0) (1 8 0)) ((1 7 0) (1 7 0))
   ((1 4 0) (3 0 0)) ((1 3 0) (3 0 0)) ((1 10 0) (3 0 0)) ((1 6 0) (1 7 0))
   ((1 5 0) (1 7 0)) ((1 7 0) (1 9 0)) ((1 7 0) (1 7 0) (3 0 0))
   ((0 0 0) (1 7 0) (1 7 0)) ((1 7 0) (1 10 1) (3 0 0))
   ((1 4 0) (1 7 0) (3 0 0)) ((1 7 0) (1 7 0) (1 11 0))
   ((1 1 0) (1 7 0) (1 7 0)))))

(FNNounSemtrans (TheList) Skin-TheWord (and (isa :NOUN PlantEpidermis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skin-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance surfaceParts PartiallyTangible :NOUN))
 (frame FN_Part_inner_outer) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skin-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance internalParts PartiallyTangible :NOUN))
 (frame FN_Part_inner_outer) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skin") Toner-TheWord
 (and (isa :NOUN SkinTonerProduct)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skinned") Knee-TheWord
 (and (isa :NOUN Abrasion)
      (relationInstanceExists objectFoundInLocation :NOUN Knee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skinny-TheWord (and (isa :NOUN Information-Content))
 (frame FN_Information) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skirmish-TheWord (and (isa :NOUN Fight-Physical))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn around) fe_issue)
    ((PPFn for) fe_issue) ((PPFn of) fe_issue) ((PPFn over) fe_issue)
    ((PPFn at) eventOccursAt)
    (AJP fe_degree fe_manner by-Underspecified eventOccursAt)
    ((PPFn near) eventOccursAt) ((PPFn outside) eventOccursAt)
    ((PPFn with) fe_side_2) ((PPFn between) fe_sides) ((PPFn among) fe_sides)
    ((PPFn on) fe_issue temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn during) temporallyIntersects))
   (:GAP (INI fe_side_1 fe_sides) (DNI fe_sides))))
 (groupPatterns
  (TheSet ((1 10 0)) ((1 6 1)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 8 0) (1 11 0))
   ((0 0 1) (1 13 0)) ((1 6 2) (1 10 0)) ((1 6 2) (1 7 0)) ((1 4 0) (1 9 0))
   ((1 4 0) (1 6 3)) ((1 10 0) (1 13 0) (1 14 0)) ((0 0 1) (1 5 0) (1 13 1))
   ((0 0 0) (1 6 1) (1 9 0)) ((1 6 1) (1 9 0) (1 13 0))
   ((1 0 0) (1 6 0) (1 6 2)) ((0 0 1) (1 5 0) (1 12 0) (1 12 1)))))

(FNNounSemtrans (TheList) Skirt-TheWord (and (isa :NOUN Skirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor)
    ((PPFn with) fe_descriptor subRegions)
    (N fe_descriptor mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor clothingStyle deviceUse wearer)
    ((PPFn of) fe_descriptor wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 1)) ((0 2 3)) ((0 3 2)) ((0 1 1)) ((0 3 1)) ((0 2 1))
   ((0 4 0)) ((0 3 0)) ((0 3 1) (2 0 0)) ((0 3 1) (0 3 1)) ((0 2 1) (2 0 0))
   ((0 2 1) (0 3 1)) ((0 2 0) (2 0 0)) ((0 3 0) (2 0 0)) ((0 1 0) (0 3 1))
   ((0 3 1) (0 4 0)) ((0 0 0) (0 3 1)) ((0 2 2) (0 3 0)) ((0 3 0) (0 3 1))
   ((0 2 1) (0 3 0)) ((0 3 0) (0 3 0)) ((0 2 2) (0 2 3) (0 3 3))
   ((0 3 0) (0 3 1) (0 3 1)) ((0 2 1) (0 3 0) (2 0 0))
   ((0 2 1) (0 3 0) (0 3 1)))))

(FNNounSemtrans (TheList) Skirt-TheWord (and (isa :NOUN Skirt))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Skirt-TheWord (and (isa :NOUN Skirt-GarmentPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skull-TheWord (and (isa :NOUN Skull)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skullcap-TheWord (and (isa :NOUN Cap))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Skullcap-TheWord (and (isa :NOUN Skullcap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skunk-TheWord (and (isa :NOUN Skunk))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sky-TheWord (and (isa :NOUN PieceOfSky))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "skye") Terrier-TheWord (and (isa :NOUN Terrier-Skye))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skyscraper-TheWord (and (isa :NOUN Skyscraper))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_relative_location))
   (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Skyscraper-TheWord (and (isa :NOUN Skyscraper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slacks-TheWord (and (isa :NOUN Slacks))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slammer-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slap-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn HittingAnObject bodyPartsUsed
         OpenHandPosition-FingersTogether))))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) ((PPFn at) fe_ground)
    ((PPFn on) fe_ground) (AJP fe_manner) ((PPFn round) eventOccursAt)
    ((PPFn of) fe_noisy_event emitter objectMoving))
   (:GAP (INI fe_ground))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 5 0)) ((0 3 0)) ((0 5 2)) ((0 4 0) (0 5 0))
   ((0 3 0) (0 5 1)) ((0 0 0) (0 5 2)) ((0 3 0) (0 5 2))
   ((0 2 0) (0 3 0) (0 5 2)) ((0 1 0) (0 3 0) (0 5 2))
   ((0 0 0) (0 3 0) (0 5 2)))))

(FNNounSemtrans (TheList) Slat-TheWord (and (isa :NOUN Slat)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slate-TheWord (and (isa :NOUN Slate))
 (frame FN_Substance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slaughter-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers))
   (:OBLIQUE-OBJECT ((PPFn by) killers by-Underspecified)
    ((PPFn in) eventOccursAt) (N victim) ((PPFn of) victim))
   (:GAP (CNI killers) (INI by-Underspecified) (DNI victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 0 1)) ((1 1 0)) ((1 0 0) (3 0 0))
   ((1 0 0) (1 3 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Slaughterer-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP killers))
   (:OBLIQUE-OBJECT (AJP fe_manner) (Srel fe_manner) ((PPFn on) eventOccursAt)
    ((PPFn of) victim))
   (:GAP (DEN killers))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0) (1 1 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Slav-TheWord (and (isa :NOUN EthnicGroupOfSlavs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slave-TheWord (and (isa :NOUN Slave)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slayer-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance killers KillingByOrganism :NOUN))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (N killers) (NP killers))
   (:OBLIQUE-OBJECT (N victim) (NP victim) ((PPFn of) victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((1 0 0)) ((0 1 0) (1 2 0)) ((0 1 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Slayer-TheWord (and (isa :NOUN Executioner))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (N killers) (NP killers))
   (:OBLIQUE-OBJECT (N victim) (NP victim) ((PPFn of) victim))
   (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((1 0 0)) ((0 1 0) (1 2 0)) ((0 1 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Slaying-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPFn by) killers) (AJP fe_manner) ((PPFn of) victim))
   (:GAP (DNI killers)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 0 0) (1 2 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Sled-TheWord (and (isa :NOUN Sled)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sleep-TheWord (and (isa :NOUN Sleeping))
 (frame FN_Sleep) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sleepiness-TheWord (and (isa :NOUN Sleepy))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBLIQUE-OBJECT (AJP fe_degree))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList "sleeping") Bag-TheWord (and (isa :NOUN SleepingBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sleeping") Pad-TheWord (and (isa :NOUN SleepingPad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sleepover-TheWord
 (and (isa :NOUN Sleepover-SocialGathering)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sleet-TheWord (and (isa :NOUN SleetProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sleet-TheWord (and (isa :NOUN PrecipitationProcess))
 (frame FN_Precipitation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) eventOccursAt)
    (AJP fe_manner fe_quantity temperatureOfObject))
   (:GAP (DEN fe_precipitation))))
 (groupPatterns (TheSet ((0 1 2)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Sleeve-TheWord (and (isa :NOUN SleeveOfGarment))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn outfitParts)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)) (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn outfitParts) fe_descriptor))
   (:GAP (DEN mainConstituent parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 3 0)) ((1 3 0) (3 0 0))
   ((0 0 0) (1 2 0) (1 3 1)))))

(FNNounSemtrans (TheList) Sleigh-TheWord (and (isa :NOUN Sled)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slice-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed) (N stuffUsed)
    ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Slicing-TheWord (and (isa :NOUN SlicingSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "slide") Fastener-TheWord
 (and (isa :NOUN ZipperTheFastener)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "slide" "in") Stove-TheWord
 (and (isa :NOUN CookingRange-SlideIn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "slide") Projector-TheWord
 (and (isa :NOUN SlideProjector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slide-TheWord
 (and (isa :NOUN SlideTheRecreationalDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "slime") Mold-TheWord (and (isa :NOUN SlimeMold))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sling-TheWord (and (isa :NOUN ArmSling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slingshot-TheWord (and (isa :NOUN Slingshot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slip-TheWord (and (isa :NOUN Slip))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0) (2 0 0)) ((0 0 1) (0 1 0))
   ((0 0 1) (0 1 1) (2 0 0)) ((0 0 1) (0 1 0) (2 0 0))
   ((0 0 1) (0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Slipcover-TheWord
 (and (isa :NOUN SlipCoverForFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slipper-TheWord (and (isa :NOUN Slipper))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 0 2)) ((0 1 1)) ((0 0 1)) ((0 0 0))
   ((0 1 2) (2 0 0)) ((0 1 1) (2 0 0)) ((0 0 1) (2 0 0)) ((0 0 1) (0 0 2))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 1 2)) ((0 0 0) (0 0 2)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)) ((0 0 2) (0 0 2) (0 1 1))
   ((0 0 0) (0 1 1) (2 0 0)) ((0 0 0) (0 0 2) (0 1 1))
   ((0 0 0) (0 1 1) (0 1 2) (2 0 0)))))

(FNNounSemtrans (TheList) Slipper-TheWord (and (isa :NOUN Slipper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sliver-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) ((PPFn of) stuffUsed)
    (N fe_piece_prop stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 0 0) (0 1 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Slob-TheWord
 (and (isa :NOUN Person)
      (hasEvaluativeQuantity :NOUN (NoAmountFn LevelOfOrganization)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slog-TheWord (and (isa :NOUN LocomotionEvent))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N distanceTranslated) ((PPFn into) to-Generic)
    ((PPFn to) to-Generic) ((PPFn round) trajectory-Complete)
    ((PPFn up) trajectory-Complete) (NP distanceTranslated trajectory-Complete)
    ((PPFn over) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn from) from-Generic)
    (AJP distanceTranslated fe_manner trajectory-Complete temporallyIntersects)
    (A temporallyIntersects))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 9 2)) ((1 5 0)) ((1 0 0)) ((1 9 0)) ((1 6 0) (1 9 1))
   ((1 5 1) (1 9 1)) ((1 4 0) (1 9 0)) ((1 2 0) (1 9 0))
   ((1 7 0) (1 10 0) (2 0 0)) ((1 2 0) (1 8 0) (1 9 1))
   ((0 0 0) (1 3 0) (1 9 0)) ((1 2 0) (1 8 0) (1 9 0))
   ((1 1 0) (1 9 0) (1 9 3) (2 0 0)))))

(FNNounSemtrans (TheList) Slope-TheWord (and (isa :NOUN Slope-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slot-TheWord (and (isa :NOUN CoinSlot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slough-TheWord (and (isa :NOUN Swamp))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts)
    (NP (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Slovak-TheWord (and (isa :NOUN SlovakLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slovene-TheWord
 (and (isa :NOUN EthnicGroupOfSlovenes)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slow-Cooker-TheWord (and (isa :NOUN SlowCooker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "slr") Camera-TheWord
 (and (isa :NOUN SingleLensReflexCamera)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sludge") Pond-TheWord (and (isa :NOUN SludgePond))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slug-TheWord (and (isa :NOUN Slug)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slumber-TheWord (and (isa :NOUN Sleeping))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn of) doneBy) (AVP temporallyIntersects)
    (N temporallyIntersects))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 0 0)) ((0 0 0)) ((1 2 0) (2 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Slump-TheWord (and (isa :NOUN GainingInWealth))
 (frame FN_Thriving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slump-TheWord (and (isa :NOUN GrowthEvent))
 (frame FN_Thriving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Slurp-TheWord (and (isa :NOUN Ingesting))
 (frame FN_Ingestion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) consumedObject) ((PPFn of) consumedObject)
    (AJP fe_manner))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Smack-TheWord
 (and (isa :NOUN
       (CharacteristicSoundTypeFromActionTypeFn
        (SubcollectionOfWithRelationToTypeFn HittingAnObject bodyPartsUsed
         OpenHandPosition-FingersTogether))))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_ground) (AJP fe_manner)
    ((PPFn of) objectMoving))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList "small" "appliance") Battery-TheWord
 (and (isa :NOUN SmallApplianceBattery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "small") Arm-TheWord (and (isa :NOUN SmallArm-Weapon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "small") Arms-TheWord
 (and (isa :NOUN SmallArm-Weapon)) (frame FN_Weapon)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "small") Intestine-TheWord
 (and (isa :NOUN SmallIntestine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "small") Letter-TheWord
 (and (isa :NOUN LowerCaseLetter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smallpox-TheWord (and (isa :NOUN SmallpoxVirus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "smart") Phone-TheWord (and (isa :NOUN Smartphone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smartphone-TheWord (and (isa :NOUN Smartphone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smattering-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Smell-TheWord (and (isa :NOUN SmellPerception))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy perceivedThings from-Generic))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn like) fe_descriptor)
    ((PPingFn of) perceivedThings) ((PPFn from) from-Generic)
    ((PPFn of) perceivedThings from-Generic))
   (:GAP (CNI doneBy) (INI from-Generic)) (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((1 4 1)) ((0 0 2)) ((0 0 1)) ((3 0 0)) ((1 3 0)) ((1 4 0)) ((1 0 0))
   ((0 0 0) (1 4 0)) ((1 0 0) (3 0 0)) ((0 0 2) (1 0 0)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 2 0)) ((1 0 0) (1 4 0)) ((0 0 1) (1 0 0))
   ((0 0 2) (1 0 0) (1 4 0)) ((0 0 0) (1 0 0) (1 4 0))
   ((0 0 1) (1 0 0) (1 0 0)) ((1 0 0) (1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Smidgen-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece) (DNI stuffUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Smile-TheWord (and (isa :NOUN Smiling))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (NP fe_intended_perceiver))
   (:OBLIQUE-OBJECT (AVP fe_conveyed_emotion) (N fe_conveyed_emotion fe_degree)
    ((PPFn in) fe_intended_perceiver) ((PPFn for) fe_intended_perceiver)
    ((PPFn at) fe_external_cause fe_intended_perceiver fe_internal_cause)
    ((PPingFn of) fe_internal_cause)
    ((PPFn of) fe_conveyed_emotion fe_internal_cause ownerOfProprietaryThing)
    (AJP fe_conveyed_emotion fe_degree fe_internal_cause fe_manner
     ownerOfProprietaryThing)
    ((PPFn from) ownerOfProprietaryThing)
    ((PPFn on) fe_intended_perceiver subRegions))
   (:GAP (DEN fe_expression ownerOfProprietaryThing)
    (CNI ownerOfProprietaryThing) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 9 1)) ((4 0 0)) ((2 6 2)) ((2 8 0)) ((2 7 3)) ((2 6 1)) ((2 3 0))
   ((2 4 0)) ((2 7 1)) ((2 0 0)) ((2 6 0)) ((2 7 0)) ((2 7 2) (2 9 1))
   ((0 0 0) (2 9 1)) ((2 7 3) (2 8 0)) ((2 7 3) (2 7 4)) ((2 7 3) (2 7 3))
   ((0 0 0) (2 5 0)) ((2 6 1) (4 0 0)) ((0 0 0) (2 6 1)) ((0 0 0) (2 3 0))
   ((0 0 0) (2 4 1)) ((0 0 0) (1 0 0)) ((2 4 0) (2 6 1)) ((2 7 1) (2 9 1))
   ((0 0 0) (2 7 1)) ((2 7 1) (2 7 3)) ((2 6 1) (2 7 1)) ((2 1 1) (2 4 0))
   ((0 0 0) (2 6 0)) ((2 7 0) (4 0 0)) ((2 7 0) (2 7 0))
   ((0 0 0) (2 7 3) (2 9 1)) ((0 0 0) (2 7 3) (4 0 0))
   ((0 0 0) (2 7 3) (2 7 3)) ((2 4 2) (2 7 3) (2 7 3))
   ((0 0 0) (2 7 3) (2 9 0)) ((0 0 0) (2 4 1) (2 7 3))
   ((0 0 0) (2 7 1) (2 7 3)) ((2 6 1) (2 7 1) (2 9 1))
   ((0 0 0) (2 2 0) (2 7 0)) ((2 6 2) (2 7 0) (2 7 3))
   ((0 0 0) (1 0 0) (2 6 0)) ((0 0 0) (2 4 1) (2 7 0))
   ((0 0 0) (1 0 0) (2 7 0)) ((0 0 0) (2 1 0) (2 9 0) (4 0 0))
   ((2 4 0) (2 6 1) (2 7 0) (4 0 0)) ((0 0 0) (2 7 0) (2 7 1) (2 9 0) (4 0 0))
   ((0 0 0) (1 0 0) (2 7 0) (2 7 0) (2 7 1)))))

(FNNounSemtrans (TheList) Smirk-TheWord (and (isa :NOUN Smirking))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBJECT (NP fe_intended_perceiver))
   (:OBLIQUE-OBJECT ((PPFn of) fe_conveyed_emotion)
    (AJP fe_conveyed_emotion fe_degree fe_internal_cause fe_manner)
    ((PPFn on) subRegions))
   (:GAP (DEN fe_expression) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((2 2 0)) ((4 0 0)) ((0 0 0)) ((2 1 3)) ((2 0 0)) ((0 0 0) (2 2 0))
   ((2 1 3) (2 2 0)) ((2 1 3) (4 0 0)) ((0 0 0) (2 1 3)) ((0 0 0) (1 0 0))
   ((2 1 0) (2 2 0)) ((0 0 0) (1 0 0) (2 1 3)) ((0 0 0) (2 1 1) (2 2 0))
   ((0 0 0) (2 1 1) (2 1 3)) ((0 0 0) (2 0 0) (2 1 2)))))

(FNNounSemtrans (TheList) Smock-TheWord (and (isa :NOUN Apron))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_descriptor mainConstituent deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss clothingStyle deviceUse wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 1 0)) ((0 0 0)) ((2 0 1) (2 0 2)) ((0 1 2) (2 0 2))
   ((0 1 1) (2 0 2)) ((0 0 0) (2 0 2)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 1))
   ((0 0 0) (0 0 0)) ((0 0 0) (0 0 0) (2 0 2))
   ((0 0 0) (0 0 0) (0 1 2) (2 0 2)) ((0 0 0) (0 0 0) (0 0 0) (2 0 2)))))

(FNNounSemtrans (TheList) Smog-TheWord (and (isa :NOUN Smog)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smoke-Alarm-TheWord (and (isa :NOUN SmokeAlarm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smoke-TheWord (and (isa :NOUN Smoke)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smoker-TheWord
 (and (isa :NOUN (FrequentPerformerFn Smoking))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "smooth") Muscle-TheWord
 (and (isa :NOUN SmoothMuscle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smothering-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Smuggler-TheWord (and (isa :NOUN Smuggler))
 (frame FN_Smuggling)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP objectOfPossessionTransfer)
    (N objectOfPossessionTransfer) ((PPFn of) objectOfPossessionTransfer)
    ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt))
   (:GAP (DEN perpetrator)) (:NOUN (N perpetrator))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Smuggling-TheWord (and (isa :NOUN Smuggling))
 (frame FN_Smuggling)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer perpetrator))
   (:OBJECT (NP objectOfPossessionTransfer))
   (:OBLIQUE-OBJECT (A to-Generic) ((PPFn into) to-Generic)
    ((PPFn to) to-Generic) ((PPFn of) objectOfPossessionTransfer)
    (N objectOfPossessionTransfer) (NP objectOfPossessionTransfer)
    ((PPFn by) by-Underspecified) ((PPingFn by) by-Underspecified)
    ((PPFn through) trajectory-Complete) ((PPFn in) to-Generic eventOccursAt)
    ((PPFn from) from-Generic))
   (:GEN (Poss perpetrator))))
 (groupPatterns
  (TheSet ((2 10 0)) ((3 0 0)) ((2 6 0)) ((2 3 0)) ((2 4 0)) ((0 0 1) (2 9 1))
   ((2 3 0) (2 10 0)) ((0 0 1) (1 0 0)) ((0 0 1) (2 4 0)) ((0 0 0) (2 7 0))
   ((2 2 0) (2 3 0)) ((2 1 0) (2 5 0)) ((2 3 0) (2 9 0)) ((2 0 0) (2 3 0))
   ((0 0 1) (2 4 0) (2 9 1)) ((2 1 0) (2 4 0) (2 10 0))
   ((2 2 0) (2 3 0) (2 6 0) (2 8 0)))))

(FNNounSemtrans (TheList) Snail-TheWord (and (isa :NOUN Snail))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snake-TheWord (and (isa :NOUN Snake))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snake-TheWord (and (isa :NOUN DrainSnake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snap") Fastener-TheWord
 (and (isa :NOUN SnapTheFastener)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snap-TheWord (and (isa :NOUN SnapTheFastener))
 (frame FN_Clothing_parts) (bindingTemplate (TheList (:GAP (DEN parts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snare") Drum-TheWord (and (isa :NOUN SnareDrum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snare-TheWord (and (isa :NOUN TrapDevice))
 (frame FN_Trap) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snarl-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Snarling)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn from) emitter)
    ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns (TheSet ((1 1 1)) ((1 0 0)) ((0 0 0)) ((1 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Snarl-TheWord
 (and (isa :NOUN MakingFacialExpression)) (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn from) emitter)
    ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns (TheSet ((1 1 1)) ((1 0 0)) ((0 0 0)) ((1 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Snatch-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer)
    (N objectOfPossessionTransfer from-Generic)
    ((PPFn from) from-Generic victim))
   (:GAP (INI perpetrator)
    (DNI objectOfPossessionTransfer perpetrator victim))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((0 2 1)) ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Snatcher-TheWord (and (isa :NOUN KidnappingSomeone))
 (frame FN_Kidnapping)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N victim)) (:GAP (DEN perpetrator) (INI victim))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Snatcher-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectOfPossessionTransfer))
   (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Sneaker-TheWord (and (isa :NOUN AthleticShoe))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Sneer-TheWord (and (isa :NOUN Sneering))
 (frame FN_Facial_expression)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) fe_conveyed_emotion)
    (AJP fe_conveyed_emotion fe_degree fe_manner) ((PPFn on) subRegions))
   (:GAP (DEN fe_expression) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((0 0 0)) ((1 1 2)) ((1 1 0)) ((1 1 2) (1 2 0))
   ((1 1 2) (3 0 0)) ((0 0 0) (1 1 2)) ((0 0 0) (1 1 1)) ((1 0 0) (1 1 2))
   ((0 0 0) (1 1 2) (1 2 0)))))

(FNNounSemtrans (TheList) Sneeze-TheWord (and (isa :NOUN Sneezing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sniff-TheWord (and (isa :NOUN Perceiving-Voluntary))
 (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) fe_phenomenon) (NP fe_phenomenon))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Snifter-TheWord (and (isa :NOUN DrinkingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Snigger-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Snickering)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn from) emitter) ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Sniper-TheWord (and (isa :NOUN Sniper-Professional))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sniper-TheWord (and (isa :NOUN Sniper-Professional))
 (frame FN_People_by_military_specialty) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snippet-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Part_piece)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_piece_prop) (N fe_piece_prop)
    ((PPFn of) stuffUsed))
   (:GAP (DEN fe_piece))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Snitch-TheWord (and (isa :NOUN Reporting))
 (frame FN_Reporting)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_informer)) (:GAP (DEN fe_informer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Snood-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList "snooker") Table-TheWord (and (isa :NOUN PoolTable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snooker-TheWord (and (isa :NOUN Snooker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snooze-TheWord (and (isa :NOUN Snoozing))
 (frame FN_Sleep)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBLIQUE-OBJECT (N temporallyIntersects))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0) (2 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Snore-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Snoring)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) (N fe_manner) ((PPFn from) emitter)
    ((PPFn of) emitter) (Sfin emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 4 0)) ((2 0 0)) ((1 3 0)) ((1 2 0)) ((1 0 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (2 0 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Snorkel-TheWord (and (isa :NOUN Snorkel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snort-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Snorting)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_internal_cause fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((0 0 0)) ((1 0 1)) ((1 0 1) (2 0 0))
   ((0 0 0) (1 0 1)) ((1 1 0) (1 2 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Snot-TheWord (and (isa :NOUN Mucus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snout-TheWord (and (isa :NOUN Snout-Animal))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (INI ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "snow") Bank-TheWord (and (isa :NOUN SnowBank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snow") Brush-TheWord (and (isa :NOUN SnowBrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snow-Fall-TheWord (and (isa :NOUN SnowProcess))
 (frame FN_Precipitation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snow") Pea-TheWord
 (and (isa :NOUN SnowPea-Foodstuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snow") Shoe-TheWord (and (isa :NOUN SnowShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snow-TheWord (and (isa :NOUN SnowMob))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snow-TheWord (and (isa :NOUN SnowProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snow-TheWord (and (isa :NOUN SnowProcess))
 (frame FN_Precipitation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snow") Tire-TheWord
 (and (isa :NOUN AutomobileSnowTire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snow") Tire-TheWord (and (isa :NOUN SnowTire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowball-TheWord (and (isa :NOUN Snowball))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowbank-TheWord (and (isa :NOUN SnowBank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowboard-TheWord (and (isa :NOUN Snowboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowfall-TheWord (and (isa :NOUN SnowProcess))
 (frame FN_Precipitation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_manner)) (:GAP (DEN fe_precipitation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Snowflake-TheWord (and (isa :NOUN Snowflake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowman-TheWord (and (isa :NOUN Snowman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowmobile-TheWord (and (isa :NOUN Snowmobile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowstorm-TheWord (and (isa :NOUN SnowstormAsEvent))
 (frame FN_Precipitation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snowstorm-TheWord (and (isa :NOUN SnowstormAsObject))
 (frame FN_Weather)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) (AJP fe_specification)
    ((PPFn of) fe_specification))
   (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Snowsuit-TheWord (and (isa :NOUN Snowsuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snuff-TheWord (and (isa :NOUN SnuffTobacco))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "snuff") Tobacco-TheWord
 (and (isa :NOUN SnuffTobacco)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soap") Dish-TheWord (and (isa :NOUN SoapDish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soap-TheWord (and (isa :NOUN Soap-Personal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sob-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Sobbing)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn of) fe_internal_cause) (AJP fe_manner)
    ((PPFn from) from-Generic emitter) (Sfin emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 3 0)) ((2 0 0)) ((1 2 1)) ((1 1 0)) ((1 0 0)) ((1 1 0) (2 0 0))
   ((1 1 0) (1 2 1)) ((0 0 0) (1 1 0)) ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList "soccer") Ball-TheWord (and (isa :NOUN SoccerBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soccer") Shoe-TheWord (and (isa :NOUN SoccerShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soccer-TheWord (and (isa :NOUN Soccer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Event-TheWord
 (and (isa :NOUN SocialOccurrence)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Gathering-TheWord
 (and (isa :NOUN SocialGathering)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Group-TheWord (and (isa :NOUN SocialGroup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Organization-TheWord
 (and (isa :NOUN FunctionalSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Science-TheWord
 (and (isa :NOUN SocialScienceType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Scientist-TheWord
 (and (isa :NOUN Sociologist)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social" "security") Number-TheWord
 (and (isa :NOUN SocialSecurityNumber)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Station-TheWord
 (and (isa :NOUN PersonTypeBySocialFeature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Social-TheWord (and (isa :NOUN SocialGathering))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP temporallyIntersects) (N host temporallyIntersects))
   (:GAP (DEN fe_social_event)) (:GEN (Poss host))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 1 0)) ((0 1 1) (0 1 1)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "social") Work-TheWord (and (isa :NOUN SocialWork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "social") Worker-TheWord
 (and (isa :NOUN SocialWorker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Socialism-TheWord (and (isa :NOUN Socialism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Socialism-TheWord
 (and (isa :NOUN SocialistEconomicSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "socialist") Party-TheWord
 (and (isa :NOUN SocialistParty)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Socialist-TheWord
 (and (isa :NOUN (BelieverFn Socialism))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Socializing-TheWord (and (isa :NOUN Socializing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Society-TheWord (and (isa :NOUN Society))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sociolinguistics-TheWord
 (and (isa :NOUN Sociolinguistics)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sociology-TheWord (and (isa :NOUN Sociology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sock-TheWord (and (isa :NOUN Sock))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    ((PPFn with) clothingStyle) (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 2 0)) ((0 0 1)) ((0 0 0)) ((0 2 1) (2 0 0))
   ((0 2 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 2 1))
   ((0 0 0) (0 0 2)) ((0 0 0) (0 2 0)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 2 0) (2 0 0)) ((0 0 0) (0 0 0) (2 0 0))
   ((0 0 0) (0 0 0) (0 2 2)) ((0 0 0) (0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList "soda") Can-TheWord (and (isa :NOUN DrinkingCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soda") Can-TheWord (and (isa :NOUN SodaCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soda-TheWord (and (isa :NOUN SoftDrink))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soda") Water-TheWord (and (isa :NOUN SeltzerWater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sodium-TheWord (and (isa :NOUN Sodium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sodium" "vapor") Lamp-TheWord
 (and (isa :NOUN SodiumVaporLamp)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sodomy-TheWord (and (isa :NOUN AnalSex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sofa-TheWord (and (isa :NOUN Sofa-PieceOfFurniture))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sofa-TheWord (and (isa :NOUN Sofa-PieceOfFurniture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soft") Drink-TheWord (and (isa :NOUN SoftDrink))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Softball-TheWord (and (isa :NOUN SoftballBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "software") Developer-TheWord
 (and (isa :NOUN SoftwareEngineer)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Software-TheWord (and (isa :NOUN ComputerProgram-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Software-TheWord (and (isa :NOUN SoftwareObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soil-TheWord (and (isa :NOUN Dirt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soil-TheWord (and (isa :NOUN Soil-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soiree-TheWord (and (isa :NOUN Party-Celebration))
 (frame FN_Social_event)
 (bindingTemplate
  (TheList (:SUBJECT (NP host))
   (:OBLIQUE-OBJECT ((PPFn in) temporallyIntersects) (N temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (DEN fe_social_event)) (:GEN (Poss host))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "solar") Energy-TheWord (and (isa :NOUN SolarEnergy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solar") Power-TheWord (and (isa :NOUN SolarEnergy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solar") Array-TheWord (and (isa :NOUN SolarPanel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solar") Calendar-TheWord
 (and (isa :NOUN SolarCalendar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solar") Panel-TheWord (and (isa :NOUN SolarPanel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solar" "powered") Device-TheWord
 (and (isa :NOUN SolarPoweredDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solar") System-TheWord (and (isa :NOUN SolarSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solarium-TheWord
 (and (isa :NOUN RoomInAConstruction)) (frame FN_Building_subparts)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solder-TheWord (and (isa :NOUN Solder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soldering") Iron-TheWord
 (and (isa :NOUN SolderingIron)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soldier-TheWord (and (isa :NOUN Soldier))
 (frame FN_Member_of_military)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A sovereignAllegianceOfOrg)
    (N sovereignAllegianceOfOrg activeIngredientsOfType))
   (:GAP (DEN fe_person)) (:GEN (Poss sovereignAllegianceOfOrg))))
 (groupPatterns (TheSet ((0 2 1)) ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Soldier-TheWord (and (isa :NOUN Soldier))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sole-TheWord (and (isa :NOUN SoleOfFoot))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_attachment))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sole-TheWord (and (isa :NOUN ShoeSole))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts)) (AJP mainConstituent)
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 1 0)) ((0 3 0)) ((0 1 0) (0 3 1))
   ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Sole-TheWord (and (isa :NOUN ShoeSole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solid") Deodorant-TheWord
 (and (isa :NOUN SolidDeodorant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solid") Figure-TheWord
 (and (isa :NOUN ThreeDimensionalGeometricThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "solid" "tangible") Artifact-TheWord
 (and (isa :NOUN SolidTangibleArtifact)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solid-TheWord (and (isa :NOUN Solid-StateOfMatter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solid-TheWord (and (isa :NOUN SolidTangibleThing))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solid-TheWord (and (isa :NOUN Solid-StateOfMatter))
 (frame FN_Substance_by_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solidification-TheWord
 (and (isa :NOUN StateOfMatterChangeEvent)) (frame FN_Change_of_phase)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solitaire-TheWord (and (isa :NOUN Solitaire-TheGem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solubility-TheWord (and (isa :NOUN Solubility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solute-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance solute Solution :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solution-TheWord (and (isa :NOUN Solution))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solution-TheWord (and (isa :NOUN SolvingAProblem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solvent-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance solvent Solution :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Somali-TheWord (and (isa :NOUN SomaliLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "somalian") Shilling-TheWord
 (and (isa :NOUN Shilling-Somalia)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Somatotropin-TheWord
 (and (isa :NOUN HumanGrowthHormone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sombrero-TheWord (and (isa :NOUN Sombrero))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) ((PPFn with) parts)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 1 0) (0 2 2) (0 2 2)))))

(FNNounSemtrans (TheList) Somebody-TheWord
 (and (isa :NOUN (ArbitraryInstanceFn Person))) (frame FN_People)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Someone-TheWord
 (and (isa :NOUN (ArbitraryInstanceFn Person))) (frame FN_People)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Something-TheWord
 (and (isa :NOUN TemporallyExistingThing)) (frame FN_Pronouns)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Somnolence-TheWord
 (and (isa :NOUN InternalSensoryQuantity)) (frame FN_Biological_urge)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Son-In-Law-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance sonInLaw Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter))
   (:OBLIQUE-OBJECT (NP fe_alter) ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 1 0)) ((0 0 0) (4 0 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (4 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Son-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance sons Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBJECT ((PPFn of) fe_ego))
   (:OBLIQUE-OBJECT ((PPFn of) fe_ego)) (:GAP (DEN fe_alter) (INI fe_ego))
   (:NOUN (N fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((5 0 0)) ((2 0 0)) ((0 0 1)) ((0 0 1) (0 0 1)) ((0 0 0) (1 0 0))
   ((0 0 0) (2 0 0)) ((4 0 0) (5 0 0)) ((0 0 1) (0 0 1) (4 0 0)))))

(FNNounSemtrans (TheList "sonar") Device-TheWord (and (isa :NOUN SONAR-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sonar-TheWord (and (isa :NOUN SONAR-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Song-TheWord (and (isa :NOUN Singing-Human))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Song-TheWord (and (isa :NOUN Song-CW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) authorOfLiteraryWork-CW) (N fe_genre))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Songwriter-TheWord (and (isa :NOUN Songwriter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sonnet-TheWord (and (isa :NOUN PoetrySystem))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn of) authorOfLiteraryWork-CW) ((PPFn to) beneficiary)
    (N startingDate) ((PPFn about) situationTopic) ((PPFn on) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((2 0 0)) ((0 1 0))
   ((0 0 0)))))

(FNNounSemtrans (TheList "sony") Reader-TheWord (and (isa :NOUN SonyReader))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sorceress-TheWord
 (and (isa :NOUN (FemaleFn Magician))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sorcery-TheWord (and (isa :NOUN BlackMagic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sore-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn around) fe_attachment) ((PPFn at) fe_attachment)
    ((PPFn in) fe_attachment) ((PPFn on) fe_attachment)
    ((PPFn with) markCreated) ((PPFn from) causes-Underspecified)
    (AJP fe_descriptor) (N causes-Underspecified fe_descriptor)
    (VPing fe_descriptor)
    ((PPFn of) causes-Underspecified ownerOfProprietaryThing))
   (:GAP (DEN markCreated) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 8 0)) ((1 7 1)) ((1 6 0)) ((1 7 0)) ((1 3 0)) ((1 0 0))
   ((1 6 0) (1 8 0)) ((1 6 0) (1 6 0)) ((1 4 0) (1 8 0)) ((1 7 0) (3 0 0))
   ((0 0 0) (1 7 0)) ((1 3 0) (1 6 0)) ((1 1 0) (1 9 0))
   ((0 0 0) (1 6 0) (1 7 1)) ((0 0 0) (0 0 0) (1 1 0))
   ((0 0 0) (1 3 0) (1 7 1)) ((0 0 0) (1 2 0) (1 6 0))
   ((0 0 0) (1 0 0) (1 6 0)) ((0 0 0) (1 3 0) (1 5 0)))))

(FNNounSemtrans (TheList) Sorghum-TheWord (and (isa :NOUN SorghumPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sort-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) ((PPingFn of) fe_category)
    (AJP fe_category fe_type_property))
   (:GAP (DNI fe_category) (INI fe_category) (DEN fe_subtype))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0)) ((1 2 0)) ((1 0 0) (1 2 1)))))

(FNNounSemtrans (TheList "sorting") Algorithm-TheWord
 (and (isa :NOUN SortingAlgorithm)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soubriquet-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((2 0 0)) ((1 0 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Sough-TheWord (and (isa :NOUN Sound))
 (frame FN_Sounds) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sound") Amplifier-TheWord
 (and (isa :NOUN HearingAid-NonPrescription)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sound") Amplifier-TheWord
 (and (isa :NOUN HearingAid-Prescription)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sound") Clip-TheWord (and (isa :NOUN AudioClip))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sound") Clip-TheWord (and (isa :NOUN Voicemail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sound") Law-TheWord
 (and (isa :NOUN SoundLaw-LawOfNature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sound") Recording-TheWord
 (and (isa :NOUN RecordedSoundProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sound-TheWord
 (and (isa :NOUN MusicalCompositionTypeByGenre)) (frame FN_Artistic_style)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) temporallyIntersects))
   (:GAP (DNI ibtCreator fe_artwork) (DEN fe_form))
   (:GEN (Poss ibtCreator fe_artwork))))
 (groupPatterns (TheSet ((0 1 0)) ((2 0 1)) ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sound-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sound-TheWord (and (isa :NOUN Sound-BodyOfWater))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Sound-TheWord (and (isa :NOUN Hearing))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy from-Generic))
   (:OBLIQUE-OBJECT (N fe_descriptor) ((PPFn like) fe_descriptor)
    ((PPingFn like) fe_descriptor) (QUO fe_descriptor)
    ((PPFn from) perceivedThings from-Generic)
    ((PPFn of) perceivedThings from-Generic) ((PPingFn of) from-Generic)
    (AJP fe_descriptor from-Generic))
   (:GAP (DEN perceivedThings) (CNI doneBy perceivedThings from-Generic)
    (INI from-Generic))
   (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 1)) ((0 0 1)) ((1 5 1)) ((1 5 0)) ((1 4 0)) ((1 6 0))
   ((0 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 7 0))
   ((0 0 1) (1 7 1)) ((0 0 0) (1 6 0)) ((0 0 0) (1 5 1)) ((1 7 0) (3 0 0))
   ((0 0 1) (1 7 0)) ((0 0 0) (1 7 0)) ((1 4 1) (1 5 1) (1 7 0))
   ((0 0 0) (1 5 1) (1 7 0)))))

(FNNounSemtrans (TheList) Sound-TheWord (and (isa :NOUN Sound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (N fe_internal_cause) ((PPFn from) from-Generic)
    (VPing fe_manner fe_noisy_event)
    (AJP fe_degree fe_internal_cause fe_manner fe_noisy_event)
    ((PPFn in) eventOccursAt) ((PPFn of) fe_noisy_event emitter))
   (:NOUN (N emitter)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 1)) ((0 0 0)) ((2 0 0)) ((1 5 0)) ((1 3 3)) ((1 1 0))
   ((1 0 0)) ((1 3 1)) ((1 3 2) (1 4 0)) ((1 2 0) (1 3 1)) ((1 2 1) (1 3 0))
   ((0 0 0) (0 0 0) (1 3 2)))))

(FNNounSemtrans (TheList "sound") Wave-TheWord (and (isa :NOUN Sound))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soup") Spoon-TheWord (and (isa :NOUN SoupSpoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soup") Stock-TheWord (and (isa :NOUN SoupStock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soup-TheWord (and (isa :NOUN Soup)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N parts activeIngredientsOfType))
   (:GAP (DEN objectActedOn)) (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 1 1))
   ((0 0 1) (0 1 1)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Soupspoon-TheWord (and (isa :NOUN SoupSpoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "source" "of") Current-TheWord
 (and (isa :NOUN CurrentSource)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "source" "of") Illumination-TheWord
 (and (isa :NOUN LightingDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Source-TheWord (and (isa :NOUN AttributiveReference))
 (frame FN_Attributed_information)
 (bindingTemplate
  (TheList (:GAP (DNI fe_proposition) (DEN performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Source-TheWord (and (isa :NOUN HeadwaterReservoir))
 (frame FN_Relational_natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Source-TheWord (and (isa :NOUN SomethingExisting))
 (frame FN_Source_of_getting)
 (bindingTemplate
  (TheList (:SUBJECT (NP from-Generic)) (:OBJECT (NP from-Generic))
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn outside) fe_descriptor)
    (AJP fe_descriptor to-Generic) ((PPFn of) doneBy)
    ((PPFn for) to-Generic doneBy) (N fe_descriptor doneBy) (NP doneBy))
   (:GAP (DEN from-Generic) (DNI to-Generic doneBy) (INI to-Generic doneBy))
   (:GEN (Poss to-Generic))))
 (groupPatterns
  (TheSet ((2 6 0)) ((2 5 1)) ((2 2 1)) ((2 5 0)) ((2 0 0)) ((2 2 0))
   ((0 0 0) (2 4 1)) ((2 4 1) (4 0 0)) ((2 5 1) (4 0 0)) ((0 0 0) (2 3 0))
   ((2 2 0) (2 3 0)) ((2 2 0) (2 5 1)) ((2 1 0) (2 5 1)) ((2 2 0) (2 4 1))
   ((0 0 0) (2 4 1) (4 0 0)) ((0 0 0) (2 3 0) (2 4 0))
   ((2 2 0) (2 4 1) (2 5 1)) ((1 0 0) (2 2 0) (2 3 0))
   ((1 0 0) (2 2 0) (2 4 1)) ((0 0 0) (2 2 0) (2 4 1))
   ((0 0 0) (2 2 0) (2 5 1)) ((2 2 0) (2 3 0) (4 0 0))
   ((0 0 0) (2 2 0) (2 3 0)))))

(FNNounSemtrans (TheList) Sousaphone-TheWord (and (isa :NOUN Sousaphone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "south") African-TheWord
 (and (isa :NOUN SouthAfricanPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "south" "american") Country-TheWord
 (and (isa :NOUN SouthAmericanCountry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "south") American-TheWord
 (and (isa :NOUN SouthAmericanCitizenOrSubject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "south" "celestial") Pole-TheWord
 (and (isa :NOUN SouthCelestialPole)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "south") Dravidian-TheWord
 (and (isa :NOUN SouthDravidian-DravidianLanguageFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) South-TheWord (and (isa :NOUN South-Generally))
 (frame FN_Direction)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP distanceTranslated)
    ((PPFn of) fe_independent_variable alongObject))
   (:GAP (DEN trajectory-Complete))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) South-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (2nd parts) (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:NOUN (N (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList "south") Wind-TheWord (and (isa :NOUN SouthWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Southeaster-TheWord (and (isa :NOUN SouthEastWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "southern" "live") Oak-TheWord
 (and (isa :NOUN SouthernLiveOak-Tree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Southwester-TheWord (and (isa :NOUN SouthWestWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sovereign-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (A fe_governed) (AJP fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Sovereign-TheWord
 (and (isa :NOUN Monarch-HeadOfState)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sow-TheWord (and (isa :NOUN (FemaleFn Pig)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soy-TheWord (and (isa :NOUN Soybean-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Soy-TheWord (and (isa :NOUN SoybeanPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soya") Milk-TheWord (and (isa :NOUN SoyMilk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "soybean") Plant-TheWord
 (and (isa :NOUN SoybeanPlant)) (frame FN_Plants) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "space") Agency-TheWord (and (isa :NOUN SpaceAgency))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spaceheater-TheWord (and (isa :NOUN SpaceHeater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spacemission-TheWord (and (isa :NOUN SpaceMission))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spaceprobe-TheWord (and (isa :NOUN SpaceProbe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "space") Probe-TheWord (and (isa :NOUN SpaceProbe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "space") Station-TheWord
 (and (isa :NOUN SpaceStation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Space-TheWord (and (isa :NOUN OuterSpaceRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Space-TheWord (and (isa :NOUN ReservedSpaceRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Space-TheWord (and (isa :NOUN SpatialQuantity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spacecraft-TheWord (and (isa :NOUN Spacecraft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spaceflight-TheWord
 (and (isa :NOUN (TransportViaFn Spacecraft))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spade") Casino-TheWord
 (and (isa :NOUN Casino-TheGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spade-TheWord (and (isa :NOUN Spade-TheSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spaghetti-TheWord (and (isa :NOUN SpaghettiMarinara))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spaghetti-TheWord (and (isa :NOUN SpaghettiNoodle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spam-TheWord (and (isa :NOUN Spam-MeatProduct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spam-TheWord (and (isa :NOUN Spam-UnsolicitedEMail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spandex-TheWord (and (isa :NOUN Spandex-Fiber))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spandex-TheWord (and (isa :NOUN SpandexCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spaniel-TheWord (and (isa :NOUN Spaniel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spanish") Moss-TheWord (and (isa :NOUN SpanishMoss))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spanish-TheWord (and (isa :NOUN SpanishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spank-TheWord (and (isa :NOUN Spanking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spanking-TheWord (and (isa :NOUN Spanking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spar-TheWord (and (isa :NOUN Spar-Pole))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spare") Tire-TheWord (and (isa :NOUN SpareTire))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spark") Plug-TheWord (and (isa :NOUN SparkPlug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spark" "plug") Wire-TheWord
 (and (isa :NOUN SparkPlugWire)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spark-TheWord (and (isa :NOUN Spark)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sparrow-TheWord (and (isa :NOUN Sparrow))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sparta-TheWord (and (isa :NOUN Sparta))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spat-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn over) fe_issue) (AJP fe_issue) ((PPFn about) fe_issue)
    ((PPFn through) fe_issue))
   (:GEN (Poss fe_arguers))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 3 0)) ((2 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0))
   ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Spat-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn over) fe_issue) (AJP fe_issue) ((PPFn about) fe_issue)
    ((PPFn through) fe_issue))
   (:GEN (Poss fe_arguers))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((1 3 0)) ((2 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0))
   ((1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Spatula-TheWord (and (isa :NOUN Spatula))
 (frame FN_Artifact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spatula-TheWord (and (isa :NOUN Spatula))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "speaker") Stand-TheWord
 (and (isa :NOUN SpeakerStand)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speaker-TheWord (and (isa :NOUN AudioSpeaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speaker-TheWord (and (isa :NOUN Lecturer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "speaker") Wire-TheWord (and (isa :NOUN SpeakerWire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spear") Gun-TheWord (and (isa :NOUN SpearGun))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spear-TheWord (and (isa :NOUN Spear))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Specialist-TheWord (and (isa :NOUN Specialist))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_knowledge)) (:GAP (DEN affectedAgent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Species-TheWord (and (isa :NOUN BiologicalSpecies))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Specific-TheWord (and (isa :NOUN Specifics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Specimen-TheWord (and (isa :NOUN Individual))
 (frame FN_Instance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_instance_prop) (N activeIngredientsOfType)
    ((PPFn of) activeIngredientsOfType))
   (:GAP (DEN fe_instance))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Spectacles-TheWord (and (isa :NOUN Eyeglasses))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (N clothingStyle deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 2)) ((0 0 1)) ((0 0 0)) ((0 0 2) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 2)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Spectator-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance spectators Event-Localized :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spectrophotometer-TheWord
 (and (isa :NOUN Spectrophotometer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speculator-TheWord (and (isa :NOUN Investor))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speculum-TheWord (and (isa :NOUN MedicalDevice))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speculum-TheWord (and (isa :NOUN Speculum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "speech") Act-TheWord (and (isa :NOUN SpeechAct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speech-TheWord (and (isa :NOUN Communicating))
 (frame FN_Communication)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) communicatorOfInfo) (AJP meansOfInfoTransfer)
    ((PPFn on) eventOccursAt) (NP situationTopic))
   (:GAP (CNI communicatorOfInfo))))
 (groupPatterns (TheSet ((0 0 0) (0 3 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Speech-TheWord (and (isa :NOUN Doctor-Medical))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speech-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speech-TheWord (and (isa :NOUN Speaking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speech-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    (N beneficiary situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss languageWrittenIn))))
 (groupPatterns (TheSet ((0 1 1) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "speed") Indicator-TheWord
 (and (isa :NOUN Speedometer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speed-TheWord (and (isa :NOUN Amphetamine))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speed-TheWord (and (isa :NOUN Speed))
 (frame FN_Speed_description)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectMoving))
   (:OBLIQUE-OBJECT (AJP fe_degree) (Sub fe_degree) ((PPFn of) objectMoving)
    (N objectMoving))
   (:GAP (DNI fe_attribute objectMoving) (DEN rateOfEvent))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((1 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Speedboat-TheWord (and (isa :NOUN Speedboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speedometer-TheWord (and (isa :NOUN Speedometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spell-TheWord (and (isa :NOUN MagicSpell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spellbook-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList (:GAP (DEN fe_text))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spelling") Bee-TheWord (and (isa :NOUN SpellingBee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spendthrift-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_resource_controller))
   (:OBLIQUE-OBJECT ((PPFn of) fe_resource))
   (:GAP (DEN fe_resource_controller))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Sperm-TheWord (and (isa :NOUN SpermCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sperm") Whale-TheWord (and (isa :NOUN SpermWhale))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spermicide-TheWord (and (isa :NOUN Spermicide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sphenoid") Bone-TheWord (and (isa :NOUN Sphenoid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sphere-TheWord (and (isa :NOUN Sphere))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spheroid-TheWord (and (isa :NOUN SpheroidalSolid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sphygmomanometer-TheWord
 (and (isa :NOUN Sphygmomanometer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spice") Mill-TheWord (and (isa :NOUN SpiceMill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spice") Rack-TheWord (and (isa :NOUN SpiceRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spice-TheWord (and (isa :NOUN Spice)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_descriptor activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType) (NP activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)) ((0 2 0) (0 2 1))
   ((0 1 1) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Spider-TheWord (and (isa :NOUN Spider))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spiderweb-TheWord (and (isa :NOUN Spiderweb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spider") Web-TheWord (and (isa :NOUN SpiderWeb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spinach-TheWord (and (isa :NOUN Spinach-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spinach-TheWord (and (isa :NOUN SpinachPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spinal") Column-TheWord
 (and (isa :NOUN SpinalColumn)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spinal") Cord-TheWord (and (isa :NOUN SpinalCord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spinal") Fluid-TheWord
 (and (isa :NOUN CerebrospinalFluid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spinal") Nerve-TheWord (and (isa :NOUN SpinalNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spine-TheWord (and (isa :NOUN Thorn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spine-TheWord (and (isa :NOUN SpinalColumn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spinney-TheWord
 (and (isa :NOUN (SmallFn WoodedArea))) (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N parts (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Spinster-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1)) (:GAP (DEN fe_partner_1))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "spiral") Galaxy-TheWord
 (and (isa :NOUN SpiralGalaxy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spiral-TheWord (and (isa :NOUN Spiral))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spiral-TheWord (and (isa :NOUN Spiraling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spirit-TheWord (and (isa :NOUN Enthusiasm))
 (frame FN_Gusto) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spiritual") Being-TheWord
 (and (isa :NOUN DivineBeing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spiritual") Leader-TheWord
 (and (isa :NOUN SpiritualLeader)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spittoon-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Splash-TheWord (and (isa :NOUN Pinch))
 (frame FN_Measure_by_action)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))
   (:GAP (DNI objectActedOn) (DEN fe_event))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Splash-TheWord (and (isa :NOUN Splash))
 (frame FN_Measure_by_action)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn))
   (:GAP (DNI objectActedOn) (DEN fe_event))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Spleen-TheWord (and (isa :NOUN Spleen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "splenic") Vein-TheWord (and (isa :NOUN SplenicVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spigot-TheWord (and (isa :NOUN WaterFaucet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Splint-TheWord (and (isa :NOUN Splint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spokesman-TheWord (and (isa :NOUN Spokesman))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spokesman-TheWord (and (isa :NOUN Spokesman))
 (frame FN_Representative)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_representative) (NP fe_representative)
    (N employer fe_represented) ((PPFn for) fe_represented))
   (:APPOSITIVE (NP fe_representative))))
 (groupPatterns (TheSet ((0 1 0) (0 3 0)) ((0 2 1) (1 0 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Spokesperson-TheWord (and (isa :NOUN Spokesman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spokesperson-TheWord (and (isa :NOUN Spokesman))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spokesperson-TheWord (and (isa :NOUN Spokesman))
 (frame FN_Representative) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spokeswoman-TheWord
 (and (isa :NOUN Spokesman) (isa :NOUN Female)) (frame FN_People_by_vocation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spokeswoman-TheWord
 (and (isa :NOUN Spokesman) (isa :NOUN Female)) (frame FN_Representative)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sponge-TheWord
 (and (isa :NOUN Sponge-CleaningImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spontaneous") Abortion-TheWord
 (and (isa :NOUN Miscarriage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spool-TheWord (and (isa :NOUN Spool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spoon-TheWord (and (isa :NOUN MeasuringSpoon))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) ((PPFn into) fe_relative_location)
    (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed owner)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 3 1)) ((0 2 0)) ((2 0 0)) ((0 4 0)) ((0 3 0))
   ((0 0 0)) ((0 4 1) (2 0 0)) ((0 1 0) (2 0 0)) ((0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Spoon-TheWord (and (isa :NOUN Spoon-SilverwarePiece))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spoon-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Spoonful-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Spore-TheWord (and (isa :NOUN Spore-PlantLifeStage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sporran-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "sport" "fishing") Net-TheWord
 (and (isa :NOUN FishingNet-Sport)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sport-TheWord (and (isa :NOUN AthleticActivity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Accessories-TheWord
 (and (isa :NOUN SportsAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Announcer-TheWord
 (and (isa :NOUN Sportscaster)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Car-TheWord (and (isa :NOUN SportsCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Card-TheWord (and (isa :NOUN SportsCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Drink-TheWord (and (isa :NOUN SportsDrink))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Equipment-TheWord
 (and (isa :NOUN SportsEquipment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sports") Stick-TheWord (and (isa :NOUN SportsStick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sporulation-TheWord
 (and (isa :NOUN SporulatingSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spot-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_container_possessor fe_descriptor fe_formational_cause)
    (A fe_formational_cause) (VPed fe_descriptor fe_formational_cause)
    (Srel eventLocale) ((PPFn down) fe_relative_location)
    ((PPFn on) fe_relative_location)
    ((PPFn in) fe_container_possessor fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 7 1)) ((0 4 0)) ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 1 1))
   ((0 0 0)) ((0 7 0)) ((0 0 0) (0 6 0)) ((0 0 0) (0 5 0)) ((0 1 2) (0 7 0))
   ((0 0 0) (0 7 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Spouse-TheWord
 (and (isa :NOUN Person) (relationExistsInstance spouse Person :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spouse-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT (AJP fe_partner_2) ((PPFn of) fe_partner_2))
   (:GAP (DNI fe_partner_2) (INI fe_partner_2) (DEN fe_partner_1 fe_partners))
   (:GEN (Poss fe_partner_2))))
 (groupPatterns (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Spout-TheWord (and (isa :NOUN Spout)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spray") Paint-TheWord (and (isa :NOUN SprayPaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spray-TheWord (and (isa :NOUN SpraySubstance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sprayer-TheWord (and (isa :NOUN SprayingDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spread-TheWord
 (and (isa :NOUN SpreadingSomethingOverAWideExpanseOfSpace)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spreadsheet-TheWord
 (and (isa :NOUN SpreadsheetProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spring") Chicken-TheWord (and (isa :NOUN YoungHuman))
 (frame FN_People_by_age) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spring") Flower-TheWord
 (and (isa :NOUN SpringFlowerArrangement)) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spring" "loaded" "window") Shade-TheWord
 (and (isa :NOUN SpringLoadedWindowShade)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spring-TheWord (and (isa :NOUN CalendarSpring))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spring-TheWord (and (isa :NOUN Spring-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spring-TheWord (and (isa :NOUN Spring-WaterSource))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_relative_location)
    (N parts (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn up) fe_relative_location)
    (AJP parts fe_formational_cause fe_relative_location
     activeIngredientsOfType)
    (A activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 3 3)) ((0 4 0)) ((0 1 2)) ((0 3 2)) ((0 1 1)) ((0 1 0)) ((0 3 0))
   ((0 2 0) (0 3 3)) ((0 3 1) (0 3 3)) ((0 0 0) (0 3 1)))))

(FNNounSemtrans (TheList) Spring-TheWord
 (and (isa :NOUN HumanTypeByLifeStageType)) (frame FN_People_by_age)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spring-TheWord (and (isa :NOUN SpringSeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sprinkler") System-TheWord
 (and (isa :NOUN SprinklerSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sprinkler-TheWord (and (isa :NOUN Sprinkler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sprint-TheWord (and (isa :NOUN Sprinting))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic) ((PPFn for) to-Generic)
    ((PPFn along) trajectory-Complete) ((PPFn round) trajectory-Complete)
    ((PPFn up) to-Generic trajectory-Complete) ((PPFn from) from-Generic)
    (AJP distanceTranslated fe_manner trajectory-Complete rateOfEvent))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 3 0)) ((1 6 0)) ((1 6 3) (3 0 0)) ((1 5 0) (1 6 2))
   ((1 5 0) (1 6 1)) ((0 0 0) (1 1 0)) ((1 4 0) (1 6 1))
   ((1 0 0) (1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Sprinter-TheWord (and (isa :NOUN Sprinter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spruce-TheWord (and (isa :NOUN SpruceTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spruce") Tree-TheWord (and (isa :NOUN SpruceTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "spy") Satellite-TheWord
 (and (isa :NOUN SpySatellite)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Spy-TheWord (and (isa :NOUN Spy))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) comesFrom-Generic))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Squab-TheWord (and (isa :NOUN (JuvenileFn Pigeon)))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squabble-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn as) fe_issue) ((PPFn by) fe_issue)
    ((PPFn over) fe_issue) (AJP fe_issue fe_manner) ((PPFn in) eventOccursAt)
    ((PPFn at) eventOccursAt) (N eventOccursAt) ((PPFn with) fe_side_2)
    ((PPFn between) fe_sides) ((PPFn of) fe_sides))
   (:GAP (INI fe_sides)) (:GEN (Poss fe_sides))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 8 0)) ((1 2 0)) ((0 0 0) (1 7 0)) ((1 6 0) (1 8 0))
   ((1 3 1) (1 9 0)) ((1 3 1) (1 8 0)) ((1 2 0) (1 8 0)) ((0 0 1) (1 1 0))
   ((1 2 0) (1 3 1)) ((0 0 1) (1 3 0) (1 4 0))
   ((1 0 0) (1 3 1) (1 5 0) (3 0 0)))))

(FNNounSemtrans (TheList) Squabble-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "squad") Car-TheWord (and (isa :NOUN PoliceCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squad-TheWord (and (isa :NOUN Squad-MilitaryEchelon))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "square") Foot-TheWord (and (isa :NOUN SquareFoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "square") Inch-TheWord (and (isa :NOUN SquareInch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "square") Meter-TheWord (and (isa :NOUN SquareMeter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "square") Mile-TheWord (and (isa :NOUN SquareMile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Square-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor fe_relative_location) ((PPFn of) fe_relative_location))
   (:GAP (DEN eventLocale) (INI locationUse))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Square-TheWord (and (isa :NOUN Square))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed) (N fe_shape_prop stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 3 1)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "square") Yard-TheWord (and (isa :NOUN SquareYard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squash-TheWord
 (and (isa :NOUN (FruitFn SquashPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squash-TheWord (and (isa :NOUN Squash-TheGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squash-TheWord (and (isa :NOUN SquashPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squatter-TheWord (and (isa :NOUN ResidingSomewhere))
 (frame FN_Residence)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) residesInDwelling))
   (:GAP (DEN residents-Role))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Squawk-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn of) fe_internal_cause) (AJP fe_manner)
    (N fe_manner))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0) (2 0 0)) ((0 0 0) (1 1 0)) ((1 1 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 1 0)) ((1 1 0) (1 2 0) (2 0 0))
   ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Squeak-TheWord (and (isa :NOUN MakingAnOralSound))
 (frame FN_Vocalizations)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPingFn in) from-Generic) (AJP fe_manner)
    ((PPFn like) fe_manner) (N emitter) ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 4 1)) ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 4 0))
   ((0 0 0) (1 2 0)) ((1 1 0) (2 0 0)) ((1 1 0) (1 4 1)) ((0 0 0) (1 1 0))
   ((1 1 0) (1 3 0)) ((0 0 0) (1 1 0) (1 1 0)) ((0 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Squeal-TheWord (and (isa :NOUN Reporting))
 (frame FN_Reporting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squeal-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_internal_cause fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_internal_cause emitter objectMoving))
   (:GAP (DNI fe_ground)) (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((0 0 0)) ((1 0 1)) ((1 2 0)) ((1 2 2))
   ((1 0 1) (1 2 1)) ((0 0 0) (1 0 1)) ((1 0 1) (1 0 1)) ((1 2 0) (3 0 0))
   ((1 1 0) (1 2 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((1 0 1) (1 0 1) (3 0 0)))))

(FNNounSemtrans (TheList "squeeze") Tube-TheWord (and (isa :NOUN SqueezeTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squid-TheWord (and (isa :NOUN Squid))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squirrel-TheWord (and (isa :NOUN Squirrel))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "squirt") Gun-TheWord (and (isa :NOUN WaterPistol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Squirt-Gun-TheWord (and (isa :NOUN WaterPistol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sri" "lanka") Rupee-TheWord
 (and (isa :NOUN Rupee-SriLanka)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sri") Lankan-TheWord
 (and (isa :NOUN SriLankanPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stab-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stability-TheWord (and (isa :NOUN Stability))
 (frame FN_Precariousness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stable-TheWord (and (isa :NOUN Stable-Structure))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Stack-TheWord (and (isa :NOUN Stack)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stadium-TheWord (and (isa :NOUN Stadium))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Staff-TheWord (and (isa :NOUN Staff))
 (frame FN_Employing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) employer) ((PPFn of) employer)
    ((PPFn from) employer) (A fe_field) ((PPFn at) employer eventOccursAt)
    ((PPFn in) employer eventOccursAt job)
    (N fe_descriptor employer job fe_task) (VPing employeeStatus job fe_task)
    (AJP employeeStatus fe_descriptor fe_task) (VPto fe_task))
   (:GAP (INI employer) (DNI employer fe_field) (2nd job) (DEN employees job))
   (:NOUN (N employees fe_field)) (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((0 9 0)) ((0 7 2)) ((0 3 0)) ((0 2 0)) ((0 4 0)) ((0 6 2)) ((2 0 0))
   ((3 0 0)) ((2 0 1)) ((0 1 0)) ((0 6 1)) ((0 6 0)) ((0 8 1)) ((0 7 0))
   ((0 5 1) (0 7 1)) ((0 9 0) (3 0 0)) ((0 8 2) (3 0 0)) ((0 1 0) (0 7 2))
   ((0 4 0) (0 7 2)) ((0 5 0) (0 6 1)) ((0 6 3) (3 0 0)) ((0 6 1) (2 0 0))
   ((0 5 2) (0 8 1)) ((0 1 0) (0 6 0)) ((0 1 0) (0 8 1)) ((0 4 1) (0 8 0))
   ((0 0 0) (0 6 2) (0 8 0) (0 8 1)))))

(FNNounSemtrans (TheList) Staff-TheWord (and (isa :NOUN WalkingCane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stag-TheWord (and (isa :NOUN (MaleFn Deer)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stage") Actor-TheWord (and (isa :NOUN ActorInPlays))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stage-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stage-TheWord (and (isa :NOUN StageForPerformances))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stain") Remover-TheWord
 (and (isa :NOUN StainRemoverForLaundry)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stain-TheWord (and (isa :NOUN WoodStain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stain-TheWord
 (and (isa :NOUN VisualMark) (isa :NOUN Mistake)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stained" "glass") Window-TheWord
 (and (isa :NOUN StainedGlassWindow)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stainless") Steel-TheWord
 (and (isa :NOUN StainlessSteel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Staircase-TheWord (and (isa :NOUN Stairway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stairs-TheWord (and (isa :NOUN Stairway))
 (frame FN_Connecting_architecture)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) from-Generic)) (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Stairway-TheWord (and (isa :NOUN Stairway))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stairwell-TheWord (and (isa :NOUN Stairwell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stalemate-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT (N fe_issue) ((PPFn on) fe_issue) ((PPFn over) fe_issue)
    (AJP fe_manner by-Underspecified) (NP eventOccursAt)
    ((PPFn with) fe_side_2) ((PPFn between) fe_sides) ((PPFn among) fe_sides)
    ((PPFn of) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (INI fe_issue fe_sides))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 7 0)) ((1 4 0)) ((1 2 0)) ((1 6 0) (1 9 0))
   ((1 3 1) (1 8 0)) ((1 3 0) (1 6 0)) ((1 1 0) (1 6 0))
   ((0 0 0) (1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Stalk-TheWord (and (isa :NOUN Stem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stallion-TheWord (and (isa :NOUN Horse-Stallion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stamen-TheWord (and (isa :NOUN Stamen))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stamina-TheWord (and (isa :NOUN PhysicalEndurance))
 (frame FN_Dynamism)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_exerter))
   (:OBLIQUE-OBJECT (AVP fe_degree) (A fe_degree fe_descriptor fe_domain)
    ((PPFn of) fe_exerter) ((PPFn in) situationConstituents eventOccursAt))
   (:GAP (DEN fe_descriptor) (DNI fe_exerter)) (:GEN (Poss fe_exerter))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 2)) ((1 3 0)) ((0 0 0) (1 1 2))
   ((0 0 0) (1 1 1)) ((0 0 0) (1 1 0)) ((1 3 0) (3 0 0))
   ((1 1 2) (1 1 2) (3 0 0)) ((0 0 0) (1 1 0) (1 3 1))
   ((0 0 0) (1 0 0) (1 1 0) (1 3 1)))))

(FNNounSemtrans (TheList "stamp") Collecting-TheWord
 (and (isa :NOUN Collecting-Hobby) (objectTypesCollected :NOUN PostageStamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stamp-TheWord (and (isa :NOUN PostageStamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stance-TheWord (and (isa :NOUN AnimalTypeByPosture))
 (frame FN_Posture) (bindingTemplate (TheList (:SUBJECT (NP doneBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Stand-TheWord (and (isa :NOUN Commitment))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "standard") Atmosphere-TheWord
 (and (isa :NOUN Atmosphere-UnitOfPressure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "standard" "deck" "of") Card-TheWord
 (and (isa :NOUN StandardDeckOfCards)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "standard") Die-TheWord (and (isa :NOUN Die-Standard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Standard-TheWord (and (isa :NOUN Specification))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "standard") Transmission-TheWord
 (and (isa :NOUN ManualTransmission)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Standoff-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP duration fe_manner) ((PPFn with) fe_side_2)
    ((PPFn between) fe_sides))
   (:GEN (Poss fe_side_1))))
 (groupPatterns (TheSet ((0 0 1) (0 2 0)) ((0 0 0) (0 1 0) (1 0 0)))))

(FNNounSemtrans (TheList) Stapes-TheWord (and (isa :NOUN Stapes))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Staphylococcus-TheWord
 (and (isa :NOUN Staphylococcus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "staph") Infection-TheWord
 (and (isa :NOUN Staphylococcus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "staple") Remover-TheWord
 (and (isa :NOUN StapleRemover)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Staple-TheWord (and (isa :NOUN Staple))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt)
    (N mainConstituent) (A activeIngredientsOfType)
    (AJP activeIngredientsOfType))
   (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stapler-TheWord (and (isa :NOUN Stapler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Star-TheWord (and (isa :NOUN Star)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Star-TheWord (and (isa :NOUN Star-PlaneFigure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Star-TheWord
 (and (isa :NOUN Actor)
      (relationExistsInstance castMembers (PerformingFn DramaticPerformance)
       :NOUN))
 (frame FN_Performers_and_roles)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (INI spectators genericPathway-Partial fe_performance performedBy)
    (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Starboard-TheWord (and (isa :NOUN RightSide))
 (frame FN_Non-gradable_proximity)
 (bindingTemplate
  (TheList (:SUBJECT (NP focalSubject))
   (:OBLIQUE-OBJECT (AVP fe_accessibility) ((PPFn of) fe_ground)
    (AJP fe_ground))
   (:NOUN (Sfin focalSubject))))
 (groupPatterns
  (TheSet ((1 2 0) (2 0 0)) ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Starch-TheWord (and (isa :NOUN Starch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stare-TheWord (and (isa :NOUN Staring))
 (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_phenomenon))
   (:OBJECT (NP fe_phenomenon))
   (:OBLIQUE-OBJECT ((PPFn in) fe_direction) ((PPFn into) fe_direction)
    (AJP fe_manner) (AVP fe_manner) (Sfin fe_manner) ((PPFn from) performedBy)
    ((PPFn of) performedBy) ((PPingFn from) performedBy)
    ((PPFn on) fe_phenomenon) ((PPFn at) fe_phenomenon))
   (:GEN (Poss performedBy fe_phenomenon))))
 (groupPatterns
  (TheSet ((2 5 0)) ((2 8 0) (3 0 0)) ((0 0 1) (2 7 0)) ((0 0 1) (2 6 0))
   ((0 0 0) (2 9 0)) ((2 2 0) (2 5 0)) ((0 0 0) (2 1 0))
   ((0 0 0) (2 4 0) (2 9 0)) ((0 0 0) (2 3 0) (2 9 0))
   ((0 0 1) (2 2 0) (2 6 0)) ((2 2 0) (2 5 0) (3 0 1))
   ((0 0 1) (2 2 0) (2 5 0)) ((0 0 0) (2 2 0) (2 8 0))
   ((0 0 0) (1 0 0) (2 2 0)) ((0 0 0) (2 2 0) (2 2 0))
   ((0 0 0) (2 0 0) (2 2 0)) ((0 0 0) (2 2 0) (2 2 0) (2 8 0)))))

(FNNounSemtrans (TheList) Start-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyContains TemporalThing :NOUN))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) occursDuring)) (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Starter-TheWord (and (isa :NOUN EngineStarter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Starvation-TheWord (and (isa :NOUN Starvation))
 (frame FN_Death)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn explains-Generic))
    ((PPFn in) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn with) (InverseBinaryPredicateFn explains-Generic)) (NP fe_manner)
    ((PPFn to) affectedAgent) ((PPFn on) affectedAgent) (AJP affectedAgent)
    ((PPFn for) affectedAgent) ((PPFn of) affectedAgent))
   (:GAP (DEN (InverseBinaryPredicateFn explains-Generic)) (DNI affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 6 0)) ((1 4 0)) ((0 0 0)) ((1 0 0))
   ((1 3 0) (3 0 0)) ((1 2 0) (1 6 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 5 0)))))

(FNNounSemtrans (TheList) Stash-TheWord (and (isa :NOUN StorageOfSomething))
 (frame FN_Cache)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) resourceAllocated))
   (:GAP (DEN fe_cache))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "state") Capital-TheWord
 (and (isa :NOUN StateCapital)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "state") Line-TheWord (and (isa :NOUN StateLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "state" "of") Matter-TheWord
 (and (isa :NOUN HomogeneousStructure) (isa :NOUN MatterTypeByPhysicalState))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) State-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor) ((PPFn for) fe_governed)
    ((PPFn of) leadersOfMovement) ((PPFn with) leadersOfMovement)
    (AJP activeIngredientsOfType))
   (:GAP (DNI processTypeForAccomplishmentType fe_governed) (INI fe_governed)
    (DEN leadersOfMovement))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 1 0) (0 4 0)) ((0 3 0) (0 4 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) State-TheWord (and (isa :NOUN State-Geopolitical))
 (frame FN_Political_locales) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) State-TheWord (and (isa :NOUN Configuration))
 (frame FN_State_of_entity)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn in) hasState) ((PPFn of) objectActedOn hasState)
    (AJP objectActedOn fe_evaluation hasState))
   (:GAP (DNI objectActedOn) (DEN hasState)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 2)) ((3 0 0)) ((1 1 0)) ((0 0 0) (1 1 1)) ((1 0 0) (1 2 0))
   ((1 2 1) (3 0 0)) ((1 1 0) (1 2 1)) ((1 1 1) (1 2 1)))))

(FNNounSemtrans (TheList) State-TheWord
 (and (isa :NOUN HomogeneousStructure) (isa :NOUN MatterTypeByPhysicalState))
 (frame FN_Thermodynamic_phase) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Statement-TheWord
 (and (isa :NOUN FinancialStatement)) (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial) (Sfin infoTransferred)
    (VPing infoTransferred) (QUO infoTransferred) (VPbrst infoTransferred)
    ((PPFn at) eventOccursAt) ((PPFn by) performedBy) (N performedBy)
    (AJP fe_manner performedBy) ((PPFn from) performedBy)
    ((PPFn of) infoTransferred performedBy)
    ((PPFn during) temporallyIntersects)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn concerning) situationTopic)
    (NP infoTransferred temporallyIntersects situationTopic)
    ((PPFn as) situationTopic) ((PPFn on) infoTransferred situationTopic)
    ((PPFn regarding) situationTopic))
   (:GAP (DEN infoTransferred) (CNI performedBy)
    (INI infoTransferred situationTopic)
    (DNI infoTransferred performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 17 0)) ((1 16 1)) ((1 15 0)) ((1 12 1)) ((1 14 2)) ((1 10 1))
   ((1 9 0)) ((1 3 0)) ((0 0 0)) ((3 0 0)) ((1 6 0)) ((1 7 0)) ((1 1 0))
   ((1 16 0)) ((1 10 0)) ((1 14 0)) ((1 0 0)) ((0 0 0) (1 12 1))
   ((0 0 0) (1 14 2)) ((1 8 1) (1 13 0)) ((0 0 0) (3 0 0)) ((1 4 0) (1 14 1))
   ((1 7 0) (1 12 1)) ((0 0 0) (1 11 0)) ((0 0 0) (1 1 0)) ((1 6 0) (1 12 0))
   ((1 1 0) (1 6 0) (1 8 0)) ((0 0 0) (1 2 0) (1 5 0) (1 8 0)))))

(FNNounSemtrans (TheList) Statement-TheWord
 (and (isa :NOUN BankAccountStatement)) (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial) (Sfin infoTransferred)
    (VPing infoTransferred) (QUO infoTransferred) (VPbrst infoTransferred)
    ((PPFn at) eventOccursAt) ((PPFn by) performedBy) (N performedBy)
    (AJP fe_manner performedBy) ((PPFn from) performedBy)
    ((PPFn of) infoTransferred performedBy)
    ((PPFn during) temporallyIntersects)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn concerning) situationTopic)
    (NP infoTransferred temporallyIntersects situationTopic)
    ((PPFn as) situationTopic) ((PPFn on) infoTransferred situationTopic)
    ((PPFn regarding) situationTopic))
   (:GAP (DEN infoTransferred) (CNI performedBy)
    (INI infoTransferred situationTopic)
    (DNI infoTransferred performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 17 0)) ((1 16 1)) ((1 15 0)) ((1 12 1)) ((1 14 2)) ((1 10 1))
   ((1 9 0)) ((1 3 0)) ((0 0 0)) ((3 0 0)) ((1 6 0)) ((1 7 0)) ((1 1 0))
   ((1 16 0)) ((1 10 0)) ((1 14 0)) ((1 0 0)) ((0 0 0) (1 12 1))
   ((0 0 0) (1 14 2)) ((1 8 1) (1 13 0)) ((0 0 0) (3 0 0)) ((1 4 0) (1 14 1))
   ((1 7 0) (1 12 1)) ((0 0 0) (1 11 0)) ((0 0 0) (1 1 0)) ((1 6 0) (1 12 0))
   ((1 1 0) (1 6 0) (1 8 0)) ((0 0 0) (1 2 0) (1 5 0) (1 8 0)))))

(FNNounSemtrans (TheList) Statement-TheWord (and (isa :NOUN Statement))
 (frame FN_Statement)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn in) genericPathway-Partial) (Sfin infoTransferred)
    (VPing infoTransferred) (QUO infoTransferred) (VPbrst infoTransferred)
    ((PPFn at) eventOccursAt) ((PPFn by) performedBy) (N performedBy)
    (AJP fe_manner performedBy) ((PPFn from) performedBy)
    ((PPFn of) infoTransferred performedBy)
    ((PPFn during) temporallyIntersects)
    ((PPFn about) infoTransferred situationTopic)
    ((PPFn concerning) situationTopic)
    (NP infoTransferred temporallyIntersects situationTopic)
    ((PPFn as) situationTopic) ((PPFn on) infoTransferred situationTopic)
    ((PPFn regarding) situationTopic))
   (:GAP (DEN infoTransferred) (CNI performedBy)
    (INI infoTransferred situationTopic)
    (DNI infoTransferred performedBy situationTopic))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 17 0)) ((1 16 1)) ((1 15 0)) ((1 12 1)) ((1 14 2)) ((1 10 1))
   ((1 9 0)) ((1 3 0)) ((0 0 0)) ((3 0 0)) ((1 6 0)) ((1 7 0)) ((1 1 0))
   ((1 16 0)) ((1 10 0)) ((1 14 0)) ((1 0 0)) ((0 0 0) (1 12 1))
   ((0 0 0) (1 14 2)) ((1 8 1) (1 13 0)) ((0 0 0) (3 0 0)) ((1 4 0) (1 14 1))
   ((1 7 0) (1 12 1)) ((0 0 0) (1 11 0)) ((0 0 0) (1 1 0)) ((1 6 0) (1 12 0))
   ((1 1 0) (1 6 0) (1 8 0)) ((0 0 0) (1 2 0) (1 5 0) (1 8 0)))))

(FNNounSemtrans (TheList "states") General-TheWord
 (and (isa :NOUN LegislativeOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Statesman-TheWord (and (isa :NOUN Statesman))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Station-TheWord (and (isa :NOUN Post-Location))
 (frame FN_Assigned_location) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stationary" "stereo") System-TheWord
 (and (isa :NOUN StationaryStereoSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stationary") Tool-TheWord
 (and (isa :NOUN StationaryTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stationery") Product-TheWord
 (and (isa :NOUN StationeryProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stator-TheWord
 (and (isa :NOUN Electromagnet) (isa :NOUN StationaryObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Statue-TheWord (and (isa :NOUN Statue))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) mainConstituent) ((PPFn of) fe_represented)
    (N mainConstituent (InverseBinaryPredicateFn nameString) fe_represented)
    (AJP fe_descriptor mainConstituent activeIngredientsOfType))
   (:GAP (DEN productsCreated))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 2)) ((0 2 1)) ((0 2 2) (0 3 1)) ((0 0 0) (0 3 0))
   ((0 1 0) (0 3 0) (0 3 2)) ((0 1 0) (0 2 0) (0 3 0) (0 3 0)))))

(FNNounSemtrans (TheList) Statuette-TheWord (and (isa :NOUN (SmallFn Statue)))
 (frame FN_Physical_artworks) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stature-TheWord (and (isa :NOUN LevelOfRenown))
 (frame FN_Fame)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn)) (:OBLIQUE-OBJECT (AJP fe_degree))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Status-TheWord
 (and (isa :NOUN PersonTypeBySocialFeature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Statute-TheWord (and (isa :NOUN Law)) (frame FN_Law)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "statutory") Rape-TheWord (and (isa :NOUN Rape))
 (frame FN_Offenses) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stay-TheWord (and (isa :NOUN Stay-BoatPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stay-TheWord (and (isa :NOUN VisitingLocation))
 (frame FN_Temporary_stay)
 (bindingTemplate
  (TheList (:SUBJECT (NP guestInHosting host))
   (:OBLIQUE-OBJECT (NP duration) ((PPFn during) duration)
    ((PPFn from) duration) ((PPFn of) duration)
    ((PPFn with) fe_descriptor host) (N duration objectFoundInLocation)
    ((PPFn at) objectFoundInLocation)
    (AVP frequencyOfEvent objectFoundInLocation)
    ((PPFn aboard) objectFoundInLocation) ((PPFn on) objectFoundInLocation)
    ((PPFn for) duration purposeOfEvent) (Sub temporallyIntersects)
    ((PPFn in) objectFoundInLocation temporallyIntersects)
    (AJP fe_descriptor duration temporallyIntersects))
   (:GAP (INC duration) (2nd host)
    (INI duration guestInHosting host objectFoundInLocation)
    (DNI duration guestInHosting objectFoundInLocation))
   (:GEN (Poss duration guestInHosting))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 1)) ((1 12 0)) ((1 13 1)) ((1 12 1) (3 0 1))
   ((1 0 0) (1 10 1)) ((3 0 0) (3 0 1)) ((0 0 0) (1 3 0)) ((1 10 0) (1 12 0))
   ((1 0 0) (1 6 0)) ((1 9 0) (3 0 1)) ((1 6 0) (3 0 1)) ((1 8 0) (3 0 1))
   ((1 7 1) (3 0 1)) ((1 12 0) (3 0 1)) ((1 13 1) (3 0 1)) ((0 0 0) (1 13 1))
   ((1 5 1) (1 13 1)) ((1 6 0) (3 0 0)) ((1 13 0) (3 0 1)) ((0 0 1) (1 13 0))
   ((1 12 0) (1 13 2) (3 0 1)) ((1 12 0) (3 0 0) (3 0 1))
   ((1 1 0) (1 12 0) (3 0 1)) ((1 0 0) (1 12 0) (3 0 1))
   ((0 0 0) (1 12 0) (1 13 1)) ((0 0 0) (1 6 0) (1 13 1))
   ((1 4 1) (1 11 0) (3 0 1)) ((1 4 1) (1 13 1) (3 0 1))
   ((0 0 0) (1 4 1) (1 13 1)) ((0 0 0) (1 7 0) (1 13 1))
   ((0 0 0) (1 4 0) (1 13 1)) ((1 5 0) (1 13 0) (3 0 1))
   ((0 0 0) (1 0 0) (1 4 1) (1 12 0)) ((0 0 0) (1 4 1) (1 12 0) (1 13 1)))))

(FNNounSemtrans (TheList "steak") Knife-TheWord (and (isa :NOUN SteakKnife))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steak-TheWord (and (isa :NOUN Steak-Beef-MeatCut))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stealer-TheWord (and (isa :NOUN Thief))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectOfPossessionTransfer))
   (:GAP (DEN perpetrator))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Stealing-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer) ((PPFn by) by-Underspecified)
    ((PPingFn by) by-Underspecified))
   (:GAP (DNI perpetrator) (INI objectOfPossessionTransfer perpetrator victim))
   (:GEN (Poss perpetrator))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0)) ((0 3 0)) ((0 2 0)))))

(FNNounSemtrans (TheList "steam") Cleaner-TheWord
 (and (isa :NOUN SteamCleaner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steam") Ejector-TheWord
 (and (isa :NOUN SteamEjector-LaboratoryEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steam") Engine-TheWord (and (isa :NOUN SteamEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steam-TheWord (and (isa :NOUN (GaseousFn Water)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steaming-TheWord (and (isa :NOUN SteamingFood))
 (frame FN_Apply_heat) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steamroller-TheWord (and (isa :NOUN RoadRoller))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steel") Industry-TheWord
 (and (isa :NOUN SteelIndustry)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steel-TheWord (and (isa :NOUN Steel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steeple-TheWord (and (isa :NOUN Steeple))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steeplechase-TheWord
 (and (isa :NOUN Steeplechase-3000Meter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Steer-TheWord (and (isa :NOUN Bull-Cattle))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steering") Mechanism-TheWord
 (and (isa :NOUN AutomobileSteeringSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steering") Post-TheWord
 (and (isa :NOUN SteeringPost)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steering") System-TheWord
 (and (isa :NOUN AutomobileSteeringSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steering" "wheel") Immobilizer-TheWord
 (and (isa :NOUN SteeringWheelImmobilizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steering") Wheel-TheWord
 (and (isa :NOUN SteeringWheel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stegosaur-TheWord (and (isa :NOUN Stegosaurus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stegosaurus-TheWord (and (isa :NOUN Stegosaurus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stein-TheWord (and (isa :NOUN DrinkingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (N mainConstituent)
    (AJP mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 2 0) (0 2 1)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Stem-TheWord (and (isa :NOUN Stem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stemware-TheWord (and (isa :NOUN Stemware))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stench-TheWord (and (isa :NOUN FoulOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_perceptual_source)
    ((PPFn inside) fe_perceptual_source) ((PPFn of) fe_perceptual_source)
    ((PPingFn of) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stench-TheWord (and (isa :NOUN NauseatingOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_perceptual_source)
    ((PPFn inside) fe_perceptual_source) ((PPFn of) fe_perceptual_source)
    ((PPingFn of) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stench-TheWord (and (isa :NOUN StrongOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_perceptual_source)
    ((PPFn inside) fe_perceptual_source) ((PPFn of) fe_perceptual_source)
    ((PPingFn of) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stencil-TheWord
 (and (isa :NOUN Stencil-TheImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stenosis-TheWord (and (isa :NOUN Stenosis-Condition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "step") Ladder-TheWord (and (isa :NOUN StepLadder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Step-TheWord (and (isa :NOUN StepOfStairs))
 (frame FN_Connecting_architecture)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Step-TheWord (and (isa :NOUN PurposefulAction))
 (frame FN_Intentionally_act)
 (bindingTemplate
  (TheList (:SUBJECT (VPing fe_act) (NP fe_act performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) fe_act) ((PPFn in) fe_act purposeOfEvent)
    (VPto fe_act purposeOfEvent) ((PPingFn in) purposeOfEvent)
    ((PPFn toward) fe_act purposeOfEvent)
    (AJP fe_manner fe_particular_iteration temporallyIntersects))
   (:GAP (DEN fe_act) (CNI performedBy) (INI purposeOfEvent)
    (DNI fe_act performedBy purposeOfEvent))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 5 2)) ((1 1 1)) ((0 1 0)) ((0 1 1)) ((1 2 0)) ((1 1 0))
   ((0 1 1) (1 0 0)) ((0 1 1) (1 1 0)) ((0 1 1) (1 2 1)) ((1 4 0) (1 5 1))
   ((0 1 1) (1 2 0)) ((0 0 0) (1 4 1) (1 5 1)) ((0 1 1) (1 1 1) (1 5 0))
   ((0 1 0) (1 3 0) (1 5 1) (3 0 0)))))

(FNNounSemtrans (TheList) Step-TheWord (and (isa :NOUN TakingAStep))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn about) situationLocation)
    ((PPFn in) situationLocation) ((PPFn round) situationLocation)
    ((PPFn of) fe_depictive) (N distanceTranslated) ((PPFn toward) to-Generic)
    ((PPFn into) to-Generic) ((PPFn to) to-Generic) ((PPFn towards) to-Generic)
    (AJP distanceTranslated fe_manner) (AVP fe_direction to-Generic fe_manner)
    ((PPFn along) trajectory-Complete) ((PPFn across) trajectory-Complete)
    ((PPFn alongside) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn past) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) to-Generic from-Generic) ((PPFn off) from-Generic)
    ((PPFn after) temporallyIntersects) (Sub temporallyIntersects))
   (:GAP (DNI performedBy) (CNI performedBy)
    (INI trajectory-Complete performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 18 0)) ((1 17 1)) ((0 0 0)) ((1 14 0)) ((1 15 0)) ((1 9 1))
   ((1 7 0)) ((1 6 0)) ((1 12 0)) ((1 3 0)) ((1 2 0)) ((1 0 0))
   ((0 0 0) (1 17 1)) ((1 11 0) (3 0 0)) ((0 0 0) (1 12 0)) ((1 7 0) (1 17 1))
   ((0 0 0) (1 8 0)) ((0 0 0) (1 5 0)) ((1 7 0) (3 0 0)) ((0 0 0) (1 7 0))
   ((0 0 0) (1 6 0)) ((0 0 0) (1 10 1)) ((1 8 0) (1 14 0)) ((1 6 0) (1 9 1))
   ((1 4 0) (1 17 1)) ((1 4 0) (1 12 0)) ((1 9 0) (1 12 0)) ((1 10 0) (1 17 1))
   ((0 0 0) (1 10 0)) ((1 10 0) (1 17 0)) ((1 14 0) (1 16 0) (3 0 0))
   ((0 0 0) (1 9 1) (1 12 0)) ((0 0 0) (1 6 0) (3 0 0))
   ((0 0 0) (1 4 0) (1 17 1)) ((0 0 0) (1 4 0) (1 13 0))
   ((0 0 0) (1 4 0) (1 12 0)) ((1 4 0) (1 9 1) (1 12 0))
   ((0 0 0) (1 4 0) (1 5 0)) ((1 1 0) (1 11 0) (3 0 0))
   ((0 0 0) (1 4 0) (1 9 1) (1 12 0))
   ((0 0 0) (1 4 0) (1 10 2) (1 12 0) (1 19 0) (1 20 0)))))

(FNNounSemtrans (TheList) Stepbrother-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance stepbrother Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT (NP fe_alter))
   (:GAP (DEN fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Stepdaughter-TheWord
 (and (isa :NOUN FemaleHuman)
      (relationInstanceExists stepdaughters :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter)) (:GEN (Poss fe_ego))
   (:APPOSITIVE (NP fe_alter))))
 (groupPatterns
  (TheSet ((4 0 0)) ((0 0 1)) ((0 0 0) (4 0 0)) ((0 0 0) (1 0 0))
   ((4 0 0) (5 0 0)) ((3 0 0) (4 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Stepfather-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance stepfather Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter)) (:NOUN (N fe_alter)) (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Stepmother-TheWord
 (and (isa :NOUN FemaleHuman) (relationInstanceExists stepmother :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego) (INI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns
  (TheSet ((4 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (4 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Steppe-TheWord (and (isa :NOUN Steppe))
 (frame FN_Natural_features) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Photolithography-TheWord
 (and (isa :NOUN Stepper-Photolithography)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stepsister-TheWord
 (and (isa :NOUN FemaleHuman) (relationInstanceExists stepsister :NOUN Person))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((2 0 0)) ((1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Stepson-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance stepsons Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_alter fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:GEN (Poss fe_ego))
   (:APPOSITIVE (NP fe_alter))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList "stereo") Cable-TheWord (and (isa :NOUN PhonoCable))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stereo") Component-TheWord
 (and (isa :NOUN AudioEquipment)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stereo") Speaker-TheWord
 (and (isa :NOUN StereoSpeaker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stereo") System-TheWord
 (and (isa :NOUN StereoSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stereo-TheWord (and (isa :NOUN StereoSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sterling-TheWord (and (isa :NOUN Currency))
 (frame FN_Money) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sternocleidomastoid-TheWord
 (and (isa :NOUN SternoCleidoMastoid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sternum-TheWord (and (isa :NOUN Sternum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "steroid") Hormone-TheWord (and (isa :NOUN Steroid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stethoscope-TheWord (and (isa :NOUN Stethoscope))
 (frame FN_Medical_instruments) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stethoscope-TheWord (and (isa :NOUN Stethoscope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stew-TheWord (and (isa :NOUN Stew-Foodstuff))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_descriptor)
    ((PPFn with) fe_descriptor) (N activeIngredientsOfType)
    (A fe_descriptor activeIngredientsOfType) (NP activeIngredientsOfType)
    (Poss fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 5 0)) ((0 3 0)) ((0 4 1)) ((0 6 0)) ((0 4 0))
   ((0 2 0) (0 3 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 4 1))
   ((0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList) Steward-TheWord (and (isa :NOUN FlightAttendant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stewing-TheWord (and (isa :NOUN BoilingFood))
 (frame FN_Apply_heat) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stick") Dispenser-TheWord
 (and (isa :NOUN StickDispenser)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stick-TheWord
 (and (isa :NOUN (DeadPhysicalRemainsFn TreeBranch))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stick-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed) (N stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Stick-Up-TheWord (and (isa :NOUN RobbingAnAgent))
 (frame FN_Robbery)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator)) (:OBLIQUE-OBJECT ((PPFn on) victim))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Sticker-TheWord (and (isa :NOUN Sticker-Adhesive))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stigma-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stigma-TheWord (and (isa :NOUN Reputation))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_reason))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation)
    ((PPFn about) objectOfEvaluation) ((PPFn against) objectOfEvaluation)
    ((PPFn for) objectOfEvaluation) ((PPFn on) objectOfEvaluation)
    ((PPFn of) objectOfEvaluation fe_reason)
    (Sfin objectOfEvaluation fe_reason) ((PPingFn of) fe_reason)
    ((PPingFn to) fe_reason))
   (:GEN (Poss objectOfEvaluation))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 8 0)) ((1 7 0)) ((1 5 1)) ((0 0 0)) ((1 6 0)) ((2 0 0))
   ((1 4 0)) ((1 5 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((1 0 0) (1 6 1)) ((1 0 0) (1 5 1)) ((1 0 0) (1 6 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Stigma-TheWord (and (isa :NOUN Stigma-PlantPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stiletto-TheWord (and (isa :NOUN HighHeelShoe))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 1 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList) Stiletto-TheWord (and (isa :NOUN Switchblade))
 (frame FN_Weapon) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "still") Film-TheWord
 (and (isa :NOUN StillCamera-Film)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "still") Camera-TheWord (and (isa :NOUN StillCamera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Still-TheWord (and (isa :NOUN Distiller-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stilt-TheWord (and (isa :NOUN Stilt-Shaft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stilton-TheWord (and (isa :NOUN Stilton-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stimulant-TheWord (and (isa :NOUN Stimulant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stinger-TheWord (and (isa :NOUN Stinger))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stingray-TheWord (and (isa :NOUN StingRay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stink-TheWord (and (isa :NOUN IrritatingOdor))
 (frame FN_Chemical-sense_description)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_perceptual_source)
    ((PPFn of) fe_perceptual_source))
   (:GEN (Poss fe_perceptual_source))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stink-TheWord (and (isa :NOUN FoulOdor))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP perceivedThings from-Generic))
   (:OBLIQUE-OBJECT ((PPFn of) perceivedThings) ((PPFn from) from-Generic))
   (:GEN (Poss perceivedThings))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 1)) ((2 0 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stink-TheWord (and (isa :NOUN StrongOdor))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP perceivedThings from-Generic))
   (:OBLIQUE-OBJECT ((PPFn of) perceivedThings) ((PPFn from) from-Generic))
   (:GEN (Poss perceivedThings))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 1)) ((2 0 0)) ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Stint-TheWord (and (isa :NOUN TemporaryJobPosition))
 (frame FN_Being_employed)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP employeeStatus duration) ((PPFn from) duration)
    ((PPFn during) duration) ((PPFn with) employer) ((PPFn as) job) (NP job)
    (A job) ((PPFn at) employer employer job) ((PPFn on) employer job)
    ((PPFn of) fe_task) ((PPingFn of) fe_task)
    ((PPFn in) employer fe_field employer temporallyIntersects)
    (N duration fe_task activeIngredientsOfType))
   (:GEN (Poss employees))))
 (groupPatterns
  (TheSet ((0 8 1)) ((0 4 0)) ((0 8 0)) ((0 11 0)) ((0 3 0)) ((0 7 0))
   ((1 0 0)) ((0 12 0)) ((0 11 0) (0 12 1)) ((0 4 0) (0 11 0))
   ((0 7 0) (0 12 1)) ((0 4 0) (0 7 0)) ((0 7 0) (0 11 0)) ((0 9 0) (1 0 0))
   ((0 12 1) (1 0 0)) ((0 4 0) (1 0 0)) ((0 3 0) (1 0 0)) ((0 7 0) (1 0 0))
   ((0 12 0) (0 12 2)) ((0 10 0) (0 12 0)) ((0 9 0) (0 12 0))
   ((0 12 0) (0 12 1)) ((0 7 2) (0 12 0)) ((0 4 0) (0 12 0)) ((0 6 0) (0 12 0))
   ((0 0 1) (0 11 0)) ((0 0 1) (0 11 1)) ((0 3 0) (0 12 0)) ((0 7 0) (0 12 0))
   ((0 0 1) (0 3 0)) ((0 4 0) (0 11 0) (1 0 0)) ((0 4 0) (1 0 0) (1 0 0))
   ((0 3 0) (0 11 3) (0 12 0)) ((0 5 0) (0 7 0) (0 12 0))
   ((0 2 0) (0 4 0) (1 0 0)) ((0 4 0) (0 12 0) (1 0 0))
   ((0 1 0) (0 11 1) (0 12 0)) ((0 0 0) (0 9 0) (1 0 0))
   ((0 3 0) (0 4 0) (0 11 3) (0 12 0)))))

(FNNounSemtrans (TheList) Stipulation-TheWord
 (and (isa :NOUN AgreementLineItem)) (frame FN_Terms_of_agreement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stipulation-TheWord
 (and (isa :NOUN Obligation)
      (relationExistsInstance obligationsCreated Agreement :NOUN))
 (frame FN_Terms_of_agreement) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stirrup-TheWord (and (isa :NOUN Stirrup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stirrup") Bone-TheWord (and (isa :NOUN Stapes))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stock") Car-TheWord (and (isa :NOUN StockCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stock") Exchange-TheWord
 (and (isa :NOUN StockExchangePhysicalQuarters)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stock") Option-TheWord (and (isa :NOUN StockOption))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stock-TheWord (and (isa :NOUN Stock))
 (frame FN_Capital_stock) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stock-TheWord (and (isa :NOUN Stock-GunPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stock-TheWord (and (isa :NOUN StorageOfSomething))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stock-TheWord (and (isa :NOUN Store-Generic))
 (frame FN_Store)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) resourceAvailable)
    (N resourceAvailable))
   (:GAP (DNI ownerOfProprietaryThing) (DEN resourceAvailable fe_supply))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 2 0)) ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Stockade-TheWord (and (isa :NOUN Prison))
 (frame FN_Prison)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (N directingAgent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Stockbroker-TheWord (and (isa :NOUN Stockbroker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stockholder-TheWord (and (isa :NOUN Stockholder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stocking-TheWord (and (isa :NOUN NylonStocking))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle)
    (N mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 1)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Stockpile-TheWord (and (isa :NOUN Stockpile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stockpile-TheWord (and (isa :NOUN Stockpile))
 (frame FN_Store)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) (VPed fe_descriptor)
    (VPing fe_descriptor) (A ownerOfProprietaryThing) (N resourceAvailable)
    ((PPFn of) resourceAvailable) ((PPingFn of) resourceAvailable)
    (NP resourceAvailable))
   (:GAP (DEN fe_supply)
    (DNI ownerOfProprietaryThing resourceAvailable deviceUse) (INI deviceUse))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 7 0)) ((1 4 0)) ((3 0 0)) ((1 5 0) (3 0 0))
   ((1 4 0) (3 0 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 5 0)) ((1 0 0) (1 4 0))
   ((1 2 0) (1 5 0) (3 0 0)) ((1 1 0) (1 3 0) (1 5 0)))))

(FNNounSemtrans (TheList) Stockpot-TheWord (and (isa :NOUN Stockpot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stole-TheWord (and (isa :NOUN Stole-ItemOfClothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Stoma-TheWord (and (isa :NOUN Stomate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stomate-TheWord (and (isa :NOUN Stomate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stomach-TheWord (and (isa :NOUN Stomach))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stomachache-TheWord (and (isa :NOUN Stomachache))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stone") Wall-TheWord (and (isa :NOUN StoneFence))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stoneworking") Tool-TheWord
 (and (isa :NOUN StoneworkingTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stool-TheWord
 (and (isa :NOUN Stool-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stool-TheWord (and (isa :NOUN Feces)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stoop-TheWord (and (isa :NOUN DoorStep))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stop") Light-TheWord (and (isa :NOUN TrafficLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stoplight-TheWord (and (isa :NOUN TrafficLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stopping-TheWord
 (and (isa :NOUN PreventingFromHappening)) (frame FN_Preventing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "storage") Organizer-TheWord
 (and (isa :NOUN StorageOrganizer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "storage") Roll-TheWord
 (and (isa :NOUN StorageRollCore)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Storage-TheWord (and (isa :NOUN StoringSomething))
 (frame FN_Storing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP objectRetained) (N objectRetained))
   (:GAP (INI doneBy objectRetained)) (:GEN (Poss objectRetained))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "store") Manager-TheWord
 (and (isa :NOUN Manager)
      (relationInstanceExists affiliatedWith :NOUN RetailStore))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Store-TheWord (and (isa :NOUN RetailStore))
 (frame FN_Businesses) (bindingTemplate (TheList (:GAP (DEN fe_business))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Store-TheWord
 (and (isa :NOUN StorageOfSomethingForFutureUse)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Store-TheWord (and (isa :NOUN Store-Generic))
 (frame FN_Store) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Storehouse-TheWord (and (isa :NOUN StorageConstruct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Storeroom-TheWord (and (isa :NOUN StorageRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stork-TheWord (and (isa :NOUN Stork)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Storm-TheWord (and (isa :NOUN StormAsObject))
 (frame FN_Weather)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A eventOccursAt) (AVP eventOccursAt)
    ((PPFn at) eventOccursAt) (AJP fe_specification temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects)
    (N eventOccursAt fe_specification temporallyIntersects))
   (:GAP (2nd fe_specification)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 4 1)) ((0 7 2)) ((0 7 1)) ((0 3 0)) ((0 0 0))
   ((0 6 0)) ((0 2 0)) ((0 1 0)) ((0 3 0) (0 6 1)) ((0 3 0) (0 5 0))
   ((0 3 0) (0 4 1)) ((0 3 0) (0 7 1)) ((0 3 0) (0 4 0)) ((0 7 0) (0 7 1))
   ((0 3 0) (0 4 1) (0 7 1)) ((0 3 0) (0 3 1) (0 7 1))
   ((0 3 0) (0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Storm-TheWord (and (isa :NOUN StormAsEvent))
 (frame FN_Weather)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A eventOccursAt) (AVP eventOccursAt)
    ((PPFn at) eventOccursAt) (AJP fe_specification temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn of) temporallyIntersects)
    ((PPFn on) eventOccursAt temporallyIntersects)
    (N eventOccursAt fe_specification temporallyIntersects))
   (:GAP (2nd fe_specification)) (:GEN (Poss temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 4 1)) ((0 7 2)) ((0 7 1)) ((0 3 0)) ((0 0 0))
   ((0 6 0)) ((0 2 0)) ((0 1 0)) ((0 3 0) (0 6 1)) ((0 3 0) (0 5 0))
   ((0 3 0) (0 4 1)) ((0 3 0) (0 7 1)) ((0 3 0) (0 4 0)) ((0 7 0) (0 7 1))
   ((0 3 0) (0 4 1) (0 7 1)) ((0 3 0) (0 3 1) (0 7 1))
   ((0 3 0) (0 4 0) (2 0 0)))))

(FNNounSemtrans (TheList) Story-TheWord (and (isa :NOUN Story)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stove-TheWord (and (isa :NOUN StoveTop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stove") Top-TheWord (and (isa :NOUN StoveTop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Straddle-TheWord
 (and (isa :NOUN StraddlingSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "straight") Line-TheWord
 (and (isa :NOUN Line-Straight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "straight") Poker-TheWord
 (and (isa :NOUN StraightPoker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "straight") Sinus-TheWord
 (and (isa :NOUN StraightSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strain-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category))
   (:OBLIQUE-OBJECT (NP fe_category) ((PPFn of) fe_category)
    (AJP fe_item_property fe_type_property) (N fe_category fe_type_property))
   (:GAP (DNI fe_category) (INI fe_category) (DEN fe_subtype))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 3 1)) ((1 2 1)) ((0 0 0)) ((1 0 0)) ((1 3 0))
   ((1 1 0)))))

(FNNounSemtrans (TheList) Strainer-TheWord (and (isa :NOUN StrainerForCooking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strait-TheWord (and (isa :NOUN Strait))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString))
    ((PPFn between) fe_relative_location)
    ((PPFn of) fe_container_possessor fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList) Straitjacket-TheWord (and (isa :NOUN StraitJacket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strand-TheWord (and (isa :NOUN Beach))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Stranger-TheWord
 (and (isa :NOUN SpatialThing-Localized)
      (relationInstanceExists originallyFromRegion :NOUN GeographicalRegion))
 (frame FN_Indigenous_origin)
 (bindingTemplate (TheList (:GAP (DEN objectActedOn) (INI comesFrom-Generic))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "strap" "on") Dildo-TheWord
 (and (isa :NOUN StrapOnDildo)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strap-TheWord (and (isa :NOUN Strap))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N wornOn (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 1 0)) ((0 2 0)) ((0 2 1) (2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Strap-TheWord (and (isa :NOUN Strap))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strategy-TheWord (and (isa :NOUN Strategy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stratus-TheWord (and (isa :NOUN StratusCloud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "straw") Hat-TheWord (and (isa :NOUN StrawHat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Straw-TheWord (and (isa :NOUN Straw)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strawberry-TheWord
 (and (isa :NOUN (FruitFn StrawberryPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strawberry-TheWord (and (isa :NOUN StrawberryPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stream-TheWord (and (isa :NOUN Stream))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) ((PPFn with) parts)
    ((PPFn in) fe_relative_location)
    (AJP fe_formational_cause fe_relative_location)
    (N fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 2 0)) ((0 4 2)) ((0 3 1)) ((0 4 1)) ((0 4 0)) ((2 0 0))
   ((0 1 0)) ((0 0 0)) ((0 2 0) (0 4 1)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Stream-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N massOfObject) ((PPFn of) fe_individuals massOfObject)
    (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 1 1) (0 2 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList "street") Address-TheWord
 (and (isa :NOUN StreetAddress)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Street-TheWord (and (isa :NOUN Street-Generic))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_frequency_of_use)
    ((PPFn beyond) fe_relative_location) ((PPFn in) fe_relative_location)
    ((PPFn of) objectFoundInLocation fe_relative_location)
    ((PPFn at) fe_relative_location)
    (N fe_characteristic fe_frequency_of_use
     (InverseBinaryPredicateFn nameString) trajectory-Complete
     fe_relative_location deviceUse)
    (AJP fe_characteristic fe_direction fe_frequency_of_use mainConstituent
     (InverseBinaryPredicateFn nameString) fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway)) (:NOUN (N parts)) (:GEN (Poss fe_relative_location))
   (:APPOSITIVE (NP (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 5 5)) ((0 6 6)) ((3 0 0)) ((0 3 1)) ((0 2 0)) ((0 5 4)) ((0 6 5))
   ((2 0 0)) ((0 5 2)) ((0 6 4)) ((0 6 3)) ((0 5 1)) ((0 0 0)) ((0 6 2))
   ((0 5 0)) ((0 6 0)) ((0 2 0) (0 5 2)) ((0 3 1) (0 6 3)) ((0 4 0) (0 5 1))
   ((0 0 0) (0 3 1)) ((0 6 2) (3 0 0)) ((0 2 0) (0 6 2)) ((0 5 4) (0 6 2))
   ((0 6 1) (0 6 2)) ((0 5 5) (0 6 0)) ((0 2 0) (0 6 0)) ((0 5 4) (0 6 0))
   ((0 6 0) (0 6 5)) ((0 5 3) (0 6 0)) ((0 6 0) (0 6 4)) ((0 6 0) (0 6 3))
   ((0 5 0) (0 6 2)) ((0 6 0) (0 6 2)) ((0 6 0) (0 6 0))
   ((0 5 5) (0 6 2) (4 0 0)) ((0 6 0) (0 6 0) (3 0 0))
   ((0 1 0) (0 6 0) (0 6 0)) ((0 3 0) (0 6 0) (3 0 0)))))

(FNNounSemtrans (TheList) Streetlight-TheWord (and (isa :NOUN Streetlight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Streetwalker-TheWord (and (isa :NOUN Prostitute))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strength-TheWord (and (isa :NOUN Strength))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "streptococcal" "sore") Throat-TheWord
 (and (isa :NOUN StrepThroat)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Streptococcus-TheWord (and (isa :NOUN Streptococcus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stress-TheWord (and (isa :NOUN StressInduced))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stretch-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_count fe_shape_prop) ((PPFn of) stuffUsed)
    (N fe_shape_prop stuffUsed) ((PPingFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 1 0)) ((0 2 1)) ((0 0 1)) ((0 1 0) (0 2 0))
   ((0 0 1) (0 1 0)) ((0 0 0) (0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Stretcher-TheWord (and (isa :NOUN Stretcher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stricture-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Judgment)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) subjectOfMentalSituation)
    ((PPFn on) objectOfEvaluation) ((PPFn against) objectOfEvaluation)
    (AJP fe_manner) ((PPFn for) fe_reason))
   (:GAP (DNI objectOfEvaluation)) (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 0 0)) ((1 1 0) (1 4 0)) ((1 1 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((1 0 0) (1 1 0)) ((1 0 0) (1 2 0))
   ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Strife-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_sides))
   (:OBLIQUE-OBJECT ((PPFn concerning) fe_issue) ((PPFn over) fe_issue)
    (N fe_manner) ((PPFn in) eventOccursAt) ((PPFn with) fe_side_2)
    (AJP fe_manner by-Underspecified fe_sides) ((PPFn among) fe_sides)
    ((PPFn between) fe_sides) ((PPFn of) fe_sides) ((PPFn within) fe_sides)
    (A fe_sides) ((PPFn at) temporallyIntersects))
   (:GAP (INI fe_sides) (DNI fe_sides))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 5 2)) ((1 10 0)) ((1 5 1)) ((0 0 0) (1 4 0))
   ((1 3 0) (1 8 0)) ((0 0 1) (1 3 0)) ((1 2 0) (1 9 0)) ((1 5 0) (1 8 0))
   ((1 5 0) (1 7 0)) ((1 5 0) (1 6 0)) ((1 1 0) (1 5 0))
   ((1 0 0) (1 5 2) (1 11 0)))))

(FNNounSemtrans (TheList) Strike-TheWord (and (isa :NOUN AttackOnObject))
 (frame FN_Attack)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy)
    ((PPFn in) (InverseBinaryPredicateFn explains-Generic) eventOccursAt)
    (Srel eventOutcomes) ((PPFn against) victim) ((PPFn on) victim)
    ((PPFn at) victim)
    (N performedBy by-Underspecified temporallyIntersects victim
     instrument-UsedAsWeapon)
    (AJP (InverseBinaryPredicateFn subEvents) fe_depictive fe_manner
     by-Underspecified purposeOfEvent instrument-UsedAsWeapon))
   (:GAP (DNI performedBy victim) (INI performedBy victim))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 6 4)) ((1 7 5)) ((1 3 0)) ((1 6 3)) ((1 2 0)) ((1 6 1)) ((1 7 3))
   ((1 7 2)) ((1 7 1)) ((1 4 0) (1 6 4)) ((0 0 0) (1 5 0)) ((1 4 0) (1 6 0))
   ((1 6 2) (1 6 4)) ((1 4 0) (1 6 2)) ((1 3 0) (1 6 2)) ((1 0 0) (1 7 4))
   ((1 1 1) (1 6 4)) ((1 4 0) (1 7 1)) ((1 3 0) (1 7 1)) ((1 1 1) (1 7 1))
   ((1 1 1) (1 7 0)) ((1 1 0) (1 4 0) (3 0 0)) ((1 3 0) (1 7 1) (3 0 0))
   ((1 3 0) (1 6 0) (1 7 1)))))

(FNNounSemtrans (TheList "string" "of" "christmas") Lights-TheWord
 (and (isa :NOUN ChristmasLightString)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) String-TheWord (and (isa :NOUN Cord-Textile))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N deviceUse)) (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) String-TheWord (and (isa :NOUN String-Textile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) String-TheWord
 (and (isa :NOUN StringInAStringedInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stringed") Instrument-TheWord
 (and (isa :NOUN StringInstrument)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "strip") Mall-TheWord (and (isa :NOUN StripMall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "strip") Poker-TheWord (and (isa :NOUN StripPoker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strip-TheWord (and (isa :NOUN Strip-Artifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strip-TheWord (and (isa :NOUN StripOfWoodOrMetal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strip-TheWord (and (isa :NOUN StripTheContainer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strip-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed)
    ((PPingFn of) stuffUsed) (N fe_shape_prop stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 3 1)) ((0 2 0) (0 3 0)) ((0 1 0) (0 3 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Stripper-TheWord (and (isa :NOUN Stripper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "strobe") Light-TheWord (and (isa :NOUN StrobeLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stroke-TheWord (and (isa :NOUN HandlingAnObject))
 (frame FN_Manipulation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stroke-TheWord
 (and (isa :NOUN Stroke-PhysiologicalCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stroll-TheWord (and (isa :NOUN AnimalWalkingProcess))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn among) situationLocation)
    ((PPFn by) situationLocation) ((PPFn in) situationLocation)
    ((PPFn on) situationLocation) ((PPFn round) situationLocation)
    ((PPFn to) to-Generic) ((PPFn into) to-Generic) ((PPFn onto) to-Generic)
    ((PPFn through) trajectory-Complete) ((PPFn across) trajectory-Complete)
    ((PPFn between) trajectory-Complete) ((PPFn along) trajectory-Complete)
    ((PPFn around) situationLocation trajectory-Complete)
    ((PPFn up) trajectory-Complete) ((PPFn down) trajectory-Complete)
    ((PPFn past) trajectory-Complete) ((PPFn from) from-Generic)
    ((PPFn out) from-Generic) (N temporallyIntersects)
    (AJP distanceTranslated fe_manner temporallyIntersects)
    ((PPFn after) temporallyIntersects))
   (:GAP (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 16 0)) ((0 0 0)) ((1 11 0)) ((1 8 0)) ((1 5 0)) ((1 7 0))
   ((1 6 0)) ((1 4 0)) ((1 2 0)) ((1 12 0)) ((0 0 0) (1 8 0))
   ((0 0 0) (1 15 0)) ((0 0 0) (1 14 0)) ((1 11 0) (3 0 0)) ((0 0 0) (1 11 0))
   ((0 0 0) (1 9 0)) ((1 19 1) (1 19 2)) ((1 19 1) (3 0 0)) ((1 12 1) (1 19 1))
   ((0 0 0) (1 5 0)) ((1 6 0) (3 0 0)) ((1 6 0) (1 9 0)) ((1 5 0) (1 11 0))
   ((1 5 0) (1 19 1)) ((1 9 0) (1 19 0)) ((1 10 0) (1 19 0)) ((1 5 0) (1 19 0))
   ((1 4 0) (1 20 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 12 0))
   ((1 8 0) (1 12 0)) ((1 1 0) (1 19 1)) ((1 17 0) (1 19 1) (3 0 0))
   ((1 13 0) (1 19 1) (3 0 0)) ((0 0 0) (1 5 0) (3 0 0))
   ((0 0 0) (1 8 0) (1 19 0)) ((0 0 0) (1 3 0) (1 19 2))
   ((0 0 0) (0 0 0) (1 0 0)) ((0 0 0) (1 1 0) (1 19 1))
   ((1 5 0) (1 16 0) (1 19 1) (3 0 0)) ((0 0 0) (1 1 0) (1 18 0) (3 0 0)))))

(FNNounSemtrans (TheList) Stroller-TheWord (and (isa :NOUN BabyCarriage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strongman-TheWord (and (isa :NOUN Dominating))
 (frame FN_Dominate_competitor)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn of) temporallyIntersects))
   (:GAP (INI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Strongylosis-TheWord
 (and (isa :NOUN AilmentCondition)) (frame FN_Medical_conditions)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Strontium-TheWord (and (isa :NOUN Strontium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "structural") Member-TheWord
 (and (isa :NOUN StructuralMember)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Structure-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_building))
   (:OBLIQUE-OBJECT (A fe_function) (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 0 0)) ((1 1 0)) ((0 0 0)) ((1 1 0) (1 1 1)))))

(FNNounSemtrans (TheList) Structure-TheWord
 (and (isa :NOUN StructuredInformationSource)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Struggle-TheWord
 (and (isa :NOUN MakingAStrenousEffort)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (VPfin fe_issue) (NP fe_issue fe_side_1 fe_sides))
   (:OBJECT (Num fe_side_1) (NP fe_side_1 fe_side_2))
   (:OBLIQUE-OBJECT ((PPFn about) fe_issue) ((PPFn over) fe_issue)
    ((PPingFn around) fe_issue) ((PPingFn over) fe_issue)
    ((PPFn for) purposeOfEvent) ((PPFn with) fe_side_2)
    ((PPFn against) fe_side_2) (A by-Underspecified fe_side_1 fe_sides)
    ((PPFn between) fe_sides) ((PPFn among) fe_sides) ((PPFn within) fe_sides)
    ((PPFn in) eventOccursAt purposeOfEvent temporallyIntersects)
    (AJP fe_degree duration fe_issue fe_manner by-Underspecified fe_side_1
     temporallyIntersects)
    ((PPFn of) eventOccursAt fe_side_1 temporallyIntersects)
    (N purposeOfEvent fe_sides temporallyIntersects))
   (:GAP (INI fe_issue fe_side_1 fe_sides) (DNI fe_issue fe_side_1 fe_sides))
   (:GEN (Poss fe_side_1 fe_sides))))
 (groupPatterns
  (TheSet ((2 12 6)) ((2 10 0)) ((2 8 0)) ((2 9 0)) ((2 14 1)) ((2 6 0))
   ((2 4 0)) ((2 12 4)) ((2 1 0)) ((0 1 0)) ((2 8 0) (2 12 6))
   ((2 8 0) (2 14 1)) ((2 6 0) (2 14 1)) ((2 5 0) (4 0 0)) ((2 6 0) (4 0 0))
   ((2 6 0) (2 7 1)) ((2 4 0) (4 0 1)) ((2 4 0) (2 8 0)) ((2 13 2) (2 14 0))
   ((2 6 0) (2 14 0)) ((2 11 1) (2 13 1)) ((2 12 5) (2 14 0))
   ((2 11 0) (4 0 0)) ((2 4 0) (2 11 0)) ((2 11 2) (2 12 4))
   ((2 12 4) (2 13 0)) ((2 8 0) (2 12 3)) ((2 1 0) (2 8 0)) ((0 1 2) (2 1 0))
   ((2 2 0) (2 12 5)) ((2 12 2) (2 13 1)) ((2 1 0) (2 11 0)) ((2 6 0) (2 11 0))
   ((2 1 0) (2 12 3)) ((2 0 0) (2 12 2)) ((2 4 0) (2 12 0))
   ((2 4 0) (2 14 2) (4 0 0)) ((0 1 1) (2 5 0) (2 14 0))
   ((2 6 0) (2 7 0) (4 0 0)) ((0 1 1) (2 6 0) (2 7 0))
   ((2 1 0) (2 12 4) (2 12 6)) ((2 3 0) (2 8 0) (2 12 3))
   ((2 0 0) (2 7 2) (2 12 1)) ((0 0 0) (1 0 0) (1 1 0) (1 1 1))
   ((0 1 1) (2 1 0) (2 5 0) (2 14 0)) ((2 5 0) (2 11 0) (2 11 2) (2 12 0)))))

(FNNounSemtrans (TheList) Strut-TheWord (and (isa :NOUN Strut)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stubbed") Toe-TheWord
 (and (isa :NOUN Toe)
      (relationExistsInstance damages StubbingSomething-IncurringAnInjury
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stud-TheWord (and (isa :NOUN StudPoker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "student") Loan-TheWord (and (isa :NOUN StudentLoan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Student-TheWord (and (isa :NOUN Student))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP eventOccursAt studentOf (InverseBinaryPredicateFn teacherTypeOfField)
     instructor))
   (:OBLIQUE-OBJECT ((PPFn from) eventOccursAt)
    (AJP fe_depictive educationLevel) ((PPFn at) eventOccursAt educationLevel)
    (NP studentOf) ((PPFn of) (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn in) fe_course educationLevel
     (InverseBinaryPredicateFn teacherTypeOfField))
    (A educationLevel (InverseBinaryPredicateFn teacherTypeOfField))
    (N eventOccursAt educationLevel fe_qualification
     (InverseBinaryPredicateFn teacherTypeOfField)))
   (:GAP (DNI eventOccursAt)
    (INI (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     (InverseBinaryPredicateFn teacherTypeOfField))
    (DEN studentOf instructor))
   (:NOUN (N studentOf)) (:GEN (Poss eventOccursAt instructor))))
 (groupPatterns
  (TheSet ((4 0 1)) ((1 4 0)) ((1 7 3)) ((1 6 1)) ((3 0 0)) ((1 7 2)) ((1 5 1))
   ((1 2 1)) ((1 6 0)) ((1 7 1)) ((4 0 0)) ((1 0 0)) ((1 2 0)) ((1 7 0))
   ((1 1 0)) ((1 5 0)) ((0 0 3) (1 6 1)) ((3 0 0) (4 0 1)) ((1 7 3) (4 0 1))
   ((0 0 1) (1 4 0)) ((1 3 0) (1 7 3)) ((0 0 1) (1 7 3)) ((1 4 0) (1 6 0))
   ((0 0 1) (1 6 0)) ((0 0 3) (4 0 0)) ((0 0 2) (1 0 0)) ((0 0 1) (1 2 0))
   ((0 0 0) (1 6 0)) ((1 2 0) (1 7 1)) ((1 2 0) (1 6 0))
   ((0 0 1) (1 5 2) (1 6 0)) ((0 0 1) (1 1 1) (1 2 0))
   ((1 1 0) (1 1 0) (1 1 0) (1 1 0))
   ((1 6 1) (1 7 1) (1 7 3) (1 7 3) (1 7 3)))))

(FNNounSemtrans (TheList) Studio-TheWord (and (isa :NOUN Workroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "study") Room-TheWord (and (isa :NOUN StudyRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Study-TheWord (and (isa :NOUN StudyRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Study-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation)) (:OBJECT (NP fe_ground))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation) ((PPFn on) fe_ground)
    ((PPingFn on) fe_ground) (A fe_manner) (VPing by-Underspecified)
    (AJP fe_ground fe_manner by-Underspecified)
    (N fe_ground subjectOfInspection) ((PPFn of) fe_ground fe_phenomenon)
    (AVP temporallyIntersects))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_ground))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 7 1)) ((2 6 1)) ((2 5 2)) ((2 6 0)) ((2 5 0)) ((2 5 1)) ((4 0 0))
   ((2 0 0)) ((2 2 0)) ((2 1 0)) ((2 7 0)) ((2 6 0) (2 7 1)) ((2 1 0) (2 3 0))
   ((0 0 0) (2 8 0)) ((2 4 0) (2 7 0)) ((2 7 0) (4 0 0)) ((2 6 0) (4 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "stuffed") Animal-TheWord
 (and (isa :NOUN StuffedAnimal)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "stuffed") Toy-TheWord (and (isa :NOUN StuffedToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stupefaction-TheWord
 (and (isa :NOUN Confusion-Generic)) (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Sty-TheWord (and (isa :NOUN PigPen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Style-TheWord (and (isa :NOUN ObjectTypeByStyle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Style-TheWord (and (isa :NOUN Style-FlowerPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Style-TheWord
 (and (isa :NOUN ClothingItem)
      (propositionalLifespan ShortTime (clothingStyle :NOUN FashionableStyle)))
 (frame FN_Trendiness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Style-TheWord (and (isa :NOUN Sophistication))
 (frame FN_Trendiness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stylus-TheWord
 (and (isa :NOUN Stylus-WritingImplement)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "styrofoam") Peanut-TheWord
 (and (isa :NOUN StyrofoamPeanut)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Styrofoam-TheWord (and (isa :NOUN Styrofoam))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "subalpine") Larch-TheWord
 (and (isa :NOUN SubalpineLarchTree)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subbing-TheWord
 (and (isa :NOUN WorkingAsASubstituteForSomeone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subclass-TheWord (and (isa :NOUN BiologicalSubclass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "subclavian") Vein-TheWord
 (and (isa :NOUN SubclavianVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subcommittee-TheWord
 (and (isa :NOUN Subcommittee-Organization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subject-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance evaluee-Direct Evaluating :NOUN))
 (frame FN_Experimentation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DNI fe_experiment) (DEN patientTreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Subject-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance topicOfInfoTransfer InformationTransferEvent
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subject-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance jurisdictionOverIndividual LegalAgent :NOUN))
 (frame FN_People_by_jurisdiction)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subject-TheWord (and (isa :NOUN Topic))
 (frame FN_Topic)
 (bindingTemplate
  (TheList (:SUBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT (AJP fe_status) (N (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn in) (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn of) (InverseBinaryPredicateFn topicOfPCW) situationTopic))
   (:GAP (DEN situationTopic)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 3 1)) ((0 0 0)) ((1 3 0)) ((3 0 0)) ((0 0 0) (1 3 0))
   ((1 0 0) (1 3 0)) ((1 1 0) (3 0 0)) ((0 0 0) (0 0 0) (1 3 0))
   ((0 0 0) (1 0 0) (1 3 0)) ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Sublimation-TheWord
 (and (isa :NOUN StateOfMatterChangeEvent)) (frame FN_Change_of_phase)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sublingual") Gland-TheWord
 (and (isa :NOUN SubLingualGland)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "submachine") Gun-TheWord
 (and (isa :NOUN SubmachineGun)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Submarine-TheWord (and (isa :NOUN Submarine))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor) (VPing fe_descriptor) (NP fe_descriptor))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "submaxillary") Gland-TheWord
 (and (isa :NOUN SubMaxillaryGland)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Submission-TheWord
 (and (isa :NOUN SubmittingSomething)
      (relationInstanceExists infoTransferred :NOUN Document))
 (frame FN_Submitting_documents)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_documents))
   (:GAP (CNI fe_authority fe_submittor))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Suborder-TheWord (and (isa :NOUN BiologicalSuborder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subordinate-TheWord
 (and (isa :NOUN PersonWithOccupation)
      (relationInstanceExists boss :NOUN Person))
 (frame FN_Subordinates_and_superiors)
 (bindingTemplate (TheList (:GAP (DEN fe_subordinate) (DNI boss))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subpoena-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPto obligationsCreated))
   (:GAP (DEN fe_document) (INI fe_issuer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Subscriber-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationInstanceExists hasBeliefSystems :NOUN BeliefSystem))
 (frame FN_Opinion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subscriber-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance subscribers Organization :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subservience-TheWord (and (isa :NOUN Subservience))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subset-TheWord
 (and (isa :NOUN SetOrCollection)
      (relationInstanceExists subsetOf :NOUN SetOrCollection))
 (frame FN_Be_subset_of) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subspecies-TheWord
 (and (isa :NOUN BiologicalSubspecies)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "substance") Abuse-TheWord
 (and (isa :NOUN SubstanceAbuse)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Substance-TheWord (and (isa :NOUN PartiallyTangible))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Substitution-TheWord
 (and (isa :NOUN ReplacingSomething)) (frame FN_Replacing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectRemoved)) (:GAP (INI doneBy fe_new))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Subtitle-TheWord (and (isa :NOUN Subtitle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subtraction-TheWord
 (and (isa :NOUN DoingMultiplication)) (frame FN_Non-commutative_process)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subtraction-TheWord (and (isa :NOUN DoingAddition))
 (frame FN_Non-commutative_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suburb-TheWord (and (isa :NOUN SuburbanNeighborhood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subversion-TheWord
 (and (isa :NOUN CorruptingSomeone)) (frame FN_Subversion)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "subway") Station-TheWord
 (and (isa :NOUN SubwayStation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Subwoofer-TheWord (and (isa :NOUN Subwoofer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Success-TheWord
 (and (isa :NOUN Attempting) (not (isa :NOUN FailingSomething)))
 (frame FN_Success_or_failure)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn of) doneBy) ((PPFn in) to-Generic) (VPed to-Generic)
    ((PPingFn in) to-Generic) (N doneBy by-Underspecified)
    ((PPFn against) (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    ((PPFn at) to-Generic eventOccursAt
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (AJP fe_degree fe_depictive to-Generic temporallyIntersects))
   (:GAP (DNI doneBy to-Generic) (INI doneBy to-Generic))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 0 0)) ((1 2 0)) ((1 1 0)) ((1 7 1)) ((3 0 0))
   ((1 6 2) (3 0 0)) ((1 5 0) (3 0 0)) ((1 4 0) (1 5 0)) ((1 6 1) (3 0 0))
   ((1 4 1) (3 0 0)) ((1 3 0) (3 0 0)) ((1 7 2) (3 0 0)) ((1 0 0) (1 7 2))
   ((0 0 0) (1 3 0)) ((1 7 0) (1 7 3)) ((0 0 0) (1 7 0)) ((0 0 0) (0 0 0))
   ((0 0 0) (1 6 0) (1 7 0) (1 7 0)))))

(FNNounSemtrans (TheList) Success-TheWord (and (isa :NOUN SuccessfulAction))
 (frame FN_Successful_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP instrument-Generic))
   (:OBLIQUE-OBJECT ((PPingFn in) to-Generic) (N instrument-Generic)
    ((PPFn of) instrument-Generic by-Underspecified) ((PPFn in) eventOccursAt)
    (AJP fe_degree by-Underspecified temporallyIntersects))
   (:GAP (DNI to-Generic by-Underspecified)) (:GEN (Poss by-Underspecified))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 1)) ((1 1 0)) ((1 4 1) (1 4 2)) ((1 2 1) (1 3 0))
   ((0 0 0) (1 0 0)) ((1 2 0) (1 4 0)))))

(FNNounSemtrans (TheList) Succession-TheWord (and (isa :NOUN Series))
 (frame FN_Sequence)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_entities))
   (:OBLIQUE-OBJECT (unknown fe_descriptor) ((PPFn of) fe_entities)
    (N fe_entities) (AJP fe_descriptor fe_relation_type))
   (:GAP (DNI fe_entities))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 1 0)) ((0 0 0)) ((1 2 0)) ((1 3 0)) ((1 0 0) (1 1 0))
   ((1 1 0) (1 3 0)) ((0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Succulent-TheWord (and (isa :NOUN Succulent-Plant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sucralfate-TheWord (and (isa :NOUN Sucralfate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sucre-TheWord (and (isa :NOUN Sucre-Ecuador))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sucrose-TheWord (and (isa :NOUN Sucrose))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sudanese") Pound-TheWord
 (and (isa :NOUN Pound-Sudan)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suffering-TheWord (and (isa :NOUN Suffering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suffocation-TheWord
 (and (isa :NOUN (DyingFromEventTypeFn Asphyxiation))) (frame FN_Death)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn explains-Generic))
    ((PPFn by) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn through) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn inside) eventOccursAt) ((PPFn of) affectedAgent)
    ((PPFn in) eventOccursAt affectedAgent) ((PPFn on) temporallyIntersects))
   (:GAP (CNI affectedAgent) (INI affectedAgent)
    (2nd (InverseBinaryPredicateFn explains-Generic) affectedAgent))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 1)) ((1 3 0)) ((1 5 0)) ((1 1 0)) ((1 2 0) (1 4 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Suffocation-TheWord
 (and (isa :NOUN KillingByOrganism)) (frame FN_Killing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suffocation-TheWord (and (isa :NOUN Asphyxiation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sugar") Beet-TheWord (and (isa :NOUN SugarBeetPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sugar") Bowl-TheWord (and (isa :NOUN SugarBowl))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sugar") Refinery-TheWord
 (and (isa :NOUN SugarRefinery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sugar-TheWord (and (isa :NOUN Sugar)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sugar-TheWord (and (isa :NOUN Sugar-Table))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 1)))))

(FNNounSemtrans (TheList "sugar") Daddy-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT ((PPFn to) fe_partner_2))
   (:GAP (DEN fe_partner_1 fe_partner_2))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Sugarcane-TheWord (and (isa :NOUN SugarcanePlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suggestion-TheWord (and (isa :NOUN Suggestion))
 (frame FN_Attempt_suasion)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP recipientOfInfo topicOfIndividual genericPathway-Partial performedBy
     situationTopic))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (Sfin topicOfIndividual))
   (:GAP (DNI recipientOfInfo topicOfIndividual performedBy)
    (INI recipientOfInfo performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((0 0 4)) ((0 0 0)) ((1 1 0)) ((0 0 1)) ((0 0 3) (0 0 4))
   ((0 0 2) (0 0 4)) ((0 0 4) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Suicide-TheWord (and (isa :NOUN KillingByOrganism))
 (frame FN_Killing)
 (bindingTemplate
  (TheList (:SUBJECT (NP victim))
   (:OBLIQUE-OBJECT ((PPingFn by) by-Underspecified) ((PPFn in) eventOccursAt)
    (AJP temporallyIntersects victim)
    ((PPFn by) fe_manner by-Underspecified victim) ((PPFn of) victim))
   (:GAP (CNI victim)) (:GEN (Poss victim))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((1 3 2)) ((0 0 0)) ((1 2 1)) ((1 3 1))
   ((1 1 0) (1 2 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Suicide-TheWord (and (isa :NOUN Suicide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suiseki-TheWord (and (isa :NOUN Suiseki))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suit-TheWord (and (isa :NOUN Suit))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor mainConstituent)
    ((PPFn with) fe_descriptor subRegions)
    (AJP fe_descriptor clothingStyle deviceUse)
    (N fe_descriptor mainConstituent clothingStyle deviceUse)
    (A fe_descriptor deviceUse) ((PPFn of) mainConstituent wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 3 3)) ((0 2 2)) ((0 4 1)) ((0 3 2)) ((0 5 0)) ((0 3 1)) ((0 2 0))
   ((0 3 3) (2 0 0)) ((0 2 1) (2 0 0)) ((0 3 2) (2 0 0)) ((0 2 2) (0 3 2))
   ((0 3 1) (2 0 0)) ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0)) ((0 2 0) (0 3 3))
   ((0 2 0) (0 2 2)) ((0 1 1) (0 2 0)) ((0 2 1) (0 3 0)) ((0 2 0) (0 3 2))
   ((0 2 0) (0 2 1)) ((0 3 2) (0 4 0)) ((0 2 0) (0 3 1)) ((0 2 0) (0 5 0))
   ((0 2 0) (0 2 0)) ((0 2 0) (0 2 2) (2 0 0)) ((0 2 0) (0 2 1) (0 3 1))
   ((0 2 0) (0 3 0) (2 0 0)) ((0 2 0) (0 3 0) (0 5 1))
   ((0 2 0) (0 2 0) (2 0 0)) ((0 0 1) (0 1 0) (0 2 0) (0 2 1))
   ((0 0 0) (0 1 0) (0 1 1) (0 2 0) (0 2 0)))))

(FNNounSemtrans (TheList) Suit-TheWord (and (isa :NOUN BusinessSuit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suit-TheWord (and (isa :NOUN Suit-PlayingCardType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suitability-TheWord (and (isa :NOUN SuitableThing))
 (frame FN_Suitability)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) purposeOfEvent))
   (:GAP (2nd objectOfEvaluation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Suitableness-TheWord (and (isa :NOUN SuitableThing))
 (frame FN_Suitability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suitcase-TheWord (and (isa :NOUN Suitcase))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) containedObject)
    ((PPingFn of) containedObject) (Sfin containedObject)
    (VPing containedObject) (Poss owner) ((PPFn in) fe_relative_location)
    ((PPFn on) fe_relative_location) ((PPFn under) fe_relative_location)
    ((PPFn for) deviceUse)
    (AJP containedObject mainConstituent activeIngredientsOfType deviceUse)
    (N containedObject mainConstituent activeIngredientsOfType deviceUse)
    (VPto deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 12 0)) ((0 11 3)) ((0 10 3)) ((0 11 2)) ((0 7 0)) ((2 0 0))
   ((0 5 0)) ((0 11 1)) ((0 10 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0)) ((0 11 0)) ((0 10 0)) ((0 8 0) (2 0 0)) ((0 7 0) (0 11 1))
   ((0 11 1) (2 0 0)) ((0 0 0) (0 9 0)) ((0 3 0) (0 10 2)) ((0 1 0) (0 6 0)))))

(FNNounSemtrans (TheList) Suitor-TheWord
 (and (isa :NOUN InvolvedInRelationship)) (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT ((PPFn for) fe_partner_2) ((PPFn to) fe_partner_2))
   (:GAP (DEN fe_partner_1) (DNI fe_partner_2)) (:GEN (Poss fe_partner_2))))
 (groupPatterns
  (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)) ((0 0 1)) ((0 0 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "sulfa") Drug-TheWord (and (isa :NOUN SulfaDrug))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sulfur-TheWord (and (isa :NOUN Sulfur))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sulfur") Dioxide-TheWord
 (and (isa :NOUN SulfurDioxide)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sulfur") Trioxide-TheWord
 (and (isa :NOUN SulfurTrioxide)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sulfuric") Acid-TheWord
 (and (isa :NOUN SulfuricAcid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sultan-TheWord (and (isa :NOUN Sultan-HeadOfState))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Sultanate-TheWord
 (and (isa :NOUN IndependentSultanate)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sum-TheWord
 (and (isa :NOUN CommutativeRelation)
      (isa :NOUN MathematicalFunctionOnScalars))
 (frame FN_Commutative_statement) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Summation-TheWord (and (isa :NOUN DoingAddition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "summer") Job-TheWord (and (isa :NOUN SummerJob))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "summer") Solstice-TheWord
 (and (isa :NOUN SummerSolsticeDay)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Summer-TheWord (and (isa :NOUN CalendarSummer))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_relative_time) ((PPFn of) fe_relative_time))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Summer-TheWord (and (isa :NOUN SummerSeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "summit") Crater-TheWord
 (and (isa :NOUN SummitCrater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Summit-TheWord (and (isa :NOUN Summit))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_part_prop) (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Summons-TheWord (and (isa :NOUN Summons-Legal))
 (frame FN_Citing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Summons-TheWord (and (isa :NOUN Summons-Legal))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sun-TheWord (and (isa :NOUN Sun)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sun" "care") Product-TheWord
 (and (isa :NOUN SunCareStuff)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sun") Hat-TheWord (and (isa :NOUN SunHat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sun") Protection-TheWord
 (and (isa :NOUN SunProtectionStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sun") Roof-TheWord
 (and (isa :NOUN AutomobileSunRoof)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sun") Shade-TheWord (and (isa :NOUN SunShades))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunblock-TheWord (and (isa :NOUN SunProtectionStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunday-TheWord (and (isa :NOUN Sunday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_count fe_relative_time))
   (:GAP (DEN fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Sundress-TheWord (and (isa :NOUN OffShoulderDress))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 1 0)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Sunflower-TheWord
 (and (isa :NOUN (FlowerFn Sunflower-Plant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunglasses-TheWord (and (isa :NOUN Sunglasses))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunlight-TheWord (and (isa :NOUN Sunlight-Direct))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunni-TheWord (and (isa :NOUN SunniIslam))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunrise-TheWord (and (isa :NOUN Sunrise))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunroof-TheWord (and (isa :NOUN AutomobileSunRoof))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunscreen-TheWord
 (and (isa :NOUN SunProtectionStuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunscreen-TheWord (and (isa :NOUN SunTanLotion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunset-TheWord (and (isa :NOUN SunSettingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunset-TheWord (and (isa :NOUN Sunset))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sunshine-TheWord (and (isa :NOUN Sunlight-Direct))
 (frame FN_Weather)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_specification))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "suntan") Lotion-TheWord
 (and (isa :NOUN SunTanLotion)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suntan-TheWord
 (and (isa :NOUN Suntanned-PhysicalCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "supercharged") Engine-TheWord
 (and (isa :NOUN SuperchargedEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supercomputer-TheWord (and (isa :NOUN Supercomputer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superficial" "temporal") Vein-TheWord
 (and (isa :NOUN SuperficialTemporalVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superheterodyne") Receiver-TheWord
 (and (isa :NOUN SuperheterodyneReceiver)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superior" "mesenteric") Artery-TheWord
 (and (isa :NOUN SuperiorMesentericArtery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superior" "ophthalmic") Vein-TheWord
 (and (isa :NOUN SuperiorOphthalmicVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superior" "pulmonary") Vein-TheWord
 (and (isa :NOUN SuperiorPulmonaryVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Superior-TheWord (and (isa :NOUN Supervisor))
 (frame FN_Subordinates_and_superiors) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superior" "thyroid") Vein-TheWord
 (and (isa :NOUN SuperiorThyroidVein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "superior" "vena") Cava-TheWord
 (and (isa :NOUN SuperiorVenaCava)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supermarket-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supernova-TheWord (and (isa :NOUN Supernova))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Superpower-TheWord (and (isa :NOUN Superpower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supervision-TheWord (and (isa :NOUN Supervising))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supervisor-TheWord (and (isa :NOUN Supervisor))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_governed))
   (:GAP (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:APPOSITIVE (NP leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Supervisor-TheWord (and (isa :NOUN Supervisor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supper-TheWord (and (isa :NOUN Supper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supplier-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists suppliers :NOUN Agent-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supplier-TheWord (and (isa :NOUN GivingSomething))
 (frame FN_Supply)
 (bindingTemplate
  (TheList (:SUBJECT (NP suppliers))
   (:OBLIQUE-OBJECT ((PPFn for) fe_imposed_purpose) (VPto to-Generic)
    ((PPFn to) to-Generic) ((PPFn of) objectOfPossessionTransfer)
    (N objectOfPossessionTransfer) (A objectOfPossessionTransfer))
   (:GAP (DEN suppliers) (DNI to-Generic objectOfPossessionTransfer)
    (INI fe_imposed_purpose to-Generic objectOfPossessionTransfer))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 4 0)) ((0 0 0) (1 3 0)) ((1 2 0) (1 3 0))
   ((0 0 0) (1 0 0)) ((0 0 0) (1 2 0) (1 3 0)) ((0 0 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList "supply") Cabinet-TheWord
 (and (isa :NOUN SupplyCabinet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supply-TheWord
 (and (isa :NOUN Event) (relationInstanceExists subEvents :NOUN Buying))
 (frame FN_Commerce_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supply-TheWord (and (isa :NOUN Supplies))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supply-TheWord (and (isa :NOUN Store-Generic))
 (frame FN_Store)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor ownerOfProprietaryThing)
    ((PPFn of) resourceAvailable) (N resourceAvailable))
   (:GAP (DEN fe_supply)
    (DNI fe_descriptor ownerOfProprietaryThing resourceAvailable deviceUse)
    (INI deviceUse))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 2 0)) ((0 0 0)) ((0 1 0)) ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Supply-TheWord (and (isa :NOUN GivingSomething))
 (frame FN_Supply)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_imposed_purpose) ((PPFn by) suppliers)
    ((PPFn of) objectOfPossessionTransfer)
    (A suppliers objectOfPossessionTransfer))
   (:GAP (DNI to-Generic suppliers)
    (INI fe_imposed_purpose to-Generic suppliers objectOfPossessionTransfer))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 2 0)) ((0 2 0) (0 3 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList "support") Column-TheWord
 (and (isa :NOUN SupportColumn)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "support") Rocker-TheWord
 (and (isa :NOUN SupportRocker)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supporter-TheWord
 (and (isa :NOUN AllyingWithSomething)) (frame FN_Taking_sides)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_descriptor) ((PPFn of) fe_issue fe_side)
    (N fe_issue fe_side))
   (:GEN (Poss fe_side))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 1)) ((1 2 1)) ((1 1 0)) ((1 2 0)) ((1 0 1))
   ((1 0 0) (2 0 0)) ((1 0 0) (1 1 1)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList "supporting") Structure-TheWord
 (and (isa :NOUN SupportingStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Supposition-TheWord
 (and (isa :NOUN AwarenessQuantity)) (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) topicOfIndividual)
    ((PPingFn of) topicOfIndividual) (Sfin topicOfIndividual)
    ((PPFn about) situationTopic) ((PPFn as) situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (DNI topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 3 0)) ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 4 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Suppository-TheWord (and (isa :NOUN Suppository))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surf-TheWord (and (isa :NOUN Wave-Liquid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surface-TheWord
 (and (isa :NOUN SurfaceRegion-Tangible)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "surface" "to" "air" "missile") Launcher-TheWord
 (and (isa :NOUN SurfaceToAirMissileLauncher)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surfboard-TheWord (and (isa :NOUN Surfboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "surge") Protector-TheWord
 (and (isa :NOUN SurgeProtector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surgeon-TheWord (and (isa :NOUN Surgeon))
 (frame FN_Medical_interaction_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surgeon-TheWord (and (isa :NOUN Surgeon))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "surgical") Glove-TheWord
 (and (isa :NOUN SurgicalGlove)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "surgical") Mask-TheWord
 (and (isa :NOUN SurgicalMask)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "surgical") Needle-TheWord
 (and (isa :NOUN SurgicalNeedle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surname-TheWord (and (isa :NOUN NamingSomething))
 (frame FN_Being_named)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn (InverseBinaryPredicateFn nameString)))
   (:OBLIQUE-OBJECT
    ((PPFn of) objectActedOn (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN (InverseBinaryPredicateFn nameString)))
   (:NOUN (N (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 0 1)) ((3 0 0)) ((4 0 0)) ((1 0 0)) ((0 0 0)) ((0 0 1) (4 0 0))
   ((0 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Surname-TheWord (and (isa :NOUN HumanSurname))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surplice-TheWord (and (isa :NOUN Tunic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 1) (0 0 2)) ((0 0 0) (2 0 0))
   ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "surprise") Party-TheWord
 (and (isa :NOUN SurpriseParty)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surprise-TheWord (and (isa :NOUN Surprise))
 (frame FN_Experiencer_obj)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn explaines-Generic)))
   (:GAP (DNI objectActedOn) (INI objectActedOn)
    (DEN (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Surprise-TheWord (and (isa :NOUN LearningThat))
 (frame FN_Just_found_out)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP objectActedOn (InverseBinaryPredicateFn explaines-Generic)))
   (:OBLIQUE-OBJECT ((PPFn to) objectActedOn) ((PPFn on) eventAffectsBodyPart)
    ((PPFn in) eventAffectsBodyPart genericPathway-Partial)
    (VPto (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn at) (InverseBinaryPredicateFn explaines-Generic))
    (Sfin (InverseBinaryPredicateFn explaines-Generic))
    (AJP activeIngredientsOfType))
   (:GAP (INI objectActedOn)
    (DNI objectActedOn (InverseBinaryPredicateFn explaines-Generic)))
   (:NOUN (N (InverseBinaryPredicateFn explaines-Generic)))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 0)) ((4 0 0)) ((1 3 0)) ((1 1 0) (1 4 0)) ((0 0 1) (1 6 0))
   ((1 5 0) (4 0 0)) ((0 0 1) (1 0 0)) ((1 0 0) (3 0 0)) ((0 0 1) (1 2 1))
   ((0 0 0) (0 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Surrender-TheWord (and (isa :NOUN Surrendering))
 (frame FN_Surrendering) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Surveillance-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP instrument-Generic))
   (:GAP (CNI subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Survey-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn by) subjectOfMentalSituation) ((PPFn of) fe_ground)
    ((PPFn on) fe_ground)
    (N subjectOfMentalSituation fe_ground by-Underspecified)
    ((PPFn into) fe_ground fe_phenomenon))
   (:GAP (CNI subjectOfMentalSituation) (DNI fe_ground))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 4 1)) ((3 0 0)) ((1 0 0)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((1 4 0))
   ((1 3 1)) ((0 0 0) (1 4 1)) ((1 2 0) (1 3 2)) ((1 2 0) (3 0 0))
   ((1 1 0) (3 0 0)) ((1 3 1) (3 0 0)) ((0 0 0) (1 1 0)) ((1 2 0) (1 3 0))
   ((1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Surveyor-TheWord (and (isa :NOUN LandSurveying))
 (frame FN_Scrutiny)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation fe_ground))
   (:OBLIQUE-OBJECT (NP subjectOfMentalSituation) (N fe_ground)
    ((PPFn of) fe_ground) ((PPFn to) fe_ground))
   (:GAP (DEN subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0)) ((0 0 1)) ((1 1 0)) ((0 0 0) (1 2 0))
   ((0 0 1) (1 0 0)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "survival") Rate-TheWord
 (and (isa :NOUN Real0-1)
      (relationExistsInstance survivalRate PhysiologicalConditionType :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Survival-TheWord (and (isa :NOUN Survival))
 (frame FN_Surviving)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_dangerous_situation) ((PPFn of) doneBy))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Sushi-TheWord (and (isa :NOUN Sushi)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suspect-TheWord (and (isa :NOUN Suspect))
 (frame FN_Suspicion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "suspension") Bridge-TheWord
 (and (isa :NOUN SuspensionBridge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "suspension") System-TheWord
 (and (isa :NOUN AutomobileSuspensionSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suspicion-TheWord
 (and (isa :NOUN SuspectingSomething)) (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBJECT ((PPFn of) eventAffectsBodyPart))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation)
    ((PPFn among) subjectOfMentalSituation)
    ((PPFn to) subjectOfMentalSituation) (Sfin topicOfIndividual)
    ((PPFn toward) topicOfIndividual) ((PPingFn of) topicOfIndividual)
    ((PPingFn about) topicOfIndividual)
    ((PPFn in) subjectOfMentalSituation fe_manner)
    ((PPFn about) situationTopic) ((PPFn against) situationTopic)
    ((PPFn as) situationTopic) ((PPFn at) situationTopic)
    ((PPFn over) situationTopic) ((PPFn of) topicOfIndividual situationTopic))
   (:GAP (CNI subjectOfMentalSituation)
    (INI subjectOfMentalSituation eventAffectsBodyPart)
    (DNI subjectOfMentalSituation topicOfIndividual situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((2 12 0)) ((2 11 0)) ((2 10 0)) ((2 9 0)) ((2 8 0)) ((4 0 0))
   ((2 3 0)) ((2 5 0)) ((2 4 0)) ((2 13 0)) ((2 8 0) (4 0 0))
   ((2 2 0) (2 13 1)) ((2 7 0) (2 8 0)) ((0 0 0) (2 8 0)) ((2 3 0) (4 0 0))
   ((2 5 0) (4 0 0)) ((2 6 0) (4 0 0)) ((2 13 0) (4 0 0)) ((2 1 0) (2 3 0))
   ((0 0 0) (2 3 0)) ((0 0 0) (2 13 0)) ((2 0 0) (2 3 0))
   ((0 0 0) (1 0 0) (2 7 1)))))

(FNNounSemtrans (TheList) Suture-TheWord (and (isa :NOUN Suture-Thread))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suture-TheWord
 (and (isa :NOUN Seam-SewnConnection)
      (relationExistsInstance outputsCreated StitchingAWound :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Suzerain-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Swab-TheWord (and (isa :NOUN CottonSwab))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swab-TheWord (and (isa :NOUN Mop)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swaddling") Clothes-TheWord
 (and (isa :NOUN SwaddlingClothes)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swamp-TheWord (and (isa :NOUN Swamp))
 (frame FN_Biological_area)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swampland-TheWord (and (isa :NOUN Swamp))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_relative_location)
    ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Swan-TheWord (and (isa :NOUN Swan))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swap-TheWord (and (isa :NOUN ExchangeOfUserRights))
 (frame FN_Exchange) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swarm-TheWord (and (isa :NOUN Group))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_aggregate_property) ((PPFn of) fe_individuals)
    (N fe_individuals))
   (:GAP (DEN fe_aggregate))))
 (groupPatterns (TheSet ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Sway-TheWord (and (isa :NOUN Influence))
 (frame FN_Authority) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sweat") Gland-TheWord (and (isa :NOUN SweatGland))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sweat") Pants-TheWord (and (isa :NOUN Sweatpants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sweat-TheWord (and (isa :NOUN Excreting))
 (frame FN_Excreting)
 (bindingTemplate
  (TheList (:SUBJECT (NP bodilyDoer)) (:GAP (DEN objectEmitted))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Sweater-TheWord (and (isa :NOUN Sweater))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn with) fe_descriptor)
    ((PPFn in) fe_descriptor mainConstituent) ((PPFn of) mainConstituent)
    (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle)
    ((PPFn with) fe_descriptor subRegions) ((PPFn for) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 6 0)) ((0 4 2)) ((0 3 2)) ((0 4 1)) ((0 3 0))
   ((0 4 2) (0 5 1)) ((0 4 1) (2 0 0)) ((0 4 0) (2 0 0)) ((0 3 0) (2 0 0))
   ((0 3 0) (0 6 0)) ((0 3 0) (0 5 1)) ((0 0 0) (0 3 2)) ((0 3 0) (0 3 2))
   ((0 2 0) (0 3 0)) ((0 1 1) (0 3 0)) ((0 3 0) (0 4 1)) ((0 3 0) (0 4 0))
   ((0 3 0) (0 3 0)) ((0 1 0) (0 3 0) (0 3 2)) ((0 3 0) (0 3 0) (0 4 1))
   ((0 3 0) (0 3 0) (0 3 1)) ((0 3 0) (0 3 0) (0 5 0))
   ((0 3 0) (0 3 0) (0 3 2) (2 0 0)) ((0 3 0) (0 3 0) (0 3 2) (0 4 1)))))

(FNNounSemtrans (TheList) Sweatpants-TheWord (and (isa :NOUN Sweatpants))
 (frame FN_Clothing) (bindingTemplate (TheList (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sweatshirt-TheWord (and (isa :NOUN Sweatshirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent clothingStyle)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 2) (0 1 0))
   ((0 0 1) (0 1 0)) ((0 0 0) (0 1 0)) ((0 0 2) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList "swedish") Krona-TheWord
 (and (isa :NOUN Krona-Sweden)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swedish-TheWord (and (isa :NOUN SwedishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sweep-TheWord (and (isa :NOUN SweepingAnArea))
 (frame FN_Scouring)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ground fe_searcher))
   (:OBLIQUE-OBJECT ((PPFn through) fe_ground) ((PPFn by) fe_searcher)
    ((PPFn for) objectSought) ((PPFn of) objectSought)
    (N fe_ground purposeOfEvent fe_searcher objectSought)
    ((PPFn in) fe_ground temporallyIntersects) (NP temporallyIntersects)
    (AJP fe_degree temporallyIntersects))
   (:GEN (Poss fe_searcher temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 7 1)) ((1 4 3)) ((1 1 0)) ((0 0 1)) ((1 4 2)) ((0 0 0))
   ((1 4 2) (2 0 1)) ((1 4 2) (1 5 1)) ((0 0 1) (1 3 0)) ((1 5 0) (1 6 0))
   ((1 2 0) (1 4 0)) ((1 4 2) (1 5 0)) ((1 4 1) (1 6 0) (1 7 0))
   ((1 0 0) (1 4 2) (1 7 0)) ((1 0 0) (1 5 1) (1 7 0) (2 0 0)))))

(FNNounSemtrans (TheList) Sweep-TheWord
 (and (isa :NOUN Examination-Investigation)) (frame FN_Scrutiny)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sweet") Oil-TheWord (and (isa :NOUN OliveOil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sweet") Potato-TheWord
 (and (isa :NOUN SweetPotato-Foodstuff)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "sweet") Potato-TheWord
 (and (isa :NOUN SweetPotatoPlant)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sweet-TheWord (and (isa :NOUN SweetTastingFood))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor activeIngredientsOfType)
    (AJP fe_descriptor activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Sweetener-TheWord (and (isa :NOUN Sweetener))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Sweetening-TheWord (and (isa :NOUN Sweetener))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swig-TheWord (and (isa :NOUN DrinkingASip))
 (frame FN_Ingestion)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) consumedObject) ((PPFn from) from-Generic))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "swim") Mask-TheWord (and (isa :NOUN Mask-ForWater))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swim-TheWord (and (isa :NOUN Swimming-Generic))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn off) situationLocation)
    ((PPFn round) situationLocation) ((PPFn under) situationLocation)
    ((PPFn of) distanceTranslated) ((PPFn to) to-Generic)
    (AJP distanceTranslated fe_manner) ((PPFn across) trajectory-Complete)
    ((PPFn through) trajectory-Complete)
    ((PPFn at) situationLocation eventOccursAt) ((PPFn by) performedBy)
    ((PPFn from) from-Generic) (N duration temporallyIntersects)
    ((PPFn in) situationLocation temporallyIntersects)
    (AVP temporallyIntersects))
   (:GAP (INI situationLocation performedBy) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 10 0)) ((3 0 0)) ((0 0 0)) ((1 7 0)) ((1 6 0)) ((1 5 1))
   ((1 11 0)) ((1 3 0)) ((1 12 0)) ((1 8 0)) ((0 0 0) (1 13 0))
   ((0 0 0) (3 0 0)) ((1 8 1) (1 9 0)) ((1 6 0) (1 13 0)) ((0 0 0) (1 5 1))
   ((0 0 0) (1 2 0)) ((0 0 0) (1 12 0)) ((1 5 0) (1 12 0))
   ((0 0 0) (1 5 1) (3 0 0)) ((1 5 1) (1 6 0) (1 12 1))
   ((0 0 0) (1 0 0) (1 11 1)) ((0 0 0) (1 8 1) (1 12 0))
   ((0 0 0) (1 1 0) (1 5 1)) ((0 0 0) (1 5 1) (1 12 0))
   ((0 0 0) (1 4 0) (1 6 0) (1 10 0)))))

(FNNounSemtrans (TheList "swim") Fin-TheWord (and (isa :NOUN Fin-Artifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swimmer-TheWord (and (isa :NOUN Swimmer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming") Event-TheWord
 (and (isa :NOUN PlayingOf-SwimmingSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming") Event-TheWord
 (and (isa :NOUN SwimmingRaceEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming") Fin-TheWord (and (isa :NOUN Fin-Artifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming") Goggles-TheWord
 (and (isa :NOUN SwimmingGoggles)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming") Meet-TheWord
 (and (isa :NOUN SwimmingRaceEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming" "pool") Cover-TheWord
 (and (isa :NOUN SwimmingPoolCover)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swimming") Trunks-TheWord
 (and (isa :NOUN SwimmingTrunks)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swimsuit-TheWord (and (isa :NOUN SwimSuit))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent clothingStyle)
    (N fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 2)))))

(FNNounSemtrans (TheList) Swindle-TheWord (and (isa :NOUN SwindlingAnAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swine-TheWord (and (isa :NOUN Pig)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swing-TheWord (and (isa :NOUN Swing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swing-TheWord
 (and (isa :NOUN MovementEvent) (not (isa :NOUN Translocation)))
 (frame FN_Moving_in_place) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swiss" "army") Knife-TheWord
 (and (isa :NOUN PocketKnife) (isa :NOUN HandTool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swiss") Cheese-TheWord (and (isa :NOUN Swiss-Cheese))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swiss") Franc-TheWord (and (isa :NOUN Franc-Swiss))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swiss-TheWord (and (isa :NOUN SwissPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Switch-TheWord (and (isa :NOUN Switch))
 (frame FN_Controller_object)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP activeIngredientsOfType)
    (N fe_controlled_entity deviceUse)
    (VPbrst activeIngredientsOfType deviceUse))
   (:GAP (DEN objectControlled))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 1)) ((0 2 0)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Switch-TheWord (and (isa :NOUN ElectricalSwitch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Switchblade-TheWord (and (isa :NOUN Switchblade))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Switchboard-TheWord (and (isa :NOUN Switchboard))
 (frame FN_Controller_object)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_controlled_entity) (AJP activeIngredientsOfType))
   (:GAP (DEN objectControlled))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "switched" "mode" "power") Supply-TheWord
 (and (isa :NOUN SwitchedModePowerSupply)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "swivel") Chair-TheWord (and (isa :NOUN SwivelChair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sword-TheWord (and (isa :NOUN Sword))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP mainConstituent activeIngredientsOfType deviceUse)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 0 2)) ((0 0 1)) ((0 1 0)) ((0 0 0))
   ((0 0 1) (0 1 1)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Syllabary-TheWord (and (isa :NOUN SyllabicWriting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Syllable (and (isa :NOUN WordConstituent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Symbol-TheWord (and (isa :NOUN SymbolicThing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Symbol-TheWord
 (and (isa :NOUN WritingSymbolCharacter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Symmetry-TheWord (and (isa :NOUN ShapeSymmetry))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sympathy-TheWord (and (isa :NOUN Sympathy))
 (frame FN_Emotion_directed)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn eventAffectsBodyPart))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) objectActedOn)
    ((PPFn for) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn with) (InverseBinaryPredicateFn explaines-Generic))
    ((PPFn towards) (InverseBinaryPredicateFn explaines-Generic)))
   (:NOUN (N objectActedOn)) (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 0)) ((1 2 0)) ((0 0 1)) ((3 0 0)) ((1 1 0))
   ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0)) ((1 2 0) (2 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (0 0 0) (1 2 0)) ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Symphony-TheWord (and (isa :NOUN Symphony))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Symptom-TheWord
 (and (isa :NOUN PhysiologicalConditionType))
 (frame FN_Condition_symptom_relation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Symptom-TheWord (and (isa :NOUN Indication))
 (frame FN_Sign)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_indicator) (Sfin fe_indicator))
   (:OBLIQUE-OBJECT ((PPFn of) fe_indicated))
   (:GAP (DNI fe_indicated) (DEN fe_indicator))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 1 0) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Symptom-TheWord
 (and (isa :NOUN PhysiologicalConditionType)) (frame FN_Sign)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_indicator) (Sfin fe_indicator))
   (:OBLIQUE-OBJECT ((PPFn of) fe_indicated))
   (:GAP (DNI fe_indicated) (DEN fe_indicator))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 1 0) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Symptom-TheWord (and (isa :NOUN Sign))
 (frame FN_Sign)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_indicator) (Sfin fe_indicator))
   (:OBLIQUE-OBJECT ((PPFn of) fe_indicated))
   (:GAP (DNI fe_indicated) (DEN fe_indicator))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 1 0) (1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Synagogue-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Synagogue-TheWord
 (and (isa :NOUN Synagogue-Building)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Syndrome-TheWord (and (isa :NOUN AilmentCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Synopsis-TheWord
 (and (isa :NOUN (MakingFn Summary-CW))) (frame FN_Summarizing)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Syntax-TheWord
 (and (isa :NOUN SyntaxSpecificationSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Synthesis-TheWord
 (and (isa :NOUN
       (IntentionallyFn (CollectionIntersection2Fn CreationEvent Action))))
 (frame FN_Intentionally_create)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) outputsCreated))
   (:GAP (INI performedBy))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Synthesis-TheWord (and (isa :NOUN ChemicalSynthesis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Synthesizer-TheWord
 (and (isa :NOUN ElectronicSynthesizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "synthetic") Cloth-TheWord
 (and (isa :NOUN SyntheticCloth)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "synthetic") Crude-TheWord
 (and (isa :NOUN SyntheticCrude)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "synthetic") Rubber-TheWord
 (and (isa :NOUN Rubber-Synthetic)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "synthetic" "motor") Oil-TheWord
 (and (isa :NOUN MotorOil-Synthetic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Syphilis-TheWord (and (isa :NOUN Syphilis))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "syrian" "monetary") Unit-TheWord
 (and (isa :NOUN (UnitOfMoneyOfGeopoliticalEntityFn Syria))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "syrian") Pound-TheWord (and (isa :NOUN Pound-Syria))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "syringe") Plunger-TheWord
 (and (isa :NOUN PlungerPartOfSyringe)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Syringe-TheWord (and (isa :NOUN HypodermicSyringe))
 (frame FN_Medical_instruments)
 (bindingTemplate (TheList (:GAP (DEN instrument-Generic))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Syrup-TheWord (and (isa :NOUN Syrup)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) System-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N deviceUse) ((PPFn for) deviceUse) (VPto deviceUse)
    (VPing deviceUse) (AJP deviceUse fe_user))
   (:GAP (DEN fe_gizmo)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 4 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (0 2 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 4 1)))))

(FNNounSemtrans (TheList) System-TheWord (and (isa :NOUN System))
 (frame FN_Set_of_interrelated_entities) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) System-TheWord (and (isa :NOUN System))
 (frame FN_System)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor fe_function) ((PPFn of) fe_function)
    (VPing fe_function) (AJP fe_descriptor fe_function)
    (N fe_component_entities fe_function ownerOfProprietaryThing
     topicOfIndividual))
   (:GAP (DEN fe_complex) (INI fe_component_entities fe_function)
    (DNI fe_component_entities fe_function topicOfIndividual)
    (2nd topicOfIndividual))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 4 3)) ((0 1 0)) ((0 2 0)) ((0 4 1)) ((0 0 1)) ((0 4 0))
   ((0 4 1) (2 0 0)) ((0 3 0) (0 4 1)) ((0 0 0) (0 0 1)) ((0 4 0) (0 4 2)))))

(FNNounSemtrans (TheList) T-Cell-TheWord (and (isa :NOUN TLymphocyte))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) T-Rex-TheWord (and (isa :NOUN TyrannosaurusRex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) T-Shirt-TheWord (and (isa :NOUN T-Shirt))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn with) fe_descriptor)
    (N fe_descriptor mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 3 0)) ((0 3 0) (0 3 1)) ((0 2 1) (0 3 0))
   ((0 3 0) (0 3 0)) ((0 1 0) (0 2 0) (2 0 0)) ((0 0 0) (0 3 0) (0 3 0)))))

(FNNounSemtrans (TheList) Tab-TheWord (and (isa :NOUN Tab)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tabby-TheWord (and (isa :NOUN TabbyCat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tabernacle-TheWord
 (and (isa :NOUN ReligiousBuilding)) (frame FN_Buildings)
 (bindingTemplate (TheList (:GAP (DEN fe_building)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table") Game-TheWord (and (isa :NOUN TableGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table") Knife-TheWord (and (isa :NOUN TableKnife))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table") Lamp-TheWord (and (isa :NOUN TableLamp))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Table-Lamp-TheWord (and (isa :NOUN TableLamp))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table" "of") Contents-TheWord
 (and (isa :NOUN TableOfContents)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table") Saw-TheWord (and (isa :NOUN TableSaw))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table" "tennis") Ball-TheWord
 (and (isa :NOUN PingPongBall)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "table") Tennis-TheWord
 (and (isa :NOUN TableTennisGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Table-TheWord
 (and (isa :NOUN Table-PieceOfFurniture)) (frame FN_Furniture)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tablecloth-TheWord (and (isa :NOUN TableCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tablefork-TheWord (and (isa :NOUN DinnerFork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tableland-TheWord (and (isa :NOUN Plateau))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tablespoon-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Tablespoon-TheWord
 (and (isa :NOUN TableSpoon-MeasuringTool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tablespoonfull-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tablet") Computer-TheWord
 (and (isa :NOUN TabletComputer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tachometer-TheWord (and (isa :NOUN Tachometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tack-TheWord (and (isa :NOUN Tack))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent deviceUse))
   (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Tack-TheWord (and (isa :NOUN HorseTack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tackle") Box-TheWord (and (isa :NOUN TackleBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tackle-TheWord
 (and (isa :NOUN FootballOffensiveTackle)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tackle-TheWord (and (isa :NOUN Tackling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taco-TheWord (and (isa :NOUN Taco)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tactic-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (DEN by-Underspecified))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tadpole-TheWord (and (isa :NOUN (JuvenileFn Frog)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tae" "kwon") Do-TheWord
 (and (isa :NOUN TaekwondoActivity)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tag-TheWord (and (isa :NOUN Tag-IBO)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tahitian-TheWord (and (isa :NOUN TahitianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tai") Dam-TheWord (and (isa :NOUN TaiDamLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tai") Long-TheWord (and (isa :NOUN ShanLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taiga-TheWord (and (isa :NOUN Taiga))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP parts)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "tail") Fin-TheWord (and (isa :NOUN TailFin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tail") Light-TheWord
 (and (isa :NOUN AutomobileTailLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tail-TheWord (and (isa :NOUN Tail-BodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss fe_descriptor ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((0 0 0) (3 0 0))
   ((1 1 0) (3 0 1)) ((1 0 0) (3 0 1)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (3 0 1)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Tail-TheWord (and (isa :NOUN Entourage))
 (frame FN_Entourage) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tail-TheWord (and (isa :NOUN AirplaneTailAssembly))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tailgate-TheWord (and (isa :NOUN Tailgate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taillight-TheWord
 (and (isa :NOUN AutomobileTailLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tailor-TheWord (and (isa :NOUN Tailor-Professional))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taka-TheWord (and (isa :NOUN Taka-Bangladesh))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Take-TheWord
 (and (isa :NOUN CycLSentence-Assertible)
      (relationExistsInstance opinions IntelligentAgent :NOUN))
 (frame FN_Opinion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Takeover-TheWord
 (and (isa :NOUN DefeatingAnOpponent)) (frame FN_Conquering)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A winnerInConflict) (N winnerInConflict)
    ((PPFn by) winnerInConflict) ((PPFn of) maleficiary)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (DNI maleficiary)) (:GEN (Poss winnerInConflict))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 4 1)) ((0 3 0) (2 0 0))
   ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Takeover-TheWord (and (isa :NOUN Takeover))
 (frame FN_Conquering)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A winnerInConflict) (N winnerInConflict)
    ((PPFn by) winnerInConflict) ((PPFn of) objectTaken)
    ((PPFn in) eventOccursAt temporallyIntersects))
   (:GAP (DNI objectTaken)) (:GEN (Poss winnerInConflict))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 4 1)) ((0 3 0) (2 0 0))
   ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Tala-TheWord (and (isa :NOUN Tala-WesternSamoa))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Talc-TheWord (and (isa :NOUN Talc)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Talk-TheWord (and (isa :NOUN Talking))
 (frame FN_Discussion)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_interlocutor_1 fe_interlocutors situationTopic))
   (:OBLIQUE-OBJECT ((PPFn with) fe_depictive fe_interlocutor_2)
    ((PPFn including) fe_interlocutor_2) ((PPFn between) fe_interlocutors)
    (A fe_interlocutors) ((PPFn behind) fe_manner) ((PPFn at) eventOccursAt)
    ((PPFn towards) purposeOfEvent) (VPto purposeOfEvent)
    (AVP temporallyIntersects) ((PPFn during) temporallyIntersects)
    ((PPFn since) temporallyIntersects) (NP temporallyIntersects)
    (AJP fe_depictive fe_interlocutors fe_manner purposeOfEvent
     temporallyIntersects)
    ((PPFn about) situationTopic)
    ((PPFn on) temporallyIntersects situationTopic)
    ((PPFn over) situationTopic)
    ((PPFn in) eventOccursAt purposeOfEvent temporallyIntersects
     situationTopic)
    ((PPingFn on) situationTopic)
    (N fe_depictive fe_interlocutors situationTopic))
   (:GAP (CNI fe_interlocutor_1) (INI fe_interlocutors situationTopic)
    (DNI fe_interlocutor_1 fe_interlocutor_2 fe_interlocutors situationTopic))
   (:GEN (Poss fe_interlocutor_1))))
 (groupPatterns
  (TheSet ((1 14 1)) ((0 0 2)) ((1 18 2)) ((1 12 1)) ((1 2 0)) ((1 18 1))
   ((1 0 1)) ((1 14 1) (1 18 2)) ((1 4 0) (1 13 0)) ((1 2 0) (1 18 2))
   ((0 0 1) (1 18 2)) ((1 3 0) (1 14 1)) ((1 2 0) (1 14 0)) ((1 2 0) (1 12 4))
   ((1 2 0) (1 16 0)) ((1 16 0) (1 18 1)) ((1 12 2) (1 14 1))
   ((1 5 0) (1 12 2)) ((1 2 0) (1 12 2)) ((1 2 0) (1 3 0)) ((1 0 1) (1 15 0))
   ((1 0 1) (1 14 0)) ((1 0 1) (1 12 3)) ((0 0 0) (1 14 1)) ((0 0 0) (1 13 0))
   ((1 0 1) (1 16 1)) ((1 0 1) (3 0 0)) ((0 0 0) (1 0 1)) ((0 0 1) (1 18 0))
   ((0 0 1) (1 16 0) (1 18 2)) ((1 2 0) (1 14 0) (1 16 0))
   ((0 0 1) (1 14 0) (1 16 0)) ((1 12 1) (1 14 0) (1 16 0))
   ((0 0 1) (1 12 2) (1 14 0)) ((0 0 0) (1 0 1) (1 17 0))
   ((0 0 0) (1 0 1) (1 15 0)) ((0 0 0) (1 0 1) (1 14 1))
   ((0 0 0) (1 0 1) (1 9 0)) ((1 1 0) (1 12 2) (1 14 1))
   ((0 0 0) (1 0 1) (1 12 2)) ((0 0 0) (1 0 1) (3 0 0))
   ((1 2 0) (1 12 0) (1 14 0)) ((1 0 1) (1 12 0) (1 13 0))
   ((1 11 0) (1 16 0) (1 18 1) (1 18 2)) ((1 7 0) (1 10 0) (1 12 1) (1 16 0))
   ((0 0 0) (1 0 1) (1 14 0) (1 14 1)) ((0 0 0) (1 0 1) (1 8 0) (1 13 0))
   ((0 0 0) (1 0 1) (1 6 0) (1 14 0)) ((0 0 0) (1 0 1) (1 16 0) (1 16 3))
   ((0 0 0) (1 0 1) (1 14 0) (1 16 0)) ((0 0 0) (1 0 1) (1 12 2) (1 15 0))
   ((1 0 0) (1 0 1) (1 12 2) (1 16 2))
   ((0 0 0) (1 0 1) (1 14 0) (1 14 1) (1 16 0))
   ((0 0 0) (1 0 1) (1 12 2) (1 14 0) (1 16 0)))))

(FNNounSemtrans (TheList) Tally-TheWord (and (isa :NOUN TotalFunction))
 (frame FN_Amounting_to)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_attribute) ((PPFn of) fe_attribute)
    ((PPFn from) fe_numbers))
   (:GAP (INI fe_numbers) (2nd sum))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList "talmudic") Literature-TheWord
 (and (isa :NOUN TalmudicLiterature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Talon-TheWord (and (isa :NOUN Talon))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Tamale-TheWord (and (isa :NOUN Tamale))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tambourine-TheWord (and (isa :NOUN Tambourine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tamil-TheWord (and (isa :NOUN EthnicGroupOfTamils))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tampon-TheWord (and (isa :NOUN Tampon-Feminine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tan-TheWord (and (isa :NOUN BeigeColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tan-TheWord
 (and (isa :NOUN Suntanned-PhysicalCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tangent-TheWord (and (isa :NOUN TangentFn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tangible") Puzzle-TheWord
 (and (isa :NOUN Puzzle-TangibleProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tank-TheWord (and (isa :NOUN LiquidStorageTank))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn at) fe_relative_location) ((PPFn on) fe_relative_location)
    (N deviceUse) (AJP mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 4 1)) ((2 0 0)) ((0 0 0)) ((0 2 0) (0 3 0))
   ((0 1 0) (0 3 0)) ((0 3 0) (2 0 0)) ((0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList) Tank-TheWord (and (isa :NOUN Tank-Vehicle))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tank-Top-TheWord (and (isa :NOUN TankTop))
 (frame FN_Clothing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tanker") Truck-TheWord (and (isa :NOUN TankerTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tankful-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tantalum-TheWord (and (isa :NOUN Tantalum))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tanto-TheWord (and (isa :NOUN Tanto)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tanzanian") Shilling-TheWord
 (and (isa :NOUN Shilling-Tanzania)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taoism-TheWord (and (isa :NOUN Taoism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tap") Dance-TheWord (and (isa :NOUN TapDance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tap-TheWord (and (isa :NOUN Tap-FlowControlDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tape") Cassette-TheWord
 (and (isa :NOUN MagneticTapeCassette)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tape") Measure-TheWord (and (isa :NOUN TapeMeasure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tape") Recorder-TheWord
 (and (isa :NOUN AudioTapePlayer-Recorder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tape-TheWord (and (isa :NOUN AdhesiveTape))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tape-TheWord (and (isa :NOUN Tape)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tape-TheWord (and (isa :NOUN TapeMeasure))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tarantula-TheWord (and (isa :NOUN Tarantula))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "target") Rifle-TheWord (and (isa :NOUN TargetRifle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Target-TheWord (and (isa :NOUN AimingSomething))
 (frame FN_Aiming)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) instrument-Generic) (AJP outcomeOfAction)
    ((PPFn because of) purposeOfEvent) (NP intendedToLocation)
    ((PPFn in) intendedToLocation intendedToLocation))
   (:GAP (CNI doneBy))))
 (groupPatterns
  (TheSet ((0 2 0) (0 3 0)) ((0 0 0) (0 1 0) (0 1 0) (0 4 0) (0 4 0)))))

(FNNounSemtrans (TheList) Target-TheWord (and (isa :NOUN Target-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Target-TheWord (and (isa :NOUN Goal))
 (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attribute) (VPto to-Generic)
    ((PPingFn of) to-Generic) ((PPFn for) fe_restrictor)
    (N fe_attribute to-Generic fe_restrictor fe_value)
    ((PPFn of) to-Generic fe_value) (NP to-Generic fe_value))
   (:GEN (Poss performedBy fe_restrictor))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 4 2)) ((1 2 0)) ((1 5 0)) ((1 6 0)) ((1 4 0))
   ((1 5 0) (2 0 1)) ((1 4 0) (1 6 1)) ((1 4 0) (1 4 3)) ((1 3 0) (2 0 0))
   ((1 1 0) (2 0 0)) ((1 5 0) (2 0 0)) ((1 4 1) (2 0 0)) ((1 4 0) (2 0 0))
   ((1 3 0) (1 4 0) (1 6 1)) ((1 4 0) (1 5 1) (2 0 0))
   ((0 0 0) (1 0 0) (1 4 3)))))

(FNNounSemtrans (TheList) Tarn-TheWord (and (isa :NOUN Lake))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N (InverseBinaryPredicateFn nameString)) ((PPFn at) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Tartan-TheWord (and (isa :NOUN PlaidPattern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tartar-TheWord (and (isa :NOUN Tartar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Task-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance obligatedAgents Obligation :NOUN))
 (frame FN_Being_obligated)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) obligationsCreated) (VPto obligationsCreated)
    (A frequencyOfEvent) (AVP temporallyIntersects))
   (:GAP (INI obligationsCreated) (DNI doneBy))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList "tasmanian") Devil-TheWord
 (and (isa :NOUN TasmanianDevil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tassel-TheWord (and (isa :NOUN Tassel))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn outfitParts)))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)))
   (:GAP (DEN parts) (2nd wearer))))
 (groupPatterns (TheSet ((1 0 0)) ((1 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Taste-TheWord
 (and (isa :NOUN AestheticDiscrimination)) (frame FN_Perception_active)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn of) fe_phenomenon) (AJP fe_manner fe_phenomenon)
    ((PPFn in) actorPartsInvolved eventOccursAt))
   (:GAP (INI performedBy) (DNI fe_phenomenon)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0)) ((0 0 0) (1 0 0)) ((1 1 1) (1 2 0))
   ((1 0 0) (1 1 0) (1 2 0)) ((0 0 0) (1 0 0) (1 2 1) (3 0 0)))))

(FNNounSemtrans (TheList) Taste-TheWord (and (isa :NOUN TastePerception))
 (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP from-Generic))
   (:OBLIQUE-OBJECT ((PPFn in) actorPartsInvolved) (AJP fe_descriptor)
    ((PPingFn like) fe_descriptor) (N fe_descriptor) ((PPFn of) from-Generic))
   (:GAP (INI from-Generic)) (:GEN (Poss from-Generic))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 0)) ((0 0 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 3 0))
   ((1 1 0) (1 4 0)) ((1 1 0) (1 2 0)) ((1 0 0) (1 1 0))
   ((1 1 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Tastebud-TheWord (and (isa :NOUN TasteBud))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tatar-TheWord (and (isa :NOUN EthnicGroupOfTatars))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tatters-TheWord (and (isa :NOUN Ragged))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Tattoo-TheWord (and (isa :NOUN Tattoo))
 (frame FN_Body_decoration)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) (AJP fe_decoration_descriptor)
    ((PPFn of) fe_picture) (N fe_picture))
   (:GAP (DEN decorativeObjectsApplied)) (:GEN (Poss objectDecorated))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 3 0)) ((0 1 0)) ((2 0 0)) ((0 0 0)) ((0 1 0) (0 2 0))
   ((0 1 0) (0 1 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Taurus-TheWord (and (isa :NOUN Taurus-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tavern-TheWord (and (isa :NOUN Bar-Place))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tax") Form-TheWord (and (isa :NOUN TaxForm-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tax") Return-TheWord (and (isa :NOUN TaxReturn))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tax-TheWord (and (isa :NOUN Tax-COC)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taxi-TheWord (and (isa :NOUN TaxiCab))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) fe_itinerary)) (:GAP (DEN transporter))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Taxidriver-TheWord (and (isa :NOUN TaxiDriver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taxon-TheWord (and (isa :NOUN BiologicalTaxon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "taxonomic") Group-TheWord
 (and (isa :NOUN BiologicalTaxon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taxonomy-TheWord (and (isa :NOUN Taxonomy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tea") Cup-TheWord (and (isa :NOUN Teacup))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tea") Leaf-TheWord
 (and (isa :NOUN (LeafFn TeaPlant))) (frame FN_Plants)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tea") Maker-TheWord (and (isa :NOUN TeaMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tea-TheWord (and (isa :NOUN Tea-Beverage))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tea-TheWord (and (isa :NOUN TeaPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teacher-TheWord (and (isa :NOUN Teacher))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP eventOccursAt studentOf (InverseBinaryPredicateFn teacherTypeOfField)
     instructor))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn from) eventOccursAt)
    ((PPFn in) eventOccursAt) ((PPFn to) eventOccursAt)
    (N eventOccursAt educationLevel
     (InverseBinaryPredicateFn teacherTypeOfField))
    (AJP educationLevel (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn of) studentOf (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPingFn of) (InverseBinaryPredicateFn teacherTypeOfField))
    (NP instructor))
   (:GAP (INI studentOf (InverseBinaryPredicateFn teacherTypeOfField))
    (DEN instructor))
   (:GEN (Poss studentOf))))
 (groupPatterns
  (TheSet ((0 0 3)) ((1 8 0)) ((1 7 0)) ((1 6 1)) ((0 0 2)) ((1 4 2)) ((1 5 1))
   ((3 0 0)) ((1 5 0)) ((1 4 1)) ((1 3 0)) ((1 2 0)) ((1 1 0)) ((0 0 0))
   ((0 0 3) (1 7 0)) ((1 4 2) (3 0 0)) ((0 0 1) (1 4 2)) ((0 0 3) (1 4 1))
   ((0 0 3) (1 5 0)) ((1 5 0) (1 6 0)) ((1 0 0) (1 5 1)) ((1 4 0) (1 4 2))
   ((0 0 3) (1 4 2) (3 0 0)) ((0 0 3) (1 0 0) (1 4 2))
   ((0 0 3) (1 0 0) (1 4 2) (3 0 0)))))

(FNNounSemtrans (TheList) Teacher-TheWord (and (isa :NOUN Teacher))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "teaching") Method-TheWord
 (and (isa :NOUN TeachingMethod)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teak-TheWord (and (isa :NOUN TeakTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Team-TheWord
 (and (isa :NOUN (GroupFn IntelligentAgent))) (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_aggregate_property) (AJP fe_aggregate_property)
    (NP fe_aggregate_property) (N fe_aggregate_property fe_domain)
    ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (INI fe_individuals))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 0 0)) ((0 1 0) (0 4 0)))))

(FNNounSemtrans (TheList) Team-TheWord (and (isa :NOUN Team)) (frame FN_Team)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teamster-TheWord (and (isa :NOUN TruckDriver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teapot-TheWord (and (isa :NOUN HotBeveragePot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tear-TheWord (and (isa :NOUN Teardrop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tear-TheWord (and (isa :NOUN Ripping))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teardrop-TheWord (and (isa :NOUN Teardrop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tear") Gas-TheWord (and (isa :NOUN TearGas))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teasel-TheWord (and (isa :NOUN Teasel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teaspoon-TheWord (and (isa :NOUN Teaspoon))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_relative_location)
    (AJP activeIngredientsOfType))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Teaspoon-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_count))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Teaspoon-TheWord
 (and (isa :NOUN TeaSpoon-MeasuringTool)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teaspoonful-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Technetium-TheWord (and (isa :NOUN Technetium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "technical") Manager-TheWord
 (and (isa :NOUN TechnicalManager)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Technician-TheWord (and (isa :NOUN Technician))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A comesFrom-Generic) (AJP comesFrom-Generic))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Technique-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) doneBy) (AJP purposeOfEvent) (A purposeOfEvent))
   (:GAP (DEN by-Underspecified))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Technique-TheWord (and (isa :NOUN TechniqueType))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Technology-TheWord
 (and (isa :NOUN Technology-Artifact)) (frame FN_Artifact)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (A performedBy activeIngredientsOfType) (VPto deviceUse)
    (N productsCreated mainConstituent (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType deviceUse)
    (AJP performedBy activeIngredientsOfType deviceUse) ((PPFn for) deviceUse))
   (:GAP (DEN productsCreated)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 1 0)) ((1 2 4)) ((1 3 2)) ((1 2 3)) ((1 3 1)) ((1 0 1))
   ((1 2 1)) ((1 3 0)) ((1 0 0)) ((1 2 0)) ((1 2 4) (1 3 2)) ((1 0 1) (1 3 2))
   ((1 2 3) (1 3 1)) ((1 3 1) (1 3 1)) ((1 2 4) (3 0 0)) ((0 0 0) (1 1 0))
   ((1 2 3) (1 3 0)) ((1 0 0) (1 2 3)) ((1 0 1) (1 2 2) (1 2 3)))))

(FNNounSemtrans (TheList) Technology-TheWord (and (isa :NOUN PhysicalDevice))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_power_source) ((PPFn for) deviceUse) (N deviceUse)
    (NP deviceUse) (AJP fe_descriptor deviceUse fe_user))
   (:GAP (DEN fe_gizmo) (2nd fe_user))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 4 1)) ((0 4 0)) ((0 2 0) (0 4 2))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "tectonic") Plate-TheWord
 (and (isa :NOUN TectonicPlate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "teddy") Bear-TheWord (and (isa :NOUN TeddyBear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teddy-Bear-TheWord (and (isa :NOUN TeddyBear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teddy-TheWord (and (isa :NOUN Lingerie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0) (0 1 1)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList) Teddy-TheWord (and (isa :NOUN TeddyBear))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teenager-TheWord (and (isa :NOUN HumanTeenager))
 (frame FN_People_by_age)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBLIQUE-OBJECT (A age) ((PPFn at) age) ((PPFn of) age)
    (VPing fe_descriptor) ((PPFn in) age fe_descriptor)
    ((PPFn on) fe_descriptor) ((PPFn from) comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity fe_persistent_characteristic)
    (N age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    ((PPFn with) fe_descriptor fe_persistent_characteristic))
   (:GAP (DEN age fe_person)) (:APPOSITIVE (Num age) (NP fe_person))))
 (groupPatterns
  (TheSet ((1 9 1)) ((1 7 3)) ((1 6 0)) ((1 7 2)) ((1 3 0)) ((1 9 0)) ((1 5 0))
   ((1 8 1)) ((1 7 1)) ((1 2 0)) ((1 4 0)) ((1 8 0)) ((0 0 0)) ((1 7 0))
   ((1 0 0)) ((1 7 3) (1 9 1)) ((1 7 3) (1 8 3)) ((1 7 3) (1 8 2))
   ((1 4 1) (1 7 3)) ((1 7 1) (1 7 2)) ((1 8 1) (1 9 0)) ((0 0 0) (1 7 0))
   ((1 1 0) (1 7 3)) ((1 8 4) (3 1 0)) ((0 0 0) (1 7 3)) ((1 6 0) (3 1 0))
   ((0 0 0) (1 7 2)) ((1 7 2) (3 1 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 6 0) (1 7 3)) ((1 7 2) (3 0 0) (3 1 0))
   ((1 0 0) (1 7 0) (1 7 3)) ((0 0 0) (1 7 1) (1 7 1) (1 7 1)))))

(FNNounSemtrans (TheList "teething") Toy-TheWord (and (isa :NOUN Teether))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Telecast-TheWord (and (isa :NOUN TVBroadcasting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telemetry" "detection") Device-TheWord
 (and (isa :NOUN TelemetryDetectionDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telemetry") Detection-TheWord
 (and (isa :NOUN TelemetryDetection)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Company-TheWord
 (and (isa :NOUN TelephoneCompany)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Interface-TheWord
 (and (isa :NOUN TelephoneInterface)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone" "jack") Adapter-TheWord
 (and (isa :NOUN PhoneJackAdapter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone" "number" "signal") Generator-TheWord
 (and (isa :NOUN TelephoneNumberSignalGenerator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Operator-TheWord
 (and (isa :NOUN TelephoneOperator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Plug-TheWord
 (and (isa :NOUN TelephonePlug)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Pole-TheWord
 (and (isa :NOUN TelephonePole)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Receiver-TheWord
 (and (isa :NOUN TelephoneReceiver)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") System-TheWord
 (and (isa :NOUN TelephoneSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Telephone-TheWord (and (isa :NOUN Telephone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "telephone") Wire-TheWord
 (and (isa :NOUN TelephoneWire)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Telescope-TheWord (and (isa :NOUN Telescope))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "television") Actor-TheWord
 (and (isa :NOUN ActorOnTV)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "television") Card-TheWord
 (and (isa :NOUN ComputerTVCard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "television") Receiver-TheWord
 (and (isa :NOUN TelevisionSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "television") Set-TheWord
 (and (isa :NOUN TelevisionSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Television-TheWord (and (isa :NOUN TVBroadcasting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Television-TheWord (and (isa :NOUN TelevisionSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "television") Tuner-TheWord
 (and (isa :NOUN TelevisionTuner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Teller-TheWord (and (isa :NOUN BankTeller))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Telling-TheWord (and (isa :NOUN Informing))
 (frame FN_Judgment_direct_address) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tellurium-TheWord (and (isa :NOUN Tellurium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Telophase-TheWord (and (isa :NOUN Telophase))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Temblor-TheWord (and (isa :NOUN Earthquake))
 (frame FN_Moving_in_place) (bindingTemplate (TheList (:GAP (INI doneBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Temerity-TheWord
 (and (isa :NOUN RudeAction) (relationInstanceExists evokes :NOUN Resentment))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Temp-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance jobPosition TemporaryJobPosition :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tempera-TheWord (and (isa :NOUN TemperaPaint))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "temperature") Gauge-TheWord
 (and (isa :NOUN TemperatureGauge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "temperature" "indicator") Light-TheWord
 (and (isa :NOUN TemperatureIndicatorLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "temperature") Indicator-TheWord
 (and (isa :NOUN TemperatureIndicatorLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Temperature-TheWord (and (isa :NOUN Temperature))
 (frame FN_Ambient_temperature)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) ((PPFn of) ambientTemperature))
   (:GAP (DEN fe_attribute) (DNI eventOccursAt))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Temperature-TheWord (and (isa :NOUN Temperature))
 (frame FN_Temperature)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn of) temperatureOfObject) (AJP temperatureOfObject)
    ((PPFn in) temperatureOfObject))
   (:GAP (DEN temperatureOfObject))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "temperature") Unit-TheWord
 (and (isa :NOUN UnitOfTemperature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Temple-TheWord (and (isa :NOUN Forehead))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP orientation))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Temple-TheWord (and (isa :NOUN Temple))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A performedBy) ((PPFn for) fe_function)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_descriptor (InverseBinaryPredicateFn nameString)
     activeIngredientsOfType)
    (N (InverseBinaryPredicateFn nameString) activeIngredientsOfType)
    (AJP fe_descriptor (InverseBinaryPredicateFn nameString) startingDate
     activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 5 3)) ((0 3 1)) ((0 2 0)) ((0 4 0)) ((0 5 1)) ((0 1 0))
   ((0 3 0)) ((0 5 0)) ((0 0 0)) ((0 5 2) (0 5 3)) ((0 3 0) (0 4 1))
   ((0 3 2) (0 5 0)))))

(FNNounSemtrans (TheList "temporal") Bone-TheWord
 (and (isa :NOUN TemporalBone)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "temporal") Lobe-TheWord
 (and (isa :NOUN TemporalLobe)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ten-dollar") Bill-TheWord
 (and (isa :NOUN TenDollarBill-US)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tenant-TheWord (and (isa :NOUN Tenant))
 (frame FN_Residence)
 (bindingTemplate
  (TheList (:GAP (DNI residesInDwelling) (DEN residents-Role))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tender-TheWord (and (isa :NOUN TenderObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tendon-TheWord (and (isa :NOUN Tendon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tenement-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tennis") Apparel-TheWord
 (and (isa :NOUN TennisApparel)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tennis") Ball-TheWord (and (isa :NOUN TennisBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tennis") Court-TheWord (and (isa :NOUN TennisCourt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tennis") Player-TheWord
 (and (isa :NOUN TennisPlayer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tennis") Racket-TheWord
 (and (isa :NOUN TennisRacket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tennis-TheWord (and (isa :NOUN Tennis-TheGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tensile") Strength-TheWord
 (and (isa :NOUN TensileStrength)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tension-TheWord (and (isa :NOUN Stress-Feeling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tent-TheWord (and (isa :NOUN Tent))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_building))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tentacle-TheWord (and (isa :NOUN Tentacle))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn at) fe_attachment) ((PPFn on) fe_attachment)
    (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 0)) ((0 0 0)) ((1 2 0)) ((1 1 0)) ((1 2 0) (1 3 0))
   ((1 2 0) (1 2 0) (3 0 0)) ((0 0 0) (1 0 0) (1 2 0) (1 2 0)))))

(FNNounSemtrans (TheList) Tepee-TheWord (and (isa :NOUN TentlikeShelter))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tequila-TheWord (and (isa :NOUN Tequila))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terbium-TheWord (and (isa :NOUN Terbium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Term-TheWord (and (isa :NOUN Thing))
 (frame FN_Simple_name)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_term))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) (NP fe_term))
   (:GAP (DNI objectActedOn fe_term) (DEN fe_term))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Term-TheWord
 (and (isa :NOUN Obligation)
      (relationExistsInstance obligationsCreated Agreement :NOUN))
 (frame FN_Terms_of_agreement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) outputsCreated))
   (:GAP (DEN fe_requirements)
    (INI outputsCreated fe_desired_state_of_affairs fe_party
     fe_regulated_entity fe_requirements))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Term-TheWord (and (isa :NOUN AgreementLineItem))
 (frame FN_Terms_of_agreement)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) outputsCreated))
   (:GAP (DEN fe_requirements)
    (INI outputsCreated fe_desired_state_of_affairs fe_party
     fe_regulated_entity fe_requirements))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Term-TheWord (and (isa :NOUN AcademicTerm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terminal-TheWord
 (and (isa :NOUN Terminal-TransferPoint)) (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_function)
    (AJP (InverseBinaryPredicateFn nameString)) (A fe_relative_location)
    (N fe_function (InverseBinaryPredicateFn nameString) eventOccursAt
     activeIngredientsOfType))
   (:GAP (DEN fe_building))))
 (groupPatterns
  (TheSet ((0 3 3)) ((0 2 0)) ((0 3 1)) ((0 1 0)) ((0 3 0)) ((0 3 2) (0 3 3))
   ((0 0 0) (0 3 3)))))

(FNNounSemtrans (TheList) Termination-TheWord
 (and (isa :NOUN DischargeWithPrejudice)) (frame FN_Firing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) (InverseBinaryPredicateFn explains-Generic))
    (AJP fe_manner) ((PPFn of) job fe_task) ((PPFn at) temporallyIntersects))
   (:GAP (2nd employees) (CNI employees) (DNI employees employer))
   (:GEN (Poss employer))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((2 0 0)) ((0 1 0) (0 3 0)) ((0 0 0) (0 2 1)))))

(FNNounSemtrans (TheList) Termination-TheWord
 (and (isa :NOUN EndingOfTemporalThing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terminator-TheWord (and (isa :NOUN Dying))
 (frame FN_Death) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Termite-TheWord (and (isa :NOUN Termite))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terrace-TheWord (and (isa :NOUN Bench-Topographical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "terrestrial") Planet-TheWord
 (and (isa :NOUN TerrestrialPlanet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terrier-TheWord
 (and (isa :NOUN Terrier-FunctionalGroup)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Territorialization-TheWord
 (and (isa :NOUN Territorialization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Territory-TheWord (and (isa :NOUN Territory))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor)
    (N fe_container_possessor fe_population)
    (AJP fe_descriptor fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 1)) ((0 2 0)) ((2 0 0)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Terror-TheWord (and (isa :NOUN Fear)) (frame FN_Fear)
 (bindingTemplate
  (TheList
   (:GAP (DNI objectActedOn (InverseBinaryPredicateFn explaines-Generic)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terror-TheWord (and (isa :NOUN TerroristAct))
 (frame FN_Terrorism) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terrorism-TheWord (and (isa :NOUN TerroristAct))
 (frame FN_Terrorism)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_terrorist))
   (:OBLIQUE-OBJECT (AJP fe_descriptor purposeOfEvent)
    (A fe_descriptor instrument-Generic eventOccursAt fe_terrorist)
    (N fe_descriptor instrument-Generic fe_organization fe_terrorist)
    ((PPFn against) victim))
   (:GAP (DEN fe_act) (DNI fe_terrorist victim))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 3)) ((1 1 3)) ((1 0 1)) ((1 1 2)) ((1 2 1)) ((1 1 1))
   ((1 2 0)) ((1 0 0)) ((1 1 0)) ((0 0 0) (1 3 0)) ((1 2 2) (1 3 0)))))

(FNNounSemtrans (TheList "terrorist") Organization-TheWord
 (and (isa :NOUN TerroristGroup)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terrorist-TheWord (and (isa :NOUN Terrorist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Terrorist-TheWord (and (isa :NOUN TerroristAgent))
 (frame FN_Terrorism)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N instrument-Generic fe_organization)
    (A fe_descriptor eventOccursAt purposeOfEvent))
   (:GAP (DEN fe_terrorist))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 2 1)) ((0 1 1)) ((0 1 0)) ((0 0 0)) ((0 2 0))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "terry") Cloth-TheWord (and (isa :NOUN TerryCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tesla") Coil-TheWord (and (isa :NOUN TeslaCoil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "test") Match-TheWord
 (and (isa :NOUN InternationalSportsCompetition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "test") Pilot-TheWord (and (isa :NOUN TestPilot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Test-TheWord (and (isa :NOUN AcademicTesting))
 (frame FN_Examination)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_examinee fe_examiner fe_knowledge))
   (:OBLIQUE-OBJECT ((PPFn at) fe_knowledge) (N fe_examination fe_knowledge)
    ((PPFn of) fe_knowledge) (AJP fe_examination fe_knowledge)
    ((PPFn for) fe_examinee fe_knowledge) ((PPFn in) fe_knowledge)
    (VPto fe_qualification) ((PPingFn of) fe_qualification))
   (:GAP (DEN fe_examination fe_examinee) (INI fe_examinee fe_examiner)
    (DNI fe_examinee fe_examiner))
   (:GEN (Poss fe_examinee fe_examiner))))
 (groupPatterns
  (TheSet ((0 0 2)) ((1 6 0)) ((1 7 0)) ((1 5 0)) ((1 4 1)) ((1 1 1)) ((1 3 1))
   ((1 2 0)) ((3 0 1)) ((0 0 0)) ((1 3 0)) ((0 0 0) (1 3 1)) ((0 0 0) (1 1 1))
   ((1 1 1) (3 0 1)) ((0 0 0) (1 6 0)) ((1 1 1) (3 0 0)) ((1 0 0) (1 4 0))
   ((0 0 1) (1 1 0)) ((0 0 0) (1 1 1) (3 0 1)) ((0 0 0) (1 3 1) (3 0 0)))))

(FNNounSemtrans (TheList) Test-TheWord (and (isa :NOUN PerformanceTesting))
 (frame FN_Operational_testing)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_tester))
   (:OBLIQUE-OBJECT ((PPFn by) by-Underspecified) ((PPFn of) fe_product)
    ((PPFn for) fe_product) (A fe_product) (VPto purposeOfEvent)
    (AVP eventOutcomes)
    (AJP fe_desired_state_of_affairs fe_manner fe_product fe_tested_property)
    (N fe_product fe_tested_property) (Sinterrog fe_tested_property)
    ((PPFn in) situationConstituents temporallyIntersects)
    ((PPFn on) temporallyIntersects) ((PPFn to) temporallyIntersects))
   (:GAP (DNI fe_product purposeOfEvent) (CNI fe_tester)
    (INI fe_desired_state_of_affairs purposeOfEvent fe_tester))
   (:GEN (Poss fe_tester))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 1)) ((1 6 3)) ((1 4 0)) ((1 6 2)) ((1 1 0)) ((1 3 0))
   ((1 7 0)) ((1 1 0) (1 10 0)) ((1 3 0) (1 9 1)) ((0 0 0) (1 3 0))
   ((1 2 0) (1 6 0)) ((1 1 0) (1 9 0)) ((1 6 2) (1 9 1) (1 11 0))
   ((1 3 0) (1 9 1) (3 0 0)) ((1 6 1) (1 7 0) (1 9 1))
   ((0 0 0) (1 0 0) (1 1 0) (1 5 0) (1 10 0)))))

(FNNounSemtrans (TheList "test") Tube-TheWord (and (isa :NOUN TestTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Testa-TheWord (and (isa :NOUN SeedCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Testament-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Testicle-TheWord (and (isa :NOUN Testicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "testicular") Artery-TheWord
 (and (isa :NOUN TesticularArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "testicular") Vein-TheWord
 (and (isa :NOUN TesticularVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Testimony-TheWord (and (isa :NOUN Testimonial))
 (frame FN_Documents) (bindingTemplate (TheList (:GAP (DEN fe_document))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Testing-TheWord (and (isa :NOUN PerformanceTesting))
 (frame FN_Operational_testing)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_product fe_tested_property))
   (:OBLIQUE-OBJECT ((PPFn on) situationConstituents) (AJP fe_degree)
    ((PPFn at) eventOccursAt) ((PPFn in) eventOccursAt) (VPto purposeOfEvent)
    (N fe_product fe_tested_property)
    (A fe_manner fe_product fe_tested_property) ((PPFn by) fe_tester)
    ((PPFn of) fe_product temporallyIntersects))
   (:GAP (DNI fe_product purposeOfEvent fe_tester) (CNI fe_tester)
    (INI purposeOfEvent fe_tester))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 5 1)) ((1 8 0)) ((1 6 1)) ((1 6 0)) ((1 3 0) (1 5 0))
   ((1 2 0) (1 8 0)) ((1 0 0) (1 6 1)) ((1 1 0) (1 5 1) (1 8 0))
   ((0 0 1) (1 1 0) (1 7 0) (1 8 1)) ((0 0 0) (0 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Testis-TheWord (and (isa :NOUN Testicle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Testosterone-TheWord (and (isa :NOUN Testosterone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tetanus-TheWord (and (isa :NOUN Tetanus))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "teton") Range-TheWord
 (and (isa :NOUN TetonRange-Mountains)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tetracycline-TheWord
 (and (isa :NOUN TetracyclineAntibiotic)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tetralogy-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_genre)) (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Texan-TheWord (and (isa :NOUN Texan)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "text" "correction") Product-TheWord
 (and (isa :NOUN TextCorrectionProduct-Stationery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Textbook-TheWord (and (isa :NOUN Textbook))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Textile-TheWord (and (isa :NOUN TextileArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tgv-TheWord (and (isa :NOUN TGVTrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thai-TheWord (and (isa :NOUN ThaiLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thai-TheWord (and (isa :NOUN ThaiPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thailand-TheWord (and (isa :NOUN Thailand))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thalamus-TheWord (and (isa :NOUN Thalamus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thallium-TheWord (and (isa :NOUN Thallium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thanks-TheWord
 (and (isa :NOUN CommunicationAct-Single)) (frame FN_Judgment_direct_address)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo communicatorOfInfo fe_reason))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn unto) recipientOfInfo)
    ((PPingFn to) recipientOfInfo) ((PPFn of) communicatorOfInfo)
    ((PPFn from) communicatorOfInfo) (AJP fe_degree fe_manner)
    ((PPFn for) fe_reason) ((PPingFn for) fe_reason)
    ((PPFn to) recipientOfInfo fe_reason) (NP recipientOfInfo fe_reason)
    (Sfin fe_reason) ((PPFn over) fe_reason) (Sforto fe_reason))
   (:GAP (CNI recipientOfInfo communicatorOfInfo))
   (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((2 11 0)) ((2 6 0)) ((2 4 0)) ((4 0 0)) ((2 2 0)) ((2 3 0))
   ((2 5 0)) ((2 7 0)) ((2 5 0) (4 0 0)) ((2 3 0) (2 5 0)) ((0 0 1) (2 10 0))
   ((0 0 1) (2 5 0)) ((2 1 0) (2 9 0)) ((0 0 0) (2 6 0)) ((2 6 0) (2 8 0))
   ((0 0 1) (2 0 0)) ((2 7 0) (4 0 0)) ((2 4 1) (2 6 0) (4 0 0))
   ((2 4 1) (2 7 1) (4 0 0)) ((0 0 2) (2 7 0) (2 8 1))
   ((2 6 0) (2 7 0) (4 0 0)) ((2 2 0) (2 5 0) (2 7 0))
   ((0 0 1) (1 0 0) (2 5 0) (2 7 1)))))

(FNNounSemtrans (TheList) Thanksgiving-TheWord
 (and (isa :NOUN ThanksgivingHoliday-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) That-TheWord
 (and (isa :NOUN Demonstrative-ClassB-NLAttr)) (frame FN_Pronouns)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) That-TheWord
 (and (isa :NOUN Backreference-ClassB-NLAttr)) (frame FN_Pronouns)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "thatched") Roof-TheWord
 (and (isa :NOUN ThatchedRoof)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "the") Breaks-TheWord (and (isa :NOUN Opportunity))
 (frame FN_Destiny) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "the" "fourth" "of") July-TheWord
 (and (isa :NOUN IndependenceDay-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "the" "go") Ahead-TheWord (and (isa :NOUN Permission))
 (frame FN_Deny_or_grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "the" "green") Light-TheWord
 (and (isa :NOUN Permission)) (frame FN_Deny_or_grant_permission)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn fe_authority affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) ((PPFn to) objectActedOn)
    (VPto objectActedOn) ((PPFn by) fe_authority) ((PPFn from) fe_authority)
    ((PPFn at) eventOccursAt) ((PPFn in) situationConstituents eventOccursAt)
    (NP temporallyIntersects) (AVP temporallyIntersects))
   (:GAP (DNI objectActedOn) (CNI fe_authority)
    (INI fe_authority affectedAgent) (2nd affectedAgent))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 4 0)) ((0 0 2)) ((1 1 0) (1 7 0)) ((0 0 2) (1 2 0))
   ((0 0 1) (1 1 0)) ((0 0 2) (1 0 0)) ((0 0 2) (1 4 0)) ((0 0 2) (1 3 0))
   ((0 0 2) (1 0 0) (1 7 0)) ((0 0 2) (1 4 0) (1 8 0))
   ((0 0 0) (1 3 0) (1 6 0)) ((0 0 1) (1 0 0) (1 6 1) (1 7 0))
   ((0 0 2) (1 4 0) (1 5 0) (1 7 0)))))

(FNNounSemtrans (TheList "the") Okay-TheWord (and (isa :NOUN Permission))
 (frame FN_Deny_or_grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "the") Sack-TheWord
 (and (isa :NOUN DischargeWithPrejudice)) (frame FN_Firing)
 (bindingTemplate
  (TheList (:SUBJECT (N employees) (NP employees employer))
   (:OBJECT (NP employees))
   (:OBLIQUE-OBJECT ((PPingFn for) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) employer job) (AVP temporallyIntersects)
    ((PPFn at) temporallyIntersects))
   (:GAP (CNI employer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (2 1 1)) ((1 0 0) (2 3 0)) ((0 0 0) (2 2 0))
   ((0 1 0) (2 0 0)) ((0 1 1) (1 0 0)) ((0 1 0) (2 1 0)))))

(FNNounSemtrans (TheList "the") Sticks-TheWord (and (isa :NOUN RuralArea))
 (frame FN_Isolated_places)
 (bindingTemplate
  (TheList (:SUBJECT (NP eventOccursAt)) (:GAP (DEN eventOccursAt))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Theater-TheWord
 (and (isa :NOUN (FocalFieldOfStudyFn Actor))) (frame FN_Fields)
 (bindingTemplate (TheList (:GAP (DEN topicOfIndividual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theater-TheWord
 (and (isa :NOUN EnduringThing-Localized)
      (relationExistsInstance eventOccursAt MovieShowingAtATheater :NOUN))
 (frame FN_Locale_by_event) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theater-TheWord
 (and (isa :NOUN Theater-PhysicalStructure)) (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPfin locationUse)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Theater-TheWord
 (and (isa :NOUN Theater-PhysicalStructure)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theatre-TheWord
 (and (isa :NOUN Theater-PhysicalStructure)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theft-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_degree) ((PPFn of) fe_degree))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Theft-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer)
    (A by-Underspecified) ((PPFn by) by-Underspecified perpetrator)
    (N objectOfPossessionTransfer perpetrator)
    ((PPFn from) from-Generic victim))
   (:GAP (CNI perpetrator) (INI objectOfPossessionTransfer perpetrator victim)
    (DNI objectOfPossessionTransfer victim))
   (:GEN (Poss objectOfPossessionTransfer perpetrator))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 3 1)) ((1 4 0)) ((1 0 0)) ((1 2 1)) ((0 0 0)) ((1 2 0))
   ((3 0 0)) ((1 3 0)) ((0 0 0) (1 4 1)) ((1 0 0) (1 4 1)) ((1 0 0) (1 4 0))
   ((0 0 0) (3 0 0)) ((0 0 0) (1 0 0)) ((1 1 0) (1 2 1))
   ((0 0 0) (1 0 0) (1 4 1)))))

(FNNounSemtrans (TheList) Theirs-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Them-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theme-TheWord (and (isa :NOUN Topic))
 (frame FN_Topic)
 (bindingTemplate
  (TheList (:SUBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT (AJP fe_status)
    ((PPFn in) (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn at) (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn throughout) (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn of) (InverseBinaryPredicateFn topicOfPCW) situationTopic)
    (A situationTopic))
   (:GAP (DEN situationTopic)) (:GEN (Poss communicatorOfInfo))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 5 0)) ((1 4 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 2 0)) ((1 0 0) (1 4 1)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 4 0)) ((1 0 0) (1 1 0)) ((1 0 0) (3 0 0))
   ((0 0 0) (1 0 0) (1 4 0)) ((0 0 0) (1 0 0) (1 1 0))
   ((0 0 0) (1 0 0) (3 0 0)) ((0 0 0) (0 0 0) (1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Themself-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Themselves-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theorem-TheWord (and (isa :NOUN Theorem-Proposition))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Theory-TheWord (and (isa :NOUN Theorizing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Therapist-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_affliction)
    (N fe_affliction (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:GAP (DEN performedBy)) (:GEN (Poss patientInCareEvent))))
 (groupPatterns (TheSet ((0 1 1)) ((2 0 0)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Therapist-TheWord (and (isa :NOUN Doctor-Medical))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Therapy-TheWord
 (and (isa :NOUN MedicalTreatmentEvent)) (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP performedBy drugAdministered patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:OBLIQUE-OBJECT ((PPFn against) fe_affliction) ((PPFn in) fe_affliction)
    ((PPingFn for) fe_affliction) ((PPFn with) performedBy drugAdministered)
    ((PPFn for) fe_affliction patientInCareEvent)
    ((PPFn of) fe_affliction patientInCareEvent)
    (N fe_affliction drugAdministered
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    (AJP (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:GAP (CNI performedBy) (DNI performedBy patientInCareEvent)
    (INI (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:NOUN (N drugAdministered))
   (:GEN (Poss fe_affliction patientInCareEvent))))
 (groupPatterns
  (TheSet ((1 6 2)) ((1 5 1)) ((0 0 2)) ((1 3 1)) ((1 6 1)) ((4 0 0)) ((1 5 0))
   ((1 0 0)) ((1 4 0)) ((0 0 3) (1 4 1)) ((0 0 2) (1 6 1)) ((0 0 0) (1 7 0))
   ((1 3 0) (4 0 1)) ((0 0 2) (1 6 2)) ((0 0 3) (1 2 0)) ((1 5 0) (1 7 0))
   ((1 4 0) (1 6 2)) ((0 0 1) (1 4 0)) ((1 1 0) (1 6 1)) ((1 6 0) (3 0 0))
   ((0 0 2) (0 0 2) (1 6 2)))))

(FNNounSemtrans (TheList) Therapy-TheWord
 (and (isa :NOUN MedicalSpecialistType)) (frame FN_Medical_specialties)
 (bindingTemplate (TheList (:GAP (DEN medicalSpecialty))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thermocouple-TheWord (and (isa :NOUN Thermocouple))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thermometer-TheWord (and (isa :NOUN Thermometer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thermos-TheWord (and (isa :NOUN HotBeveragePot))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) (N deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((0 2 0)) ((2 0 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Thermos-TheWord (and (isa :NOUN Thermos))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thesaurus-TheWord (and (isa :NOUN Thesaurus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) They-TheWord
 (and (isa :NOUN
       (PronounFn ThirdPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thicket-TheWord (and (isa :NOUN BushyTerrain))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP parts) (N parts) ((PPFn of) parts))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "thickness") Planer-TheWord
 (and (isa :NOUN ThicknessPlaner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thief-TheWord (and (isa :NOUN Thief))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator))
   (:OBLIQUE-OBJECT (N objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer) (AJP from-Generic))
   (:GAP (DEN perpetrator) (DNI objectOfPossessionTransfer victim)
    (INI objectOfPossessionTransfer victim))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Thieving-TheWord (and (isa :NOUN Stealing))
 (frame FN_Theft)
 (bindingTemplate
  (TheList (:SUBJECT (NP perpetrator)) (:OBLIQUE-OBJECT ((PPFn from) victim))
   (:GAP (INI objectOfPossessionTransfer)) (:GEN (Poss perpetrator))))
 (groupPatterns (TheSet ((3 0 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Thigh-TheWord (and (isa :NOUN Thigh))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing)
    (A orientation subRegions)
    (N fe_descriptor ownerOfProprietaryThing subRegions))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 2 1)) ((2 0 0)) ((0 3 1)) ((0 3 0)) ((0 0 0))
   ((0 2 0) (2 0 0)) ((0 3 0) (2 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 0)) ((0 0 0) (0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Thimble-TheWord (and (isa :NOUN Thimble))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thing-TheWord (and (isa :NOUN SomethingExisting))
 (frame FN_Entity)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (VPfin activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Thing-TheWord (and (isa :NOUN Thing)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thinker-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Thinking :NOUN))
 (frame FN_Cogitation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thinking-TheWord
 (and (isa :NOUN Thinking-NonPurposeful)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thin-Film-Deposition
 (and (isa :NOUN ThinFilmDeposition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Third-TheWord
 (and (isa :NOUN Individual)
      (relationExistsInstance properParts Individual :NOUN))
 (frame FN_Part_whole)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "third") Ventricle-TheWord
 (and (isa :NOUN ThirdVentricle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thirst-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_degree))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Thirst-TheWord (and (isa :NOUN LevelOfThirst))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_degree) (N fe_degree))
   (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((1 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Thirst-TheWord (and (isa :NOUN Desire))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPingFn for) fe_event) (VPto fe_event)
    ((PPFn for) fe_focal_participant))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0) (2 0 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((1 1 0) (2 0 0)) ((0 0 0) (1 0 0) (1 3 0)) ((1 0 0) (1 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Thong-TheWord (and (isa :NOUN Thong-TheShoe))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "thoracic") Aorta-TheWord
 (and (isa :NOUN ThoracicAorta)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "thoracic") Vertebra-TheWord
 (and (isa :NOUN ThoracicVertebra)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thorax-TheWord (and (isa :NOUN Chest-BodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) ownerOfProprietaryThing)
    (AJP fe_descriptor subRegions))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 1 1)) ((3 0 0)) ((1 0 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Thorium-TheWord (and (isa :NOUN Thorium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thorn-TheWord (and (isa :NOUN Thorn))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thoroughbred-TheWord
 (and (isa :NOUN ThoroughbredHorse)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thoroughfare-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_roadway))
   (:OBLIQUE-OBJECT (AJP fe_characteristic fe_frequency_of_use)
    (N (InverseBinaryPredicateFn nameString)) ((PPFn of) fe_relative_location)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (2nd (InverseBinaryPredicateFn nameString)) (DEN fe_roadway))
   (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 1)) ((1 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 4 0))
   ((1 0 0) (1 3 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (3 0 0)) ((0 0 0) (1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Thought-TheWord (and (isa :NOUN MentalInformation))
 (frame FN_Awareness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation) (AVP topicOfIndividual))
   (:OBJECT (NP situationTopic))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation) (Sfin topicOfIndividual)
    (Sinterrog topicOfIndividual) (QUO topicOfIndividual)
    ((PPFn on) situationTopic) (N subjectOfMentalSituation situationTopic)
    ((PPFn about) situationTopic) ((PPFn as) situationTopic)
    ((PPFn concerning) situationTopic) ((PPFn for) situationTopic)
    ((PPFn of) subjectOfMentalSituation topicOfIndividual situationTopic)
    ((PPFn to) situationTopic) ((PPingFn about) situationTopic)
    ((PPingFn of) topicOfIndividual situationTopic)
    ((PPingFn on) situationTopic) ((PPingFn to) situationTopic))
   (:GAP (CNI subjectOfMentalSituation) (DNI situationTopic))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 10 0)) ((2 5 0)) ((2 12 0)) ((2 11 0)) ((2 10 2))
   ((2 9 0)) ((2 8 0)) ((2 7 0)) ((2 6 0)) ((2 5 1)) ((2 2 0)) ((2 1 0))
   ((2 13 0)) ((2 10 1)) ((2 14 0) (4 0 0)) ((2 13 1) (4 0 0))
   ((2 12 0) (4 0 0)) ((2 4 0) (4 0 0)) ((2 10 2) (4 0 0)) ((2 6 0) (4 0 0))
   ((0 0 0) (2 15 0)) ((0 0 0) (2 14 0)) ((0 0 0) (2 13 1)) ((0 0 0) (2 12 0))
   ((0 0 0) (2 11 0)) ((0 0 0) (2 4 0)) ((0 0 0) (2 7 0)) ((0 0 0) (2 6 0))
   ((0 0 0) (1 0 0)) ((2 0 0) (2 4 0)) ((2 2 0) (4 0 0)) ((2 3 0) (4 0 0))
   ((0 1 0) (4 0 0)))))

(FNNounSemtrans (TheList) Thought-TheWord (and (isa :NOUN Thinking))
 (frame FN_Cogitation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn about) situationTopic) ((PPFn of) situationTopic))
   (:GAP (DNI subjectOfMentalSituation))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Thousands-TheWord (and (isa :NOUN Thousands-Quant))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_individuals) ((PPFn of) fe_individuals)
    ((PPingFn of) fe_individuals) ((PPFn in) fe_q_prop))
   (:GAP (2nd fe_individuals) (DNI fe_individuals) (DEN fe_quantity))
   (:NOUN (NP fe_quantity))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 0 0)) ((2 0 0)) ((0 1 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Thread-TheWord (and (isa :NOUN Thread))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "threaded") Fastener-TheWord
 (and (isa :NOUN Screw-Connector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Threat-TheWord
 (and (isa :NOUN Threatening-CommunicationAct)) (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP recipientOfInfo infoTransferred performedBy))
   (:OBLIQUE-OBJECT (VPto infoTransferred)
    (N genericPathway-Partial infoTransferred) (NP infoTransferred)
    ((PPFn to) infoTransferred) (Sfin infoTransferred)
    ((PPFn from) performedBy) ((PPFn in) performedBy))
   (:GAP (INI infoTransferred) (DEN infoTransferred)
    (DNI recipientOfInfo infoTransferred performedBy) (CNI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 6 0)) ((0 0 2)) ((1 2 0)) ((1 0 0)) ((1 4 0)) ((0 0 0))
   ((1 5 0)) ((1 0 0) (3 0 0)) ((0 0 2) (1 0 0)) ((1 4 0) (3 0 0))
   ((1 3 0) (3 0 0)) ((0 0 1) (3 0 0)) ((1 1 1) (1 1 1)) ((1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Threat-TheWord
 (and (isa :NOUN Event) (doneBy :NOUN ?agt)
      (promotesRisk :NOUN ?agt Situation situationConstituents))
 (frame FN_Risky_situation)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_dangerous_entity fe_situation))
   (:OBLIQUE-OBJECT ((PPFn to) resourceInEvent) (AVP fe_degree) (Sub fe_degree)
    ((PPFn as) fe_degree) (AJP resourceInEvent fe_degree fe_situation)
    (A fe_dangerous_entity fe_domain fe_situation)
    (N resourceInEvent fe_situation) ((PPFn from) fe_situation)
    ((PPFn by) fe_situation) ((PPFn of) fe_situation))
   (:GAP (2nd fe_degree))))
 (groupPatterns
  (TheSet ((1 9 0)) ((1 6 1)) ((1 4 2)) ((1 5 0)) ((1 0 0)) ((1 8 0) (1 9 0))
   ((1 4 2) (1 7 0)) ((1 5 2) (1 6 1)) ((1 4 1) (1 4 2)) ((0 0 0) (1 6 0))
   ((0 0 1) (1 4 0) (1 4 2)) ((0 0 1) (1 0 0) (1 3 0))
   ((0 0 1) (1 0 0) (1 1 0) (1 2 0) (1 5 1)))))

(FNNounSemtrans (TheList) Threatener-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy MakingAThreat :NOUN))
 (frame FN_Commitment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "three" "bath") Dwelling-TheWord
 (and (isa :NOUN ThreeBathDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "three" "car") Garage-TheWord
 (and (isa :NOUN ThreeCarGarage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "three" "speed" "automatic") Transmission-TheWord
 (and (isa :NOUN AutomaticTransmission3Speed)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "three" "story") Building-TheWord
 (and (isa :NOUN ThreeStoryBuilding)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thrift-TheWord (and (isa :NOUN FrugalAction))
 (frame FN_Frugality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_resource_controller)
    ((PPFn among) fe_resource_controller))
   (:GAP (INI fe_resource) (DNI objectOfCritique fe_resource_controller))
   (:GEN (Poss fe_resource_controller))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Thriller-TheWord
 (and (isa :NOUN PropositionalConceptualWork-ThrillerGenre)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    ((PPFn from) authorOfLiteraryWork-CW) (A fe_genre)
    (N fe_genre mainConstituent startingDate)
    ((PPFn of) authorOfLiteraryWork-CW startingDate)
    ((PPFn about) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 1)) ((0 3 1)) ((0 3 0)) ((0 4 0)) ((0 1 0)) ((0 0 0))
   ((0 3 0) (3 0 0)) ((0 5 0) (2 0 0)) ((0 1 0) (0 5 0)) ((2 0 0) (3 0 0))
   ((0 3 2) (2 0 0) (3 0 0)) ((0 2 0) (2 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "throat") Culture-TheWord
 (and (isa :NOUN ThroatCultureTest)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Throat-TheWord (and (isa :NOUN Pharynx))
 (frame FN_Body_parts) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Throne-TheWord (and (isa :NOUN Throne))
 (frame FN_Furniture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Throne-TheWord
 (and (isa :NOUN Throne-GoverningSomething)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Throng-TheWord (and (isa :NOUN (GroupFn Person)))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals) (INI fe_individuals))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Throw-TheWord (and (isa :NOUN BedSpread))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Throw-TheWord (and (isa :NOUN ThrowBlanket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Throw-TheWord (and (isa :NOUN ThrowingAnObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thrush-TheWord (and (isa :NOUN Thrush-Bird))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thulium-TheWord (and (isa :NOUN Thulium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thumbnail-TheWord (and (isa :NOUN ThumbnailImage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thumbnail-TheWord (and (isa :NOUN Fingernail))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thumb-TheWord (and (isa :NOUN Thumb))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment)
    (AJP fe_descriptor orientation ownerOfProprietaryThing)
    ((PPFn of) fe_attachment orientation ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing) (NP ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 1 0)) ((3 0 0)) ((1 2 2)) ((1 1 2)) ((1 2 1)) ((1 1 1)) ((1 1 0))
   ((1 2 0)) ((1 0 0)) ((1 1 1) (3 0 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 0))
   ((1 1 0) (1 1 0)))))

(FNNounSemtrans (TheList) Thump-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) ((PPFn on) fe_ground)
    ((PPFn from) from-Generic) (AJP fe_manner) ((PPingFn of) fe_noisy_event)
    ((PPFn of) fe_noisy_event emitter objectMoving))
   (:GAP (DNI fe_ground))))
 (groupPatterns
  (TheSet ((0 5 1)) ((0 4 0)) ((0 5 0)) ((0 3 0)) ((0 2 0)) ((0 5 2))
   ((0 3 0) (0 5 1)) ((0 3 0) (0 5 0)) ((0 2 0) (0 3 0)) ((0 1 0) (0 5 2))
   ((0 0 0) (0 5 2)))))

(FNNounSemtrans (TheList) Thunder-TheWord (and (isa :NOUN Thunder))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP fe_component_sound) (AVP fe_manner) ((PPFn of) emitter)
    ((PPingFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Thunderstorm-TheWord
 (and (isa :NOUN ThunderstormAsObject)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thunderstorm-TheWord (and (isa :NOUN WeatherEvent))
 (frame FN_Weather) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thursday-TheWord (and (isa :NOUN Thursday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_relative_time))
   (:GAP (DNI fe_relative_time) (DEN fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "thyroid") Gland-TheWord (and (isa :NOUN Thyroid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "thyroid") Hormone-TheWord (and (isa :NOUN Thyroxine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thyrotropin-TheWord (and (isa :NOUN Thyrotropin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tiara-TheWord (and (isa :NOUN Headgear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent)
    ((PPFn of) mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Tibia-TheWord (and (isa :NOUN Tibia)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tick-TheWord (and (isa :NOUN Tick)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ticket-TheWord
 (and (isa :NOUN EntertainmentPerformanceTicket)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ticket-TheWord (and (isa :NOUN FinePenalizing))
 (frame FN_Fining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ticket-TheWord (and (isa :NOUN Ticket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ticktacktoe-TheWord (and (isa :NOUN TicTacToe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tide-TheWord (and (isa :NOUN Tide-Lunar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tie") Rack-TheWord (and (isa :NOUN TieRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tie") Tack-TheWord (and (isa :NOUN TieTack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tie-TheWord (and (isa :NOUN NeckTie))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 3)) ((0 1 2)) ((0 1 1)) ((0 1 0)) ((0 0 0))
   ((0 0 0) (2 0 0)) ((0 0 0) (0 1 1)) ((0 0 0) (0 0 1) (0 1 1)))))

(FNNounSemtrans (TheList) Tie-TheWord (and (isa :NOUN Connector))
 (frame FN_Connectors) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tie-TheWord (and (isa :NOUN ConflictOutcome-Draw))
 (frame FN_Finish_competition) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tie-TheWord
 (and (isa :NOUN DeterminingInterrelationship))
 (frame FN_Make_cognitive_connection)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) fe_concept_2))
   (:GAP (INI subjectOfMentalSituation)) (:GEN (Poss fe_concept_1))))
 (groupPatterns (TheSet ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Tie-TheWord
 (and (isa :NOUN LevelOfSocialAcquaintance)) (frame FN_Social_connection)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT ((PPFn to) encounteredObject)
    ((PPFn with) encounteredObject) (AJP activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN fe_connection) (INI encounteredObject))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 1 0) (3 0 0)) ((1 3 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Tiff-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT ((PPFn between) fe_side_1) (NP fe_issue fe_side_2)
    ((PPFn with) fe_side_2) (N fe_manner fe_sides))
   (:GEN (Poss fe_sides))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((1 0 0) (1 1 1)) ((0 0 0) (1 2 0))
   ((1 1 0) (2 0 0)) ((1 0 0) (1 1 1) (1 3 0)))))

(FNNounSemtrans (TheList) Tiff-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_arguer1 fe_arguers))
   (:OBLIQUE-OBJECT ((PPFn with) fe_arguer2) ((PPFn between) fe_arguers)
    ((PPFn of) fe_issue) (AJP fe_arguers fe_issue) (N genericPathway-Partial))
   (:GEN (Poss fe_arguers))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 1 0)) ((0 0 1)) ((1 3 0)) ((1 0 0)) ((1 1 0) (1 4 0))
   ((1 1 0) (1 3 1)) ((0 0 1) (2 0 0)) ((0 0 0) (1 0 0))
   ((0 0 1) (1 2 0) (2 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Tiger-TheWord (and (isa :NOUN Tiger))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tights-TheWord (and (isa :NOUN Tights))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_descriptor)
    (AJP fe_descriptor mainConstituent clothingStyle)
    (N mainConstituent clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 1 0) (0 2 1))
   ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)) ((0 1 0) (0 1 0))
   ((0 1 0) (0 1 0) (0 1 2)))))

(FNNounSemtrans (TheList) Tilde-TheWord (and (isa :NOUN Tilde-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tile-TheWord (and (isa :NOUN Tile)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tilt" "steering") Column-TheWord
 (and (isa :NOUN TiltSteeringColumn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "timber") Wolf-TheWord (and (isa :NOUN Wolf-Gray))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "time") Interval-TheWord
 (and (isa :NOUN TimeInterval)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "time") Off-TheWord (and (isa :NOUN LeaveOfAbsence))
 (frame FN_Temporary_leave)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_person))
   (:OBJECT (N processTypeForAccomplishmentType)
    (NP processTypeForAccomplishmentType))
   (:OBLIQUE-OBJECT (AJP fe_depictive duration)
    ((PPFn because of) (InverseBinaryPredicateFn explains-Generic))
    (N fe_person) ((PPFn for) purposeOfEvent) (VPto purposeOfEvent))
   (:GAP (INI duration) (DNI fe_person))))
 (groupPatterns
  (TheSet ((1 1 0) (2 4 0)) ((1 1 0) (2 3 0)) ((0 0 0) (1 1 0))
   ((1 0 0) (2 2 0)) ((1 1 0) (2 1 0)) ((0 0 0) (1 1 0) (2 4 0))
   ((1 1 0) (2 0 0) (2 3 0)) ((0 0 0) (1 1 0) (2 0 1) (2 4 0)))))

(FNNounSemtrans (TheList "time") Period-TheWord (and (isa :NOUN TimeInterval))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "time" "release") Capsule-TheWord
 (and (isa :NOUN CapsuleTimeRelease)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Time-TheWord (and (isa :NOUN Date))
 (frame FN_Event_instance)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_event) (Sfin fe_event))
   (:OBLIQUE-OBJECT ((PPFn of) fe_event) (Sfin fe_event) (VPed fe_event)
    (VPing fe_event) (A fe_instance_prop) (AJP fe_instance fe_instance_prop)
    (NP fe_instance_prop) ((PPFn since) fe_instance_prop)
    ((PPFn in) fe_instance_prop))
   (:GAP (DNI fe_event) (INI fe_event) (DEN fe_event fe_instance))
   (:NOUN (N fe_event) (VPing fe_event))))
 (groupPatterns
  (TheSet ((3 1 0)) ((1 2 0)) ((0 1 0)) ((1 1 0)) ((1 6 0)) ((1 5 1)) ((1 4 0))
   ((1 0 0)) ((1 5 0)) ((0 0 0) (1 6 0)) ((1 3 0) (1 4 0)) ((1 2 0) (1 4 0))
   ((0 1 0) (1 4 0)) ((1 1 0) (1 4 0)) ((1 4 0) (3 0 0)) ((0 1 0) (0 1 0))
   ((1 1 0) (1 5 1) (1 5 1)) ((0 1 0) (1 4 0) (1 8 0))
   ((1 1 0) (1 4 0) (1 7 0)))))

(FNNounSemtrans (TheList) Time-TheWord (and (isa :NOUN Frequency))
 (frame FN_Frequency) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Time-TheWord
 (and (isa :NOUN PrisonSentencePunishment)) (frame FN_Imprisonment)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Time-TheWord (and (isa :NOUN Date))
 (frame FN_Location_in_time)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A fe_descriptor fe_relative_time)
    ((PPFn for) fe_salient_event) (Sfin fe_salient_event)
    ((PPFn of) fe_salient_event) (Sinterrog fe_salient_event)
    (Sub fe_salient_event) (NP fe_descriptor (InverseBinaryPredicateFn parts)))
   (:GAP (DEN fe_focal_time)) (:APPOSITIVE (NP fe_focal_time))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 3 0)) ((0 4 0)) ((0 1 1)) ((0 7 0))
   ((0 3 0) (2 0 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 2 0) (0 7 1)))))

(FNNounSemtrans (TheList) Time-TheWord (and (isa :NOUN TimeInterval))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Time-TheWord (and (isa :NOUN Time-Quantity))
 (frame FN_Timespan)
 (bindingTemplate
  (TheList (:SUBJECT (Sfin hasState))
   (:OBLIQUE-OBJECT (A fe_descriptor duration) (AJP fe_descriptor duration)
    (VPed hasState) (N fe_descriptor hasState) ((PPFn for) hasState)
    (VPing hasState) (Sforto hasState) (Sinterrog hasState)
    ((PPFn of) hasState (InverseBinaryPredicateFn parts)))
   (:GAP (CNI hasState) (INI hasState)
    (DEN (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((1 6 0)) ((0 0 0)) ((1 8 0)) ((1 0 1)) ((1 0 0)) ((1 7 0) (1 8 1))
   ((1 1 1) (1 5 0)) ((1 3 0) (1 4 0)) ((0 0 0) (1 1 0)) ((1 1 0) (1 3 1))
   ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "time") Unit-TheWord (and (isa :NOUN UnitOfTime))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "time") Zone-TheWord (and (isa :NOUN TimeZone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Timecard-TheWord (and (isa :NOUN Timecard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Timeline-TheWord (and (isa :NOUN Timeline))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Timer-TheWord (and (isa :NOUN Timer))
 (frame FN_Artifact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Times-TheWord
 (and (isa :NOUN CommutativeRelation)
      (isa :NOUN MathematicalFunctionOnScalars))
 (frame FN_Commutative_statement) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Timetable-TheWord (and (isa :NOUN Schedule))
 (frame FN_Timetable)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn of) fe_events) (AJP fe_descriptor duration)
    ((PPFn for) fe_events fe_time_of_implementation))
   (:GAP (DNI subjectOfMentalSituation fe_events) (DEN fe_timetable))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 1 1) (3 0 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 1 0) (1 2 0)) ((1 0 0) (1 1 0) (1 2 1)))))

(FNNounSemtrans (TheList) Tin-TheWord (and (isa :NOUN Can))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) containedObject)
    ((PPFn in) fe_relative_location)
    ((PPFn of) containedObject activeIngredientsOfType)
    (N mainConstituent deviceUse) (AJP containedObject deviceUse)
    ((PPingFn for) deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 1)) ((0 4 1)) ((0 2 1)) ((0 1 0)) ((2 0 0)) ((0 3 0)) ((0 2 0))
   ((0 4 0)) ((0 3 1) (0 5 0)) ((0 3 1) (2 0 0)) ((0 0 0) (0 3 1))
   ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Tin-TheWord (and (isa :NOUN Tin)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tin") Whistle-TheWord
 (and (isa :NOUN Whistle-Instrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tinea") Pedis-TheWord (and (isa :NOUN AthletesFoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tinkle-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) fe_ground) (AJP fe_degree fe_manner)
    ((PPFn of) fe_noisy_event emitter objectMoving))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 2 0)) ((0 1 1)) ((0 1 1) (0 2 1)) ((0 0 0) (0 2 2))
   ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Tip-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_part_prop)
    (N fe_part_prop (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Tippet-TheWord (and (isa :NOUN Stole-ItemOfClothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "tire") Chain-TheWord (and (isa :NOUN TireChains))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tire") Chains-TheWord (and (isa :NOUN TireChains))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tire") Iron-TheWord (and (isa :NOUN TireIron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tire") Pump-TheWord (and (isa :NOUN AirPump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tire") Sealant-TheWord
 (and (isa :NOUN TireRepairSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tire-TheWord (and (isa :NOUN AutomobileTire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tire-TheWord (and (isa :NOUN Tire))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tire-TheWord
 (and (isa :NOUN Wheel-WheelTubeAndTireComposite)) (frame FN_Vehicle_subpart)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tiredness-TheWord (and (isa :NOUN LevelOfExhaustion))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn from) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn in) eventAffectsBodyPart) (AJP fe_degree fe_parameter))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((1 0 0)) ((2 0 0)) ((0 0 0)) ((1 2 0) (1 2 1)))))

(FNNounSemtrans (TheList) Tissue-TheWord (and (isa :NOUN BiologicalTissue))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tissue-TheWord (and (isa :NOUN FacialTissue))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Titanium-TheWord (and (isa :NOUN Titanium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "title") Report-TheWord (and (isa :NOUN TitleReport))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Title-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Title-TheWord (and (isa :NOUN TitleAgreement))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Title-TheWord (and (isa :NOUN ProperNameString))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Title-TheWord (and (isa :NOUN Title)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Titter-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn of) fe_component_sound) (AJP fe_manner)
    ((PPFn from) emitter))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((1 0 0)) ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Tnt-TheWord (and (isa :NOUN Trinitrotoluene))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toad-TheWord (and (isa :NOUN Toad)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toast-TheWord (and (isa :NOUN Toast)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toast-TheWord (and (isa :NOUN Deceased))
 (frame FN_Out_of_existence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toaster-TheWord (and (isa :NOUN ElectricalToaster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toasting-TheWord (and (isa :NOUN MakingToast))
 (frame FN_Apply_heat) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tobacco-TheWord (and (isa :NOUN Tobacco))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_country_of_origin fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant)) (:GEN (Poss activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 2) (2 0 0)))))

(FNNounSemtrans (TheList) Tobacco-TheWord (and (isa :NOUN TobaccoPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toboggan-TheWord (and (isa :NOUN Toboggan))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Today-TheWord (and (isa :NOUN Today-Indexical))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:GAP (DNI fe_relative_time) (DEN fe_relative_time fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Today-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyIntersects TemporalThing :NOUN))
 (frame FN_Temporal_collocation)
 (bindingTemplate
  (TheList (:SUBJECT (Sfin fe_trajector_event))
   (:OBLIQUE-OBJECT (NP objectFoundInLocation) (Sfin fe_trajector_event))
   (:GAP (DEN fe_landmark_period))
   (:NOUN (N objectTranslating) (Sfin fe_trajector_event)
    (VPfin fe_trajector_event) (NP objectTranslating fe_trajector_event)
    ((PPFn on) fe_trajector_event) ((PPFn throughout) fe_trajector_event))))
 (groupPatterns
  (TheSet ((1 1 0)) ((3 3 0)) ((3 0 0)) ((3 2 0)) ((3 1 0)) ((0 0 0)) ((1 0 0))
   ((3 1 0) (3 5 0)) ((3 1 0) (3 4 0)) ((3 1 0) (3 1 0)) ((1 1 0) (1 1 0))
   ((3 2 0) (3 3 1) (3 3 1)))))

(FNNounSemtrans (TheList) Toddler-TheWord (and (isa :NOUN HumanToddler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Todo-List-TheWord (and (isa :NOUN ToDoList-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "todo") List-TheWord (and (isa :NOUN ToDoList-CW))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toe-TheWord (and (isa :NOUN Toe))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn on) fe_attachment) (N fe_descriptor orientation)
    (AJP fe_descriptor orientation)
    ((PPFn of) fe_attachment ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (2nd ownerOfProprietaryThing)
    (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 3 1)) ((1 3 0)) ((1 2 1) (3 0 0)) ((1 1 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 1 1) (1 2 0)))))

(FNNounSemtrans (TheList) Toenail-TheWord (and (isa :NOUN Toenail))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Tofu-TheWord (and (isa :NOUN Tofu)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toga-TheWord (and (isa :NOUN Toga)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toggle-TheWord (and (isa :NOUN Toggle-Connector))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Togs-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle) ((PPFn for) deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "toilet") Bowl-TheWord (and (isa :NOUN ToiletBowl))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toilet") Paper-TheWord (and (isa :NOUN ToiletPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toilet") Powder-TheWord (and (isa :NOUN BathPowder))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toilet") Seat-TheWord (and (isa :NOUN ToiletSeat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toilet-TheWord (and (isa :NOUN Toilet))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toilet-TheWord (and (isa :NOUN Restroom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toilet") Tissue-TheWord (and (isa :NOUN ToiletPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toilet" "training") Product-TheWord
 (and (isa :NOUN ToiletTrainingProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toiletry-TheWord (and (isa :NOUN ToiletrySubstance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toke-TheWord
 (and (isa :NOUN (InhalingFn (CollectionIntersection2Fn DrugSubstance Smoke))))
 (frame FN_Ingest_substance)
 (bindingTemplate
  (TheList (:SUBJECT (NP bodilyDoer))
   (:OBLIQUE-OBJECT ((PPFn on) deviceUsed) (AJP frequencyOfEvent fe_manner))
   (:GAP (INI stuffUsed)) (:GEN (Poss bodilyDoer))))
 (groupPatterns
  (TheSet ((0 0 0) (1 1 1)) ((0 0 0) (0 0 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Token-TheWord (and (isa :NOUN Token-Physical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toleration-TheWord (and (isa :NOUN ToleratingEvent))
 (frame FN_Tolerating) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toll") Road-TheWord (and (isa :NOUN TollRoad))
 (frame FN_Roadways) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toll-TheWord (and (isa :NOUN Sound))
 (frame FN_Sounds) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tollbooth-TheWord (and (isa :NOUN TollBooth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tollkeeper-TheWord
 (and (isa :NOUN TollBoothOperator)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tom-Tom-TheWord (and (isa :NOUN TomTom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tomato") Juice-TheWord
 (and (isa :NOUN (JuiceFn (FruitFn TomatoPlant)))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tomato") Plant-TheWord (and (isa :NOUN TomatoPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tomato") Sauce-TheWord
 (and (isa :NOUN TomatoBasedSauce)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tomato") Soup-TheWord
 (and (isa :NOUN (SoupFn (TheSet Tomato-Foodstuff)))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tomato-TheWord
 (and (isa :NOUN (FruitFn TomatoPlant))) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tomato-TheWord (and (isa :NOUN Tomato-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tomb-TheWord (and (isa :NOUN Tomb)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tombstone-TheWord (and (isa :NOUN Tombstone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tome-TheWord (and (isa :NOUN (LargeFn BookCopy)))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) (VPing parts)
    (N startingDate)
    (AJP authorOfLiteraryWork-CW fe_genre mainConstituent situationTopic)
    ((PPFn of) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 3)) ((0 3 2)) ((0 3 1)) ((0 3 0)) ((0 2 0) (3 0 0))
   ((2 0 0) (3 0 0)) ((0 1 0) (2 0 0)) ((0 0 0) (0 3 2)))))

(FNNounSemtrans (TheList) Tomorrow-TheWord (and (isa :NOUN Tomorrow-Indexical))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_relative_time) (NP fe_relative_time)
    ((PPFn about) fe_relative_time))
   (:GAP (DEN fe_unit) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Ton-TheWord (and (isa :NOUN MetricTon))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN massOfObject fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Ton-TheWord (and (isa :NOUN ShortTon))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject))
   (:GAP (DEN massOfObject fe_quantity))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList "toner") Cartridge-TheWord
 (and (isa :NOUN TonerCartridge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tonga-TheWord (and (isa :NOUN TonganLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tongs-TheWord (and (isa :NOUN Tongs)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tongue") Depressor-TheWord
 (and (isa :NOUN TongueDepressor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tongue-TheWord (and (isa :NOUN Tongue))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor ownerOfProprietaryThing)
    ((PPFn of) ownerOfProprietaryThing)
    (N fe_descriptor ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing)
    (INI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((1 2 1)) ((1 0 0)) ((1 2 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 0 1))
   ((1 0 0) (1 0 0)) ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Tonight-TheWord
 (and (isa :NOUN (EveningFn Today-Indexical))) (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:GAP (DEN fe_unit) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tonsil-TheWord (and (isa :NOUN Tonsil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tonsillectomy-TheWord (and (isa :NOUN Tonsillectomy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tonsillitis-TheWord (and (isa :NOUN Tonsillitis))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tool") Bench-TheWord (and (isa :NOUN ToolBench))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tool") Box-TheWord (and (isa :NOUN ToolBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tool") Set-TheWord (and (isa :NOUN ToolSet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tool-TheWord (and (isa :NOUN Tool)) (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N deviceUse) ((PPFn for) deviceUse) (VPto deviceUse)
    ((PPingFn for) deviceUse) (NP fe_user) (AJP deviceUse fe_user))
   (:GAP (DEN fe_gizmo))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 5 1)) ((0 2 0)) ((0 3 0)) ((0 1 0)) ((0 0 0))
   ((0 0 0) (0 4 0)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Toolbox-TheWord (and (isa :NOUN ToolBox))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tooth-TheWord (and (isa :NOUN Tooth))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN actorPartsInvolved))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "toothbrush") Holder-TheWord
 (and (isa :NOUN ToothbrushHolder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toothbrush-TheWord (and (isa :NOUN Toothbrush))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toothed") Whale-TheWord
 (and (isa :NOUN ToothedWhale)) (frame FN_Animals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toothpaste-TheWord (and (isa :NOUN Toothpaste))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toothpaste") Tube-TheWord
 (and (isa :NOUN ToothpasteTube)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "top" "bar") Hive-TheWord (and (isa :NOUN TopBarHive))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Top-Hat-TheWord (and (isa :NOUN Hat))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN fe_accoutrement))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "top" "mount") Refrigerator-TheWord
 (and (isa :NOUN Refrigerator-FreezerOnTop)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Top-TheWord (and (isa :NOUN Clothing-Top))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Top-TheWord (and (isa :NOUN TopSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn parts)))
   (:OBLIQUE-OBJECT (A fe_part_prop) (N (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((1 0 0) (1 2 0))
   ((1 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Topaz-TheWord (and (isa :NOUN Topaz-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Topic-TheWord (and (isa :NOUN FieldOfStudy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Topic-TheWord (and (isa :NOUN Topic))
 (frame FN_Topic)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP (InverseBinaryPredicateFn topicOfPCW) situationTopic)
    (QUO situationTopic) (VPing situationTopic))
   (:OBLIQUE-OBJECT (AJP communicatorOfInfo fe_status)
    ((PPFn in) (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn for) (InverseBinaryPredicateFn topicOfPCW))
    ((PPFn of) (InverseBinaryPredicateFn topicOfPCW) situationTopic)
    (A situationTopic) ((PPingFn of) situationTopic)
    (N (InverseBinaryPredicateFn topicOfPCW) situationTopic))
   (:GAP (DNI (InverseBinaryPredicateFn topicOfPCW)) (DEN situationTopic))
   (:GEN (Poss communicatorOfInfo (InverseBinaryPredicateFn topicOfPCW)))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 6 1)) ((1 4 0)) ((1 3 0)) ((1 1 0)) ((1 6 0)) ((1 0 1))
   ((3 0 0)) ((1 0 0)) ((1 5 0) (3 0 1)) ((0 0 1) (1 3 0)) ((0 0 1) (1 1 0))
   ((0 0 0) (1 4 0)) ((0 0 1) (3 0 0)) ((0 0 1) (1 0 0)) ((1 1 0) (3 0 0))
   ((1 6 0) (3 0 0)) ((1 3 1) (3 0 0)) ((0 0 1) (1 0 1) (3 0 1))
   ((0 0 1) (1 0 1) (1 3 0)) ((0 2 0) (1 0 1) (1 2 0))
   ((0 1 0) (1 6 0) (3 0 0)))))

(FNNounSemtrans (TheList "topically" "applied") Substance-TheWord
 (and (isa :NOUN TopicallyAppliedSubstance)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "topographic") Point-TheWord (and (isa :NOUN Place))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Topography-TheWord
 (and (isa :NOUN TopographicalFeature)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tor-TheWord (and (isa :NOUN Summit))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts)
    (N eventLocale (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Torero-TheWord (and (isa :NOUN Matador))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tornado-TheWord (and (isa :NOUN TornadoAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tornado-TheWord (and (isa :NOUN TornadoAsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torpedo-TheWord (and (isa :NOUN Torpedo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "torpedo") Tube-TheWord (and (isa :NOUN TorpedoTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "torque") Wrench-TheWord
 (and (isa :NOUN TorqueWrench)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torr-TheWord (and (isa :NOUN MM-Hg)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torrent-TheWord
 (and (isa :NOUN PrecipitationProcess)) (frame FN_Precipitation)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torrent-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject)
    ((PPingFn of) massOfObject) (AJP fe_q_prop))
   (:GAP (DEN massOfObject fe_quantity))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 1)) ((0 0 0)) ((0 0 1) (0 2 0)))))

(FNNounSemtrans (TheList "torrid") Zone-TheWord (and (isa :NOUN Tropics))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torso-TheWord (and (isa :NOUN Torso)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tortoise-TheWord (and (isa :NOUN Tortoise))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torture-TheWord (and (isa :NOUN Torture))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tossed") Salad-TheWord (and (isa :NOUN GreenSalad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Total-TheWord (and (isa :NOUN TotalFunction))
 (frame FN_Amounting_to)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn around) sum) (NP sum))
   (:OBLIQUE-OBJECT (A fe_attribute frequencyOfEvent) (AJP frequencyOfEvent)
    (N fe_attribute fe_time_span) ((PPFn for) fe_attribute fe_time_span)
    ((PPFn of) fe_attribute sum) (Num sum))
   (:GAP (INI fe_numbers) (DEN sum) (DNI fe_attribute fe_numbers sum))
   (:GEN (Poss fe_time_span))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 3 0)) ((1 4 1)) ((3 0 0)) ((1 3 1)) ((1 2 1)) ((1 0 0))
   ((1 0 1)) ((1 4 0)) ((0 1 0) (1 2 0)) ((0 0 0) (1 3 1)) ((1 2 1) (1 4 1))
   ((1 1 0) (1 4 0)) ((1 1 0) (1 4 1)))))

(FNNounSemtrans (TheList) Tote-TheWord (and (isa :NOUN WomensToteBag))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toucan-TheWord (and (isa :NOUN Toucan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Touch-TheWord (and (isa :NOUN TouchPerception))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Touch-TheWord (and (isa :NOUN TouchingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Touch-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) massOfObject))
   (:GAP (DEN fe_quantity))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "touch" "tone") Telephone-TheWord
 (and (isa :NOUN TouchToneTelephone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toupee-TheWord (and (isa :NOUN Wig))
 (frame FN_Accoutrements)
 (bindingTemplate (TheList (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "tour") Bus-TheWord (and (isa :NOUN TourBus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tour-TheWord (and (isa :NOUN Sightseeing))
 (frame FN_Touring)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn visitingSite))
    ((PPFn to) (InverseBinaryPredicateFn visitingSite)) (NP duration)
    (N (InverseBinaryPredicateFn visitingSite) by-Underspecified)
    ((PPFn in) by-Underspecified) ((PPFn from) eventOccursAt))
   (:GAP (DEN (InverseBinaryPredicateFn visitingSite))
    (INI (InverseBinaryPredicateFn visitingSite) doneBy)
    (DNI (InverseBinaryPredicateFn visitingSite) doneBy))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 1 0)) ((1 3 0)) ((1 3 0) (1 5 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 0 0) (1 4 0)))))

(FNNounSemtrans (TheList) Tour-TheWord (and (isa :NOUN TravelTour))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn of) situationLocation)
    ((PPFn around) situationLocation) ((PPFn round) situationLocation)
    ((PPFn with) fe_co-participant) ((PPFn to) to-Generic)
    ((PPFn into) to-Generic) ((PPFn along) trajectory-Complete)
    ((PPFn through) trajectory-Complete) ((PPFn up) trajectory-Complete)
    (AJP situationLocation distanceTranslated duration fe_manner
     trajectory-Complete)
    (N situationLocation duration by-Underspecified deviceTypeUsed
     purposeOfEvent)
    ((PPFn from) from-Generic) ((PPFn on) temporallyIntersects)
    ((PPFn in) situationLocation temporallyIntersects))
   (:GAP (CNI travellerInTrip)) (:GEN (Poss duration travellerInTrip))))
 (groupPatterns
  (TheSet ((3 0 1)) ((1 10 4)) ((1 4 0)) ((1 2 0)) ((1 0 0)) ((1 1 0))
   ((1 10 0)) ((1 9 0)) ((1 10 4) (3 0 1)) ((1 9 4) (1 12 0)) ((0 0 0) (1 4 0))
   ((1 4 0) (1 11 0)) ((1 4 0) (1 10 3)) ((1 5 0) (1 10 2)) ((1 6 0) (1 9 1))
   ((0 0 0) (1 2 0)) ((1 0 0) (3 0 1)) ((0 0 0) (1 0 0)) ((1 1 0) (3 0 1))
   ((1 10 0) (3 0 1)) ((1 0 0) (1 12 0)) ((1 6 0) (1 10 0)) ((1 0 0) (1 10 3))
   ((1 9 2) (1 13 0)) ((1 0 0) (1 9 2)) ((1 0 0) (1 10 0))
   ((1 4 0) (1 8 0) (3 0 1)) ((0 0 0) (1 4 0) (1 9 3))
   ((0 0 0) (1 7 0) (1 9 2)) ((1 4 0) (1 10 3) (3 0 0))
   ((0 0 0) (1 3 0) (1 9 3)) ((1 3 0) (1 4 0) (3 0 1))
   ((1 0 0) (1 10 1) (3 0 1)) ((1 9 2) (1 13 0) (3 0 1))
   ((0 0 0) (1 3 0) (1 7 0) (1 10 2) (1 13 1)))))

(FNNounSemtrans (TheList "touring") Bike-TheWord
 (and (isa :NOUN TouringBicycle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tourism-TheWord (and (isa :NOUN Tourism))
 (frame FN_Touring)
 (bindingTemplate
  (TheList
   (:GAP (DNI (InverseBinaryPredicateFn visitingSite))
    (INI (InverseBinaryPredicateFn visitingSite) doneBy))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tourist-TheWord (and (isa :NOUN Tourist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tourist-TheWord (and (isa :NOUN Tourist))
 (frame FN_Touring)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn visitingSite)))
   (:GAP (DNI (InverseBinaryPredicateFn visitingSite))
    (INI (InverseBinaryPredicateFn visitingSite)) (DEN doneBy))
   (:NOUN (N (InverseBinaryPredicateFn visitingSite)))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Tourmaline-TheWord (and (isa :NOUN Tourmaline-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Towel-TheWord (and (isa :NOUN Towel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tower-TheWord (and (isa :NOUN Tower))
 (frame FN_Building_subparts)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN properPhysicalParts))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Tower-TheWord (and (isa :NOUN (TallFn Building)))
 (frame FN_Buildings)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_function)
    (N fe_function (InverseBinaryPredicateFn nameString))
    (AJP fe_function activeIngredientsOfType))
   (:GAP (DEN fe_building)) (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0)) ((0 2 0)) ((0 2 1) (2 0 0)))))

(FNNounSemtrans (TheList) Tower-TheWord (and (isa :NOUN Tower)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Town-TheWord (and (isa :NOUN Town))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn with) fe_descriptor)
    (Srel fe_descriptor) (VPing fe_descriptor)
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    (N fe_container_possessor fe_descriptor
     (InverseBinaryPredicateFn nameString) fe_population)
    (AJP parts fe_descriptor fe_relative_location)
    ((PPFn near) fe_relative_location) ((PPFn on) fe_relative_location))
   (:GAP (DEN eventLocale)) (:APPOSITIVE (NP eventLocale))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 4 0)) ((0 5 2)) ((0 3 0)) ((0 2 0)) ((0 5 1)) ((0 6 1))
   ((0 0 0)) ((0 5 0)) ((0 4 0) (0 7 0)) ((0 6 2) (2 0 0)) ((0 5 1) (0 5 3))
   ((0 4 0) (0 5 1)) ((0 4 0) (0 6 1)) ((0 1 0) (0 5 1)) ((0 6 0) (0 6 1))
   ((0 4 0) (0 6 1) (0 6 1)))))

(FNNounSemtrans (TheList) Townhouse-TheWord (and (isa :NOUN TownHouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toxicologist-TheWord (and (isa :NOUN Toxicologist))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toxicology-TheWord (and (isa :NOUN Toxicology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toxin-TheWord (and (isa :NOUN BiologicalToxin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toxin-TheWord (and (isa :NOUN ToxicSubstance))
 (frame FN_Toxic_substance)
 (bindingTemplate
  (TheList (:GAP (DEN poisonedWith) (INI fe_toxin_source victim))
   (:NOUN (N poisonedWith))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "toy") Balloon-TheWord (and (isa :NOUN ToyBalloon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toy") Glider-TheWord (and (isa :NOUN ToyGlider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toy") Car-TheWord
 (and (isa :NOUN (ToyVersionFn Automobile))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toy") Castle-TheWord
 (and (isa :NOUN (ToyVersionFn Castle))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toy") Gun-TheWord
 (and (isa :NOUN (ToyVersionFn Handgun))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Toy-TheWord (and (isa :NOUN Toy)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toy") Train-TheWord
 (and (isa :NOUN (ToyVersionFn Train))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toy") Truck-TheWord
 (and (isa :NOUN (ToyVersionFn Truck))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "toyota") Truck-TheWord (and (isa :NOUN ToyotaTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trace-TheWord (and (isa :NOUN Evidence-Indication))
 (frame FN_Leaving_traces)
 (bindingTemplate
  (TheList (:SUBJECT ((PPFn by) objectActedOn) (NP fe_event))
   (:OBLIQUE-OBJECT (N objectActedOn) ((PPFn of) objectActedOn fe_event)
    ((PPFn at) objectFoundInLocation) ((PPFn in) objectFoundInLocation)
    (AVP temporallyIntersects) (NP temporallyIntersects)
    (AJP fe_descriptor objectFoundInLocation temporallyIntersects))
   (:GAP (DNI objectActedOn) (DEN fe_evidence))
   (:GEN (Poss objectFoundInLocation))))
 (groupPatterns
  (TheSet ((1 1 1)) ((1 1 0)) ((0 0 0)) ((1 0 0)) ((1 6 0)) ((1 1 0) (1 3 0))
   ((1 1 0) (1 2 0)) ((1 1 1) (1 6 0)) ((0 1 0) (1 6 0)) ((1 1 0) (1 6 0))
   ((1 1 0) (1 3 0) (1 5 0)) ((1 1 0) (1 2 0) (1 4 0))
   ((1 1 0) (1 6 1) (1 6 2) (3 0 0)))))

(FNNounSemtrans (TheList) Trace-TheWord (and (isa :NOUN Drawing-Depiction))
 (frame FN_Physical_artworks)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) mainConstituent))
   (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Trachea-TheWord (and (isa :NOUN Trachea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "track" "and") Field-TheWord
 (and (isa :NOUN TrackAndFieldSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "track") Event-TheWord
 (and (isa :NOUN TrackSportsEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "track") Lighting-TheWord
 (and (isa :NOUN TrackLighting)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Track-TheWord (and (isa :NOUN Evidence-Indication))
 (frame FN_Leaving_traces) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Track-TheWord (and (isa :NOUN TrackSportsEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Track-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_characteristic) (VPing fe_characteristic)
    ((PPFn to) fe_direction to-Generic)
    (AJP fe_characteristic fe_frequency_of_use lengthOfObject)
    ((PPFn down) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn in) fe_relative_location) ((PPFn from) from-Generic)
    (N mainConstituent fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 8 2)) ((0 8 1)) ((0 8 0)) ((0 3 2)) ((0 2 1)) ((0 3 1)) ((0 2 0))
   ((0 1 0)) ((0 0 0)) ((0 3 0)) ((0 5 0) (0 8 0)) ((0 2 1) (0 7 0))
   ((0 2 1) (0 4 0)) ((0 2 1) (0 3 0)) ((0 1 0) (0 1 0)) ((0 3 0) (0 3 0))
   ((0 2 1) (0 7 0) (0 8 2)) ((0 3 0) (0 6 0) (0 7 0)))))

(FNNounSemtrans (TheList) Tracksuit-TheWord (and (isa :NOUN AthleticClothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 1) (2 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Tract-TheWord (and (isa :NOUN Ground))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tract-TheWord (and (isa :NOUN Pamphlet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tract-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW)
    (N authorOfLiteraryWork-CW fe_genre) ((PPFn in) situationTopic)
    ((PPFn on) situationTopic) (AJP fe_genre situationTopic)
    ((PPFn against) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 5 0)) ((0 4 1)) ((0 4 0)) ((2 0 0)) ((0 1 0))
   ((0 3 0) (0 4 0)) ((0 3 0) (2 0 0)) ((0 2 0) (2 0 0))
   ((0 0 0) (0 1 1) (0 1 1)))))

(FNNounSemtrans (TheList) Tractate-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tractor" "pulled" "lawn") Mower-TheWord
 (and (isa :NOUN LawnMower-TractorPulled)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tractor-TheWord (and (isa :NOUN Tractor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tractor-TheWord (and (isa :NOUN TruckTractor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tractor-Trailer-TheWord
 (and (isa :NOUN SemiTrailer-Truck)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trade-TheWord (and (isa :NOUN Transaction))
 (frame FN_Exchange)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_exchanger_2)
    (AJP fe_exchanger_1 fe_exchanger_2 by-Underspecified)
    (NP fe_exchangers eventOccursAt)
    (N fe_exchanger_1 fe_exchanger_2 fe_themes))
   (:GAP (DEN fe_themes) (INI fe_exchangers fe_themes)
    (DNI fe_exchangers fe_themes))
   (:GEN (Poss fe_exchanger_1))))
 (groupPatterns
  (TheSet ((0 3 2)) ((0 1 2)) ((0 2 0) (0 3 2)) ((0 2 0) (0 2 1))
   ((0 0 0) (2 0 0)) ((0 3 0) (0 3 1)) ((0 1 0) (0 1 1) (0 3 2)))))

(FNNounSemtrans (TheList) Trade-TheWord
 (and (isa :NOUN PersonTypeByOccupation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trader-TheWord (and (isa :NOUN Trader))
 (frame FN_People_by_vocation)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_ethnicity)) (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "trading" "card") Game-TheWord
 (and (isa :NOUN TradingCardGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trading") Card-TheWord (and (isa :NOUN TradingCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trading") Card-TheWord
 (and (isa :NOUN TradingCardGameCard)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trading") Turret-TheWord
 (and (isa :NOUN ElectronicTradingPlatform)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tradition-TheWord
 (and (isa :NOUN CulturalConvention-Specification)) (frame FN_Custom)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) objectOfCritique) (Sub objectOfCritique)
    (VPing objectOfCritique) (VPto objectOfCritique)
    ((PPFn in) objectOfCritique fe_domain eventOccursAt)
    ((PPFn within) eventOccursAt) ((PPFn at) eventOccursAt)
    ((PPFn for) affectedAgent) (A fe_descriptor fe_domain fe_society)
    (AJP fe_descriptor fe_domain fe_society)
    ((PPFn of) objectOfCritique fe_domain eventOccursAt affectedAgent
     fe_society)
    (N objectOfCritique fe_domain eventOccursAt affectedAgent fe_society))
   (:GAP (DEN objectOfCritique)
    (DNI objectOfCritique affectedAgent fe_society))
   (:GEN (Poss affectedAgent fe_society))))
 (groupPatterns
  (TheSet ((0 11 4)) ((0 9 2)) ((0 8 2)) ((0 10 3)) ((0 7 0)) ((0 6 0))
   ((0 10 1)) ((0 11 1)) ((0 9 1)) ((0 8 1)) ((0 9 0)) ((0 1 0)) ((0 0 0))
   ((0 10 0)) ((0 8 2) (0 11 2)) ((0 9 2) (0 10 1)) ((0 4 1) (0 9 2))
   ((0 11 1) (2 0 1)) ((0 9 1) (2 0 1)) ((0 9 1) (0 10 4)) ((0 8 1) (0 8 2))
   ((0 11 1) (2 0 0)) ((0 9 1) (0 10 3)) ((0 5 0) (0 9 1)) ((0 4 1) (0 9 1))
   ((0 9 0) (2 0 1)) ((0 9 0) (0 10 4)) ((0 9 0) (0 10 3)) ((0 9 0) (0 10 1))
   ((0 4 1) (0 9 0)) ((0 9 0) (0 11 1)) ((0 8 0) (0 10 1)) ((0 8 0) (0 8 1))
   ((0 8 0) (0 8 0)) ((0 11 0) (2 0 1)) ((0 9 2) (0 11 0)) ((0 8 2) (0 11 0))
   ((0 10 2) (0 11 0)) ((0 10 0) (0 11 1)) ((0 3 0) (0 9 0)) ((0 2 0) (0 9 0))
   ((0 0 0) (0 9 0)) ((0 9 0) (0 10 0)) ((0 8 1) (0 8 2) (2 0 0))
   ((0 8 0) (0 9 1) (0 11 3)) ((0 8 0) (0 8 1) (2 0 0))
   ((0 4 2) (0 9 0) (0 10 1)) ((0 4 2) (0 8 0) (0 8 1))
   ((0 3 0) (0 9 1) (2 0 0)) ((0 4 0) (0 8 0) (0 8 2))
   ((0 4 2) (0 9 0) (0 10 0)))))

(FNNounSemtrans (TheList) Traffic-TheWord (and (isa :NOUN Traffic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "traffic") Light-TheWord
 (and (isa :NOUN TrafficLight)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trafficker-TheWord
 (and (isa :NOUN Event) (relationInstanceExists subEvents :NOUN Buying))
 (frame FN_Commerce_scenario)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N objectOfPossessionTransfer))
   (:GAP (INI buyer objectOfPossessionTransfer)
    (DNI objectOfPossessionTransfer moneyTransferred) (DEN seller))
   (:APPOSITIVE (NP seller))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Tragedy-TheWord (and (isa :NOUN DisasterEvent))
 (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_undesirable_event))
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) (N eventOccursAt)
    (AVP temporallyIntersects) (Sub temporallyIntersects)
    (AJP fe_degree temporallyIntersects) ((PPFn in) temporallyIntersects)
    ((PPFn of) fe_undesirable_event) (Sfin fe_undesirable_event))
   (:GAP (DNI objectActedOn) (DEN fe_undesirable_event))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 4 1)) ((1 1 0)) ((1 6 0)) ((0 0 0)) ((1 4 0))
   ((1 3 0) (1 5 0)) ((0 0 0) (1 0 0)) ((1 0 0) (1 3 0)) ((1 2 0) (1 6 0)))))

(FNNounSemtrans (TheList) Tragedy-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trail-TheWord (and (isa :NOUN Evidence-Indication))
 (frame FN_Leaving_traces) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trail-TheWord (and (isa :NOUN Trail))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_characteristic) ((PPFn to) to-Generic)
    ((PPFn through) trajectory-Complete) ((PPFn in) fe_relative_location)
    ((PPFn from) from-Generic)
    (N fe_characteristic (InverseBinaryPredicateFn nameString)
     fe_relative_location deviceUse))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 5 3)) ((0 2 0)) ((0 5 1)) ((0 1 0)) ((0 5 0)) ((0 0 0))
   ((0 3 0) (0 5 1)) ((0 0 0) (0 5 2)) ((0 0 0) (0 2 0)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 2 0) (0 4 0)) ((0 0 0) (0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Trailer-TheWord (and (isa :NOUN Trailer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trailer") Truck-TheWord
 (and (isa :NOUN SemiTrailer-Truck)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Train-TheWord (and (isa :NOUN Convoy))
 (frame FN_Convoy) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Train-TheWord (and (isa :NOUN Entourage))
 (frame FN_Entourage) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Train-TheWord
 (and (isa :NOUN Train-TransportationDevice)) (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor) (NP transporter))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Training-TheWord (and (isa :NOUN Training))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (N mainConstituent) (NP studentOf instructor))
   (:OBLIQUE-OBJECT (Srel purposeOfEvent)
    (AJP (InverseBinaryPredicateFn teachingASkill)) ((PPFn for) studentOf)
    ((PPFn to) studentOf) ((PPFn of) studentOf)
    (N (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn in) eventOccursAt (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn under) instructor))
   (:GAP
    (DNI fe_course eventOccursAt
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     (InverseBinaryPredicateFn teachingASkill) studentOf)
    (INI eventOccursAt mainConstituent
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     (InverseBinaryPredicateFn teachingASkill) studentOf instructor)
    (CNI instructor))
   (:NOUN (N (InverseBinaryPredicateFn teacherTypeOfField)))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 6 1)) ((1 4 0)) ((1 5 0)) ((0 0 0)) ((0 1 0)) ((1 5 1))
   ((3 0 0)) ((1 4 0) (1 6 1)) ((1 0 0) (1 2 0)) ((1 1 0) (1 6 0))
   ((0 1 1) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Trainload-TheWord
 (and (isa :NOUN (VolumeFn Train-TransportationDevice)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tram-TheWord (and (isa :NOUN Tram))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN transporter))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Tramontane-TheWord (and (isa :NOUN MountainBreeze))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tramp-TheWord (and (isa :NOUN Bum)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tranquilizer-TheWord (and (isa :NOUN Tranquilizer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tranquillizer-TheWord (and (isa :NOUN Barbiturate))
 (frame FN_Intoxicants)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N fe_descriptor activeIngredientsOfType))
   (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Trans-Shipping-TheWord
 (and (isa :NOUN ImportExportEvent)) (frame FN_Import_export_scenario)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transaction-TheWord
 (and (isa :NOUN MoneyTransaction)) (frame FN_Commercial_transaction)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectOfPossessionTransfer))
   (:GAP (INI buyer objectOfPossessionTransfer moneyTransferred seller))
   (:GEN (Poss buyer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Transaction-TheWord (and (isa :NOUN Transaction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transceiver-TheWord (and (isa :NOUN Transceiver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transcript-TheWord (and (isa :NOUN TranscriptCopy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transcription-TheWord
 (and (isa :NOUN TranscriptionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transdermal") Patch-TheWord
 (and (isa :NOUN TransdermalPatch)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transducer-TheWord (and (isa :NOUN Transducer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transfer-TheWord
 (and (isa :NOUN GeneralizedTransfer)) (frame FN_Transfer)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer actors))
   (:OBLIQUE-OBJECT ((PPFn from) fromPossessor)
    ((PPFn as) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn by) by-Underspecified) (NP by-Underspecified)
    ((PPFn at) by-Underspecified) ((PPFn to) to-Generic)
    (VPto purposeOfEvent to-Generic) ((PPFn into) to-Generic)
    ((PPFn of) objectOfPossessionTransfer)
    (N fe_manner objectOfPossessionTransfer)
    (A fe_manner objectOfPossessionTransfer)
    ((PPFn for) purposeOfEvent objectOfPossessionTransfer)
    ((PPFn after) temporallyIntersects)
    (AJP fe_manner by-Underspecified eventOccursAt to-Generic
     objectOfPossessionTransfer temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn since) temporallyIntersects) (AVP fe_manner temporallyIntersects)
    ((PPFn within) eventOccursAt temporallyIntersects) ((PPFn between) actors))
   (:GAP (DNI fromPossessor to-Generic objectOfPossessionTransfer actors)
    (CNI fromPossessor actors) (INI actors))
   (:GEN (Poss fromPossessor objectOfPossessionTransfer))))
 (groupPatterns
  (TheSet ((1 18 0)) ((0 0 1)) ((1 13 5)) ((1 8 0)) ((1 10 1)) ((1 5 0))
   ((1 13 0)) ((1 9 1)) ((1 8 0) (1 18 0)) ((1 9 1) (1 18 0))
   ((0 0 1) (1 10 1)) ((1 8 0) (1 14 1)) ((1 8 0) (1 13 5)) ((1 9 1) (1 11 1))
   ((1 6 1) (1 8 0)) ((1 5 0) (1 13 4)) ((0 0 1) (1 11 0)) ((1 8 0) (1 17 0))
   ((1 8 0) (1 14 0)) ((1 2 0) (1 9 1)) ((1 4 0) (1 8 0)) ((1 3 0) (1 18 0))
   ((1 8 0) (1 13 1)) ((1 2 0) (1 13 2)) ((1 13 1) (1 13 1)) ((1 8 0) (1 13 0))
   ((1 9 1) (1 13 0)) ((1 6 1) (1 9 0)) ((1 0 0) (1 9 1)) ((1 0 0) (1 5 0))
   ((1 0 0) (1 8 0)) ((0 0 0) (1 0 0)) ((1 5 0) (3 0 1)) ((1 5 0) (1 9 1))
   ((1 13 3) (3 0 1)) ((1 5 0) (1 8 0)) ((1 0 0) (1 7 0))
   ((0 0 1) (1 17 1) (3 0 1)) ((1 17 0) (3 0 1) (3 0 1))
   ((1 8 0) (1 13 0) (1 18 0)) ((1 9 1) (1 13 0) (1 18 0))
   ((1 5 0) (1 8 0) (1 13 0)) ((1 5 0) (1 9 1) (1 13 0))
   ((1 2 0) (1 8 0) (1 16 0)) ((1 2 0) (1 5 0) (1 13 0))
   ((0 0 1) (1 6 1) (1 8 0)) ((0 0 1) (1 5 0) (1 8 0))
   ((1 0 0) (1 14 1) (3 0 1)) ((1 0 0) (1 8 0) (1 13 5))
   ((1 5 0) (1 14 1) (3 0 1)) ((1 5 0) (1 8 0) (1 13 5))
   ((1 5 0) (1 8 0) (3 0 0)) ((1 0 0) (1 6 1) (1 8 0))
   ((1 0 0) (1 5 0) (3 0 1)) ((1 0 0) (1 5 0) (1 8 0))
   ((1 0 0) (1 5 0) (1 9 1)) ((1 0 0) (1 7 0) (1 8 0))
   ((1 5 0) (1 8 0) (1 11 0)) ((1 0 0) (1 13 0) (3 0 1))
   ((1 0 0) (1 5 0) (1 13 0)) ((1 0 0) (1 1 0) (1 5 0))
   ((1 5 0) (1 8 0) (1 13 0) (1 16 1)) ((0 0 1) (1 0 0) (1 5 0) (1 8 0))
   ((1 5 0) (1 13 5) (1 14 1) (3 0 1)) ((1 0 0) (1 6 1) (1 8 0) (1 13 5))
   ((1 0 0) (1 5 0) (1 8 0) (1 14 1)) ((1 0 0) (1 5 0) (1 8 0) (1 13 5))
   ((1 0 0) (1 6 1) (1 8 0) (3 0 1)) ((1 0 0) (1 5 0) (1 6 0) (1 8 0))
   ((1 5 0) (1 8 0) (1 12 0) (1 14 0)) ((1 0 0) (1 13 0) (1 14 1) (3 0 1))
   ((1 0 0) (1 5 0) (1 8 0) (1 13 0))
   ((1 0 0) (1 5 0) (1 8 0) (1 10 0) (1 13 0) (1 15 0)))))

(FNNounSemtrans (TheList "transfer") Rna-TheWord
 (and (isa :NOUN TransferRNA-4)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transferred") Property-TheWord
 (and (isa :NOUN interestRate)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transformation-TheWord
 (and (isa :NOUN (CausingFn IntrinsicStateChangeEvent)))
 (frame FN_Cause_change)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) (AJP toState))
   (:GAP (INI doneBy))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Transformation-TheWord
 (and (isa :NOUN Transformation)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transformation-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent)) (frame FN_Undergo_change)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transformer-TheWord
 (and (isa :NOUN Transformer-Electric)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transfusion-TheWord
 (and (isa :NOUN BloodTransfusionEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transgression-TheWord
 (and (isa :NOUN ConformingToASpecification)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transgression-TheWord
 (and (isa :NOUN ViolatingAnObligation)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transgression-TheWord
 (and (isa :NOUN ComplianceStatusAttribute)) (frame FN_Compliance)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transgression-TheWord (and (isa :NOUN Misdeed))
 (frame FN_Misdeed) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transistor") Network-TheWord
 (and (isa :NOUN TransistorNetwork)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transistor-TheWord (and (isa :NOUN Transistor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transition-TheWord
 (and (isa :NOUN IntrinsicStateChangeEvent)) (frame FN_Undergo_change)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) toState) ((PPFn from) fromState))
   (:GAP (DNI objectActedOn))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Translation-TheWord
 (and (isa :NOUN Translation-WrittenRecord)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Translation-TheWord
 (and (isa :NOUN NaturalLanguageTranslation)) (frame FN_Translating)
 (bindingTemplate
  (TheList (:GAP (INI subjectOfMentalSituation topicOfIndividual))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Translocation-TheWord
 (and (isa :NOUN Translocation-BiologicalEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transmission" "electron") Microscope-TheWord
 (and (isa :NOUN TransmissionElectronMicroscope)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transmission") Fluid-TheWord
 (and (isa :NOUN TransmissionFluid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transmission-TheWord
 (and (isa :NOUN VehicleTransmission)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transmitter-TheWord (and (isa :NOUN Transmitter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transparency") Sheet-TheWord
 (and (isa :NOUN TransparencySheet)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transparency-TheWord
 (and (isa :NOUN ObjectTypeByTransparency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transpiration-TheWord
 (and (isa :NOUN TranspirationInPlants)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transplant-TheWord
 (and (isa :NOUN TransplantSurgery)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transport") Container-TheWord
 (and (isa :NOUN TransportationContainerProduct)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transport-TheWord (and (isa :NOUN Conveying-Generic))
 (frame FN_Bringing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N situationLocation transporter) (AJP fe_depictive))
   (:GAP (INI doneBy from-Generic objectMoving))))
 (groupPatterns (TheSet ((0 0 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Transportation-TheWord
 (and (isa :NOUN GeneralizedTransfer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transportation-TheWord (and (isa :NOUN Shipping))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transportation-TheWord
 (and (isa :NOUN TransportationEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transsexual-TheWord
 (and (isa :NOUN TransgenderedPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transsexual-TheWord
 (and (isa :NOUN TranssexualPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transverse") Colon-TheWord
 (and (isa :NOUN TransverseColon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transverse") Sinus-TheWord
 (and (isa :NOUN TransverseSinus)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "transversus" "abdominis") Muscle-TheWord
 (and (isa :NOUN TransverseAbdominous)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transvestite-TheWord
 (and (isa :NOUN TransvestitePerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trap-TheWord (and (isa :NOUN TrapDevice))
 (frame FN_Trap) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trapezium-TheWord (and (isa :NOUN Trapezium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trapezoid-TheWord (and (isa :NOUN Trapezoid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trash-TheWord (and (isa :NOUN Garbage-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trash") Can-TheWord (and (isa :NOUN GarbageCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trashcan-TheWord (and (isa :NOUN GarbageCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trash") Compactor-TheWord
 (and (isa :NOUN TrashCompactor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "travel") Accessory-TheWord
 (and (isa :NOUN TravelAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "travel") Accommodation-TheWord
 (and (isa :NOUN TransportationAccommodation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "travel") Agent-TheWord (and (isa :NOUN TravelAgent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "travel") Guide-TheWord (and (isa :NOUN TravelGuide))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "travel") Iron-TheWord (and (isa :NOUN TravelIron))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Travel-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP situationLocation fe_depictive)
    (N deviceTypeUsed purposeOfEvent))
   (:GAP (DNI trajectory-Complete travellerInTrip))
   (:GEN (Poss travellerInTrip))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0) (0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList "traveler" "s") Check-TheWord
 (and (isa :NOUN TravellersCheck)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Traveler-TheWord (and (isa :NOUN Traveller))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_descriptor) (AJP frequencyOfEvent))
   (:GAP (INI situationLocation) (DEN travellerInTrip))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList "traveling") Salesman-TheWord
 (and (isa :NOUN TravelingSalesPerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trawler-TheWord (and (isa :NOUN Trawler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tray-TheWord (and (isa :NOUN Volume))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tray-TheWord (and (isa :NOUN Tray)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Treadmill-TheWord (and (isa :NOUN Treadmill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Treason-TheWord (and (isa :NOUN CriminalAct))
 (frame FN_Offenses)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_degree) (Sub fe_specification))
   (:GAP (DEN fe_offense))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "treasure") Hunt-TheWord
 (and (isa :NOUN TreasureHunt-TheGame)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Treatise-TheWord (and (isa :NOUN Treatise))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) (A fe_genre)
    (N startingDate) (AJP fe_genre startingDate) (NP startingDate)
    ((PPFn on) situationTopic) ((PPingFn on) situationTopic)
    ((PPFn of) authorOfLiteraryWork-CW situationTopic)
    ((PPFn about) situationTopic)
    ((PPFn in) (InverseBinaryPredicateFn textualPCWSubSections)
     situationTopic))
   (:GAP (DEN fe_text) (2nd startingDate fe_title))
   (:GEN (Poss authorOfLiteraryWork-CW)) (:APPOSITIVE (NP fe_text fe_title))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 9 1)) ((0 8 0)) ((0 1 0)) ((0 9 0)) ((2 0 0))
   ((0 4 0) (0 7 1)) ((0 3 1) (0 5 0)) ((0 3 0) (0 5 0)) ((0 1 0) (0 5 0))
   ((0 6 0) (2 0 0)) ((0 5 0) (2 0 0)) ((0 5 0) (0 7 0)) ((0 0 0) (0 5 0))
   ((2 0 0) (3 0 0)) ((2 0 0) (3 0 1)) ((0 2 0) (0 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Treatment-TheWord (and (isa :NOUN CuringADisease))
 (frame FN_Cure)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:OBLIQUE-OBJECT ((PPFn of) fe_affliction) ((PPingFn for) fe_affliction)
    (AJP actorPartsInvolved) ((PPFn for) fe_affliction patientInCareEvent)
    ((PPFn by) performedBy
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    (N fe_affliction (InverseBinaryPredicateFn treatmentAppliedToCondition))
    (NP (InverseBinaryPredicateFn treatmentAppliedToCondition))
    ((PPFn with) (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:GAP
    (INI fe_affliction performedBy patientInCareEvent
     (InverseBinaryPredicateFn treatmentAppliedToCondition))
    (DEN (InverseBinaryPredicateFn treatmentAppliedToCondition)))
   (:GEN (Poss performedBy patientInCareEvent))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 4 1)) ((0 0 1)) ((1 6 0)) ((3 0 1)) ((1 3 1)) ((0 0 0))
   ((3 0 0)) ((1 4 0)) ((1 1 0)) ((1 0 0)) ((1 3 0)) ((1 5 0))
   ((0 0 1) (3 0 1)) ((0 0 0) (1 5 1)) ((1 2 0) (1 4 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (0 0 0) (1 3 0)) ((1 0 0) (1 4 1) (3 0 0)))))

(FNNounSemtrans (TheList) Treatment-TheWord
 (and (isa :NOUN Handling-Management)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Treatment-TheWord
 (and (isa :NOUN MedicalTreatmentEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Treaty-TheWord
 (and (isa :NOUN DecidingToDoSomething) (isa :NOUN Deciding-Collectively))
 (frame FN_Be_in_agreement_on_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP meetingParticipants))
   (:OBLIQUE-OBJECT (VPing obligationsCreated)
    (AJP fe_descriptor agreeingAgents) ((PPFn between) agreeingAgents)
    ((PPFn with) agreeingAgents meetingParticipants) (NP temporallyIntersects)
    ((PPFn of) obligationsCreated eventOccursAt temporallyIntersects)
    (N obligationsCreated situationTopic) ((PPFn on) situationTopic))
   (:GAP (DEN obligationsCreated)
    (DNI obligationsCreated agreeingAgents situationTopic)
    (INI obligationsCreated agreeingAgents meetingParticipants
     meetingParticipants situationTopic))
   (:GEN (Poss meetingParticipants temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 7 0)) ((1 6 1)) ((1 5 2)) ((1 5 1)) ((1 3 1)) ((1 6 0))
   ((1 7 0) (3 0 1)) ((1 0 0) (1 4 0)) ((1 3 1) (1 6 1)) ((1 3 1) (1 4 0))
   ((1 3 1) (1 5 0)) ((1 3 1) (3 0 0)) ((0 0 0) (1 3 1)) ((1 3 0) (1 6 1))
   ((1 2 0) (1 6 1)) ((1 2 0) (1 4 0)) ((1 1 1) (1 5 1)) ((1 1 0) (1 6 0))
   ((0 0 0) (1 3 1) (1 4 0)))))

(FNNounSemtrans (TheList) Treaty-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_bearer) (N obligationsCreated)
    (AJP obligationsCreated) (NP obligationsCreated)
    ((PPFn of) fe_specification))
   (:GAP (DEN fe_document) (INI fe_bearer fe_issuer)
    (DNI obligationsCreated))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 3 0)) ((0 1 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Treaty-TheWord (and (isa :NOUN Treaty))
 (frame FN_Make_agreement_on_action)
 (bindingTemplate
  (TheList (:SUBJECT (NP agreeingAgents meetingParticipants))
   (:OBJECT ((PPFn with) meetingParticipants))
   (:OBLIQUE-OBJECT (VPto obligationsCreated)
    (AJP fe_manner obligationsCreated) ((PPFn of) obligationsCreated)
    (Sfin obligationsCreated) ((PPFn between) agreeingAgents)
    ((PPFn with) meetingParticipants)
    ((PPFn in) eventOccursAt temporallyIntersects)
    ((PPFn on) temporallyIntersects) ((PPFn about) temporallyIntersects)
    ((PPFn during) temporallyIntersects)
    (NP obligationsCreated temporallyIntersects)
    (N obligationsCreated temporallyIntersects situationTopic))
   (:GAP (DNI obligationsCreated) (INI obligationsCreated))
   (:NOUN (NP obligationsCreated)) (:GEN (Poss meetingParticipants))))
 (groupPatterns
  (TheSet ((2 4 0)) ((0 0 0)) ((2 4 0) (2 11 2)) ((0 0 1) (1 0 0))
   ((2 4 0) (2 11 1)) ((0 0 0) (2 3 0)) ((0 0 0) (2 2 0)) ((2 4 0) (2 11 0))
   ((0 0 1) (2 2 0) (2 5 0)) ((2 5 0) (2 11 0) (5 0 0))
   ((0 0 1) (2 5 0) (2 11 0)) ((0 0 0) (2 1 1) (2 7 0))
   ((0 0 0) (0 0 0) (2 10 0)) ((0 0 0) (2 0 0) (2 6 0) (2 10 1))
   ((0 0 0) (2 2 0) (2 6 0) (2 7 0)) ((0 0 1) (2 5 0) (2 8 0) (2 9 0) (4 0 0))
   ((0 0 1) (2 0 0) (2 1 0) (2 5 0) (2 6 1)))))

(FNNounSemtrans (TheList "tree") Fort-TheWord (and (isa :NOUN TreeHouse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tree") Surgeon-TheWord (and (isa :NOUN TreeSurgeon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tree-TheWord (and (isa :NOUN Tree-ThePlant))
 (frame FN_Plants) (bindingTemplate (TheList (:GAP (DEN fe_plant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tree-TheWord (and (isa :NOUN Tree-PathSystem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tree") Toad-TheWord (and (isa :NOUN TreeFrog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trench") Coat-TheWord (and (isa :NOUN TrenchCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trench-TheWord (and (isa :NOUN OceanTrench))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tress-TheWord (and (isa :NOUN MobOfHair-Mammal))
 (frame FN_Hair_configuration)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn of) fe_hair) ((PPingFn of) fe_hair)
    (AJP fe_hair_property) (AVP fe_hair_property) (N fe_hair_property)
    ((PPFn about) situationFocalLocation))
   (:GAP (DEN fe_hair) (DNI ownerOfProprietaryThing)
    (2nd toConfiguration ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 5 0)) ((1 1 0)) ((1 0 0)) ((1 2 0)) ((1 4 0) (3 0 0))
   ((1 2 0) (3 0 0)) ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0) (1 3 0)))))

(FNNounSemtrans (TheList) Trey-TheWord (and (isa :NOUN Three-TheCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trial-TheWord (and (isa :NOUN Evaluating))
 (frame FN_Operational_testing) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trial-TheWord (and (isa :NOUN Trial))
 (frame FN_Trial)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_case defendants))
   (:OBLIQUE-OBJECT ((PPFn by) caseTriedIn) ((PPFn of) fe_case defendants)
    ((PPFn against) defendants) ((PPFn for) fe_charges defendants)
    (N fe_charges defendants) (AVP fe_manner)
    ((PPFn at) caseTriedIn eventOccursAt) ((PPFn on) fe_charges eventOccursAt)
    (NP temporallyIntersects) ((PPFn in) caseTriedIn temporallyIntersects))
   (:GAP (DEN fe_case)) (:NOUN (N justiceOfCourt)) (:GEN (Poss defendants))))
 (groupPatterns
  (TheSet ((1 7 1)) ((3 0 0)) ((4 0 0)) ((1 1 1)) ((0 0 1)) ((1 4 1)) ((1 0 0))
   ((1 3 0)) ((1 1 0)) ((0 0 1) (1 5 0)) ((1 1 1) (1 6 1)) ((0 0 1) (1 7 0))
   ((1 2 0) (1 3 0)) ((1 1 1) (1 4 0)) ((1 6 0) (1 7 0))
   ((1 6 1) (1 9 1) (4 0 0)) ((0 0 1) (1 6 0) (1 8 0))
   ((0 0 1) (1 3 1) (1 6 0)) ((0 0 0) (0 0 0) (1 9 0)))))

(FNNounSemtrans (TheList) Triamcinolone-TheWord (and (isa :NOUN Triamcinolone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Triangle-TheWord (and (isa :NOUN Triangle))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_count) (AJP fe_shape_prop) ((PPFn of) stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 0)) ((0 1 0) (0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Triassic-TheWord
 (and (isa :NOUN Triassic-GeologicalPeriod)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tribe-TheWord (and (isa :NOUN Tribe))
 (frame FN_Aggregate)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString))
    (N fe_aggregate_property (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_aggregate) (DNI fe_individuals) (INI fe_individuals))
   (:NOUN (N (InverseBinaryPredicateFn nameString)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 1)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Tribunal-TheWord (and (isa :NOUN JudicialAgent))
 (frame FN_Judicial_body) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "triceps") Brachii-TheWord (and (isa :NOUN Triceps))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tricep-TheWord (and (isa :NOUN Triceps))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Triceratop-TheWord (and (isa :NOUN Triceratops))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trickle-TheWord (and (isa :NOUN Quantity))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_individuals massOfObject) (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 0 1)) ((0 0 0)) ((0 0 1) (0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "tricuspid") Valve-TheWord
 (and (isa :NOUN TricuspidValve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tricycle-TheWord (and (isa :NOUN Tricycle))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trident-TheWord (and (isa :NOUN Trident-HandWeapon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trident") Missile-TheWord
 (and (isa :NOUN TridentBallisticMissile)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trident") Submarine-TheWord
 (and (isa :NOUN TridentClassSubmarine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trigeminal-TheWord (and (isa :NOUN TrigeminalNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Triglyceride-TheWord (and (isa :NOUN Triglyceride))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trigonometric") Function-TheWord
 (and (isa :NOUN TrigonometricFunction)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trilby-TheWord (and (isa :NOUN Fedora))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Trilogy-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn by) authorOfLiteraryWork-CW) (AJP fe_genre)
    ((PPFn of) parts) (NP fe_text) ((PPFn about) situationTopic))
   (:GAP (DEN fe_text) (2nd fe_title)) (:GEN (Poss authorOfLiteraryWork-CW))
   (:APPOSITIVE (NP fe_text))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 0)) ((2 0 0) (3 0 0)) ((0 0 0) (0 2 0) (0 4 0))
   ((0 2 0) (0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Trimester-TheWord (and (isa :NOUN AcademicTrimester))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "trinidad" "and" "tobago") Dollar-TheWord
 (and (isa :NOUN Dollar-TrinidadAndTobago)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trinket-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))
   (:GAP (DEN fe_accoutrement))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Trio-TheWord
 (and (isa :NOUN Trio-MusicalPerformanceGroup)) (frame FN_Aggregate)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_individuals))
   (:OBLIQUE-OBJECT (N fe_individuals) (NP fe_aggregate fe_individuals)
    ((PPFn of) fe_individuals))
   (:GAP (DEN fe_aggregate fe_individuals))))
 (groupPatterns (TheSet ((1 1 0)) ((1 2 0)) ((0 0 0)) ((1 1 1)) ((1 0 0)))))

(FNNounSemtrans (TheList) Trip-TheWord (and (isa :NOUN Intoxication))
 (frame FN_Intoxication)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP fe_evaluation) (N fe_degree fe_intoxicant))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 0 0) (1 1 1)) ((1 1 0) (1 1 1)) ((1 1 1) (2 0 0))
   ((0 0 0) (1 1 1)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Trip-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList (:SUBJECT (NP deviceTypeUsed trajectory-Complete travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn with) fe_co-participant) ((PPFn to) to-Generic)
    (A situationLocation to-Generic)
    (NP distanceTranslated duration to-Generic) ((PPFn into) to-Generic)
    (VPing by-Underspecified) ((PPFn round) trajectory-Complete)
    ((PPFn up) trajectory-Complete) ((PPFn along) trajectory-Complete)
    ((PPFn across) trajectory-Complete) ((PPFn between) trajectory-Complete)
    ((PPFn around) trajectory-Complete) ((PPFn over) trajectory-Complete)
    ((PPFn through) trajectory-Complete) (VPto purposeOfEvent)
    ((PPFn from) from-Generic)
    (AVP to-Generic trajectory-Complete temporallyIntersects)
    ((PPFn on) situationLocation deviceTypeUsed temporallyIntersects)
    (N distanceTranslated duration to-Generic deviceTypeUsed
     trajectory-Complete purposeOfEvent temporallyIntersects)
    ((PPFn in) situationLocation duration temporallyIntersects)
    ((PPFn ago) temporallyIntersects) ((PPFn of) duration temporallyIntersects)
    (AJP fe_direction distanceTranslated duration frequencyOfEvent fe_manner
     purposeOfEvent temporallyIntersects)
    ((PPFn for) travellerInTrip) ((PPFn by) deviceTypeUsed travellerInTrip))
   (:GAP (DEN trajectory-Complete)
    (DNI situationLocation to-Generic deviceTypeUsed trajectory-Complete
     travellerInTrip)
    (INI deviceTypeUsed from-Generic travellerInTrip) (CNI travellerInTrip))
   (:GEN (Poss temporallyIntersects travellerInTrip))))
 (groupPatterns
  (TheSet ((3 0 1)) ((0 0 2)) ((3 0 0)) ((1 19 2)) ((1 18 6)) ((1 18 5))
   ((1 12 0)) ((1 8 0)) ((1 17 1)) ((1 24 0)) ((1 18 3)) ((1 10 0)) ((1 1 0))
   ((1 4 0)) ((1 2 1)) ((1 21 0)) ((1 22 1)) ((1 22 6) (1 24 1))
   ((1 18 5) (3 0 1)) ((1 18 5) (1 23 0)) ((1 18 5) (1 24 1))
   ((1 19 2) (1 22 5)) ((1 11 0) (3 0 1)) ((0 0 2) (1 9 0)) ((0 0 2) (1 16 1))
   ((0 0 1) (1 21 1)) ((1 13 0) (1 15 0)) ((1 15 0) (1 18 4))
   ((1 17 1) (3 0 1)) ((1 18 3) (3 0 1)) ((1 15 0) (1 18 3))
   ((1 10 0) (1 18 3)) ((1 22 4) (1 24 0)) ((1 9 0) (1 14 0)) ((1 1 0) (3 0 1))
   ((1 1 0) (1 23 0)) ((0 0 2) (1 1 0)) ((1 3 2) (3 0 1)) ((1 18 2) (3 0 1))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 19 2)) ((1 1 0) (1 18 6)) ((1 1 0) (1 15 0))
   ((1 1 0) (1 18 3)) ((1 18 5) (1 22 3)) ((1 17 1) (1 22 3))
   ((1 1 0) (1 22 3)) ((1 15 0) (1 22 2)) ((1 18 5) (1 21 0))
   ((1 14 0) (1 18 1)) ((1 18 1) (1 18 5)) ((1 18 5) (1 22 2))
   ((0 0 2) (1 19 1)) ((1 6 0) (1 22 2)) ((1 1 0) (1 21 0)) ((1 1 0) (1 3 1))
   ((1 1 0) (1 22 0)) ((1 0 0) (3 0 1)) ((1 2 0) (3 0 1)) ((1 18 5) (1 19 0))
   ((1 0 0) (1 2 0)) ((0 0 2) (1 18 5) (1 22 6)) ((0 0 2) (1 18 6) (1 24 0))
   ((1 16 1) (1 18 3) (3 0 1)) ((1 9 0) (1 17 1) (3 0 1))
   ((0 0 2) (0 0 2) (1 1 0)) ((1 1 0) (1 19 2) (3 0 1))
   ((0 0 2) (1 1 0) (1 20 0)) ((1 1 0) (1 15 0) (3 0 1))
   ((1 4 0) (1 14 0) (1 19 2)) ((1 1 0) (1 8 0) (1 15 0))
   ((1 1 0) (1 15 0) (1 18 4)) ((0 0 2) (1 1 0) (1 18 3))
   ((0 0 0) (0 0 0) (1 1 0)) ((1 1 0) (1 1 0) (1 7 0))
   ((0 0 2) (1 1 0) (1 22 3)) ((1 18 1) (1 24 0) (3 0 1))
   ((1 1 0) (1 18 1) (1 23 0)) ((0 0 2) (1 3 0) (1 5 0))
   ((1 0 0) (1 16 2) (3 0 1)) ((1 0 0) (1 14 0) (3 0 1))
   ((1 0 0) (1 1 0) (1 18 6)) ((1 17 2) (1 18 5) (1 19 0))
   ((1 16 2) (1 18 5) (1 19 0)) ((1 17 0) (1 18 3) (1 18 6))
   ((0 0 2) (1 14 0) (1 18 5) (1 18 6)) ((0 0 2) (1 1 0) (1 16 1) (1 18 3))
   ((0 0 1) (1 1 0) (1 15 0) (1 22 3)) ((1 1 0) (1 18 1) (1 19 2) (3 0 1))
   ((1 15 0) (1 16 0) (1 17 2) (1 18 1)) ((1 1 0) (1 15 0) (1 18 0) (1 18 3))
   ((0 0 2) (1 1 0) (1 14 0) (1 18 3) (1 22 3)))))

(FNNounSemtrans (TheList) Triplex-TheWord
 (and (isa :NOUN ConstructionArtifact)) (frame FN_Buildings)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Triplex-TheWord (and (isa :NOUN Triplex))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tripod-TheWord (and (isa :NOUN Tripod))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trireme-TheWord (and (isa :NOUN AthenianTrireme))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Triumph-TheWord (and (isa :NOUN Triumph))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trivet-TheWord (and (isa :NOUN Trivet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trochilidae-TheWord (and (isa :NOUN Hummingbird))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trochlear-TheWord (and (isa :NOUN TrochlearNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trolley-TheWord (and (isa :NOUN Tram))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trombone-TheWord (and (isa :NOUN Trombone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Troop-TheWord (and (isa :NOUN Troop-MilitaryUnit))
 (frame FN_Member_of_military)
 (bindingTemplate
  (TheList (:SUBJECT (NP sovereignAllegianceOfOrg))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) ((PPFn near) fe_descriptor)
    ((PPFn on) fe_descriptor)
    ((PPFn with) (InverseBinaryPredicateFn hasMembers))
    ((PPFn of) sovereignAllegianceOfOrg (InverseBinaryPredicateFn hasMembers))
    (AJP fe_descriptor fe_persistent_characteristic)
    (A fe_descriptor sovereignAllegianceOfOrg comesFrom-Generic employer)
    ((PPFn at) fe_descriptor employer)
    ((PPFn from) sovereignAllegianceOfOrg (InverseBinaryPredicateFn hasMembers)
     comesFrom-Generic employer)
    (N fe_descriptor sovereignAllegianceOfOrg
     (InverseBinaryPredicateFn hasMembers) activeIngredientsOfType))
   (:GAP (2nd sovereignAllegianceOfOrg) (DEN fe_person))
   (:GEN (Poss sovereignAllegianceOfOrg))))
 (groupPatterns
  (TheSet ((1 9 3)) ((1 7 1)) ((1 4 1)) ((1 9 2)) ((3 0 0)) ((1 8 0)) ((1 9 1))
   ((1 6 1)) ((1 8 2)) ((1 6 2)) ((1 2 0)) ((1 7 0)) ((1 9 0)) ((1 5 0))
   ((1 6 0)) ((1 5 1) (1 9 3)) ((1 8 1) (1 8 3)) ((1 9 1) (1 9 3))
   ((1 6 1) (1 9 3)) ((1 6 1) (1 7 1)) ((1 3 0) (1 9 1)) ((1 2 0) (1 6 3))
   ((0 0 0) (1 2 0)) ((1 2 0) (1 6 1)) ((1 1 0) (1 9 1)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 9 1)) ((1 7 0) (1 9 1)) ((1 4 0) (1 5 0))
   ((0 0 0) (1 0 0) (1 9 3)))))

(FNNounSemtrans (TheList) Trophy-TheWord (and (isa :NOUN Trophy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tropic-TheWord (and (isa :NOUN Tropic-LatitudeLine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trouble-TheWord
 (and (isa :NOUN EventCausingDistressOrPain)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trouble-TheWord (and (isa :NOUN Predicament))
 (frame FN_Predicament)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (A fe_domain) (AJP fe_domain) (NP fe_situation))
   (:GAP (DNI objectActedOn) (DEN fe_situation) (INI fe_situation))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 0 0)) ((0 0 0) (1 2 0)) ((1 1 0) (3 0 0)))))

(FNNounSemtrans (TheList) Trousers-TheWord (and (isa :NOUN Pants))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_descriptor) ((PPFn in) fe_descriptor)
    ((PPFn with) clothingStyle)
    (N fe_descriptor mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 3)) ((0 3 2)) ((0 4 1)) ((0 3 1)) ((0 4 0))
   ((0 3 2) (2 0 0)) ((0 2 0) (0 4 1)) ((0 3 1) (2 0 0)) ((0 3 0) (2 0 0))
   ((0 4 0) (2 0 0)) ((0 3 3) (0 4 0)) ((0 4 0) (0 4 2)) ((0 2 0) (0 4 0))
   ((0 4 0) (0 4 1)) ((0 3 1) (0 4 0)) ((0 0 0) (0 3 1))
   ((0 3 3) (0 4 0) (0 4 0)) ((0 1 0) (0 4 0) (0 4 1))
   ((0 3 1) (0 4 0) (0 4 0)) ((0 2 0) (0 3 1) (0 3 1) (0 4 1)))))

(FNNounSemtrans (TheList) Trout-TheWord (and (isa :NOUN Trout))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "truck") Bed-TheWord (and (isa :NOUN TruckBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "truck") Liner-TheWord (and (isa :NOUN TruckLiner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "truck") Route-TheWord (and (isa :NOUN TruckRoute))
 (frame FN_Roadways) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "truck") Slider-TheWord (and (isa :NOUN TruckSlider))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Truck-TheWord (and (isa :NOUN Truck))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn with) fe_descriptor)
    ((PPFn from) fe_descriptor)
    (N fe_descriptor ownerOfProprietaryThing deviceUse))
   (:GAP (DEN transporter)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 3 2)) ((2 0 0)) ((0 3 1)) ((0 2 0)) ((0 3 0)) ((0 0 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "truck") Tire-TheWord (and (isa :NOUN TruckTire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "truck") Top-TheWord (and (isa :NOUN TruckTop))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "truck") Wheel-TheWord (and (isa :NOUN TruckWheel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Truckload-TheWord (and (isa :NOUN (VolumeFn Truck)))
 (frame FN_Measure_volume)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn volumeOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "true") Rib-TheWord (and (isa :NOUN TrueRib))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "true" "slime") Mold-TheWord
 (and (isa :NOUN TrueSlimeMold)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trumpet-TheWord (and (isa :NOUN Trumpet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trumpet-TheWord (and (isa :NOUN Sound))
 (frame FN_Sounds) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trunk-TheWord (and (isa :NOUN Trunk-BodyCore))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Trunk-TheWord (and (isa :NOUN Trunk-TheAppendage))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Trunk-TheWord (and (isa :NOUN TreeTrunk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trunk-TheWord (and (isa :NOUN TrunkOfCar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trust-TheWord (and (isa :NOUN Trust-LegalEntity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trust-TheWord (and (isa :NOUN TrustAgreement))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trust-TheWord
 (and (isa :NOUN Trusting-GrantingPermission)) (frame FN_Trust)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trustee-TheWord (and (isa :NOUN Trustee))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Try-TheWord (and (isa :NOUN Attempting))
 (frame FN_Attempt)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy)) (:OBJECT (NP to-Generic))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn from) doneBy)
    ((PPingFn of) to-Generic) ((PPingFn at) to-Generic) ((PPFn at) to-Generic))
   (:GAP (DNI doneBy to-Generic)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 1 0)) ((0 0 0)) ((2 2 0)) ((2 4 0) (4 0 0)) ((2 0 0) (2 4 0))
   ((0 0 0) (2 3 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Tsar-TheWord (and (isa :NOUN Tsar-HeadOfState))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_governed)) (:GAP (DEN leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tsarina-TheWord
 (and (isa :NOUN (FemaleFn Tsar-HeadOfState))) (frame FN_Leadership)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Tsunami-TheWord (and (isa :NOUN Tsunami))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuareg-TheWord (and (isa :NOUN EthnicGroupOfTuaregs))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tub-TheWord (and (isa :NOUN Bathtub))
 (frame FN_Artifact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tub-TheWord (and (isa :NOUN Tub))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuba-TheWord (and (isa :NOUN Tuba)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tube-TheWord (and (isa :NOUN Pipe-GenericConduit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuberculosis-TheWord (and (isa :NOUN Tuberculosis))
 (frame FN_Medical_conditions)
 (bindingTemplate (TheList (:SUBJECT (NP objectActedOn)) (:GAP (DEN infects))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tubinghead-TheWord (and (isa :NOUN Tubinghead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuesday-TheWord (and (isa :NOUN Tuesday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_relative_time))
   (:GAP (DNI fe_relative_time) (INI fe_relative_time) (DEN fe_unit))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tugboat-TheWord (and (isa :NOUN Tugboat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuition-TheWord
 (and (isa :NOUN MonetaryValue)
      (relationExistsInstance tuition FormalSchooling :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tulip-TheWord (and (isa :NOUN Tulip-Plant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tumble-TheWord (and (isa :NOUN FallingEvent))
 (frame FN_Change_position_on_a_scale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (VPto fe_final_value) ((PPFn for) groupMembers)
    (N fe_attribute objectOfStateChange) (AJP fe_manner)
    ((PPFn in) fe_attribute eventOccursAt temporallyIntersects)
    (AVP temporallyIntersects) ((PPFn of) fe_attribute fe_value_range))
   (:GAP (INI fe_attribute) (2nd fe_attribute objectOfStateChange))
   (:GEN (Poss objectOfStateChange))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0) (0 2 1)) ((0 1 0) (0 4 0))
   ((0 4 1) (0 5 0) (0 6 0)) ((0 3 0) (0 6 1) (2 0 0))
   ((0 0 0) (0 4 2) (2 0 0)))))

(FNNounSemtrans (TheList) Tumbler-TheWord
 (and (isa :NOUN (TallFn DrinkingGlass))) (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) containedObject)
    (AJP mainConstituent fe_relative_location) ((PPFn in) fe_relative_location)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 1)) ((0 3 0)) ((2 0 0)) ((0 4 0)) ((0 2 0)) ((0 0 0))
   ((0 4 1) (2 0 0)) ((0 3 0) (0 4 0)) ((0 2 1) (0 4 0)) ((0 4 0) (2 0 0))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Tumor-TheWord (and (isa :NOUN TumorCondition))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tumor-TheWord (and (isa :NOUN Tumor))
 (frame FN_Medical_conditions) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tun-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "tuna" "fish") Sandwich-TheWord
 (and (isa :NOUN TunaSaladSandwich)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuna-TheWord (and (isa :NOUN Tuna))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuna-TheWord (and (isa :NOUN (MeatFn Tuna)))
 (frame FN_Food)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tundra-TheWord (and (isa :NOUN Tundra))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (AJP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Tune-TheWord (and (isa :NOUN Tune)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tune" "up") Kit-TheWord (and (isa :NOUN TuneUpKit))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tuner-TheWord (and (isa :NOUN RadioTuner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tungsten-TheWord (and (isa :NOUN Tungsten))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tunic-TheWord (and (isa :NOUN Tunic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn over) wornOn) (NP fe_descriptor)
    ((PPFn in) mainConstituent) ((PPFn with) subRegions)
    (AJP fe_descriptor clothingStyle subRegions)
    (N mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn) (2nd wearer))
   (:GEN (Poss fe_descriptor clothingStyle wearer))))
 (groupPatterns
  (TheSet ((2 0 2)) ((0 5 2)) ((0 3 0)) ((0 5 1)) ((0 5 0)) ((0 4 0))
   ((0 5 2) (2 0 2)) ((0 4 1) (0 4 1)) ((0 5 0) (2 0 2)) ((0 4 0) (0 5 2))
   ((0 4 0) (0 4 1)) ((0 0 0) (0 4 1)) ((0 4 0) (0 4 1) (2 0 2))
   ((0 4 0) (2 0 0) (2 0 1)) ((0 3 0) (0 4 0) (0 4 1) (0 5 2))
   ((0 1 0) (0 2 0) (0 4 1) (0 4 2)))))

(FNNounSemtrans (TheList "tunisian") Dinar-TheWord
 (and (isa :NOUN Dinar-Tunisia)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tunisian-TheWord
 (and (isa :NOUN EthnicGroupOfTunisians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tunnel") Diode-TheWord (and (isa :NOUN TunnelDiode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tunnel-TheWord (and (isa :NOUN Tunnel))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) objectFoundInLocation) ((PPFn to) to-Generic)
    (AJP (InverseBinaryPredicateFn nameString))
    ((PPFn under) fe_relative_location)
    (N objectFoundInLocation fe_characteristic
     (InverseBinaryPredicateFn nameString) deviceUse))
   (:GAP (DEN fe_roadway)) (:NOUN (N (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_relative_location))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 3 0)) ((2 0 0)) ((0 4 2)) ((0 2 0)) ((0 4 1)) ((0 0 0))
   ((0 4 0)) ((0 1 0) (0 4 3)))))

(FNNounSemtrans (TheList) Tupperware-TheWord
 (and (isa :NOUN PlasticFoodContainer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turban-TheWord (and (isa :NOUN Turban))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) mainConstituent))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList "turbinate") Bone-TheWord
 (and (isa :NOUN InferiorTurbinatedBone)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turbine-TheWord (and (isa :NOUN Turbine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turbine-TheWord (and (isa :NOUN TurbineEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "turbocharged") Engine-TheWord
 (and (isa :NOUN TurbochargedEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "turbofan") Engine-TheWord
 (and (isa :NOUN TurbofanEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "turbojet") Engine-TheWord
 (and (isa :NOUN TurbojetEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turbojet-TheWord (and (isa :NOUN TurbojetEngine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turbojet-TheWord
 (and (isa :NOUN TurbojetPropelledAircraft)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turd-TheWord (and (isa :NOUN Feces)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tureen-TheWord (and (isa :NOUN ServingVessel))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 0 0)) ((0 2 0) (0 2 1)))))

(FNNounSemtrans (TheList) Turf-TheWord (and (isa :NOUN GrassTurf))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turk-TheWord (and (isa :NOUN TurkishPerson))
 (frame FN_People_by_origin)
 (bindingTemplate (TheList (:GAP (2nd comesFrom-Generic) (DEN fe_person))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turkey-TheWord (and (isa :NOUN Turkey-Bird))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turkey-TheWord (and (isa :NOUN Turkey-Meat))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Turkoman-TheWord
 (and (isa :NOUN EthnicGroupOfTurkmen)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "turn") Radius-TheWord
 (and (isa :NOUN Distance-Absolute)
      (relationExistsInstance turnRadius TransportationDevice :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turn-TheWord (and (isa :NOUN Turning))
 (frame FN_Change_direction)
 (bindingTemplate
  (TheList (:OBJECT (NP objectRotating))
   (:OBLIQUE-OBJECT ((PPFn off) fe_direction))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Turn-TheWord
 (and (isa :NOUN TemporalThing)
      (relationExistsInstance temporallyContains TemporalThing :NOUN))
 (frame FN_Temporal_subregion)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) occursDuring)) (:GAP (DEN parts))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Turnip-TheWord (and (isa :NOUN TurnipPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turnip-TheWord (and (isa :NOUN TurnipRoot-Foodstuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turnpike-TheWord (and (isa :NOUN TollRoad))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turntable-TheWord
 (and (isa :NOUN TurntableMechanism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turquoise-TheWord (and (isa :NOUN Turquoise-Gem))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turtle-TheWord (and (isa :NOUN Turtle))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Turtleneck-TheWord (and (isa :NOUN TurtleneckShirt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tusk-TheWord (and (isa :NOUN Tusk)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tussle-TheWord (and (isa :NOUN HostileSocialAction))
 (frame FN_Hostile_encounter) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tutee-TheWord (and (isa :NOUN Student))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList (:SUBJECT (NP studentOf instructor))
   (:GAP (DEN studentOf) (INI (InverseBinaryPredicateFn teacherTypeOfField)))
   (:GEN (Poss instructor))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Tutor-TheWord (and (isa :NOUN Tutor))
 (frame FN_Education_teaching)
 (bindingTemplate
  (TheList
   (:SUBJECT
    (NP eventOccursAt studentOf (InverseBinaryPredicateFn teacherTypeOfField)
     instructor))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt)
    ((PPFn from) duration eventOccursAt) ((PPFn to) studentOf)
    ((PPFn of) eventOccursAt by-Underspecified studentOf)
    (N eventOccursAt educationLevel
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))
     (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn in) eventOccursAt (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn for) duration eventOccursAt fe_qualification studentOf
     (InverseBinaryPredicateFn teacherTypeOfField))
    (AJP (InverseBinaryPredicateFn teacherTypeOfField))
    ((PPFn on) by-Underspecified (InverseBinaryPredicateFn teacherTypeOfField))
    (NP (InverseBinaryPredicateFn teacherTypeOfField) instructor))
   (:GAP (INI studentOf (InverseBinaryPredicateFn teacherTypeOfField))
    (2nd (InverseBinaryPredicateFn teacherTypeOfField)) (DEN instructor))
   (:NOUN (N instructor)) (:GEN (Poss eventOccursAt studentOf))
   (:APPOSITIVE (NP instructor))))
 (groupPatterns
  (TheSet ((0 0 3)) ((3 0 0)) ((1 8 1)) ((0 0 2)) ((1 7 0)) ((1 2 0)) ((0 0 1))
   ((4 0 1)) ((1 6 3)) ((1 5 1)) ((1 4 3)) ((1 3 1)) ((1 4 1)) ((1 5 0))
   ((0 0 0)) ((1 1 1)) ((4 0 1) (5 0 0)) ((0 0 3) (1 3 2)) ((1 4 3) (4 0 1))
   ((0 0 3) (4 0 1)) ((0 0 3) (1 2 0)) ((0 0 1) (1 6 4)) ((0 0 3) (1 5 1))
   ((0 0 3) (1 9 0)) ((0 0 3) (1 4 2)) ((0 0 3) (1 6 2)) ((0 0 3) (1 3 1))
   ((4 0 0) (5 0 0)) ((0 0 3) (1 4 0)) ((0 0 3) (1 6 1)) ((0 0 3) (1 0 0))
   ((1 0 0) (4 0 1)) ((0 0 3) (1 3 0)) ((0 0 3) (1 4 3) (4 0 1))
   ((1 4 1) (1 4 3) (1 9 1)) ((0 0 3) (1 0 0) (1 4 3))
   ((0 0 3) (1 0 0) (1 5 1)) ((0 0 3) (1 2 0) (1 6 0))
   ((0 0 3) (1 4 3) (1 8 0) (4 0 1)) ((0 0 3) (1 1 0) (1 3 0) (1 4 3)))))

(FNNounSemtrans (TheList) Tutu-TheWord (and (isa :NOUN Tutu))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_descriptor)) (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tuxedo-TheWord (and (isa :NOUN Tuxedo))
 (frame FN_Clothing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tv") Antenna-TheWord (and (isa :NOUN TVAntenna))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tv") Room-TheWord (and (isa :NOUN FamilyRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tv") Transmitter-TheWord
 (and (isa :NOUN TVTransmitter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tweak-TheWord
 (and (isa :NOUN
       (CollectionIntersectionFn
        (TheSet ActionOnObject ImprovementEvent IntrinsicStateChangeEvent
         NonNaturalThing))))
 (frame FN_Adjusting)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn of) fe_feature)
    (Srel fe_imposed_purpose) ((PPFn on) parts))))
 (groupPatterns (TheSet ((0 3 0)) ((0 0 0) (0 3 0)) ((0 0 0) (0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Tweeds-TheWord
 (and (isa :NOUN Clothing-Generic)
      (relationInstanceExists mainConstituent :NOUN Tweed))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor) (Poss clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 2 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Tweet-TheWord (and (isa :NOUN TweetingSound))
 (frame FN_Sounds) (bindingTemplate (TheList (:SUBJECT (NP emitter))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tweet-TheWord
 (and (isa :NOUN AspatialInformationStore)
      (relationExistsInstance websiteContents TwitterStream :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "twenty-dollar") Bill-TheWord
 (and (isa :NOUN TwentyDollarBill-US)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Twenty-Two-TheWord (and (isa :NOUN Rifle-22))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Twig-TheWord (and (isa :NOUN (SmallFn TreeBranch)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Twilight-TheWord (and (isa :NOUN Twilight))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Twilight-TheWord (and (isa :NOUN Dusk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Twinkle-TheWord
 (and (isa :NOUN (WaveEmissionFn VisibleLight))) (frame FN_Light_movement)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Twitter-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_manner)) (:GEN (Poss emitter))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "two" "and" "a" "half" "bath") Dwelling-TheWord
 (and (isa :NOUN TwoAndAHalfBathDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "bedroom") Dwelling-TheWord
 (and (isa :NOUN TwoBedroomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "car") Garage-TheWord
 (and (isa :NOUN TwoCarGarage)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "cycle") Engine-TheWord
 (and (isa :NOUN TwoCycleEngine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "dining" "room") Residence-TheWord
 (and (isa :NOUN TwoDiningRoomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "family" "room") Dwelling-TheWord
 (and (isa :NOUN TwoFamilyRoomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "living" "room") Dwelling-TheWord
 (and (isa :NOUN TwoLivingRoomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "person") Game-TheWord
 (and (isa :NOUN TwoPersonGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two-person") Game-TheWord
 (and (isa :NOUN TwoPersonGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "player") Game-TheWord
 (and (isa :NOUN TwoPersonGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two-player") Game-TheWord
 (and (isa :NOUN TwoPersonGame)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Two-Piece-TheWord (and (isa :NOUN Bikini))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Two-Story-TheWord (and (isa :NOUN TwoStoryBuilding))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "terminal" "electrical") Device-TheWord
 (and (isa :NOUN TwoTerminalElectricalDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "two" "way") Radio-TheWord
 (and (isa :NOUN TwoWayRadio)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tying-TheWord (and (isa :NOUN AttachmentEvent))
 (frame FN_Attaching)
 (bindingTemplate (TheList (:SUBJECT (NP objectOfStateChange))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Tympani-TheWord (and (isa :NOUN Tympani))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tympanic") Thermometer-TheWord
 (and (isa :NOUN TympanicThermometer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Type-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category)) (:OBJECT (AJP fe_type_property))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) ((PPingFn of) fe_category)
    (VPed fe_item_property) (NP fe_category fe_subtype)
    (N fe_category fe_type_property) (AJP fe_type_property)
    (VPing fe_type_property) (Sfin fe_type_property))
   (:GAP (DNI fe_category) (DEN fe_subtype)) (:NOUN (N fe_category))
   (:GEN (Poss fe_category fe_item_property))))
 (groupPatterns
  (TheSet ((2 7 0)) ((2 4 1)) ((5 0 0)) ((2 1 0)) ((2 0 0)) ((2 4 0))
   ((2 1 0) (2 5 0)) ((2 0 0) (2 6 0)) ((2 0 0) (2 5 0)) ((2 3 0) (2 5 0))
   ((0 0 0) (5 0 1)) ((2 2 0) (4 0 0)) ((0 0 0) (1 0 0) (1 0 0) (2 3 1)))))

(FNNounSemtrans (TheList "typewriter") Key-TheWord
 (and (isa :NOUN TypewriterKey)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "typewriter") Ribbon-TheWord
 (and (isa :NOUN TypewriterRibbon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Typewriter-TheWord (and (isa :NOUN Typewriter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Typhoon-TheWord (and (isa :NOUN HurricaneAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tyrannosaurus") Rex-TheWord
 (and (isa :NOUN TyrannosaurusRex)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tyrant-TheWord (and (isa :NOUN Tyrant))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (AJP fe_descriptor))
   (:GAP (INI fe_governed)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Tyrant-TheWord
 (and (isa :NOUN (FrequentPerformerFn Dictating-GoverningSomething)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) U-233-TheWord
 (and (isa :NOUN (IsotopeFn Uranium 233))) (frame FN_Tech)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) U-235-TheWord
 (and (isa :NOUN (IsotopeFn Uranium 235))) (frame FN_Tech)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) U-238-TheWord
 (and (isa :NOUN (IsotopeFn Uranium 238))) (frame FN_Tech)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "u.s.") Currency-TheWord (and (isa :NOUN Currency-US))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ua" "v") Camera-TheWord (and (isa :NOUN UAVCamera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ufo-TheWord (and (isa :NOUN UFO)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ugandan") Shilling-TheWord
 (and (isa :NOUN Shilling-Uganda)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ukrainian-TheWord (and (isa :NOUN UkrainianLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ulcer-TheWord (and (isa :NOUN UlcerDisease))
 (frame FN_Medical_conditions)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT ((PPFn above) eventOccursAt)) (:GAP (DEN infects))))
 (groupPatterns (TheSet ((0 0 0) (0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Ulna-TheWord (and (isa :NOUN Ulna)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ulnar") Nerve-TheWord (and (isa :NOUN UlnarNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ulnar") Vein-TheWord (and (isa :NOUN UlnarVein))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ulster-TheWord (and (isa :NOUN WinterCoat))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ultracentrifuge-TheWord
 (and (isa :NOUN Ultracentrifuge)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ultralight") Helicopter-TheWord
 (and (isa :NOUN Ultralight-Helicopter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ultralight-TheWord (and (isa :NOUN Ultralight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ultralight-TheWord
 (and (isa :NOUN Ultralight-Airplane)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ultrasound") Scanner-TheWord
 (and (isa :NOUN UltrasoundScanner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "umbilical") Cord-TheWord
 (and (isa :NOUN UmbilicalCord)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Umbrella-TheWord (and (isa :NOUN Umbrella))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Umlaut-TheWord (and (isa :NOUN Umlaut-TheSymbol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Umpire-TheWord (and (isa :NOUN BaseballUmpire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uncertainty-TheWord (and (isa :NOUN Confidence))
 (frame FN_Certainty)
 (bindingTemplate
  (TheList (:SUBJECT (N subjectOfMentalSituation))
   (:OBLIQUE-OBJECT ((PPFn on) subjectOfMentalSituation)
    (Sub topicOfIndividual) ((PPFn as) topicOfIndividual)
    ((PPingFn of) topicOfIndividual) (PPinterrog topicOfIndividual)
    (Sinterrog topicOfIndividual) (AJP fe_degree fe_manner)
    (A fe_degree fe_manner)
    ((PPFn about) subjectOfMentalSituation topicOfIndividual situationTopic)
    ((PPFn in) eventAffectsBodyPart situationTopic)
    ((PPFn of) subjectOfMentalSituation situationTopic)
    ((PPFn over) situationTopic) ((PPFn regarding) situationTopic))
   (:GAP (INI subjectOfMentalSituation) (DEN topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 12 0)) ((1 11 0)) ((1 10 1)) ((1 9 0)) ((1 1 0)) ((1 5 0))
   ((1 4 0)) ((1 3 0)) ((1 2 0)) ((1 9 1)) ((1 8 2)) ((3 0 0)) ((1 0 0))
   ((1 10 0)) ((1 7 0) (1 8 2)) ((1 2 0) (1 7 0)) ((1 9 1) (3 0 0))
   ((1 8 2) (3 0 0)) ((1 7 1) (3 0 0)) ((0 0 0) (1 7 1)) ((1 7 0) (1 8 0))
   ((1 1 0) (1 6 1)) ((1 6 0) (1 8 1)))))

(FNNounSemtrans (TheList) Uncle-TheWord
 (and (isa :NOUN MaleHuman) (relationExistsInstance uncles Person :NOUN))
 (frame FN_Kinship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_ego)) (:OBLIQUE-OBJECT ((PPFn of) fe_ego))
   (:GAP (DEN fe_alter) (DNI fe_ego)) (:NOUN (N fe_alter))
   (:GEN (Poss fe_ego))))
 (groupPatterns (TheSet ((4 0 0)) ((1 0 0)) ((0 0 0)) ((3 0 0) (4 0 0)))))

(FNNounSemtrans (TheList) Unconsciousness-TheWord (and (isa :NOUN Unconscious))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unction-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement)) (:OBJECT (NP groupMembers))
   (:GEN (Poss leadersOfMovement))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Undead-TheWord (and (isa :NOUN (FormerFn Deceased)))
 (frame FN_Dead_or_alive)
 (bindingTemplate (TheList (:GAP (DEN affectedAgent))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Underbelly-TheWord (and (isa :NOUN BottomSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts)) (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Underclothes-TheWord (and (isa :NOUN Underwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Underclothing-TheWord (and (isa :NOUN Underwear))
 (frame FN_Clothing)
 (bindingTemplate (TheList (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "undercounter" "trash") Compactor-TheWord
 (and (isa :NOUN TrashCompactor-Undercounter)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Undergarment-TheWord (and (isa :NOUN Underwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 3)) ((0 0 1)) ((0 0 0)) ((0 0 2) (0 0 2)))))

(FNNounSemtrans (TheList) Undergraduate-TheWord
 (and (isa :NOUN UndergraduateStudent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Undernourishment-TheWord
 (and (isa :NOUN DietaryDeficiencyCondition)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Underpants-TheWord (and (isa :NOUN Underpants))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Underpass-TheWord (and (isa :NOUN Underpass))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn to) to-Generic)
    (AJP fe_characteristic mainConstituent)
    ((PPFn through) trajectory-Complete) ((PPFn in) fe_relative_location)
    (N (InverseBinaryPredicateFn nameString) deviceUse))
   (:GAP (DEN fe_roadway))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 1 1)) ((0 3 0) (0 4 1)) ((0 0 0) (0 1 0))
   ((0 1 0) (0 2 0) (0 4 1)))))

(FNNounSemtrans (TheList) Underside-TheWord (and (isa :NOUN BottomSide))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_part_prop)
    ((PPFn to) (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Understanding-TheWord
 (and (isa :NOUN AwarenessQuantity)) (frame FN_Awareness)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP subjectOfMentalSituation topicOfIndividual situationTopic))
   (:OBLIQUE-OBJECT ((PPFn among) subjectOfMentalSituation)
    ((PPFn between) subjectOfMentalSituation)
    ((PPFn by) subjectOfMentalSituation)
    (NP subjectOfMentalSituation topicOfIndividual)
    ((PPingFn of) topicOfIndividual) ((PPingFn over) topicOfIndividual)
    (Sinterrog topicOfIndividual) (Swhether topicOfIndividual)
    ((PPingFn through) fe_evidence) ((PPingFn by) fe_evidence)
    ((PPFn from) fe_evidence) ((PPFn as) situationTopic)
    ((PPFn about) situationTopic)
    ((PPFn of) subjectOfMentalSituation topicOfIndividual situationTopic)
    ((PPingFn in) situationTopic)
    (AJP topicOfIndividual fe_degree fe_evidence situationTopic)
    (N subjectOfMentalSituation situationTopic) ((PPFn into) situationTopic)
    ((PPFn on) subjectOfMentalSituation topicOfIndividual situationTopic)
    ((PPFn over) situationTopic)
    (Sfin topicOfIndividual fe_evidence situationTopic))
   (:GAP (INI subjectOfMentalSituation topicOfIndividual)
    (DEN topicOfIndividual))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns
  (TheSet ((1 20 2)) ((1 19 0)) ((1 18 2)) ((1 13 2)) ((1 17 0)) ((1 11 0))
   ((1 12 0)) ((0 0 2)) ((1 15 2)) ((1 7 0)) ((1 20 0)) ((1 5 0)) ((1 4 0))
   ((1 18 1)) ((1 13 1)) ((3 0 0)) ((1 18 0)) ((1 1 0)) ((1 0 0)) ((1 16 0))
   ((1 15 1) (1 16 1)) ((1 6 0) (1 13 2)) ((1 13 1) (1 15 1))
   ((1 14 0) (3 0 0)) ((0 0 2) (3 0 0)) ((1 15 3) (3 0 0)) ((0 0 2) (1 13 0))
   ((1 2 0) (1 11 0)) ((1 2 0) (1 12 0)) ((0 0 0) (1 14 0)) ((0 0 0) (1 13 2))
   ((0 0 0) (1 12 0)) ((1 3 0) (1 11 0)) ((0 0 0) (1 9 0)) ((1 20 0) (3 0 0))
   ((1 13 1) (3 0 0)) ((0 0 1) (3 0 0)) ((1 15 0) (3 0 0)) ((0 0 0) (1 20 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 13 1)) ((0 0 0) (1 12 0) (1 20 0))
   ((1 13 1) (1 20 1) (3 0 0)) ((0 0 1) (1 10 0) (3 0 0))
   ((1 3 1) (1 13 1) (3 0 0)) ((0 0 0) (1 3 1) (1 13 1))
   ((0 0 0) (1 3 1) (1 8 0) (1 13 1)))))

(FNNounSemtrans (TheList) Undertaking-TheWord (and (isa :NOUN Commitment))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (AJP genericPathway-Partial)
    (Sfin infoTransferred) (VPto infoTransferred))
   (:GAP (DNI infoTransferred) (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 3 0)) ((2 2 0)) ((0 0 0)) ((4 0 0)) ((2 3 0) (4 0 0))
   ((0 0 1) (2 3 0)) ((0 0 1) (2 2 0)) ((2 1 0) (2 2 0)) ((0 0 1) (2 0 0))
   ((0 0 1) (1 0 0) (2 2 0)))))

(FNNounSemtrans (TheList) Undertaking-TheWord
 (and (isa :NOUN AssignedTaskType)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Undertaking-TheWord (and (isa :NOUN Project))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Undertaking-TheWord
 (and (isa :NOUN Undertaking-WorkingEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "underwater") Camera-TheWord
 (and (isa :NOUN UnderwaterCamera)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "underwater" "mine" "detection") Device-TheWord
 (and (isa :NOUN UnderwaterMineDetectionDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Underwear-TheWord (and (isa :NOUN Underwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle)
    (N mainConstituent clothingStyle) ((PPFn for) deviceUse wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 1 1)) ((0 0 1)) ((0 1 0)) ((0 0 0))
   ((0 0 1) (0 2 0)) ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Undies-TheWord (and (isa :NOUN Underwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Undress-TheWord (and (isa :NOUN Undressing))
 (frame FN_Wearing)
 (bindingTemplate (TheList (:SUBJECT (NP wearer)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Unemployment-TheWord
 (and (isa :NOUN HasPositionRelationship)) (frame FN_Being_employed)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unemployment-TheWord
 (and (isa :NOUN IntervalOnNumberLine)
      (relationExistsInstance unemploymentRate GeographicalRegion :NOUN))
 (frame FN_Unemployment_rate)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn in) eventOccursAt) ((PPFn at) fe_value))
   (:GAP (DEN fe_employment) (DNI fe_individuals) (INC fe_individuals)
    (INI fe_individuals fe_value))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "unfinished" "wooden") Furniture-TheWord
 (and (isa :NOUN UnfinishedWoodenFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unfortunate-TheWord
 (and (isa :NOUN UnfortunatePerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unicorn-TheWord (and (isa :NOUN Unicorn))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unicycle-TheWord (and (isa :NOUN Unicycle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "unidentified" "flying") Object-TheWord
 (and (isa :NOUN UFO)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uniform-TheWord (and (isa :NOUN Uniform))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:SUBJECT (NP itemWorn))
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle deviceUse)
    ((PPFn of) fe_descriptor clothingStyle wearer)
    (N fe_descriptor clothingStyle deviceUse wearer))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 2)) ((1 2 3)) ((1 2 2)) ((1 0 2)) ((1 2 1)) ((1 0 1))
   ((1 1 0)) ((1 2 0)) ((1 0 0)) ((1 2 2) (3 0 0)) ((1 2 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 1 2)) ((1 1 0) (1 2 2)) ((1 0 0) (1 2 2))
   ((1 0 0) (1 0 2)) ((1 0 0) (1 0 0)) ((0 0 0) (0 0 0) (1 1 1))
   ((1 0 0) (1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList "uninterruptible" "power") Supply-TheWord
 (and (isa :NOUN UninterruptiblePowerSupply)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Union-TheWord (and (isa :NOUN FederalUnion))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_container_possessor hasMembers))
   (:GAP (DEN fe_organization))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Union-TheWord (and (isa :NOUN TradeUnion))
 (frame FN_Organization)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (A fe_container_possessor hasMembers))
   (:GAP (DEN fe_organization))))
 (groupPatterns (TheSet ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Unionization-TheWord (and (isa :NOUN Unionization))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "unit" "of") Measurement-TheWord
 (and (isa :NOUN UnitOfMeasure)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unit-TheWord
 (and (isa :NOUN Organization)
      (relationExistsInstance subOrganizations Organization :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "united" "nations") Agency-TheWord
 (and (isa :NOUN UnitedNationsAgency)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "united" "states") Code-TheWord
 (and (isa :NOUN UnitedStatesCode)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "united" "states") Dollar-TheWord
 (and (isa :NOUN Dollar-UnitedStates)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "united" "states" "post") Office-TheWord
 (and (isa :NOUN PostalService)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) University-TheWord (and (isa :NOUN Facility-Generic))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_container_possessor)
    (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString))
    (DNI locationUse) (INI locationUse))
   (:NOUN (N (InverseBinaryPredicateFn nameString)))
   (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 0)) ((2 0 0)) ((3 0 0)) ((0 0 0)) ((0 2 0)))))

(FNNounSemtrans (TheList) University-TheWord (and (isa :NOUN University))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unsuitability-TheWord (and (isa :NOUN SuitableThing))
 (frame FN_Suitability) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unsuitableness-TheWord
 (and (isa :NOUN SuitableThing)) (frame FN_Suitability)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Untruth-TheWord
 (and (isa :NOUN PropositionalInformationThing)
      (relationExistsInstance containsInfoPropositional-IBT Lying :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Unwillingness-TheWord (and (isa :NOUN Willingness))
 (frame FN_Willingness) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Updraft-TheWord
 (and (isa :NOUN FluidFlow-Translation-VerticalUpward)
      (relationInstanceExists objectTranslating :NOUN GaseousTangibleThing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uploading-TheWord (and (isa :NOUN UploadingAFile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "upper") Class-TheWord (and (isa :NOUN UpperClass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "upper") Jaw-TheWord (and (isa :NOUN Maxilla))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Upper-TheWord (and (isa :NOUN Amphetamine))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Upper-TheWord (and (isa :NOUN ShoeUppers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "upright") Freezer-TheWord
 (and (isa :NOUN Freezer-Upright)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "upright") Piano-TheWord
 (and (isa :NOUN UprightPiano)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Upright-TheWord (and (isa :NOUN UprightPiano))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "upright" "vacuum") Cleaner-TheWord
 (and (isa :NOUN UprightVacuumCleaner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "upright") Vacuum-TheWord
 (and (isa :NOUN UprightVacuumCleaner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uprising-TheWord (and (isa :NOUN Coup))
 (frame FN_Change_of_leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn against) losesControl losesControl)
    ((PPFn by) fe_selector) (A fe_selector) ((PPFn among) fe_selector)
    (AJP fe_degree fe_manner by-Underspecified eventOutcomes fe_selector)
    ((PPFn of) fe_selector) (N fe_selector temporallyIntersects))
   (:GAP (DNI losesControl losesControl)
    (2nd losesControl losesControl
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role)))
    (CNI takesControl losesControl fe_selector))
   (:NOUN (N fe_selector)) (:GEN (Poss fe_selector))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 5 0)) ((0 1 0)) ((0 6 0)) ((0 4 4)) ((0 3 0)) ((0 2 0))
   ((0 0 0)) ((0 4 2)) ((0 4 0)) ((0 4 3) (2 0 0)) ((0 0 0) (0 6 0))
   ((0 0 0) (0 2 0)) ((0 1 0) (0 4 1)) ((0 0 0) (0 6 0) (0 6 1)))))

(FNNounSemtrans (TheList) Uranium-TheWord (and (isa :NOUN Uranium))
 (frame FN_Substance)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT
    (AJP fe_descriptor fe_inherent_purpose comesFrom-Generic
     activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns
  (TheSet ((0 0 3)) ((0 0 2)) ((0 0 1)) ((0 0 0)) ((0 0 0) (0 0 3))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Uranium-233-TheWord
 (and (isa :NOUN (IsotopeFn Uranium 233))) (frame FN_Tech)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uranium-235-TheWord
 (and (isa :NOUN (IsotopeFn Uranium 235))) (frame FN_Tech)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uranium-238-TheWord
 (and (isa :NOUN (IsotopeFn Uranium 238))) (frame FN_Tech)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "urban") Area-TheWord (and (isa :NOUN UrbanArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Urea-TheWord (and (isa :NOUN Urea)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ureter-TheWord (and (isa :NOUN Ureter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Urethra-TheWord (and (isa :NOUN Urethra))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Urge-TheWord
 (and (isa :NOUN InternalSensoryQuantity)) (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_event) (VPto fe_event)
    ((PPingFn for) fe_event) ((PPFn in) objectActedOn)
    ((PPFn of) objectActedOn) ((PPFn within) objectActedOn)
    ((PPFn among) objectActedOn) ((PPFn for) fe_event fe_focal_participant)
    (N fe_focal_participant) ((PPFn as) happensOnDate))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 7 1) (2 0 0)) ((1 8 0) (2 0 0)) ((1 6 0) (1 7 1))
   ((0 0 0) (1 7 1)) ((1 1 0) (2 0 0)) ((1 1 0) (1 5 0)) ((1 1 0) (1 3 0))
   ((0 0 0) (1 1 0)) ((1 2 0) (2 0 0)) ((1 7 0) (2 0 0)) ((1 0 1) (2 0 0))
   ((1 0 1) (1 4 0)) ((0 0 0) (1 0 1)) ((0 0 0) (1 1 0) (1 9 0))
   ((0 0 0) (1 0 0) (1 7 1)) ((0 0 0) (1 0 0) (1 1 0))
   ((1 0 0) (1 0 1) (1 3 0)))))

(FNNounSemtrans (TheList) Urinal-TheWord (and (isa :NOUN Urinal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "urinary") Bladder-TheWord
 (and (isa :NOUN Bladder-Urinary)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "urine") Test-TheWord (and (isa :NOUN UrineTest))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Urine-TheWord (and (isa :NOUN Urine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Urn-TheWord (and (isa :NOUN Urn))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) (AJP mainConstituent)
    (N mainConstituent deviceUse) (DEN deviceUse))
   (:GAP (DEN containerUsed deviceUse)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 3 0)) ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0))
   ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList "urogenital") System-TheWord
 (and (isa :NOUN UrinarySystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Urologist-TheWord (and (isa :NOUN Urologist))
 (frame FN_Medical_professionals) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "uruguayan") Peso-TheWord
 (and (isa :NOUN NewPeso-Uruguay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Us-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "usb") Cable-TheWord
 (and (isa :NOUN USBComputerCable)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Use-TheWord
 (and (isa :NOUN Thing)
      (relationExistsInstance
       (Kappa (?evt ?poss)
        (and (actors ?evt ?actor)
             (optionsAvailable ?actor ?evt objectSelected ?poss)))
       Event :NOUN))
 (frame FN_Alternatives) (bindingTemplate (TheList (:GAP (DEN fe_situation))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Use-TheWord (and (isa :NOUN Goal)) (frame FN_Purpose)
 (bindingTemplate
  (TheList (:SUBJECT (NP by-Underspecified))
   (:OBLIQUE-OBJECT ((PPFn by) performedBy) ((PPFn in) fe_domain)
    (VPto to-Generic) (AJP fe_domain to-Generic) (A to-Generic) (N to-Generic)
    ((PPingFn for) to-Generic) ((PPFn of) by-Underspecified))
   (:GAP (CNI performedBy) (INI performedBy)) (:NOUN (N by-Underspecified))))
 (groupPatterns
  (TheSet ((1 5 0)) ((1 3 1)) ((1 4 0)) ((3 0 0)) ((1 2 0)) ((0 0 0) (1 6 0))
   ((0 0 0) (1 1 0)) ((1 3 1) (3 0 0)) ((1 0 0) (1 2 0) (1 3 0) (1 7 0)))))

(FNNounSemtrans (TheList) Use-TheWord (and (isa :NOUN UsingADevice))
 (frame FN_Using)
 (bindingTemplate
  (TheList (:SUBJECT (NP instrument-Generic)) (:OBJECT (NP instrument-Generic))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn of) instrument-Generic)
    (A doneBy fe_manner) ((PPFn on) fe_manner) ((PPFn against) purposeOfEvent)
    ((PPFn for) purposeOfEvent) (N doneBy instrument-Generic purposeOfEvent)
    (VPto purposeOfEvent) ((PPFn in) eventOccursAt purposeOfEvent)
    ((PPFn during) temporallyIntersects)
    (AJP fe_manner purposeOfEvent temporallyIntersects))
   (:GAP (DNI instrument-Generic) (CNI doneBy instrument-Generic)
    (INI doneBy instrument-Generic purposeOfEvent
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss doneBy instrument-Generic))))
 (groupPatterns
  (TheSet ((2 8 1)) ((2 6 2)) ((2 9 0)) ((2 6 0)) ((2 6 1)) ((2 1 0)) ((2 3 0))
   ((1 0 0)) ((0 0 0) (2 10 2)) ((2 10 1) (4 0 1)) ((2 1 0) (2 4 0))
   ((2 1 0) (2 10 1)) ((0 0 0) (2 6 2)) ((2 4 0) (2 6 1)) ((2 6 1) (2 8 0))
   ((2 0 0) (2 5 0)) ((0 0 0) (2 8 0)) ((2 1 0) (4 0 0)) ((2 0 0) (2 1 0))
   ((0 0 0) (2 0 0)) ((2 1 0) (2 6 0)) ((2 1 0) (2 4 0) (2 6 0))
   ((2 1 0) (2 4 0) (2 7 0) (2 10 0)) ((2 1 0) (2 2 0) (2 2 1) (2 4 0)))))

(FNNounSemtrans (TheList) User-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy UsingAnObject :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Username-TheWord (and (isa :NOUN Username))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Usher-TheWord (and (isa :NOUN Usher)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "utensil") Organizer-TheWord
 (and (isa :NOUN KitchenUtensilOrganizer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Utensil-TheWord (and (isa :NOUN FoodUtensil))
 (frame FN_Gizmo)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP deviceUse) (N deviceUse) ((PPFn for) deviceUse)
    ((PPingFn for) deviceUse))
   (:GAP (DEN fe_gizmo)) (:GEN (Poss fe_user))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Utensil-TheWord (and (isa :NOUN FoodUtensil))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uterus-TheWord (and (isa :NOUN Uterus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Utilisation-TheWord (and (isa :NOUN UsingADevice))
 (frame FN_Using) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "utility") Program-TheWord
 (and (isa :NOUN UtilityProgram)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "utility") Room-TheWord (and (isa :NOUN UtilityRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Utility-TheWord (and (isa :NOUN UtilityCompany))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Utility-TheWord (and (isa :NOUN Effectiveness))
 (frame FN_Usefulness)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) objectActedOn) ((PPFn for) purposeOfEvent))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "utility") Wire-TheWord (and (isa :NOUN UtilityWire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uzbek-TheWord (and (isa :NOUN EthnicGroupOfUzbeks))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uzbek-TheWord (and (isa :NOUN UzbekLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Uzi-TheWord (and (isa :NOUN SubmachineGun-Uzi))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) V-TheWord
 (and (isa :NOUN GeometricallyDescribableThing)) (frame FN_Shapes)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "v12") Engine-TheWord (and (isa :NOUN V12Engine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "v6") Engine-TheWord (and (isa :NOUN V6Engine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) V8-^S-TheWord (and (isa :NOUN V8Engine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vacancy-TheWord (and (isa :NOUN Vacancy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vacation-TheWord (and (isa :NOUN VacationTrip))
 (frame FN_Temporary_leave) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vaccination-TheWord
 (and (isa :NOUN VaccinationEvent)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vaccine-TheWord (and (isa :NOUN VaccineForHumans))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vaccine-TheWord (and (isa :NOUN Vaccine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vacuum") Cleaner-TheWord
 (and (isa :NOUN VacuumCleaner)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vacuum") Deposition-TheWord
 (and (isa :NOUN VacuumDeposition)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vacuum-TheWord (and (isa :NOUN VacuumCleaner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vacuum") Tube-TheWord (and (isa :NOUN VacuumTube))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vagina-TheWord (and (isa :NOUN Vagina))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vagus-TheWord (and (isa :NOUN VagusNerve))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vale-TheWord (and (isa :NOUN Valley))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N parts)
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "valentine") Day-TheWord
 (and (isa :NOUN ValentinesDay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Valentine-TheWord (and (isa :NOUN ValentinesCard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Valise-TheWord (and (isa :NOUN Suitcase))
 (frame FN_Containers)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N mainConstituent)) (:GAP (DEN containerUsed))
   (:GEN (Poss owner))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Valley-TheWord (and (isa :NOUN Valley))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP (InverseBinaryPredicateFn nameString))
    ((PPFn of) fe_container_possessor (InverseBinaryPredicateFn nameString))
    ((PPFn near) fe_relative_location) ((PPFn between) fe_relative_location)
    ((PPFn in) fe_relative_location) (AJP parts fe_relative_location)
    ((PPFn below) fe_relative_location)
    (N fe_formational_cause (InverseBinaryPredicateFn nameString)
     fe_relative_location activeIngredientsOfType)
    (VPed activeIngredientsOfType))
   (:GAP (DEN eventLocale) (2nd (InverseBinaryPredicateFn nameString)))))
 (groupPatterns
  (TheSet ((0 8 0)) ((0 4 0)) ((0 3 0)) ((0 6 0)) ((0 7 2)) ((0 1 1)) ((0 0 0))
   ((0 7 1)) ((0 7 0)) ((0 1 0)) ((0 5 0)) ((0 7 3) (0 7 3)) ((0 5 1) (0 7 3))
   ((0 4 0) (0 7 1)) ((0 3 0) (0 7 1)) ((0 5 0) (0 7 3)) ((0 2 0) (0 5 0))
   ((0 1 0) (0 5 0)))))

(FNNounSemtrans (TheList "valuable-personal") Possession-TheWord
 (and (isa :NOUN Valuable-PersonalPossession)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Value-TheWord (and (isa :NOUN Effectiveness))
 (frame FN_Usefulness)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (A fe_domain) (AJP fe_degree fe_domain)
    ((PPFn in) fe_domain objectActedOn) ((PPFn of) objectActedOn)
    ((PPFn to) purposeOfEvent) ((PPFn for) objectActedOn purposeOfEvent))
   (:GAP (DNI purposeOfEvent))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0)) ((1 0 0) (1 3 0))
   ((1 0 0) (1 5 0)) ((0 0 0) (1 0 0)) ((1 1 0) (1 3 0)) ((1 1 0) (1 2 1))
   ((0 0 0) (1 1 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 1 1) (1 2 0))
   ((0 0 0) (1 1 0) (1 5 1)) ((0 0 0) (1 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Valve-TheWord (and (isa :NOUN Valve-Mechanical))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vampire-TheWord (and (isa :NOUN Vampire))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Van-TheWord (and (isa :NOUN Van)) (frame FN_Vehicle)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vanadium-TheWord (and (isa :NOUN Vanadium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vandal-TheWord (and (isa :NOUN Vandal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vandalism-TheWord
 (and (isa :NOUN Event)
      (relationInstanceExists damages :NOUN SomethingExisting))
 (frame FN_Damaging) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vanilla") Bean-TheWord
 (and (isa :NOUN (FruitFn VanillaOrchid))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vanilla") Orchid-TheWord
 (and (isa :NOUN VanillaOrchid)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vanilla-TheWord (and (isa :NOUN VanillaExtract))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vanillin-TheWord (and (isa :NOUN Vanillin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vanity") Mirror-TheWord
 (and (isa :NOUN VanityMirror)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vapor-TheWord (and (isa :NOUN Vapor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "varactor") Diode-TheWord
 (and (isa :NOUN VaractorDiode)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "variable") Capacitor-TheWord
 (and (isa :NOUN VariableCapacitor)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "variable") Star-TheWord
 (and (isa :NOUN VariableStar)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Variety-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_category))
   (:OBLIQUE-OBJECT ((PPFn of) fe_category) ((PPingFn of) fe_category)
    (N fe_category fe_item_property)
    (AJP fe_category fe_item_property fe_subtype fe_type_property))
   (:GAP (DNI fe_category) (INI fe_category) (DEN fe_category fe_subtype))))
 (groupPatterns
  (TheSet ((1 3 3)) ((1 1 0)) ((0 0 0)) ((1 2 0)) ((1 2 1)) ((1 0 0))
   ((1 0 0) (1 3 3)) ((1 3 0) (1 3 3)) ((1 3 1) (1 3 2)))))

(FNNounSemtrans (TheList) Varnish-TheWord (and (isa :NOUN Varnish))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vas") Deferens-TheWord (and (isa :NOUN VasDeferens))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vascular") Plant-TheWord
 (and (isa :NOUN TracheophytaDivision)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vase-TheWord (and (isa :NOUN Vase))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject)
    ((PPFn in) fe_relative_location) ((PPFn on) fe_relative_location)
    (AJP mainConstituent activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 4 2)) ((0 4 1)) ((0 3 1)) ((0 2 0)) ((2 0 0)) ((0 4 0)) ((0 0 0))
   ((0 2 0) (0 4 0)) ((0 1 0) (0 4 0)) ((0 4 0) (2 0 0)) ((0 3 0) (2 0 0)))))

(FNNounSemtrans (TheList) Vase-TheWord (and (isa :NOUN Vase)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vasectomy-TheWord (and (isa :NOUN Vasectomy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vasodilator-TheWord (and (isa :NOUN Vasodilator))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vasopressin-TheWord (and (isa :NOUN Vasopressin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vat-TheWord (and (isa :NOUN LiquidStorageTank))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) containedObject)
    ((PPingFn of) containedObject) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location) (AJP activeIngredientsOfType deviceUse)
    (N mainConstituent deviceUse) ((PPFn for) deviceUse))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 7 0)) ((0 6 1)) ((0 5 1)) ((0 5 0)) ((0 3 0)) ((0 2 0)) ((0 1 0))
   ((0 0 0)) ((0 4 0) (0 5 0)) ((0 0 0) (0 6 0)))))

(FNNounSemtrans (TheList) Vault-TheWord (and (isa :NOUN BankVault))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vault-TheWord (and (isa :NOUN JumpingHurdles))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vaulting") Horse-TheWord (and (isa :NOUN GymHorse))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vbied-TheWord (and (isa :NOUN SuicideBomber))
 (frame FN_Improvised_explosive_device) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Veal-TheWord (and (isa :NOUN Veal)) (frame FN_Food)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor))))
 (groupPatterns (TheSet ((0 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "vedic") Literature-TheWord
 (and (isa :NOUN VedicLiterature)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vegan-TheWord (and (isa :NOUN Vegan)) (frame FN_Food)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vegetable") Oil-TheWord
 (and (isa :NOUN VegetableOil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vegetable") Peeler-TheWord
 (and (isa :NOUN Peeler-Device)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vegetable-TheWord (and (isa :NOUN Vegetable-Food))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType) (A activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 2 0)) ((0 0 0)) ((0 0 1) (0 1 0))
   ((0 0 1) (0 0 1)) ((0 0 0) (0 1 0)) ((0 0 0) (0 0 1)) ((0 0 0) (0 0 0))
   ((0 0 0) (0 0 1) (0 0 1)))))

(FNNounSemtrans (TheList) Vegetable-TheWord (and (isa :NOUN Vegetable-Plant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vegetarian-TheWord (and (isa :NOUN Vegetarian))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vehicle") Part-TheWord (and (isa :NOUN VehiclePart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vehicle-TheWord
 (and (isa :NOUN TransportationDevice-Vehicle)) (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) fe_descriptor)
    (N fe_descriptor deviceUse transporter))
   (:GAP (DEN transporter)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 2 1)) ((2 0 0)) ((0 1 0)) ((0 2 0)) ((0 0 0))
   ((0 2 0) (0 2 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList "vehicle") Track-TheWord
 (and (isa :NOUN VehicleTrack-Device)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Veil-TheWord (and (isa :NOUN Veil))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AVP fe_descriptor)
    (AJP fe_descriptor mainConstituent clothingStyle deviceUse)
    (N mainConstituent deviceUse))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 1 2)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 2 1) (2 0 0))
   ((0 2 0) (2 0 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 1 3)) ((0 1 0) (0 1 2))
   ((0 1 0) (0 2 0)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Vein-TheWord (and (isa :NOUN Vein)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Velcro-TheWord (and (isa :NOUN VelcroTheFastener))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Veld-TheWord (and (isa :NOUN Savannah))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_container_possessor fe_relative_location)
    ((PPFn of) fe_container_possessor fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)) ((0 0 1) (0 1 1)))))

(FNNounSemtrans (TheList) Velociraptor (and (isa :NOUN Velociraptor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Velvet-TheWord (and (isa :NOUN VelvetCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vending") Machine-TheWord
 (and (isa :NOUN VendingMachine)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vendor-TheWord (and (isa :NOUN Vendor))
 (frame FN_Commerce_scenario) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vendor-TheWord
 (and (isa :NOUN SocialBeing) (relationExistsInstance seller Buying :NOUN))
 (frame FN_Commerce_sell)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectOfPossessionTransfer))
   (:OBLIQUE-OBJECT ((PPFn to) buyer) (N objectOfPossessionTransfer)
    ((PPFn of) objectOfPossessionTransfer) (NP seller) ((PPFn like) seller))
   (:GAP (DEN seller)) (:NOUN (N seller)) (:GEN (Poss buyer))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 2 0)) ((0 0 0)) ((1 1 0)) ((4 0 0)) ((1 0 0))
   ((1 1 0) (1 4 0)) ((1 1 0) (1 3 0)) ((1 1 0) (4 0 0)))))

(FNNounSemtrans (TheList "venereal") Disease-TheWord
 (and (isa :NOUN SexuallyTransmittedInfection)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "venetian") Blind-TheWord
 (and (isa :NOUN VenetianBlind)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Venetian-Blind-TheWord
 (and (isa :NOUN VenetianBlind)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vengeance-TheWord (and (isa :NOUN RevengeAction))
 (frame FN_Revenge)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy fe_injured_party fe_punishment))
   (:OBLIQUE-OBJECT ((PPFn of) performedBy)
    ((PPFn for) fe_injured_party fe_injury) ((PPingFn for) fe_injury)
    (AJP fe_manner) ((PPFn on) fe_injured_party fe_offender)
    ((PPFn to) fe_offender) ((PPFn upon) fe_offender)
    ((PPFn against) fe_offender))
   (:GAP (DNI fe_injury fe_offender) (INI performedBy fe_offender))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 4 1)) ((1 7 0)) ((1 3 0)) ((1 2 0)) ((1 1 1)) ((3 0 0)) ((1 0 0))
   ((0 0 1)) ((0 0 2) (3 0 0)) ((1 4 1) (3 0 0)) ((0 0 0) (1 2 0))
   ((0 0 0) (1 1 1)) ((0 0 0) (1 6 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 4 1))
   ((1 3 0) (3 0 0)) ((0 0 0) (1 4 0)) ((0 0 0) (1 3 0) (1 4 1))
   ((0 0 0) (1 4 1) (3 0 0)) ((0 0 0) (0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Venison-TheWord (and (isa :NOUN Venison))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Venom-TheWord (and (isa :NOUN Venom))
 (frame FN_Toxic_substance) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "venous") Sinus-TheWord (and (isa :NOUN DuralSinus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vent-TheWord (and (isa :NOUN Volcano))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "ventilation") Device-TheWord
 (and (isa :NOUN VentilationDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ventricle-TheWord (and (isa :NOUN VentricleOfBrain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ventricle-TheWord (and (isa :NOUN VentricleOfHeart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Venue-TheWord
 (and (isa :NOUN EnduringThing-Localized)
      (relationExistsInstance eventOccursAt Event-Localized :NOUN))
 (frame FN_Locale_by_event)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_defining_event) ((PPFn for) fe_defining_event)
    (AJP fe_descriptor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Veranda-TheWord (and (isa :NOUN Porch))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Verb-TheWord (and (isa :NOUN Verb)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Verbena-TheWord (and (isa :NOUN Verbena))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Verdict-TheWord (and (isa :NOUN VerdictOfTrial))
 (frame FN_Verdict)
 (bindingTemplate
  (TheList (:SUBJECT (NP justiceOfCourt)) (:OBJECT (NP fe_finding))
   (:OBLIQUE-OBJECT ((PPFn in) fe_case fe_charges) (AJP situationConstituents)
    ((PPFn against) defendants) (A fe_finding)
    (N fe_case situationConstituents defendants fe_finding) (Sfin fe_finding)
    ((PPFn of) fe_case fe_finding justiceOfCourt)
    ((PPFn on) fe_charges defendants ruleSystemUsed)
    ((PPFn under) ruleSystemUsed) ((PPFn at) eventOccursAt)
    (NP temporallyIntersects))
   (:GAP (DNI fe_charges defendants) (DEN fe_finding) (2nd fe_finding)
    (INI defendants justiceOfCourt))
   (:GEN (Poss justiceOfCourt temporallyIntersects))))
 (groupPatterns
  (TheSet ((2 5 0)) ((2 2 0)) ((4 0 1)) ((2 9 0)) ((2 8 0)) ((4 0 0)) ((2 6 2))
   ((2 6 1)) ((1 0 0)) ((2 3 0)) ((2 7 1)) ((2 4 2)) ((2 4 1)) ((2 6 0))
   ((2 0 0)) ((2 4 0)) ((0 0 0) (2 7 0)) ((2 0 1) (4 0 0)) ((2 7 1) (4 0 0))
   ((2 6 1) (2 7 2)) ((0 0 0) (2 3 0)) ((2 2 0) (2 4 3)) ((2 2 0) (2 3 0))
   ((2 4 1) (4 0 0)) ((2 1 0) (2 6 2)) ((2 4 1) (2 6 1)) ((1 0 0) (2 1 0))
   ((2 0 0) (4 0 0)) ((0 0 0) (2 7 0) (2 10 0)) ((0 0 0) (2 6 1) (2 7 0))
   ((0 0 0) (2 3 0) (2 7 0)))))

(FNNounSemtrans (TheList) Verification-TheWord (and (isa :NOUN Verification))
 (frame FN_Verification)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_unconfirmed_content))
   (:GAP (DNI fe_inspector) (INI genericPathway-Partial))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Vermin-TheWord (and (isa :NOUN Vermin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vernal") Equinox-TheWord
 (and (isa :NOUN VernalEquinoxDay)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Version-TheWord (and (isa :NOUN Collection))
 (frame FN_Type)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_category)
    (AJP fe_item_property fe_subtype fe_type_property))
   (:GAP (DEN fe_subtype))))
 (groupPatterns (TheSet ((0 0 0) (0 1 2)) ((0 0 0) (0 1 1)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Vertebra-TheWord (and (isa :NOUN Vertebra))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vertebral") Artery-TheWord
 (and (isa :NOUN VertebralArtery)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vertebral") Vein-TheWord
 (and (isa :NOUN VertebralVein)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vertebrata-TheWord (and (isa :NOUN Vertebrate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vertebrate") Foot-TheWord
 (and (isa :NOUN Foot-AnimalBodyPart)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vertebrate-TheWord (and (isa :NOUN Vertebrate))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vertical") Blind-TheWord
 (and (isa :NOUN VerticalBlind)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vertical" "file" "cabinet") Cabinet-TheWord
 (and (isa :NOUN VerticalFileCabinet-PieceOfFurniture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vertical") Well-TheWord
 (and (isa :NOUN VerticalWell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vesicant-TheWord (and (isa :NOUN BlisterAgentStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vesper-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vessel-TheWord (and (isa :NOUN AnatomicalVessel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vessel-TheWord
 (and (isa :NOUN AirTransportationVehicle)) (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) (A ownerOfProprietaryThing)
    (N deviceUse))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Vessel-TheWord (and (isa :NOUN MannedSpacecraft))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) (A ownerOfProprietaryThing)
    (N deviceUse))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Vessel-TheWord (and (isa :NOUN Watercraft))
 (frame FN_Vehicle)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor) (A ownerOfProprietaryThing)
    (N deviceUse))
   (:GAP (DEN transporter))))
 (groupPatterns (TheSet ((0 2 0)) ((0 0 0)) ((0 1 0) (0 1 0)))))

(FNNounSemtrans (TheList) Vest-TheWord (and (isa :NOUN Vest))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) fe_descriptor) ((PPFn of) mainConstituent)
    (NP subRegions) (N fe_descriptor mainConstituent clothingStyle deviceUse)
    (AJP fe_descriptor clothingStyle deviceUse))
   (:GAP (DEN itemWorn) (2nd subRegions deviceUse)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 3)) ((0 4 2)) ((0 4 1)) ((0 1 0)) ((0 3 1)) ((0 0 0))
   ((0 4 0)) ((0 2 0) (2 0 0)) ((0 4 1) (2 0 0)) ((0 3 1) (0 3 2))
   ((0 4 0) (2 0 0)) ((0 3 3) (0 4 0)) ((0 3 0) (0 3 1)) ((0 3 1) (0 4 0)))))

(FNNounSemtrans (TheList) Vestibule-TheWord (and (isa :NOUN Lobby-Room))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vestment-TheWord (and (isa :NOUN Clothing-Generic))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor clothingStyle deviceUse) (N deviceUse)
    ((PPFn of) fe_descriptor deviceUse))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 1)) ((0 0 2)) ((0 0 1)) ((0 2 0)) ((0 0 0))
   ((0 0 2) (2 0 0)) ((0 0 1) (0 0 2)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 0 2)))))

(FNNounSemtrans (TheList) Veteran-TheWord (and (isa :NOUN MilitaryVeteran))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Veterinarian-TheWord (and (isa :NOUN Veterinarian))
 (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:GAP (DEN fe_person)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "veterinary") Medicine-TheWord
 (and (isa :NOUN VeterinaryMedicine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vexation-TheWord (and (isa :NOUN Frustration))
 (frame FN_Experiencer_obj)
 (bindingTemplate (TheList (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "vhs") Camcorder-TheWord
 (and (isa :NOUN VHSCamcorder)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vhs") Cassette-TheWord (and (isa :NOUN VHSCassette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vial-TheWord (and (isa :NOUN Vial))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) containedObject) ((PPFn with) containedObject)
    (N mainConstituent) (AJP activeIngredientsOfType))
   (:GAP (DEN containerUsed))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Vibration-TheWord
 (and (isa :NOUN Vibration-Translational)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vice-Captain-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_governed) ((PPFn of) fe_governed)
    (NP leadersOfMovement))
   (:GAP (DNI leadersOfMovement)
    (DEN (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((1 1 0)) ((0 0 0) (3 0 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Vice-Chairman-TheWord (and (isa :NOUN ViceChairman))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT (N fe_governed) ((PPFn of) fe_governed)
    (NP leadersOfMovement))
   (:GAP (DNI leadersOfMovement)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((1 2 0)) ((3 0 0)) ((1 1 0)) ((1 0 0)) ((1 2 0) (3 0 0))
   ((0 0 0) (1 1 0)) ((1 1 0) (1 2 0)) ((1 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Vice-President-TheWord
 (and (isa :NOUN VicePresidentOfOrganization)) (frame FN_Leadership)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vice-Principal-TheWord (and (isa :NOUN Leader))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP duration) ((PPFn from) duration)
    ((PPFn of) fe_governed) ((PPFn at) fe_governed))
   (:GAP (DNI leadersOfMovement)
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))
   (:GEN (Poss fe_governed))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 3 0)) ((0 1 0) (0 2 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Viceroy-TheWord (and (isa :NOUN PublicOfficial))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn from) fe_governed) (AJP fe_descriptor fe_governed)
    ((PPFn of) fe_governed) (NP leadersOfMovement))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 1) (0 3 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Vicinity-TheWord (and (isa :NOUN Neighborhood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Victim-TheWord
 (and (isa :NOUN Victim-UnfortunatePerson)) (frame FN_Catastrophe)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn) (Poss objectActedOn))
   (:OBLIQUE-OBJECT (NP objectActedOn) ((PPFn during) temporallyIntersects)
    (N fe_undesirable_event) ((PPFn of) fe_undesirable_event))
   (:GAP (DEN objectActedOn) (DNI fe_undesirable_event))
   (:GEN (Poss fe_undesirable_event))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 0 0)) ((3 0 0)) ((1 3 0)) ((1 2 0)) ((0 0 0) (1 3 0))
   ((0 1 0) (1 1 0) (1 3 0)))))

(FNNounSemtrans (TheList) Victim-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance agentSwindled SwindlingAnAgent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Victim-TheWord
 (and (isa :NOUN Victim-UnfortunatePerson)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Victim-TheWord
 (and (isa :NOUN Event) (relationInstanceExists affectedAgent :NOUN Person))
 (frame FN_Undergoing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Victor-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance winnerInConflict ConflictEvent :NOUN))
 (frame FN_Finish_competition)
 (bindingTemplate
  (TheList (:SUBJECT (NP adversaryInConflict))
   (:OBLIQUE-OBJECT ((PPFn in) fe_competition) (NP adversaryInConflict)
    ((PPFn of) fe_competition competingAgents) ((PPFn over) competingAgents)
    (N fe_competition fe_prize fe_score) ((PPFn by) marginOfVictory fe_score))
   (:GAP (2nd fe_competition) (DEN adversaryInConflict competitors))
   (:GEN (Poss competingAgents))))
 (groupPatterns
  (TheSet ((1 3 0)) ((1 2 1)) ((0 0 0)) ((1 1 0)) ((1 4 1)) ((1 2 0)) ((1 0 0))
   ((1 4 0)) ((0 0 0) (1 5 1)) ((0 0 0) (3 0 0)) ((0 0 0) (1 3 0))
   ((0 0 0) (1 2 1)) ((0 0 0) (1 5 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 3 0) (1 4 2)))))

(FNNounSemtrans (TheList) Victory-TheWord (and (isa :NOUN Victory))
 (frame FN_Finish_competition)
 (bindingTemplate
  (TheList (:SUBJECT (NP adversaryInConflict))
   (:OBLIQUE-OBJECT ((PPFn on) fe_competition) ((PPFn by) adversaryInConflict)
    ((PPFn of) adversaryInConflict) (A adversaryInConflict)
    ((PPFn for) adversaryInConflict) ((PPFn over) competingAgents)
    ((PPFn against) competingAgents) ((PPFn at) eventOccursAt)
    (N fe_competition fe_score)
    (AJP adversaryInConflict marginOfVictory fe_score)
    ((PPFn in) fe_competition temporallyIntersects)
    (NP fe_competition temporallyIntersects))
   (:GAP (DNI fe_competition competingAgents)
    (INI fe_competition competingAgents)
    (2nd competingAgents temporallyIntersects))
   (:GEN (Poss adversaryInConflict))))
 (groupPatterns
  (TheSet ((1 8 1)) ((1 7 0)) ((1 5 0)) ((1 6 0)) ((0 0 0)) ((1 2 0)) ((1 4 0))
   ((1 1 0)) ((1 9 0)) ((1 3 0)) ((3 0 0)) ((1 0 0)) ((1 10 0)) ((1 8 0))
   ((1 5 0) (1 8 1)) ((1 6 0) (1 8 1)) ((1 7 0) (3 0 0)) ((1 5 0) (3 0 0))
   ((1 1 0) (1 5 0)) ((1 8 1) (1 10 0)) ((1 7 0) (1 11 0)) ((1 10 0) (3 0 0))
   ((1 2 0) (1 10 0)) ((1 1 0) (1 10 0)) ((1 8 0) (3 0 0))
   ((1 9 2) (1 11 1) (3 0 0)) ((1 5 0) (1 8 1) (3 0 0))
   ((1 6 0) (1 8 1) (3 0 0)) ((1 5 0) (1 8 1) (1 10 0) (3 0 0))
   ((1 8 0) (1 9 1) (1 11 1) (3 0 0)) ((0 0 0) (1 10 0) (1 10 1) (3 0 0))
   ((0 0 0) (1 7 0) (1 8 0) (1 10 1) (3 0 0)))))

(FNNounSemtrans (TheList) Victory-TheWord (and (isa :NOUN VictorySituation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video" "amplifier") Component-TheWord
 (and (isa :NOUN VideoAmplifierComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video") Camera-TheWord (and (isa :NOUN VideoCamera))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video" "conferencing") Equipment-TheWord
 (and (isa :NOUN VideoTeleconferencingEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video") Projector-TheWord
 (and (isa :NOUN VideoProjector)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video" "receiver") Component-TheWord
 (and (isa :NOUN VideoReceiverComponent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video" "surveillance") System-TheWord
 (and (isa :NOUN VideoSurveillanceSystem)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video") Switcher-TheWord
 (and (isa :NOUN VideoSwitch-Computer)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "video" "tape" "deck") Mechanism-TheWord
 (and (isa :NOUN VideoTapeDeckMechanism)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Video-TheWord (and (isa :NOUN VideoRecordedObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "videocassette") Recorder-TheWord
 (and (isa :NOUN VideoCassetteRecorder)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Videocassette-TheWord (and (isa :NOUN VideoCassette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Videotape-TheWord (and (isa :NOUN VideoCassette))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vietnamese-TheWord
 (and (isa :NOUN VietnameseLanguage)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) View-TheWord
 (and (isa :NOUN CycLSentence-Assertible)
      (relationExistsInstance opinions IntelligentAgent :NOUN))
 (frame FN_Opinion)
 (bindingTemplate
  (TheList (:OBJECT (Poss subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (AJP subjectOfMentalSituation)
    ((PPFn of) subjectOfMentalSituation) (NP opinions))
   (:GAP (DEN opinions) (DNI subjectOfMentalSituation opinions))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Viewpoint-TheWord
 (and (isa :NOUN AttributiveReference)) (frame FN_Attributed_information)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vigil-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Viking-TheWord (and (isa :NOUN Viking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Villa-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Villa-TheWord (and (isa :NOUN Villa)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Village-TheWord (and (isa :NOUN Village))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (Srel fe_descriptor)
    ((PPFn of) (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Village-TheWord (and (isa :NOUN Village))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) fe_container_possessor) (AJP fe_descriptor)
    (N fe_descriptor (InverseBinaryPredicateFn nameString))
    ((PPFn of) (InverseBinaryPredicateFn nameString))
    ((PPFn in) fe_relative_location) ((PPFn outside) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 3 0) (0 5 0))
   ((0 1 0) (0 3 0)) ((0 1 0) (0 2 1)) ((0 1 0) (0 3 0) (0 4 0)))))

(FNNounSemtrans (TheList) Villain-TheWord
 (and (isa :NOUN Person)
      (relationInstanceExists moralCharacter :NOUN MoralQuality))
 (frame FN_People_by_morality) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vim-TheWord (and (isa :NOUN Healthy))
 (frame FN_Gusto) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vinaigrette-TheWord
 (and (isa :NOUN OilAndVinegarSaladDressing)) (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_descriptor) (N activeIngredientsOfType))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Vine-TheWord (and (isa :NOUN Vine-Plant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vinegar-TheWord (and (isa :NOUN Vinegar))
 (frame FN_Food)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor activeIngredientsOfType)
    (N activeIngredientsOfType))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 1) (0 1 0)) ((0 0 0) (0 0 1))
   ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Vineyard-TheWord (and (isa :NOUN Vineyard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vinyl" "car") Seat-TheWord
 (and (isa :NOUN CarSeat-Vinyl)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vinyl-TheWord (and (isa :NOUN Vinyl)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Viola-TheWord (and (isa :NOUN Viola)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Violaceae-TheWord
 (and (isa :NOUN Violet-PlantFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Violation-TheWord (and (isa :NOUN NonCompliant))
 (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:SUBJECT (Sfin fe_act) (Sforto fe_act) (VPing fe_act) (VPto fe_act)
    (NP fe_act affectedAgent))
   (:OBLIQUE-OBJECT ((PPingFn by) fe_act) (AVP fe_manner) (N fe_norm)
    ((PPFn of) fe_norm) (A affectedAgent) ((PPFn by) affectedAgent)
    ((PPFn on) affectedAgent) (AJP fe_degree fe_manner fe_norm affectedAgent)
    ((PPFn in) temporallyIntersects))
   (:GAP (DEN fe_act) (INI fe_norm affectedAgent) (DNI fe_norm affectedAgent)
    (2nd affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 5 0)) ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 7 2)) ((1 1 0))
   ((1 3 0) (3 0 0)) ((0 4 1) (1 3 0)) ((1 3 0) (1 7 3)) ((1 2 0) (3 0 0))
   ((1 2 0) (1 6 0)) ((1 2 0) (1 5 0)) ((0 4 1) (1 2 0)) ((1 2 0) (1 4 0))
   ((0 3 0) (1 3 0)) ((0 2 0) (1 3 0)) ((0 0 0) (1 3 0)) ((0 4 0) (1 3 0))
   ((1 3 0) (1 7 1)) ((1 3 0) (1 7 0)) ((1 2 0) (1 7 0))
   ((0 4 1) (1 3 0) (1 7 0)) ((0 1 0) (1 3 0) (1 7 0))
   ((0 4 0) (1 3 0) (1 7 0)) ((0 4 1) (1 2 0) (1 7 0) (1 8 0))
   ((0 4 1) (1 0 0) (1 3 0) (1 7 0)))))

(FNNounSemtrans (TheList) Violation-TheWord
 (and (isa :NOUN ViolatingAnObligation)) (frame FN_Compliance)
 (bindingTemplate
  (TheList
   (:SUBJECT (Sfin fe_act) (Sforto fe_act) (VPing fe_act) (VPto fe_act)
    (NP fe_act affectedAgent))
   (:OBLIQUE-OBJECT ((PPingFn by) fe_act) (AVP fe_manner) (N fe_norm)
    ((PPFn of) fe_norm) (A affectedAgent) ((PPFn by) affectedAgent)
    ((PPFn on) affectedAgent) (AJP fe_degree fe_manner fe_norm affectedAgent)
    ((PPFn in) temporallyIntersects))
   (:GAP (DEN fe_act) (INI fe_norm affectedAgent) (DNI fe_norm affectedAgent)
    (2nd affectedAgent))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 5 0)) ((3 0 0)) ((1 3 0)) ((1 2 0)) ((1 7 2)) ((1 1 0))
   ((1 3 0) (3 0 0)) ((0 4 1) (1 3 0)) ((1 3 0) (1 7 3)) ((1 2 0) (3 0 0))
   ((1 2 0) (1 6 0)) ((1 2 0) (1 5 0)) ((0 4 1) (1 2 0)) ((1 2 0) (1 4 0))
   ((0 3 0) (1 3 0)) ((0 2 0) (1 3 0)) ((0 0 0) (1 3 0)) ((0 4 0) (1 3 0))
   ((1 3 0) (1 7 1)) ((1 3 0) (1 7 0)) ((1 2 0) (1 7 0))
   ((0 4 1) (1 3 0) (1 7 0)) ((0 1 0) (1 3 0) (1 7 0))
   ((0 4 0) (1 3 0) (1 7 0)) ((0 4 1) (1 2 0) (1 7 0) (1 8 0))
   ((0 4 1) (1 0 0) (1 3 0) (1 7 0)))))

(FNNounSemtrans (TheList) Violence-TheWord (and (isa :NOUN ViolentAction))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Violence-TheWord (and (isa :NOUN ViolentAction))
 (frame FN_Violence)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_aggressor))
   (:OBLIQUE-OBJECT ((PPFn by) fe_aggressor) ((PPFn between) fe_aggressors)
    ((PPFn among) fe_aggressors)
    ((PPFn of) (InverseBinaryPredicateFn subEvents))
    (A fe_aggressor fe_aggressors (InverseBinaryPredicateFn explains-Generic))
    (N fe_aggressor by-Underspecified) ((PPFn at) eventOccursAt)
    ((PPFn along) eventOccursAt) ((PPFn near) eventOccursAt)
    ((PPFn across) eventOccursAt) (NP temporallyIntersects)
    ((PPFn on) temporallyIntersects) ((PPFn during) temporallyIntersects)
    ((PPFn in) eventOccursAt temporallyIntersects) ((PPFn against) victim)
    (AJP fe_aggressors fe_degree frequencyOfEvent fe_manner
     temporallyIntersects victim))
   (:GEN (Poss fe_aggressor eventOccursAt temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 14 0)) ((1 15 5)) ((2 0 2)) ((1 13 1)) ((1 12 0)) ((1 10 0))
   ((1 15 4)) ((1 13 0)) ((1 6 0)) ((1 9 0)) ((1 5 1)) ((1 15 3)) ((1 15 2))
   ((1 4 2)) ((1 15 1)) ((1 3 0)) ((1 2 0)) ((1 4 1)) ((1 0 0)) ((1 5 0))
   ((1 4 0)) ((1 13 0) (1 14 0)) ((1 11 0) (1 13 0)) ((1 13 0) (1 15 4))
   ((1 6 0) (1 10 0)) ((1 13 0) (1 15 2)) ((1 4 2) (2 0 1)) ((1 4 2) (1 13 0))
   ((1 13 0) (1 15 1)) ((1 15 1) (1 15 1)) ((1 4 1) (1 14 0))
   ((1 6 0) (1 15 0)) ((1 4 1) (2 0 1)) ((1 1 0) (1 4 2)) ((1 4 1) (1 15 1))
   ((1 14 0) (2 0 0)) ((0 0 0) (1 14 0)) ((1 4 0) (1 13 0))
   ((1 10 0) (1 15 1) (2 0 1)) ((1 1 0) (1 7 0) (1 8 0))
   ((1 1 0) (1 4 1) (1 13 0)))))

(FNNounSemtrans (TheList "violent") Collision-TheWord
 (and (isa :NOUN ViolentCollision)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "violent") Impact-TheWord
 (and (isa :NOUN ViolentImpact)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Violet-TheWord (and (isa :NOUN Violet-PlantFamily))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Violin-TheWord (and (isa :NOUN Violin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "virginia") Deer-TheWord
 (and (isa :NOUN WhiteTailedDeer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Virgo-TheWord (and (isa :NOUN Virgo-TheSign))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "virtual") Pet-TheWord (and (isa :NOUN VirtualPet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Virtuosity-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (AJP fe_degree) ((PPFn with) fe_focal_participant)
    ((PPFn from) affectedAgent) ((PPFn of) fe_behavior_product affectedAgent))
   (:GAP (DNI hasSkill) (2nd affectedAgent hasSkill))
   (:GEN (Poss affectedAgent))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((3 0 0)) ((1 3 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Virtuoso-TheWord (and (isa :NOUN Competence))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn with) fe_focal_participant) (NP affectedAgent)
    ((PPFn in) hasSkill) ((PPFn of) hasSkill) (N affectedAgent hasSkill))
   (:GAP (DEN affectedAgent) (DNI hasSkill) (INI hasSkill))
   (:NOUN (N affectedAgent))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 2 0)) ((0 0 0)) ((0 0 0) (1 3 0)) ((0 0 0) (1 2 0))
   ((1 1 0) (1 4 1)) ((1 4 1) (3 0 0)) ((1 3 0) (1 4 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (0 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Virus-TheWord (and (isa :NOUN Virus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Virus-TheWord (and (isa :NOUN ComputerVirus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visa-TheWord (and (isa :NOUN Visa-Permit))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_bearer fe_issuer))
   (:OBLIQUE-OBJECT ((PPFn for) fe_bearer) (AJP fe_descriptor) (VPto fe_right)
    (N fe_status))
   (:GAP (DNI fe_bearer) (DEN fe_document) (INI fe_issuer))))
 (groupPatterns
  (TheSet ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0) (1 3 0))
   ((0 0 1) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Viscosity-TheWord (and (isa :NOUN Viscosity))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Viscount-TheWord (and (isa :NOUN Viscount))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Viscountcy-TheWord
 (and (isa :NOUN GeopoliticalEntity)) (frame FN_Political_locales)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vise-TheWord (and (isa :NOUN Vise)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visibility-TheWord (and (isa :NOUN Visibility))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vision") Aid-TheWord (and (isa :NOUN OpticalDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vision") Test-TheWord
 (and (isa :NOUN DriverVisionTest)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visionary-TheWord (and (isa :NOUN Visionary))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visit-TheWord (and (isa :NOUN ArrivingAtAPlace))
 (frame FN_Arriving)
 (bindingTemplate
  (TheList (:SUBJECT (NP to-Generic objectMoving))
   (:OBLIQUE-OBJECT ((PPFn at) to-Generic) ((PPFn to) to-Generic)
    (A purposeOfEvent) ((PPFn from) objectMoving) (N to-Generic objectMoving)
    ((PPFn of) purposeOfEvent objectMoving))
   (:GAP (DNI to-Generic objectMoving) (CNI objectMoving))
   (:GEN (Poss objectMoving))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 4 0)) ((3 0 0)) ((1 3 0)) ((1 5 0)) ((1 2 0))
   ((1 1 0) (3 0 0)) ((1 1 0) (1 5 1)) ((0 0 1) (1 1 0)) ((1 0 0) (1 4 1))
   ((0 0 0) (1 3 0)) ((1 4 0) (3 0 0)))))

(FNNounSemtrans (TheList) Visit-TheWord (and (isa :NOUN GoingSomewhere))
 (frame FN_Visiting)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) ((PPFn to) objectActedOn)
    (AJP objectActedOn) (NP frequencyOfEvent) ((PPFn on) temporallyIntersects))
   (:GAP (CNI doneBy) (INI doneBy) (DNI doneBy objectActedOn))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 0 0)) ((1 1 0)) ((0 0 0) (1 3 0)) ((1 1 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 4 0)))))

(FNNounSemtrans (TheList) Visitor-TheWord (and (isa :NOUN GoingSomewhere))
 (frame FN_Visiting)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn to) objectActedOn))
   (:GAP (DEN doneBy) (DNI objectActedOn) (INI doneBy objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "visor") Accessory-TheWord
 (and (isa :NOUN VisorAccessory)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visor-TheWord (and (isa :NOUN Visor-AutoPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visor-TheWord (and (isa :NOUN Visor-Cap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Visor-TheWord (and (isa :NOUN Visor-HeadgearPart))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "visual") System-TheWord
 (and (isa :NOUN VisualSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vitamin") C-TheWord (and (isa :NOUN VitaminC))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vitamin") D-TheWord (and (isa :NOUN VitaminD))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vitamin-TheWord (and (isa :NOUN Vitamin))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "vitreous") Humor-TheWord
 (and (isa :NOUN VitreousHumor)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vitriol-TheWord (and (isa :NOUN SulfuricAcid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vivarium-TheWord (and (isa :NOUN Container))
 (frame FN_Containers)
 (bindingTemplate (TheList (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Vizier-TheWord
 (and (isa :NOUN IranianPerson) (isa :NOUN PublicOfficial))
 (frame FN_Leadership)
 (bindingTemplate
  (TheList (:SUBJECT (NP leadersOfMovement))
   (:OBLIQUE-OBJECT ((PPFn of) fe_governed))
   (:GAP
    (DEN leadersOfMovement
     (Kappa (?sit ?role) (playsRole ?sit :OBJECT ?role))))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList "vocal") Cord-TheWord (and (isa :NOUN VocalCord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vodka-TheWord (and (isa :NOUN Vodka)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vogue-TheWord (and (isa :NOUN Trend)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "voice" "logging") Device-TheWord
 (and (isa :NOUN VoiceLoggingDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "voice") Mail-TheWord
 (and (isa :NOUN VoiceMailDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "voice" "recognition") Device-TheWord
 (and (isa :NOUN VoiceRecognitionDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "voicemail" "indicator") Light-TheWord
 (and (isa :NOUN VoicemailIndicatorLight)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "volcanic") Eruption-TheWord
 (and (isa :NOUN VolcanicEruption)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Volcano-TheWord (and (isa :NOUN Volcano))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) fe_container_possessor)
    (N (InverseBinaryPredicateFn nameString))
    (NP (InverseBinaryPredicateFn nameString))
    (QUO (InverseBinaryPredicateFn nameString))
    ((PPFn on) fe_relative_location) ((PPFn in) fe_relative_location)
    (AJP fe_container_possessor (InverseBinaryPredicateFn nameString)
     fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 4 0)) ((0 5 0)) ((0 1 0)) ((0 0 0)) ((0 6 0)) ((0 3 0) (0 5 0))
   ((0 2 0) (0 4 0)) ((0 2 0) (0 6 2)) ((0 1 0) (0 5 0)) ((0 4 0) (0 6 1)))))

(FNNounSemtrans (TheList) Volgaic-TheWord
 (and (isa :NOUN Volgaic-UralicLanguageFamily)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "volleyball") Court-TheWord
 (and (isa :NOUN VolleyballCourt)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "volleyball") Set-TheWord
 (and (isa :NOUN VolleyballSet)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Volleyball-TheWord (and (isa :NOUN Volleyball))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Volleyball-TheWord (and (isa :NOUN VolleyballBall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Volt-TheWord (and (isa :NOUN Volt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "voltage") Source-TheWord
 (and (isa :NOUN VoltageSource)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Voltmeter-TheWord (and (isa :NOUN Voltmeter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "volume" "measuring") Device-TheWord
 (and (isa :NOUN VolumeMeasuringDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Volume-TheWord (and (isa :NOUN AcousticNoiseLevel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Volume-TheWord
 (and (isa :NOUN VolumeOfCWSeries-Periodic)) (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_genre) (AJP mainConstituent)
    ((PPFn of) authorOfLiteraryWork-CW
     (InverseBinaryPredicateFn textualPCWSubSections) parts)
    ((PPFn from) startingDate) ((PPFn about) situationTopic)
    ((PPFn on) situationTopic))
   (:GAP (DEN fe_text)) (:GEN (Poss authorOfLiteraryWork-CW))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 3 0)) ((0 2 2)) ((0 2 1)) ((2 0 0)) ((0 2 0))
   ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "volume") Unit-TheWord (and (isa :NOUN UnitOfVolume))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vomit-TheWord (and (isa :NOUN Vomit)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vomit-TheWord (and (isa :NOUN Vomiting))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Voodoo-TheWord (and (isa :NOUN Vodou))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vortex-TheWord (and (isa :NOUN WhirlingOfFluid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vote-TheWord (and (isa :NOUN Election))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vote-TheWord (and (isa :NOUN Voting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vow-TheWord (and (isa :NOUN Commitment))
 (frame FN_Commitment)
 (bindingTemplate
  (TheList (:SUBJECT (NP infoTransferred performedBy))
   (:OBJECT (NP recipientOfInfo))
   (:OBLIQUE-OBJECT ((PPFn to) recipientOfInfo) (Sfin infoTransferred)
    (NP infoTransferred) ((PPFn of) infoTransferred) (VPto infoTransferred))
   (:GAP (DNI infoTransferred) (CNI performedBy)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 4 0)) ((2 3 0)) ((4 0 0)) ((0 0 1)) ((0 0 1) (4 0 0))
   ((2 4 0) (4 0 0)) ((0 0 1) (2 4 0)) ((0 0 1) (2 1 0)) ((2 3 0) (4 0 0))
   ((0 0 0) (4 0 0)) ((0 0 1) (2 2 0)) ((0 0 1) (2 0 0) (4 0 0))
   ((0 0 1) (1 0 0) (2 1 0)))))

(FNNounSemtrans (TheList) Vowel-TheWord (and (isa :NOUN Vowel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Voyage-TheWord (and (isa :NOUN Travel-TripEvent))
 (frame FN_Travel)
 (bindingTemplate
  (TheList
   (:SUBJECT (NP deviceTypeUsed travellerInTrip) (Poss travellerInTrip))
   (:OBLIQUE-OBJECT ((PPFn along) situationLocation)
    ((PPFn amongst) situationLocation) ((PPFn up) situationLocation)
    (AVP fe_direction) ((PPFn during) duration) ((PPFn to) to-Generic)
    ((PPFn towards) to-Generic) ((PPFn on) deviceTypeUsed)
    ((PPFn by) deviceTypeUsed) ((PPFn through) trajectory-Complete)
    (AJP trajectory-Complete) ((PPFn between) duration)
    ((PPFn of) deviceTypeUsed duration purposeOfEvent) (VPing purposeOfEvent)
    (A situationLocation duration frequencyOfEvent trajectory-Complete
     purposeOfEvent)
    ((PPFn from) from-Generic) (NP temporallyIntersects)
    ((PPFn in) situationLocation deviceTypeUsed duration temporallyIntersects)
    (N distanceTranslated duration fe_iterations deviceTypeUsed purposeOfEvent
     transporterTypeOfTransportType)
    ((PPFn with) fe_co-participant travellerInTrip))
   (:GAP (DNI travellerInTrip) (CNI travellerInTrip))
   (:GEN (Poss duration deviceTypeUsed travellerInTrip))))
 (groupPatterns
  (TheSet ((3 0 2)) ((1 12 2)) ((1 18 4)) ((1 14 3)) ((1 12 0)) ((1 18 3))
   ((1 6 0)) ((1 14 1)) ((1 2 0)) ((1 14 0)) ((1 15 0) (1 18 5))
   ((1 12 2) (1 17 3)) ((0 1 0) (1 7 0)) ((0 0 1) (1 7 0)) ((1 17 1) (3 0 2))
   ((1 17 2) (3 0 1)) ((1 5 0) (3 0 2)) ((1 5 0) (1 8 0)) ((0 0 1) (1 5 0))
   ((1 14 2) (3 0 2)) ((1 14 1) (1 18 5)) ((1 7 0) (3 0 0)) ((1 3 0) (1 17 3))
   ((0 0 1) (1 17 0)) ((1 12 1) (1 14 4) (3 0 2)) ((0 0 1) (1 14 3) (3 0 1))
   ((0 0 0) (1 10 0) (1 19 1)) ((1 5 0) (1 12 2) (1 16 0))
   ((1 5 0) (1 18 3) (3 0 2)) ((0 0 0) (1 5 0) (1 15 0))
   ((1 5 0) (1 15 0) (1 18 2)) ((0 0 1) (1 5 0) (1 18 1))
   ((0 0 1) (1 5 0) (1 18 0)) ((1 17 1) (1 19 0) (3 0 2))
   ((0 0 1) (1 0 0) (1 9 0)) ((1 1 0) (1 12 2) (1 14 1))
   ((0 0 1) (1 5 0) (1 15 0) (1 18 2)) ((0 0 1) (1 4 0) (1 5 0) (1 13 0))
   ((0 0 1) (1 5 0) (1 11 0) (1 14 4) (3 0 2))
   ((0 0 1) (1 5 0) (1 16 0) (1 18 0) (1 19 0)))))

(FNNounSemtrans (TheList) Voyager-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance performedBy Travel-TripEvent :NOUN))
 (frame FN_Travel) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Voyeur-TheWord (and (isa :NOUN Voyeur))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Voyeurism-TheWord (and (isa :NOUN Voyeurism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vulgarity-TheWord (and (isa :NOUN VulgarSpeech))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vulnerability-TheWord
 (and (isa :NOUN VulnerableThing)) (frame FN_Being_at_risk)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N fe_dangerous_entity))
   (:GAP (DNI resourceInEvent))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Vulture-TheWord (and (isa :NOUN Vulture))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Vulva-TheWord (and (isa :NOUN Vulva)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waffle") Iron-TheWord (and (isa :NOUN WaffleMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waffle") Maker-TheWord (and (isa :NOUN WaffleMaker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waffle-TheWord (and (isa :NOUN Waffle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wage-TheWord
 (and (isa :NOUN MonetaryRate)
      (relationExistsInstance income SocialBeing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wager-TheWord (and (isa :NOUN Gambling))
 (frame FN_Wagering) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wagon-TheWord (and (isa :NOUN Wagon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wail-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Wailing)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_manner) (NP fe_manner)
    ((PPFn from) from-Generic emitter) ((PPFn of) fe_internal_cause emitter)
    (Sfin emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 4 0)) ((2 0 0)) ((1 3 1)) ((1 2 1)) ((0 0 0)) ((1 1 0)) ((1 0 1))
   ((1 2 0)) ((1 3 0)) ((1 0 0)) ((1 0 1) (2 0 0)) ((1 0 1) (1 3 1))
   ((1 0 1) (1 2 1)) ((0 0 0) (1 0 1)) ((1 3 0) (2 0 0)) ((0 0 0) (1 0 0))
   ((1 0 0) (1 0 1)))))

(FNNounSemtrans (TheList) Waist-Band-TheWord
 (and (isa :NOUN SomethingToWearPart)) (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts) (2nd wearer))
   (:GEN (Poss (InverseBinaryPredicateFn outfitParts) wearer))))
 (groupPatterns
  (TheSet ((2 0 1)) ((0 0 0)) ((0 1 0)) ((0 1 0) (2 0 1)) ((0 1 1) (2 0 0)))))

(FNNounSemtrans (TheList) Waist-TheWord (and (isa :NOUN SomethingToWearPart))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    (AJP mainConstituent))
   (:GAP (DEN parts) (2nd wearer))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Waist-TheWord (and (isa :NOUN Waist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waistband-TheWord
 (and (isa :NOUN SomethingToWearPart)) (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts)) (AJP mainConstituent))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)))))

(FNNounSemtrans (TheList) Waistcoat-TheWord (and (isa :NOUN Coat))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor)
    (N fe_descriptor itemWorn mainConstituent clothingStyle)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN itemWorn mainConstituent)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 1 2)) ((0 2 0)) ((0 1 1) (2 0 0)) ((0 2 1) (0 2 2))
   ((0 2 0) (2 0 0)) ((0 0 0) (0 2 2)) ((0 0 0) (0 1 2)) ((0 1 2) (0 2 0))
   ((0 1 0) (0 2 0)) ((0 2 0) (0 2 0)) ((0 1 3) (0 2 0) (0 2 1))
   ((0 2 0) (0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Waistline-TheWord (and (isa :NOUN Waist))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)) (AJP fe_descriptor)
    (A fe_descriptor))
   (:GAP (DEN parts))))
 (groupPatterns
  (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 4 0) (0 4 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Waiter-TheWord (and (isa :NOUN Waitperson))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waiting") Room-TheWord (and (isa :NOUN WaitingRoom))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waitress-TheWord
 (and (isa :NOUN (FemaleFn Waitperson))) (frame FN_People_by_vocation)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn at) employer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Wake-TheWord (and (isa :NOUN Wave-Liquid))
 (frame FN_Leaving_traces) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wake-TheWord (and (isa :NOUN Wake-Party))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wakeboard-TheWord (and (isa :NOUN Wakeboard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "walk" "of") Life-TheWord
 (and (isa :NOUN AnimalWalkingProcess)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walk-TheWord (and (isa :NOUN HumanWalkingProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walk-TheWord (and (isa :NOUN AnimalWalkingProcess))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (N situationLocation) ((PPFn among) situationLocation)
    ((PPFn behind) situationLocation) ((PPFn between) situationLocation)
    ((PPFn beyond) situationLocation) ((PPFn on) situationLocation)
    ((PPFn outside) situationLocation) ((PPFn round) situationLocation)
    ((PPFn of) distanceTranslated) (NP to-Generic) ((PPFn into) to-Generic)
    ((PPFn via) trajectory-Complete) ((PPFn through) trajectory-Complete)
    ((PPFn down) trajectory-Complete) ((PPFn across) trajectory-Complete)
    ((PPFn along) trajectory-Complete)
    ((PPFn over) situationLocation trajectory-Complete)
    ((PPFn around) situationLocation trajectory-Complete)
    ((PPFn past) trajectory-Complete)
    ((PPFn to) to-Generic trajectory-Complete)
    ((PPFn alongside) trajectory-Complete)
    ((PPFn towards) to-Generic trajectory-Complete)
    ((PPFn up) trajectory-Complete) ((PPFn in) situationLocation eventOccursAt)
    ((PPFn near) eventOccursAt) (VPto purposeOfEvent)
    ((PPFn by) situationLocation trajectory-Complete performedBy)
    ((PPFn from) from-Generic)
    (AJP fe_depictive distanceTranslated to-Generic fe_manner
     trajectory-Complete rateOfEvent)
    (AVP fe_direction from-Generic temporallyIntersects)
    ((PPFn about) situationLocation temporallyIntersects))
   (:GAP (CNI performedBy) (DNI performedBy) (INI performedBy))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 12 0)) ((1 13 0)) ((1 20 0)) ((1 9 0)) ((1 5 0))
   ((1 26 0)) ((1 17 0)) ((0 0 0) (1 30 1)) ((1 18 0) (1 28 5))
   ((1 21 1) (3 0 0)) ((1 12 0) (3 0 0)) ((0 0 0) (1 12 0)) ((0 0 0) (1 15 0))
   ((1 14 0) (3 0 0)) ((1 13 0) (1 28 3)) ((1 19 0) (1 27 0))
   ((1 19 0) (3 0 0)) ((0 0 0) (1 10 0)) ((1 16 1) (1 19 0)) ((0 0 0) (1 8 0))
   ((1 26 1) (1 28 1)) ((1 14 0) (1 28 1)) ((1 28 1) (1 28 2))
   ((1 15 0) (1 29 0)) ((1 12 0) (1 28 0)) ((1 14 0) (1 28 0))
   ((1 7 0) (3 0 0)) ((0 0 0) (1 7 0)) ((0 0 0) (1 6 0)) ((0 0 0) (1 23 0))
   ((0 0 0) (1 4 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 17 0)) ((1 0 0) (1 26 2))
   ((1 1 0) (1 25 0)) ((1 3 0) (1 24 0)) ((1 0 0) (1 23 1)) ((1 26 0) (1 28 1))
   ((1 16 0) (1 28 0)) ((1 22 0) (1 27 0) (3 0 0)) ((1 14 0) (1 19 1) (1 27 0))
   ((0 0 0) (1 16 1) (1 21 1)) ((0 0 0) (1 18 0) (1 19 0))
   ((0 0 0) (1 18 0) (1 28 1)) ((1 12 0) (1 28 0) (1 28 0))
   ((0 0 0) (1 28 3) (1 30 0)) ((0 0 0) (1 23 0) (1 28 1))
   ((0 0 0) (1 17 1) (1 28 4) (1 29 2)) ((0 0 0) (1 15 0) (1 28 1) (1 29 2))
   ((0 0 0) (1 17 1) (1 28 1) (1 28 4)) ((0 0 0) (1 12 0) (1 19 0) (1 28 1))
   ((0 0 0) (1 16 1) (1 19 0) (1 28 1)) ((0 0 0) (1 13 0) (1 28 0) (1 28 1))
   ((1 11 0) (1 19 0) (1 28 0) (1 28 0))
   ((0 0 0) (1 21 0) (1 28 3) (1 28 5) (1 29 1)))))

(FNNounSemtrans (TheList "walking") Shoe-TheWord (and (isa :NOUN WalkingShoe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wall") Clock-TheWord (and (isa :NOUN WallClock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wall") Light-TheWord (and (isa :NOUN WallLight))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wall") Mirror-TheWord (and (isa :NOUN Mirror-Wall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wall") Planter-TheWord (and (isa :NOUN Planter-Wall))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wall") Street-TheWord (and (isa :NOUN StockMarket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wall-TheWord (and (isa :NOUN Wall-Vertical))
 (frame FN_Architectural_part)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn at) fe_descriptor) ((PPFn under) fe_descriptor)
    (AJP fe_descriptor orientation)
    (N mainConstituent (InverseBinaryPredicateFn parts))
    (A (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 5 0)) ((0 4 0)) ((0 2 1)) ((0 2 0)) ((0 1 0)) ((0 0 0) (0 3 1))
   ((0 2 0) (2 0 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Wall-TheWord (and (isa :NOUN Wall-GenericBarrier))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wallaby-TheWord (and (isa :NOUN Wallaby))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wallet-TheWord (and (isa :NOUN Wallet))
 (frame FN_Containers)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn with) containedObject)
    (AJP containedObject mainConstituent)
    ((PPFn of) containedObject mainConstituent) (N mainConstituent deviceUse))
   (:GAP (DEN containerUsed)) (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((0 3 1)) ((2 0 0)) ((0 3 0)) ((0 1 1)) ((0 0 0)) ((0 2 0)) ((0 1 0))
   ((0 3 1) (2 0 0)) ((0 2 1) (2 0 0)) ((0 0 0) (2 0 0)) ((0 2 0) (2 0 0)))))

(FNNounSemtrans (TheList) Wallpaper-TheWord (and (isa :NOUN WallPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walnut-TheWord (and (isa :NOUN (FruitFn WalnutTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walnut-TheWord (and (isa :NOUN (WoodFn WalnutTree)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walnut-TheWord (and (isa :NOUN WalnutTree))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walrus-TheWord (and (isa :NOUN Walrus))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waltz-TheWord (and (isa :NOUN Waltz)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wankel") Engine-TheWord
 (and (isa :NOUN WankelRotaryEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wankel" "rotary") Engine-TheWord
 (and (isa :NOUN WankelRotaryEngine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Want-TheWord (and (isa :NOUN Desire))
 (frame FN_Possession)
 (bindingTemplate
  (TheList (:SUBJECT (NP owner))
   (:OBLIQUE-OBJECT ((PPFn in) owner) ((PPFn of) owns) ((PPingFn of) owns))
   (:GEN (Poss owner))))
 (groupPatterns
  (TheSet ((1 2 0)) ((1 1 0)) ((1 1 0) (2 0 0)) ((1 0 0) (1 1 0))
   ((0 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Wants-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) War-TheWord (and (isa :NOUN War))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1 fe_side_2))
   (:OBLIQUE-OBJECT ((PPFn for) duration) ((PPFn about) fe_issue)
    ((PPFn over) fe_issue) (VPto purposeOfEvent) (VPing eventOutcomes)
    ((PPFn with) fe_side_1 fe_side_2) ((PPFn against) fe_side_2)
    ((PPFn on) fe_side_2) ((PPFn in) eventOccursAt fe_sides)
    (AJP fe_depictive duration fe_sides) ((PPFn through) temporallyIntersects)
    (NP eventOccursAt temporallyIntersects) (Num temporallyIntersects)
    ((PPFn of) fe_sides temporallyIntersects)
    (A instrument-Generic eventOccursAt fe_sides temporallyIntersects)
    (N duration fe_issue eventOccursAt fe_side_1 fe_sides
     temporallyIntersects))
   (:GAP (CNI fe_issue fe_side_1 fe_sides)
    (DNI fe_issue purposeOfEvent fe_side_1 fe_side_2 fe_sides)
    (INI fe_issue purposeOfEvent fe_sides))
   (:GEN (Poss fe_side_1)) (:APPOSITIVE (NP temporallyIntersects))))
 (groupPatterns
  (TheSet ((1 14 2)) ((1 7 0)) ((1 15 3)) ((1 4 0)) ((1 3 0)) ((1 8 0))
   ((1 11 0)) ((1 15 2)) ((1 14 1)) ((1 9 2)) ((1 15 4)) ((1 13 0)) ((1 5 1))
   ((3 0 0)) ((1 15 1)) ((1 14 0)) ((1 9 1)) ((1 9 0)) ((1 15 4) (1 15 5))
   ((1 5 1) (4 0 0)) ((1 7 0) (3 0 0)) ((0 0 0) (1 3 0)) ((1 11 0) (1 13 1))
   ((1 11 0) (1 12 0)) ((1 1 0) (1 15 4)) ((0 0 0) (1 7 0)) ((1 8 0) (1 15 1))
   ((1 5 1) (1 9 0)) ((0 0 1) (1 3 0) (1 14 3)) ((1 2 0) (1 11 1) (1 15 2))
   ((1 5 0) (1 10 0) (1 15 0)) ((1 6 0) (1 15 0) (3 0 0))
   ((1 0 0) (1 8 1) (1 15 1)))))

(FNNounSemtrans (TheList) Ward-TheWord (and (isa :NOUN WardRoom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wardrobe") Rack-TheWord
 (and (isa :NOUN WardrobeRack)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Warehouse-TheWord (and (isa :NOUN Warehouse))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Warfare-TheWord (and (isa :NOUN War))
 (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_side_1))
   (:OBLIQUE-OBJECT (A instrument-Generic by-Underspecified)
    (N instrument-Generic by-Underspecified)
    (AJP instrument-Generic fe_manner by-Underspecified temporallyIntersects))
   (:GAP (INI fe_issue purposeOfEvent fe_side_1 fe_side_2 fe_sides))))
 (groupPatterns
  (TheSet ((1 2 3)) ((1 1 1)) ((1 2 1)) ((1 0 1)) ((1 2 2)) ((1 1 0)) ((1 2 0))
   ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Warhead-TheWord (and (isa :NOUN Warhead))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A mainConstituent activeIngredientsOfType)
    (AJP activeIngredientsOfType)
    (N mainConstituent activeIngredientsOfType deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 2 2)) ((0 2 1)) ((0 1 0)) ((0 0 1)) ((0 2 0)) ((0 0 0))
   ((0 0 1) (2 0 0)) ((0 1 0) (0 2 1)) ((0 0 1) (0 1 0)))))

(FNNounSemtrans (TheList "warm") Front-TheWord (and (isa :NOUN WarmFrontEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Warplane-TheWord (and (isa :NOUN Warplane))
 (frame FN_Vehicle) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "warrant") Officer-TheWord
 (and (isa :NOUN WarrantOfficer)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Warrant-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance
       (Kappa (?thing ?evt)
        (and (nearestIsa ?evt ?evt-type)
             (oughtToBe-SitRolePlayerOfType ?thing objectActedOn ?evt-type)))
       Event :NOUN))
 (frame FN_Deserving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Warrant-TheWord (and (isa :NOUN Warrant-Writ))
 (frame FN_Documents)
 (bindingTemplate (TheList (:GAP (DEN fe_document) (DNI fe_right))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Warranty-TheWord (and (isa :NOUN Warranty))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wart-TheWord
 (and (isa :NOUN PhysiologicalFeatureOfSurface)) (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_attachment ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT ((PPFn around) fe_attachment) ((PPFn on) fe_attachment)
    ((PPFn round) fe_attachment) ((PPFn from) causes-Underspecified)
    (AJP fe_attachment fe_descriptor) (A fe_attachment fe_descriptor)
    (N fe_attachment fe_descriptor) ((PPFn of) fe_descriptor))
   (:GAP (DEN markCreated) (2nd ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 4 1)) ((0 0 0)) ((1 1 0)) ((1 6 0)) ((1 4 0))
   ((1 4 1) (3 0 0)) ((1 4 1) (1 7 0)) ((1 5 1) (1 6 1)) ((1 5 1) (1 5 1))
   ((0 0 1) (1 3 0)) ((0 0 1) (1 0 0)) ((0 0 1) (1 4 0)) ((1 2 0) (1 4 1))
   ((1 1 0) (1 4 1)) ((1 5 1) (1 6 0)) ((0 0 1) (1 4 1) (1 5 0)))))

(FNNounSemtrans (TheList) Warthog-TheWord (and (isa :NOUN Warthog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wash-TheWord (and (isa :NOUN Estuary))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Washbasin-TheWord
 (and (isa :NOUN WashBasin-PartOfSink)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Washcloth-TheWord (and (isa :NOUN WashCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Washer-TheWord (and (isa :NOUN ClothesWasher))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "washing") Machine-TheWord
 (and (isa :NOUN ClothesWasher)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wasp-TheWord (and (isa :NOUN Wasp)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waste-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance wasteProducts PurposefulAction :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waste-TheWord (and (isa :NOUN ExcretionSubstance))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wastebasket-TheWord (and (isa :NOUN Wastebasket))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watch-TheWord (and (isa :NOUN Watch))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn on) wornOn) ((PPFn with) parts)
    (N fe_descriptor mainConstituent clothingStyle)
    (AJP fe_descriptor mainConstituent clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 3 2)) ((0 1 0)) ((0 2 1)) ((0 3 1)) ((0 2 0)) ((0 3 0))
   ((0 0 0)) ((0 2 2) (2 0 0)) ((0 2 1) (2 0 0)) ((0 3 1) (2 0 0))
   ((0 3 0) (2 0 0)) ((0 2 2) (0 3 0)) ((0 2 1) (0 3 0)))))

(FNNounSemtrans (TheList) Watchman-TheWord (and (isa :NOUN SecurityGuard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watchtower-TheWord (and (isa :NOUN ObservationTower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Aspirator-TheWord
 (and (isa :NOUN WaterAspirator-LaboratoryEquipment)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Bed-TheWord (and (isa :NOUN WaterBed))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Bottle-TheWord (and (isa :NOUN WaterBottle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Buffalo-TheWord
 (and (isa :NOUN WaterBuffalo)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Cycle-TheWord
 (and (isa :NOUN WaterCycle-Terrestrial)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Faucet-TheWord
 (and (isa :NOUN Tap-FlowControlDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Faucet-TheWord
 (and (isa :NOUN Tap-PlumbingFixture)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Filter-TheWord (and (isa :NOUN WaterFilter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Fountain-TheWord
 (and (isa :NOUN DrinkingFountain)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Heater-TheWord
 (and (isa :NOUN HotWaterHeater)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Main-TheWord (and (isa :NOUN WaterMain))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Moccasin-TheWord
 (and (isa :NOUN WaterMoccasin)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Pistol-TheWord (and (isa :NOUN WaterPistol))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water" "polo") Ball-TheWord
 (and (isa :NOUN WaterPoloBall)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Polo-TheWord (and (isa :NOUN WaterPolo))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Pump-TheWord (and (isa :NOUN AutoWaterPump))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Purifier-TheWord
 (and (isa :NOUN WaterFilter)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Ski-TheWord (and (isa :NOUN WaterSki))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Snake-TheWord (and (isa :NOUN WaterSnake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Strider-TheWord
 (and (isa :NOUN WaterStrider)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Tank-TheWord (and (isa :NOUN WaterTank))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Water-TheWord (and (isa :NOUN Water-Ingestible))
 (frame FN_Food)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (DEN objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Water-TheWord (and (isa :NOUN BodyOfWater))
 (frame FN_Natural_features)
 (bindingTemplate (TheList (:GAP (DEN eventLocale)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Water-TheWord (and (isa :NOUN (LiquidFn Water)))
 (frame FN_Substance) (bindingTemplate (TheList (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Tower-TheWord (and (isa :NOUN WaterTower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "water") Vapor-TheWord
 (and (isa :NOUN (VaporFn Water))) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) WaterBuffalo-TheWord (and (isa :NOUN WaterBuffalo))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watercolor-TheWord
 (and (isa :NOUN ArtistsWatercolorPaint)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watercolor-TheWord
 (and (isa :NOUN WaterColorPainting)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waterfall-TheWord (and (isa :NOUN Waterfall))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) parts) (VPed fe_descriptor)
    ((PPFn at) fe_relative_location) ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Waterfowl-TheWord (and (isa :NOUN Waterfowl))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "watering") Can-TheWord (and (isa :NOUN WateringCan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watermelon-TheWord
 (and (isa :NOUN (FruitFn WatermelonPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watermelon-TheWord (and (isa :NOUN WatermelonPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waterpipe-TheWord (and (isa :NOUN Pipe-Plumbing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watershed-TheWord (and (isa :NOUN Watershed))
 (frame FN_Natural_features)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_container_possessor)
    (N (InverseBinaryPredicateFn nameString))
    ((PPFn between) fe_relative_location) ((PPFn for) fe_relative_location)
    ((PPFn from) fe_relative_location)
    ((PPFn of) fe_container_possessor fe_relative_location)
    (AJP (InverseBinaryPredicateFn nameString) activeIngredientsOfType))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 5 1)) ((0 4 0)) ((0 3 0)) ((0 2 0)) ((0 1 0)) ((0 5 0))
   ((0 0 0) (0 6 1)) ((0 0 0) (0 6 0)))))

(FNNounSemtrans (TheList) Waterspout-TheWord
 (and (isa :NOUN Waterspout-Tornado)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waterway-TheWord (and (isa :NOUN WaterSurfacePath))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Watt-TheWord (and (isa :NOUN Watt)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wave-TheWord (and (isa :NOUN Wave-Liquid))
 (frame FN_Quantified_mass)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPingFn of) fe_individuals)
    (N fe_individuals massOfObject) ((PPFn of) fe_individuals massOfObject)
    (AJP fe_q_prop))
   (:GAP (DEN fe_quantity))))
 (groupPatterns
  (TheSet ((0 2 1)) ((0 1 1)) ((0 0 0)) ((0 2 0)) ((0 1 0)) ((0 2 0) (0 3 0)))))

(FNNounSemtrans (TheList) Wavelength-TheWord
 (and (isa :NOUN Distance-Absolute)
      (relationExistsInstance wavelength WavePropagation :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wax") Paper-TheWord (and (isa :NOUN WaxedPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waxed") Paper-TheWord (and (isa :NOUN WaxedPaper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wax-TheWord (and (isa :NOUN Wax)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waxed") Board-TheWord (and (isa :NOUN WaxedBoard))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waxed" "cardboard") Box-TheWord
 (and (isa :NOUN WaxedCardboardCarton)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "waxing") Products-TheWord
 (and (isa :NOUN Wax-HairRemoval)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN OptionalAlternative))
 (frame FN_Alternatives) (bindingTemplate (TheList (:GAP (DEN fe_situation))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN CodeOfConduct))
 (frame FN_Conduct) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN Direction))
 (frame FN_Direction) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN MethodType))
 (frame FN_Means)
 (bindingTemplate
  (TheList (:SUBJECT (NP doneBy) (Sfin purposeOfEvent))
   (:OBLIQUE-OBJECT (VPbrst by-Underspecified) ((PPingFn by) by-Underspecified)
    (NP doneBy by-Underspecified) ((PPFn by) by-Underspecified)
    (Sfin doneBy purposeOfEvent) ((PPFn of) purposeOfEvent)
    (AJP fe_descriptor by-Underspecified purposeOfEvent)
    ((PPFn for) doneBy purposeOfEvent) (VPto by-Underspecified purposeOfEvent)
    ((PPingFn of) purposeOfEvent) (Srel purposeOfEvent) (VPfin purposeOfEvent)
    (AVP temporallyIntersects))
   (:GAP (2nd doneBy) (INI doneBy) (CNI doneBy) (DEN by-Underspecified)
    (DNI doneBy purposeOfEvent))
   (:NOUN (VPto purposeOfEvent)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 4 0)) ((4 0 0)) ((1 8 0)) ((1 8 1)) ((1 9 0)) ((1 5 0))
   ((1 7 1)) ((0 1 0)) ((1 4 1)) ((1 8 0) (1 8 1)) ((1 5 0) (1 8 0))
   ((1 6 0) (1 9 0)) ((1 6 0) (1 6 0)) ((0 0 0) (1 8 1)) ((0 0 0) (1 7 1))
   ((1 1 0) (1 10 0)) ((1 6 0) (1 8 1)) ((1 6 0) (1 7 1)) ((1 6 0) (1 6 2))
   ((1 5 0) (1 6 0)) ((1 3 0) (1 5 0) (1 6 0)) ((1 2 0) (1 2 1) (1 11 0))
   ((1 6 0) (1 8 1) (1 8 1)) ((1 6 0) (1 7 0) (1 8 1))
   ((1 0 0) (1 6 0) (1 8 1)) ((1 5 0) (1 6 0) (1 6 1))
   ((1 6 0) (1 6 0) (3 0 0)) ((0 0 0) (1 8 1) (1 9 0) (1 12 0)))))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN PathArtifact))
 (frame FN_Planned_trajectory)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (NP to-Generic) ((PPFn at) to-Generic)
    ((PPFn to) to-Generic) (VPto to-Generic) ((PPFn for) objectActedOn))
   (:GAP (DEN trajectory-Complete) (DNI objectActedOn))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 5 0)) ((0 0 0)) ((1 2 0)) ((1 4 0)) ((1 3 0) (3 0 0))
   ((1 1 0) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN Roadway))
 (frame FN_Roadways)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN fe_roadway))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Way-TheWord (and (isa :NOUN Path-Generic))
 (frame FN_Self_motion)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (NP to-Generic) ((PPFn to) to-Generic)
    ((PPFn from) from-Generic) ((PPFn after) temporallyIntersects))
   (:GAP (DEN trajectory-Complete)) (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0) (1 1 0) (3 0 0)) ((1 1 0) (1 2 0) (3 0 0))
   ((0 0 0) (1 1 0) (1 3 0) (3 0 0)))))

(FNNounSemtrans (TheList) Ways-TheWord (and (isa :NOUN HumanCulture))
 (frame FN_Custom)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn in) eventOccursAt))
   (:GAP (DEN objectOfCritique))))
 (groupPatterns (TheSet ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList "wdm") System-TheWord
 (and (isa :NOUN WavelengthDivisionMultiplexingSystem-CommunicationDevice))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) We-TheWord
 (and (isa :NOUN
       (PronounFn FirstPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weapon" "of" "mass") Destruction-TheWord
 (and (isa :NOUN WeaponOfMassDestruction)) (frame FN_Weapon)
 (bindingTemplate
  (TheList (:GAP (2nd deviceUse) (DEN instrument-UsedAsWeapon))
   (:GEN (Poss performedBy))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList "weapon") System-TheWord
 (and (isa :NOUN WeaponSystem)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weapon-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A activeIngredientsOfType)
    (AJP performedBy fe_descriptor activeIngredientsOfType deviceUse)
    (N activeIngredientsOfType deviceUse) ((PPFn for) deviceUse)
    ((PPFn of) activeIngredientsOfType deviceUse) (Srel deviceUse))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 5 0)) ((0 4 1)) ((0 3 0)) ((0 2 1)) ((0 1 3)) ((0 4 0))
   ((0 1 2)) ((0 0 0)) ((0 2 0)) ((0 1 1)) ((0 1 0)) ((0 1 2) (2 0 0)))))

(FNNounSemtrans (TheList) Weaponization-TheWord
 (and (isa :NOUN Transformation)) (frame FN_Processing_materials)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn of) mainConstituent))
   (:GAP (DNI doneBy mainConstituent) (INI fe_alterant mainConstituent))
   (:GEN (Poss mainConstituent))))
 (groupPatterns (TheSet ((2 0 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Weaponry-TheWord (and (isa :NOUN Weapon))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A activeIngredientsOfType) (AJP activeIngredientsOfType)
    (N activeIngredientsOfType))
   (:GAP (DEN instrument-UsedAsWeapon)) (:GEN (Poss doneBy))))
 (groupPatterns (TheSet ((2 0 0)) ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "wearable") Item-TheWord
 (and (isa :NOUN SomethingToWear)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weariness-TheWord (and (isa :NOUN LevelOfExhaustion))
 (frame FN_Biological_urge)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (N objectActedOn)
    ((PPFn with) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn in) eventAffectsBodyPart)
    ((PPFn of) (InverseBinaryPredicateFn explains-Generic)
     eventAffectsBodyPart)
    (AJP fe_degree fe_parameter) ((PPFn after) temporallyIntersects))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 3 1)) ((1 2 0)) ((1 1 0)) ((1 3 0)) ((2 0 0)) ((0 0 0)) ((1 0 0))
   ((1 4 0)) ((1 1 0) (1 4 1)) ((1 1 0) (2 0 0)) ((0 0 0) (1 4 0))
   ((1 4 0) (1 5 0) (2 0 0)))))

(FNNounSemtrans (TheList) Weasel-TheWord (and (isa :NOUN Weasel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weather") Balloon-TheWord
 (and (isa :NOUN WeatherBalloon)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weather") Satellite-TheWord
 (and (isa :NOUN WeatherSatellite)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weather") Strip-TheWord
 (and (isa :NOUN WeatherStripping)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weather-TheWord (and (isa :NOUN WeatherEvent))
 (frame FN_Weather)
 (bindingTemplate
  (TheList (:SUBJECT (NP temporallyIntersects))
   (:OBLIQUE-OBJECT (AJP fe_specification))
   (:GAP (DNI eventOccursAt temporallyIntersects) (INI temporallyIntersects))))
 (groupPatterns (TheSet ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList "weather") Vane-TheWord (and (isa :NOUN Weathervane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weathering-TheWord (and (isa :NOUN Weathering))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weatherman-TheWord (and (isa :NOUN Weathercaster))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Web-TheWord (and (isa :NOUN SpiderWeb))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "web") Developer-TheWord
 (and (isa :NOUN PersonWithOccupation)
      (performsInstancesAsPartOfJob WebDesign :NOUN))
 (frame FN_People_by_vocation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "web") Page-TheWord (and (isa :NOUN WebPage-CW))
 (frame FN_Network) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "web") Page-TheWord
 (and (isa :NOUN WorldWideWebPage-AIS)) (frame FN_Network)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Website-TheWord (and (isa :NOUN WebSite))
 (frame FN_Network) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Web-TheWord
 (and (isa :NOUN WorldWideWeb-DynamicIndexedInfoSource)) (frame FN_Network)
 (bindingTemplate
  (TheList (:SUBJECT (NP nodeInSystem))
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    ((PPFn of) fe_connections nodesInSystem))
   (:GAP (DEN nodeInSystem) (INI fe_connections nodesInSystem))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 1 0) (3 0 0)) ((0 0 0) (1 1 1)) ((1 0 0) (1 1 1)))))

(FNNounSemtrans (TheList "webbed") Foot-TheWord (and (isa :NOUN WebbedFoot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Webcam-TheWord (and (isa :NOUN WebCam-Device))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Webpage-TheWord (and (isa :NOUN WebPage-CW))
 (frame FN_Network) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wedding") Cake-TheWord (and (isa :NOUN WeddingCake))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wedding") Reception-TheWord
 (and (isa :NOUN WeddingReception)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wedding") Ring-TheWord (and (isa :NOUN WeddingRing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wedding-TheWord (and (isa :NOUN WeddingEvent-Entire))
 (frame FN_Forming_relationships)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_partners)
    ((PPFn of) fe_partner_1 fe_partners))
   (:GAP (DNI fe_partner_2) (INI fe_partner_2))
   (:GEN (Poss fe_partner_1 fe_partners))))
 (groupPatterns (TheSet ((2 0 1)) ((0 1 1)) ((0 0 0)) ((2 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList "wedding") Ceremony-TheWord
 (and (isa :NOUN WeddingCeremony)) (frame FN_Forming_relationships)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wedding-TheWord
 (and (isa :NOUN WeddingEvent-Generic)) (frame FN_Forming_relationships)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn between) fe_partners)
    ((PPFn of) fe_partner_1 fe_partners))
   (:GAP (DNI fe_partner_2) (INI fe_partner_2))
   (:GEN (Poss fe_partner_1 fe_partners))))
 (groupPatterns (TheSet ((2 0 1)) ((0 1 1)) ((0 0 0)) ((2 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Wedge-TheWord (and (isa :NOUN Wedge-GolfClub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wedge-TheWord (and (isa :NOUN Wedge))
 (frame FN_Shapes)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_shape_prop) ((PPFn of) stuffUsed)
    (A fe_shape_prop stuffUsed))
   (:GAP (DEN fe_shape))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 2 1)) ((0 0 0)) ((0 2 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Wednesday-TheWord (and (isa :NOUN Wednesday))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DNI fe_relative_time) (DEN fe_relative_time fe_unit))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Weed-TheWord (and (isa :NOUN Marijuana))
 (frame FN_Intoxicants) (bindingTemplate (TheList (:GAP (DEN fe_intoxicant))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Week-TheWord (and (isa :NOUN CalendarWeek))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_relative_time) ((PPFn after) fe_relative_time)
    (A fe_relative_time) (N fe_salient_event))
   (:GAP (DEN fe_unit) (DNI fe_relative_time (InverseBinaryPredicateFn parts))
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 3 0)) ((0 2 0)) ((0 0 0)) ((0 1 0)))))

(FNNounSemtrans (TheList) Week-TheWord (and (isa :NOUN UnitOfTime))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList (:OBJECT (Num fe_count))
   (:OBLIQUE-OBJECT (A fe_count) (AJP fe_count) (NP fe_unit))
   (:GAP (INI fe_count) (DNI fe_process) (DEN fe_unit))))
 (groupPatterns (TheSet ((1 1 0)) ((1 0 0)) ((0 0 0) (1 2 0)))))

(FNNounSemtrans (TheList) Weekday-TheWord (and (isa :NOUN Weekday))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weekend-TheWord (and (isa :NOUN CalendarWeekend))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A fe_relative_time) (AJP fe_relative_time)
    ((PPFn in) fe_relative_time)
    (N (InverseBinaryPredicateFn nameString) fe_relative_time)
    ((PPFn before) fe_relative_time) ((PPFn of) fe_relative_time)
    (VPing fe_relative_time))
   (:GAP (DEN fe_unit)
    (INI fe_relative_time (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 4 0)) ((0 3 1)) ((0 1 0)) ((0 0 0)) ((0 3 0))
   ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Weeknight-TheWord
 (and (isa :NOUN (EveningFn Weekday))) (frame FN_Calendric_unit)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weeping") Willow-TheWord (and (isa :NOUN WillowTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weight-TheWord (and (isa :NOUN Mass))
 (frame FN_Dimension) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weight") Unit-TheWord (and (isa :NOUN UnitOfMass))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "weightlifting") Bench-TheWord
 (and (isa :NOUN WeightLiftingBench)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weimaraner-TheWord (and (isa :NOUN Weimaraner))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weir-TheWord (and (isa :NOUN Weir-Dam))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "welder" "^s") Mask-TheWord
 (and (isa :NOUN WeldingMask)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Well-TheWord (and (isa :NOUN Well)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wellhead-TheWord (and (isa :NOUN Wellhead))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wellington-TheWord (and (isa :NOUN Boot-Footwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN itemWorn))
   (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 0 0)))))

(FNNounSemtrans (TheList) Welly-TheWord (and (isa :NOUN Boot-Footwear))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor mainConstituent))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 0 1) (2 0 0)))))

(FNNounSemtrans (TheList) Welshman-TheWord (and (isa :NOUN WelshPerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Werewolf-TheWord (and (isa :NOUN Werewolf))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wernicke" "s") Area-TheWord
 (and (isa :NOUN WernickesArea)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "west") Indian-TheWord
 (and (isa :NOUN WestIndiesPerson)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) West-TheWord (and (isa :NOUN West-Generally))
 (frame FN_Direction) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) West-TheWord (and (isa :NOUN Side))
 (frame FN_Part_orientational)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (A (InverseBinaryPredicateFn parts))
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "west") Wind-TheWord (and (isa :NOUN WestWind))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "western") Larch-TheWord
 (and (isa :NOUN WesternLarchTree)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wet" "pet") Food-TheWord (and (isa :NOUN WetPetFood))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wetland-TheWord (and (isa :NOUN WetlandRegion))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wetting") Agent-TheWord (and (isa :NOUN Surfactant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whale-TheWord (and (isa :NOUN Whale))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) What-TheWord (and (isa :NOUN SomethingExisting))
 (frame FN_Entity) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wheat") Flour-TheWord (and (isa :NOUN WheatFlour))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wheat") Germ-TheWord (and (isa :NOUN WheatGerm))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wheat-TheWord (and (isa :NOUN Wheat-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wheat-TheWord (and (isa :NOUN WheatPlant))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wheatfield-TheWord
 (and (isa :NOUN (FieldFn WheatPlant))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wheel" "and" "tire") Composite-TheWord
 (and (isa :NOUN Wheel-WheelAndTireComposite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "tube" "and" "tire") Wheel-TheWord
 (and (isa :NOUN Wheel-WheelTubeAndTireComposite)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wheel" "and") Axle-TheWord
 (and (isa :NOUN WheelAndAxle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wheel-TheWord (and (isa :NOUN Wheel))
 (frame FN_Artifact)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (NP productsCreated))
   (:GAP (DEN productsCreated))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Wheel-TheWord
 (and (isa :NOUN Wheel-WheelAndTireComposite)) (frame FN_Vehicle_subpart)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wheelbarrow-TheWord (and (isa :NOUN Wheelbarrow))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wheelchair-TheWord (and (isa :NOUN Wheelchair))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wheeled") Vehicle-TheWord
 (and (isa :NOUN WheeledTransportationDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whetstone-TheWord (and (isa :NOUN Whetstone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whey-TheWord (and (isa :NOUN Whey)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whiff-TheWord
 (and (isa :NOUN ObjectTypeBySensibleFeature)) (frame FN_Sensation)
 (bindingTemplate
  (TheList (:SUBJECT (NP from-Generic))
   (:OBLIQUE-OBJECT ((PPFn of) perceivedThings) ((PPFn from) from-Generic)
    ((PPFn on) from-Generic))))
 (groupPatterns (TheSet ((1 2 0)) ((1 1 0)) ((0 0 0)) ((1 0 0)))))

(FNNounSemtrans (TheList) Whimper-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) (AVP fe_manner) ((PPFn from) emitter)
    ((PPFn of) fe_internal_cause emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 1)) ((1 2 0)) ((0 0 0)) ((1 0 0)) ((1 3 0))
   ((1 0 0) (2 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0)) ((0 0 0) (1 3 0))
   ((1 0 0) (1 3 0)) ((0 0 0) (1 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Whine-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_degree fe_manner) ((PPingFn like) fe_manner)
    (N fe_manner) ((PPFn of) fe_noisy_event emitter) ((PPFn from) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 1)) ((1 4 0)) ((0 0 0)) ((1 3 0)) ((1 0 1))
   ((0 0 0) (2 0 0)) ((1 2 0) (1 3 1)) ((1 0 1) (2 0 0)) ((1 0 1) (1 3 1))
   ((0 0 0) (1 0 1)) ((1 0 1) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Whinny-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((1 1 0)) ((1 0 0)) ((1 0 0) (2 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Whip-TheWord (and (isa :NOUN Whip)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whippet-TheWord (and (isa :NOUN Whippet))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whirlpool-TheWord
 (and (isa :NOUN BodyOfWater)
      (relationExistsInstance eventOccursAt WhirlingOfFluid :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whisk-TheWord (and (isa :NOUN WireWhisk))
 (frame FN_Artifact) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whisk-TheWord (and (isa :NOUN WireWhisk))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whisker-TheWord (and (isa :NOUN Whisker))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor orientation)
    ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved) (DNI ownerOfProprietaryThing))
   (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((0 0 0)) ((1 0 0)) ((1 1 1) (3 0 0)) ((1 1 0) (3 0 0))
   ((1 0 0) (3 0 0)) ((1 0 0) (1 2 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 1 1)) ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Whiskey-TheWord (and (isa :NOUN Whisky))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whist-TheWord (and (isa :NOUN Whist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whistle-TheWord (and (isa :NOUN Whistle))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whistle-TheWord (and (isa :NOUN Whistling-Human))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whistle-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Whistle)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn at) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) from-Generic) (AJP fe_manner) ((PPFn on) emitter)
    ((PPFn of) fe_internal_cause fe_manner emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0)) ((1 4 2)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0)) ((1 2 0) (1 4 0))
   ((0 0 0) (1 2 0) (1 2 0) (1 4 1)))))

(FNNounSemtrans (TheList) Whistle-TheWord
 (and (isa :NOUN (CharacteristicSoundTypeFromActionTypeFn Whistling-Human)))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn at) (InverseBinaryPredicateFn explains-Generic))
    ((PPFn from) from-Generic) (AJP fe_manner) ((PPFn on) emitter)
    ((PPFn of) fe_internal_cause fe_manner emitter))
   (:GEN (Poss emitter))))
 (groupPatterns
  (TheSet ((2 0 0)) ((1 3 0)) ((1 4 2)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((1 2 0) (1 3 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 4 0)) ((1 2 0) (1 4 0))
   ((0 0 0) (1 2 0) (1 2 0) (1 4 1)))))

(FNNounSemtrans (TheList "white") Bishop-TheWord
 (and (isa :NOUN WhiteBishop-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white" "blood") Cell-TheWord
 (and (isa :NOUN WhiteBloodCell)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Cell-TheWord (and (isa :NOUN WhiteBloodCell))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white" "chess") Piece-TheWord
 (and (isa :NOUN WhiteChessPiece)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Dwarf-TheWord (and (isa :NOUN DwarfStar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") King-TheWord
 (and (isa :NOUN WhiteKing-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Knight-TheWord
 (and (isa :NOUN WhiteKnight-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Matter-TheWord (and (isa :NOUN WhiteMatter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) White-Out-TheWord (and (isa :NOUN CorrectionFluid))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Pawn-TheWord
 (and (isa :NOUN WhitePawn-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Queen-TheWord
 (and (isa :NOUN WhiteQueen-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Rook-TheWord
 (and (isa :NOUN WhiteRook-ChessPiece)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) White-TheWord
 (and (isa :NOUN EthnicGroupOfCaucasians)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) White-TheWord (and (isa :NOUN WhiteColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "white") Wine-TheWord (and (isa :NOUN WhiteWine))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "whiteboard") Eraser-TheWord
 (and (isa :NOUN Eraser-Board)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whitmonday-TheWord (and (isa :NOUN Whitmonday))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whiz-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT ((PPFn with) fe_focal_participant) (AJP hasSkill)
    (N fe_focal_participant hasSkill) ((PPFn at) hasSkill) ((PPFn on) hasSkill)
    ((PPingFn at) hasSkill))
   (:GAP (DEN affectedAgent)) (:NOUN (N affectedAgent))))
 (groupPatterns
  (TheSet ((1 2 1)) ((1 1 0)) ((1 2 0)) ((0 0 0) (1 5 0)) ((0 0 0) (1 4 0))
   ((0 0 0) (1 3 0)) ((1 2 1) (3 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Who-TheWord (and (isa :NOUN Agent-Generic))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whoever-TheWord (and (isa :NOUN Agent-Generic))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whodunit-TheWord
 (and (isa :NOUN MysteryStory-Generic)) (frame FN_Text)
 (bindingTemplate (TheList (:GAP (DEN fe_text)))) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wholesaler-TheWord (and (isa :NOUN Wholesaler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "whooping") Crane-TheWord
 (and (isa :NOUN WhoopingCrane)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whorehouse-TheWord (and (isa :NOUN Brothel))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Why-TheWord (and (isa :NOUN Motive))
 (frame FN_Reason)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (Sfin purposeOf-EventSit))
   (:GAP (DEN fe_state_of_affairs))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Wick-TheWord (and (isa :NOUN Wick)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wicker") Basket-TheWord
 (and (isa :NOUN WickerBasket)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wicker-TheWord (and (isa :NOUN Wicker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Widow-TheWord (and (isa :NOUN (FemaleFn Widowed)))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:OBLIQUE-OBJECT ((PPFn of) fe_partner_2))
   (:GAP (DEN fe_partner_1) (INI fe_partner_2)) (:GEN (Poss fe_partner_2))))
 (groupPatterns (TheSet ((0 0 0)) ((3 0 0)) ((1 0 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Widower-TheWord (and (isa :NOUN (MaleFn Widowed)))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1))
   (:GAP (DEN fe_partner_1) (INI fe_partner_2)) (:GEN (Poss fe_partner_2))))
 (groupPatterns (TheSet ((0 0 0)) ((2 0 0)))))

(FNNounSemtrans (TheList) Width-TheWord (and (isa :NOUN Width))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn widthOfObject)))
   (:OBLIQUE-OBJECT ((PPFn at) eventOccursAt) ((PPFn between) eventOccursAt)
    ((PPFn near) eventOccursAt) ((PPFn under) eventOccursAt)
    ((PPFn from) quantityMeasured) ((PPFn to) quantityMeasured)
    (AJP quantityMeasured) (N quantityMeasured)
    ((PPFn in) eventOccursAt quantityMeasured) ((PPFn up) quantityMeasured)
    ((PPFn of) quantityMeasured (InverseBinaryPredicateFn widthOfObject))
    (NP quantityMeasured (InverseBinaryPredicateFn widthOfObject)))
   (:GAP (DEN hasPhysicalQuantity))
   (:GEN (Poss (InverseBinaryPredicateFn widthOfObject)))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 10 1)) ((1 0 0)) ((0 0 0) (1 9 0)) ((1 10 0) (3 0 0))
   ((0 0 0) (1 10 0)) ((1 10 0) (1 11 1)) ((1 8 1) (3 0 0)) ((1 8 1) (1 10 1))
   ((0 0 0) (1 4 0)) ((1 11 0) (3 0 0)) ((1 10 1) (1 11 0)) ((0 0 0) (1 11 0))
   ((1 7 0) (3 0 0)) ((0 0 0) (1 7 0)) ((1 6 0) (1 10 1)) ((0 0 0) (1 8 0))
   ((1 1 0) (1 11 0)) ((1 8 0) (1 10 1) (1 11 0)) ((0 0 0) (1 0 0) (1 10 0))
   ((0 0 0) (1 2 0) (1 3 0) (1 4 0) (1 5 0)))))

(FNNounSemtrans (TheList) Wife-TheWord
 (and (isa :NOUN FemaleHuman) (relationExistsInstance wife MaleHuman :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wife-TheWord (and (isa :NOUN InvolvedInRelationship))
 (frame FN_Personal_relationship)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_partner_1 fe_partner_2))
   (:OBLIQUE-OBJECT (AJP fe_depictive) (NP fe_partner_1)
    ((PPFn of) fe_partner_2))
   (:GAP (DNI fe_partner_2) (DEN fe_partner_1 fe_partner_2))
   (:NOUN (N fe_partner_1)) (:GEN (Poss fe_partner_1 fe_partner_2))
   (:APPOSITIVE (N fe_partner_1) (NP fe_partner_1 fe_partner_2))))
 (groupPatterns
  (TheSet ((4 0 0)) ((3 0 0)) ((4 0 1)) ((1 2 0)) ((1 0 0)) ((4 0 0) (5 1 1))
   ((0 0 0) (4 0 1)) ((0 0 0) (1 2 0)) ((1 1 0) (4 0 1)) ((4 0 1) (5 1 0))
   ((3 0 0) (4 0 1)) ((0 0 1) (3 0 0)) ((4 0 1) (5 0 0)))))

(FNNounSemtrans (TheList) Wig-TheWord (and (isa :NOUN Wig))
 (frame FN_Accoutrements)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor) ((PPFn in) fe_descriptor)
    ((PPingFn of) fe_descriptor) (VPed mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 4 1)) ((0 3 0)) ((0 4 0)) ((0 2 0) (2 0 0))
   ((0 4 0) (2 0 0)) ((0 1 0) (0 4 1)) ((0 0 0) (0 4 0) (2 0 0))
   ((0 0 0) (0 4 0) (0 4 0)))))

(FNNounSemtrans (TheList) Wigwam-TheWord (and (isa :NOUN ConstructionArtifact))
 (frame FN_Buildings) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wiki-TheWord (and (isa :NOUN WikiWiki))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wikipedia") Article-TheWord
 (and (isa :NOUN WikipediaArticle)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wild") Boar-TheWord (and (isa :NOUN WildBoar))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wild-TheWord (and (isa :NOUN WildernessArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wilderness-TheWord (and (isa :NOUN WildernessArea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wilderness") Area-TheWord
 (and (isa :NOUN WildernessArea)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wildfire-TheWord (and (isa :NOUN Firestorm))
 (frame FN_Emergency_fire)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_fire eventOccursAt) ((PPFn in) eventOccursAt)
    (AJP eventOccursAt temporallyIntersects))
   (:GAP (DEN fe_fire))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 1)) ((0 2 0)) ((0 0 0)) ((0 1 0) (0 2 1)))))

(FNNounSemtrans (TheList) Wildflower-TheWord (and (isa :NOUN Wildflower))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wildlife") Reserve-TheWord
 (and (isa :NOUN WildlifeReserve)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Will-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring) (bindingTemplate (TheList (:GEN (Poss objectActedOn))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Will-TheWord (and (isa :NOUN Document-CW))
 (frame FN_Documents) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Will-TheWord (and (isa :NOUN WillAndTestament))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Willingness-TheWord (and (isa :NOUN Willingness))
 (frame FN_Willingness)
 (bindingTemplate
  (TheList (:SUBJECT (NP subjectOfMentalSituation))
   (:OBLIQUE-OBJECT (VPto processTypeForAccomplishmentType)
    ((PPFn of) subjectOfMentalSituation))
   (:GEN (Poss subjectOfMentalSituation))))
 (groupPatterns (TheSet ((1 0 0) (2 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Willow-TheWord (and (isa :NOUN WillowTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "willow") Tree-TheWord (and (isa :NOUN WillowTree))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Win-TheWord (and (isa :NOUN WinningAConflict))
 (frame FN_Beat_opponent) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wind") Generation-TheWord
 (and (isa :NOUN WindEnergy)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wind") Instrument-TheWord
 (and (isa :NOUN WindInstrument-Musical)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wind") Instrument-TheWord
 (and (isa :NOUN WoodwindInstrument)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wind") Sock-TheWord (and (isa :NOUN Windsock))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wind-TheWord (and (isa :NOUN WindProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wind-TheWord (and (isa :NOUN WindingProcess))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wind" "up") Toy-TheWord (and (isa :NOUN WindupToy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Windbreaker-TheWord (and (isa :NOUN Windbreaker))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor) (N fe_descriptor))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 0 0)) ((0 0 0) (2 0 0)) ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList) Windcheater-TheWord (and (isa :NOUN Windbreaker))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N mainConstituent) (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((0 1 0)) ((0 1 0) (0 1 1)) ((0 0 0) (0 1 0))
   ((0 0 0) (0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Windchime-TheWord (and (isa :NOUN Windchime))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wind") Energy-TheWord (and (isa :NOUN WindEnergy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Windmill-TheWord (and (isa :NOUN Windmill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "window") Blind-TheWord
 (and (isa :NOUN BlindForWindow)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "window") Pane-TheWord (and (isa :NOUN WindowPane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "window") Sill-TheWord (and (isa :NOUN WindowSill))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Window-TheWord
 (and (isa :NOUN WindowPortalCovering-Glass)) (frame FN_Architectural_part)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor)
    (AJP performedBy fe_descriptor mainConstituent) ((PPFn above) orientation))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((0 2 0)) ((0 1 2)) ((0 0 0)) ((0 1 1)) ((0 1 0) (0 1 1) (0 1 2)))))

(FNNounSemtrans (TheList) Window-TheWord (and (isa :NOUN WindowPortal))
 (frame FN_Connecting_architecture)
 (bindingTemplate
  (TheList (:OBJECT (N (InverseBinaryPredicateFn parts)))
   (:OBLIQUE-OBJECT ((PPFn between) fe_connected_locations)
    ((PPFn in) fe_connected_locations) ((PPFn on) fe_connected_locations)
    ((PPFn into) to-Generic) (N mainConstituent)
    (AJP fe_descriptor orientation) ((PPFn upon) orientation) (NP parts)
    ((PPFn of) (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts from-Generic))
   (:GEN (Poss (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((1 8 0)) ((1 7 0)) ((1 3 0)) ((1 5 0)) ((0 0 0) (1 7 0))
   ((1 5 1) (1 6 0)) ((1 2 0) (3 0 0)) ((1 0 0) (1 4 0)) ((1 1 0) (1 5 0)))))

(FNNounSemtrans (TheList) Window-TheWord
 (and (isa :NOUN ComputerDisplayWindow)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Window-TheWord (and (isa :NOUN AutomobileWindow))
 (frame FN_Vehicle_subpart)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N fe_descriptor orientation (InverseBinaryPredicateFn parts)))
   (:GAP (DEN parts) (DNI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet ((0 1 2)) ((0 1 1)) ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "window") Unit-TheWord
 (and (isa :NOUN WindowAirConditioner)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "window") Washer-TheWord
 (and (isa :NOUN WindowWasher)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "window" "well") Cover-TheWord
 (and (isa :NOUN WindowWellCover)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Windowpane-TheWord (and (isa :NOUN WindowPane))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Windpipe-TheWord (and (isa :NOUN Trachea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Windshield-TheWord (and (isa :NOUN Windshield))
 (frame FN_Vehicle_subpart) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "windshield" "wiper") Blade-TheWord
 (and (isa :NOUN WindshieldWiperBlade)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "windshield" "wiper") Fluid-TheWord
 (and (isa :NOUN WindshieldWiperFluid)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "windshield") Wiper-TheWord
 (and (isa :NOUN RegularWindshieldWiper)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "windshield") Wiper-TheWord
 (and (isa :NOUN WindshieldWiperBlade)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Windstorm-TheWord (and (isa :NOUN WindstormAsObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "windup") Device-TheWord
 (and (isa :NOUN WindupDevice)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wine") Bottle-TheWord (and (isa :NOUN WineBottle))
 (frame FN_Containers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wine") Cellar-TheWord
 (and (isa :NOUN BasementRoom) (isa :NOUN WineRack))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wine") Chiller-TheWord (and (isa :NOUN WineChiller))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wine") Glass-TheWord (and (isa :NOUN WineGlass))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wine") Rack-TheWord (and (isa :NOUN WineRack))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wine-TheWord (and (isa :NOUN Wine)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wineglass-TheWord (and (isa :NOUN WineGlass))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Winery-TheWord (and (isa :NOUN Winery))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wing-TheWord (and (isa :NOUN Wing-AnimalBodyPart))
 (frame FN_Body_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP ownerOfProprietaryThing))
   (:OBLIQUE-OBJECT (AJP fe_descriptor) ((PPFn of) ownerOfProprietaryThing))
   (:GAP (DEN actorPartsInvolved)) (:GEN (Poss ownerOfProprietaryThing))))
 (groupPatterns
  (TheSet ((3 0 0)) ((1 1 0)) ((0 0 0)) ((1 0 0) (3 0 0)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Wing-TheWord (and (isa :NOUN RoomInAConstruction))
 (frame FN_Building_subparts)
 (bindingTemplate (TheList (:GAP (DEN properPhysicalParts))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wing-TheWord (and (isa :NOUN AirplaneWing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wing-TheWord (and (isa :NOUN PoultryWing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wingspan-TheWord
 (and (isa :NOUN Distance-Absolute)
      (relationExistsInstance wingSpan
       (CollectionUnionFn (TheSet AirTransportationDevice Animal)) :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wink-TheWord (and (isa :NOUN WinkingAnEye))
 (frame FN_Body_movement)
 (bindingTemplate (TheList (:OBJECT ((PPFn over) actorPartsInvolved))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Winner-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance winnerInConflict ConflictEvent :NOUN))
 (frame FN_Beat_opponent) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "winter" "olympic") Games-TheWord
 (and (isa :NOUN OlympicWinterGames)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "winter") Solstice-TheWord
 (and (isa :NOUN WinterSolsticeDay)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Winter-TheWord (and (isa :NOUN CalendarWinter))
 (frame FN_Calendric_unit) (bindingTemplate (TheList (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Winter-TheWord (and (isa :NOUN WinterSeason))
 (frame FN_Seasons) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wire") Cutter-TheWord (and (isa :NOUN WireCutter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wire-TheWord (and (isa :NOUN Wire))
 (frame FN_Connectors)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP activeIngredientsOfType))
   (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList "wireless" "communication") Device-TheWord
 (and (isa :NOUN WirelessCommunicationDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wisdom") Tooth-TheWord (and (isa :NOUN WisdomTooth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wish-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wit-TheWord (and (isa :NOUN MentalQuantity))
 (frame FN_Mental_property)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent)) (:GAP (DEN objectOfCritique))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Wit-TheWord (and (isa :NOUN Amusement-Feeling))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Witch-TheWord (and (isa :NOUN Witch)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Witchcraft-TheWord (and (isa :NOUN Witchcraft))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Withdrawal-TheWord
 (and (isa :NOUN RemovingSomething)) (frame FN_Removing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP doneBy) ((PPFn by) doneBy) ((PPFn from) from-Generic)
    (N objectRemoved) ((PPFn of) objectRemoved))
   (:GAP (CNI doneBy) (INI doneBy from-Generic objectRemoved)
    (DNI from-Generic objectRemoved))
   (:GEN (Poss doneBy objectRemoved))))
 (groupPatterns
  (TheSet ((0 1 0)) ((2 0 1)) ((0 4 0)) ((0 3 0)) ((0 4 0) (2 0 0))
   ((0 3 0) (2 0 0)) ((0 1 0) (0 4 0)) ((0 2 0) (0 4 0)) ((0 0 0) (0 3 0)))))

(FNNounSemtrans (TheList) Withdrawal-TheWord
 (and (isa :NOUN RetreatingFromAnArea)) (frame FN_Withdraw_from_participation)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_organization)
    ((PPFn from) processTypeForAccomplishmentType
     (InverseBinaryPredicateFn explains-Generic) fe_organization)
    ((PPFn of) doneBy) (AJP doneBy temporallyIntersects)
    ((PPFn on) temporallyIntersects))
   (:GAP (DNI processTypeForAccomplishmentType fe_organization doneBy)
    (INI fe_organization doneBy))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((0 0 0)) ((0 1 0)) ((2 0 0)) ((0 3 0)) ((0 1 2) (0 3 1))
   ((0 1 2) (2 0 0)) ((0 1 2) (0 2 0)) ((0 1 0) (2 0 0)) ((0 1 0) (0 2 0))
   ((0 1 1) (2 0 0)) ((0 1 2) (0 4 0) (2 0 0)) ((0 1 2) (0 2 0) (0 4 0)))))

(FNNounSemtrans (TheList) Withers-TheWord (and (isa :NOUN Withers))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Withy-TheWord (and (isa :NOUN Connector))
 (frame FN_Connectors) (bindingTemplate (TheList (:GAP (DEN fe_connector))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wizard-TheWord (and (isa :NOUN Expert))
 (frame FN_Expertise)
 (bindingTemplate
  (TheList (:SUBJECT (NP affectedAgent))
   (:OBLIQUE-OBJECT (N fe_focal_participant hasSkill) (AJP hasSkill)
    ((PPingFn at) hasSkill))
   (:GAP (DEN affectedAgent)) (:NOUN (N affectedAgent))))
 (groupPatterns
  (TheSet ((1 0 0)) ((0 0 0) (1 2 0)) ((0 0 0) (1 1 0)) ((1 0 1) (3 0 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Wmd-TheWord (and (isa :NOUN WeaponOfMassDestruction))
 (frame FN_Weapon)
 (bindingTemplate
  (TheList (:GAP (2nd deviceUse) (DEN instrument-UsedAsWeapon))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wok-TheWord (and (isa :NOUN Wok-CookingPot))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wold-TheWord (and (isa :NOUN Moor))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_container_possessor)
    ((PPFn of) fe_container_possessor))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Wolf-TheWord (and (isa :NOUN Wolf))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Woman-TheWord (and (isa :NOUN AdultFemaleHuman))
 (frame FN_People)
 (bindingTemplate
  (TheList (:SUBJECT (AJP fe_descriptor) (NP fe_person))
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor) (Sing fe_descriptor)
    ((PPFn from) comesFrom-Generic) ((PPFn of) age comesFrom-Generic)
    (AJP age fe_descriptor fe_ethnicity comesFrom-Generic
     fe_persistent_characteristic)
    ((PPFn with) fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns
  (TheSet ((0 1 0)) ((1 4 4)) ((1 3 1)) ((1 2 0)) ((1 4 3)) ((1 4 2)) ((1 1 0))
   ((1 0 0)) ((0 0 0)) ((1 4 1)) ((1 4 0)) ((1 4 4) (1 5 0)) ((1 2 0) (1 4 4))
   ((1 3 0) (1 4 4)) ((1 4 4) (1 4 4) (1 5 0)))))

(FNNounSemtrans (TheList) Womb-TheWord (and (isa :NOUN Uterus)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "women" "^s") Swimwear-TheWord
 (and (isa :NOUN WomensSwimWear)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Won-TheWord (and (isa :NOUN Won-NorthKorea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Won-TheWord (and (isa :NOUN Won-SouthKorea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wonder-TheWord (and (isa :NOUN Wonder-Admiration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "circular" "saw") Blade-TheWord
 (and (isa :NOUN WoodCuttingCircularSawBlade)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wood") Lathe-TheWord (and (isa :NOUN WoodLathe))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wood") Screw-TheWord (and (isa :NOUN WoodScrew))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Woods-TheWord (and (isa :NOUN WoodedArea))
 (frame FN_Biological_area) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wood-TheWord (and (isa :NOUN Wood)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wood-TheWord (and (isa :NOUN Wood-GolfClub))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wooden" "baseball") Bat-TheWord
 (and (isa :NOUN BaseballBat-Wooden)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wooden") Bat-TheWord
 (and (isa :NOUN BaseballBat-Wooden)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wooden") Pencil-TheWord
 (and (isa :NOUN WoodenPencil)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wooden") Spoon-TheWord (and (isa :NOUN WoodenSpoon))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Woodland-TheWord (and (isa :NOUN WoodedArea))
 (frame FN_Biological_area)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP parts) ((PPFn of) fe_container_possessor)
    ((PPFn near) fe_relative_location) (N parts fe_relative_location)
    ((PPFn along) fe_relative_location) ((PPFn at) fe_relative_location)
    ((PPFn in) fe_relative_location))
   (:GAP (DEN eventLocale)) (:GEN (Poss fe_container_possessor))))
 (groupPatterns
  (TheSet ((0 6 0)) ((0 5 0)) ((0 4 0)) ((0 3 1)) ((2 0 0)) ((0 1 0)) ((0 3 0))
   ((0 0 0)) ((0 5 0) (0 6 0)) ((0 2 0) (0 3 0)) ((0 1 0) (0 3 0)))))

(FNNounSemtrans (TheList) Woodpecker-TheWord (and (isa :NOUN Woodpecker))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "woodturning") Tool-TheWord
 (and (isa :NOUN WoodturningTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Woodwind-TheWord (and (isa :NOUN WoodwindInstrument))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Woodwork-TheWord (and (isa :NOUN Woodwork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "woodworking") Chisel-TheWord
 (and (isa :NOUN WoodworkingChisel)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "woodworking") Tool-TheWord
 (and (isa :NOUN WoodworkingTool)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "woody") Plant-TheWord (and (isa :NOUN Plant-Woody))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wool-TheWord (and (isa :NOUN WoolCloth))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wool-TheWord (and (isa :NOUN WoolStuff))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "word") Game-TheWord (and (isa :NOUN WordGame))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "word") Processor-TheWord
 (and (isa :NOUN WordProcessingProgram)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Word-TheWord (and (isa :NOUN LexicalWord))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Word-TheWord
 (and (isa :NOUN Word-UnitOfComputerMemory)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Word-TheWord
 (and (isa :NOUN Thing) (relationInstanceExists denotes :NOUN Thing))
 (frame FN_Simple_name)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) objectActedOn) ((PPFn of) objectActedOn)
    (N performedBy))
   (:GAP (DEN fe_term) (DNI objectActedOn fe_term))
   (:APPOSITIVE (NP fe_term))))
 (groupPatterns (TheSet ((2 0 0)) ((0 1 0)) ((0 0 0) (0 2 0)))))

(FNNounSemtrans (TheList) Wording-TheWord (and (isa :NOUN Encoding))
 (frame FN_Encoding)
 (bindingTemplate
  (TheList (:SUBJECT (NP performedBy))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn for) genericPathway-Partial)
    ((PPFn in) genericPathway-Partial) ((PPFn of) infoTransferred)
    ((PPFn on) genericPathway-Partial infoTransferred))
   (:GEN (Poss performedBy))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 0)) ((1 3 0)) ((1 4 0)) ((1 2 0)) ((1 1 0)) ((1 0 0))
   ((1 0 0) (1 4 1)) ((1 0 0) (1 3 0)))))

(FNNounSemtrans (TheList) Workload-TheWord (and (isa :NOUN WorkloadStatus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "work" "of") Art-TheWord (and (isa :NOUN ArtObject))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "work") Station-TheWord
 (and (isa :NOUN Computer-WorkStation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Work-TheWord (and (isa :NOUN JobPosition))
 (frame FN_Being_employed)
 (bindingTemplate
  (TheList (:SUBJECT (NP employees))
   (:OBLIQUE-OBJECT ((PPFn for) employees) ((PPFn of) employees)
    ((PPFn with) employer) (VPbrst employer) (A fe_field) (N fe_field)
    ((PPFn at) employer) ((PPFn in) job) (AVP temporallyIntersects)
    (AJP fe_compensation employeeStatus employees fe_event_description
     temporallyIntersects))
   (:GAP (DNI employees employer) (INI employees employer fe_field)
    (DEN fe_task))
   (:NOUN (N employees)) (:GEN (Poss employees))))
 (groupPatterns
  (TheSet ((1 6 0)) ((1 5 0)) ((1 9 4)) ((1 1 0)) ((1 3 0)) ((4 0 0)) ((1 0 0))
   ((3 0 0)) ((1 9 2)) ((0 0 0) (1 7 0)) ((1 9 2) (1 9 3))
   ((0 0 0) (1 4 0) (1 9 0)) ((0 0 0) (1 2 0) (1 8 0) (1 9 1)))))

(FNNounSemtrans (TheList) Work-TheWord (and (isa :NOUN WorkQuantity))
 (frame FN_Dimension)
 (bindingTemplate
  (TheList (:GAP (DEN hasPhysicalQuantity) (INI quantityMeasured))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Work-TheWord (and (isa :NOUN Artifact-Generic))
 (frame FN_Labor_product)
 (bindingTemplate
  (TheList (:SUBJECT (NP outputsCreated))
   (:OBLIQUE-OBJECT (N doneBy) ((PPFn by) doneBy)
    ((PPFn of) doneBy fe_depictive fe_descriptor) ((PPFn on) fe_descriptor)
    ((PPFn in) fe_presentation) ((PPFn from) fe_presentation)
    (A fe_descriptor temporallyIntersects)
    (AJP fe_descriptor eventOccursAt temporallyIntersects))
   (:GAP (DNI doneBy fe_input) (INI doneBy fe_input) (DEN outputsCreated))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 6 1)) ((1 5 0)) ((3 0 0)) ((1 2 0)) ((1 1 0)) ((1 0 0)) ((1 2 2))
   ((1 7 0)) ((1 6 0)) ((1 2 1)) ((1 7 2) (3 0 0)) ((1 4 0) (3 0 0))
   ((0 0 0) (1 2 0)) ((1 6 0) (3 0 0)) ((1 2 0) (1 7 0)) ((0 0 0) (1 2 2))
   ((1 1 0) (1 4 0) (1 7 0)) ((1 4 0) (1 7 0) (1 7 1))
   ((1 3 0) (1 7 0) (3 0 0)) ((1 2 0) (1 3 0) (1 3 0)))))

(FNNounSemtrans (TheList) Work-TheWord (and (isa :NOUN WorkingEvent))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Work-TheWord (and (isa :NOUN WorkingProcess))
 (frame FN_Work)
 (bindingTemplate
  (TheList (:SUBJECT (N doneBy) (NP doneBy))
   (:OBLIQUE-OBJECT ((PPFn by) doneBy) (NP fe_domain) (VPto to-Generic)
    ((PPingFn of) to-Generic) ((PPingFn in) to-Generic)
    ((PPFn of) doneBy to-Generic)
    (AJP fe_degree fe_descriptor fe_event_description frequencyOfEvent
     fe_manner)
    ((PPFn on) to-Generic eventOccursAt topicOfIndividual)
    (VPing by-Underspecified topicOfIndividual)
    (N doneBy fe_domain to-Generic topicOfIndividual)
    (A fe_domain to-Generic temporallyIntersects)
    ((PPFn in) fe_domain eventOccursAt temporallyIntersects)
    (AVP temporallyIntersects))
   (:GAP (DNI doneBy to-Generic topicOfIndividual)
    (INI doneBy to-Generic topicOfIndividual))
   (:GEN (Poss doneBy))))
 (groupPatterns
  (TheSet ((1 9 3)) ((1 5 1)) ((1 6 0)) ((1 10 2)) ((1 10 1)) ((1 8 0))
   ((0 0 0)) ((1 9 0)) ((1 2 0)) ((1 9 2)) ((1 9 1)) ((1 11 0)) ((1 10 0))
   ((3 0 0)) ((1 5 0)) ((0 1 0)) ((1 6 0) (1 12 0)) ((1 6 0) (1 10 0))
   ((1 8 1) (3 0 0)) ((1 7 2) (3 0 0)) ((0 1 0) (1 7 2)) ((1 4 0) (3 0 0))
   ((1 7 0) (3 0 0)) ((1 9 2) (3 0 0)) ((0 1 0) (1 2 0)) ((1 6 3) (3 0 0))
   ((1 0 0) (1 10 0)) ((1 2 0) (1 10 0)) ((1 10 0) (3 0 0)) ((0 1 0) (1 6 1))
   ((1 6 1) (1 9 1)) ((1 6 1) (1 10 0)) ((1 6 0) (3 0 0))
   ((1 6 0) (1 7 1) (1 10 0)) ((0 1 0) (1 7 2) (1 11 2))
   ((0 1 0) (1 6 2) (1 7 1)) ((1 10 0) (1 11 1) (3 0 0))
   ((1 1 0) (1 6 4) (1 6 4)) ((0 1 0) (1 2 0) (1 10 0))
   ((1 2 0) (1 5 0) (1 6 1)) ((0 1 0) (1 3 0) (1 6 1)))))

(FNNounSemtrans (TheList "work") Unit-TheWord (and (isa :NOUN UnitOfEnergy))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Workbench-TheWord (and (isa :NOUN WorkBench))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Worker-TheWord (and (isa :NOUN HourlyWorker))
 (frame FN_Employing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor fe_field) (N fe_field) (VPing fe_task))
   (:GAP (INI employer) (DEN employees employer) (DNI employer fe_field))))
 (groupPatterns (TheSet ((0 2 0)) ((0 1 0)) ((0 0 1)) ((0 0 0)))))

(FNNounSemtrans (TheList) Worker-TheWord (and (isa :NOUN PersonWithOccupation))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "working") Group-TheWord
 (and (isa :NOUN WorkingGroup-Team)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Workplace-TheWord (and (isa :NOUN Workplace))
 (frame FN_Being_employed) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Workroom-TheWord (and (isa :NOUN Workroom))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Workshop-TheWord (and (isa :NOUN Workshop))
 (frame FN_Building_subparts) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Workstation-TheWord
 (and (isa :NOUN ComputerWorkstation)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "world") Organization-TheWord
 (and (isa :NOUN InternationalOrganization)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "world") Organization-TheWord
 (and (isa :NOUN InternationalOrganizationOfCountries)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "world") Peace-TheWord (and (isa :NOUN WorldPeace))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "world") Power-TheWord (and (isa :NOUN Superpower))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) World-TheWord (and (isa :NOUN GeopoliticalEntity))
 (frame FN_Political_locales)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (AJP fe_descriptor)) (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Worm-TheWord (and (isa :NOUN Worm))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Worry-TheWord (and (isa :NOUN Concern))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Worship-TheWord (and (isa :NOUN Ritual))
 (frame FN_Rite) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wound-TheWord (and (isa :NOUN Wound))
 (frame FN_Medical_conditions)
 (bindingTemplate (TheList (:GAP (INI actorPartsInvolved objectActedOn))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrangle-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling)
 (bindingTemplate (TheList (:GAP (DNI fe_arguers) (INI fe_issue))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrangling-TheWord
 (and (isa :NOUN HostileSocialAction)) (frame FN_Hostile_encounter)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn over) fe_issue) (AJP fe_manner) (N eventOccursAt))))
 (groupPatterns (TheSet ((0 0 0)) ((0 1 0) (0 2 0)))))

(FNNounSemtrans (TheList) Wrangling-TheWord (and (isa :NOUN DisputeEvent))
 (frame FN_Quarreling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrap-TheWord (and (isa :NOUN Wrap-Clothing))
 (frame FN_Clothing)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (N fe_descriptor mainConstituent)
    (AJP fe_descriptor clothingStyle))
   (:GAP (DEN itemWorn)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((2 0 0)) ((0 0 1)) ((0 0 0)) ((0 1 0)) ((0 0 1) (2 0 0))
   ((0 0 1) (0 1 0)) ((0 0 1) (0 1 0) (0 1 1)))))

(FNNounSemtrans (TheList) Wrapper-TheWord (and (isa :NOUN Wrapper))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wrapping") Paper-TheWord (and (isa :NOUN GiftWrap))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrath-TheWord (and (isa :NOUN Anger)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wreath-TheWord (and (isa :NOUN Wreath-Decoration))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wreath-TheWord (and (isa :NOUN ChristmasWreath))
 (frame FN_Plants) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wreckage-TheWord (and (isa :NOUN RuinedArtifact))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrecker-TheWord (and (isa :NOUN WreckerTruck))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wrecker") Truck-TheWord
 (and (isa :NOUN WreckerTruck)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrench-TheWord (and (isa :NOUN Wrench))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrestler-TheWord (and (isa :NOUN Wrestler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wrestling") Match-TheWord
 (and (isa :NOUN PlayingOf-WrestlingSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wrestling") Ring-TheWord
 (and (isa :NOUN WrestlingRing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrestling-TheWord
 (and (isa :NOUN WrestlingSportsEvent)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wrinkle" "removing") Device-TheWord
 (and (isa :NOUN WrinkleRemovingDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrist-TheWord (and (isa :NOUN Wrist)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "wrist") Watch-TheWord (and (isa :NOUN Wristwatch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wristwatch-TheWord (and (isa :NOUN Wristwatch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Writ-TheWord (and (isa :NOUN Writ))
 (frame FN_Documents)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn for) obligationsCreated))
   (:GAP (DEN fe_document) (INI fe_issuer))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Writer-TheWord (and (isa :NOUN Author))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Writer-TheWord (and (isa :NOUN Writer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "writing") Board-TheWord
 (and (isa :NOUN WritingBoard)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "writing") Implement-TheWord
 (and (isa :NOUN WritingImplement)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "writing" "pen-single") Tip-TheWord
 (and (isa :NOUN WritingPen-SingleTip)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Writing-TheWord (and (isa :NOUN TextMarking))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Writing-TheWord (and (isa :NOUN TextualMaterial))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Writing-TheWord (and (isa :NOUN Writing))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Writings-TheWord (and (isa :NOUN TextualPCW))
 (frame FN_Text)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) authorOfLiteraryWork-CW) (AJP fe_descriptor))
   (:GAP (DEN fe_text))))
 (groupPatterns (TheSet ((0 0 0) (0 1 0)))))

(FNNounSemtrans (TheList "written") Communication-TheWord
 (and (isa :NOUN Writing)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "written") Record-TheWord
 (and (isa :NOUN WrittenRecord)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wrongdoer-TheWord (and (isa :NOUN MorallyFallible))
 (frame FN_People_by_morality)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor) (A fe_field)
    ((PPFn in) fe_descriptor fe_field))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 2 1)) ((0 1 0)) ((0 2 0)) ((0 0 0)))))

(FNNounSemtrans (TheList "x") Axis-TheWord (and (isa :NOUN XAxis-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) X-TheWord (and (isa :NOUN XRating)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "x" "ray") Machine-TheWord
 (and (isa :NOUN XRayPhotographicDevice)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "x") Ray-TheWord (and (isa :NOUN XRay))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Xenon-TheWord (and (isa :NOUN Xenon)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Xylem-TheWord (and (isa :NOUN XylemNetwork))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Xylophone-TheWord (and (isa :NOUN Xylophone))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Xylophone-TheWord (and (isa :NOUN Xylophone))
 (frame FN_Noise_makers) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "y") Axis-TheWord (and (isa :NOUN YAxis-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yacht-TheWord (and (isa :NOUN Yacht))
 (frame FN_Vehicle) (bindingTemplate (TheList (:GAP (DEN transporter))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yam-TheWord (and (isa :NOUN Yam-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yam-TheWord (and (isa :NOUN (RootFn YamPlant)))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yam-TheWord (and (isa :NOUN YamPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yammer-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate (TheList (:OBLIQUE-OBJECT ((PPFn of) fe_component_sound))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Yap-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yard-TheWord (and (isa :NOUN Yard-UnitOfDistance))
 (frame FN_Measure_linear_extent)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn of) (InverseBinaryPredicateFn lengthOfObject))
    ((PPingFn of) (InverseBinaryPredicateFn lengthOfObject)))
   (:GAP (DEN fe_unit))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Yardstick-TheWord (and (isa :NOUN Yardstick))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yarmulkah-TheWord (and (isa :NOUN SomethingToWear))
 (frame FN_Accoutrements)
 (bindingTemplate (TheList (:GAP (DEN fe_accoutrement)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((1 0 0)))))

(FNNounSemtrans (TheList) Yarn-TheWord (and (isa :NOUN Yarn)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Year-TheWord (and (isa :NOUN CalendarYear))
 (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList (:SUBJECT (NP fe_unit)) (:OBJECT (Num fe_count))
   (:OBLIQUE-OBJECT (AVP fe_relative_time) (A fe_relative_time)
    ((PPFn after) fe_relative_time) ((PPFn to) fe_relative_time)
    (N fe_relative_time fe_salient_event) ((PPFn of) fe_salient_event)
    (NP fe_unit)
    (AJP fe_count fe_relative_time (InverseBinaryPredicateFn parts)))
   (:GAP (INI fe_relative_time) (DNI fe_relative_time)
    (DEN (InverseBinaryPredicateFn nameString) fe_unit)
    (2nd (InverseBinaryPredicateFn nameString) fe_unit
     (InverseBinaryPredicateFn parts)))
   (:NOUN (NP (InverseBinaryPredicateFn parts)))))
 (groupPatterns
  (TheSet ((4 0 0)) ((2 7 2)) ((2 5 0)) ((2 4 0)) ((2 2 0)) ((2 1 0)) ((2 7 0))
   ((2 0 0)) ((2 7 1)) ((0 0 0) (2 7 1)) ((2 3 0) (2 4 1)) ((2 7 1) (2 7 1))
   ((1 0 0) (2 6 0)) ((2 7 0) (2 7 1)))))

(FNNounSemtrans (TheList) Year-TheWord (and (isa :NOUN YearsDuration))
 (frame FN_Measure_duration)
 (bindingTemplate
  (TheList (:SUBJECT (Sfin fe_process))
   (:OBLIQUE-OBJECT (N fe_count) (Num fe_count) ((PPFn of) fe_process)
    (Sfin fe_process) (AJP fe_count fe_process) (NP fe_process)
    ((PPFn in) fe_process))
   (:GAP (INI fe_count fe_process) (DNI fe_count fe_process) (DEN fe_unit))
   (:GEN (Poss fe_process) (NP fe_process))))
 (groupPatterns
  (TheSet ((1 0 0)) ((1 4 0)) ((0 0 0)) ((1 2 0)) ((1 6 0)) ((1 1 0))
   ((1 1 0) (1 5 0)) ((1 1 0) (1 4 1)) ((1 3 0) (1 4 0)) ((1 4 0) (3 0 0))
   ((1 1 0) (1 2 0) (3 1 0)))))

(FNNounSemtrans (TheList) Yearning-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (VPto fe_event) (AJP fe_degree objectActedOn)
    ((PPFn for) fe_event fe_focal_participant))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 2 1) (2 0 0)) ((0 0 0) (1 2 1)) ((1 0 0) (2 0 0))
   ((1 1 1) (1 2 0)) ((0 0 0) (0 0 0) (1 2 1)) ((1 1 0) (1 2 1) (2 0 0))
   ((0 0 0) (1 1 0) (1 2 1)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Yell-TheWord (and (isa :NOUN Shouting))
 (frame FN_AudibleSound) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yelling-TheWord (and (isa :NOUN Shouting))
 (frame FN_AudibleSound) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "yellow") Pages-TheWord (and (isa :NOUN YellowPages))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "yellow") Sea-TheWord (and (isa :NOUN YellowSea))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yellow-TheWord (and (isa :NOUN YellowColor))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yellowcake-TheWord
 (and (isa :NOUN MineralOre)
      (relationInstanceExists constituents :NOUN Uranium))
 (frame FN_Substance)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N activeIngredientsOfType))
   (:GAP (DEN stuffUsed))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Yelp-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT ((PPFn of) fe_internal_cause) (AJP fe_manner)
    ((PPFn from) emitter))))
 (groupPatterns
  (TheSet ((0 0 0)) ((1 1 0)) ((1 0 0)) ((1 1 0) (1 2 0)) ((0 0 0) (1 1 0))
   ((0 0 0) (1 0 0)) ((1 0 0) (1 1 0)) ((0 0 0) (1 0 0) (1 1 0)))))

(FNNounSemtrans (TheList) Yen-TheWord (and (isa :NOUN DesiringThat))
 (frame FN_Desiring)
 (bindingTemplate
  (TheList (:SUBJECT (NP objectActedOn))
   (:OBLIQUE-OBJECT (VPto fe_event) ((PPFn for) fe_event fe_focal_participant)
    (AVP temporallyIntersects))
   (:GEN (Poss objectActedOn))))
 (groupPatterns
  (TheSet ((1 1 1) (2 0 0)) ((0 0 0) (1 1 1)) ((0 0 0) (1 0 0))
   ((0 0 0) (1 1 0)) ((0 0 0) (1 1 0) (1 2 0)))))

(FNNounSemtrans (TheList) Yen-TheWord (and (isa :NOUN Yen-Japan))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yesterday-TheWord
 (and (isa :NOUN Yesterday-Indexical)) (frame FN_Calendric_unit)
 (bindingTemplate
  (TheList
   (:GAP (DNI fe_relative_time) (DEN fe_unit)
    (INI (InverseBinaryPredicateFn parts)))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yiddish-TheWord (and (isa :NOUN YiddishLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yo-Yo-TheWord (and (isa :NOUN Yo-Yo)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yodel-TheWord (and (isa :NOUN AudibleSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn from) from-Generic) ((PPFn of) emitter))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Yoga-TheWord (and (isa :NOUN DoingYoga))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yogurt-TheWord (and (isa :NOUN Yogurt))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yokel-TheWord (and (isa :NOUN Hick)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yolk-TheWord (and (isa :NOUN EggYolk-Food))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "yorkshire") Terrier-TheWord
 (and (isa :NOUN Terrier-Yorkshire)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yoruba-TheWord (and (isa :NOUN YorubaLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) You-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) You-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) You-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        ObjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) You-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        SubjectPronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "young") Mammal-TheWord
 (and (isa :NOUN (JuvenileFn Mammal))) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Young-TheWord (and (isa :NOUN JuvenileAnimal))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Youngster-TheWord
 (and (isa :NOUN (JuvenileFn HomoSapiens))) (frame FN_People_by_age)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn in) fe_descriptor)
    (AJP fe_persistent_characteristic))
   (:GAP (DEN fe_person))))
 (groupPatterns (TheSet ((0 1 0)) ((0 0 0)))))

(FNNounSemtrans (TheList) Yours-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        PossessivePronoun-Post)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yours-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        PossessivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yourself-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yourself-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Singular-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yourselves-TheWord
 (and (isa :NOUN
       (PronounFn SecondPerson-NLAttr Plural-NLAttr Ungendered-NLAttr
        ReflexivePronoun)))
 (frame FN_Pronouns) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Youth-TheWord
 (and (isa :NOUN (JuvenileFn HomoSapiens))) (frame FN_People_by_age)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (NP age) ((PPFn in) comesFrom-Generic)
    ((PPFn from) comesFrom-Generic)
    (N fe_context_of_acquaintance comesFrom-Generic)
    ((PPFn of) comesFrom-Generic)
    (AJP age fe_context_of_acquaintance fe_descriptor fe_ethnicity
     comesFrom-Generic fe_persistent_characteristic))
   (:GAP (DEN age fe_person) (2nd fe_person)) (:GEN (Poss comesFrom-Generic))))
 (groupPatterns
  (TheSet ((0 5 5)) ((2 0 0)) ((0 4 0)) ((0 2 0)) ((0 3 1)) ((0 5 4)) ((0 5 3))
   ((0 5 2)) ((0 3 0)) ((0 5 1)) ((0 0 0)) ((0 5 0)) ((0 5 5) (0 5 5))
   ((0 2 0) (0 5 3)) ((0 1 0) (0 5 1) (0 5 3)))))

(FNNounSemtrans (TheList) Yowl-TheWord (and (isa :NOUN HowlingSound))
 (frame FN_Sounds)
 (bindingTemplate
  (TheList (:SUBJECT (NP emitter))
   (:OBLIQUE-OBJECT (AJP fe_manner) ((PPFn of) emitter))))
 (groupPatterns (TheSet ((1 1 0)) ((0 0 0) (1 0 0)))))

(FNNounSemtrans (TheList) Ytterbium-TheWord (and (isa :NOUN Ytterbium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yttrium-TheWord (and (isa :NOUN Yttrium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yuan-TheWord (and (isa :NOUN Yuan-China))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Yucca-TheWord (and (isa :NOUN Yucca)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "yugoslavian") Dinar-TheWord
 (and (isa :NOUN Dinar-Yugoslavia)) (frame FN_Misc) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "yule") Log-TheWord (and (isa :NOUN YuleLog))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "z") Axis-TheWord (and (isa :NOUN ZAxis-Generic))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zairese-TheWord (and (isa :NOUN ZairePerson))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zealot-TheWord (and (isa :NOUN Extremist))
 (frame FN_People_by_religion) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zebra-TheWord (and (isa :NOUN Zebra))
 (frame FN_Animals) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zen-TheWord (and (isa :NOUN ZenBuddhism))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "zener") Diode-TheWord (and (isa :NOUN ZenerDiode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zenith-TheWord (and (isa :NOUN Extreme))
 (frame FN_Extreme_point) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "zero" "dining" "room") Dwelling-TheWord
 (and (isa :NOUN ZeroDiningRoomDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zinc-TheWord (and (isa :NOUN Zinc)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "zip") Code-TheWord (and (isa :NOUN PostalCode))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList "zip") File-TheWord (and (isa :NOUN ZipFile))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zip-TheWord (and (isa :NOUN ZipperTheFastener))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList (:SUBJECT (NP (InverseBinaryPredicateFn outfitParts)))
   (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn outfitParts))
    (NP (InverseBinaryPredicateFn outfitParts))
    ((PPFn in) (InverseBinaryPredicateFn outfitParts))
    ((PPFn of) (InverseBinaryPredicateFn outfitParts))
    ((PPFn on) (InverseBinaryPredicateFn outfitParts)))
   (:GAP (DEN parts) (2nd wearer)) (:GEN (Poss wearer))))
 (groupPatterns
  (TheSet ((1 4 0)) ((1 2 0)) ((1 3 0)) ((1 1 0)) ((0 0 0) (3 0 0))
   ((1 0 0) (3 0 0)))))

(FNNounSemtrans (TheList) Zipper-TheWord (and (isa :NOUN ZipperTheFastener))
 (frame FN_Clothing_parts)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT (AJP fe_descriptor)
    (N (InverseBinaryPredicateFn outfitParts) mainConstituent))
   (:GAP (DEN parts)) (:GEN (Poss wearer))))
 (groupPatterns (TheSet ((0 1 1)) ((0 0 0)) ((0 1 0) (2 0 0)))))

(FNNounSemtrans (TheList) Zipper-TheWord (and (isa :NOUN ZipperTheFastener))
 (frame FN_Fastener) (bindingTemplate (TheList (:GAP (DEN deviceUsed))))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zirconium-TheWord (and (isa :NOUN Zirconium))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zit-TheWord
 (and (isa :NOUN Pustule-Object)
      (relationExistsInstance outputsCreated Acne :NOUN))
 (frame FN_Body_mark)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT ((PPFn on) fe_attachment))
   (:GAP (DEN markCreated) (2nd ownerOfProprietaryThing))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Zone-TheWord (and (isa :NOUN Place))
 (frame FN_Locale)
 (bindingTemplate
  (TheList
   (:OBLIQUE-OBJECT ((PPFn for) fe_descriptor)
    (NP fe_container_possessor fe_descriptor fe_formational_cause)
    (VPed parts fe_formational_cause) (A fe_descriptor fe_formational_cause)
    (Srel fe_formational_cause)
    ((PPFn of) parts fe_formational_cause
     (InverseBinaryPredicateFn nameString))
    (N fe_formational_cause (InverseBinaryPredicateFn nameString))
    (AJP fe_descriptor fe_formational_cause
     (InverseBinaryPredicateFn nameString) fe_relative_location)
    ((PPFn in) fe_container_possessor fe_relative_location)
    (AVP fe_relative_location))
   (:GAP (DEN eventLocale))))
 (groupPatterns
  (TheSet ((0 6 1)) ((0 4 0)) ((0 7 1)) ((0 3 1)) ((0 5 1)) ((0 6 0)) ((0 7 0))
   ((0 3 0)) ((0 2 0)) ((0 7 2) (0 8 1)) ((0 6 0) (0 9 0)) ((0 7 1) (0 8 1))
   ((0 1 1) (0 8 1)) ((0 7 0) (0 8 1)) ((0 5 2) (0 7 0)) ((0 7 0) (0 7 2))
   ((0 1 2) (0 7 0)) ((0 2 1) (0 7 0)) ((0 0 0) (0 7 0)) ((0 1 0) (0 6 0))
   ((0 1 1) (0 8 0)) ((0 5 0) (0 7 3)) ((0 0 0) (0 7 0) (0 8 0)))))

(FNNounSemtrans (TheList "zoned" "air" "conditioning") Dwelling-TheWord
 (and (isa :NOUN ZonedAirConditioningDwelling)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zoo-TheWord (and (isa :NOUN ZooGrounds))
 (frame FN_Locale_by_use)
 (bindingTemplate
  (TheList (:OBLIQUE-OBJECT (N (InverseBinaryPredicateFn nameString)))
   (:GAP (DEN eventLocale))))
 (groupPatterns (TheSet ((0 0 0)))))

(FNNounSemtrans (TheList) Zoologist-TheWord (and (isa :NOUN Zoologist))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zoology-TheWord (and (isa :NOUN Zoology))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zoonosis-TheWord
 (and (isa :NOUN Zoonosis-DiseaseType)) (frame FN_Misc)
 (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zucchini-TheWord (and (isa :NOUN Zucchini-Foodstuff))
 (frame FN_Food) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zucchini-TheWord (and (isa :NOUN ZucchiniPlant))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zulu-TheWord (and (isa :NOUN EthnicGroupOfZulus))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zulu-TheWord (and (isa :NOUN ZuluLanguage))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Zygoma-TheWord (and (isa :NOUN ZygomaticArch))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abandoner-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy DiscontinuingAnActivity :NOUN))
 (frame FN_Activity_stop) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abetter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy HelpingAnAgent :NOUN))
 (frame FN_Assistance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abhorrer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy (ExperiencingEmotionFn Abhorrence) :NOUN))
 (frame FN_Experiencer_focus) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abider-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy ConformingToASpecification :NOUN))
 (frame FN_Compliance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Absorber-TheWord
 (and (isa :NOUN PartiallyTangible)
      (relationExistsInstance doneBy AbsorptionEvent :NOUN))
 (frame FN_Soaking_up) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abstainer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Refraining :NOUN))
 (frame FN_Forgoing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abstracter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Stealing :NOUN))
 (frame FN_Theft) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abuser-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy HarmingAnAgent :NOUN))
 (frame FN_Abusing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Abutter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Configuration :NOUN))
 (frame FN_Locative_relation) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acceder-TheWord
 (and (isa :NOUN Person) (doneBy ?MakingAnAgreement1 :NOUN)
      (isa ?MakingAnAgreement1 MakingAnAgreement))
 (frame FN_Sign_agreement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accepter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Receiving :NOUN))
 (frame FN_Receiving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accomplisher-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy AchievingSomething :NOUN))
 (frame FN_Accomplishment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accorder-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Compatibility :NOUN))
 (frame FN_Compatibility) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accuser-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Accusing :NOUN))
 (frame FN_Judgment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Accuser-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy MakingACriminalCharge :NOUN))
 (frame FN_Notification_of_charges) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Achiever-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy AchievingSomething :NOUN))
 (frame FN_Accomplishment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acknowledger-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy Acknowledging-CommunicationAct
       :NOUN))
 (frame FN_Communication_response) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acquirer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AcquiringAnObject :NOUN))
 (frame FN_Getting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Acquitter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy VerdictOfTrial :NOUN))
 (frame FN_Verdict) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adapter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Adaptation :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adapter-TheWord
 (and (isa :NOUN Connector)
      (relationExistsInstance connectorInAttachment Attachment :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adder-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance doneBy DoingAddition :NOUN))
 (frame FN_Commutative_process) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adducer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy ElucidatingSomething :NOUN))
 (frame FN_Adducing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adherer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy AttachmentEvent :NOUN))
 (frame FN_Attaching) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adherent-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Adhering-Adopting :NOUN))
 (frame FN_Compliance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adjuster-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy
       (CollectionIntersection2Fn HandlingAnObject IntrinsicStateChangeEvent)
       :NOUN))
 (frame FN_Adjusting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Admirer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance feelsEmotion (PositiveAmountFn Admiration)
       :NOUN))
 (frame FN_Judgment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Admitter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy PermittingEntrance :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Admitter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy RevealingTrueInformation :NOUN))
 (frame FN_Reveal_secret) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Admonisher-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Chiding :NOUN))
 (frame FN_Judgment_direct_address) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adopter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Adopting-SelectingSomething :NOUN))
 (frame FN_Adopt_selection) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adorer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance feelsEmotion (PositiveAmountFn Adulation) :NOUN))
 (frame FN_Experiencer_focus) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Adorner-TheWord
 (and (isa :NOUN Person) (relationExistsInstance perormedBy Decorating :NOUN))
 (frame FN_Distributed_position) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Advancer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy LocomotionEvent :NOUN))
 (frame FN_Self_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affecter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy AffectingSomething :NOUN))
 (frame FN_Objective_influence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affirmer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy Affirming-Replying :NOUN))
 (frame FN_Affirm_or_deny) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Afflicter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AfflictingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Affronter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy (CausingFn ExperiencingEmotion) :NOUN))
 (frame FN_Cause_emotion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aider-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performer HelpingAnAgent :NOUN))
 (frame FN_Assistance) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aimer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AimingSomething :NOUN))
 (frame FN_Aiming) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Airer-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance doneBy AnnouncingPublicly :NOUN))
 (frame FN_Expressing_publicly) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Alleger-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Accusing :NOUN))
 (frame FN_Statement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allegorizer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AllegorizingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Allower-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy GrantingPermission :NOUN))
 (frame FN_Grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amasser-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Collecting :NOUN))
 (frame FN_Amassing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ambler-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy LocomotionEvent :NOUN))
 (frame FN_Self_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Ambusher-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy SurpriseAttack :NOUN))
 (frame FN_Attack) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amercer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AmercingSomeone :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Amuser-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AmusingSomeone :NOUN))
 (frame FN_Cause_to_experience) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Analyzer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AnalyzingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Angler-TheWord (and (isa :NOUN Angler))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Animator-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy AnimatingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Announcer-TheWord (and (isa :NOUN Announcer))
 (frame FN_Statement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Annoyer-TheWord
 (and (isa :NOUN Agent-Generic) (evokes (PositiveAmountFn Irritation) :NOUN))
 (frame FN_Experiencer_obj) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Anointer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy NominatingSomeone :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Answerer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Replying :NOUN))
 (frame FN_Communication_response) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Aper-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance performedBy ImitationOfIndividual :NOUN))
 (frame FN_Imitating) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apologizer-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance performedBy Apologizing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appealer-TheWord
 (and (isa :NOUN Person) (performedBy ?Requesting-CommunicationAct1 :NOUN)
      (isa ?Requesting-CommunicationAct1 Requesting-CommunicationAct))
 (frame FN_Appeal) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appearer-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance doneBy SomethingAppearingSomewhere :NOUN))
 (frame FN_Circumscribed_existence) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Applauder-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Applauding-Clapping :NOUN))
 (frame FN_Judgment) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Appointer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy AppointingSomeoneToAPosition :NOUN))
 (frame FN_Appointing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apprehender-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy ArrestingSomeone :NOUN))
 (frame FN_Arrest) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Apprehender-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Grasping :NOUN))
 (frame FN_Grasp) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Approacher-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance doneBy Approaching :NOUN))
 (frame FN_Arriving) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Approver-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy Approval-CommunicationAct :NOUN))
 (frame FN_Deny_or_grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Archer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Archery :NOUN))
 (frame FN_Body_movement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Forbidder-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance forbidder ForbiddingSomething :NOUN))
 (frame FN_Deny_or_grant_permission) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Meddler-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance doneBy Interfering :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Organizer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Organization-Administration-Management
       :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Packer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Packing :NOUN))
 (frame FN_Filling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Paddler-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy PaddlingABoat :NOUN))
 (frame FN_Operate_vehicle) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Peeper-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy (SurreptitiouslyFn Perceiving-Voluntary)
       :NOUN))
 (frame FN_Perception_active) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Permitter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance permitter GrantingPermission :NOUN))
 (frame FN_Permitting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Persuader-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Convincing-CommunicationAct :NOUN))
 (frame FN_Suasion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Poisoner-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Poisoning :NOUN))
 (frame FN_Cause_harm) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polisher-TheWord
 (and (isa :NOUN SomethingExisting)
      (relationExistsInstance doneBy PolishingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Pollster-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Survey :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Polluter-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance doneBy PollutionProcess :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Presider-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Presiding :NOUN))
 (frame FN_Leadership) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Procurer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy GainingUserRights :NOUN))
 (frame FN_Getting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Profferer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Offering-CommunicationAct :NOUN))
 (frame FN_Offering) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prohibiter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance enforcingAgent Prohibition :NOUN))
 (frame FN_Prohibiting_or_licensing) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Propeller-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Propelling :NOUN))
 (frame FN_Cause_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Proposer-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance proposingAgents Proposal :NOUN))
 (frame FN_Statement) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Provider-TheWord
 (and (isa :NOUN Agent-Generic)
      (relationExistsInstance performedBy
       SupportingSomething-TransferringPossession :NOUN))
 (frame FN_Supply) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Prowler-TheWord (and (isa :NOUN Burglar))
 (frame FN_Self_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Questioner-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy RequestingInformation :NOUN))
 (frame FN_Questioning) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Quitter-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Resigning :NOUN))
 (frame FN_Quitting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rater-TheWord
 (and (isa :NOUN Person) (relationExistsInstance evaluator Evaluating :NOUN))
 (frame FN_Assessing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Referrer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy MakingAReferral :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refiner-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Refining :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Refrainer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Refraining :NOUN))
 (frame FN_Forgoing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rememberer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy Remembering :NOUN))
 (frame FN_Remembering_information) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Rescuer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy RescuingSomeone :NOUN))
 (frame FN_Rescuing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Restorer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy RefreshingSomething :NOUN))
 (frame FN_Rejuvenation) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Retainer-TheWord (and (isa :NOUN TeethRetainer))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Retainer-TheWord (and (isa :NOUN PayingForServices))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Seeker-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy LookingForAThingOrTypeOfThing :NOUN))
 (frame FN_Seeking) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Shrieker-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Screaming :NOUN))
 (frame FN_Communication_noise) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sitter-TheWord (and (isa :NOUN Babysitter))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sitter-TheWord
 (and (isa :NOUN Animal)
      (relationExistsInstance seated SitingOnSomething :NOUN))
 (frame FN_Posture) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Skater-TheWord
 (and (isa :NOUN Person) (relationExistsInstance bodilyDoer Skating :NOUN))
 (frame FN_Operate_vehicle) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sleeper-TheWord
 (and (isa :NOUN Animal) (relationExistsInstance bodilyDoer Sleeping :NOUN))
 (frame FN_Sleep) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Snorer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance bodilyDoer Snoring :NOUN))
 (frame FN_Make_noise) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solderer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Soldering :NOUN))
 (frame FN_Attaching) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Solver-TheWord
 (and (isa :NOUN IntelligentAgent)
      (relationExistsInstance performedBy SolvingAProblem :NOUN))
 (frame FN_Resolve_problem) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Speller-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Spelling :NOUN))
 (frame FN_Spelling_and_pronouncing) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stalker-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Stalking-CriminalAct :NOUN))
 (frame FN_Cotheme) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Stuffer-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy PuttingSomethingIntoSomething :NOUN))
 (frame FN_Filling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Submitter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy SubmittingSomething :NOUN))
 (frame FN_Submitting_documents) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Sufferer-TheWord
 (and (isa :NOUN IntellignetAgent)
      (relationExistsInstance feelsEmotion Suffering :NOUN))
 (frame FN_Catastrophe) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Swallower-TheWord
 (and (isa :NOUN Animal) (relationExistsInstance bodilyDoer Swallowing :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Talker-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Talking :NOUN))
 (frame FN_Chatting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Taster-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance bodilyDoer TastePerception :NOUN))
 (frame FN_Tasting) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Thrower-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance bodilyDoer ThrowingAnObject :NOUN))
 (frame FN_Cause_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tiler-TheWord
 (and (isa :NOUN Person) (performedBy ?ArrangingObjects1 :NOUN)
      (isa ?ArrangingObjects1 ArrangingObjects))
 (frame FN_Filling) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tiller-TheWord (and (isa :NOUN Tiller))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tormenter-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy
       (CausingFn (ExperiencingEmotionFn Distress)) :NOUN))
 (frame FN_Cause_to_experience) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Torturer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Torture :NOUN))
 (frame FN_Cause_harm) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transcriber-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy TranscriptionEvent :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Tracker-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance performedBy TrackingAnObject :NOUN))
 (frame FN_Cotheme) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trainer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance performedBy Training :NOUN))
 (frame FN_Education_teaching) (bindingTemplate (TheList))
 (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trampler-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy TramplingSomething :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Transporter-TheWord
 (and (isa :NOUN SolidTangibleThing)
      (relationExistsInstance transporter TransportationEvent :NOUN))
 (frame FN_Bringing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trapper-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Trapping :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trucker-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance driverActor (TransportViaFn Truck) :NOUN))
 (frame FN_Bringing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Trucker-TheWord (and (isa :NOUN TruckDriver))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Walker-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Walking-Generic :NOUN))
 (frame FN_Self_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Waltzer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Waltz :NOUN))
 (frame FN_Self_motion) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weaver-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Weaving :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Weeder-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Weeding :NOUN))
 (frame FN_Removing) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whiner-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Complaining :NOUN))
 (frame FN_Complaining) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whisperer-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Whispering :NOUN))
 (frame FN_Make_noise) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Whistler-TheWord
 (and (isa :NOUN Person) (relationExistsInstance doneBy Whistling-Human :NOUN))
 (frame FN_Make_noise) (bindingTemplate (TheList)) (groupPatterns (TheSet)))

(FNNounSemtrans (TheList) Wisher-TheWord
 (and (isa :NOUN Person)
      (relationExistsInstance doneBy Wishing-GreetingSomeone :NOUN))
 (frame FN_Misc) (bindingTemplate (TheList)) (groupPatterns (TheSet)))
