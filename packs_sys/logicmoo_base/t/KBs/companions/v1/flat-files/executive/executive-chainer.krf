;;;; -*-  Mode: LISP; Syntax: Common-Lisp; Base: 10                          -*-
;;;; ---------------------------------------------------------------------------
;;;; File name: executive-chainer.lsp
;;;;    System: Companions
;;;;   Version: 1.0
;;;;    Author: Tom Hinrichs
;;;;   Created: November 1, 2005 16:18:55
;;;;   Purpose: Chainer definition for Companions Executive
;;;;  Modified: Friday, June 27, 2008 at 10:00:48 by hinrichs
;;;; ---------------------------------------------------------------------------

(in-microtheory ExecutiveMt)

;;; If we've used more than 90% of our available heap, then we have a critical 
;;; memory shortage:
(<== (criticalMemoryShortage ?agent)
  (currentHeapSpace ?agent ?used ?avail)
  (evaluate False (LessThanByFn ?used ?avail 10)))


(<== (interactiveDomain ?domain)
  (defaultAgentConfiguration ?domain ?config)
  ;(elementOf interaction-manager ?config)  ; <- requires config to be a Set
  (termFormulas ?config interaction-manager))  ; <- faster than eval MemberFn?




;;; Health monitoring


;;; Compute a metric for health of an agent based on the
;;; ratio of memory allocated to available, etc
;;; If we've been stuck in the same state (other than :idle) for > 20 minutes,
;;; then we're probably stuck.
;;; If we've allocated more than 50% of available memory in < 5 minutes of uptime,
;;; that's probably bad.
;;; All of these metrics need to be compared to historical averages
(<== (summarizeHealth ?agent ?health-tuple ?healthPct ?stuck)
  (unifies (TheList ?used ?avail ?nodes ?clauses ?num-smes ?uptime ?state ?how-long)
           ?health-tuple)  ; destructure
  ;;; What to do now?
  (false))

(<== (agentUptime ?agent ?uptime)
     (localAgent ?agent)
     (currentUptime ?agent ?uptime))
     
(<== (agentUptime ?agent ?uptime)
     (localAgent ?local-agent)
     (different ?agent ?local-agent)
     (holdsOnRemoteAgent ?agent (currentUptime ?agent ?uptime)))

;;;; ---------------------------------------------------------------------------
;;;; End of Code