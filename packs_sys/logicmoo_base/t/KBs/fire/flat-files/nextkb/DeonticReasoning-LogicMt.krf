
 (in-microtheory DeonticReasoning-LogicMt)
 (isa oughtToBe Gen-Dilemma)
 (isa oughtToBe DeonticAndRelatedModalPredicate)
 (isa permittedToBe ClosedUnderConsequences-RC)
 (isa oughtToBe ModalScheme-4-Inverse)
 (isa permittedToBe Gen-Conj-Elimination)
 (isa permittedToBe Gen-Univ-Exist-DistributingOver-Cond)
 (isa permittedToBe Gen-DoubleNegation)
 (isa permittedToBe Mod-Univ-DistributingOver-Conj)
 (isa expected-ToBe Gen-Mod-HypotheticalSyllogism)
 (isa oughtToBe ModalScheme-K)
 (isa oughtToBe ExtensionOf-C-Regular)
 (isa oughtToBe Gen-Univ-Exist-DistributingOver-Cond)
 (isa permittedToBe Mod-DistributingOver-FactoringOutFrom-Disj)
 (isa oughtToBe Gen-Univ-DistributingOver-Cond)
 (isa forbiddenToBe DeonticAndRelatedModalPredicate)
 (isa permittedToBe Gen-Disj-Introduction)
 (isa permittedToBe Gen-DeMorgan)
 (isa forbiddenToBe CommonUnaryModalOperator)
 (isa oughtToBe ExtensionOf-D-Normal)
 (isa permittedToBe Gen-Univ-Elimination)
 (isa oughtToBe Mod-Dilemma)
 (isa oughtToBe Mod-FactoringOutFrom-Conj-Dual)
 (isa forbiddenToBe Gen-DoubleNegation)
 (isa oughtToBe Gen-Commutativity-Disj)
 (isa oughtToBe Gen-Exist-Introduction)
 (isa oughtToBe Mod-DistributingOver-Conj)
 (isa oughtToBe Mod-Univ-DistributingOver-Cond-Dual)
 (isa permittedToBe Gen-Exist-DistributingOver-Disj)
 (isa permittedToBe Gen-Exportation)
 (isa permittedToBe Gen-Conj-Introduction)
 (isa oughtToBe Gen-Contraposition)
 (isa oughtToBe Gen-Equality)
 (isa oughtToBe ModalScheme-K-DualContrap)
 (isa permittedToBe Gen-ConditionalExchange)
 (isa permittedToBe DeonticAndRelatedModalPredicate)
 (isa oughtToBe Mod-Univ-FactoringOutFrom-Conj)
 (isa oughtToBe Gen-Truth-Constant)
 (isa permittedToBe Gen-Commutativity-Conj)
 (comment forbiddenToBe
 "#$forbiddenToBe is a #$ModalOperator in Cyc.  For each
#$ELSentence-Assertible PROP, (#$forbiddenToBe PROP) means that it is forbidden
that PROP.  The notions most closely related to #$forbiddenToBe include
#$oughtToBe and #$permittedToBe, where (#$oughtToBe PROP) is equivalent 
to (#$forbiddenToBe (#$not PROP)), and (#$permittedToBe PROP) is
equivalent to (#$not (#$forbiddenToBe PROP)).  Note that
#$forbiddenToBe is not the same as #$forbiddenToDo.")
 (isa oughtToBe Gen-Mod-BeckersRuleGeneralized)
 (isa oughtToBe Mod-Univ-Exist-DistributingOver-Cond)
 (isa oughtToBe Mod-Univ-DistributingOver-Conj)
 (isa permittedToBe Gen-Equality)
 (isa oughtToBe Gen-ModalScheme-T)
 (isa hasAlwaysBeen Gen-Mod-HypotheticalSyllogism)
 (isa oughtToBe Mod-Univ-DistributingOver-FactoringOutFrom-Conj)
 (isa oughtToBe Gen-Disj-Introduction)
 (isa permittedToBe Gen-Univ-DistributingOver-Conj)
 (isa oughtToBe Gen-HypotheticalSyllogism)
 (isa permittedToBe Gen-EqualityReplacement)
 (isa permittedToBe CommonUnaryModalOperator)
 (isa permittedToBe Gen-Contraposition)
 (isa oughtToBe Gen-ConditionalExchange)
 (isa oughtToBe Mod-FactoringOutFrom-Disj)
 (isa oughtToBe Gen-Univ-DistributingOver-Conj)
 (comment permittedToBe
 "#$permittedToBe is a #$ModalOperator in Cyc.  For each
#$CycLSentence-Assertible PROP, (#$permittedToBe PROP) means that it is
permitted that PROP.  #$permittedToBe has a #$dualOperator --- 
#$oughtToBe (i.e., (#$oughtToBe PROP) is equivalent to 
(#$not (#$permittedToBe (#$not PROP))) for every PROP), and has
another closely related notion #$forbiddenToBe 
(where (#$forbiddenToBe PROP) is equivalent to 
       (#$not (#$permittedToBe PROP)) for every PROP).  Note that
#$permittedToBe is not the same as #$permittedToDo.")
 (isa oughtToBe Mod-Univ-DistributingOver-Cond)
 (isa oughtToBe ClosedUnderConsequences-RC)
 (isa oughtToBe ClosedUnderReplacementOfGen-Eq)
 (isa oughtToBe ExtensionOf-K4-Normal)
 (isa oughtToBe Gen-Conj-Elimination)
 (isa permittedToBe Gen-Univ-FactoringOutFrom-Conj)
 (isa permittedToBe Gen-Exist-FactoringOutFrom-Disj-1)
 (isa oughtToBe Mod-DisjunctiveSyllogism)
 (isa permittedToBe ClosedUnderGeneralizations-Classical)
 (isa permittedToBe Gen-Exist-Introduction)
 (isa permittedToBe Gen-Dilemma)
 (isa permittedToBe Mod-Exist-DistributingOver-FactoringOutFrom-Disj)
 (isa oughtToBe Gen-DeMorgan)
 (isa oughtToBe ClosedUnderGeneralizations-Classical)
 (isa oughtToBe Gen-Univ-FactoringOutFrom-Conj)
 (isa oughtToBe Mod-HypotheticalSyllogism)
 (isa oughtToBe Mod-DistributingOver-FactoringOutFrom-Conj)
 (isa permittedToBe Mod-DistributingOver-Disj)
 (isa oughtToBe Gen-Exportation)
 (isa oughtToBe ModalScheme-4)
 (isa permittedToBe Mod-Exist-DistributingOver-Disj)
 (isa oughtToBe ModalScheme-K-Dual)
 (isa permittedToBe Gen-Commutativity-Disj)
 (isa oughtToBe ExtensionOf-K-Normal)
 (isa oughtToBe Gen-Exist-DistributingOver-Disj)
 (isa permittedToBe ModalScheme-4-Inverse)
 (isa oughtToBe ModalScheme-D)
 (isa permittedToBe Gen-Exist-FactoringOutFrom-Disj)
 (isa oughtToBe Mod-FactoringOutFrom-Conj)
 (isa oughtToBe Mod-Univ-Elimination)
 (isa oughtToBe Mod-DisjunctiveSyllogism-Dual)
 (isa permittedToBe Gen-Truth-Constant)
 (isa oughtToBe ClosedUnderConsequences-StrongVersion)
 (isa permittedToBe Mod-Univ-Elimination)
 (isa permittedToBe Mod-Exist-DistributingOver-Conj)
 (isa permittedToBe Gen-Univ-DistributingOver-Conj-1)
 (isa permittedToBe ModalScheme-4)
 (isa permittedToBe Gen-Exist-DistributingOver-Conj)
 (isa oughtToBe Gen-Commutativity-Conj)
 (isa permittedToBe ClosedUnderGeneralizations-RN)
 (isa oughtToBe Gen-DoubleNegation)
 (isa oughtToBe Gen-Univ-DistributingOver-Conj-1)
 (isa oughtToBe Gen-ModalScheme-K)
 (isa oughtToBe Gen-EqualityReplacement)
 (isa permittedToBe Mod-DistributingOver-Conj)
 (isa permittedToBe Mod-FactoringOutFrom-Disj)
 (isa oughtToBe Gen-Exist-DistributingOver-Conj)
 (isa oughtToBe Gen-Exist-FactoringOutFrom-Disj-1)
 (isa oughtToBe ClosedUnderGeneralizations-RN)
 (isa permittedToBe ClosedUnderEquivalents-RE)
 (isa permittedToBe Gen-HypotheticalSyllogism)
 (isa oughtToBe Mod-Exist-Introduction)
 (isa oughtToBe Mod-Exist-FactoringOutFrom-Disj)
 (isa forbiddenToBe Gen-Commutativity-Disj)
 (isa permittedToBe Mod-Exist-Introduction)
 (isa forbiddenToBe Gen-Commutativity-Conj)
 (isa permittedToBe Gen-Univ-DistributingOver-Cond)
 (isa oughtToBe Gen-Conj-Introduction)
 (isa oughtToBe Gen-Mod-HypotheticalSyllogism)
 (isa oughtToBe Mod-Exist-DistributingOver-Conj)
 (isa oughtToBe Gen-Univ-Elimination)
 (isa permittedToBe Mod-Exist-FactoringOutFrom-Disj)
 (isa oughtToBe ClosedUnderBeckersRule)
 (isa oughtToBe ClosedUnderEquivalents-RE)
 (comment oughtToBe "#$oughtToBe is a #$ModalOperator in Cyc.  For each
#$CycLSentence-Assertible PROP, (#$oughtToBe PROP) means that it ought to be the
case that PROP.  #$oughtToBe has a #$dualOperator --- 
#$permittedToBe (i.e., (#$permittedToBe PROP) is equivalent to 
(#$not (#$oughtToBe (#$not PROP))) for every PROP), and has another 
closely related operator #$forbiddenToBe (where (#$forbiddenToBe PROP) 
is equivalent to (#$oughtToBe (#$not PROP)) for every PROP).  Note 
that #$oughtToBe is not the same as #$oughtToDo.")
 (isa oughtToBe Gen-Exist-FactoringOutFrom-Disj)
 (isa oughtToBe Mod-Univ-Exist-DistributingOver-Cond-Dual)
 (isa oughtToBe CommonUnaryModalOperator)