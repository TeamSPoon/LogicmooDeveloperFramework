(in-microtheory ParaphraseVocabularyMt)

(isa BestSetParaphraseWithSeparatorAndCoefficientsFn-Constrained TermMacroFunction)
(isa ParaphraseBenchmarkGAFList (ListOfTypeFn CycLGAFAssertion))
(isa BestListParaphraseWithSeparatorAndCoefficientsFn-Constrained TermMacroFunction)
(isa genTemplate-Constrained NLTemplateGenerationPredicate)
(isa TermParaphraseFn-CityWithCountryAbbreviation TermMacroFunction)
(isa NPIsXP-NLSentenceFn TermMacroFunction)
(isa TermParaphraseFn-PP TermMacroFunction)
(isa NLConjunctionFn-But NLGenerationFunction)
(isa ParaphraseBenchmarkGAFList ListWithoutRepetition)
(isa NthPhraseFn TermMacroFunction)
(isa BestNLWordFormOfLexemeFn-Constrained TermMacroFunction)
(isa ExplicitIfCollection-NLPhraseFn TermMacroFunction)
(isa genTemplate-QuerySentence NLTemplateGenerationPredicate)
(isa TermParaphraseFn-CityWithCountryName TermMacroFunction)
(isa NLConjunctionFn VariableArityFunction)
(isa unitOfMeasurePrefixString NLGenerationPredicate)
(isa TermParaphraseFn-TemporalLocation-Day TermMacroFunction)
(isa paraphraseCoercionSometimesAllowedFrom NLGenerationPredicate)
(isa detailedIsaParaphrase NLTemplateGenerationPredicate)
(isa generateWithFormWhenArgInReln NonAbduciblePredicate)
(isa ConditionalPhraseFn VariableArityFunction)
(isa XActsAsAYInZ-NLSentenceFn TermMacroFunction)
(isa TermParaphraseFn-NP TermMacroFunction)
(isa BestPluralOfLexemeFn TermMacroFunction)
(isa TermParaphraseFn-NP-QuaType TermMacroFunction)
(isa TermParaphraseFn-CountyWithStateOrProvinceName TermMacroFunction)
(isa genCodeSupport NLGenerationPredicate)
(isa BestListParaphraseWithSeparatorFn-Constrained TermMacroFunction)
(isa PluralParaphraseFn-PP TermMacroFunction)
(isa TermParaphraseFn-PhysicalLocation TermMacroFunction)
(isa genTemplate NLTemplateGenerationPredicate)
(isa BasicTransitiveSentenceFn TermMacroFunction)
(isa BasicTransitive-PassiveSentenceFn TermMacroFunction)
(isa BestEvaluatedIfEvaluatablePhraseFn-Constrained TermMacroFunction)
(isa phraseTemplateArg NLPredicate)
(isa predicateArgIsaSummary NLGenerationPredicate)
(isa NLDisjunctionFn NLGenerationFunction)
(isa TermParaphraseFn-CityWithStateOrProvinceName TermMacroFunction)
(isa TermParaphraseFn-PP-Constrained TermMacroFunction)
(isa NLConjunctionFn NLGenerationFunction)
(isa defaultGenerationConstraint NLGenerationPredicate)
(isa PluralParaphraseFn TermMacroFunction)
(isa sententialPhraseForVerbWithFrame-Generic NLTemplateGenerationPredicate)
(isa TermParaphraseFn-TemporalLocation TermMacroFunction)
(isa TermParaphraseFn-TemporalLocation-Date TermMacroFunction)
(isa LatitudeOrLongitudeParaphraseFn TermMacroFunction)
(isa BestCoefficientItemPhraseFn-Constrained TermMacroFunction)
(isa TermParaphraseFn-CityWithStateOrProvinceAbbreviation TermMacroFunction)
(isa TermParaphraseFn-Constrained TermMacroFunction)
(isa generatesAsFirstOrder NLPredicate)
(isa TermParaphraseFn-CountyWithStateOrProvinceAbbreviation TermMacroFunction)
(isa generateArgOfRelnWithForm NonAbduciblePredicate)
(isa BestHeadVerbForInitialSubjectFn TermMacroFunction)
(isa XHasYAsAZ-NLSentenceFn TermMacroFunction)
(arg2QuotedIsa genTemplate-Constrained CycLSentence-Askable)
(transitiveViaArg paraphraseCoercionSometimesAllowedFrom genlPreds 1)
(transitiveViaArgInverse paraphraseCoercionPreservesMeaning genlPreds 2)
(argQuotedIsa BestBindingsPhraseFn 1 CycLSentence-Askable)
(transitiveViaArg paraphraseCoercionAlwaysAllowedFrom genlPreds 1)
(argQuotedIsa ConditionalPhraseFn 1 CycLSentence-Askable)
(transitiveViaArgInverse paraphraseCoercionChangesMeaning genlPreds 2)
(argAndRestIsa ConditionalPhraseFn 2 SententialConstituent)
(arityMin NLConjunctionFn 1)
(quotedIsa ParaphraseBenchmarkGAFList NLTerm)
(arityMin ConditionalPhraseFn 2)
(transitiveViaArg paraphraseCoercionPreservesMeaning genlPreds 1)
(argQuotedIsa genTemplate-Constrained 2 CycLSentence-Askable)
(transitiveViaArgInverse paraphraseCoercionSometimesAllowedFrom genlPreds 2)
(arg1QuotedIsa BestBindingsPhraseFn CycLSentence-Askable)
(transitiveViaArg paraphraseCoercionChangesMeaning genlPreds 1)
(arityMax ConditionalPhraseFn 3)
(arg1QuotedIsa ConditionalPhraseFn CycLSentence-Askable)
(transitiveViaArgInverse paraphraseCoercionAlwaysAllowedFrom genlPreds 2)
(comment BestPluralOfLexemeFn "(#$BestPluralOfLexemeFn WORD) denotes the (contextually dependent) #$NLWordForm of WORD, constrained to #$plural-Generic. For example, (#$BestPluralOfLexemeFn #$Tree-TheWord) typically generates as 'trees'.")
(comment TermParaphraseFn-NP "(#$TermParaphraseFn-NP OBJ) denotes the (contextually dependent) natural-language paraphrase for OBJ as a noun phrase.")
(comment NthPhraseAgrFn "(#$NthPhraseAgrFn N) denotes the #$TermPhrasesConstraint agreeing with (#$NthPhraseFn N).")
(comment BestBindingsPhraseFn "(#$BestBindingsPhraseFn QUERY-TEMPLATE PHRASE)
denotes PHRASE with any EL variables replaced with bindings found by asking the formula derived by applying QUERY-TEMPLATE to the formula being paraphrased. If no bindings are found, whatever #$genTemplate this is in fails, and other means are tried.")
(comment TermParaphraseFn-TemporalLocation-Date "This was factored out of the expansion for #$TermParaphraseFn-TemporalLocation, which became too unwieldy.")
(comment paraphraseCoercionChangesMeaning "(#$paraphraseCoercionChangesMeaning TARGET-PRED SOURCE-PRED) means that coercing a TARGET-PRED form from a SOURCE-PRED form is possible, but changes the meaning. An example is coercing a #$singular form from a #$massNumber form, which implies an object-like thing rather than a stuff-like thing.")
(comment NLConjunctionFn-But "(#$NLConjunctionFn-But PHRASE1 PHRASE2) denotes
 the natural-language contrastive conjunction (realized with \"but\" in English) of PHRASE1 and PHRASE2.")
(comment NPIsXP-NLSentenceFn "(#$NPIsXP-NLSentenceFn NP COMP) denotes the (contextually dependent) best #$NLSentence with NP and COMP as the subject and complement of the copula, respectively.  NP will be phrased as a #$NounPhrase.")
(comment TermParaphraseFn-CityWithCountryName "(#$TermParaphraseFn-CityWithCountryName CITY) denotes the phrase consisting of the best phrase for CITY followed by the best phrase for the country CITY is in. Example: (#$TermParaphraseFn-CityWithCountryName #$CityOfTorontoOntario) will return \"Toronto, Canada\"")
(comment TermParaphraseFn-TemporalLocation "(#$TermParaphraseFn-TemporalLocation DATE) denotes a vbar-modifying phrase that can be used
to paraphrase DATE as a date when some event happened or will happen. In English, this will typically
come out as 'on <some day>', 'at <some time>', 'in <some month, year, etc.>', 'before/after <some date>', 'from <some date> to <other date>, or with an indexical
such as 'today'.")
(comment BestNumberedListParaphraseFn-Constrained "(#$BestNumberedListParaphraseFn-Constrained CONSTRAINT LIST LIST-TYPE) denotes the (contextually dependent) best phrase in which the elements of LIST are paraphrased with CONSTRAINT, numbered according to the numbering scheme associated with LIST-TYPE.")
(comment BestNLWordFormOfLexemeFn-Constrained "(#$BestNLWordFormOfLexemeFn-Constrained CONSTRAINT WORD) denotes the (contextually dependent) #$NLWordForm of WORD with grammatical constraint CONSTRAINT.")
(comment TermParaphraseFn-TemporalLocation-Day "This was factored out of the expansion for #$TermParaphraseFn-TemporalLocation-Date.")
(comment ExplicitIfCollection-NLPhraseFn "(#$ExplicitIfCollection-NLPhraseFn TERM) denotes a paraphrase of TERM, explicitly labelled a collection if it is one. This is intended to make it clear in a paraphrase that something is being said about a collection rather than about its instances.")
(comment unitOfMeasurePrefixString "(#$unitOfMeasurePrefixString UNIT-PREFIX STRING) means that STRING is the NL prefix string used to form the NL string that denotes units of measure created with UNIT-PREFIX. For example, (#$unitOfMeasurePrefixString #$Milli \"milli\").")
(comment paraphraseCoercionPreservesMeaning "(#$paraphraseCoercionPreservesMeaning TARGET-PRED SOURCE-PRED) means that coercing a TARGET-PRED form from a SOURCE-PRED form is possible, and does not change the meaning. An example is coercing a #$gerund form from a #$presentParticiple form.")
(comment genTemplate-QuerySentence "(#$genTemplate-QuerySentence SENTENCE RECIPE) means that RECIPE specifies a way to generate a natural-language question for CycL sentences that match SENTENCE. #$SubLKeywords that appear in both SENTENCE and RECIPE are used to identify which parts of RECIPE are paraphrases for which terms in SENTENCE.")
(comment detailedIsaParaphrase "(#$detailedIsaParaphrase COL RECIPE) means that RECIPE is a good way to paraphrase a CycL sentence whose arg0 is #$isa and whose arg2 is COL -- (#$isa X COL). Use #$detailedIsaParaphrase for #$isa paraphrases that are not of the standard \"X is a Y\" format, for example when a more comprehensive explanation of collection is needed for the general
public, or when predicating an adjective of X is more natural than an indefinite Nbar. Note that (#$detailedIsaParaphrase COL PHRASE)
is equivalent to (#$genTemplate-Constrained #$isa (#$equals :ARG2 COL)
PHRASE).")
(comment NthPhraseFn "(#$NthPhraseFn N) denotes the Nth in a
(contextually specified) linear sequence of phrases.")
(comment BestListParaphraseWithSeparatorFn-Constrained "(#$BestListParaphraseWithSeparatorFn-Constrained CONSTRAINT LIST SEPARATOR) denotes the (contextually dependent) best phrase in which the elements of LIST are paraphrased with CONSTRAINT, separated by SEPARATOR.")
(comment NLConjunctionFn "(#$NLConjunctionFn . PHRASES) denotes

 the natural-language conjunction (realized with \"and\" in English) of PHRASES.")
(comment defaultAgreementPredsForInstanceList "(#$defaultAgreementPredsForInstanceList SET-OR-COLLECTION LIST) means that when generating a list composed exclusively of elements in SET-OR-COLLECTION, as for a drop-down menu, the paraphrase system should by default try to generate strings with the agreement properties specified by an element in LIST, preferring earlier ones over later ones.")
(comment XHasYAsAZ-NLSentenceFn "(#$XHasYAsAZ-NLSentenceFn NP1 NP2 NBAR) denotes the (contextually dependent) #$NLSentence stating that (the denot of) NP1 has (the denot of) NP2 as a (thing denoted by) NBAR.")
(comment TermParaphraseFn-CityWithCountryAbbreviation "(#$TermParaphraseFn-CityWithCountryAbbreviation  CITY) denotes the phrase consisting of the best phrase for CITY followed by the best abbreviation for the country CITY is in. Example: (#$TermParaphraseFn-CityWithCountryAbbreviation #$CityOfTorontoOntario) will return \"Toronto, CA\"")
(comment genTemplate "(#$genTemplate RELN PHRASE) means that PHRASE is one way to paraphrase a CycL formula whose arg0 is RELN. PHRASE will typically be an indexical, non-atomic phrase-denoting expression stated in terms of generic argument keywords such as :ARG1 and :ARG2. The generic argument keywords will be replaced prior to paraphrase with the corresponding arguments in the formula to be paraphrased.")
(comment BestHeadVerbForInitialSubjectFn "(#$BestHeadVerbForInitialSubjectFn WU) denotes the (contextually depended) best verb form for WU that agrees with the first daughter of the phrase of which the verb is the head daughter. Note that this assumes a flat grammatical structure in which verbs and their subjects are sisters.")
(comment TermParaphraseFn-PP-Constrained "(#$TermParaphraseFn-PP-Constrained P-THEWORD CONSTRAINT OBJ) denotes the (contextually dependent) natural-language paraphrase of a #$PrepositionalPhrase, headed by P-THEWORD, whose sole other constituent is the complement OBJ, which generates as (#$TermParaphraseFn-Constrained CONSTRAINT OBJ). For example, (#$TermParaphraseFn-PP-Constrained #$Of-TheWord #$nonSingular-Generic #$Dog) typically generates as 'of dogs'.")
(comment HeadWordOfPhraseFn "(#$HeadWordOfPhraseFn WORD) denotes the (possibly
contextually dependent) #$NLWordForm WORD, while
simultaneously placing on it the constraint that it is the
head word of its phrase, which may imply that it should agree
with another phrase in its linguistic context.")
(comment StringMentionFn "(#$StringMentionFn STRING) is used when the desired NL generation from STRING is STRING.  For example, (#$StringMentionFn \"cow\") is generated as \"cow\", complete with quotes.")
(comment TermParaphraseFn-PP "(#$TermParaphraseFn-PP P-THEWORD OBJ) denotes the (contextually dependent) natural-language paraphrase of a #$PrepositionalPhrase, headed by P-THEWORD, whose sole other constituent is the complement OBJ, which generates as (#$TermParaphraseFn-NP OBJ). For example, (#$TermParaphraseFn-PP #$From-TheWord TheTrees001) typically generates as 'from the trees'.")
(comment TwoDigitYearParaphraseFn "<code>(#$TwoDigitYearParaphraseFn YEAR)</code> denotes the paraphrase of <code>YEAR</code> using its last two digits.")
(comment NDecimalPlaceParaphraseFn "<code>(#$NDecimalPlaceParaphraseFn REAL-NUMBER DECIMAL-PLACES)</code> denots the string representation of <code>REAL-NUMBER</code> to <code>DECIMAL-PLACES</code> decimal places")
(comment TermParaphraseFn-CityWithStateOrProvinceAbbreviation "(#$TermParaphraseFn-CityWithStateOrProvinceAbbreviation CITY) denotes the phrase consisting of the best phrase for CITY followed by the two-letter abbreviation for the state or province CITY is in. Example: (#$TermParaphraseFn-CityWithStateOrProvinceAbbreviation #$CityOfTorontoOntario) will return \"Toronto, ON\"")
(comment TermParaphraseFn-Possessive "(#$TermParaphraseFn-Possessive ?THING) denotes the best way of expressing ?THING in possessive form in a given paraphrase context.  Example: if ?THING is #$Baxter, (#$TermParaphraseFn-Possessive ?THING) is \"Baxter's\" under normal circumstances.")
(comment TermParaphraseFn-Constrained "<code>(#$TermParaphraseFn-Constrained CONSTRAINT OBJ)</code> denotes the (contextually dependent) natural-language paraphrase for <code>OBJ</code> with grammatical constraint <code>CONSTRAINT</code>.")
(comment paraphraseCoercionAlwaysAllowedFrom "(#$paraphraseCoercionAlwaysAllowedFrom TARGET-PRED SOURCE-PRED) means that if we are trying to generate a TARGET-PRED form for a word and can't do so on the basis of an asserted form or regular morphological process, we can always use a SOURCE-PRED form and pretend that it is a TARGET-PRED form. For instance, we might say that verb forms can be coerced to gerund forms.")
(comment BestChemicalFormulaFn "(#$BestChemicalFormulaFn ELEMENTS COUNTS) denotes the contextually 'best' chemical formula encoded by ELEMENTS and COUNTS. For instance the string version of (#$BestChemicalFormulaFn (#$TheList #$Hydrogen #$Oxygen) (#$TheList 2 1)) would likely be \"H2O\", perhaps with the \"2\" subscripted.")
(comment BestCoefficientItemPhraseFn-Constrained "(#$BestCoefficientItemPhraseFn-Constrained CONSTRAINT COEFFICIENT ITEM) denotes the (contextually dependent) best phrase COEFFICIENT is used to generate a coefficient for ITEM.")
(comment generatesAsFirstOrder "(#$generatesAsFirstOrder COLLECTION-TYPE) means that the second-order collection COLLECTION-TYPE should be paraphrased as if it were a first-order collection. That is, it can be assumed that it will be clear that paraphrases of (#$isa COL COLLECTION-TYPE) are about COL, and not about instances of COL.")
(comment TermParaphraseFn-CountyWithStateOrProvinceAbbreviation "(#$TermParaphraseFn-CityWithStateOrProvinceAbbreviation CITY) denotes the phrase consisting of the best phrase for CITY followed by the two-letter abbreviation for the state or province CITY is in. Example: (#$TermParaphraseFn-CityWithStateOrProvinceAbbreviation #$CityOfTorontoOntario) will return \"Toronto, ON\"")
(comment TermParaphraseFn-NP-QuaType "(#$TermParaphraseFn-NP-QuaType OBJ) denotes the (contextually dependent) natural-language paraphrase for OBJ qua type as a noun phrase.  In English, generally, this means a singular noun phrase with a definite determiner, e.g. (#$TermParaphraseFn-NP-QuaType #$HydrogenBomb) might denote the phrase \"the hydrogen bomb\", unless the noun is plural-only or mass, in which case it means a plural or mass (respectively) noun phrase with no determiner, e.g. \"bifocals\" or \"dynamite\".  This function should most likely only be applied to a collection.")
(comment LatitudeOrLongitudeParaphraseFn "(#$LatitudeOrLongitudeParaphraseFn DEGREES POS-SUFFIX NEG-SUFFIX) denotes the (contextually dependent) best phrase denoting DEGREES as a measure of longitude or latitude, using POS-SUFFIX if DEGREES is positive, and NEG-SUFFIX if it is negative.")
(comment BestListParaphraseWithSeparatorAndCoefficientsFn-Constrained "(#$BestListParaphraseWithSeparatorFn-Constrained CONSTRAINT ITEM-LIST COEFFICIENT-LIST SEPARATOR) denotes the (contextually dependent) best phrase in which the elements of LIST are paraphrased with CONSTRAINT using the coefficients in COEFFICIENT-LIST, separated by SEPARATOR.")
(comment BestSymbolPhraseFn "(#$BestSymbolPhraseFn SYMBOL) denotes the
(possibly contextually dependent) best natural-language phrase expressing SYMBOL.")
(comment phraseTemplateArg "(#$phraseTemplateArg PRED N) means that the Nth argument to the #$NLTemplateGenerationPredicate PRED is the #$NLPhrase denoting expression that represents how to paraphrase the arg1 relation.")
(comment BasicTransitiveSentenceFn "(#$BasicTransitiveSentenceFn NP1 V NP2) denotes the (contextually dependent) transitive #$NLSentence with NP1 and NP2 as the subject and complement of the verb, respectively. For example, in English, (#$BasicTransitiveSentenceFn (#$TermParaphraseFn-NP :ARG1) #$Hit-TheWord (#$TermParaphraseFn-NP :ARG2)) would generate as 'ARG1 hits :ARG2'.")
(comment TermParaphraseFn-CityWithStateOrProvinceName "(#$TermParaphraseFn-CityWithStateOrProvinceName CITY) denotes the phrase consisting of the best phrase for CITY followed by the best phrase for the state or province CITY is in. Example: (#$TermParaphraseFn-CityWithStateOrProvinceName #$CityOfTorontoOntario) will return \"Toronto, Ontario\"")
(comment BestSetParaphraseWithSeparatorAndCoefficientsFn-Constrained "(#$BestSetParaphraseWithSeparatorAndCoefficientsFn-Constrained CONSTRAINT SET SEPARATOR) denotes the (contextually dependent) best phrase in which the item-coefficient pairs in SET are paraphrased separated by SEPARATOR.")
(comment NLDisjunctionFn "(#$NLDisjunctionFn . PHRASES) denotes
the natural-language disjunction (realized with \"or\" in English) of PHRASES.")
(comment TermParaphraseFn "(#$TermParaphraseFn OBJ) denotes the (contextually dependent) natural-language paraphrase for OBJ. The exact identity of the phrase will depend upon such factors as the language of paraphrase, the lexical resources available to the paraphraser, the syntactic function of the phrase within a sentence, and pragmatic considerations such as the identity of the addressee and the reason for referring to OBJ at all.")
(comment PreciseParaphraseFn "(#$PreciseParaphraseFn PHRASE) 

is used within a genTemplate assertion when the most precise 

generation available for PHRASE is always desired.  This will override the 

\"imprecise mode\" setting sometimes employed by the generation code.  

#$PreciseParaphraseFn can wrap individual portions of the body of a #$genTemplate, 

without affecting the rest of the template.  For example, in generating rules,

 we may want to be as precise as possible in expressing a rule's antecedent, to 

make it clear exactly when the rule will fire.")
(comment genTemplate-Constrained "(#$genTemplate-Constrained RELN CONSTRAINT PHRASE) means that if CONSTRAINT is true, then PHRASE is one way to paraphrase a CycL formula whose arg0 is RELN. CONSTRAINT will typically be stated in terms of generic argument keywords such as :ARG1 and :ARG2, which correspond to arguments in the formula to be paraphrased.")
(comment BasicTransitive-PassiveSentenceFn "(BasicTransitive-PassiveSentenceFn NP1 V NP2) denotes the (contextually dependent) passive version of the transitive #$NLSentence with NP1 and NP2 as the subject and complement of the verb, respectively. For example, in English, (#$BasicTransitive-PassiveSentenceFn (#$TermParaphraseFn-NP :ARG1) #$Hit-TheWord (#$TermParaphraseFn-NP :ARG2)) would generate as ':ARG2 is hit by :ARG1', not the usual ':ARG1 hit :ARG2'")
(comment CurrentListItemFn "(#$CurrentListItemFn LIST OFFSET) denotes the
item from LIST that is 'current'. Inside a #$RepeatForSubsequentArgsFn expression, this will be the (N + OFFSET)th item on LIST for the Nth iteration. Elsewhere, it is just the (1 + OFFSET)th item on LIST.")
(comment TerseParaphraseFn "(#$TerseParaphraseFn PHRASE) 
is used within a genTemplate assertion when terse generation for PHRASE is particularly desired. #$TerseParaphraseFn can wrap individual portions of the body of a #$genTemplate, without affecting the rest of the template.  For example, we may want to use terse paraphrase for certain args when the rest of a #$genTemplate assertion provides enough context for them to be clear.")
(comment TermParaphraseFn-PhysicalLocation "(#$TermParaphraseFn-PhysicalLocation PLACE) denotes a vbar-modifying phrase that can be used to paraphrase PLACE as a place where some event happened or will happen. In English, this will typically come out as 'in <some region>', 'on <some surface>', or with an indexical such as 'here'.")
(comment XActsAsAYInZ-NLSentenceFn "(#$XActsAsAYInZ-NLSentenceFn NBAR1 NP NBAR2) denotes the (contextually dependent) #$NLSentence stating that the (denot of) NBAR1 has the (denot of) NP (preferably a role) in the (denot of) NBAR2 (preferably a type of situation). 'Stirring acts as an accelerator in creating solutions' might be generated by this function.")
(comment paraphraseCoercionSometimesAllowedFrom "(#$paraphraseCoercionSometimesAllowedFrom TARGET-PRED SOURCE-PRED) means that if we are trying to generate a TARGET-PRED form for a word and can't do so on the basis of an asserted form or regular morphological process, we can maybe use a SOURCE-PRED form and pretend that it is a TARGET-PRED form. For instance, we might say that mass noun forms can be coerced to singular noun forms.")
(comment ParaphraseBenchmarkGAFList "A list of GAF assertions to be used in benchmarking the performance of Cyc's paraphrase system. The list consists of GAFs that pass the \"typically human-consciousness level\" filter, have timestamps before Jan. 1, 2000, and have no top-level terms in common with any other members of the list. The list is ordered from oldest to most recent.")
(comment PluralParaphraseFn-PP "(PluralParaphraseFn-PP THEWORD OBJ) denotes the (contextually dependent) natural-language paraphrase for OBJ as a PP, with THEWORD as its head, whose sole other constituent is the complement OBJ, which is a #$plural-Generic #$NounPhrase. For example, (#$PluralParaphraseFn-PP From-TheWord Tree-ThePlant) will typically generate as 'from trees' in English.")
(comment PluralParaphraseFn "(PluralParaphraseFn OBJ) denotes the (contextually dependent) natural-language paraphrase for OBJ as an NP with a #$plural-Generic head. For example, (#$PluralParaphraseFn #$Tree-ThePlant) will typically generate as 'trees' in English.")
(comment ConditionalPhraseFn "(#$ConditionalPhraseFn COND PHRASE-IF PHRASE-IF-NOT) denotes
PHRASE-IF iff COND is true, otherwise it denotes PHRASE-IF-NOT.
(#$ConditionalPhraseFn COND PHRASE-IF) denotes PHRASE-IF iff COND
is true, otherwise it denotes a null phrase.")
(comment BestEvaluatedIfEvaluatablePhraseFn-Constrained "(#$BestEvaluatedIfEvaluatablePhraseFn-Constrained CONSTRAINT OBJ) denotes the (contextually dependent) natural-language paraphrase for OBJ with grammatical constraint CONSTRAINT, with OBJ evaluated if it is evaluatable.")
(comment defaultGenerationConstraint "(#$defaultGenerationConstraint TERM CONSTRAINT) means that in situations where TERM needs to be paraphrased and no other overriding POS information is available (for example by a #$genTemplate assertion), then the #$TermPhrasesConstraint CONSTRAINT will be used. Example: (#$relationAllInstance #$defaultGenerationConstraint #$MilitaryTaskedActionType #$infinitive).")
