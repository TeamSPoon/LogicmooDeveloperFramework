(in-microtheory GeneralLexiconMt)

(isa chemicalFormulaString StringIndexingSlot)
(isa firstName StringIndexingSlot)
(isa alias StringIndexingSlot)
(isa acronymString StringIndexingSlot)
(isa countryName-ShortForm StringIndexingSlot)
(isa priceToEarningsRatio RelationalNounSlot)
(isa localAuthoritySearchFee RelationalNounSlot)
(isa borrower RelationalNounSlot)
(isa heatOfVaporization RelationalNounSlot)
(isa (SubEventRoleFn chemicalProducts) RelationalNounSlot)
(isa (SubEventRoleFn electronAcceptor) RelationalNounSlot)
(isa (SubEventRoleFn electronDonor) RelationalNounSlot)
(isa electronAcceptor RelationalNounSlot)
(isa electronDonor RelationalNounSlot)
(isa hypothesizedSentenceForMetaphorInterpretation RelationalNounSlot)
(isa (SubEventRoleFn itemCopied) RelationalNounSlot)
(isa seriousMaleficiary RelationalNounSlot)
(isa economyMinister RelationalNounSlot)
(isa (SubEventRoleFn chemicalReactants) RelationalNounSlot)
(isa (SubEventRoleFn primaryObjectMoving) RelationalNounSlot)
(isa (SubEventRoleFn objectActedOn) RelationalNounSlot)
(isa (SubEventRoleFn outputsCreated) RelationalNounSlot)
(isa (SubEventRoleFn inputsDestroyed) RelationalNounSlot)
(isa (SubEventRoleFn objectEmitted) RelationalNounSlot)
(isa (SubEventRoleFn killers) RelationalNounSlot)
(isa (SubEventRoleFn doneBy) RelationalNounSlot)
(isa (SubEventRoleFn objectOfStateChange) RelationalNounSlot)
(isa (SubEventRoleFn transferredObject) RelationalNounSlot)
(isa (SubEventRoleFn supportingObject) RelationalNounSlot)
(isa PrepositionalPhrase NLPhraseType)
(isa ItalianWord LexicalWordTypeByLanguage)
(isa stageName CollectionLexificationPredicate-Required)
(isa injurers RelationalNounSlot)
(isa killers RelationalNounSlot)
(isa workplaceOfIndividual RelationalNounSlot)
(isa PositiveAdjectiveProducingSuffix SuffixCategory)
(isa PositiveAdjectiveProducingSuffix NLMorphologyCollection)
(isa metaphorBasisType NonAbduciblePredicate)
(isa lastPeriodOfPlay RelationalNounSlot)
(isa overtimePeriodsOfPlay RelationalNounSlot)
(isa regulationPeriodsOfPlay RelationalNounSlot)
(isa fourthQuarterOfPlay RelationalNounSlot)
(isa thirdQuarterOfPlay RelationalNounSlot)
(isa secondQuarterOfPlay RelationalNounSlot)
(isa firstPeriodOfPlay RelationalNounSlot)
(isa periodsOfPlay RelationalNounSlot)
(isa firstQuarterOfPlay RelationalNounSlot)
(isa crossCousins RelationalNounSlot)
(isa parallelCousins RelationalNounSlot)
(isa biologicalCousins RelationalNounSlot)
(isa biologicalSiblings RelationalNounSlot)
(isa companyHasCIO RelationalNounSlot)
(isa nt-proBNPLevel RelationalNounSlot)
(isa signOfAilment RelationalNounSlot)
(isa bnpLevel RelationalNounSlot)
(isa airportHasIATACode StringIndexingSlot)
(isa commonAilmentCause RelationalNounSlot)
(isa attendedSchoolAt RelationalNounSlot)
(isa commonSurgicalComplication RelationalNounSlot)
(isa (NLPhraseWithFrameFn (PhraseFn Adverb) GenericPost-VerbPhraseModifyingFrame) NLPhraseType)
(isa CompoundWordFn-HeadMedial NLMorphologyFunction)
(isa CompoundWordFn-HeadMedial DerivedWordFormingFunction)
(isa CompoundWordFn-HeadInitial DerivedWordFormingFunction)
(isa CompoundWordFn-HeadInitial NLMorphologyFunction)
(isa companyQuarterlyEarnings RelationalNounSlot)
(isa quotedInstancesDontNeedLexification NLPredicate)
(isa codificationOf RelationalNounSlot)
(isa cellmates RelationalNounSlot)
(isa spokesmanForIndividual RelationalNounSlot)
(isa campaignManagerOf RelationalNounSlot)
(isa protegeOf RelationalNounSlot)
(isa professorOf RelationalNounSlot)
(isa mentorOf RelationalNounSlot)
(isa biologicalGrandmothers RelationalNounSlot)
(isa biologicalGrandfathers RelationalNounSlot)
(isa companyEarnings RelationalNounSlot)
(isa capitalCity RelationalNounSlot)
(isa convertiblePreferredShareholders RelationalNounSlot)
(isa preferredShareholders RelationalNounSlot)
(isa commonShareholders RelationalNounSlot)
(isa agentNetLoss RelationalNounSlot)
(isa grossIncome RelationalNounSlot)
(isa netIncome RelationalNounSlot)
(isa revenue RelationalNounSlot)
(isa earningsPerShare-ForStockType RelationalNounSlot)
(isa businessName-WithTickerSymbol CollectionLexificationPredicate-Required)
(isa organizationName-Official CollectionLexificationPredicate-Required)
(isa organizationName-Standard CollectionLexificationPredicate-Required)
(isa (PresentTenseVersionFn arbitrageur) RelationalNounSlot)
(isa sportsFranchiseFocalTeam SenseExtendingPredicate)
(isa (PresentTenseVersionFn principalInvestigator) RelationalNounSlot)
(isa layers RelationalNounSlot)
(isa (PhraseFn ProperNoun) NLPhraseType)
(isa programSpecifications RelationalNounSlot)
(isa simpleAspect-Generic GenericSpeechPartPredicate)
(isa simpleFuture-Generic SpeechPartPredicateByTense)
(isa simpleFuture-Generic GenericSpeechPartPredicate)
(isa simplePresent-Generic SpeechPartPredicate-ExcludedFromNPParser)
(isa simplePresent-Generic SpeechPartPredicateByTense)
(isa simplePast-Generic GenericSpeechPartPredicate)
(isa simplePast-Generic SpeechPartPredicateByTense)
(isa netFrictionForceOnObject RelationalNounSlot)
(isa tensionForceOnObject RelationalNounSlot)
(isa frequencyOfEventType RelationalNounSlot)
(isa anabranches RelationalNounSlot)
(isa distributaries RelationalNounSlot)
(isa commonNounStrings GenericSpeechPartPredicate)
(isa speaker-OrganizationalRole RelationalNounSlot)
(isa (PresentTenseVersionFn transporter) RelationalNounSlot)
(isa (PresentTenseVersionFn spectators) RelationalNounSlot)
(isa (PresentTenseVersionFn groom) RelationalNounSlot)
(isa (PresentTenseVersionFn host) RelationalNounSlot)
(isa (PresentTenseVersionFn guestInHosting) RelationalNounSlot)
(isa (PresentTenseVersionFn driverActor) RelationalNounSlot)
(isa (PresentTenseVersionFn interviewee) RelationalNounSlot)
(isa (PresentTenseVersionFn bride) RelationalNounSlot)
(isa focalFieldOfType SenseExtendingPredicate)
(isa newsSubject RelationalNounSlot)
(isa hasAdministrators RelationalNounSlot)
(isa financeMinister RelationalNounSlot)
(isa subordinatingConjunctionSemTrans SemTransPred)
(isa organizationalPredecessor RelationalNounSlot)
(isa organizationalSuccessor RelationalNounSlot)
(isa halfSisters RelationalNounSlot)
(isa halfSiblings RelationalNounSlot)
(isa halfBrothers RelationalNounSlot)
(isa conceptOfDomain RelationalNounSlot)
(isa peripheralConceptOfDomain RelationalNounSlot)
(isa associates RelationalNounSlot)
(isa fullName StringIndexingSlot)
(isa appointee RelationalNounSlot)
(isa politicalAdvisor-OrganizationalRole RelationalNounSlot)
(isa objectStartingDate RelationalNounSlot)
(isa (PhraseFn WHAdverb) NLPhraseType)
(isa government SenseExtendingPredicate)
(isa schoolSportsTeams SenseExtendingPredicate)
(isa eventOccursInCountry RelationalNounSlot)
(isa territoryOf SenseExtendingPredicate)
(isa predicateLicensesSenseExtensionFromNamestringPredInArgToNamestringPredInArg NonAbduciblePredicate)
(isa predicateLicensesSenseExtensionFromPOSInArgToPOSInArg NonAbduciblePredicate)
(isa specPredOfPredicateLicensesSenseExtensionFromPOSInArgToPOSInArg NonAbduciblePredicate)
(isa coreConceptOfDomain RelationalNounSlot)
(isa woodTypeOfPlantType SenseExtendingPredicate)
(isa servingTypeOfFoodOrDrinkType SenseExtendingPredicate)
(isa adjSemTransTemplate NonAbduciblePredicate)
(isa sympathizers RelationalNounSlot)
(isa reportsTo RelationalNounSlot)
(isa coConspirators RelationalNounSlot)
(isa fosterDaughters RelationalNounSlot)
(isa fosterSons RelationalNounSlot)
(isa rivals RelationalNounSlot)
(isa occasionallyInContactWith RelationalNounSlot)
(isa indirectlyAcquaintedWith RelationalNounSlot)
(isa mutualAcquaintances RelationalNounSlot)
(isa businessContacts RelationalNounSlot)
(isa costars RelationalNounSlot)
(isa fatherInLaw RelationalNounSlot)
(isa emergencyContactPerson RelationalNounSlot)
(isa formerVictim RelationalNounSlot)
(isa romanticInterest RelationalNounSlot)
(isa employer RelationalNounSlot)
(isa hasAuthorityOver RelationalNounSlot)
(isa worksOffsiteFor RelationalNounSlot)
(isa terminatedEmployeeOf RelationalNounSlot)
(isa inactiveEmployeeOf RelationalNounSlot)
(isa attorneys RelationalNounSlot)
(isa frequentlyInContactWith RelationalNounSlot)
(isa significantEventAcquaintance RelationalNounSlot)
(isa intimatelyAcquaintedWith RelationalNounSlot)
(isa inLaw RelationalNounSlot)
(isa simpleContactAcquaintances RelationalNounSlot)
(isa suspectedPerformer RelationalNounSlot)
(isa SubjectIsActionAlternation-1 NonTransitiveAlternationType)
(isa SubjectIsActionAlternation NonTransitiveAlternationType)
(isa bystanders RelationalNounSlot)
(isa JapaneseDerivationalAffix AffixCategory)
(isa JapaneseDerivationalAffix NLMorphologyCollection)
(isa JapaneseAffix AffixCategory)
(isa JapaneseInflectionalAffix AffixCategory)
(isa JapaneseInflectionalAffix NLMorphologyCollection)
(isa dispersionRadius RelationalNounSlot)
(isa dispersionOrigin RelationalNounSlot)
(isa militaryCommander RelationalNounSlot)
(isa stepsister RelationalNounSlot)
(isa stepsiblings RelationalNounSlot)
(isa stepbrother RelationalNounSlot)
(isa webmasterForOrg RelationalNounSlot)
(isa ombudsman-OrganizationalRole RelationalNounSlot)
(isa advisorFor RelationalNounSlot)
(isa doubleAgentInOrg RelationalNounSlot)
(isa intelligenceOperativeForOrg RelationalNounSlot)
(isa activistForOrg RelationalNounSlot)
(isa suicideBomber-OrganizationalRole RelationalNounSlot)
(isa planner-OrganizationalRole RelationalNounSlot)
(isa advisor-OrganizationalRole RelationalNounSlot)
(isa hasRegionalLeaders RelationalNounSlot)
(isa hasSeniorMembers RelationalNounSlot)
(isa vicePresident RelationalNounSlot)
(isa coCellMembers RelationalNounSlot)
(isa stepdaughters RelationalNounSlot)
(isa stepsons RelationalNounSlot)
(isa representative-OrganizationalRole RelationalNounSlot)
(isa referenceWorkEntryTitle RelationalNounSlot)
(isa volatilityOfSecurity RelationalNounSlot)
(isa endowmentSurrenderValue RelationalNounSlot)
(isa intialFundManagerFee RelationalNounSlot)
(isa totalReturn RelationalNounSlot)
(isa dividendYield RelationalNounSlot)
(isa expatriateFrom RelationalNounSlot)
(isa internalRateOfReturn RelationalNounSlot)
(isa fosterFather RelationalNounSlot)
(isa fosterParent RelationalNounSlot)
(isa fosterMother RelationalNounSlot)
(isa clauseSemTrans SemTransPred)
(isa (PhraseFn AdverbOfPlace) NLPhraseType)
(isa (PhraseFn AdverbOfTime) NLPhraseType)
(isa DitransitivePP-GenericFrame PassivizableFrame)
(isa DitransitivePP-ThatClauseFrame DitransitiveFrameType)
(isa recruiterForOrg RelationalNounSlot)
(isa classmates RelationalNounSlot)
(isa headOfSecurity RelationalNounSlot)
(isa aideDeCamp RelationalNounSlot)
(isa stepmother RelationalNounSlot)
(isa stepfather RelationalNounSlot)
(isa stepchildren RelationalNounSlot)
(isa frequentsLocation RelationalNounSlot)
(isa verbFormWithAuxiliary GenericSpeechPartPredicate)
(isa fosterChildren RelationalNounSlot)
(isa WNVerbFrame-21 PassivizableFrame)
(isa WNVerbFrame-16 PassivizableFrame)
(isa WNVerbFrame-18 PassivizableFrame)
(isa WNVerbFrame-20 PassivizableFrame)
(isa WNVerbFrame-17 PassivizableFrame)
(isa WNVerbFrame-19 PassivizableFrame)
(isa WNVerbFrame-9 PassivizableFrame)
(isa WNVerbFrame-11 PassivizableFrame)
(isa WNVerbFrame-15 PassivizableFrame)
(isa WNVerbFrame-10 PassivizableFrame)
(isa WNVerbFrame-8 PassivizableFrame)
(isa WNVerbFrame-1 PassivizableFrame)
(isa WNVerbFrame-2 PassivizableFrame)
(isa initialAdjustmentPeriod RelationalNounSlot)
(isa surrenderCashValue RelationalNounSlot)
(isa initialAPR RelationalNounSlot)
(isa adjustmentDates RelationalNounSlot)
(isa companyHasCFO RelationalNounSlot)
(isa companyHasCOO RelationalNounSlot)
(isa whDeterminerSemTrans SemTransPred)
(isa determinerSemTrans SemTransPred)
(isa keyGroupMembers RelationalNounSlot)
(isa closingCostItems RelationalNounSlot)
(isa negativeEquityInProperty RelationalNounSlot)
(isa groundRent RelationalNounSlot)
(isa financierForOrg RelationalNounSlot)
(isa squadLeaderInGroup RelationalNounSlot)
(isa explosivesExpertForOrg RelationalNounSlot)
(isa technicalSpecialistForOrg RelationalNounSlot)
(isa operationsHead RelationalNounSlot)
(isa nuclearFamilyMembers RelationalNounSlot)
(isa religiousLeaderOf RelationalNounSlot)
(isa hasReligiousLeaders RelationalNounSlot)
(isa cellLeader RelationalNounSlot)
(isa cellSubordinate RelationalNounSlot)
(isa religiousStudentOf RelationalNounSlot)
(isa studentOf RelationalNounSlot)
(isa isLedBy RelationalNounSlot)
(isa isLeaderOf RelationalNounSlot)
(isa wasEnrolledAt RelationalNounSlot)
(isa prepositionalPhrasePresupposesWithRemainder NLPredicate)
(isa nBarPresupposesOfDenotWithRemainder NLPredicate)
(isa phraseDenotesAndPresupposes NLPredicate)
(isa phraseOfTypeDenotes NLPredicate)
(isa wasTheKillerOf RelationalNounSlot)
(isa phraseInstantiatesNounCompoundRuleWithMotherAndDaughterDenots NLPredicate)
(isa dateLeftJihad RelationalNounSlot)
(isa religiousTeacherOf RelationalNounSlot)
(isa teacherOf RelationalNounSlot)
(isa placeJoinedJihad RelationalNounSlot)
(isa ageOfAgentWhenJoinedJihad RelationalNounSlot)
(isa phraseInstantiatesNounCompoundRuleWithDenots NLPredicate)
(isa dateJoinedJihad RelationalNounSlot)
(isa phraseNthDaughter NLPredicate)
(isa phraseDenotes NLPredicate)
(isa phraseInstantiatesNounCompoundRule NLPredicate)
(isa phraseMeetsTermPhrasesConstraint NLPredicate)
(isa phraseTypesMeetNCRuleSyntacticConstraints NLPredicate)
(isa termsMeetNCRuleSemanticConstraints NLPredicate)
(isa javaClassName-LongForm RelationalNounSlot)
(isa supporteeInSupportSituation RelationalNounSlot)
(isa supporterInSupportSituation RelationalNounSlot)
(isa incarceratedBy RelationalNounSlot)
(isa accomplices RelationalNounSlot)
(isa nephews-nieces RelationalNounSlot)
(isa uncles-aunts RelationalNounSlot)
(isa tribalName RelationalNounSlot)
(isa eventInstantiatesPlanningEvent RelationalNounSlot)
(isa communicatorOfInfo RelationalNounSlot)
(isa artifactFoundInLocation RelationalNounSlot)
(isa defenseMinister RelationalNounSlot)
(isa futurePerfect-Generic GenericSpeechPartPredicate)
(isa pastPerfect-Generic GenericSpeechPartPredicate)
(isa presentPerfect-Generic GenericSpeechPartPredicate)
(isa perfectAspect-Generic GenericSpeechPartPredicate)
(isa husband RelationalNounSlot)
(isa inappropriateResponse RelationalNounSlot)
(isa appropriateResponse RelationalNounSlot)
(isa subExpressions RelationalNounSlot)
(isa endingIntervalOfThing RelationalNounSlot)
(isa startingIntervalOfThing RelationalNounSlot)
(isa lifeExpectancy RelationalNounSlot)
(isa instructor RelationalNounSlot)
(isa evaluator RelationalNounSlot)
(isa MultiWordWord LexicalWordType)
(isa TheNCHead NounCompoundRuleIndexicalTerm-Direct)
(isa TheNCModifier NounCompoundRuleIndexicalTerm-Direct)
(isa ncRuleTemplate NonAbduciblePredicate)
(isa primarySupervisor NonAbduciblePredicate)
(isa cityMayor RelationalNounSlot)
(isa TheNCArgGenls NounCompoundRuleIndexicalTerm)
(isa TheNCArgIsas NounCompoundRuleIndexicalTerm)
(isa nonCohabitingFamilyMembers RelationalNounSlot)
(isa spokesmanFor RelationalNounSlot)
(isa actingInDramaticPerformance RelationalNounSlot)
(isa hasDBAttribute RelationalNounSlot)
(isa treasurer RelationalNounSlot)
(isa citationTo RelationalNounSlot)
(isa whPronounSemTrans SemTransPred)
(isa whAdverbSemTrans SemTransPred)
(isa responder RelationalNounSlot)
(isa utilityServesLocation RelationalNounSlot)
(isa objectExposedToHarmfulSubstance RelationalNounSlot)
(isa organismExposed RelationalNounSlot)
(isa organismGroupExposed RelationalNounSlot)
(isa scheduledArrivingTime RelationalNounSlot)
(isa translationEndTime RelationalNounSlot)
(isa scheduledDepartingTime RelationalNounSlot)
(isa translationStartTime RelationalNounSlot)
(isa flightNumber RelationalNounSlot)
(isa airlineIATACarrierCode RelationalNounSlot)
(isa airlineICAOCarrierCode RelationalNounSlot)
(isa antidote RelationalNounSlot)
(isa airportHasICAOCode RelationalNounSlot)
(isa arrests RelationalNounSlot)
(isa molecularWeight RelationalNounSlot)
(isa EnglishLanguage NaturalGenderLanguage)
(isa evaporationRate RelationalNounSlot)
(isa explosiveVelocityOfType RelationalNounSlot)
(isa airportHasIATACode RelationalNounSlot)
(isa pragmaticallyAcceptable NLPragmaticPredicate)
(isa iDLHConcentration RelationalNounSlot)
(isa properNounStrings GenericSpeechPartPredicate)
(isa objectContaminated RelationalNounSlot)
(isa dangerousParts RelationalNounSlot)
(isa twoDigitFIPSStateCode RelationalNounSlot)
(isa threeDigitFIPSCountyCode RelationalNounSlot)
(isa alias RelationalNounSlot)
(isa alias ProperNamePredicate-Strict)
(isa contaminant RelationalNounSlot)
(isa zoonoticHostTypeForAgentType RelationalNounSlot)
(isa containerPayload-Max RelationalNounSlot)
(isa chemicalSimulantTypes RelationalNounSlot)
(isa performedBy-Uniquely RelationalNounSlot)
(isa performedBy-Partially RelationalNounSlot)
(isa foreignMinister RelationalNounSlot)
(isa referenceWorkHasEntry RelationalNounSlot)
(isa tenuresOf RelationalNounSlot)
(isa bugzillaBugReportHasNumber RelationalNounSlot)
(isa precipitate RelationalNounSlot)
(isa spectatorIonInReactionType RelationalNounSlot)
(isa rider RelationalNounSlot)
(isa equilibriumConstantOfReaction RelationalNounSlot)
(isa ConcatenatePhrasesFn-NoSpaces VariableArityFunction)
(isa deathOf RelationalNounSlot)
(isa futureTense-Generic GenericSpeechPartPredicate)
(isa futureTense-Generic SpeechPartPredicateByTense)
(isa chemicalFormulaString CollectionLexificationPredicate-Required)
(isa chemicalFormulaString RelationalNounSlot)
(isa explosiveDeviceUsed RelationalNounSlot)
(isa authenticationDeviceUsed RelationalNounSlot)
(isa massNumberOfAtom RelationalNounSlot)
(isa biologicalDaughters RelationalNounSlot)
(isa reinforcedUnit RelationalNounSlot)
(isa genStringAssertion-Terse NLGenerationPredicate)
(isa desiredEndStateOfPlan RelationalNounSlot)
(isa supportingAttackOfOperation RelationalNounSlot)
(isa mainAttackOfOperation RelationalNounSlot)
(isa dependsOn-Underspecified RelationalNounSlot)
(isa doesntNeedParseTemplate NLPredicate)
(isa coaForceRatioBalanceInSupportingAttacks-BluePerspective RelationalNounSlot)
(isa expectedStartingPoint RelationalNounSlot)
(isa advanceGuardReserve RelationalNounSlot)
(isa advanceGuardSupport RelationalNounSlot)
(isa advanceGuard RelationalNounSlot)
(isa coaSynchronicity RelationalNounSlot)
(isa infersParseTemplate NLPredicate)
(isa scientificName CollectionLexificationPredicate-Required)
(isa pseudonym CollectionLexificationPredicate-Required)
(isa placeName-ShortForm CollectionLexificationPredicate-Required)
(isa placeName-Standard CollectionLexificationPredicate-Required)
(isa placeName-LocalShortForm CollectionLexificationPredicate-Required)
(isa placeName-LocalLongForm CollectionLexificationPredicate-Required)
(isa nicknames CollectionLexificationPredicate-Required)
(isa gospelName-Short CollectionLexificationPredicate-Required)
(isa epistleAddresseeText CollectionLexificationPredicate-Required)
(isa countryName-ShortForm CollectionLexificationPredicate-Required)
(isa countryName-LongForm CollectionLexificationPredicate-Required)
(isa countryName-LocalShortForm CollectionLexificationPredicate-Required)
(isa countryName-LocalLongForm CollectionLexificationPredicate-Required)
(isa preferredNameString CollectionLexificationPredicate-Required)
(isa nameString CollectionLexificationPredicate-Required)
(isa headMedialString CollectionLexificationPredicate-Required)
(isa compoundString CollectionLexificationPredicate-Required)
(isa multiWordString CollectionLexificationPredicate-Required)
(isa denotation CollectionLexificationPredicate-Required)
(isa adverbSemTransTemplate SemTransTemplatePredicate)
(isa verbSemTransTemplate SemTransTemplatePredicate)
(isa adjSemTransTemplate SemTransTemplatePredicate)
(isa missionDescribingSpecification RelationalNounSlot)
(isa QuantityFn IntermediateVocabFunction)
(isa enemies RelationalNounSlot)
(isa subPaths-Generic RelationalNounSlot)
(isa subPaths-Spatial RelationalNounSlot)
(isa QuantityVariableFn IntermediateVocabFunction)
(isa emigrants RelationalNounSlot)
(isa immigrant RelationalNounSlot)
(isa levelOfMorale RelationalNounSlot)
(isa obstacleBlocks RelationalNounSlot)
(isa obstacleDiverts RelationalNounSlot)
(isa obstacleImpedes RelationalNounSlot)
(isa followsFromPrecedingDiscourse NLPredicate)
(isa protector-Generic RelationalNounSlot)
(isa tasteOfObject RelationalNounSlot)
(isa transformedObject RelationalNounSlot)
(isa totalCharge-Event RelationalNounSlot)
(isa headMedialStringDenotesArgInReln MultiWordPhrasePredicate)
(isa headMedialStringDenotesArgInReln DenotesArgInRelnPredicate)
(isa TheRNPParse IntermediateVocabFunction)
(isa monetaryValueOfThing RelationalNounSlot)
(isa companyHasCEO RelationalNounSlot)
(isa webFrequencyForLexicalAssertion NLGenerationPredicate)
(isa leadSinger RelationalNounSlot)
(isa contractee RelationalNounSlot)
(isa hitWeaponUsed RelationalNounSlot)
(isa contractor RelationalNounSlot)
(isa AbstractNounProducingSuffix NLMorphologyCollection)
(isa AbstractNounProducingSuffix SuffixCategory)
(isa ConcreteNounProducingSuffix SuffixCategory)
(isa ConcreteNounProducingSuffix NLMorphologyCollection)
(isa WordConstituentsDerivationalSuffixRule SuffixRule-Derivational)
(isa WordConstituentsDerivationalPrefixRule PrefixRule-Derivational)
(isa NounProducingAffix NLMorphologyCollection)
(isa NounProducingAffix DerivationalAffixByResultPOSCategory)
(isa AdjectiveProducingAffix NLMorphologyCollection)
(isa AdjectiveProducingAffix DerivationalAffixByResultPOSCategory)
(isa AdverbProducingAffix NLMorphologyCollection)
(isa AdverbProducingAffix DerivationalAffixByResultPOSCategory)
(isa VerbProducingAffix NLMorphologyCollection)
(isa VerbProducingAffix DerivationalAffixByResultPOSCategory)
(isa DeAdjectivalAffix NLMorphologyCollection)
(isa DeAdjectivalAffix DerivationalAffixByBasePOSCategory)
(isa DenominalAffix NLMorphologyCollection)
(isa DenominalAffix DerivationalAffixByBasePOSCategory)
(isa DeverbalAffix NLMorphologyCollection)
(isa DeverbalAffix DerivationalAffixByBasePOSCategory)
(isa DerivationalAffixByResultPOSCategory FacetingCollectionType)
(isa DerivationalAffixByResultPOSCategory NLMorphologyCollection)
(isa BasePOSDerivationalAffixRule AffixRule-Derivational)
(isa hostages RelationalNounSlot)
(isa PossessivePhrase NLPhraseType)
(isa DenominalNounProducingSuffix NLMorphologyCollection)
(isa DenominalNounProducingSuffix SuffixCategory)
(isa LevelTwoAffix AffixCategory)
(isa LevelTwoAffix NLMorphologyCollection)
(isa LevelOneAffix AffixCategory)
(isa LevelOneAffix NLMorphologyCollection)
(isa UnproductiveLexicalAffix AffixCategory)
(isa UnproductiveLexicalAffix NLMorphologyCollection)
(isa ProductiveLexicalAffix AffixCategory)
(isa ProductiveLexicalAffix NLMorphologyCollection)
(isa ProductiveLexicalAffix LinguisticObjectType)
(isa NeoClassicalBaseWordForm BaseWordFormTypeByEtymology)
(isa BaseWordFormTypeByEtymology NLMorphologyCollection)
(isa BaseWordFormTypeByPhonology NLMorphologyCollection)
(isa objectTaken RelationalNounSlot)
(isa MorphemeSemanticGenlsConstraintFn NLMorphologyFunction)
(isa MorphemeSemanticIsaConstraintFn NLMorphologyFunction)
(isa MorphemeCategorialConstraintFn NLMorphologyFunction)
(isa DerivationalAffixByBasePOSCategory FacetingCollectionType)
(isa DerivationalAffixByBasePOSCategory NLMorphologyCollection)
(isa MorphologicalRuleConstraint-Semantic NLMorphologyCollection)
(isa MorphologicalRuleConstraint-Categorial NLMorphologyCollection)
(isa MorphologicalRuleConstraint NLMorphologyCollection)
(isa WordConstituent NLMorphologyCollection)
(isa segmentOfChain-Individual RelationalNounSlot)
(isa NeoClassicalBaseWordForm NLMorphologyCollection)
(isa BaseWordForm NLMorphologyCollection)
(isa (BaseWordFormsStartingWithPhonemeTypeFn Vowel) BaseWordFormTypeByStartingPhonemeType)
(isa (BaseWordFormsEndingWithPhonemeTypeFn Consonant) BaseWordFormTypeByEndingPhonemeType)
(isa BaseWordFormsEndingWithPhonemeTypeFn NLMorphologyFunction)
(isa BaseWordFormsEndingWithPhonemeTypeFn CollectionDenotingFunction)
(isa BaseWordFormsStartingWithPhonemeTypeFn NLMorphologyFunction)
(isa BaseWordFormsStartingWithPhonemeTypeFn CollectionDenotingFunction)
(isa BaseWordFormsEndingWithLetterSequenceFn NLMorphologyFunction)
(isa (BaseWordFormsStartingWithLetterSequenceFn "b") BaseWordFormTypeByStartingLetters)
(isa BaseWordFormsStartingWithLetterSequenceFn NLMorphologyFunction)
(isa (BaseWordFormsStartingWithLetterSequenceFn "r") BaseWordFormTypeByStartingLetters)
(isa (BaseWordFormsStartingWithLetterSequenceFn "l") BaseWordFormTypeByStartingLetters)
(isa (BaseWordFormsStartingWithLetterSequenceFn "p") BaseWordFormTypeByStartingLetters)
(isa (BaseWordFormsStartingWithLetterSequenceFn "m") BaseWordFormTypeByStartingLetters)
(isa BaseWordFormsStartingWithLetterSequenceFn CollectionDenotingFunction)
(isa BaseWordFormTypeByEndingPhonemeType FacetingCollectionType)
(isa BaseWordFormTypeByEndingPhonemeType NLMorphologyCollection)
(isa BaseWordFormTypeByStartingPhonemeType FacetingCollectionType)
(isa BaseWordFormTypeByStartingPhonemeType NLMorphologyCollection)
(isa BaseWordFormTypeByEndingLetters NLMorphologyCollection)
(isa BaseWordFormTypeByStartingLetters NLMorphologyCollection)
(isa LexicalPrefix NLMorphologyCollection)
(isa LexicalSuffix NLMorphologyCollection)
(isa Affixation-WordFormationProcess NLMorphologyCollection)
(isa ComplexWord NLMorphologyCollection)
(isa CompoundWord NLMorphologyCollection)
(isa Compounding-WordFormationProcess NLMorphologyCollection)
(isa Conversion-WordFormationProcess NLMorphologyCollection)
(isa DerivationalAffix NLMorphologyCollection)
(isa DerivationalAffixation NLMorphologyCollection)
(isa DerivationalPrefix NLMorphologyCollection)
(isa DerivationalPrefixation NLMorphologyCollection)
(isa DerivationalSuffix NLMorphologyCollection)
(isa DerivationalSuffixation NLMorphologyCollection)
(isa DerivedWord NLMorphologyCollection)
(isa DerivedWordFormingFunction NLMorphologyCollection)
(isa EnglishDerivationalAffix NLMorphologyCollection)
(isa EnglishDerivationalPrefix NLMorphologyCollection)
(isa EnglishDerivationalSuffix NLMorphologyCollection)
(isa EnglishInflectionalAffix NLMorphologyCollection)
(isa EnglishInflectionalPrefix NLMorphologyCollection)
(isa EnglishInflectionalSuffix NLMorphologyCollection)
(isa InflectionalAffix NLMorphologyCollection)
(isa InflectionalAffixation NLMorphologyCollection)
(isa InflectionalPrefix NLMorphologyCollection)
(isa InflectionalPrefixation NLMorphologyCollection)
(isa InflectionalSuffix NLMorphologyCollection)
(isa InflectionalSuffixation NLMorphologyCollection)
(isa LexicalWordFormationProcess NLMorphologyCollection)
(isa MorphologicalProcess NLMorphologyCollection)
(isa Prefixation NLMorphologyCollection)
(isa RootWord NLMorphologyCollection)
(isa SimpleWord NLMorphologyCollection)
(isa Suffixation NLMorphologyCollection)
(isa AffixCategory NLMorphologyCollection)
(isa AttitudePrefix NLMorphologyCollection)
(isa CategoryChangingAffix NLMorphologyCollection)
(isa DegreePrefix NLMorphologyCollection)
(isa LocativePrefix NLMorphologyCollection)
(isa NegativePrefix NLMorphologyCollection)
(isa NeoClassicalPrefix NLMorphologyCollection)
(isa NonCategoryChangingAffix NLMorphologyCollection)
(isa PejorativePrefix NLMorphologyCollection)
(isa PrefixCategory NLMorphologyCollection)
(isa ReversativePrefix NLMorphologyCollection)
(isa TemporalPrefix NLMorphologyCollection)
(isa AdjectiveProducingSuffix NLMorphologyCollection)
(isa AdverbProducingSuffix NLMorphologyCollection)
(isa DeAdjectivalAdjectiveProducingSuffix NLMorphologyCollection)
(isa DeAdjectivalNounProducingSuffix NLMorphologyCollection)
(isa DeAdjectivalVerbProducingSuffix NLMorphologyCollection)
(isa DenominalAbstractNounProducingSuffix NLMorphologyCollection)
(isa DenominalAdjectiveProducingSuffix NLMorphologyCollection)
(isa DenominalConcreteNounProducingSuffix NLMorphologyCollection)
(isa DenominalVerbProducingSuffix NLMorphologyCollection)
(isa DeverbalAbstractNounProducingSuffix NLMorphologyCollection)
(isa DeverbalAdjectiveProducingSuffix NLMorphologyCollection)
(isa DeverbalConcreteNounProducingSuffix NLMorphologyCollection)
(isa DeverbalNounProducingSuffix NLMorphologyCollection)
(isa NounProducingSuffix NLMorphologyCollection)
(isa SuffixCategory NLMorphologyCollection)
(isa VerbProducingSuffix NLMorphologyCollection)
(isa DeAdjectivalAbstractNounProducingSuffix NLMorphologyCollection)
(isa DeAdjectivalAdverbProducingSuffix NLMorphologyCollection)
(isa DeAdjectivalConcreteNounProducingSuffix NLMorphologyCollection)
(isa DenominalAdverbProducingSuffix NLMorphologyCollection)
(isa CategoryChangingPrefix NLMorphologyCollection)
(isa LinguisticallyImpossibleLexicalWord NLMorphologyCollection)
(isa DeAdjectivalAdjective NLMorphologyCollection)
(isa DeAdjectivalAdverb NLMorphologyCollection)
(isa DeAdjectivalNoun NLMorphologyCollection)
(isa DeAdjectivalVerb NLMorphologyCollection)
(isa DenominalAdjective NLMorphologyCollection)
(isa DenominalAdverb NLMorphologyCollection)
(isa DenominalNoun NLMorphologyCollection)
(isa DenominalVerb NLMorphologyCollection)
(isa DeverbalAdjective NLMorphologyCollection)
(isa DeAdjectivalSuffix NLMorphologyCollection)
(isa DenominalSuffix NLMorphologyCollection)
(isa DeverbalSuffix NLMorphologyCollection)
(isa NLMorphologyCollection CollectionType)
(isa singularVerb-Generic SpeechPartPredicateByNumber)
(isa pluralVerb-Generic SpeechPartPredicateByNumber)
(isa presentTense-Generic SpeechPartPredicateByTense)
(isa pastTense-Generic SpeechPartPredicateByTense)
(isa pastTense-Generic GenericSpeechPartPredicate)
(isa singularVerb-Generic GenericSpeechPartPredicate)
(isa pluralVerb-Generic GenericSpeechPartPredicate)
(isa secondPersonSg-Generic GenericSpeechPartPredicate)
(isa firstPersonSg-Generic GenericSpeechPartPredicate)
(isa thirdPersonSg-Generic GenericSpeechPartPredicate)
(isa WordWithSuffixFn NLMorphologyFunction)
(isa WordWithPrefixFn NLMorphologyFunction)
(isa CompoundWordFn NLMorphologyFunction)
(isa NLMorphologyPredicate PredicateType)
(isa compoundStringDenotesArgInReln DenotesArgInRelnPredicate)
(isa multiWordStringDenotesArgInReln DenotesArgInRelnPredicate)
(isa denotesArgInReln DenotesArgInRelnPredicate)
(isa compoundStringTemplate MultiWordPhrasePredicate)
(isa compoundStringTemplate DenotationTemplatePredicate)
(isa compoundStringDenotesArgInReln MultiWordPhrasePredicate)
(isa adoptiveFather RelationalNounSlot)
(isa adoptiveMother RelationalNounSlot)
(isa multiWordStringTemplate DenotationTemplatePredicate)
(isa denotationTemplate DenotationTemplatePredicate)
(isa multiWordStringTemplate MultiWordPhrasePredicate)
(isa multiWordStringDenotesArgInReln MultiWordPhrasePredicate)
(isa flashPoint RelationalNounSlot)
(isa DitransitivePP-ThatClauseFrame ClausalFrameType)
(isa PredicativeOnlyAdjFrame PredicativeFrame)
(isa ObjectivePronounFrame FrameForPronouns)
(isa SubjectivePronounFrame FrameForPronouns)
(isa DeAdjectivalSuffix SuffixCategory)
(isa DeverbalSuffix SuffixCategory)
(isa DenominalSuffix SuffixCategory)
(isa NLFunction FunctionType)
(isa LinguisticallyImpossibleLexicalWord LexicalWordType)
(isa CategoryChangingPrefix PrefixCategory)
(isa DeAdjectivalAdverbProducingSuffix SuffixCategory)
(isa DenominalAdverbProducingSuffix SuffixCategory)
(isa DeAdjectivalConcreteNounProducingSuffix SuffixCategory)
(isa DeAdjectivalAbstractNounProducingSuffix SuffixCategory)
(isa DeverbalConcreteNounProducingSuffix SuffixCategory)
(isa DeverbalAbstractNounProducingSuffix SuffixCategory)
(isa DeAdjectivalVerbProducingSuffix SuffixCategory)
(isa DenominalVerbProducingSuffix SuffixCategory)
(isa DeAdjectivalAdjectiveProducingSuffix SuffixCategory)
(isa DeverbalAdjectiveProducingSuffix SuffixCategory)
(isa DenominalAdjectiveProducingSuffix SuffixCategory)
(isa DeAdjectivalNounProducingSuffix SuffixCategory)
(isa DeverbalNounProducingSuffix SuffixCategory)
(isa DenominalConcreteNounProducingSuffix SuffixCategory)
(isa DenominalAbstractNounProducingSuffix SuffixCategory)
(isa VerbProducingSuffix SuffixCategory)
(isa AdverbProducingSuffix SuffixCategory)
(isa AdjectiveProducingSuffix SuffixCategory)
(isa NounProducingSuffix SuffixCategory)
(isa InflectionalSuffix SuffixCategory)
(isa EnglishSuffix SuffixCategory)
(isa EnglishInflectionalSuffix SuffixCategory)
(isa EnglishDerivationalSuffix SuffixCategory)
(isa DerivationalSuffix SuffixCategory)
(isa SuffixCategory NLCollection)
(isa NeoClassicalPrefix PrefixCategory)
(isa NumberPrefix PrefixCategory)
(isa TemporalPrefix PrefixCategory)
(isa LocativePrefix PrefixCategory)
(isa AttitudePrefix PrefixCategory)
(isa DegreePrefix PrefixCategory)
(isa PejorativePrefix PrefixCategory)
(isa ReversativePrefix PrefixCategory)
(isa NegativePrefix PrefixCategory)
(isa CategoryChangingAffix AffixCategory)
(isa NonCategoryChangingAffix AffixCategory)
(isa InflectionalPrefix PrefixCategory)
(isa EnglishPrefix PrefixCategory)
(isa EnglishInflectionalPrefix PrefixCategory)
(isa EnglishDerivationalPrefix PrefixCategory)
(isa DerivationalPrefix PrefixCategory)
(isa PrefixCategory NLCollection)
(isa InflectionalAffix AffixCategory)
(isa EnglishInflectionalAffix AffixCategory)
(isa EnglishDerivationalAffix AffixCategory)
(isa EnglishAffix AffixCategory)
(isa DerivationalAffix AffixCategory)
(isa AffixCategory NLCollection)
(isa massedTargetFromUnitSet RelationalNounSlot)
(isa CompoundWordFn DerivedWordFormingFunction)
(isa WordWithSuffixFn DerivedWordFormingFunction)
(isa WordWithPrefixFn DerivedWordFormingFunction)
(isa CompoundWord LexicalWordType)
(isa RootWord LexicalWordType)
(isa SimpleWord LexicalWordType)
(isa InflectionalSuffixation MorphologicalProcess)
(isa DerivationalSuffixation LexicalWordFormationProcess)
(isa Suffixation MorphologicalProcess)
(isa InflectionalPrefixation MorphologicalProcess)
(isa EnglishDerivationalSuffix LinguisticObjectType)
(isa EnglishDerivationalPrefix LinguisticObjectType)
(isa EnglishDerivationalAffix LinguisticObjectType)
(isa Compounding-WordFormationProcess LexicalWordFormationProcess)
(isa ComplexWord LexicalWordType)
(isa DerivedWord LexicalWordType)
(isa DerivationalPrefixation LexicalWordFormationProcess)
(isa Prefixation MorphologicalProcess)
(isa InflectionalAffixation MorphologicalProcess)
(isa DerivationalAffixation LexicalWordFormationProcess)
(isa Affixation-WordFormationProcess MorphologicalProcess)
(isa Conversion-WordFormationProcess LexicalWordFormationProcess)
(isa lexicalWordTypeForLanguage NLPredicate)
(isa wordInLanguage NLPredicate)
(isa FrenchWord LexicalWordTypeByLanguage)
(isa GermanWord LexicalWordTypeByLanguage)
(isa PortugueseWord LexicalWordTypeByLanguage)
(isa FinnishWord LexicalWordTypeByLanguage)
(isa NorwegianWord LexicalWordTypeByLanguage)
(isa SpanishWord LexicalWordTypeByLanguage)
(isa EnglishWord LexicalWordTypeByLanguage)
(isa (WordInLanguageFn ItalianLanguage) LexicalWordTypeByLanguage)
(isa LexicalWordTypeByLanguage CollectionType)
(isa InherentlyVulgarWord LexicalWordType)
(isa denotationRelatedTo-New DenotationPredicate-ExcludedFromNPParser)
(isa ventureCapital RelationalNounSlot)
(isa sizeParameterOfObject RelationalNounSlot)
(isa downtownOf RelationalNounSlot)
(isa collateral RelationalNounSlot)
(isa loanOriginationFee RelationalNounSlot)
(isa insurancePremium RelationalNounSlot)
(isa equityInProperty RelationalNounSlot)
(isa totalDebt RelationalNounSlot)
(isa annualPercentageRate RelationalNounSlot)
(isa mortgageDebt RelationalNounSlot)
(isa longTermDebt RelationalNounSlot)
(isa intendedForUseBy RelationalNounSlot)
(isa densityOfObject RelationalNounSlot)
(isa waterSolubility RelationalNounSlot)
(isa superTaxons RelationalNounSlot)
(isa accountants RelationalNounSlot)
(isa inventedBy RelationalNounSlot)
(isa hasAlumni RelationalNounSlot)
(isa closingCost RelationalNounSlot)
(isa inputsDestroyed RelationalNounSlot)
(isa revenueLost RelationalNounSlot)
(isa excludedTypesOfInsurance RelationalNounSlot)
(isa claimedAmount RelationalNounSlot)
(isa apprentices RelationalNounSlot)
(isa boilingPoint RelationalNounSlot)
(isa freezingPoint RelationalNounSlot)
(isa muzzleVelocity RelationalNounSlot)
(isa naturalResourcesInRegion RelationalNounSlot)
(isa ist RelationalNounSlot)
(isa atomicNumber RelationalNounSlot)
(isa coaSupportingTask RelationalNounSlot)
(isa coaControlMeasure RelationalNounSlot)
(isa unitHasExtendedFrontage RelationalNounSlot)
(isa unitHasInsufficientCombatPower RelationalNounSlot)
(isa coaAddressesMissionEssentialTaskSet RelationalNounSlot)
(isa appraisedValue RelationalNounSlot)
(isa tributaries RelationalNounSlot)
(isa daughterInLaw RelationalNounSlot)
(isa sonInLaw RelationalNounSlot)
(isa hasClimateType RelationalNounSlot)
(isa sisterInLaw RelationalNounSlot)
(isa brotherInLaw RelationalNounSlot)
(isa subOrganizations RelationalNounSlot)
(isa intelligenceOfficer RelationalNounSlot)
(isa manpowerAndPersonnelOfficer RelationalNounSlot)
(isa logisticsOfficer RelationalNounSlot)
(isa atomicSymbol RelationalNounSlot)
(isa coaBlueUnit RelationalNounSlot)
(isa coaRedUnit RelationalNounSlot)
(isa pathTerminus RelationalNounSlot)
(isa pathState RelationalNounSlot)
(isa pathCapacity RelationalNounSlot)
(isa presentTense-Generic RelationalNounSlot)
(isa givenNames RelationalNounSlot)
(isa imports RelationalNounSlot)
(isa criticalEventInCoa RelationalNounSlot)
(isa causes-Underspecified RelationalNounSlot)
(isa hypothesizes RelationalNounSlot)
(isa inReactionTo RelationalNounSlot)
(isa defenseBudgetExpenditures RelationalNounSlot)
(isa conflictLevel RelationalNounSlot)
(isa negationPreds RelationalNounSlot)
(isa inPreparationFor RelationalNounSlot)
(isa unitOrientation RelationalNounSlot)
(isa reconActivityOnType RelationalNounSlot)
(isa reportUpdate RelationalNounSlot)
(isa reportCurrentAtTime RelationalNounSlot)
(isa massedTargetFromUnitType RelationalNounSlot)
(isa projectileTypeInShooting RelationalNounSlot)
(isa launcherTypeInShooting RelationalNounSlot)
(isa rateOfFireByAgent RelationalNounSlot)
(isa primarySupervisor RelationalNounSlot)
(isa singular-Generic RelationalNounSlot)
(isa widowOf RelationalNounSlot)
(isa discountPointsValueOnLoan RelationalNounSlot)
(isa breakEvenPoint RelationalNounSlot)
(isa hasLeaders RelationalNounSlot)
(isa primeMinister RelationalNounSlot)
(isa adaptorMolecule RelationalNounSlot)
(isa situationConstituents RelationalNounSlot)
(isa patient-Generic RelationalNounSlot)
(isa objectConfiguredDuring RelationalNounSlot)
(isa objectAttacked RelationalNounSlot)
(isa evaluee-Direct RelationalNounSlot)
(isa transferredObject RelationalNounSlot)
(isa trajectoryPassesThrough RelationalNounSlot)
(isa postActors RelationalNounSlot)
(isa objectEmitted RelationalNounSlot)
(isa objectTakenCareOf RelationalNounSlot)
(isa objectSelected RelationalNounSlot)
(isa objectOfStateChange RelationalNounSlot)
(isa deviceUsed RelationalNounSlot)
(isa exposureToType RelationalNounSlot)
(isa motherInLaw RelationalNounSlot)
(isa hasPhysicalAttractiveness RelationalNounSlot)
(isa economicStability RelationalNounSlot)
(isa interestRateCeiling RelationalNounSlot)
(isa lastName RelationalNounSlot)
(isa familyName RelationalNounSlot)
(isa fullName RelationalNounSlot)
(isa averageDepth RelationalNounSlot)
(isa firstName RelationalNounSlot)
(isa grossDomesticProductOf RelationalNounSlot)
(isa propertyTaxRate RelationalNounSlot)
(isa basicPriceForType RelationalNounSlot)
(isa powerRating RelationalNounSlot)
(isa salesTax RelationalNounSlot)
(isa transferOutSubEvent RelationalNounSlot)
(isa objectActedOn RelationalNounSlot)
(isa providerOfService RelationalNounSlot)
(isa externalParts RelationalNounSlot)
(isa deliberateActors RelationalNounSlot)
(isa preActors RelationalNounSlot)
(isa unchangedActors RelationalNounSlot)
(isa objectMoving RelationalNounSlot)
(isa eventOccursNear RelationalNounSlot)
(isa bodilyDoer RelationalNounSlot)
(isa nonDeliberateActors RelationalNounSlot)
(isa commerciallyUsefulParts RelationalNounSlot)
(isa areaOfObject RelationalNounSlot)
(isa physicalPortions RelationalNounSlot)
(isa perceivedThings RelationalNounSlot)
(isa politicalStability RelationalNounSlot)
(isa primaryObjectMoving RelationalNounSlot)
(isa castMembers RelationalNounSlot)
(isa intendedBeneficiary RelationalNounSlot)
(isa distributionSource RelationalNounSlot)
(isa objectSides RelationalNounSlot)
(isa agentDeployed-BCW RelationalNounSlot)
(isa harmfulSubstanceExposedTo RelationalNounSlot)
(isa organismExposedToHarmfulSubstance RelationalNounSlot)
(isa organismGroupExposedToHarmfulSubstance RelationalNounSlot)
(isa objectExposed RelationalNounSlot)
(isa infectionAffectsPart RelationalNounSlot)
(isa subjectOfMedicalProcedure RelationalNounSlot)
(isa infectingSource RelationalNounSlot)
(isa infectingActsOn RelationalNounSlot)
(isa temporallyIntersects RelationalNounSlot)
(isa stuffInExposureEvent RelationalNounSlot)
(isa resourceProcessor-FunctionalRole RelationalNounSlot)
(isa resourceDistributor-FunctionalRole RelationalNounSlot)
(isa informationChannel-FunctionalRole RelationalNounSlot)
(isa insulatingAbility RelationalNounSlot)
(isa intendedMaleficiary RelationalNounSlot)
(isa chemicalReactants RelationalNounSlot)
(isa chemicalProducts RelationalNounSlot)
(isa templateGene RelationalNounSlot)
(isa mainIngredientsSet RelationalNounSlot)
(isa longTermInformationStore-FunctionalRole RelationalNounSlot)
(isa residentAlien RelationalNounSlot)
(isa consumerPriceIndex-USA RelationalNounSlot)
(isa adjustmentPeriod RelationalNounSlot)
(isa amendatoryLanguage RelationalNounSlot)
(isa lockInPeriod RelationalNounSlot)
(isa oddDaysInterest RelationalNounSlot)
(isa optionPrice RelationalNounSlot)
(isa processingTimeForLoan RelationalNounSlot)
(isa qualifyingRatio RelationalNounSlot)
(isa counterOffer RelationalNounSlot)
(isa nonpermanentResidentAlien RelationalNounSlot)
(isa insuredItem RelationalNounSlot)
(isa pointOfSale RelationalNounSlot)
(isa highCostAreaForRegion RelationalNounSlot)
(isa lowCostAreaForRegion RelationalNounSlot)
(isa moderateCostAreaForRegion RelationalNounSlot)
(isa investmentProperty RelationalNounSlot)
(isa numberOfUnits RelationalNounSlot)
(isa primaryResidence RelationalNounSlot)
(isa creditLoss RelationalNounSlot)
(isa creditScore RelationalNounSlot)
(isa creditStatus RelationalNounSlot)
(isa earnedIncomeCredit RelationalNounSlot)
(isa monthlyPayment RelationalNounSlot)
(isa physicalParts RelationalNounSlot)
(isa componentIF RelationalNounSlot)
(isa serviceCharge RelationalNounSlot)
(isa bookValue RelationalNounSlot)
(isa birthRate RelationalNounSlot)
(isa rationalApproximation RelationalNounSlot)
(isa fertilityRate RelationalNounSlot)
(isa near RelationalNounSlot)
(isa organizationHead RelationalNounSlot)
(isa anatomicalParts RelationalNounSlot)
(isa wingSpan RelationalNounSlot)
(isa turnRadius RelationalNounSlot)
(isa cWIllocutionaryForce RelationalNounSlot)
(isa highIncomeBorrower RelationalNounSlot)
(isa lowIncomeBorrower RelationalNounSlot)
(isa originatorOfLoan RelationalNounSlot)
(isa performedBy RelationalNounSlot)
(isa doneBy RelationalNounSlot)
(isa interviewer RelationalNounSlot)
(isa seller RelationalNounSlot)
(isa consumerInRelationship RelationalNounSlot)
(isa presenter RelationalNounSlot)
(isa mediators RelationalNounSlot)
(isa competingAgents RelationalNounSlot)
(isa residesInRegion RelationalNounSlot)
(isa contenders RelationalNounSlot)
(isa directingAgent RelationalNounSlot)
(isa usesObject RelationalNounSlot)
(isa assistingAgent RelationalNounSlot)
(isa recipientOfInfo RelationalNounSlot)
(isa emitter RelationalNounSlot)
(isa suppliers RelationalNounSlot)
(isa sellingPerformer RelationalNounSlot)
(isa exchangers RelationalNounSlot)
(isa officiator RelationalNounSlot)
(isa donors RelationalNounSlot)
(isa conveyor-Generic RelationalNounSlot)
(isa creditor RelationalNounSlot)
(isa createdBy RelationalNounSlot)
(isa reproducer-FunctionalRole RelationalNounSlot)
(isa beneficiary-Generic RelationalNounSlot)
(isa maleficiary RelationalNounSlot)
(isa income RelationalNounSlot)
(isa packaging RelationalNounSlot)
(isa rigidityOfObject RelationalNounSlot)
(isa volumeOfObject RelationalNounSlot)
(isa electricalResistanceOfObject RelationalNounSlot)
(isa businessCapital RelationalNounSlot)
(isa principal RelationalNounSlot)
(isa degreeOfTrafficability RelationalNounSlot)
(isa tuition RelationalNounSlot)
(isa rateOfInflation RelationalNounSlot)
(isa objectStability RelationalNounSlot)
(isa subCultures RelationalNounSlot)
(isa failureForAgents RelationalNounSlot)
(isa totalCharge RelationalNounSlot)
(isa preconditionFor-Props RelationalNounSlot)
(isa causes-ThingProp RelationalNounSlot)
(isa monumentHonors RelationalNounSlot)
(isa infectionHost RelationalNounSlot)
(isa internalParts RelationalNounSlot)
(isa subEvents RelationalNounSlot)
(isa subGroups RelationalNounSlot)
(isa ingredients RelationalNounSlot)
(isa censusEthnicClassification RelationalNounSlot)
(isa salesCommission RelationalNounSlot)
(isa qualifications RelationalNounSlot)
(isa subscribers RelationalNounSlot)
(isa boss RelationalNounSlot)
(isa pseudonym RelationalNounSlot)
(isa orientation RelationalNounSlot)
(isa coworkers RelationalNounSlot)
(isa medicalSpecialty RelationalNounSlot)
(isa dependents RelationalNounSlot)
(isa highwayFuelConsumption RelationalNounSlot)
(isa approximatePay RelationalNounSlot)
(isa cohabitants RelationalNounSlot)
(isa fanOf RelationalNounSlot)
(isa birthPlace RelationalNounSlot)
(isa subjectOfWrittenMaterial RelationalNounSlot)
(isa businessPartners RelationalNounSlot)
(isa roommates RelationalNounSlot)
(isa titleOfWork RelationalNounSlot)
(isa citizens RelationalNounSlot)
(isa salesRate RelationalNounSlot)
(isa customers RelationalNounSlot)
(isa acquaintedWith RelationalNounSlot)
(isa hasRooms RelationalNounSlot)
(isa informationArtifactAuthor RelationalNounSlot)
(isa objectFoundInLocation RelationalNounSlot)
(isa responsibleFor RelationalNounSlot)
(isa cityFuelConsumption RelationalNounSlot)
(isa policyHolder RelationalNounSlot)
(isa subordinates RelationalNounSlot)
(isa directionOfTranslation-Throughout RelationalNounSlot)
(isa averageProfit RelationalNounSlot)
(isa perspectives RelationalNounSlot)
(isa velocityOfObject RelationalNounSlot)
(isa hero RelationalNounSlot)
(isa headquarters RelationalNounSlot)
(isa physicalQuarters RelationalNounSlot)
(isa insuringAgent RelationalNounSlot)
(isa contacts RelationalNounSlot)
(isa winner-First RelationalNounSlot)
(isa mileageDriven RelationalNounSlot)
(isa arity RelationalNounSlot)
(isa pitchLevel RelationalNounSlot)
(isa clients RelationalNounSlot)
(isa intendedAudience RelationalNounSlot)
(isa motionPathway-Complete RelationalNounSlot)
(isa subsetOf RelationalNounSlot)
(isa employees RelationalNounSlot)
(isa opponents RelationalNounSlot)
(isa derivedFrom RelationalNounSlot)
(isa teammates RelationalNounSlot)
(isa subFields RelationalNounSlot)
(isa titleOfPerson RelationalNounSlot)
(isa causes-EventEvent RelationalNounSlot)
(isa hasMembers RelationalNounSlot)
(isa discount RelationalNounSlot)
(isa circumferenceOfObject RelationalNounSlot)
(isa flammabilityOfObject RelationalNounSlot)
(isa massOfObject RelationalNounSlot)
(isa qualityOfProduct RelationalNounSlot)
(isa volatilityOfSubstance RelationalNounSlot)
(isa radius RelationalNounSlot)
(isa diameterOfObject RelationalNounSlot)
(isa thicknessOfObject RelationalNounSlot)
(isa lengthOfObject RelationalNounSlot)
(isa depthOfObject RelationalNounSlot)
(isa heightOfObject RelationalNounSlot)
(isa endingPoint RelationalNounSlot)
(isa startingPoint RelationalNounSlot)
(isa penpals RelationalNounSlot)
(isa physicalCopies RelationalNounSlot)
(isa lastSubEvents RelationalNounSlot)
(isa eventOutcomes RelationalNounSlot)
(isa episodes RelationalNounSlot)
(isa streetAddressText RelationalNounSlot)
(isa buyingAgent RelationalNounSlot)
(isa cardinality RelationalNounSlot)
(isa expectedWinner RelationalNounSlot)
(isa pathGrade RelationalNounSlot)
(isa altitudeAboveSeaLevel RelationalNounSlot)
(isa meanOfDistribution RelationalNounSlot)
(isa toughnessOfObject RelationalNounSlot)
(isa basicPrice RelationalNounSlot)
(isa iQ RelationalNounSlot)
(isa fanout RelationalNounSlot)
(isa cost RelationalNounSlot)
(isa ownsWealth RelationalNounSlot)
(isa pulseRate RelationalNounSlot)
(isa numberOfInhabitants RelationalNounSlot)
(isa duration RelationalNounSlot)
(isa speedOfObject-Translation RelationalNounSlot)
(isa age RelationalNounSlot)
(isa commissionPercentage RelationalNounSlot)
(isa interestRate RelationalNounSlot)
(isa salaryIncome RelationalNounSlot)
(isa interestIncome RelationalNounSlot)
(isa biases RelationalNounSlot)
(isa opinions RelationalNounSlot)
(isa beliefs RelationalNounSlot)
(isa desires RelationalNounSlot)
(isa intends RelationalNounSlot)
(isa tastes RelationalNounSlot)
(isa supportingObject RelationalNounSlot)
(isa choices RelationalNounSlot)
(isa topicOfInfoTransfer RelationalNounSlot)
(isa authorizationFor RelationalNounSlot)
(isa itemCopied RelationalNounSlot)
(isa fromLocation RelationalNounSlot)
(isa outputsRemaining RelationalNounSlot)
(isa outputsCreated RelationalNounSlot)
(isa victim RelationalNounSlot)
(isa perpetrator RelationalNounSlot)
(isa offspringActors RelationalNounSlot)
(isa buyer RelationalNounSlot)
(isa products RelationalNounSlot)
(isa defendants RelationalNounSlot)
(isa passengers RelationalNounSlot)
(isa longshots RelationalNounSlot)
(isa litigants RelationalNounSlot)
(isa target RelationalNounSlot)
(isa socialParticipants RelationalNounSlot)
(isa toPossessor RelationalNounSlot)
(isa toLocation RelationalNounSlot)
(isa plaintiffs RelationalNounSlot)
(isa byProducts RelationalNounSlot)
(isa origin-RoundTrip RelationalNounSlot)
(isa catalyst RelationalNounSlot)
(isa transportees RelationalNounSlot)
(isa parentActors RelationalNounSlot)
(isa outputs RelationalNounSlot)
(isa hostOfEvent RelationalNounSlot)
(isa bodyTemperature RelationalNounSlot)
(isa loves RelationalNounSlot)
(isa frequencyOfWave RelationalNounSlot)
(isa topicOf RelationalNounSlot)
(isa boundary-FunctionalRole RelationalNounSlot)
(isa executive-FunctionalRole RelationalNounSlot)
(isa exports RelationalNounSlot)
(isa subProcesses RelationalNounSlot)
(isa actors RelationalNounSlot)
(isa president RelationalNounSlot)
(isa mother RelationalNounSlot)
(isa affiliatedWith RelationalNounSlot)
(isa chosenItem RelationalNounSlot)
(isa eventHonors RelationalNounSlot)
(isa eventOccursAt RelationalNounSlot)
(isa chairperson-OrganizationalRole RelationalNounSlot)
(isa investmentReturn RelationalNounSlot)
(isa goals RelationalNounSlot)
(isa characterInCW RelationalNounSlot)
(isa widthOfObject RelationalNounSlot)
(isa annualDeathRate RelationalNounSlot)
(isa jurisdictionRegion RelationalNounSlot)
(isa allies RelationalNounSlot)
(isa solvent RelationalNounSlot)
(isa constituents RelationalNounSlot)
(isa parts RelationalNounSlot)
(isa instrument-Generic RelationalNounSlot)
(isa assets RelationalNounSlot)
(isa owns RelationalNounSlot)
(isa collaborators RelationalNounSlot)
(isa birthDate RelationalNounSlot)
(isa premier RelationalNounSlot)
(isa introductionTo RelationalNounSlot)
(isa hasHabitat RelationalNounSlot)
(isa considersAsEnemy RelationalNounSlot)
(isa hasPets RelationalNounSlot)
(isa neighbors RelationalNounSlot)
(isa friends RelationalNounSlot)
(isa boyfriend RelationalNounSlot)
(isa girlfriend RelationalNounSlot)
(isa mate RelationalNounSlot)
(isa sexualPartners RelationalNounSlot)
(isa relatives RelationalNounSlot)
(isa relativesForUSTaxPurposes RelationalNounSlot)
(isa grandfathers RelationalNounSlot)
(isa cohabitingFamilyMembers RelationalNounSlot)
(isa spouse RelationalNounSlot)
(isa wife RelationalNounSlot)
(isa biologicalRelatives RelationalNounSlot)
(isa siblings RelationalNounSlot)
(isa twins RelationalNounSlot)
(isa twins-Fraternal RelationalNounSlot)
(isa twins-Identical RelationalNounSlot)
(isa fullSiblings RelationalNounSlot)
(isa hermaphroditicSiblings RelationalNounSlot)
(isa sisters RelationalNounSlot)
(isa brothers RelationalNounSlot)
(isa biologicalOffspring RelationalNounSlot)
(isa biologicalMother RelationalNounSlot)
(isa biologicalFather RelationalNounSlot)
(isa father RelationalNounSlot)
(isa ancestors RelationalNounSlot)
(isa biologicalSons RelationalNounSlot)
(isa grandchildren RelationalNounSlot)
(isa grandsons RelationalNounSlot)
(isa granddaughters RelationalNounSlot)
(isa children RelationalNounSlot)
(isa childrenForUSTaxPurposes RelationalNounSlot)
(isa daughters RelationalNounSlot)
(isa sons RelationalNounSlot)
(isa adoptedChildren RelationalNounSlot)
(isa grandmothers RelationalNounSlot)
(isa uncles RelationalNounSlot)
(isa aunts RelationalNounSlot)
(isa cousins RelationalNounSlot)
(isa nieces RelationalNounSlot)
(isa nephews RelationalNounSlot)
(isa stepRelatives RelationalNounSlot)
(isa coreRelatives RelationalNounSlot)
(isa HowManyQueryingFn IntermediateVocabFunction)
(isa BestDetNbarFn-Indefinite TermMacroFunction)
(isa BestDetNbarFn-Definite TermMacroFunction)
(isa psRuleTemplateBindings NLPredicate)
(isa WordInLanguageFn NLFunction)
(isa TransitiveWhClauseFrame ClausalFrameType)
(isa TransitiveFiniteClauseFrame ClausalFrameType)
(isa DitransitiveNP-ThatClauseFrame ClausalFrameType)
(isa VariableFn IntermediateVocabFunction)
(isa simpleNounStrings GenericSpeechPartPredicate)
(isa prenominalModifier GenericSpeechPartPredicate)
(isa ProperName-NLAttr IntermediateVocabAttribute)
(isa ProperName-NLAttr NLDefinitenessAttribute)
(isa StopTool-NLRequest NLRequestAttribute)
(isa termDoesntNeedLexification NLPredicate)
(isa instancesDontNeedLexification NLPredicate)
(isa ThirdPerson-NLAttr NLPersonAttribute)
(isa ThirdPerson-NLAttr IntermediateVocabAttribute)
(isa SecondPerson-NLAttr IntermediateVocabAttribute)
(isa SecondPerson-NLAttr NLPersonAttribute)
(isa FirstPerson-NLAttr NLPersonAttribute)
(isa FirstPerson-NLAttr IntermediateVocabAttribute)
(isa Feminine-NLAttr NLGenderAttribute)
(isa Feminine-NLAttr IntermediateVocabAttribute)
(isa Masculine-NLAttr IntermediateVocabAttribute)
(isa Masculine-NLAttr NLGenderAttribute)
(isa Neuter-NLAttr IntermediateVocabAttribute)
(isa Neuter-NLAttr NLGenderAttribute)
(isa Ungendered-NLAttr NLGenderAttribute)
(isa Ungendered-NLAttr IntermediateVocabAttribute)
(isa subjectRoles NLRolePredicate)
(isa preferredSubjectRole NLRolePredicate)
(isa preferredIndirectObjectRole NLRolePredicate)
(isa preferredDirectObjectRole NLRolePredicate)
(isa indirectObjectRoles NLRolePredicate)
(isa AbortTool-NLRequest NLRequestAttribute)
(isa StartTool-NLRequest NLRequestAttribute)
(isa NLRequestFn IntermediateVocabFunction)
(isa Ignorance-NLResponse NLResponseAttribute)
(isa Incorrect-NLResponse NLResponseAttribute)
(isa Correct-NLResponse NLResponseAttribute)
(isa Negative-NLResponse NLResponseAttribute)
(isa Affirmative-NLResponse NLResponseAttribute)
(isa TheVPParse IntermediateVocabFunction)
(isa Generic-NLAttr NLNumberAttribute)
(isa Generic-NLAttr IntermediateVocabAttribute)
(isa SpeechPartOfWordFormFn TermMacroFunction)
(isa ConcatenatePhrasesFn VariableArityFunction)
(isa NounPhrase NLPhraseType)
(isa (PhraseFn Determiner) NLPhraseType)
(isa (PhraseFn Adverb) NLPhraseType)
(isa (PhraseFn Preposition) NLPhraseType)
(isa (PhraseFn Noun) NLPhraseType)
(isa (PhraseFn Adjective-Gradable) NLPhraseType)
(isa (PhraseFn Verb) NLPhraseType)
(isa untensed GenericSpeechPartPredicate)
(isa untensed SpeechPartPredicate-ExcludedFromNPParser)
(isa NLPhraseWithFrameFn TermMacroFunction)
(isa Never-NLAttr NLNegationAttribute)
(isa Never-NLAttr IntermediateVocabAttribute)
(isa NLWordFormWithFrameFn TermMacroFunction)
(isa PhraseFn-Bar1 TermMacroFunction)
(isa PhraseFn TermMacroFunction)
(isa PhraseFn CollectionDenotingFunction)
(isa PhraseStructureConstraint-Syntactic LinguisticObjectType)
(isa tensed SpeechPartPredicate-ExcludedFromNPParser)
(isa tensed GenericSpeechPartPredicate)
(isa presentTense-Generic SpeechPartPredicate-ExcludedFromNPParser)
(isa NounCompoundRuleConstraint LinguisticObjectType)
(isa RelevantGroup-NLAttr NLSemAttribute)
(isa RelevantGroup-NLAttr IntermediateVocabAttribute)
(isa RelevantInstance-NLAttr IntermediateVocabAttribute)
(isa RelevantInstance-NLAttr NLSemAttribute)
(isa RelevantSpec-NLAttr NLSemAttribute)
(isa RelevantSpec-NLAttr IntermediateVocabAttribute)
(isa UnmarkedNumber-NLAttr NLNumberAttribute)
(isa Mass-NLAttr IntermediateVocabAttribute)
(isa Mass-NLAttr NLNumberAttribute)
(isa Singular-NLAttr NLNumberAttribute)
(isa Singular-NLAttr IntermediateVocabAttribute)
(isa Plural-NLAttr NLNumberAttribute)
(isa Plural-NLAttr IntermediateVocabAttribute)
(isa Definite-NLAttr NLDefinitenessAttribute)
(isa Definite-NLAttr IntermediateVocabAttribute)
(isa Indefinite-NLAttr NLDefinitenessAttribute)
(isa Indefinite-NLAttr IntermediateVocabAttribute)
(isa compoundSemTrans HeadInitialMultiWordForFormulaPred)
(isa ThirdPerson GrammaticalPersonFeature)
(isa SecondPerson GrammaticalPersonFeature)
(isa FirstPerson GrammaticalPersonFeature)
(isa compoundSemTrans SemTransPred)
(isa checkedViaNLTool BookkeepingPredicateForAnyThing)
(isa checkedViaAdjTool BookkeepingPredicateForAnyThing)
(isa NounCompoundRule LinguisticObjectType)
(isa countryName-ShortForm ProperNamePredicateForNPParser)
(isa verbSemTransTotal SemTransPred)
(isa verbSemTransPartial SemTransPred)
(isa properNounSemTrans SemTransPred)
(isa UnderstoodReciprocalObjectAlternation TransitivityAlternationType)
(isa massNounSemTrans SemTransPred)
(isa agentiveNounSemTrans SemTransPred)
(isa nounSemTrans SemTransPred)
(isa definiteDescriptions StringIndexingSlot)
(isa BenefactiveAlternation NonTransitiveAlternationType)
(isa InstrumentSubjectAlternation ObliqueSubjectAlternationType)
(isa TransitiveNPFrame PassivizableFrame)
(isa ObligatoryReflexiveObjectFrame PassivizableFrame)
(isa ComputerLanguage-Register LinguisticRegister)
(isa PsychologyPublicationLanguage-Register LinguisticRegister)
(isa PornographyLanguage-Register LinguisticRegister)
(isa LinguisticsLanguage-Register LinguisticRegister)
(isa InvestmentMarketLanguage-Register LinguisticRegister)
(isa MedicalLanguage-Register LinguisticRegister)
(isa LegalLanguage-Register LinguisticRegister)
(isa With-AgainstAlternation NonTransitiveAlternationType)
(isa ReciprocalIntransitiveAlternation NonTransitiveAlternationType)
(isa ReciprocalTransitiveAlternation NonTransitiveAlternationType)
(isa ReciprocalAlternation NonTransitiveAlternationType)
(isa CreationAndTransformationIntransitiveAlternation NonTransitiveAlternationType)
(isa CreationAndTransformationTransitiveAlternation NonTransitiveAlternationType)
(isa CreationAndTransformationAlternation NonTransitiveAlternationType)
(isa LocativeAlternation NonTransitiveAlternationType)
(isa DoubleObjectAlternation NonTransitiveAlternationType)
(isa ConativeAlternation TransitivityAlternationType)
(isa UnexpressedObjectAlternation TransitivityAlternationType)
(isa Substance-SourceAlternation TransitivityAlternationType)
(isa adjSemTrans SemTransPred)
(isa nounPrep SemTransPred)
(isa lightVerb-TransitiveSemTrans SemTransPred)
(isa nonCompositionalVerbSemTrans SemTransPred)
(isa verbSemTrans SemTransPred)
(isa adverbSemTrans SemTransPred)
(isa adjSemTrans-Restricted SemTransPred)
(isa WordInLanguageFn CollectionDenotingFunction)
(isa countryName-LocalLongForm ProperNamePredicate-Strict)
(isa countryName-LocalShortForm ProperNamePredicate-Strict)
(isa countryName-LongForm ProperNamePredicate-Strict)
(isa countryName-ShortForm ProperNamePredicate-Strict)
(isa epistleAddresseeText StringIndexingSlot)
(isa TransitiveInfinitivePhraseNPGapFrame PleonasticInfinitivePhraseFrameType)
(isa middleName StringIndexingSlot)
(isa givenNames StringIndexingSlot)
(isa pseudonym StringIndexingSlot)
(isa scientificName StringIndexingSlot)
(isa countryName-LocalLongForm StringIndexingSlot)
(isa countryName-LocalShortForm StringIndexingSlot)
(isa countryName-LongForm StringIndexingSlot)
(isa UnderstoodReciprocalObjectFrame FrameForVerbs)
(isa UnderstoodReflexiveObjectFrame FrameForVerbs)
(isa MiddleAlternation TransitivityAlternationType)
(isa ObjOfTrans-SubjOfIntrans TransitivityAlternationType)
(isa InducedActionAlternation TransitivityAlternationType)
(isa Causative-InchoativeAlternation TransitivityAlternationType)
(strictlyFunctionalInArgs ncRuleTemplate 2)
(resultQuotedIsa QuantityFn IndeterminateTerm)
(prettyString UnixOS "UNIX operating system")
(quotedIsa subcatFrameArity NLTerm)
(prettyString (SubcollectionOfWithRelationToFn ComputerAccount accountForProgram MicrosoftActiveDirectoryDomainServices-ProgramCW) "active directory account")
(languageHasRootLexicon EnglishLanguage GeneralEnglishMt)
(quotedIsa TermParaphraseFn-TemporalLocation-Day TermSuggestorExpertOnlyTerm)
(prettyString computerAccountStorageShare "computer account storage limit")
(arg3QuotedIsa adverbSemTransTemplate CycLExpression-Assertible)
(argQuotedIsa adverbSemTransTemplate 3 CycLExpression-Assertible)
(arg5QuotedIsa compoundSemTrans CycLExpression-Assertible)
(argQuotedIsa compoundSemTrans 5 CycLExpression-Assertible)
(arg3QuotedIsa nnRule CycLExpression-Assertible)
(argQuotedIsa nnRule 3 CycLExpression-Assertible)
(arg2QuotedIsa nnRule CycLExpression-Assertible)
(argQuotedIsa nnRule 2 CycLExpression-Assertible)
(implies (and (genlPreds ?PRED prettyString) (?PRED ?TERM ?STRING)) (prettyString ?TERM ?STRING))
(argGenl compoundStringDenotesArgInReln 3 Noun)
(arg3Genl compoundStringDenotesArgInReln Noun)
(argGenl multiWordStringDenotesArgInReln 3 Noun)
(arg3Genl multiWordStringDenotesArgInReln Noun)
(argGenl denotesArgInReln 2 Noun)
(arg2Genl denotesArgInReln Noun)
(argGenl quotedInstancesDontNeedLexification 1 Thing)
(arg1Genl quotedInstancesDontNeedLexification Thing)
(genlInverse wordInLanguage subInformation)
(quotedIsa commonNounStrings TermSuggestorExpertOnlyTerm)
(quotedIsa gerund-Generic TermSuggestorExpertOnlyTerm)
(quotedIsa TermParaphraseFn-TemporalLocation-Date TermSuggestorExpertOnlyTerm)
(quotedIsa nounStringOccursAsObjectForVerbStringsInCorpus TermSuggestorExpertOnlyTerm)
(quotedIsa nounStringOccursAsSubjectForVerbStringsInCorpus TermSuggestorExpertOnlyTerm)
(quotedIsa nounLearnerConjecturedTypeForNounFromCorpus TermSuggestorExpertOnlyTerm)
(quotedIsa nounLearnerConjecturedTypeFromNounUsages TermSuggestorExpertOnlyTerm)
(quotedIsa nounLearnerConjecturedTypeForNoun TermSuggestorExpertOnlyTerm)
(quotedIsa multiWordStringSenseExtensionBrokeredByPred-Inverse TermSuggestorExpertOnlyTerm)
(quotedIsa multiWordStringSenseExtensionBrokeredByPred TermSuggestorExpertOnlyTerm)
(quotedIsa compoundStringSenseExtension TermSuggestorExpertOnlyTerm)
(quotedIsa multiWordStringSenseExtension TermSuggestorExpertOnlyTerm)
(quotedIsa subordinatingConjunctionSemTrans TermSuggestorExpertOnlyTerm)
(quotedIsa conceptInSystemDefaultDisplayString TermSuggestorExpertOnlyTerm)
(quotedIsa SubFunctionTypePreservingRelnInArgFn TermSuggestorExpertOnlyTerm)
(quotedIsa parts-Underspecified TermSuggestorExpertOnlyTerm)
(quotedIsa HypothesizedPrepositionSenseFn ForwardReifiableCycLFunctor)
(quotedIsa HypothesizedAdjectiveSenseFn ForwardReifiableCycLFunctor)
(quotedIsa ThingDescribableAsFn ForwardReifiableCycLFunctor)
(resultQuotedIsa Postmodifier_EdFormFn IndexicalConcept)
(argQuotedIsa nBarPresupposesOfDenotWithRemainder 4 Set-Extensional)
(arg4QuotedIsa nBarPresupposesOfDenotWithRemainder Set-Extensional)
(argQuotedIsa prepositionalPhrasePresupposesWithRemainder 4 Set-Extensional)
(arg4QuotedIsa prepositionalPhrasePresupposesWithRemainder Set-Extensional)
(argQuotedIsa phraseDenotesAndPresupposes 3 Set-Extensional)
(arg3QuotedIsa phraseDenotesAndPresupposes Set-Extensional)
(argQuotedIsa nBarPresupposesOfDenotWithRemainder 3 Set-Extensional)
(arg3QuotedIsa nBarPresupposesOfDenotWithRemainder Set-Extensional)
(argQuotedIsa prepositionalPhrasePresupposesWithRemainder 3 Set-Extensional)
(arg3QuotedIsa prepositionalPhrasePresupposesWithRemainder Set-Extensional)
(argQuotedIsa webFrequencyForLexicalAssertion 1 CycLNLSemanticAssertion)
(arg1QuotedIsa webFrequencyForLexicalAssertion CycLNLSemanticAssertion)
(argQuotedIsa followsFromPrecedingDiscourse 1 CycLSentence-Assertible)
(arg1QuotedIsa followsFromPrecedingDiscourse CycLSentence-Assertible)
(argQuotedIsa ncRuleTemplate 2 CycLTerm)
(arg2QuotedIsa ncRuleTemplate CycLTerm)
(argQuotedIsa TheRNPParse 2 CycLTerm)
(arg2QuotedIsa TheRNPParse CycLTerm)
(argQuotedIsa affixSemantics 2 CycLNonAtomicTerm)
(arg2QuotedIsa affixSemantics CycLNonAtomicTerm)
(argQuotedIsa keywordForConstant 1 CycLReifiableDenotationalTerm)
(arg1QuotedIsa keywordForConstant CycLReifiableDenotationalTerm)
(argQuotedIsa webSearchableStrings 1 CycLReifiableDenotationalTerm)
(arg1QuotedIsa webSearchableStrings CycLReifiableDenotationalTerm)
(arg2QuotedIsa psRuleSemanticsHandler CycLSubLSymbol)
(argQuotedIsa psRuleSemanticsHandler 2 CycLSubLSymbol)
(argQuotedIsa HowManyQueryingFn 2 CycLVariable)
(arg2QuotedIsa HowManyQueryingFn CycLVariable)
(argQuotedIsa VariableFn 1 CycLVariable)
(arg1QuotedIsa VariableFn CycLVariable)
(argQuotedIsa HowManyQueryingFn 1 CycLVariable)
(arg1QuotedIsa HowManyQueryingFn CycLVariable)
(argQuotedIsa QuantityVariableFn 1 CycLVariable)
(arg1QuotedIsa QuantityVariableFn CycLVariable)
(argQuotedIsa QuantityFn 1 CycLVariable)
(arg1QuotedIsa QuantityFn CycLVariable)
(argQuotedIsa subcatFrameDependentKeyword 3 SubLKeyword)
(arg3QuotedIsa subcatFrameDependentKeyword SubLKeyword)
(argQuotedIsa subcatFrameKeywords 2 SubLKeyword)
(arg2QuotedIsa subcatFrameKeywords SubLKeyword)
(argQuotedIsa PSBindingFn 2 SubLKeyword)
(arg2QuotedIsa PSBindingFn SubLKeyword)
(argQuotedIsa PSBindingFn-TypeLevel 2 SubLKeyword)
(arg2QuotedIsa PSBindingFn-TypeLevel SubLKeyword)
(argQuotedIsa regularSuffix 3 SubLString)
(arg3QuotedIsa regularSuffix SubLString)
(argQuotedIsa keywordForConstant 2 SubLString)
(arg2QuotedIsa keywordForConstant SubLString)
(argQuotedIsa nnRule 1 SubLString)
(arg1QuotedIsa nnRule SubLString)
(argQuotedIsa inducedTypicalSubjectTypeOfVerb 1 SubLString)
(arg1QuotedIsa inducedTypicalSubjectTypeOfVerb SubLString)
(argQuotedIsa inducedTypicalObjectTypeOfVerb 1 SubLString)
(arg1QuotedIsa inducedTypicalObjectTypeOfVerb SubLString)
(transitiveViaArg phraseMeetsTermPhrasesConstraint genlPreds 2)
(transitiveViaArg phraseMeetsTermPhrasesConstraint genls 2)
(strictlyFunctionalInArgs psRuleCategory 2)
(strictlyFunctionalInArgs prefixString 2)
(strictlyFunctionalInArgs psRuleSemanticsFromDtr 2)
(strictlyFunctionalInArgs nnRule 2)
(strictlyFunctionalInArgs countryName-LongForm 2)
(strictlyFunctionalInArgs derivedUsingAffix 2)
(strictlyFunctionalInArgs affixString 2)
(strictlyFunctionalInArgs preferredBaseForm 2)
(strictlyFunctionalInArgs nnRule 3)
(strictlyFunctionalInArgs derivedUsingSuffix 2)
(strictlyFunctionalInArgs derivedUsingPrefix 2)
(strictlyFunctionalInArgs psRuleSemanticsHandler 2)
(strictlyFunctionalInArgs lexicalWordTypeForLanguage 2)
(strictlyFunctionalInArgs headsPhraseOfType 2)
(strictlyFunctionalInArgs posOfPhraseType 2)
(strictlyFunctionalInArgs psRuleTemplateDtr 2)
(strictlyFunctionalInArgs suffixString 2)
(argGenl QuantityFn 2 Thing)
(arg2Genl QuantityFn Thing)
(argGenl QuantityVariableFn 2 Thing)
(arg2Genl QuantityVariableFn Thing)
(argGenl exceptionForSemTransTemplate 2 Thing)
(arg2Genl exceptionForSemTransTemplate Thing)
(facets-Generic DerivationalAffix DerivationalAffixByResultPOSCategory)
(typeGenls DerivationalAffixByResultPOSCategory DerivationalAffix)
(not (isa DerivationalAffixByResultPOSCategory DisjointCollectionType))
(argGenl barLevelOfPhraseType 1 SententialConstituent)
(arg1Genl barLevelOfPhraseType SententialConstituent)
(transitiveViaArgInverse barLevelOfPhraseType genls 1)
(argFormat derivedUsingAffix 2 SingleEntry)
(typedGenlPreds derivedUsingSuffix derivedUsingAffix)
(typedGenlPreds derivedUsingPrefix derivedUsingAffix)
(partitionedInto DerivationalAffix (ThePartition LevelOneAffix LevelTwoAffix))
(partitionedInto DerivationalAffix (ThePartition ProductiveLexicalAffix UnproductiveLexicalAffix))
(argGenl MorphemeSemanticGenlsConstraintFn 1 WordConstituent)
(arg1Genl MorphemeSemanticGenlsConstraintFn WordConstituent)
(argGenl MorphemeSemanticIsaConstraintFn 1 WordConstituent)
(arg1Genl MorphemeSemanticIsaConstraintFn WordConstituent)
(argGenl MorphemeCategorialConstraintFn 1 WordConstituent)
(arg1Genl MorphemeCategorialConstraintFn WordConstituent)
(transitiveViaArg wordHasConstituent wordHasConstituent 2)
(argGenl affixRuleTypeMorphemePosition 1 AffixRule)
(argGenl affixRuleTypeMorphemePosition 3 WordConstituent)
(arg3Genl affixRuleTypeMorphemePosition WordConstituent)
(arg1Genl affixRuleTypeMorphemePosition AffixRule)
(facets-Generic DerivationalAffix DerivationalAffixByBasePOSCategory)
(typeGenls DerivationalAffixByBasePOSCategory DerivationalAffix)
(not (isa DerivationalAffixByBasePOSCategory DisjointCollectionType))
(typeGenls BaseWordFormTypeByStartingPhonemeType BaseWordForm)
(typeGenls BaseWordFormTypeByEndingPhonemeType BaseWordForm)
(facets-Strict BaseWordForm BaseWordFormTypeByEndingPhonemeType)
(resultGenl BaseWordFormsStartingWithPhonemeTypeFn BaseWordForm)
(resultGenl BaseWordFormsStartingWithLetterSequenceFn BaseWordForm)
(resultGenl BaseWordFormsEndingWithPhonemeTypeFn BaseWordForm)
(facets-Strict BaseWordForm BaseWordFormTypeByStartingPhonemeType)
(argGenl BaseWordFormsEndingWithPhonemeTypeFn 1 Phoneme)
(arg1Genl BaseWordFormsEndingWithPhonemeTypeFn Phoneme)
(argGenl BaseWordFormsStartingWithPhonemeTypeFn 1 Phoneme)
(arg1Genl BaseWordFormsStartingWithPhonemeTypeFn Phoneme)
(argGenl adverbSemTransTemplate 1 Thing)
(arg1Genl adverbSemTransTemplate Thing)
(typeGenls SuffixCategory LexicalSuffix)
(typeGenls PrefixCategory LexicalPrefix)
(typeGenls AffixCategory LexicalAffix)
(argFormat suffixString 2 SingleEntry)
(typedGenlPreds suffixString affixString)
(argFormat prefixString 2 SingleEntry)
(typedGenlPreds prefixString affixString)
(argFormat affixString 2 SingleEntry)
(typedGenlPreds affixString lexicalItemStrings)
(typedGenlPreds wordStrings lexicalItemStrings)
(transitiveViaArg posBaseForms genls 2)
(argFormat preferredBaseForm 2 SingleEntry)
(partitionedInto LexicalWord (ThePartition ComplexWord SimpleWord))
(argFormat derivedUsingSuffix 2 SingleEntry)
(argFormat derivedUsingPrefix 2 SingleEntry)
(partitionedInto Affixation-WordFormationProcess (ThePartition DerivationalAffixation InflectionalAffixation))
(argFormat psRuleSemanticsHandler 2 SingleEntry)
(argFormat lexicalWordTypeForLanguage 2 SingleEntry)
(functionCorrespondingPredicate-Canonical WordInLanguageFn lexicalWordTypeForLanguage 2)
(functionalInArgs lexicalWordTypeForLanguage 2)
(typeGenls LexicalWordTypeByLanguage LexicalWord)
(not (isa LexicalWordTypeByLanguage DisjointCollectionType))
(typeGenls LexicalWordType LexicalWord)
(not (isa likesAsFriend RelationalNounSlot))
(not (genls InterAnimalRelationPredicate RelationalNounSlot))
(argGenl HowManyQueryingFn 3 Thing)
(arg3Genl HowManyQueryingFn Thing)
(argGenl VariableFn 2 Thing)
(arg2Genl VariableFn Thing)
(argFormat headsPhraseOfType 2 SingleEntry)
(quotedArgument simpleNounStrings 1)
(quotedArgument prenominalModifier 1)
(quotedArgument termDoesntNeedLexification 1)
(argGenl instancesDontNeedLexification 1 Thing)
(arg1Genl instancesDontNeedLexification Thing)
(quotedArgument instancesDontNeedLexification 1)
(transitiveViaArg defaultCorrespondingRoles specs 2)
(argFormat posOfPhraseType 2 SingleEntry)
(argGenl posOfPhraseType 1 NLPhrase)
(arg1Genl posOfPhraseType NLPhrase)
(resultGenl SpeechPartOfWordFormFn NLWordForm)
(functionCorrespondingPredicate-Canonical SpeechPartOfWordFormFn speechPartOfWordForm 2)
(argGenl preferredIndirectObjectRole 1 Event)
(arg1Genl preferredIndirectObjectRole Event)
(argFormat indirectObjectRoles 2 SetTheFormat)
(argGenl indirectObjectRoles 1 Event)
(transitiveViaArgInverse indirectObjectRoles genls 1)
(arg1Genl indirectObjectRoles Event)
(argGenl NLPhraseWithFrameFn 1 NLPhrase)
(argGenl NLPhraseWithFrameFn 2 SubcategorizationFrame)
(arg2Genl NLPhraseWithFrameFn SubcategorizationFrame)
(resultGenl NLPhraseWithFrameFn NLPhrase)
(arg1Genl NLPhraseWithFrameFn NLPhrase)
(argFormat psRuleTemplateDtr 2 SingleEntry)
(argFormat possiblePOSOfWordIBT 2 SetTheFormat)
(transitiveViaArg posPredOfConstituent genlPreds 2)
(rewriteOf NLPhrase (SubcollectionOfWithRelationToFn SententialConstituent barLevelOfPhrase 2))
(argFormat psRuleCategory 2 SingleEntry)
(argGenl psRuleCategory 2 SententialConstituent)
(arg2Genl psRuleCategory SententialConstituent)
(argFormat psRuleSemanticsFromDtr 2 SingleEntry)
(resultGenl PhraseFn-Bar1 SententialConstituent)
(transitiveViaArg posOfPhrase genls 2)
(rewriteOf PrepositionalPhrase (PhraseFn Preposition))
(argGenl ConstituentTypeConstraintFn 2 SententialConstituent)
(arg2Genl ConstituentTypeConstraintFn SententialConstituent)
(argGenl NCPOSConstraintFn 2 Thing)
(arg2Genl NCPOSConstraintFn Thing)
(argGenl preferredSubjectRole 1 Event)
(arg1Genl preferredSubjectRole Event)
(argGenl preferredDirectObjectRole 1 Event)
(arg1Genl preferredDirectObjectRole Event)
(argFormat directObjectRoles 2 SetTheFormat)
(argGenl directObjectRoles 1 Event)
(transitiveViaArgInverse directObjectRoles genls 1)
(arg1Genl directObjectRoles Event)
(argFormat subjectRoles 2 SetTheFormat)
(argGenl subjectRoles 1 Event)
(transitiveViaArgInverse subjectRoles genls 1)
(arg1Genl subjectRoles Event)
(reformulatorEquiv (thereExists ?X (and (equals ?ARG2 ?X) (isa ?X ??ARG2CONST) (thereExists ?VAR (and (isa ?VAR ??ARG1CONST) (?PRED ?VAR ?X))))) (thereExists ?NEW (?PRED ?NEW ?ARG2)))
(argGenl PronounFn 4 Pronoun)
(arg4Genl PronounFn Pronoun)
(argFormat ncRuleTemplate 2 SingleEntry)
(rewriteOf ItalianWord (WordInLanguageFn ItalianLanguage))
(typeGenls ObliqueSubjectAlternationType Alternation)
(typeGenls TransitivityAlternationType Alternation)
(argFormat nnRule 2 SingleEntry)
(argFormat nameSuffix 2 SetTheFormat)
(argFormat countryName-LongForm 2 SingleEntry)
(argFormat nnRule 1 SingleEntry)
(argFormat nnRule 3 SingleEntry)
(arg3Format nnRule SingleEntry)
(quotedArgument countryName-LongForm 1)
(quotedArgument countryName-ShortForm 1)
(comment ObjOfTrans-SubjOfIntrans "An alternation between the object of a transitive verb and the subject of an intransitive verb. See its specs for examples.")
(comment InducedActionAlternation "An alternation in which the transitive form specifies an action that the causer which, when performed by the subject, also induces the same action to happen to the object.  The transitive forms also must have an overt or understood directional phrase accompanying them.  For example, in 'Kim drove Sandy to the airport', 'Kim' causes 'Sandy' to be transported while in the alternation 'Kim drove to the airport', 'Kim' only causes herself to be transported.")
(comment Causative-InchoativeAlternation "An #$ObjOfTrans-SubjOfIntrans alternation in which the transitive use may be interpreted as causing the intransitive form of the verb to occur.  For example 'she burned the house' may be interpreted as 'she caused the house to burn' where 'the house burned' is the intransitive form.  Verbs which occur in this alternation often denote a change of state or position.")
(comment DoubleObjectAlternation "The alternation between the structure 'NP V NP NP' and the structure 'NP V NP PP.'  For example, the alternation between 'Joan sold Tom a book' and 'Joan sold a book to Tom'.")
(comment TransitivityAlternationType "Each instance of this collection is a type of alternation which affects a verb's transitivity.  Example: The transitive 'NP V NP' structure may alternate with the intransitive 'NP V' or 'NP V PP'.")
(comment MiddleAlternation "An #$ObjOfTrans-SubjOfIntrans alternation in which the intransitive form has an understood agent and a non-specified time reference.  Verbs which occur in this alternation often have objects which are affected by a change of state denoted by the verb. For example, 'Joan cut the bread' alternates with 'The bread cuts easily'.")
(comment Determiner-Definite "The class of definite determiners, such as 'these'. With #$Determiner-Indefinite often called the class of central determiners.")
(comment GeneralLexiconMt "The microtheory in which the most general lexical facts

are stated and in which general lexicon predicates are defined. Rules in this microtheory may apply to words in any of the language-specific

microtheories.")
(comment countryName-ShortForm "(#$countryName-ShortForm PLACE NAME) means that NAME is the official short-form name of COUNTRY. This is typically the name used in English. See also #$countryName-LocalShortForm.")
(comment countryName-LongForm "(#$countryName-LongForm PLACE NAME) means that NAME is the official long-form name of COUNTRY. This is typically the name used in English. See also #$countryName-LocalLongForm.")
(comment countryName-LocalShortForm "(#$countryName-ShortForm PLACE NAME) means that NAME is the official short-form name of COUNTRY used by residents of COUNTRY.")
(comment countryName-LocalLongForm "(#$countryName-LongForm PLACE NAME) means that NAME is the long-form name of COUNTRYused by residents of COUNTRY.")
(comment LexicalSuffix "The set of lexical items which may attach to the end of

a word. Example: 'less', as in 'fearless'.")
(comment LexicalPrefix "The set of lexical items which may attach to the beginning of

a word. Example: 'un', as in 'unhappy'.")
(comment morphologicallyDerivedFrom "#$morphologicallyDerivedFrom relates a #$DerivedWord to its #$BaseWordForm constituent. Example: (#$morphologicallyDerivedFrom #$Unhappy-TheWord #$Happy-TheWord) means that #$Unhappy-TheWord is derived from the word #$Happy-TheWord.")
(comment nameSuffix "Predicate indicating the different suffixes that may go on a person's name; e.g., jr., III, esq., Ph.D., Ed.D., M.A., etc.")
(comment gerund "A #$SpeechPartPredicate (q.v.) and a specialization of 
#$massNumber-Generic. (#$gerund WORD STRING) means that STRING is the gerund form 
of WORD. The regular gerund is formed from the infinitive 
verb form with an `ing' suffix. Verbs in the Cyc lexicon will 
have a #$gerund entry only if they are irregular.  Regular 
forms are generated by the morphology component.")
(disjointWith Determiner-Indefinite Determiner-Definite)
(comment placeName-Standard "(#$placeName-Standard PLACE NAME) means that NAME is the name of PLACE most standardly used to refer to PLACE. The NIMA Geographic Names DB is a good reference for standard names; use the category Geographic Name for representation with this predicate. For short forms for PLACE, use #$placeName-ShortForm. For nicknames for PLACE use #$nicknames. For names of PLACE which are none of these, just use #$nameString. Remember to make the assertions in the approproate language mt. Examples: (#$placeName-Standard #$CityOfNewYorkNY \"New York City\"); (#$placeName-ShortForm #$CityOfNewYorkNY \"New York\"); (#$nicknames #$CityOfNewYorkNY \"the Big Apple\"); (#$initialismString #$CityOfNewYorkNY \"NYC\"); (#$nameString #$CityOfNewYorkNY \"the City of New York\").")
(comment nnRule "(nnRule NAME CONDITION_TEMPLATE MEANING_TEMPLATE) means that for a noun-noun pair of words (WORD1 and WORD2) if they have nominal denotations :NOUN1 and :NOUN2, and the CONDITION_TEMPLATE matches those denotations, then the MEANING_TEMPLATE, filled in with those meanings, is the meaning for the noun-noun pair.  The string, NAME, should be an example noun-noun compound that this form applies to.")
(comment VerbClass "Collection of all verb classes. Every verb sense belongs to a verb class and inherits from its verb class general semantic and

syntactic rules. When creating a new verb or verb sense, place it in

its verb class or classes using #$hasVerbAsMember, e.g.

(#$hasVerbAsMember #$Give-VerbClass #$Give-TheWord 0).")
(comment hasVerbAsMember "(#$hasVerbAsMember VERBCLASS LEXICALWORD SENSENUMBER) means that VERBCLASS has LEXICALWORD with sense SENSENUMBER as a member. This predicate is used to link up verbs with the classes to which they belong.  See Beth Levin's text *English Verb Classes and Alternations* for more on how to group verbs into classes -- the NL Dept. library has a copy.  When using this predicate, remember that while a particular verb may belong to many different verb classes, a particular verb sense belongs to only one #$VerbClass.  The following example asserts that sense 0 of the lexical word #$Give-TheWord is a member of the #$Give-VerbClass.  (Note: To find out which sense you need, look at the #$denotation and various semTrans-type assertions the word is involved in.) (#$hasVerbAsMember #$Give-VerbClass #$Give-TheWord 0)")
(comment relevantToVerbMapping "(#$relevantToVerbMapping REIFIABLETERM LEXICALWORD WORDSENSENUMBER).  This predicate is used in work flow to alert someone doing OE or NL work on a particular verb sense to the fact that a fort (or many forts if there are many such assertions) are relevant or could be seen as relevant to representing the verb sense in question.  For example, if I thought that the collection #$GivingSomething would most likely be involved in the semantic representation of the word #$Give-TheWord (with sense number 0 -- check the various #$denotations and semTrans assertions that a word is involved in to see what sense number corresponds to the sense to be represented), I would make this assertion (#$relevantToVerbMapping #$GivingSomething #$Give-TheWord 0).")
(comment Give-VerbClass "The verbs in this class are all members of a larger class -- verbs of change of possession (section 13 of Levin text). In many cases the sense of \"possession\" in this larger class is broadly construed; e.g. in \"Sally administers the medicine to Fred\", \"administers\" function as a verb of this class, even though Sally may not *own* the medicine she is administering.  The #$Give-VerbClass is differentiated from the #$ContributeVerbClass (also a class of verbs of change of possession) syntactically; the contribute verbs do not allow

the dative alternation while the give verbs do.  When verbs of this class appear with a prepositional phrase, the phrase must begin with \"to\". Note that one may also make a case for a subtle semantic difference between the two; the give verbs all involve a voluntary transfer of possession by the subject (i.e. possibly has

benefits for the giver) while the contribute verbs, many of them at least,

involve a possibly reluctant transfer of possession (e.g. relinquish,

reimburse, restore, etc. as opposed to give, feed, lease, etc.).")
(comment preferredTermStrings "Use this predicate to record the preferred way of referring to a Fort. This is a specPred of #$termStrings so there is no need to make both a #$termStrings and a #$preferredTermStrings assertion using the same string. Do, however, try to make as many termStrings assertions as possible for a given Fort. Whenever there are at least two #$termStrings assertions, there should be a #$preferredTermStrings assertion specifying the string that should be used in generation. See the comment on #$termStrings for more on how to use that predicate.")
(comment abbreviationForString "(#$abbreviationForString STRING ABBREVIATION) means that ABBREVIATION is an abbreviation for STRING.  Example -- (#$abbreviationForString \"department\" dept\").")
(comment abbreviationForMultiWordString "(#$abbreviationForMultiWordString STRING LEXICALWORD POS ABBREVIATION) means that ABBREVIATION is an abbreviation for the multi-word phrase picked out by STRING + POS part of speech of   LEXICALWORD. Example --  (#$abbreviationForMultiWordString (#$TheList (\"cubic\")) #$Foot-TheWord #$CountNoun \"cu ft\")")
(comment abbreviationForCompoundString "(#$abbreviationForCompoundString LEXICALWORD STRING POS ABBREVIATION) means that ABBREVIATION is an abbreviation for the compound phrase picked out by POS part of speech of LEXICALWORD + STRING.  Example --  (#$abbreviationForCompoundString #$Mile-TheWord (#$TheList (\"per\" \"hour\")) #$CountNoun \"m/h\").")
(comment abbreviationForLexicalWord "(#$abbreviationForLexicalWord LEXICALWORD POS ABBREVIATION) means that ABBREVIATION is an abbreviation for the POS form of the word LEXICALWORD. Example --  (#$abbreviationForLexicalWord #$Department-TheWord #$singular \"dept\").  For mapping phrases to abbreviation strings use either #$abbreviationForMultiWordString or #$abbreviationForCompoundString.")
(comment LexicalMtForLanguageFn "The expression (#$LexicalMtForLanguageFn LANGUAGE) denotes the lexical Mt for the language LANGUAGE. For example, (#$LexicalMtForLanguageFn #$EnglishLanguage) denotes the lexical Mt for the english language. Since this one is so widely used, though, we'll stay with #$EnglishMt.")
(comment WordInLanguageFn "The expression (#$WordInLanguageFn LANGUAGE) denotes a collection of lexical words in the language LANGUAGE. For example, (#$isa #$Hello-TheWord (#$WordInLanguageFn #$EnglishLanguage)) says that the word \"hello\" is a word in the english language.")
(comment genStringAssertion "(#$genStringAssertion TERM ASRTN) means that a ASRTN should be used in generation for the Cyc TERM (or derived term in the case of functions).  #$genPhrase and #$preferredGenUnit trump #$genStringAssertion which, in turn, trumps everything else.")
(comment Substance-SourceAlternation "An #$ObjOfTrans-SubjOfIntrans alternation in which both the transitive and intransitive forms take two arguments; a source and a subtance emitted.  Example -- \"Heat radiates from the sun.\" \"The sun radiates heat.\"")
(comment UnexpressedObjectAlternation "An alternation in which the subjects of the transitive and intransitive forms respectively are related to the verb in the same way.  In the intransitive form the object is unexpressed but understood. Example: Fred flossed his teeth. / Fred flossed.")
(comment ConativeAlternation "An alternation in which the object in the transitive form is the object of a prepositional phrases headed by \"at\" in the intransitive form.  These verbs describe attempted actions. Example: Sally swatted the fly. / Sally swatted at the fly.  Note that in Cyc we represent the latter with the frame (#$PPCompFrameFn #$TransitivePPFrameType #$At-TheWord)).")
(comment NonTransitiveAlternationType "Each instance of this collection is a type of alternation which does not involve a change in the transitivity of the verb. Example: The transitive 'NP1 V NP2 \"to\" NP3' structure may alternate with 'NP1 V NP3 NP2'.  There are other possibilities as well.")
(comment LocativeAlternation "The alternation between the structure 'NP1 V NP2 [P1 NP3]' and the structure 'NP1 V NP3 [P2 NP2].'  These verbs describe putting things on surfaces or in containers or removing them from such.  Possible arguments to these verbs include the thing moved and the location to which it is moved. When the location argument is not the object of a prepositional phrase, the location is completely affected by the action. Example: Fred sprayed paint on the wall. / Fred sprayed the wall with paint.")
(comment CreationAndTransformationAlternation "These alternations involve verbs of creation and transformation.  Each spec of #$CreationAndTransformationAlternation has both a transitive and intransitive form.  See #$CreationAndTransformationTransitiveAlternation and #$CreationAndTransformationIntransitiveAlternation for these.")
(comment CreationAndTransformationTransitiveAlternation "The alternation between the structure 'NP1 V NP2 \"into\" NP3' and 'NP1 V NP2 \"from\" NP4 \"into\" NP3.' These forms include an agent argument.  Example: Sally transformed her house into a palace. / Sally transformed her house from a pig sty into a palace.")
(comment CreationAndTransformationIntransitiveAlternation "The alternation between the structure 'NP1 V \"into\" NP2' and 'NP2 V \"from\" NP1.' There is no agent argument.  Example: The egg hatched into a bird. / A bird hatched from that egg.")
(comment ReciprocalAlternation "These alternations involve verbs that describe the same effects for each of their arguments. Each spec of #$ReciprocalAlternation has both a transitive and intransitive form. See #$ReciprocalTransitiveAlternation and #$ReciprocalIntransitiveAlternation for these.")
(comment ReciprocalTransitiveAlternation "The alternation between the structure 'NP1 V NP2 [P NP3]' and 'NP1 V [NP2 \"and\" NP3].' There is an agent argument.  In the form without a PP phrase, the arguments must be of comparable status.  Example: Sally taped the picture to the wall. / *(not) Sally taped the picture and the wall. Fred mixed the milk with the coffee. /  Fred mixed the milk and the coffee.")
(comment ReciprocalIntransitiveAlternation "The alternation between the structure 'NP1 V [P NP2]' and '[NP1 \"and\" NP2] V.' There is no agent argument.  In the form without a PP phrase, the arguments must be of comparable status.  Example: The car collided with the fence.  *(not) The car and the fence collided.  Sally chatted with Fred. / Sally and Fred chatted.")
(comment With-AgainstAlternation "The alternation between the structure 'NP1 V NP2 \"against\" NP3' and 'NP1 V NP3 \"with\" NP2.' There are always three arguments in this construction; an agent,a location, and an instrument.  The agent is always expressed as the subject. When the location argument is expressed as the object of a prepositional phrase, that phrase is headed by \"against.\" There is no intransitive counterpart to this alternation. Example: Fred pounded the gem against the rock. / Fred pounded the rock with the gem.")
(comment LinguisticRegister "A #$LinguisticRegister is a style of language use conventionally associated with particular topics or socio-professional situations. Common examples have been given names ending in `-ese', for example, Legalese, but there are many more linguistic registers than those with such names. #$LinguisticRegisters may be thought of as properties of languages, but they are not properties of individual expressions or of language users.")
(comment LegalLanguage-Register "This is the style of discourse conventionally associated with the legal profession. It is characterized by a preference for redundancy, convoluted sentence structure, and hedging.")
(comment MedicalLanguage-Register "This is the style of discourse conventionally associated with the medical profession. It is characterized by a preference for Greco-Latin terms, acronyms, abbreviations, and idiosyncratic phrasing (`he presented with elevated systolic pressure...').")
(comment InvestmentMarketLanguage-Register "This is the style of discourse conventionally associated with stock and bond trading. It is characterized by anthropomorphizing of inanimate things: `gold suffered today but tech stocks rebounded...'.")
(comment LinguisticsLanguage-Register "This is the style of discourse conventionally associated with linguistics. It is characterized by a preference for certain imperatives (`consider', `recall', `observe'), large numbers of example sentences, and the use of acronyms.")
(comment PornographyLanguage-Register "This is the style of discourse conventionally associated with the marketing of pornographic materials as well as certain of those materials, such as movies in which there is dialog. It is characterized by the use of vulgar terminology and a very narrow universe of discourse in which persons appear to be little more than subjects and objects of sexual gratification.

Use of certain terms, such as \"femdom\" and \"facial\", are mostly specific to this register.")
(comment PsychologyPublicationLanguage-Register "This is an example of a #$LinguisticRegister which is explicitly set out and, at least in principle, enforced. The APA Publication Manual specifies that psychological writing should be clear and maximally informative, writers should use short sentences, the active voice of verbs, and eschew metaphors and figurative writing.")
(comment ComputerLanguage-Register "This is the style of discourse conventionally associated with the computer world. It is characterized by the use of idiomatic expressions (`hacker'), idiosyncratic syntax (use of the letter `z' for pluralization), and a range of jargon specific to computers and the internet.")
(comment ExternalCauseState-VerbClass "This verb class includes those change of state verbs that

relate to externally caused changes of state (section 45.4 of Levin

text). These verbs participate in the causative/inchoative

alternation
change of state verbs see #$Break-VerbClass, #$Bend-VerbClass,

#$Cooking-VerbClass, #$EntitySpecificChangeOfState-VerbClass,

#$MeasurableChangeOfState-VerbClass, #$Lodge-VerbClass.")
(comment ObliqueSubjectAlternationType "Each instance of this collection is a type of alternation which does not involve a change in the transitivity of the verb but which does involve a change in the number of NPs the verb is involved with.  Example: 'NP1 V NP2 [PP NP3]' structure may alternate with 'NP3 V NP2'.")
(comment InstrumentSubjectAlternation "The alternation between the structure 'NP1 V NP2 \"with\" NP3' and the structure 'NP3 V NP2.'  Note that not all instruments can participate in this alternation. In particular, only \"intermediary\" instruments -- ones that can appear as subjects -- can be used.  Example: Fred dried the clothes with the hairdryer. / The hairdryer dried the clothes.")
(comment BenefactiveAlternation "The alternation between the structure 'NP1 V NP2 \"for\" NP3' and the structure 'NP1 V NP3 NP2.'  Verbs typically taking this alternation are verbs of obtaining and verbs of creation.

Example: Sally built the treehouse for Fred. / Sally built Fred a treehouse.")
(comment Crane-VerbClass "This verb class (see 40.3.2 in the Levin text) includes verbs which describe gestures made with specific body parts; the subject of the verb is the possessor of the body part in the direct object position. The object must be explicitly expressed. Example: Fred rolled his eyes. Sally shook her fist at the insolent youth.")
(comment Get-VerbClass "This verb class (see 13.5.1 in the Levin text) includes verbs of obtaining that can take the #$BenefactiveAlternation.  Note that many of these verbs also belong to the #$Steal-VerbClass. Example: Sally rents her apartment from Fred.  Fred leases his car from Sally.")
(comment Characterize-VerbClass "This verb class (see 29.2 in the Levin text) includes verbs that are typically used to describe properties of entities.   All of these verbs take predicative complements and these typically apply to the postverbal NP. The most common frame for these verbs is 'NP V NP as NP.'")
(comment verbClassSemTrans "This predicate expresses a semantic translation template for verbs in virtue of their membership in a verb class.  (#$verbClassSemTrans VERBCLASS FRAME TEMPLATE) means that for any VERB SENSE that is a member of VERBCLASS (#$hasVerbAsMember VERBCLASS VERB SENSE), the following is true of it: (#$verbSemTrans VERB SENSE FRAME TEMPLATE).")
(comment verbClassFrame "This predicate allows representation of the subcategorization frames taken by instances of a verb class. (#$verbClassFrame VERBCLASS FRAME) means that for any VERB SENSE that is a member of VERBCLASS (#$hasVerbAsMember VERBCLASS VERB SENSE), the following is true of it: (#$subcatFrame VERB #$Verb SENSE FRAME).")
(comment verbClassAlternation "This predicate allows representations of the alternations taken by instances of a verb class. (#$verbClassFrame VERBCLASS ALTERNATION) means that for any VERB SENSE that is a member of VERBCLASS (#$hasVerbAsMember VERBCLASS VERB SENSE), the following is true of it: (#$participatesInAlternation VERB SENSE ALTERNATION).")
(comment Alternation "The set of alternations found in natural languages.")
(comment alternationSubcatFrames "This predicate allows representations of the #$subcatFrames that a verb can alternate between. (#$alternationSubcatFrames ALTERNATION SUBCAT1 SUBCAT2) means that for VERB participating in ALTERNATION, given that the arguments remain the same, the #$verbSemTrans that has VERB and SUBCAT1 as an arg. and the #$verbSemTrans that has VERB and SUBCAT2 as an arg. are semantically equivalent.")
(comment ContiguousLocation-VerbClass "This verb class (see 47.8 in the Levin text) 

consists of verbs used to describe a contiguous spatial

relation between two things.  Though some verbs

 in this class, e.g., #$Touch-TheWord, 

 describe a symmetric relationship, most inflict a clear

 subject-first, object-next interpretation

 of their relata, as does #$Straddle-TheWord, in

 '<SUBJ> straddles <OBJ>.'

  These verbs require a 'by <SUBJ>' phrase when

 used in the passive.  It is not the case that every member of

 this verb class participates in an alternation, though

   some participate in #$UnderstoodReciprocalObjectAlternation.")
(comment UnderstoodReciprocalObjectAlternation "The alternation between the structures

 'NP1 V NP2' in the transitive 

 and 'NP1 \"and\" NP2 V' in the 

 intransitive.  In certain cases,

'NP1 \"and\" NP2 V \"each other\"' is 

possible.  The participants in the action described must

 be of comparable status.  Thus, 'The drunk

  hugged the lamppost' *NOT 'The drunk and the

 lamppost hugged,' but 'The drunk hugged his

 friend' AND 'The drunk and his friend 

hugged.'")
(comment Amuse-VerbClass "The verbs in this class are all verbs of psychological state (section 31 of Levin text).  They are transitive, and take as object the experiencer of the psychological state.  For some of these verbs, the experiencer or stimulus of the emotion may be explicit or understood.  For example, \"He amused me\", \"I was amused\", \"That joke never fails to amuse.\"")
(comment webSearchableStrings "(#$webSearchableStrings FORT STRING)   says 1) it is plausible that a web-searcher    who is interested in the concept  represented by FORT will search for that  information using STRING, and   2) STRING is generally *not* recognized as   a legitimate English construction -- i.e.,   it is not a construction that we eventually want    represented in the Cyc Lexicon.  Because of  1), Cyc will 'understand' FORT as a possible   disambiguation for STRING.  Because of 2),  Cyc will never offer STRING in generating  English for FORT; accordingly, any assertion  using #$webSearchableStrings must be made   in #$WebSearchLexicalMt.")
(comment prepSemTrans "(prepSemTrans PREP INT FRAME TRANS) means that the translation of word sense number INT of PREP in frame FRAME is TRANS.")
(comment NounCompoundRule "The collection of all rules used by the #$NounPhraseParser.")
(comment NounCompoundRuleIndexicalTerm "The collection of indexical terms that can appear in noun-compound rule constraints and semantic specifications (cf. #$ncRuleTemplate), and whose denotation depends on the compound being parsed.")
(comment TheNCHead "#$TheNCHead is a special kind of term whose only purpose is to be used in #$ELSentence-Assertibles that appear as the second argument of an #$ncRuleConstraint. For example, the assertion (#$ncRuleConstraint #$PeopleWatching-NCR (#$equals #$TheNCHead #$WatchingSomething))  means that one of the conditions on the application of the #$NounCompoundRule #$PeopleWatching-NCR is that the meaning of the head part of the compound be equal to #$WatchingSomething.")
(comment TheNCModifier "#$TheNCModifier is a special kind of term whose only purpose is to be

used in #$ELSentence-Assertibles that appear as the second argument of an #$ncRuleConstraint.

For example, the assertion (#$ncRuleConstraint #$ArtExpert-NCR (#$NCPOSConstraintFn #$TheNCModifier #$Noun)) 

means that one of the conditions on the application of the #$NounCompoundRule #$ArtExpert-NCR is that

the modifier part of the compound be a noun.")
(comment ncMorphologyRequirement "The predicate exists so as to be able to express part of speech constraints for 
instances of #$NounCompoundRule in such a way that they can be checked for well-formedness
by the wff-checker. See #$ncPOSRequirement.")
(comment ncRuleLabel "The assertion (#$ncRuleLabel RULE STRING) means that STRING is a complex nominal 
expression that is a good example of the kind of nominal expressions designed to be handled
by the #$NounCompoundRule RULE.")
(comment ncRuleConstraint "This predicate is used to record constraints imposed by instances of #$NounCompoundRule.

For example, the assertion (#$ncRuleConstraint #$ArtExpert-NCR (#$NCPOSConstraintFn #$TheNCModifier #$Noun)) 

means that one of the conditions on the application of the #$NounCompoundRule #$ArtExpert-NCR 

is that the part of speech of the modifier part of the compound be #$Noun.")
(comment ncRuleTemplate "This predicate is used to record the fact that if two (sequences of) words 

satisfy all the constraint of a #$NounCompoundRule then some of the possible meanings of

the compound represented by their concatenation can be obtained by substituting in for #$TheNCHead

the meanings of the head (sequence of) word(s) that are consistent with the constraints of the 

#$NounCompoundRule, and similarly for #$TheNCModifier.")
(comment checkedViaAdjTool "(#$checkedViaAdjTool WORD DATE) means that WORD was run through the AdjTool on DATE. Meta-assertions using this predicate are used in the AdjTool algorithm:

1. For any words in the lexicon not tagged with #$checkedViaAdjTool, run

TOE script to assert all possible adjectival forms.

2. List all words and their adjectival forms that have not been checked via the tool (i.e. not tagged in step 4).

3. User checks those that should be unasserted. For each of these the tool adds a corresponding addition to the #$testAnswersCycL of the corresponding KBIT, e.g. KBIT-WordsWithoutAdj-EdForms.

4. Tag all words checked in the session.

5. Run KBIT to check for words without adj forms that don't have the #$testAnswersCycL exceptions.")
(comment checkedViaNLTool "(#$checkedViaNLTool WORD DATE) means that WORD was run through an NL tool on DATE. See spec preds for more on how these meta assertions are being used.")
(comment PossessivePronoun-Pre "This is the collection of pronouns that can be used in [NP NP]
constructions in the genitive case. For example, `Her book is on the table.'.")
(comment WHPronoun-Subject "This is the collection of #$WHPronouns that can be used in the
nominative case. For example, `Who took the book off the table?'.")
(comment WHPronoun-Object "This is the collection of #$WHPronouns that can be used in the
accusative and dative cases. For example, `Whom did she hit' and `To whom
did she give the book?'.")
(comment WHPronoun-Possessive "This is the collection of #$WHPronouns that can be used in the
genitive case. For example, `Whose book in on the table?'.")
(comment compoundSemTrans "(#$compoundSemTrans WORD LIST PART FRAME TRANS) means that the translation of

the multi-word phrase containing both WORD and the word-strings in LIST,

when the part of speech is PART and the subcategorization frame is FRAME, is TRANS.")
(comment GrammaticalPersonFeature "This is the collection of grammatical person features: #$FirstPerson,
#$SecondPerson, and #$ThirdPerson.")
(comment PronounFn "This is an #$NLTaggedTermDenotingFunction which supports intermediate-level representations used in parsing pronouns.")
(comment subjectRoles "(#$subjectRoles EVENT-TYPE ROLE) means that an active voice subject

of a verb that denotes EVENT-TYPE may be assumed to denote an actor that plays ROLE

in the event denoted by the verb.")
(comment directObjectRoles "(#$directObjectRoles EVENT-TYPE ROLE) means that a direct object of a verb 

that denotes EVENT-TYPE may be assumed to denote an actor that plays ROLE in the event 

denoted by the verb.")
(comment preferredDirectObjectRole "(#$preferredDirectObjectRole EVENT-TYPE ROLE) means that ROLE best describes

the role played by the referent of a direct object of a verb that denotes EVENT-TYPE.")
(comment preferredSubjectRole "(#$preferredSubjectRole EVENT-TYPE ROLE) means that ROLE best describes
the role played by the referent of an active voice subject of a verb that denotes EVENT-TYPE.")
(comment NCPOSConstraintFn "When a NAT of the form (#$NCPOSConstraintFn COMPONENT POS) appears as the

second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule 

which is the first argument of that assertion applies only if COMPONENT can be proved to 

have Part Of Speech POS.")
(comment NCPOSPredConstraintFn "When a NAT of the form (#$NCPOSPredConstraintFn COMPONENT POS-PRED) appears as the

second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule 

which is the first argument of that assertion applies only if COMPONENT can be proved to 

have Part Of Speech predicate POS-PRED.")
(comment NCEqualsConstraintFn "When a NAT of the form (NCEqualsConstraintFn ARG1 ARG2) appears as the
second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule 
which is the first argument of that assertion applies only if ARG1 can be proved to be 
equal to ARG2 in an appropriate microtheory. Which microtheories are appropriate is
established as one of the parameters of the #$NounPhraseParser.")
(comment NCGenlsConstraintFn "When a NAT of the form (#$NCGenlsConstraintFn SMALL BIG) appears as the second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule which is the first argument of that assertion applies only if SMALL can be proved to be a subclass of BIG in an appropriate microtheory. Which microtheories are appropriate is established as one of the parameters of the #$NounPhraseParser.")
(comment NCIsaConstraintFn "When a NAT of the form (NCIsaConstraintFn SMALL BIG) appears as the second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule  which is the first argument of that assertion applies only if SMALL can be proved to be  a instance of BIG in an appropriate microtheory. Which microtheories are appropriate is established as one of the parameters of the #$NounPhraseParser.")
(comment denotation-Prep "Use this predicate to indicate the group of relations that should be used when representing assertions involving the preposition in question. Example: (#$denotation-Prep #$In-TheWord #$Preposition-Locative #$in-UnderspecifiedContainer) means that sentences using the locative \"in\" should use #$in-UnderspecifiedContainer or one of its specpreds in representation. The corresponding #$prepSemTrans assertions will provide an exact specification of how such relations should be used. For example, (#$prepSemTrans #$In-TheWord 4 #$VerbPhraseModifyingFrame (#$objectFoundInLocation :MOD-OBJ :OBJECT)) and (#$prepSemTrans #$In-TheWord 1 #$VerbPhraseModifyingFrame (#$eventOccursAt :ACTION :OBJECT))")
(comment prepSemTrans-New "(#$prepSemTrans-New WORD PREP FRAME TRANS) means that the translation of the preposition WORD of type PREP in frame FRAME is TRANS. Example: (#$prepSemTrans-New #$In-TheWord #$Preposition-Locative #$VerbPhraseModifyingFrame (#$eventOccursAt :ACTION :IND-OBJECT)).")
(comment NLNumberFn "(#$NLNumberFn TAG TERM) means that TERM appeared in a natural language utterance with the linguistic/morphological number denoted by TAG.  For example, (#$NLTagFn #$Singular-NLAttr #$Dog) would mean that some word meaning #$Dog occurred in the singular.  This function serves as a hint to the NL subsystems that this term was used with a particular number, and is only intended to serve as a stand-in until the NL subsystems can determine the correct form of TERM to use in the semantic translation of the utterance.  Note that uses of this can (and frequently should) be nested.  For instance, \"some cats\" would return from the parser as (#$NLTagFn #$Some-NLAttr (#$NLTagFn #$Plural-NLAttr #$Cat)).")
(comment NLSemFn "(#$NLSemFn TAG TERM) means that TERM appeared in a natural language utterance with the intent of referring to the TAG form of TERM.  For example, (#$NLSemFn #$RelevantInstance-NLAttr #$Dog) would mean that some word meaning #$Dog occurred, but was intended to refer to a specific instance of #$Dog, rather than to the collection.  This function serves as a hint to the NL subsystems, and is only intended to serve as a stand-in until the NL subsystems can determine the correct form of TERM to use in the semantic translation of the utterance.")
(comment NLUtteranceAttribute "Instances of #$NLUtteranceAttribute are attribute values that specify a linguistic feature of an utterance.  See #$NLTagFn for more info.")
(comment NLDefinitenessAttribute "Instances of #$NLDefinitenessAttribute are attribute values that specify the definitness of an utterance.  See #$NLTagFn for more info.")
(comment NLNumberAttribute "Instances of #$NLNumberAttribute are attribute values that specify the linguistic number (e.g. plural/singular/dual/...) of an utterance.  If this attribute is missing, the utterance is assumed to have default number (i.e. #$nonPlural-Generic). See #$NLTagFn for more info.")
(comment NLSemAttribute "Instances of #$NLSemAttribute are attribute values that specify the semantic form (e.g. did the user mean the instance, the kind,...) of an utterance. See #$NLTagFn for more info.")
(comment Several-NLAttr "The attribute value carried by utterances of the form \"several XXX\".")
(comment Many-NLAttr "The attribute value carried by utterances of the form \"many XXX\".")
(comment Few-NLAttr "The attribute value carried by utterances of the form \"few XXX\".")
(comment Most-NLAttr "The attribute value carried by utterances of the form \"most XXX\".")
(comment Indefinite-NLAttr "The attribute value carried by utterances that are indefinite (e.g. \"a dog\").")
(comment Definite-NLAttr "The attribute value carried by utterances that are definite (e.g. \"the XXX\").")
(comment Plural-NLAttr "The attribute value carried by utterances that have a plural head noun (e.g. \"cats\").")
(comment Singular-NLAttr "The attribute value carried by utterances that have a singular head noun (e.g. \"cat\").")
(comment UnmarkedNumber-NLAttr "The attributevalue carried by utterances that have a head that is unmarked for number (e.g. #$nonPlural-Generic).")
(comment RelevantSpec-NLAttr "The attribute value that represents the fact that some relevant Spec of this collection was referred to in the utterance.")
(comment RelevantInstance-NLAttr "The attribute value that represents the fact that some relevant instance of this collection was referred to in the utterance.")
(comment RelevantGroup-NLAttr "The attribute value that represents the fact that some relevant groups of instances of this collection was referred to in the utterance.")
(comment IndefinitePronoun "The collection of all indefinite pronouns: everyone, everybody, everything, someone, somebody, something, anyone, anybody, anything, noone, nobody, nothing.")
(comment tensed "This predicate is a generalization over the #$SpeechPartPredicates for all tensed active-voice verb forms.  This predicate is #$notAssertible in English, since it will always cash out as an assertion on one of its spec-preds.")
(comment LinguisticRule "The collection of all rules that describe how complex linguistic objects are composed of simpler ones.")
(comment AffixRule "The collection of all rules describing the combination of bases and affixes into morphologically complex words.")
(comment SuffixRule "The collection of all rules describing the combination of bases and suffixes into morphologically complex words.")
(comment PrefixRule "The collection of all rules describing the combination of bases and prefixes into morphologically complex words.")
(comment SuffixRule-Derivational "The collection of all rules describing the combination of bases and suffixes into morphologically complex words with a different meaning or #$SpeechPart from the base.")
(comment SuffixRule-Inflectional "The collection of all rules describing the combination of bases and suffixes into morphologically complex words whose meaning and #$SpeechPart are the same as those the base.")
(comment psRuleConstraint "This predicate is used to record constraints imposed by instances of #$PhraseStructureRule. (#$psRuleConstraint RULE CONSTRAINT) means that for RULE to generate the structure of a phrase, the appropriate daughter(s) must meet CONSTRAINT.")
(comment POSPredConstraintFn "(#$POSPredConstraintFn N PRED) denotes the constraint that the Nth daughter of a phrase have the part of speech and agreement features specified by PRED.")
(comment ConstituentTypeConstraintFn "(#$ConstituentTypeConstraintFn N TYPE) denotes the constraint that the Nth daughter of a phrase be of type TYPE.")
(comment PhraseFn "(#$PhraseFn SP) denotes the collection of saturated phrases - i.e. #$barLevelOfPhrase 2 - whose #$posOfPhrase is SP.")
(comment PhraseFn-Bar1 "(#$PhraseFn-Bar1 SP) denotes the collection of unsaturated phrases - i.e. #$barLevelOfPhrase 1 - whose #$posOfPhrase is SP.")
(comment presentIndicative "Relates a word unit with a wordform used for the present
indicative tense. Specializations of this predicate account for person
and number (e.g., #$presentIndicative1stSingular)")
(comment presentIndicative1stSingular "The 1st person singular of the present indicative tense (e.g. \"tengo\" in Spanish)")
(comment presentIndicative2ndSingular "The 2st person singular of the present indicative tense (e.g. \"tienes\" in Spanish)")
(comment presentIndicative3rdSingular "The 3rd person singular of the present indicative tense (e.g. \"tiene\" in Spanish)")
(comment presentIndicative1stPlural "The 1st person Plural of the present indicative tense (e.g. \"tenemos\" in Spanish)")
(comment presentIndicative3rdPlural "The 3rd person Plural of the present indicative tense (e.g. \"tienen\" in Spanish)")
(comment PSRuleIsaConstraintFn "(#$PSRuleIsaConstraintFn N COL) denotes the constraint that the CycL representation of the semantics of the Nth daughter be an instance of COL.")
(comment PSRuleGenlsConstraintFn "(#$PSRuleGenlsConstraintFn N COL) denotes the constraint that the CycL representation of the semantics of the Nth daughter be a subcollection of COL.")
(comment psRuleSemanticsFromDtr "(#$psRuleSemanticsFromDtr RULE N) means that the semantics of any phrase described by the #$PhraseStructureRule RULE is just the semantics of its Nth daughter.")
(comment psRuleCategory "(#$psRuleCategory RULE CAT) means that any phrase described by the #$PhraseStructureRule RULE is an instance of the syntactic category CAT.")
(comment psRuleArity "(#$psRuleArity RULE N) means that any phrase described by the #$PhraseStructureRule RULE consists of exactly N daughter constituents (which may in turn consist of more constituents).")
(comment DetNbarAgrConstraintFn "(#$DetNbarAgrConstraintFn N D) denotes the constraint that the Nbar that is the Nth daughter of a phrase agree with the determiner that is the Dth daughter.")
(comment psRuleSyntacticHeadDtr "(#$psRuleSyntacticHeadDtr RULE N) means that the part of speech and agreement properties of any phrase described by the #$PhraseStructureRule RULE are shared with its Nth daughter.")
(comment regularSuffix "(#$regularSuffix DPRED BPRED SUFFIX) means that a regular word
form whose part of speech is DPRED can be derived from a word form whose
part of speech is BPRED by adding the suffix SUFFIX.")
(comment is-Underspecified "(#$is-Underspecified ARG1 ARG2) says that ARG1, in some underspecified or perhaps metaphorical sense, 'is' ARG2.  Some very important spec preds include #$equals, #$isa, and #$genls.")
(comment NLWordFormWithFrameFn "(#$NLWordFormWithFrameFn SP FRAME) denotes the collection of all instances of SP whose #$subcatFrame is FRAME.")
(comment psRuleExample "(#$psRuleExample RULE STRING) gives an example STRING of the kind of phrase defined by the #$PhraseStructureRule RULE.")
(comment NLNegFn "(#$NLNegFn TAG FORM) means that a form of negation 

corresponding to TAG appeared in a natural language utterance which otherwise 

has the (initial) translation FORM. For example, (#$NLNegFn #$NotVP-NLAttr 

(#$likesAsFriend #$Bob Robin)) would used as the initial translation for 

an English sentence like: _Bob does not like Robin_.  This function 

serves as a hint to the NL subsystems, and is only intended to serve as a 

stand-in until the NL subsystems can determine the correct way to incorporate 

negation into the semantic translation of the utterance in question.")
(comment subcatFrameExample "(#$subcatFrameExample FRAME STRING) gives an example STRING of the kind of phrase defined by the #$SubcategorizationFrame FRAME.")
(comment subcatFrameArity "(#$subcatFrameArity FRAME NUM) indicates that a phrase headed by #$SubcategorizationFrame FRAME has NUM dependents.  Each dependent of a phrase headed by a given FRAME should be defined by at least one #$subcatFrameDependentConstraints assertion.  In other words, for any given FRAME, if (#$subcatFrameArity FRAME NUM) is true, then there should be at least NUM #$subcatFrameDependentConstraints assertions with FRAME as their arg1.")
(comment subcatFrameDependentConstraint "(#$subcatFrameDependentConstraint FRAME NUM CONSTRAINT) indicates that CONSTRAINT is the #$PhraseStructureConstraint for the NUM-th dependent in phrases headed by #$SubcategorizationFrame FRAME.  Each dependent of a phrase headed by a given FRAME should be defined by at least one #$subcatFrameDependentConstraint assertion.  In other words, for any given FRAME, if (#$subcatFrameArity FRAME NUM) is true, then there should be at least NUM #$subcatFrameDependentConstraint assertions with FRAME as their arg1.")
(comment NLPhrase "The collection of all #$SententialConstituents whose #$barLevelOfPhrase is 2, i.e., an X-double-bar or X''. This includes noun phrases like \"the dog\", verb phrases like \"chewed the bone\", clauses like \"Socrates was a philosopher\" etc.")
(comment NLWordForm "The collection of abstract, yet fully-specified (for morphological composition, part of speech, agreement features, meaning, and phonology, but not necessarily spelling) natural language word forms. An #$NLWordForm may be morphologically atomic or complex - i.e. it may be analyzeable into one or more morphemes. From a syntactic point of view, it is an atom - i.e., the syntactic combination of an #$NLWordForm with something else is no longer an #$NLWordForm. Each #$NLWordForm can be instantiated (via #$instantiationOfAIS) by arbitrarily many spoken or written #$NLWord-IBTs, and each is associated (via #$lexemeOfWordForm) with a single #$LexicalWord. An #$NLWordForm is defined entirely by the values of its linguistic features; two #$NLWordForms with the same feature values are identical. Thus the #$NLWordForms instantiated by \"hit\" in \"The arrow hit the target\" and \"The arrow has hit the target\" are distinct, because the first one has simple past tense while the second one has perfect tense. But those instantiated by \"hit\" in \"The arrow hit the target\" and \"The arrow hit the tree\" would be the same under a typical linguistic analysis.")
(comment posPredOfConstituent "(#$posPredOfConstituent CONST PRED) means that the part-of-speech predicate of CONST is PRED. For example, the part-of-speech predicate for \"house\" and \"the house that Jack built\" would both be (some specialization of) #$singular.")
(comment lexemeOfWordForm "(#$lexemeOfWordForm WORD-FORM LEXEME) means that the word WORD-FORM belongs to the lexeme LEXEME.")
(comment NLWord-IBT "The collection of all spoken, written, or otherwise expressed word tokens recognizeable as instantiations (see #$instantiationOfAIS) of #$NLWordForms. Note that a single #$NLWord-IBT can instantiate several #$NLWordForms.  Puns are examples of such multiple instantiations.")
(comment possiblePOSOfWordIBT "A binary predicate which relates instances of #$NLWord-IBT to instances of #$SpeechPart. (#$possiblePOSOfWordIBT WORD-IBT POS) means that POS is one of the parts of speech that WORD-IBT could have. Note that there is not necessarily a unique part of speech for an #$NLWord-IBT, since it may instantiate more than one #$NLWordForm, corresponding to different parts of speech. For example, an instantiation of the character string \"hit\" may be either a #$Noun or a #$Verb.")
(comment NLWord-Phonological "The collection of all #$AbstractInformationStructures that represent the phonology of a natural language word. Every instantiation of a given #$NLWord-Phonological will be an instance of #$NLWord-IBT, and will share the same phonology, but may differ somewhat in spelling, due to the arbitrariness of spelling conventions and the possibility that the writer may be ignorant of or may choose not to follow such conventions, or in pronunciation, due to factors such as an individual's accent or the phonological environment in which the word is pronounced.")
(comment playsActiveSubjectRole "(#$playsActiveSubjectRole 

 DESCRIPTION-OF-EVENT-TO-BE-PARSED #$TheSentenceSubject) says

 that #$TheSentenceSubject plays an active role in 

 DESCRIPTION-OF-EVENT-TO-BE-PARSED.")
(comment playsPassiveSubjectRole "(#$playsActiveSubjectRole 

 DESCRIPTION-OF-EVENT-TO-BE-PARSED #$TheSentenceSubject) says

 that #$TheSentenceSubject plays an passive role in 

 DESCRIPTION-OF-EVENT-TO-BE-PARSED.")
(comment psRuleTemplateDtr "(#$psRuleTemplateDtr RULE N) means that the semantics of any phrase described by the #$PhraseStructureRule RULE is determined by substituting the semantics of the other daughters into the semantic template for the Nth daughter.")
(comment NLPhraseWithFrameFn "(#$NLWordFormWithFrameFn SP FRAME) denotes the collection of all instances of SP whose #$subcatFrame is FRAME.")
(comment subcatFrameDependentKeyword "(#$subcatFrameDependentKeyword FRAME NUM KEYWORD) indicates that KEYWORD is the #$SubLKeyword for the NUM-th dependent in phrases headed by #$SubcategorizationFrame FRAME.")
(comment untensed "This predicate is a generalization over the #$SpeechPartPredicates for all untensed verb forms.  This predicate is #$notAssertible in English, since it will always cash out as an assertion on one of its spec-preds.")
(comment SubjectRolePredicate "The collection of 

#$TemplateMarkerObjects that are used

 in representing whether #$TheSentenceSubject of a given

 sentence plays an active or passive role.")
(comment causes-Underspecified "A generalization of

all individual-level causes-* predicates. 

(#$causes-Underspecified CAUSE EFFECT) says that CAUSE 

causes EFFECT.  Whenever possible, use one

 of the spec preds or axiomatically-related specializations.  See #$NoteAboutCausalityPredicates for a map of related predicates.")
(comment indirectObjectRoles "(#$indirectObjectRoles EVENT-TYPE ROLE) means that an indirect object of a verb 

that denotes EVENT-TYPE may be assumed to denote an actor that plays ROLE in the event 

denoted by the verb.")
(comment preferredIndirectObjectRole "(#$preferredIndirectObjectRole EVENT-TYPE ROLE) means that ROLE best describes

the role played by the referent of an indirect object of a verb that denotes EVENT-TYPE.")
(comment ConcatenatePhrasesFn "(#$ConcatenatePhrasesFn PHRASE1 ... PHRASEN) denotes the natural-language phrase formed by concatenating PHRASE1 ... PHRASEN.")
(comment BestNLPhraseOfStringFn "(#$BestNLPhraseOfStringFn STRING) denotes the
(possibly contextually dependent) best natural-language word
or phrase partially specified by STRING. The exact identity
of the phrase, including its syntactic structure, etc., will
often not need to be known, if the phrase is just
intended to be represented or expressed as a
#$CharacterString.")
(comment BestNLWordFormOfLexemeFn "(#$BestNLWordFormOfLexemeFn LEXEME) denotes the
(contextually dependent) natural-language word that best
instantiates LEXEME. The exact identity of the word form,
including its morphological form, agreement features, etc.,
may not need to be known, especially if it is just intended
to be represented or expressed as a #$CharacterString.")
(comment PhraseFormFn "(#$PhraseFormFn CONSTRAINT PHRASE) denotes the
(typically contextually dependent) natural language word or
phrase PHRASE, while specifying a linguistic constraint on
its form. Namely, the linguistic context requires that PHRASE
meet CONSTRAINT. For instance, in a typical English-language
context, (#$PhraseFormFn #$singular-Generic
(#$TermParaphraseFn #$Dog)) would denote the
#$SententialConstituent instantiated by the string 'dog'.")
(comment BestDetNbarFn "(#$BestDetNbarFn DET NBAR) denotes the (possibly contextually dependent) best noun phrase consisting of NBAR with determiner DET. For instance, (#$BestDetNbarFn (#$BestNLWordFormOfLexemeFn #$The-TheWord) (#$PhraseFormFn #$singular-Generic (#$TermParaphraseFn #$Dog))) would denote the #$NLPhrase instantiated by the string 'the dog' in a typical English-language context.")
(comment BestVerbFormForSubjectFn "(#$BestVerbFormForSubjectFn VERB-LEXEME PHRASE)
denotes the (possibly contextually dependent) best finite
verb form of VERB-LEXEME, given that it is constrained to
agree with PHRASE as its subject. For instance,
(#$BestVerbFormForSubjectFn #$Eat-TheWord (#$PhraseFormFn
#$singular-Generic (#$TermParaphraseFn #$Dog))) would denote
'eats' in a present-tense, typical English-language
context.")
(comment speechPartOfWordForm "(speechPartOfWordForm WORD-FORM POS) means that WORD-FORM
has the #$SpeechPart POS.")
(comment SpeechPartOfWordFormFn "(SpeechPartOfWordFormFn WORD-FORM) denotes the
#$SpeechPart of WORD-FORM.")
(comment Generic-NLAttr "A quantificational meta-attribute, marking a quantified NP as
generically interpreted (as in, e.g., `dogs chase cats'). IMPORTANT NOTE:
do NOT use to parse quantified NPs. This attribute is used by the
Reformulator as an intermediate step to interpret generic
quantification. Moreover, unlike other instances of #$NLQuantAttribute,
#$Generic-NLAttr does NOT correspond to a particular syntactic construct or
family of constructs.")
(comment posOfPhraseType "(#$posOfPhraseType PHRASE-TYPE POS) indicates that the syntactic category of every instance of PHRASE-TYPE is POS. For example, (#$posOfPhraseType #$NounPhrase #$Noun).")
(comment TheVPParse "#$TheVPParse is an #$IntermediateVocabFunction that is used to organize Verb Phrase Parser output in a form where it can be reformulated into assertible CycL. (#$TheVPParse SIT ROLE) denotes that #$IntermediateVocabTerm that can be processed by the #$CycLReformulator in the way prescribed by the relevant #$reformulatorEquiv and #$reformulatorEquals assertions. #$TheVPParse NAUTs are generated automatically by the #$CycPhraseStructureParser.")
(comment NLResponseAttribute "Instances of #$NLResponseAttribute are attribute values that specify the type of response given by a user. See #$NLResponseFn for more info.")
(comment NLResponseFn "#$NLResponseFn is used to specify a response from a user to Cyc with a specific attribute.  For example, if Cyc asks a user a question and the user doesn't know the answer, the response from the user will be (#$NLResponseFn #$Ignorance-NLResponse).  This will be the CycL representation for any of the myriad ways in which a user might signal ignorance of the answer to a question posed by Cyc.")
(comment Affirmative-NLResponse "The attribute given to NL utterances that signal assent.  See #$NLResponseFn for more information.")
(comment Negative-NLResponse "The attribute given to NL utterances that mean \"no\".  See #$NLResponseFn for more information.")
(comment Correct-NLResponse "The attribute given to NL utterances that mean \"correct\".  See #$NLResponseFn for more information.")
(comment Incorrect-NLResponse "The attribute given to NL utterances that mean \"incorrect\".  See #$NLResponseFn for more information.")
(comment Ignorance-NLResponse "The attribute given to NL utterances that signal ignorance, such as \"I don't know\".  See #$NLResponseFn for more information.")
(comment NLRequestAttribute "Instances of #$NLRequestAttribute are attribute values that specify which type of request was made by a user. See #$NLRequestFn for more info.")
(comment NLRequestFn "NATs using NLRequestFn represent requests by a user to do something with an #$RKFTool.  The arg3 of #$NLRequestFn is the list of arguments to be sent to the tool, and will frequently be nil.  (#$NLRequestFn #$StartTool-NLRequest #$CycConceptCreator (\"anthrax\")) signifies a request to start the #$CycConceptCreator with the argument list (\"anthrax\").")
(comment StartTool-NLRequest "#$StartTool-NLRequest is an attribute of a request from a user that signifies that the request is a request for the system to start a particular RKF tool.  For example, a request to start the #$CycScenarioDescriber would be represented in CycL by (#$NLRequestFn #$StartTool-NLRequest #$CycConceptCreator (\"anthrax\")).")
(comment AbortTool-NLRequest "#$AbortTool-NLRequest is an attribute of a request from a user that signifies that the request is a request for the system to terminate a particular RKF tool.  For example, a request to terminate the #$CycConceptCreator being used to create \"anthrax\" would be represented in CycL by (#$NLRequestFn #$StartTool-NLRequest #$CycConceptCreator (\"anthrax\")).")
(comment NLRolePredicate "A collection of relationships. Each instance of #$NLRolePredicate represents a syntactic relation that can hold between a type of situation and a #$Role involved in it. #$subjectRoles, for example, relates a situation-type to the role which typically is played by the subject of a sentence using a verb to express that situation. Example: (#$subjectRoles #$EatingEvent #$performedBy)")
(comment defaultCorrespondingRoles "(#$defaultCorrespondingRoles NL-ROLE ROLE) means that,

unless otherwise specified in a #$verbSemTrans assertion, in a verb

phrase where the verb denotes an event type which involves ROLE (see

#$rolesForEventType) AND the said verb takes a #$subcatFrame which

requires NL-ROLE, assume that ROLE is played by the syntactic role

NL-ROLE. Example: (#$defaultCorrespondingRoles #$preferredSubjectRole

#$doneBy) means that, unless there is a #$verbSemTrans specifying

otherwise, the subject plays the role that is a spec of

#$doneBy, that is (ROLE-SPEC-OF-DONEBY :ACTION :SUBJECT)")
(comment NLGenderAttribute "Instances of #$NLGenderAttribute are attribute values that specify the linguistic gender (e.g. masculine or feminine) for some expression. See #$PronounFn for an example of how these are used.")
(comment NLPersonAttribute "Instances of #$NLPersonAttribute are attributes values that specify linguistic person (e.g. ThirdPerson) for some expression. See #$PronounFn for an example of how these are used.")
(comment Ungendered-NLAttr "The attribute value carried by NL expressions which are unmarked for gender (e.g. the pronoun *you* makes no commitment as to gender.")
(comment Neuter-NLAttr "The attribute value carried by NL expressions which are marked as having a nueter gender (e.g. the pronoun *it* is used to refer referents having a neuter gender.")
(comment Masculine-NLAttr "The attribute value carried by NL expressions which are marked for masculine gender (e.g. the English pronoun *he* is marked for masculine gender.")
(comment Feminine-NLAttr "The attribute value carried by NL expressions which are marked for feminine gender (e.g. the English pronoun *she* is marked for feminine gender.")
(comment FirstPerson-NLAttr "The attribute value carried by NL expressions which are marked as first person (e.g. the English pronoun *I* is marked as a first person pronoun.")
(comment SecondPerson-NLAttr "The attribute value carried by NL expressions which are marked as second person (e.g. the English pronoun *you* is marked as a second person pronoun.")
(comment ThirdPerson-NLAttr "The attribute value carried by NL expressions which are marked as third person (e.g. the English pronoun *she* is marked as a third person pronoun.")
(comment instancesDontNeedLexification "(#$instancesDontNeedLexification COLL) means that the usual requirement that a CycL term have lexical assertions associating it with natural language words and phrases does not apply to instances of COLL.")
(comment termDoesntNeedLexification "(#$termDoesntNeedLexification TERM) means that the usual requirement that a CycL term have lexical assertions associating it with natural language words and phrases does not apply to TERM. See also #$instancesDontNeedLexification.")
(comment StopTool-NLRequest "#$StopTool-NLRequest is an attribute of a request from a user that signifies that the request is a request for the system to stop a particular RKF tool.  For example, a request to stop the #$CycScenarioDescriber would be represented in CycL by (#$NLRequestFn #$StopTool-NLRequest #$CycConceptCreator (\"anthrax\")).")
(comment ProperName-NLAttr "The attribute value carried by utterances that are definite (e.g. \"the dog\").")
(comment prenominalModifier "(#$prenominalModifier WORD STRING) states that STRING is one of the strings for the word unit WORD that can be used as a premodifier to a noun. This predicate is #$notAssertible since it is concluded from the current state of the knowledge base.")
(comment simpleNounStrings "This predicate is a generalization over the #$CountNoun speech-part predicates.  This predicate is #$notAssertible, since it will always cash out as an assertion on one of its spec-preds.")
(comment headsPhraseOfType "#$headsPhraseOfType relates a speech part with the category of phrase that it heads.")
(comment subcatFrameKeywords "(#$subcatFrameKeywords FRAME KEYWORD) indicates that KEYWORD is one of the #$SubLKeyword that may be used in semantic templates for the #$SubcategorizationFrame FRAME.")
(comment PSBindingFn "(#$PSBindingFn N KEYWORD) indicates that the semantics of the Nth daughter of a phrase - where the leftmost daughter is the 0th daughter - is to be substituted for KEYWORD in the semantic template from the semantic head daughter of the phase.")
(comment PhraseStructureBinding "The collection of specifications of mappings from semantic slots in the semantic template of the semantic head of a phrase to the semantics of its dependents.")
(comment NLRelation "The collection of relations which are used to represent natural language objects or natural language-describing propositions.")
(comment NLFunction "The collections of functions which are used to denote linguistic objects and object types.")
(comment PSBindingFn-TypeLevel "(#$PSBindingFn-TypeLevel N KEYWORD) indicates that the type-level semantics of the Nth daughter of a phrase - where the leftmost daughter is the 0th daughter - is to be substituted for KEYWORD in the semantic template from the semantic head daughter of the phase.")
(comment psRuleTemplateBindings "(#$psRuleTemplateBindings RULE BINDING) means that the semantics of any phrase described by the #$PhraseStructureRule RULE is determined in part by performing the substitution specified by BINDING.")
(comment NLContextSpecificationPredicate "The collection of all NL predicates which serve to restrict
a semantic mapping to a particular context.")
(comment genStringAssertion-Precise "(#$genStringAssertion-Precise TERM ASRTN) means that a ASRTN should be used in generation for the Cyc TERM (or derived term in the case of functions) when the primary goal is a precise, rather than a natural, paraphrase.")
(comment TechnicalSpeech "#$TechnicalSpeech is specialized vocabulary used in relation to a particular subject. Note that this is not the same as #$Jargon, which is specialized vocabulary \"shared by a group of people with a common recreational, occupational, educational etc. pursuit.\"")
(comment IndefiniteNounPPFn "(#$IndefiniteNounPPFn WORD STRING PHRASE) denotes the - contextually best - indefinite NP of the form 'a WORD STRING PHRASE'.")
(comment DefiniteNounPPFn "(#$DefiniteNounPPFn WORD STRING PHRASE) denotes the - contextually best - definite NP of the form 'the WORD STRING PHRASE'.")
(comment BestDetNbarFn-Definite "(#$BestDetNbarFn-Definite NBAR)

denotes the (possibly contextually dependent) best definite noun

phrase headed by NBAR.")
(comment BestDetNbarFn-Indefinite "(#$BestDetNbarFn-Indefinite NBAR) denotes the (possibly contextually dependent) best indefinite noun phrase headed by NBAR.")
(comment BestCycLPhraseFn "(#$BestCycLPhraseFn OBJ) denotes the

(possibly contextually dependent) best natural-language word

or phrase using the CycL representation of OBJ. Typically, the string instantiation of such a phrase would just be OBJ wrapped in quotes.")
(comment hasFamilyNameFirst "(#$hasFamilyNameFirst GROUP) indicates that members of the #$PersonTypeByCulture GROUP generally write their family names first. For example, (#$hasFamilyNameFirst #$ChinesePerson) states that Chinese people write their family name first.")
(comment GenValueParaphraseFn "(#$GenValueParaphraseFn STRING COL) denotes the - contextually best - phrase 'STRING for a COL'.")
(comment NLTerm "The collection of terms which are used to represent natural language objects.")
(comment RelationalNounSlot "The collection of binary predicates that describe a specified relation of an animal, group of animals (usually human animals), or an organization to another animal (also usually a human animal).  These relations can be summed up by common nouns such as 'mother' or 'boss' or 'neighbor'.  This class of predicates exists to facilitate parsing of sentences with forms such as 'X has a Y' or 'does X have a Y?' where Y is one of these relational nouns.")
(comment denotationRelatedTo-New "The predicate #$denotationRelatedTo-New is used to link English words with concepts indirectly related to their meanings.  For instance, both #$Wife-TheWord and #$Husband-TheWord are semantically connected to the predicate #$wife, but the two words do not denote the same relation.  If (#$denotationRelatedTo-New #$Husband-TheWord #$CountNoun 0 #$wife), we know that the word 'husband' somehow relates to #$wife, but should not be taken to denote it.")
(comment LexicalWordType "#$LexicalWordType is the collection of collections of words.

Example: #$EnglishWord, #$LexicalWord, and so on. See also #$LexicalWordTypeByLanguage.")
(comment LexicalWordTypeByLanguage "#$LexicalWordTypeByLanguage is the collection of

#$LexicalWordTypes which divide #$LexicalWord by language. Example:

#$EnglishWord, #$SpanishWord, and so on. Note that a #$LexicalWord may belong to more than one language.")
(comment wordInLanguage "(#$wordInLanguage WORD LANGUAGE) means that the #$LexicalWord WORD is a word in the #$NaturalLanguage LANGUAGE. For example, (#$wordInLanguage #$Hello-TheWord #$EnglishLanguage).")
(comment lexicalWordTypeForLanguage "(#$lexicalWordTypeForLanguage LANGUAGE WORDTYPE) means that
the #$LexicalWordTypeByLanguage for language LANGUAGE is WORDTYPE.
Example: (#$lexicalWordTypeForLanguage #$EnglishLanguage
#$EnglishWord).")
(comment denotesArgInReln "(#$denotesArgInReln NOUN POS PRED ARG) says that (#$denotation-New NOUN POS TERM), where TERM is the collection of things that are the arg ARG of PRED for any true sentence in which PRED is the arg0.  For example, (#$denotesArgInReln #$Mother-TheWord #$CountNoun #$mother 2) says that one denotation for the word 'mother,' qua #$CountNoun, is the collection of things T such that (#$relationExistsInstance #$mother #$Thing T) -- i.e., the collection of all mothers.  This predicate is useful for linking nouns in the lexicon to *virtual* KB collections, particularly collections we don't necessarily want to have explicitly represented in the KB.")
(comment psRuleSemanticsHandler "(#$psRuleSemanticsFromDtr RULE SYMBOL) means that the semantics of any phrase described by the #$PhraseStructureRule RULE is determined by the SubL function whose name is SYMBOL.")
(comment MorphologicalProcess "A collection of collections. Elements of

#$MorphologicalProcess represent morphological processes such as

#$Affixation-WordFormationProcess, #$Conversion-WordFormationProcess and so on.")
(comment NLCollection "The collection of collections which are used to denote linguistic objects and object types.")
(comment Conversion-WordFormationProcess "Elements of #$Conversion-WordFormationProcess are word formings involving the

shifting of part of speech with no change in word form. Example:

(#$Paint-TheWord #$Verb) from (#$Paint-TheWord #$Noun).")
(comment LexicalWordFormationProcess "A collection of collections. Elements of #$LexicalWordFormationProcess group word formings according to formation method. Example: #$DerivationalPrefixation is a kind of #$LexicalWordFormationProcess involving the agglutination of a #$LexicalPrefix to either a #$RootWord or a #$DerivedWord.")
(comment Affixation-WordFormationProcess "#$Affixation-WordFormationProcess is the collection of #$LexicalWord or

#$NLWordForm formings resulting from the agglutination of

#$LexicalAffixes with other morphemes. Important subsets include

#$Prefixation and #$Suffixation.")
(comment DerivationalAffixation "Elements of #$DerivationalAffixation are word formings involving the
agglutination of a #$DerivationalAffix to either a #$RootWord or a #$DerivedWord.")
(comment InflectionalAffixation "Elements of #$InflectionalAffixation are #$NLWordForm formings involving the
agglutination of an #$InflectionalAffix to an #$NLWordForm.")
(disjointWith DerivationalAffixation InflectionalAffixation)
(comment Prefixation "#$Prefixation is the collection of #$LexicalWord or
#$NLWordForm formings resulting from the agglutination of
#$LexicalPrefixes with #$LexicalWords or with #$NLWordForms.")
(comment DerivationalPrefixation "Elements of #$DerivationalPrefixation are word formings involving the

agglutination of a #$LexicalPrefix to either a #$RootWord or a

#$DerivedWord. Example: #$Un_Neg-ThePrefix + #$Stable-TheWord.")
(comment DerivedWord "Instances of #$DerivedWord are words formed as a result of

#$DerivationalAffixation or #$Compounding-WordFormationProcess. Example:

#$Insightful-TheWord is a #$DerivedWord because it is a construct of

the #$DerivedWord #$Insight-TheWord + the #$DerivationalAffix

#$Ful_AdjectiveProducing-TheSuffix.")
(comment ComplexWord "Collection of #$LexicalWords which *can* be further

subdivided into morphemes, where the sub-morphemes are recognisable

units by native speakers of the language. Example:

#$Insightful-TheWord.")
(comment Compounding-WordFormationProcess "Elements of #$Compounding-WordFormationProcess are word formings involving the

agglutination of one #$RootWord or #$DerivedWord to another #$RootWord

or #$DerivedWord. Example: #$Eye-TheWord + #$Sight-TheWord.")
(comment derivedUsingWordFormationType "(#$derivedUsingWordFormationType DERIVED-WORD WORD-FORM) means that DERIVED-WORD was derived according to the the morphological process WORD-FORM. Example: (#$derivedUsingWordFormationType #$Insight-TheWord #$DerivationalPrefixation).")
(comment DerivationalAffix "The collection of #$LexicalAffixes which, when joined with
other morphemes, result in #$DerivedWords.")
(comment InflectionalAffix "The collection of #$LexicalAffixes which, when joined with
other morphemes, result in #$NLWordForms.")
(comment EnglishDerivationalAffix "The collection of #$LexicalAffixes which, when joined with
other morphemes, result in #$EnglishDerivedWords.")
(comment EnglishInflectionalAffix "The collection of #$LexicalAffixes which, when joined with
other morphemes, result in #$NLWordForms of #$EnglishWords.")
(comment DerivationalPrefix "The collection of #$LexicalPrefixes which, when joined with
other morphemes, result in #$DerivedWords.")
(comment InflectionalPrefix "The collection of #$LexicalPrefixes which, when joined with
other morphemes, result in #$NLWordForms.")
(comment EnglishDerivationalPrefix "The collection of #$LexicalPrefixes which, when joined with
other morphemes, result in #$EnglishDerivedWords.")
(comment EnglishInflectionalPrefix "The collection of #$LexicalPrefixes which, when joined with
other morphemes, result in #$NLWordForms of #$EnglishWords.")
(comment DerivationalSuffix "The collection of #$LexicalSuffixes which, when joined with
other morphemes, result in #$DerivedWords.")
(comment InflectionalSuffix "The collection of #$LexicalSuffixes which, when joined with
other morphemes, result in #$NLWordForms.")
(comment EnglishDerivationalSuffix "The collection of #$LexicalSuffixes which, when joined with
other morphemes, result in #$EnglishDerivedWords.")
(comment EnglishInflectionalSuffix "The collection of #$LexicalSuffixes which, when joined with
other morphemes, result in #$NLWordForms of #$EnglishWords.")
(comment derivedUsingPrefix "(#$derivedUsingPrefix DERIVED-WORD PREFIX) means that the

derivational prefix PREFIX was used in the derivation of

DERIVED-WORD. Example: (#$derivedUsingPrefix #$Unhappy-TheWord #$Un_Neg-ThePrefix).")
(comment regularlyDerivedFrom "(#$regularlyDerivedFrom DERIVED-WORD BASE-WORD) means

that the #$DerivedWord DERIVED-WORD is regularly derived from

BASE-WORD. Example: (#$regularlyDerivedFrom #$Insightful-TheWord #$Insight-TheWord).")
(comment irregularlyDerivedFrom "(#$irregularlyDerivedFrom DERIVED-WORD BASE-WORD)

represents that the #$DerivedWord DERIVED-WORD is irregularly derived

from BASE-WORD. Example: (#$irregularlyDerivedFrom #$Reception-TheWord #$Receive-TheWord).")
(comment derivedFromCompounds "(#$derivedFromCompounds DERIVED-WORD WORD1 WORD2) means that
DERIVED-WORD is a compound word derived from the two compounds WORD1
and WORD2.")
(comment derivedUsingSuffix "(#$derivedUsingSuffix DERIVED-WORD SUFFIX) means that the
derivational prefix SUFFIX was used in the derivation of
DERIVED-WORD.")
(comment InflectionalPrefixation "Elements of #$InflectionalPrefixation are #$NLWordForm formings involving the
agglutination of an #$InflectionalPrefix to an #$NLWordForm.")
(comment Suffixation "#$Suffixation is the collection of #$LexicalWord or
#$NLWordForm formings resulting from the agglutination of
#$LexicalSuffixes with #$LexicalWords or with #$NLWordForms.")
(comment DerivationalSuffixation "Elements of #$DerivationalSuffixation are word formings involving the
agglutination of a #$LexicalSuffix to either a #$RootWord or a #$DerivedWord. Example:
#$Happy-TheWord + #$Ness-Suffix.")
(comment InflectionalSuffixation "Elements of #$InflectionalSuffixation are #$NLWordForm formings involving the
agglutination of an #$InflectionalSuffix to an #$NLWordForm.")
(disjointWith ComplexWord SimpleWord)
(comment SimpleWord "Collection of #$LexicalWords whose #$baseForm cannot be

further subdivided into morphemes, where the sub-morphemes are

recognisable units by native speakers of the language. Example:

#$Run-TheWord.")
(comment RootWord "Instances of #$RootWord are #$LexicalWords which form the

base of a derived word or inflected form AND whose #$baseForms cannot

be further subdivided into morphemes, where the sub-morphemes are

recognisable units by native speakers of the language. The meaning of

any word or word form based on a #$RootWord is derived principally

from the #$RootWord. Every #$RootWord has (should have) associated

with it a general semantics, represented by the predicate

#$generalSemantics. Example: (#$generalSemantics

#$Bank_RiverBank-TheWord #$RiverBank). Also, see #$SimpleWord and

#$ComplexWord.")
(comment CompoundWord "A #$CompoundWord is a #$LexicalWord which is derived via the

#$MorphologicalProcess #$Compounding-WordFormationProcess. Example: #$Eyesight-TheWord.")
(comment DerivedWordFormingFunction "#$DerivedWordFormingFunction is the collection of functions
used for representing derived words. Example: #$WordWithPrefixFn --
(#$WordWithPrefixFn #$In-Prefix #$Sight-TheWord) is a #$rewriteOf #$Insight-TheWord.")
(comment preferredBaseForm "(#$baseForm WORD STRING) represents the base form for

#$LexicalWord WORD. Example: (#$baseForm #$Paint-TheWord \"paint\"). The base form of a lexical word is the string which

serves as the base in #$MorphologicalProcesses. Every #$LexicalWord

should have one and only one base form associated with it, but that

base form may instantiate more than one #$SpeechPart. Example:

#$Paint-TheWord has the base form \"paint\" which may be either a noun

or a verb. See #$posBaseForms for more on this.")
(comment posBaseForms "(#$posBaseForms WORD POS) represents the different parts of
speech that a #$LexicalWord's base form has associated with it. See
#$baseForm. Example: (#$posBaseForms #$Paint-TheWord #$Verb).")
(comment generalSemantics "(#$generalSemantics WORD DENOT) means that DENOT is
semantically relevant to all of the word forms of WORD.")
(comment lexicalItemStrings "(#$lexicalItemStrings LEX-ITEM STRING) states that STRING
is one of the strings for the #$LexicalItem LEX-ITEM in some
microtheory. Some important spec preds are #$wordStrings and
#$affixStrings. Note that this predicate (as well as #$wordStrings and
#$affixStrings) is #$notAssertible since it is concluded from the
current state of the knowledge base.")
(comment affixString "(#$affixString AFFIX STRING) states that STRING is the string for the #$LexicalAffix AFFIX in some microtheory. Note

that this predicate is #$notAssertible since it is concluded from the

current state of the knowledge base. See #$prefixString and

#$suffixString for some assertible specPreds.")
(comment prefixString "(#$prefixString PREFIX STRING) states that STRING is one

of the strings for the #$LexicalPrefix PREFIX in some microtheory.

Example: (#$prefixString #$Un_Not-Pre \"un\").")
(comment suffixString "(#$suffixString SUFFIX STRING) states that STRING is one

of the strings for the #$LexicalSuffix SUFFIX in some microtheory.

Example: (#$suffixString #$Less-Suf \"less\").")
(comment WordWithPrefixFn "(#$WordWithPrefixFn PREFIX WORD) represents the lexical
word formed from adding PREFIX to WORD. See
#$DerivedWordFormingFunctions for more on this and similar functions.")
(comment WordWithSuffixFn "(#$WordWithSuffixFn WORD SUFFIX) represents the lexical

word formed from adding SUFFIX to WORD. See

#$DerivedWordFormingFunctions for more on this and similar functions.")
(comment nonGradableAdjectiveForm "The relationship between an #$EnglishWord and its
nongradable adjectival form. Example: \"unique\". Note that the
determination of gradability is based on semantic considerations, such
as having an instance #$ScalarInterval or #$PhysicalAttribute as the
denotation. However, there are special cases (e.g., \"presidential\"),
where gradability cannot readily be determined from the semantic
mapping.")
(comment AffixCategory "The collection of all affix categories. Example: #$NonCategoryChangingAffix.")
(comment PrefixCategory "The collection of all prefix categories. Example: #$NegativePrefix.")
(comment NonCategoryChangingAffix "The collection of affixes which, when combined with a word,
result in a #$DerivedWord with the same #$SpeechPart as the original
word.")
(comment CategoryChangingAffix "The collection of affixes which, when combined with a word,
result in a #$DerivedWord with a different #$SpeechPart from the
original word.")
(comment NegativePrefix "The collection of prefixes which serve to negate the meaning

of the words they combine with. Example: #$Un_Neg-Pre +

#$Happy-TheWord means \"not\" happy.")
(comment ReversativePrefix "The collection of prefixes which serve to reverse the

meaning of the words they combine with. Example: #$Un_Rev-ThePrefix +

#$Tie-TheWord means *the reverse of tying*.")
(comment PejorativePrefix "The collection of prefixes which serve to cast pejorative connotations on the words they combine with. Example: #$Mal-Pre +
#$Treat-TheWord means *treat badly*.")
(comment DegreePrefix "The collection of prefixes which serve to modify by degree or size the meanings of the words they combine with. Example: #$Hyper-Pre + #$Sensitive-TheWord *extremely sensitive*.")
(comment AttitudePrefix "The collection of prefixes which serve to modify by orientation or attitude the meanings of the words they combine with. Example: #$Contra-Pre + #$Indicate-TheWord *advise against*.")
(comment TemporalPrefix "The collection of prefixes which serve to modify by time or order the meanings of the words they combine with. Example: #$Ex-Pre + #$Husband-TheWord *former husband*.")
(comment NeoClassicalPrefix "The collection of prefixes which were originally Greek or Latin and which serve to modify the meanings of the words they combine with in various ways. Example: #$Auto-Pre + #$Biography-TheWord *self biography*.")
(comment SuffixCategory "The collection of all suffix categories. Example:

#$DenominalSuffix.")
(comment NounProducingSuffix "The collection of suffixes which serve to convert words into #$Nouns. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment AdjectiveProducingSuffix "The collection of suffixes which serve to convert words into #$Adjectives. Example: #$Delight-TheWord + #$Ful_AdjectiveProducing-TheSuffix = #$Delightful-TheWord.")
(comment AdverbProducingSuffix "The collection of suffixes which serve to convert words into #$Adverbs. Example: #$Happy-TheWord + #$Ly_AdverbProducing-TheSuffix = #$Happily-TheWord.")
(comment VerbProducingSuffix "The collection of suffixes which serve to convert words into #$Verbs. Example: #$Sad-TheWord + #$En-TheSuffix = #$Sadden-TheWord.")
(comment DenominalAbstractNounProducingSuffix "The collection of suffixes which serve to convert #$Nouns into abstract nouns; these generally, though not always, are #$MassNouns. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment DenominalConcreteNounProducingSuffix "The collection of suffixes which serve to convert #$Nouns into concrete nouns; these generally are #$CountNouns. Example: #$Book-TheWord + #$Let-TheSuffix = #$Booklet-TheWord.")
(comment DeverbalNounProducingSuffix "The collection of suffixes which serve to convert #$Verbs into #$Nouns. Example: #$Write-TheWord + #$Er_AgentiveNounProducing-TheSuffix = #$Writer-TheWord.")
(comment DeAdjectivalNounProducingSuffix "The collection of suffixes which serve to convert #$Adjectives into #$Nouns. Example: #$Kind-TheWord + #$Ness-TheSuffix = #$Kindness-TheWord.")
(comment DenominalAdjectiveProducingSuffix "The collection of suffixes which serve to convert #$Nouns into #$Adjectives. Example: #$Delight-TheWord + #$Ful_AdjectiveProducing-TheSuffix = #$Delightful-TheWord.")
(comment DeverbalAdjectiveProducingSuffix "The collection of suffixes which serve to convert #$Verbs into #$Adjectives. Example: #$Drink-TheWord + #$Able_Deverb-TheSuffix = #$Drinkable-TheWord.")
(comment DeAdjectivalAdjectiveProducingSuffix "The collection of suffixes which serve to convert #$Adjectives into #$Adjectives. Example: #$Upper-TheWord + #$Most-TheSuffix = #$Uppermost-TheWord.")
(comment DenominalVerbProducingSuffix "The collection of suffixes which serve to convert #$Nouns into #$Verbs. Example: #$Hyphen-TheWord + #$Ate-TheSuffix = #$Hyphenate-TheWord.")
(comment DeAdjectivalVerbProducingSuffix "The collection of suffixes which serve to convert #$Adjectives into #$Verbs. Example: #$Sad-TheWord + #$En-TheSuffix = #$Sadden-TheWord.")
(comment DeverbalAbstractNounProducingSuffix "The collection of suffixes which serve to convert #$Verbs into abstract nouns; these generally, though not always, are #$MassNouns. Example: #$Break-TheWord + #$Age_Deverbal-TheSuffix = #$Breakage-TheWord.")
(comment DeverbalConcreteNounProducingSuffix "The collection of suffixes which serve to convert #$Verbs into concrete nouns; these generally, though not always, are #$CountNouns. Example: #$Appoint-TheWord + #$Ee_Deverb-TheSuffix = #$Appointee-TheWord.")
(comment DeAdjectivalAbstractNounProducingSuffix "The collection of suffixes which serve to convert #$Adjectives into abstract nouns; these generally, though not always, are #$MassNouns. Example: #$Rapid-TheWord + #$Ity-TheSuffix = #$Rapidity-TheWord.")
(comment NLSimpleBinaryConjunctionFn "(#$NLSimpleBinaryConjunctionFn PHRASE1  PHRASE2) denotes the natural-language phrase formed by concatenating: PHRASE1 'and' PHRASE2. This is viewed as kind of a catch-all for cases where a function for particular types of PHRASE1 and PHRASE2 aren't available. For examples, (#$NLSimpleBinaryConjunctionFn (#$NPIsNP-NLSentenceFn <blah blah blah>) (#$ConcatenatePhrasesFn <blah blah blah>)) is a fine way to conjoin sentences, but if PHRASE1 and PHRASE2 are NP's, #$TermParaphraseFn-NPAndNP is preferred.")
(comment TermParaphraseFn-NPAndNP "(#$TermParaphraseFn-NPAndNP THING1 THING2) denotes the phrase that's essentially (#$ConcatenatePhrasesFn (#$TermParaphraseFn-NP THING1) AND (#$TermParaphraseFn-NP THING2))... typically (#$TermParaphraseFn-NPAndNP :ARG<X> :ARG<Y>), but anything that works for #$TermParaphraseFn-NP will work here.")
(comment DenominalAdverbProducingSuffix "The collection of suffixes which serve to convert #$Nouns into #$Adverbs. Example: #$Home-TheWord + #$Ward_AdverbProducing-TheSuffix = #$Homeward-TheWord.")
(comment DeAdjectivalAdverbProducingSuffix "The collection of suffixes which serve to convert #$Adjectives into #$Adverbs. Example: #$Commendable-TheWord + #$Ably-TheSuffix = #$Commendably-TheWord.")
(comment CategoryChangingPrefix "The collection of prefixes which serve to change the category of the words they combine with. Example: #$Em-Pre + #$Power-TheWord (#$Noun) = #$Empower-TheWord (#$Verb).")
(comment LinguisticallyImpossibleLexicalWord "The collection of all lexical words which are not available for use in a language because they are barred from lexicalisation by some linguistic word formation constraint, be it

syntactic, semantic, phonologic, morphologic, or even pragmatic, of

the language in question. We could have created the collection LinguisticallyPossibleLexicalWord but this collection is more efficient for browsing and for inferencing since we will generally be specifying the conditions under which something *cannot* be a word, rather than the conditions under which it can; this collection allows us to do so with far fewer rules.")
(comment DeAdjectivalNoun "The collection of all #$Nouns derived from #$Adjectives. Example: #$Nouns derived using #$DeAdjectivalNounSuffixes such as #$Ity-Suf: #$Rapid-TheWord + #$Ity-Suf --> #$Rapidity-TheWord and (#$posBaseForms #$Rapidity-TheWord #$DeAdjectivalNoun).")
(comment DenominalNoun "The collection of all #$Nouns derived from #$Nouns. Example: #$Nouns derived using #$DenominalAbstractNounSuffixes such as #$Ship-Suf: #$Friend-TheWord + #$Ship-Suf --> #$Friendship-TheWord and (#$posBaseForms #$Friendship-TheWord #$DenominalNoun).")
(comment DenominalAdjective "The collection of all #$Adjectives derived from #$Nouns. Example: #$Adjectives derived using #$DenominalAdjectiveSuffixes such as #$Ful-Suf: #$Delight-TheWord + #$Ful-Suf --> #$Delightful-TheWord and (#$posBaseForms #$Delightful-TheWord #$DenominalAdjective).")
(comment DeAdjectivalAdjective "The collection of all #$Adjectives derived from #$Adjectives. Example: #$Adjectives derived using #$DeAdjectivalAdjectiveSuffixes such as #$Most-Suf: #$Upper-TheWord + #$Most-Suf --> #$Uppermost-TheWord and (#$posBaseForms #$Uppermost-TheWord #$DeAdjectivalAdjective).")
(comment DeverbalAdjective "The collection of all #$Adjectives derived from #$Verbs. Example: #$Adjectives derived using #$DeverbalAdjectiveSuffixes such as #$Able_Deverb-Suf: #$Drink-TheWord + #$Able_Deverb-Suf --> #$Drinkable-TheWord and (#$posBaseForms #$Drinkable-TheWord #$DeverbalAdjective).")
(comment DeAdjectivalVerb "The collection of all #$Verbs derived from #$Adjectives. Example: #$Verbs derived using #$DeAdjectivalVerbSuffixes such as #$En-Suf: #$Sad-TheWord + #$En-Suf --> #$Sadden-TheWord and (#$posBaseForms #$Sadden-TheWord #$DeAdjectivalVerb).")
(comment DenominalVerb "The collection of all #$Verbs derived from #$Nouns. Example: #$Verbs derived using #$DenominalVerbSuffixes such as #$Ate-Suf: #$Hyphen-TheWord + #$Ate-Suf --> #$Hyphenate-TheWord and (#$posBaseForms #$Hyphenate-TheWord #$DenominalVerb).")
(comment DeAdjectivalAdverb "The collection of all #$Adverbs derived from #$Adjectives. Example: #$Adverbs derived using #$DeAdjectivalAdverbSuffixes such as #$Ably-Suf: #$Commendable-TheWord + #$Ably-Suf --> #$Commendably-TheWord and (#$posBaseForms #$Commendably-TheWord #$DeAdjectivalAdverb).")
(comment DenominalAdverb "The collection of all #$Adverbs derived from #$Nouns. Example: #$Adverbs derived using #$DenominalAdverbSuffixes such as #$Ward_Adverb-Suf: #$Home-TheWord + #$Ward_Adverb-Suf --> #$Homeward-TheWord and (#$posBaseForms #$Homeward-TheWord #$DenominalAdverb).")
(comment DenominalSuffix "The collection of suffixes which serve to convert #$Nouns into either other #$Nouns or some other #$SpeechPart. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment DeverbalSuffix "The collection of suffixes which serve to convert #$Verbs into either other #$Verbs or some other #$SpeechPart. Example: #$Drink-TheWord + #$Able-TheSuffix = #$Drinkable-TheWord.")
(comment DeAdjectivalSuffix "The collection of suffixes which serve to convert #$Adjectives into either other #$Adjectives or some other #$SpeechPart. Example: #$Upper-TheWord + #$Most-TheSuffix = #$Uppermost-TheWord.")
(comment FrameForPronouns "The class of #$SubcategorizationFrames which apply to pronouns, such as #$SubjectivePronounFrame and #$ObjectivePronounFrame")
(comment SubjectivePronounFrame "#$SubcategorizationFrame for pronouns that occur in the subject position. For example, 'it' occurs as a subjective pronoun in \"It's dead, Jim.\".")
(comment ObjectivePronounFrame "#$SubcategorizationFrame for pronouns that occur in the object position, such as being the direct or indirect object of verbs or as objects of prepositions.  For example, 'it' occurs as a objective pronoun in \"Did you read it?.\".")
(comment PredicativeOnlyAdjFrame "Frames for adjectives that can be used predicatively but not attributively, such as \"alive\" in \"the leader is still alive\".")
(comment adverbSemTransTemplate "(#$adverbSemTransTemplate COL FRAME TRANS) means that the translation of any adverb denotation of a word denoting an instance of COL, appearing with subcategorization frame FRAME, is TRANS.")
(comment DitransitivePP-ThatClauseFrame "This frame is used for words that take exactly two complements, the first of which is a PP and the second a that-clause. In HPSG terms: [COMPS  <PP, S[that]>] Example: 'Fred swore to Sally that he would never do it again'.")
(comment denotationTemplate "(#$denotationTemplate WORD POS TEMPLATE)

 says that TEMPLATE captures the meaning of one of the senses of WORD with part of speech POS.  #$denotationTemplate is used in conjunction with #$denotesArgInReln to provide denotations for words whose meaning is best

 expressed in CycL using relations.  For example, sentences in which the word

 \"mother\" occurs as a count noun (e.g., \"everyone has a mother\") are best expressed in CycL using the relation #$mother (e.g., (#$relationAllExists #$mother #$Person #$FemaleAnimal)).  However, since #$mother is an inappropriate #$denotation for #$Mother-TheWord, instead of asserting (#$denotation-New #$Mother-TheWord #$CountNoun #$mother), we infer from (#$denotesArgInReln #$Mother-TheWord #$CountNoun 2 #$mother) that the meaning of the #$CountNoun form of #$Mother-TheWord is best expressed through a template: (#$SubcollectionOfWithRelationToTypeFn #$FemaleAnimal #$mother #$Animal).  Thus the assertion, (#$denotationTemplate #$Mother-TheWord #$CountNoun

 (#$SubcollectionOfWithRelationToTypeFn #$FemaleAnimal #$mother #$Animal)) allows us to parse \"mother\" NPs and NBars into this template, without

requiring us to add unnecessary collections to the KB.")
(comment multiWordStringDenotesArgInReln "(#$multiWordStringDenotesArgInReln LIST NOUN POS PRED ARG) says that (#$multiWordString LIST NOUN POS TERM), where TERM is the collection of things that are the arg ARG of PRED for any true sentence in which PRED is the arg0.  For example, (#$multiWordStringDenotesArgInReln (\"biological\") #$Mother-TheWord #$CountNoun #$biologicalMother 2) says that one denotation for the phrase 'biological mother(s),' is the collection of things T such that (#$relationExistsInstance #$biologicalMother #$Thing T) -- i.e., the collection of all biological mothers.  This predicate is useful for linking nouns in the lexicon to *virtual* KB collections, particularly collections we don't necessarily want to have explicitly represented in the KB.")
(comment multiWordStringTemplate "(#$multiWordStringTemplate LIST WORD POS TEMPLATE)

 says that TEMPLATE captures the meaning of one of the phrases for which WORD with part of speech POS, is the head, and the string given in LIST is the modifying phrase.  This predicate is used in conjunction with #$multiWordStringDenotesArgInReln to provide denotations for words whose meaning is best

 expressed in CycL using relations.  For example, sentences in which the nbar

 \"biological mother(s)\" occur (e.g., \"everyone has one biological mother\") are best expressed in CycL using the relation #$biologicalMother (e.g., (#$relationAllExistsUnique #$biologicalMother #$Person #$FemaleAnimal)).  However, since #$biologicalMother is an inappropriate denotation for the phrase \"biological #$mother,\" instead of asserting (#$multiWordString (\"biological\") #$Mother-TheWord #$CountNoun #$biologicalMother), we infer from (#$multiWordStringDenotesArgInReln (\"biological\") #$Mother-TheWord #$CountNoun #$biologicalMother) that the meaning of the phrase \"biological mother(s)\" is best expressed through a template: (#$SubcollectionOfWithRelationToTypeFn #$FemaleAnimal #$biologicalMother #$Animal).  Thus the inferred assertion, (#$multiWordStringTemplate (\"biological\") #$Mother-TheWord #$CountNoun

 (#$SubcollectionOfWithRelationToTypeFn #$FemaleAnimal #$biologicalMother #$Animal)) allows us to parse \"biological mother(s)\" into this form, without

requiring us to add unnecessary collections to the KB.")
(comment DenotationTemplatePredicate "The collection of instances of #$NLSemanticPredicate that designate semantic templates for parsing.")
(comment compoundStringDenotesArgInReln "(#$compoundStringDenotesArgInReln NOUN LIST POS PRED ARG) says that (#$compoundString NOUN LIST POS TERM), where TERM is the collection of things that are the arg ARG of PRED for any true sentence in which PRED is the arg0.  For example, (#$compoundStringDenotesArgInReln #$Do-TheWord (\"of\" \"evil\") #$AgentiveNoun  

#$sinner 2) says that one denotation for the phrase \"doer(s) of evil,\" is the collection of things T such that (#$relationExistsInstance #$sinner #$Thing T) -- i.e., the collection of all sinners.  This predicate is useful for linking nouns in the lexicon to *virtual* KB collections, particularly collections we don't necessarily want to have explicitly represented in the KB.")
(comment compoundStringTemplate "(#$compoundStringTemplate WORD LIST POS TEMPLATE)

 says that TEMPLATE captures the meaning of one of the phrase for which WORD with part of speech POS, is the head, and the string given in LIST is the modifying phrase.  This predicate is used in conjunction with #$compoundStringDenotesArgInReln to provide denotations for words whose meaning is best

 expressed in CycL using relations.")
(comment DenotesArgInRelnPredicate "The collection of instances of #$NLSemanticPredicate that relate words and phrases to argument-places of relations.")
(comment NLMorphologyPredicate "The collection of #$NLPredicates used in representing NL morphology.")
(comment NLMorphologyFunction "The collection of #$NLFunctions used in representing NL morphology.")
(comment NLMorphologyTerm "The collection of #$NLTerms used in representing NL morphology.")
(comment thirdPersonSg-Generic "(#$thirdPersonSg-Generic WORD FORM) means that FORM is a third person singular form of WORD, in some tense. For example, \"went\" and \"goes\" are both third person singular forms of the verb #$Go-TheWord, in different tense.")
(comment firstPersonSg-Generic "(#$firstPersonSg-Generic ?WORD ?FORM) means that ?FORM is a first person form of ?WORD, in some tense.  For example, \"am\" and \"was\" are both first person singular forms of the verb #$Be-TheWord.")
(comment pluralVerb-Generic "(#$pluralVerb-Generic WORD FORM) means that FORM is a plural verb form of WORD, in some tense.  For example, \"were\" and \"are\" are both plural forms of the verb #$Be-TheWord.")
(comment singularVerb-Generic "(#$singularVerb-Generic ?WORD ?FORM) means that ?FORM is a singular verb form of ?WORD, in some tense.  For example, \"was\" and \"is\" are both singular forms of the verb #$Be-TheWord.")
(comment firstPersonSg-Past "(#$firstPersonSg-Past ?WORD ?FORM) means that ?FORM is the past first singular form of ?WORD *and* the past third singular form of ?WORD.  Example:  the #$firstPersonSg-Past form of #$Be-TheWord in English is \"was\" because we have \"I was\" (first singular). In fact, \"was\" may be the only use for this predicate in English.")
(comment thirdPersonSg-Past "(#$thirdPersonSg-Past ?WORD ?FORM) means that ?FORM is the past third singular form of ?WORD.  Example:  the #$thirdPersonSg-Past form of #$Be-TheWord in English is \"was\". In fact, \"was\" may be the only use for this predicate in English.")
(comment pluralVerb-Past "(#$pluralVerb-Past ?WORD ?FORM) means that ?FORM is the past plural form for all  form of ?WORD.  Example:  the past plural form of #$Be-TheWord in English is \"were\" because we have \"you were\" (second plural, second singular), \"they were\" (third plural), and \"we were\" (first plural) but not \"*I were\" (first singular) or \"*he were\" (third singular).  In fact, \"were\" may be the only use for this predicate in English.")
(comment secondPersonSg-Past "(#$secondPersonSg-Past ?WORD ?FORM) means that ?FORM is the second person singular past form of ?WORD.  Example:  the #$secondPersonSg-Past form of #$Be-TheWord in English is \"were\" because we have \"you were\". In fact, \"were\" may be the only use for this predicate in English.")
(comment SpeechPartPredicateByTense "This is the collection of #$SpeechPartPredicate -s that organize verb forms by tense.  They include #$pastTense-Generic and #$presentTense-Generic.")
(comment SpeechPartPredicateByNumber "This is the collection of #$SpeechPartPredicate -s that organize verb forms by grammatical number.  They include #$pluralVerb-Generic and #$singularVerb-Generic.")
(comment NLMorphologyCollection "The collection of #$NLCollections used in representing NL morphology.")
(comment Determiner-Central "The collection of central determiners, including definite and indefinite determiners (#$Determiner-Definite and #$Determiner-Indefinite) but excluding other specializations of #$Determiner (#$Predeterminer and #$Postdeterminer).")
(comment BaseWordFormTypeByStartingLetters "#$BaseWordFormTypeByStartingLetters is the collection of specs of #$BaseWordForm which represent #$BaseWordForms according to starting letters. Example: (#$BaseWordFormsStartingWithLetterSequenceFn \"m\") represents the

collection of #$LexicalWords beginning with the letter \"m\".")
(comment BaseWordFormTypeByEndingLetters "#$BaseWordFormTypeByEndingLetters is the collection of specs of #$BaseWordForm which represent #$BaseWordForms according to ending letters. Example: (#$BaseWordFormsEndingWithLetterSequenceFn \"m\") represents the

collection of #$LexicalWords ending with the letter \"m\".")
(comment BaseWordFormTypeByStartingPhonemeType "#$BaseWordFormTypeByStartingPhonemeType is the collection of

specs of #$BaseWordForm which represent #$BaseWordForms according to starting phoneme type. Example: (#$BaseWordFormsStartingWithPhonemeTypeFn

#$Stop-Consonant) represents the collection of #$BaseWordForms

beginning with a stop.")
(comment BaseWordFormTypeByEndingPhonemeType "#$BaseWordFormTypeByEndingPhonemeType is the collection of

specs of #$BaseWordForm which represent #$BaseWordForms according to ending

phoneme type. Example: (#$BaseWordFormsEndingWithPhonemeTypeFn #$Stop-Consonant)

represents the collection of #$BaseWordForms ending with a stop.")
(comment phoneticVariantOfPrefix "(#$phoneticVariantOfPrefix PREFIX STRING BASE-TYPE) means that

STRING is the #$prefixString of the #$LexicalPrefix PREFIX whenever it is

combined with a #$BaseWordForm having phonetic feature BASE-TYPE. Example:

(#$phoneticVariantOfPrefix #$In-ThePrefix \"im\" (#$BaseWordFormsStartingWithLetterSequenceFn \"m\"))")
(comment BaseWordFormsStartingWithLetterSequenceFn "(#$BaseWordFormsStartingWithLetterSequenceFn LETTERS) represents the collection of base word forms beginning with the letter sequence LETTERS. Example: (#$BaseWordFormsStartingWithLetterSequenceFn \"m\") denotes the collection of base word forms beginning with the letter \"m\".")
(comment BaseWordFormsEndingWithLetterSequenceFn "(#$BaseWordFormsEndingWithLetterSequenceFn LETTERS) represents the collection of base word forms ending with the letter sequence LETTERS. Example: (#$BaseWordFormsEndingWithLetterSequenceFn \"y\") denotes the collection of base word forms ending with the letter \"y\".")
(comment Phoneme "The collection of #$Phonemes. A phoneme is the smallest unit

of sound which affects the meaning of a word. Different languages have

different phonemes but there are general classes of phonemes which are

used to categorise phonemes across languages. See the specs of this

collection for those classes. Example: \"ie\" represents an

#$EnglishLanguage #$Diphthong-Vowel, which is a kind of phoneme.")
(comment BaseWordFormsStartingWithPhonemeTypeFn "(#$BaseWordFormsStartingWithPhonemeTypeFn PHONEME-TYPE) represents the collection of base word forms beginning with the phoneme type PHONEME-TYPE. Example: (#$BaseWordFormsStartingWithPhonemeTypeFn #$Labial-Consonant) denotes the collection of base word forms beginning with a labial consonant.")
(comment BaseWordFormsEndingWithPhonemeTypeFn "(#$BaseWordFormsEndingWithPhonemeTypeFn PHONEME-TYPE) represents the collection of base word forms ending with the phoneme type PHONEME-TYPE. Example: (#$BaseWordFormsEndingWithPhonemeTypeFn #$LabialConsonant) denotes the collection of base word forms ending with a labial consonant.")
(comment Consonant "Collection of #$Consonants. Consonants are those
sounds produced when something in the vocal tract is obstructing the
airflow. Example: The English letter \"l\" represents a consonant.")
(comment Vowel "Collection of #$Vowels. Vowel are those
sounds produced when nothing in the vocal tract is obstructing the
airflow. Example: The English letter \"a\" represents a vowel.")
(comment Stop-Consonant "Collection of stops. Stops (or plosives) are consonants
where the velum, a valve in your air pipe, is closed before air is
suddenly let through. Example: The English letter \"p\" represents a
stop.")
(comment Sonorant-Consonant "Collection of sonorant consonants. Sonorants are voiced sounds
characterised by relatively free air flow through the vocal tract.
Example: The English letter \"m\" represents a sonorant consonant.")
(comment Fricative-Consonant "Collection of fricatives. Fricatives (or spriants) are consonants
where the velum, a valve in your air pipe, is not closed, but there is friction when the sound is spoken. Example: The English letter \"f\" represents a
fricative.")
(comment Affricative-Consonant "Collection of affricatives. Affricatives (or affricates) are made up of two consonants; a stop followed by a fricative. Example: The English letters \"ch\" represents an affricative.")
(comment Monophthong-Vowel "Collection of monophthongs. Monophthongs are vowels where there is a constant sound during pronunciation; the tongue and mouth do not change position. Example: The English letter \"a\" represents a monophthong.")
(comment Diphthong-Vowel "Collection of diphthongs. Diphthongs are vowels where the sound changes during pronunciation; the tongue changes position or the mouth is opened or closed. Example: The English letters \"ou\" represent a diphthong.")
(comment BaseWordForm "The collection of all base morphemes; forms with which
combining forms combine. See #$baseForm for the string which
represents the #$BaseWordForm of a #$LexicalWord. Examples of #$BaseWordForms:
#$Happy-TheWord (#$BaseWordForm in #$Happiness-TheWord), #$Jeal-TheStem
(#$BaseWordForm in #$Jealous-TheWord).")
(disjointWith BaseWordForm LexicalAffix)
(comment phoneticVariantOfSuffix "(#$phoneticVariantOfSuffix SUFFIX STRING BASE-TYPE) means that

STRING is the #$suffixString of the #$LexicalSuffix SUFFIX whenever it is

combined with a #$BaseWordForm having phonetic feature BASE-TYPE. Example: (#$phoneticVariantOfSuffix #$Fy-TheSuffix \"ify\" (#$BaseWordFormsEndingWithLetterSequenceFn \"y\"))")
(comment NeoClassicalBaseWordForm "The sub-collection of base morphemes of neo-classical origin. Example: #$Incubate-TheWord.")
(comment WordConstituent "A word constituent is a possible part of a natural language
word. Examples: Instances of #$LexicalSuffix, #$BaseWordForm and so on.")
(comment MorphologicalRuleConstraint "Collection of constraints relevant during word formation and word analysis.

Example: (#$MorphemeCategorialConstraintFn #$LexicalSuffix

#$DeAdjectivalSuffix) is the #$MorphologicalRuleConstraint that the

element of a word which is the #$LexicalSuffix must be a

#$DeAdjectivalSuffix.")
(comment MorphologicalRuleConstraint-Categorial "Collection of categorial constraints relevant during word formation and word analysis. Example -- (#$MorphemeCategorialConstraintFn #$LexicalSuffix #$DeAdjectivalSuffix) is the #$MorphologicalRuleConstraint-Categorial that the part of a word which is the #$LexicalSuffix be a #$DeAdjectivalSuffix.")
(comment MorphologicalRuleConstraint-Semantic "Collection of semantic constraints relevant during word

formation and word analysis. Example: (#$MorphemeSemanticGenlsConstraintFn #$BaseWordForm

#$Event) is the #$MorphologicalRuleConstraint-Semantic that the #$BaseWordForm of a word denote a spec of #$Event.")
(comment DerivationalAffixByBasePOSCategory "Elements are specs of #$DerivationalAffix categorised

according to the part of speech instances combine with. Example:

Instances of #$DeAdjectivalSuffix combine with #$Adjectives to form

new words.")
(comment affixRuleCategorialConstraint "(#$affixRuleCategorialConstraint RULE CONSTRAINT) means that for RULE

to be applicable, CONSTRAINT must be met. Example: if RULE is

#$DerivationalSuffixRule-DeAdjectival, then the #$LexicalSuffix must be a

#$DeAdjectivalSuffix and the base form must be an #$Adjective: (#$affixRuleCategorialConstraint #$DerivationalSuffixRule-DeAdjectival (#$MorphemeCategorialConstraintFn #$LexicalSuffix #$DeAdjectivalSuffix)) and (#$affixRuleCategorialConstraint #$DerivationalSuffixRule-DeAdjectival (#$MorphemeCategorialConstraintFn #$BaseWordForm #$Adjective)).")
(comment affixRuleSemanticConstraint "(#$affixRuleSemanticConstraint RULE CONSTRAINT) means that

for RULE to be applicable, CONSTRAINT must be met. Example: if RULE is

#$PrefixRule-Degree, then the denotatum of the #$BaseWordForm must be an instance of

#$StandardUnitOfMeasure. (#$affixRuleSemanticConstraint

#$PrefixRule-Degree (#$MorphemeSemanticIsaConstraintFn #$BaseWordForm

#$StandardUnitOfMeasure)).")
(comment affixRuleTypeMorphemePosition "(#$affixRuleTypeMorphemePosition RULE-TYPE N MORPH) means that

instances of RULE-TYPE are applicable when MORPH is in the Nth position of

a word. Example:

(#$affixRuleTypeMorphemePosition #$SuffixRule 2 #$LexicalSuffix) means that for a suffix rule to be relevant to a word, an instance of #$LexicalSuffix must be the second element of the word.")
(comment affixRuleArity "(#$affixRuleArity RULE N) means that any word to which

#$AffixRule RULE applies consists of exactly N word constituents.

Example: (#$affixRuleArity #$DerivationalSuffixRule-DeAdjectival 2) ")
(comment affixRuleResultPOS "(#$affixRuleResultPOS RULE POS) means that a word created as

a result of the morphological process described in RULE has part of

speech POS. Example: (#$affixRuleResultPOS

#$DerivationalSuffixRule-Adjective #$Adjective) means that combining an

#$AdjectiveProducingSuffix with some other morpheme will result in an

#$Adjective.")
(comment derivationalAffixResultPOS "(#$derivationalAffixResultPOS AFFIX POS) means that the #$DerivationalAffix AFFIX combines with #$BaseWordForms to create words with part of speech POS. Example: (#$derivationalAffixResultPOS #$Ate-TheSuffix #$Verb) means that the #$DerivationalSuffix #$Ate-TheSuffix combines with #$BaseWordForms to create #$Verbs, e.g. \"hyphenate\"")
(comment derivationalAffixBasePOS "(#$derivationalAffixBasePOS AFFIX POS) means that the #$DerivationalAffix AFFIX combines with #$BaseWordForms with part of speech POS. Example: (#$derivationalAffixBasePOS #$En-TheSuffix #$Adjective) means that the #$LexicalSuffix #$En-TheSuffix combines with #$Adjectives, e.g. \"lighten\"")
(comment wordHasConstituent "(#$wordHasConstituent WORD CONSTITUENT) means that the

#$LexicalWord WORD has CONSTITUENT as a #$WordConstituent. Example:

(#$wordHasConstituent (#$WordWithSuffixFn #$Joy-TheWord #$Ful_AdjectiveProducing-TheSuffix) #$Joy-TheWord) and (#$wordHasConstituent (#$WordWithSuffixFn #$Joy-TheWord #$Ful_AdjectiveProducing-TheSuffix) #$Ful_AdjectiveProducing-TheSuffix) means that the word (#$WordWithSuffixFn #$Joy-TheWord #$Ful_AdjectiveProducing-TheSuffix) has two constituents; the #$BaseWordForm #$Joy-TheWord and the #$LexicalSuffix #$Ful_AdjectiveProducing-TheSuffix. Note that GAFs using this predicate are not assertible; they are inferred from the state of the knowledge in the KB. See specPreds for what to use in assertions")
(comment MorphemeCategorialConstraintFn "(#$MorphemeCategorialConstraintFn ELEMENT-TYPE OTHER-ELEMENT-TYPE)

denotes the constraint that if one part of a word is of type

ELEMENT-TYPE, then the other part must be of type OTHER-ELEMENT-TYPE.

Example: (#$MorphemeCategorialConstraintFn #$DenominalAffix #$Noun) denotes

the constraint that if a word is derived using a denominal affix,

then the word it is morphologically derived from must be a noun.")
(comment MorphemeSemanticIsaConstraintFn "(#$MorphemeSemanticIsaConstraintFn ELEMENT-TYPE THING)

represents the constraint that the part of a word of type ELEMENT-TYPE

denote an instance of THING. Example: (#$MorphemeSemanticIsaConstraintFn

#$BaseWordForm #$StandardUnitOfMeasure) represents the constraint that a

#$BaseWordForm denote an instance of #$StandardUnitOfMeasure.")
(comment MorphemeSemanticGenlsConstraintFn "(#$MorphemeSemanticGenlsConstraintFn ELEMENT-TYPE THING)

represents the constraint that the part of a word of type ELEMENT-TYPE

denote a spec of THING. Example: (#$MorphemeSemanticGenlsConstraintFn

#$BaseWordForm #$Event) represents the constraint that a #$BaseWordForm denote a spec

of #$Event.")
(comment BasePOSDerivationalAffixRule "The rule which represents the base word part of speech constraints imposed by affixes. Example: (#$affixRuleCategorialConstraint #$BasePOSDerivationalAffixRule (#$MorphemeCategorialConstraintFn #$DeverbalAffix #$Verb)) states that if a word is derived using a #$DeverbalAffix,  then the base word must be a #$Verb.")
(comment etymologicalVariantOfSuffix "(#$etymologicalVariantOfSuffix SUFFIX STRING BASE-TYPE) means that

STRING is the #$suffixString of the #$LexicalSuffix SUFFIX whenever it is

combined with a #$BaseWordForm having etymological feature BASE-TYPE. Example: (#$etymologicalVariantOfSuffix #$Er_Agent-TheSuffix \"or\" #$NeoClassicalBaseWordForm)")
(comment BaseWordFormTypeByPhonology "#$BaseWordFormTypeByPhonology is the collection of specs

of #$BaseWordForm which represent #$BaseWordForms according to some phonological feature. Example: (#$BaseWordFormsEndingWithPhonemeTypeFn

#$Stop-Consonant) represents the collection of base word forms ending with

a stop.")
(comment BaseWordFormTypeByEtymology "#$BaseWordFormTypeByEtymology is the collection of specs

of #$BaseWordForm which represent #$BaseWordForms according to some etymological feature. Example: #$NeoClassicalBaseWordForm.")
(comment etymologicalVariantOfPrefix "(#$etymologicalVariantOfPrefix PREFIX STRING BASE-TYPE) means that

STRING is the #$prefixString of the #$LexicalPrefix PREFIX whenever it is

combined with a #$BaseWordForm having etymological feature BASE-TYPE.")
(comment variantOfPrefix "(#$variantOfPrefix PREFIX STRING) means that STRING is another possible #$prefixString of the #$LexicalPrefix PREFIX. Example: (#$variantOfPrefix #$In-ThePrefix \"im\"). Whenever possible, specify the conditions under which variant spellings become relevant by using one of the specPredsWRTArgs preds instead, e.g. (#$phoneticVariantOfPrefix #$In-ThePrefix \"im\" (#$BaseWordFormsStartingWithLetterSequenceFn \"m\")).")
(comment variantOfSuffix "(#$variantOfSuffix SUFFIX STRING) means that STRING is another possible #$suffixString of the #$LexicalSuffix SUFFIX. Example: (#$variantOfSuffix #$Ion_ConcreteNounProducing-TheSuffix \"ition\"). Whenever possible, specify the conditions under which variant spellings become relevant by using one of the specPredsWRTArgs preds instead, e.g. (#$phoneticVariantOfSuffix #$Ion_ConcreteNounProducing-TheSuffix \"ition\" (#$BaseWordFormsEndingWithLetterSequenceFn \"ine\")).")
(comment ProductiveLexicalAffix "Collection of derivational affixes which are currently used
in the derivation of new words. Example: #$Un_Neg-ThePrefix is
frequently used in English today in word creation --
#$Unsteady-TheWord.")
(comment UnproductiveLexicalAffix "Collection of derivational affixes which are no longer used
in the derivation of new words. Example: The prefix \"be\" as in
\"beget\" is no longer (or very infrequently) used in English word
creation today.")
(disjointWith ProductiveLexicalAffix UnproductiveLexicalAffix)
(comment LevelOneAffix "#$LevelOneAffixes (sometimes called \"Class 1 affixes\" or
\"primary affixes\") are the affixes which attach to roots during the
first level of word formation (see #$cyclistNotes). #$LevelOneAffixes
cause a stress shift in the resulting word. Example: \"Dar*win*ian\".")
(comment LevelTwoAffix "#$LevelTwoAffixes (sometimes called \"Class 2 affixes\" or
\"secondary affixes\") are the affixes which attach to roots during
the second level of word formation (see #$cyclistNotes).
#$LevelTwoAffixes do not affect the stress in the resulting word.
Example: \"*Dar*winism\".")
(disjointWith LevelOneAffix LevelTwoAffix)
(comment DenominalNounProducingSuffix "The collection of suffixes which serve to convert #$Nouns into #$Nouns. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment PossessivePhrase "The collection of possessive phrases.  Examples: \"Sally's\", \"kids'\".")
(comment derivedUsingAffix "(#$derivedUsingAffix DERIVED-WORD AFFIX) means that the

derivational affix AFFIX was used in the derivation of

DERIVED-WORD. Example: (#$derivedUsingAffix #$Unhappy-TheWord #$Un_Neg-ThePrefix). Note that this predicate is #$notAssertible; use it for writing rules and use the more specific #$derivedUsingPrefix and #$derivedUsingSuffix for making GAFS.")
(comment barLevelOfPhraseType "(#$barLevelOfPhraseType PHRASETYPE N) indicates that for any instance PHRASE of PHRASETYPE, (#$barLevelOfPhrase PHRASE N).")
(comment wordViolatesMorphologicalRule "(#$wordViolatesMorphologicalRule WORD RULE) means that the #$LexicalWord WORD violates some morphological constraint represented by RULE.  Example: (#$wordViolatesMorphologicalRule #$Kingdom-TheWord #$DerivationalSuffixRule-Deverbal).")
(comment wordViolatesMorphologicalConstraint "(#$wordViolatesMorphologicalConstraint WORD CONSTRAINT) means that the #$LexicalWord WORD violates the morphological constraint CONSTRAINT. An example of a morphological constraint is this: (#$MorphemeCategorialConstraintFn #$DerivationalSuffix #$AdjectiveProducingSuffix), the constraint that if a word is derived using a #$DerivationalSuffix, that suffix should be an #$AdjectiveProducingSuffix.")
(comment morphologicalRuleRelevantToWord "(#$morphologicalRuleRelevantToWord RULE WORD) means that the #$AffixRule RULE  is relevant to the #$LexicalWord WORD; that is, if WORD violates RULE, it is a #$LinguisticallyImpossibleLexicalWord. Example: (#$morphologicalRuleRelevantToWord #$BasePOSDerivationalAffixRule (#$WordWithSuffixFn #$Delight-TheWord #$Ful_AdjectiveProducing-TheSuffix)).")
(comment PrefixRule-Derivational "The collection of all rules describing the combination of bases and prefixes into morphologically complex words with a different meaning or #$SpeechPart from the base.")
(comment AffixRule-Derivational "The collection of all rules describing the combination of bases and affixes into morphologically complex words with a different meaning or #$SpeechPart from the base.")
(comment DerivationalAffixByResultPOSCategory "Elements are specs of #$DerivationalAffix categorised

according to the part of speech of the words they create. Example: Instances of #$AdjectiveProducingSuffix combine with #$BaseWordForms to form #$Adjectives.")
(comment DeverbalAffix "The collection of affixes which serve to convert #$Verbs into either other #$Verbs or some other #$SpeechPart. Example: #$Drink-TheWord + #$Able-TheSuffix = #$Drinkable-TheWord.")
(comment DenominalAffix "The collection of affixes which serve to convert #$Nouns into either other #$Nouns or some other #$SpeechPart. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment DeAdjectivalAffix "The collection of affixes which serve to convert #$Adjectives into either other #$Adjectives or some other #$SpeechPart. Example: #$Upper-TheWord + #$Most-TheSuffix = #$Uppermost-TheWord.")
(comment VerbProducingAffix "The collection of affixes which serve to convert words into #$Verbs. Example: #$Sad-TheWord + #$En-TheSuffix = #$Sadden-TheWord.")
(comment AdverbProducingAffix "The collection of suffixes which serve to convert words into #$Adverbs. Example: #$Happy-TheWord + #$Ly_AdverbProducing-TheSuffix = #$Happily-TheWord.")
(comment AdjectiveProducingAffix "The collection of affixes which serve to convert words into #$Adjectives. Example: #$Delight-TheWord + #$Ful_AdjectiveProducing-TheSuffix = #$Delightful-TheWord.")
(comment NounProducingAffix "The collection of affixes which serve to convert words into #$Nouns. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment morphologicalConstraintRelevantToWord "(#$morphologicalConstraintRelevantToWord CONSTRAINT WORD)

means that the #$MorphologicalRuleConstraint CONSTRAINT applies

to the #$LexicalWord WORD. For example, a CONSTRAINT such as

(#$MorphemeCategorialConstraintFn #$DeverbalAffix #$Verb) is relevant to all words which are derived with deverbal affixes.")
(comment WordConstituentsDerivationalPrefixRule "The rule which represents the general word constituent constraints imposed by prefixes. For example, if a word is derived using a prefix, then there must be two word constituents, a base word and a prefix.")
(comment WordConstituentsDerivationalSuffixRule "The rule which represents the general word constituent constraints imposed by suffixes. For example, if a word is derived using a suffix, then there must be two word constituents, a base word and a suffix.")
(comment affixSemantics "(#$affixSemantics AFFIX NAT) means that the

#$CycLNonAtomicTerm NAT is the semantic template which will be used in determining the semantic interpretation of a word

with constituent #$LexicalAffix AFFIX. There will be a #$SubLKeyword in

one or more positions in NAT. Which keywords are valid for which

affix is represented by #$affixKeywords. Example: (#$affixSemantics #$Un_Neg-ThePrefix (#$InstanceWithRelationToFn #$AttributeValue #$oppositeAttributes :BASE-WORD-DENOT)) says that any word #$derivedUsingPrefix #$Un_Neg-ThePrefix will denote the opposite attribute of that denoted by the base word it is #$morphologicallyDerivedFrom. For example, the word (#$WordWithPrefixFn #$Un_Neg-ThePrefix #$Happy-TheWord) will denote (#$InstanceWithRelationToFn #$AttributeValue #$oppositeAttributes (#$MediumToVeryHighAmountFn #$Happiness)) since (#$generalSemantics #$Happy-TheWord (#$MediumToVeryHighAmountFn #$Happiness)).")
(comment ConcreteNounProducingSuffix "The collection of suffixes which serve to convert words into concrete nouns. These are generally #$CountNouns. Example: #$Appoint-TheWord + #$Ee_Deverb-TheSuffix = #$Appointee-TheWord.")
(comment AbstractNounProducingSuffix "The collection of suffixes which serve to convert words into abstract nouns. These are generally #$MassNouns. Example: #$Friend-TheWord + #$Ship-TheSuffix = #$Friendship-TheWord.")
(comment OpenClassWord "The collection of all words which are members of open lexical classes, namely those with a potentially unlimited membership. The open lexical classes are #$Adjectives, #$Nouns, #$Verbs, #$Adverbs.")
(comment presentTense-Universal "(#$presentTense-Universal WU STRING) means that the present tense form of WU, regardless of number or person, is STRING.")
(comment webFrequencyForLexicalAssertion "(#$webFrequencyForLexicalAssertion AS N) means that a string generated from AS is expected to appear in any sufficiently large Web corpus of documents in the language appropriate for AS with approximate frequency N, where N is a normalized score from 0 to 99 such that differences are exaggerated at the low end and minimized at the high end.")
(comment bogusSpeechPart "(#$bogusSpeechPart POS) means that the #$SpeechPart POS is

not a bona fide part of speech, but that we find it useful in certain

cases to represent it as such in our ontology. One consequence of

identifying a #$SpeechPart as a #$bogusSpeechPart is that it will not

be treated as a #$SpeechPart when the morphological parser is used in

parsing.")
(comment semanticallyRelatedAffixes "(#$semanticallyRelatedAffixes AFFIX1 AFFIX2 ... AFFIXN)

means that the #$LexicalAffixes (AFFIX1 AFFIX2 ... AFFIXN) are subtle

semantic variants of one another but they all share the same

#$affixString. The differences will generally be found in the

#$derivationalAffixBasePOS, the #$derivationalAffixResultPOS, and the

#$affixSemantics. Example: #$Ese_NounProducing-TheSuffix

#$Ese_AdjectiveProducing-TheSuffix are so related.")
(comment exceptionForSemTransTemplate "(#$exceptionForSemTransTemplate WORD COL) means that the

#$LexicalWord WORD should be treated as an exception for all

semtranstemplates whose arg1 is the collection COL. Example:

(#$exceptionForSemTransTemplate #$Skinny-TheWord

#$PhysiologicalAttribute) means that any semTranses involving the word

#$Skinny-TheWord which could be inferred from semTransTemplates for

#$PhysiologicalAttribute should not be inferred. This predicate is

used for making exceptions to semTransTemplates explicit, a better

alternative to just blasting unwanted inferences which will return

when the rules are repropagated.")
(comment TheRNPParse "#$TheRNPParse is an #$IntermediateVocabFunction that is used to organize the parse of an NP containing a relative clause into a form which can be reformulated into assertible CycL. (#$TheRNPParse TAGGEDNP COL) denotes that #$IntermediateVocabTerm that can be processed by the #$CycLReformulator in the way prescribed by the relevant #$reformulatorEquiv and #$reformulatorEquals assertions.")
(comment followsFromPrecedingDiscourse "#$followsFromPrecedingDiscourse is a natural-language-based predicate that applies to a single propositional argument. (#$followsFromPrecedingDiscourse PROP) means that PROP follows logically from the immediately preceding statements in a discourse context. In English it can be rendered as \"Therefore, PROP\", or \"Q.E.D. PROP\".")
(comment SemTransTemplatePredicate "The specialization of #$NLSemanticPredicate whose instances map groups of words (classified semantically) to #$NLTemplateExpressions.")
(comment CollectionLexificationPredicate-Required "The collection of predicates such that if a #$CycCollection COL is lexified using one of these predicates, COL is deemed *lexified*.")
(comment infersParseTemplate "(#$infersParseTemplate RELATION) means that the usual requirement that a CycL relation have an assertion associating it with a natural language template (these are usually made in the form of #$assertTemplate-Reln RELATION ...) does not apply because a parse template on a #$genlPreds of RELATION should be used during parsing instead. Example: #$hasAttributes does not need a parse template assertion since all of the ways one would make the assertion (#$hasAttributes X Y) in NL apply equally to a #$genlPreds of #$hasAttributes, #$is-Underspecified. In these cases we want to parse to the general term and reason to the more specific level. For example, if we know that Y is an attribute, then we'll use (#$hasAttributes X Y) rather than (#$is-Underspecified X Y) in the final CycL. These assertions will be used in NL quality control to determine whether a relation is appropriately lexified.")
(comment PercentParaphraseFn "(#$PercentParaphraseFn NUM) denotes the
(possibly contextually dependent) best natural-language word
or phrase treating NUM as a percentage. For instance (#$PercentParaphraseFn .25) is likely to come out as \"25%\".")
(comment holds-Underspecified "(holds-Underspecified ARG1 ARG2) means that ARG1 in some
underspecified sense (perhaps metaphorically or non-spatially) 'holds'
ARG2.  Important spec preds include #$educationLevel (Consider
'Chip holds a PhD') and #$jobPositionHasPositionType ('US Senators
hold US Senate seats').")
(comment supports-Underspecified "(#$supports-Underspecified ARG1 ARG2) says that ARG1, in some underspecified or perhaps metaphorical sense, 'supports' ARG2.")
(comment doesntNeedParseTemplate "(#$doesntNeedParseTemplate RELATION) means that the usual requirement
that a CycL relation have an assertion associating it with a natural language
template (these are usually made in the form of #$assertTemplate-Reln
RELATION ...) does not apply. #$infersParseTemplate is an important specPred of this term.")
(comment dependsOn-Underspecified "(#$dependsOn-Underspecified ARG1 ARG2) means that ARG1, in
some underspecified sense, depends on ARG2.  Consider 'CHILD depends on
FATHER' as well as 'TASK1 depends on TASK2'. Use one of the specPreds for making assertions.")
(comment genStringAssertion-Terse "(#$genStringAssertion-Terse TERM LEX) means that the lexical assertion LEX is a terse lexification for TERM. Such an assertion will often indicate that the use of LEX is somehow context dependent. For example, in a military context where courses of action are being discussed, generating the term #$coaSimplicity as \"simplicity\" as opposed to the wordier \"simplicity of the COA\" might be preferrable since the \"of the COA\" part is implied by the context of discussion. To have a terse lexification for a term used in generation, use the #$TerseParaphraseFn function in your #$genTemplate assertion. Lexical assertions marked with the #$genStringAssertion-Terse meta-assertion will only be used in generation under two circumstances: 1. When a #$TerseParaphraseFn function calls for one and 2. When no other lexificatin for TERM exists.")
(comment TensedPhraseFn "(#$TensedPhraseFn TEMPORAL-THING PHRASE) denotes the
(typically contextually dependent) natural language word or
phrase PHRASE, while specifying a linguistic constraint on
its tense. Namely, the linguistic context requires that PHRASE's tense
be appropriate for denoting a situation cotemporal with TEMPORAL-THING. For instance, in a typical English-language
context, (#$TensedPhraseFn #$Yesterday-Indexical
(#$BestNLWordFormOfLexemeFn #$Eat-TheWord)) would denote the
#$SententialConstituent instantiated by the string 'ate'.")
(comment TensedPhraseFn-DefaultPast "(#$TensedPhraseFn-DefaultPast TEMPORAL-THING PHRASE) is just like #$TensedPhraseFn, except that it defaults to past tense when TEMPORAL-THING cannot be established to be cotemporal with or subsequent to the time of utterance.")
(comment ConcatenatePhrasesFn-NoSpaces "Just like #$ConcatenatePhrasesFn, except no spaces are added between phrases.")
(comment DefiniteNbarPPFn "(#$DefiniteNbarPPFn PHRASE STRING PHRASE) denotes the - contextually best - definite NP of the form 'the PHRASE STRING PHRASE'. The first phrase is typically an Nbar.")
(comment IndefiniteNbarPPFn "(#$IndefiniteNbarPPFn PHRASE STRING PHRASE) denotes the - contextually best - indefinite NP of the form 'a PHRASE STRING PHRASE'. The first phrase is typically an Nbar.")
(comment Postmodifier_EdFormFn "(Postmodifier_EdFormFn VERB PREP PHRASE) generates a clause of the form 'perfect(VERB) PREP PHRASE'. For example, used in a genTemplate, (#$Postmodifier_EdFormFn #$Buy-TheWord #$With-TheWord (#$BestDetNbarFn-Indefinite :ARG1)) would typically generate as 'bought with some ARG1'.")
(comment NbarHeadedByNounFormFn "(#$NbarHeadedByNounFormFn NOUN FORM CLAUSE) generates the best N-Bar 'FORM(NOUN) CLAUSE'. For example, (#$NbarHeadedByNounFormFn #$Projectile-TheWord #$plural-Generic (#$Postmodifier_EdFormFn #$Fire-TheWord #$From-TheWord (#$BestDetNbarFn-Indefinite :ARG1))) would typically generate as 'projectiles fired from some [ARG1]'.")
(comment OrdinalAdjective "The collection of ordinals.  Example instances of #$OrdinalAdjective, as represented in their written string form, include \"third\" and \"47th\".")
(comment ordinalAdjectiveForm "(#$ordinalAdjectiveForm WORD STRING) relates an #$EnglishWord WORD to a string STRING that represents its #$OrdinalAdjective form.")
(comment BestPPFn "(#$BestPPFn PREPOSITION NP) builds the contextually-dependent best prepositional phrase of the form 'PREPOSITION NP'. For example, (#$BestPPFn
#$To-TheWord (#$TermParaphraseFn :ARG1)) would generate as 'to the store', or however ARG1 generates best.")
(comment BestParentheticalPhraseFn "(#$BestParentheticalPhraseFn PHRASE) denotes PHRASE enclosed in parentheses.")
(comment BestMathFormulaOperandFn "(#$BestMathFormulaOperandFn TERM) denotes TERM as an operand in a mathematical formula. Parentheses may be added around TERM to clarify operator scope.")
(comment GenTemplateRecipe "The collection of all sets of instructions to the #$genTemplate family for generating NL versions of #$CycLAssertions.")
(comment GenTemplateRecipeOmitsArgFn "(#$GenTemplateRecipeOmitsArgFn :ARGX RECIPE) licenses the omission of :ARGX from a #$GenTemplateRecipe. For example, in (#$genTemplate-Constrained #$ScientificNumberFn (#$isa :SELF #$CycLClosedNonAtomicTerm) (#$GenTemplateRecipeOmitsArgFn :ARG1 (#$GenTemplateRecipeOmitsArgFn :ARG2 (#$BestBindingsPhraseFn (#$evaluate ?STRING (#$ScientificNumberToStringFn :SELF)) (#$BestNLPhraseOfStringFn ?STRING))))), the #$GenTemplateRecipeOmitsArgFn's allow the recipe itself to omit :ARG1 and :ARG2, which it in fact does.")
(comment NbarWithPluralHeadFn "(#$NbarWithPluralHeadFn THEWORD PHRASE) generates as the (contextually dependent) best N-bar 'THEWORD PHRASE', where THEWORD has #$plural-Generic agreement. For example, (#$NbarWithPluralHeadFn #$Monkey-TheWord (#$PluralParaphraseFn-PP #$In-TheWord #$Tree)) will typically generate as 'monkees in trees' in English.")
(comment ncRuleTests "The assertion (#$ncRuleTests RULE TEST) links a noun-compound rule with the test or tests that are used to verify its successful use by the noun-compound parser.")
(comment alias "An instance of #$ProperNamePredicate-Strict and a
specialization of #$nameString. (#$alias AGENT NAMESTRING) means that
NAMESTRING is a \"false\" or assumed name for AGENT.  That is, although NAMESTRING
is neither AGENT's legal name nor an informal variation thereof, it
is deceptively presented as such by AGENT (or her representatives).  Aliases
are typically used to conceal the agent's actual name in order to avoid detection.  Though aliases are primarily
adopted by or assigned to #$Persons, it is possible for #$Animals or
certain types of organizations to be assigned them temporarily (e.g.,
when entered in competitions under false names).")
(comment nlPragmaticRequirement "A MetaKnowledgePredicate that is used to place a pragmatic precondition on the use of a lexical assertion (see #$CycLNLAssertion -- not yet supported). (#$nlPragmaticRequirement CONDITION
NL_ASSERTION) says that the lexical assertion NL_ASSERTION should be
used only in circumstances which meet CONDITION. Example: (#$nlPragmaticRequirement (#$pragmaticallyAcceptable #$SlangSpeech) (#$denotation #$Veep-TheWord #$CountNoun 0 #$VicePresident-GovernmentOfficial)) says the denotation should be used in dialogue situations which allow for slang speech.")
(comment nlPragmaticRequirement "A MetaKnowledgePredicate that is used to place a pragmatic
precondition on the use of a lexical assertion (see #$CycLNLAssertion
-- not yet supported, BUG #4905). (#$nlPragmaticRequirement CONDITION
NL_ASSERTION) says that the lexical assertion NL_ASSERTION should be
preferred in circumstances which meet CONDITION. Example: (#$nlPragmaticRequirement (#$indexicalReferent (#$TheFn #$FormalityOfSpeech)  #$SlangSpeech) (#$denotation #$Veep-TheWord #$CountNoun 0 #$VicePresident-GovernmentOfficial)) says the denotation should be used in dialogue situations which allow for slang speech.")
(comment uninflectedWordStrings "(#$uninflectedWordStrings WORD STRING) states that STRING is one of the strings for the word unit WORD in some microtheory.  In other words, some #$SpeechPartPredicate is used on WORD to relate it to STRING. This is a stronger version of #$wordStrings in that the code will use it as a shortcut for parsing and generating uninflected words such as #$Adverbs and #$Pronouns (given that the various forms of pronouns are, at least for English, ontologized as separate word units). By 'uninflected' we mean that it doesn't show number or gender agreement; in principle, the word could still vary based on case. This predicate is #$notAssertible since it is concluded from the current state of the knowledge base.")
(comment pragmaticallyAcceptable "#$pragmaticallyAcceptable is a natural-language-based predicate that applies to a single pragmatic attribute argument. (#$pragmaticallyAcceptable ATTR) means that ATTR is an acceptable pragmatic attribute for speech in the current dialog context, i.e. that the addressee should not be shocked or surprised if the speaker uses speech characterized by ATTR. It is #$notAssertible, because its value depends on the current dialog context.")
(comment NaturalGenderLanguage "A specialization of #$Language in which at least some living things' grammatical genders are determined by their #$BiologicalSex. Details are encoded by a series of #$languageUsesGrammaticalGender statements.")
(comment languageUsesGrammaticalGender "(#$languageUsesGrammaticalGender LANGUAGE COLLECTION GENDER) holds if the #$Language typically uses the specified #$NLGenderAttribute as the grammatical gender for instances of #$Collection. A common example is #$NaturalGenderLanguages (q.v.). For example, (#$languageUsesGrammaticalGender #$EnglishLanguage #$MaleAnimal #$Masculine-NLAttr).")
(comment exceptionalGrammaticalGender "(#$exceptionalGrammaticalGender TYPE THING GENDER) overrides the #$LanguageGroupingType's usual rules for determining grammatical gender for THING, using #$NLGenderAttribute instead.")
(comment inducedTypicalSubjectTypeOfVerb "(#$inducedTypicalSubjectTypeOfVerb VERB-STRING COLLECTION) means that, according to statistical analysis of some text corpus (like, perhaps, the New York Times from 2001), the typical subject of the verb VERB-STRING is COLLECTION.  For example, (#$inducedTypicalSubjectTypeOfVerb \"bloom\" #$PlantBLO) means that #$PlantBLOs are the things that are most typically said to bloom.  Use infinitive verb forms in queries.")
(comment inducedTypicalObjectTypeOfVerb "(#$inducedTypicalObjectTypeOfVerb VERB-STRING COLLECTION) means that, according to statistical analysis of some text corpus (like, perhaps, the New York Times from 2001), the typical direct object of the verb VERB-STRING is COLLECTION.  For example, (#$inducedTypicalObjectTypeOfVerb \"steal\" #$Product) means that #$Products are the things that are most typically said to be stolen.  Use infinitive verb forms in queries.")
(comment preferredLexification "(#$preferredLexification TERM LEXIFICATION) means that LEXIFICATION should be used, when applicable, to generate paraphrases for TERM.")
(comment PhraseCycLFn "(#$PhraseCycLFn CYCL PHRASE) denotes the

(typically contextually dependent) natural language word or

phrase PHRASE, while specifying the CycL expression that it denotes.")
(comment abbreviationForHeadMedialString "(#$abbreviationForHeadMedialString STRING1 LEXICALWORD STRING2 POS ABBREVIATION) means that ABBREVIATION is an abbreviation for the head medial phrase picked out by STRING1 + POS part of speech of LEXICALWORD + STRING2. Example -- (#$abbreviationForHeadMedialString (#$TheList (\"public\")) #$Display-TheWord (#$TheList (\"of\" \"affection\")) #$CountNoun \"pda\").")
(comment BestStringOfNLPhraseFn "(#$BestStringOfNLPhraseFn PHRASE) denotes the (possibly contextually dependent) best string form of PHRASE, a #$SententialConstituent.")
(comment gerund-Singular "(#$gerund-Singular WORD STRING) means that STRING is
a singular gerund form of WORD. The regular gerund is formed from the infinitive 
verb form with an `ing' suffix. Verbs in the Cyc lexicon will 
have a #$gerund-Singular entry only if they are irregular.  Regular 
forms are generated by the morphology component.")
(comment gerund-Plural "(#$gerund-Plural WORD STRING) means that STRING is
a plural gerund form of WORD. The regular plural gerund is formed from the infinitive 
verb form with an `ings' suffix. Verbs in the Cyc lexicon will 
have a #$gerund-Plural entry only if they are irregular.  Regular 
forms are generated by the morphology component.")
(comment TheNCArgIsas "#$TheNCArgIsas is a special kind of term whose only purpose is to be used in #$ELSentence-Assertibles that appear as the second argument of an #$ncRuleConstraint. It is a directive to the code to replace the keyword with the maximal #$argIsas of the #$BinaryPredicate, for the appropriate N, of a subcollection nat. For example, the assertion (#$ncRuleConstraint #$TerrorismExpert-NCR (#$SubcollectionOfWithRelationToFn #$TheNCArgIsas #$TheNCHead #$TheNCModifier)) means that one of the conditions on the application of the #$NounCompoundRule #$TerrorismExpert-NCR is that the 'from' arg conform to the #$arg1Isas of the #$BinaryPredicate, e.g., \"terrorism expert\" would map to (#$SubcollectionOfWithRelationToFn #$IntelligentAgent #$expertRegarding #$TerroristAct).")
(comment TheNCArgGenls "#$TheNCArgGenls is a special kind of term whose only purpose is to be used in #$ELSentence-Assertibles that appear as the second argument of an #$ncRuleConstraint. It is a directive to the code to replace the keyword with the maximal #$argGenls of the #$BinaryPredicate, for the appropriate N, of a subcollection nat. For example, the assertion (#$ncRuleConstraint TerroristWeapon-NCR (#$SubcollectionOfWithRelationToFn #$TheNCModifier #$TheNCHead #$TheNCArgGenls)) means that one of the conditions on the application of the #$NounCompoundRule TerroristWeapon-NCR is that the 'to' arg conform to the #$arg2Genls of the #$BinaryPredicate, e.g., \"terrorist device\" might map to (#$SubcollectionOfWithRelationToFn #$TerroristAct #$deviceTypeUsed #$PhysicalDevice).")
(comment possessiveSemTrans "(possessiveSemTrans CONTRACTION INT FRAME TRANS) means that the translation of word sense number INT of CONTRACTION in frame FRAME is TRANS.")
(comment NCWordUnitConstraintFn "When a NAT of the form (#$NCWordUnitConstraintFn COMPONENT WORD) appears as the
second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule 
which is the first argument of that assertion applies only if COMPONENT can be proven to 
be a form of the #$LexicalWord WORD.")
(comment NounCompoundRuleIndexicalTerm-Direct "The collection of indexical terms that can appear in noun-compound rule constraints and semantic specifications (cf. #$ncRuleTemplate), and whose denotation is that of one of the constituents (i.e. either the head or the modifier) of the noun compound being parsed.")
(comment licensedGrammaticalGender "(#$licensedGrammaticalGender LANGUAGE THING GENDER) means that it is acceptable in LANGUAGE to refer to THING using linguistic forms that have GENDER.")
(comment defaultGrammaticalGender "(#$defaultGrammaticalGender LANGUAGE GENDER) means that in LANGUAGE, GENDER is acceptable for references to terms to which no specific rules for determining grammatical gender apply.")
(comment MultiWordWord "A word that is written with interior blank spaces, as if it were multiple words, but behaves in terms of its usage as a single word.  E.g. #$Cystic-Fibrosis-MWW, #$Real-Estate-MWW.")
(comment presentPerfect-Generic "(#$presentPerfect-Generic WORD FORM) means that FORM is a present perfect form of WORD for at least one person number combination (possibly not all). In English, this is formed by adding the person-and-number-appropriate present-tense form of #$Have-TheWord to the #$perfect form on WORD.")
(comment pastPerfect-Generic "(#$pastPerfect-Generic WORD FORM) means that FORM is a past perfect form of WORD for at least one person number combination (possibly not all). In English, this is formed by \"had\" to the #$perfect form on WORD.")
(comment futurePerfect-Generic "(#$futurePerfect-Generic WORD FORM) means that FORM is a future perfect form of WORD for at least one person number combination (possibly not all). In English, this is formed by adding \"will have\" to the #$perfect form on WORD.")
(comment pluralVerb-PresentPerfect "(#$pluralVerb-PresentPerfect WORD FORM) means that FORM is a plural present perfect form of WORD for at least one person (possibly not all). In English, this is formed by adding \"have\" to the #$perfect form on WORD.")
(comment firstPersonSg-PresentPerfect "(#$firstPersonSg-PresentPerfect WORD FORM) means that FORM is a first-person singular present perfect form of WORD. In English, this is formed by adding \"have\" to the #$perfect form on WORD.")
(comment secondPersonSg-PresentPerfect "(#$secondPersonSg-PresentPerfect WORD FORM) means that FORM is a second-person singular present perfect form of WORD. In English, this is formed by adding \"have\" to the #$perfect form on WORD.")
(comment thirdPersonSg-PresentPerfect "(#$thirdPersonSg-PresentPerfect WORD FORM) means that FORM is a third-person singular present perfect form of WORD. In English, this is formed by adding \"has\" to the #$perfect form on WORD.")
(comment presentPerfect-Universal "(#$presentPerfect-Universal WORD FORM) means that FORM is a present perfect form of WORD for <i>all</i> person number combinations.")
(comment futurePerfect-Universal "(#$futurePerfect-Universal WORD FORM) means that FORM is a future perfect form of WORD for <i>all</i> person number combinations.")
(comment pastPerfect-Universal "(#$pastPerfect-Universal WORD FORM) means that FORM is a past perfect form of WORD for <i>all</i> person number combinations.")
(comment termsMeetNCRuleSemanticConstraints "(#$termsMeetNCRuleSemanticConstraints MODIFIER-DENOT HEAD-DENOT RULE) means that MODIFIER-DENOT and HEAD-DENOT meet the semantic constraints on the modifier and head (respectively) or RULE.")
(comment phraseTypesMeetNCRuleSyntacticConstraints "(#$phraseTypesMeetNCRuleSyntacticConstraints MODIFIER-TYPE HEAD-TYPE RULE) means that MODIFIER-TYPE and HEAD-TYPE are consistent with the syntactic constraints on the modifier and head (respectively) or RULE.")
(comment phraseMeetsTermPhrasesConstraint "(#$phraseMeetsTermPhrasesConstraint PHRASE CONSTRAINT) means that PHRASE has the syntactic property specified by CONSTRAINT.")
(comment phraseDenotes "(#$phraseDenotes PHRASE THING) means that PHRASE denotes THING.")
(comment phraseNthDaughter "(#$phraseNthDaughter MOTHER N DAUGHTER) means that DAUGHTER is the Nth daughter of MOTHER.")
(comment phraseInstantiatesNounCompoundRuleWithDenots "(#$phraseInstantiatesNounCompoundRuleWithDenots PHRASE RULE MODIFIER-DENOT HEAD-DENOT) means that PHRASE instantiates RULE, with MODIFIER-DENOT and HEAD-DENOT as the denotations of PHRASE's two daughters, the modifier and head of the noun compound.")
(comment phraseInstantiatesNounCompoundRuleWithMotherAndDaughterDenots "(#$phraseInstantiatesNounCompoundRuleWithDenots PHRASE RULE MODIFIER-DENOT HEAD-DENOT PHRASE-DENOT) means that PHRASE instantiates RULE, with MODIFIER-DENOT and HEAD-DENOT as the denotations of PHRASE's two daughters, the modifier and head of the noun compound, and PHRASE-DENOT as the denotation of PHRASE itself.")
(comment phraseOfTypeDenotes "(#$phraseDenotes PHRASE PHRASE-TYPE THING) means that PHRASE has PHRASE-TYPE and denotes THING.")
(comment phraseDenotesAndPresupposes "(#$phraseDenotesAndPresupposes PHRASE DENOT SENTENCES) means that PHRASE denotes DENOT and presupposes all sentences in SENTENCES.")
(comment nBarPresupposesOfDenotWithRemainder "(#$nBarPresupposesOfDenotWithRemainder NBAR DENOT SENTENCES UNPRESUPPOSED) means that if NBAR is predicated of DENOT, then NBAR presupposes all sentences in SENTENCES except for those in UNPRESUPPOSED.")
(comment prepositionalPhrasePresupposesWithRemainder "(#$prepositionalPhrasePresupposesWithRemainder PP DENOT SENTENCES UNPRESUPPOSED) means that if PP is predicated of DENOT, then PP presupposes all sentences in SENTENCES except for those in UNPRESUPPOSED.")
(comment WordNetVerbFrameType "This is the collection of verb frames used in WordNet.")
(comment PostpositiveFrame "Frames for adjectives that can be used postpositively, like 'useful' in 'Please bring me something useful'.")
(comment volatilityOfSecurity "(#$volatilityOfSecurity SECURITY DEGREE) indicates how volatile SECURITY is.  Securities with a higher DEGREE of #$SecurityVolatility 
are somewhat risky as investments.")
(comment NCNotIsaConstraintFn "When a NAT of the form (#$NCNotIsaConstraintFn SMALL BIG) appears as the second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule which is the first argument of that assertion does not apply if SMALL can be proved to be a instance of BIG in an appropriate microtheory. Which microtheories are appropriate is established as one of the parameters of the #$NounPhraseParser.")
(comment NCNotGenlsConstraintFn "When a NAT of the form (#$NCNotGenlsConstraintFn SMALL BIG) appears as the second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule which is the first argument of that assertion does not apply if SMALL can be proved to be a specialization of BIG in an appropriate microtheory. Which microtheories are appropriate is established as one of the parameters of the #$NounPhraseParser.")
(comment NCNotEqualsConstraintFn "When a NAT of the form (#$NCNotEqualsConstraintFn ARG1 ARG2) appears as the second argument of a #$ncRuleConstraint assertion, this means that the #$NounCompoundRule 
which is the first argument of that assertion does not apply if ARG1 can be proved to be equal to ARG2 in an appropriate microtheory. Which microtheories are appropriate is established as one of the parameters of the #$NounPhraseParser.")
(comment JapaneseInflectionalAffix "The collection of #$LexicalAffixes which, when joined with
other morphemes, result in #$NLWordForms of #$JapaneseWords.")
(comment JapaneseDerivationalAffix "The collection of #$LexicalAffixes which, when joined with other morphemes, result in #$JapaneseDerivedWords.")
(comment BasicDatumParaphraseFn "(#$BasicDatumParaphraseFn SET LANGUAGE-MT) denotes the (possibly contextually dependent) best paraphrase of the items in SET with respect to LANGUAGE-MT, where SET is interepreted as a set of terms defining one basic aspect of something. Cf. #$BasicDataPredicate.")
(comment SubjectIsActionAlternation "The semantic alternation wherein a particular specialization of the action-type can be used as the subject.  Example: The fire killed the colonists / The king killed the colonists.")
(comment SubjectIsActionAlternation-1 "The semantic alternation wherein a particular specialization of the action-type can be used as the subject.  Example: The fire killed the colonists / The king killed the colonists.")
(comment parsingConflateTo "A predicate relating two terms that are too close in meaning for the distinction between them to matter when doing any sort of Natural Language Understanding task. (parsingConflateTo DISPREFERRED-TERM PREFERRED-TERM) means that any parse using DISPREFERRED-TERM should be disfavored relative to a parse containing PREFERRED-TERM.  This is in effect saying that the two terms are close enough in meaning that TERM1 should be treated exactly like TERM2 for the purpose of NL Understanding.  A good example of this is the distinction between #$Motive and (#$SubcollectionOfWithRelationFromTypeFn #$Motive #$actionMotives #$Action).  This is a distinction which is fine to have in the KB, but not helpful for NLU purposes.")
(comment S1-PennTag "A meaningless wrapper added by some parsers to the outermost node, possibly useful when you have several unrelated fragments, or several sentences. Note: <b>not</b> necessarily a sentential node, or even a phrase of any type licensed by the grammar.")
(comment simpleFuture-Generic "(#$simpleFuture-Generic WORD FORM) means that FORM is a simple-aspect future-tense form of WORD for at least one person number combination (possibly not all). In general, for English FORM is 'will INF', where INF is the #$infinitive form of WORD.")
(comment futureTense-Generic "(#$futureTense-Generic WORD FORM) means that FORM is a future-tense form of WORD for at least one person/number/aspect combination (possibly not all).")
(comment presentTense-Generic "This predicate is a generalization over the #$SpeechPartPredicates for all present tense active-voice verb forms.  (#$presentTense-Generic WORD FORM) means that FORM is a present-tense form of WORD for at least one person/number/aspect combination.  This predicate is #$notAssertible in English, since it will always cash out as an assertion on one of its spec-preds.")
(comment simplePresent-Generic "(#$simplePresent-Generic WORD FORM) means that FORM is a simple-aspect present-tense form of WORD for at least one person number combination.  This predicate is #$notAssertible in English, since it will always cash out as an assertion on one of its spec-preds.")
(comment simplePast-Generic "(#$simplePast-Generic WORD FORM) means that FORM is a simple-aspect past-tense form of WORD for at least one person number combination (possibly not all).  Contrast this with the meaning of #$pastTense-Universal.  People writing #$genTemplates should use #$simplePast-Generic instead of #$pastTense-Universal, especially with #$Be-TheWord, because there are two different simple past forms of #$Be-TheWord, \"was\" and \"were\" -- there is no #$pastTense-Universal form of #$Be-TheWord.  For example, to request a simple past form of #$Be-TheWord, use something equivalent to (#$PhraseFormFn #$simplePast-Generic #$Be-TheWord).")
(comment pastTense-Generic "(#$pastTense-Generic WORD FORM) means that FORM is a past-tense form of WORD for at least one person/number/aspect combination (possibly not all).")
(comment perfectAspect-Generic "(#$perfectAspect-Generic WORD FORM) means that FORM is a perfect-aspect form of WORD for at least one person/number/tense combination (possibly not all). This includes present, past, and future perfect, all of which are used to describe an action that occurred or state of affairs that held sometime prior to the utterance's reference time.")
(comment verbFormWithAuxiliary "(#$verbFormWithAuxiliary WORD FORM) means that FORM is a verbal form of the word WORD in which an auxiliary is present.  For example, (#$verbFormWithAuxiliary #$Eat-TheWord \"had eaten\") is true (in an English context) because \"had eaten\" is the past perfect form of #$Eat-TheWord (as in \"He had eaten three hot dogs by the time the game started.\") and it is formed using the auxiliary \"had\".")
(comment simpleAspect-Generic "(#$simpleAspect-Generic WORD FORM) means that FORM is a simple-aspect form of WORD for at least one person/number/tense combination (possibly not all). This includes simple present, simple past, and simple future tenses.")
(comment UnexpressedThematicRoleFn "A function for representing (grammatically) unexpresssd thematic role-players.")
(comment sententialPhraseForVerbWithFrame-Generic "(#$sententialPhraseForVerbWithFrame-Generic VERB FRAME PHRASE) means that PHRASE is #$NLSentence which exemplifies VERB being used with the #$SubcategorizationFrame FRAME. PHRASE is generic and includes keywords for grammatical role fillers.")
(comment Mass-NLAttr "The attribute value carried by utterances that have a mass number head noun (e.g. \"sand\").")
(comment quotedInstancesDontNeedLexification "(#$instancesDontNeedLexification COLL) means that the usual requirement that a CycL term have lexical assertions associating it with natural language words and phrases does not apply to instances of COLL.")
(comment quotedInstancesDontNeedLexification "(#$quotedInstancesDontNeedLexification COLL) means that the usual requirement that a CycL term have lexical assertions associating it with natural language words and phrases does not apply to terms whose quotes isa is COLL.")
(comment PhraseStructureRule "The collection of all phrase structure rules, which are rules describing the compositional combination of words into phrases. A type of #$LinguisticRule. #$PhraseStructureRule is a #$LinguisticObjectType.")
(comment Adjective-Gradable "#$Adjectives that can be used comparatively.  They either inflect for comparison using either -er or -est (such as 'happy') or they occur with the adverbs 'more' and 'most' (e.g. 'delicious', 'successful'.")
(comment AllLexicalNonParaphraseMicrotheoryPSC "The context from which all lexical microtheories which are not also instances of #$ParaphraseDataMicrotheory are visible.")
(comment SecondPerson "This is the #$LinguisticQuantity of being grammatically second person.")
(comment LocativePrefix "The collection of prefixes which serve to modify by location the meanings of the words they combine with. Example: #$Fore_Loc-ThePrefix + #$Arm-TheWord *the front of the arm*.")
(comment DeAdjectivalConcreteNounProducingSuffix "The collection of suffixes which serve to convert #$Adjectives into concrete nouns; these generally, though not always, are #$CountNouns. Example: #$Absent-TheWord + #$Ee_DeAdj-TheSuffix = #$Absentee-TheWord.")
(comment NumberPrefix "The collection of prefixes which serve to modify by number the meanings of the words they combine with. Example: #$Poly-ThePrefix + #$Amorous-TheWord *loving many*. See #$Pace for more on this.")
(comment FirstPerson "This is the #$LinguisticQuantity of being grammatically first person.")
(comment agreementFeatureForNPParse "(#$agreementFeatureForNPParse PRONOUN FEATURE) means that PRONOUN
has the agreement feature FEATURE, where FEATURE can be an instance of
#$NLGenderAttribute or #$NLNumberAttribute.")
(comment ThirdPerson "This is the #$LinguisticQuantity of being grammatically third person.")
(comment abbreviationString-PN "(#$abbreviationString-PN THING STRING) means that STRING is a shortened form of the name for THING.  For example, \"Nov\" is short for \"November\".  Therefore one asserts (#$abbreviationString-PN #$November \"Nov\").")
(comment TypeClarifyingPhraseFn "(#$TypeClarifyingPhraseFn TYPE-CLARIFYING-PHRASE MAIN-PHRASE) denotes a noun phrase consisting at least of MAIN-PHRASE.  It may also contain TYPE-CLARIFYING-PHRASE but only if the MAIN-PHRASE is not informative as to the type of the object(s) in question.  For example, when variables are paraphrased explicitly, the type-clarifying phrase should appear.  So (#$TypeClarifyingPhraseFn (#$BestNLPhraseOfStringFn \"the medical diagnosis\") (#$TermParaphraseFn-NP :ARG1)) will come out as \"the medical diagnosis ?X\" if :ARG1 is ?X and ?X is paraphrased as \"?X\".  If ?X is paraphrased as, for example, \"some medical diagnosis\", then the clarifying phrase should not appear.")
(comment PositiveAdjectiveProducingSuffix "The collection of affixes which serve to convert words into instances of #$PositiveAdjective.  See #$PositiveAdjective for more details.")
(comment dispreferredLexification "(#$dispreferredLexification TERM LEXIFICATION) means that LEXIFICATION should be dispreferred relative to any lexifications for which #$dispreferredLexification is not known, when generating paraphrases for TERM.")
(comment (ist GeneralLexiconMt (not (genls InterAnimalRelationPredicate RelationalNounSlot))) "Not all inter-personal relations are best or even commonly expressed with a noun in natural language. One counter-example is #$likesAsFriend, where the liked person could be referred to as a 'likee', but is not necessarily a 'friend'.")
(genlPreds firstName nameString)
(genlPreds middleName nameString)
(genlPreds givenNames nameString)
(genlPreds pseudonym nameString)
(genlPreds scientificName nameString)
(genlPreds acronymString nameString)
(genlPreds lastName nameString)
(genls HumanFemaleGivenName HumanGivenName)
(genls HumanMaleGivenName HumanGivenName)
(genlPreds countryName-LocalLongForm placeName-LocalLongForm)
(genlPreds countryName-LocalShortForm placeName-LocalShortForm)
(genlPreds countryName-LongForm placeName-Standard)
(genlPreds epistleAddresseeText nameString)
(genlPreds definiteDescriptions nameString)
(genlPreds checkedViaAdjTool checkedViaNLTool)
(genlPreds subjectRoles rolesForEventType)
(genlPreds preferredDirectObjectRole directObjectRoles)
(genlPreds preferredSubjectRole subjectRoles)
(genlPreds presentTense-Generic tensed)
(genls (PhraseFn-Bar1 Noun) SententialConstituent)
(genls (PhraseFn-Bar1 Verb) SententialConstituent)
(genls (PhraseFn-Bar1 Determiner) SententialConstituent)
(genlPreds presentIndicative tensed)
(genlPreds presentIndicative1stSingular presentIndicative)
(genlPreds presentIndicative2ndSingular presentIndicative)
(genlPreds presentIndicative3rdSingular presentIndicative)
(genlPreds presentIndicative1stPlural presentIndicative)
(genlPreds presentIndicative2ndPlural presentIndicative)
(genlPreds presentIndicative3rdPlural presentIndicative)
(genls PrepositionalPhrase NLPhrase)
(genlPreds doneBy playsActiveSubjectRole)
(genlPreds playsActiveSubjectRole situationConstituents)
(genlPreds patient-Generic playsPassiveSubjectRole)
(genlPreds blockedPath playsPassiveSubjectRole)
(genlPreds inventedThing playsPassiveSubjectRole)
(genlPreds tensed verbStrings)
(genlPreds untensed verbStrings)
(genlPreds infinitive untensed)
(genlPreds perfect untensed)
(genlPreds presentParticiple untensed)
(genlPreds passiveParticiple untensed)
(genlPreds causes-Underspecified explains-Generic)
(genlPreds indirectObjectRoles rolesForEventType)
(genlPreds preferredIndirectObjectRole indirectObjectRoles)
(genlPreds keIrrelevantTerm termDoesntNeedLexification)
(genlPreds prenominalModifier wordStrings)
(genlPreds adjStrings prenominalModifier)
(genlPreds nonPlural-Generic prenominalModifier)
(genlPreds simpleNounStrings nounStrings)
(genlPreds plural simpleNounStrings)
(genlPreds singular simpleNounStrings)
(genlPreds directObjectRoles requiredActorSlots)
(genls NLTerm CycLTerm)
(genlPreds regularlyDerivedFrom morphologicallyDerivedFrom)
(genlPreds irregularlyDerivedFrom morphologicallyDerivedFrom)
(genlPreds preferredBaseForm wordStrings)
(genlPreds posBaseForms posForms)
(genlPreds wordStrings lexicalItemStrings)
(genlPreds affixString lexicalItemStrings)
(genlPreds prefixString affixString)
(genlPreds suffixString affixString)
(genls NLMorphologyTerm NLTerm)
(genlPreds thirdPersonSg-Generic verbStrings)
(genlPreds thirdPersonSg-Present thirdPersonSg-Generic)
(genlPreds firstPersonSg-Generic verbStrings)
(genlPreds firstPersonSg-Present firstPersonSg-Generic)
(genlPreds secondPersonSg-Generic verbStrings)
(genlPreds secondPersonSg-Present secondPersonSg-Generic)
(genlPreds pluralVerb-Generic verbStrings)
(genlPreds pluralVerb-Present pluralVerb-Generic)
(genlPreds singularVerb-Generic verbStrings)
(genlPreds thirdPersonSg-Generic singularVerb-Generic)
(genlPreds firstPersonSg-Generic singularVerb-Generic)
(genlPreds secondPersonSg-Generic singularVerb-Generic)
(genlPreds pastTense-Generic tensed)
(genlPreds pastTense-Universal firstPersonSg-Past)
(genlPreds firstPersonSg-Past firstPersonSg-Generic)
(genlPreds pastTense-Universal thirdPersonSg-Past)
(genlPreds thirdPersonSg-Past thirdPersonSg-Generic)
(genlPreds pluralVerb-Past pluralVerb-Generic)
(genlPreds pastTense-Universal pluralVerb-Past)
(genlPreds secondPersonSg-Past secondPersonSg-Generic)
(genlPreds pastTense-Universal secondPersonSg-Past)
(genls (BaseWordFormsStartingWithLetterSequenceFn "r") BaseWordForm)
(genls (BaseWordFormsStartingWithLetterSequenceFn "l") BaseWordForm)
(genls (BaseWordFormsStartingWithLetterSequenceFn "p") BaseWordForm)
(genls (BaseWordFormsStartingWithLetterSequenceFn "m") BaseWordForm)
(genls (BaseWordFormsStartingWithPhonemeTypeFn Vowel) BaseWordForm)
(genls (BaseWordFormsEndingWithPhonemeTypeFn Consonant) BaseWordForm)
(genls (BaseWordFormsStartingWithLetterSequenceFn "b") BaseWordForm)
(genlPreds morphologicallyDerivedFrom wordHasConstituent)
(genlPreds derivedUsingAffix wordHasConstituent)
(genlPreds derivedUsingPrefix derivedUsingAffix)
(genlPreds derivedUsingSuffix derivedUsingAffix)
(genlPreds presentTense-Universal secondPersonSg-Present)
(genlPreds presentTense-Universal pluralVerb-Present)
(genlPreds presentTense-Universal thirdPersonSg-Present)
(genlPreds presentTense-Universal firstPersonSg-Present)
(genlPreds followsFromPrecedingDiscourse trueSentence)
(genlPreds infersParseTemplate doesntNeedParseTemplate)
(genlPreds chemicalFormulaString nameString)
(genlPreds futureTense-Generic tensed)
(genlPreds ordinalAdjectiveForm nonGradableAdjectiveForm)
(genlPreds alias nameString)
(genlPreds properNounStrings nounStrings)
(genlPreds nameSpelling properNounStrings)
(genlPreds host playsActiveSubjectRole)
(genlPreds perfectAspect-Generic tensed)
(genlPreds presentPerfect-Generic perfectAspect-Generic)
(genlPreds pastPerfect-Generic perfectAspect-Generic)
(genlPreds futurePerfect-Generic perfectAspect-Generic)
(genlPreds pluralVerb-PresentPerfect presentPerfect-Generic)
(genlPreds pluralVerb-PresentPerfect pluralVerb-Generic)
(genlPreds firstPersonSg-PresentPerfect presentPerfect-Generic)
(genlPreds firstPersonSg-PresentPerfect firstPersonSg-Generic)
(genlPreds secondPersonSg-PresentPerfect presentPerfect-Generic)
(genlPreds secondPersonSg-PresentPerfect secondPersonSg-Generic)
(genlPreds thirdPersonSg-PresentPerfect thirdPersonSg-Generic)
(genlPreds thirdPersonSg-PresentPerfect presentPerfect-Generic)
(genlPreds presentPerfect-Universal firstPersonSg-PresentPerfect)
(genlPreds presentPerfect-Universal secondPersonSg-PresentPerfect)
(genlPreds presentPerfect-Universal thirdPersonSg-PresentPerfect)
(genlPreds presentPerfect-Universal pluralVerb-PresentPerfect)
(genlPreds futurePerfect-Universal futurePerfect-Generic)
(genlPreds pastPerfect-Universal pastPerfect-Generic)
(genls EconomicIndexRateSlot RelationalNounSlot)
(genls JapaneseInflectionalAffix LexicalAffix)
(genls JapaneseAffix LexicalAffix)
(genls JapaneseDerivationalAffix LexicalAffix)
(genls SubjectIsActionAlternation Alternation)
(genls SubjectIsActionAlternation-1 Alternation)
(genlPreds fullName nameString)
(genls (ExpressionTypeWithAgreementPredicateFn pluralVerb-Past) (ExpressionTypeWithAgreementPredicateFn pluralVerb-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn pluralVerb-Past) (ExpressionTypeWithAgreementPredicateFn pastTense-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn nonPlural-Generic) (ExpressionTypeWithAgreementPredicateFn prenominalModifier))
(genls (ExpressionTypeWithAgreementPredicateFn prenominalModifier) (ExpressionTypeWithAgreementPredicateFn wordStrings))
(genls (ExpressionTypeWithAgreementPredicateFn pluralVerb-Generic) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genls (ExpressionTypeWithAgreementPredicateFn singularVerb-Generic) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genls (ExpressionTypeWithAgreementPredicateFn firstPersonSg-PresentPerfect) (ExpressionTypeWithAgreementPredicateFn presentPerfect-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn secondPersonSg-PresentPerfect) (ExpressionTypeWithAgreementPredicateFn presentPerfect-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn thirdPersonSg-PresentPerfect) (ExpressionTypeWithAgreementPredicateFn presentPerfect-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn presentPerfect-Generic) (ExpressionTypeWithAgreementPredicateFn perfectAspect-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn simpleNounStrings) (ExpressionTypeWithAgreementPredicateFn nounStrings))
(genls (ExpressionTypeWithAgreementPredicateFn properNounStrings) (ExpressionTypeWithAgreementPredicateFn nounStrings))
(genls (ExpressionTypeWithAgreementPredicateFn futurePerfect-Generic) (ExpressionTypeWithAgreementPredicateFn perfectAspect-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn untensed) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genls (ExpressionTypeWithAgreementPredicateFn firstPersonSg-PresentPerfect) (ExpressionTypeWithAgreementPredicateFn firstPersonSg-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn firstPersonSg-Generic) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genls (ExpressionTypeWithAgreementPredicateFn firstPersonSg-Generic) (ExpressionTypeWithAgreementPredicateFn singularVerb-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn thirdPersonSg-PresentPerfect) (ExpressionTypeWithAgreementPredicateFn thirdPersonSg-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn thirdPersonSg-Generic) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genls (ExpressionTypeWithAgreementPredicateFn thirdPersonSg-Generic) (ExpressionTypeWithAgreementPredicateFn singularVerb-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn nonThirdSg-Present) (ExpressionTypeWithAgreementPredicateFn presentTense-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn secondPersonSg-Present) (ExpressionTypeWithAgreementPredicateFn secondPersonSg-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn secondPersonSg-PresentPerfect) (ExpressionTypeWithAgreementPredicateFn secondPersonSg-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn secondPersonSg-Generic) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genls (ExpressionTypeWithAgreementPredicateFn secondPersonSg-Generic) (ExpressionTypeWithAgreementPredicateFn singularVerb-Generic))
(genls (ExpressionTypeWithAgreementPredicateFn nonGradableAdjectiveForm) (ExpressionTypeWithAgreementPredicateFn adjStrings))
(genls (ExpressionTypeWithAgreementPredicateFn adjStrings) (ExpressionTypeWithAgreementPredicateFn prenominalModifier))
(genls (ExpressionTypeWithAgreementPredicateFn presentTense-Generic) (ExpressionTypeWithAgreementPredicateFn tensed))
(genls (ExpressionTypeWithAgreementPredicateFn presentIndicative) (ExpressionTypeWithAgreementPredicateFn tensed))
(genls (ExpressionTypeWithAgreementPredicateFn pastTense-Generic) (ExpressionTypeWithAgreementPredicateFn tensed))
(genls (ExpressionTypeWithAgreementPredicateFn perfectAspect-Generic) (ExpressionTypeWithAgreementPredicateFn tensed))
(genls (ExpressionTypeWithAgreementPredicateFn tensed) (ExpressionTypeWithAgreementPredicateFn verbStrings))
(genlPreds commonNounStrings nounStrings)
(genlPreds pastPerfect-Universal firstPersonSg-Generic)
(genlPreds pastPerfect-Universal secondPersonSg-Generic)
(genlPreds pastPerfect-Universal thirdPersonSg-Generic)
(genlPreds pastPerfect-Universal pluralVerb-Generic)
(genlPreds futurePerfect-Universal pluralVerb-Generic)
(genlPreds futurePerfect-Universal thirdPersonSg-Generic)
(genlPreds futurePerfect-Universal secondPersonSg-Generic)
(genlPreds futurePerfect-Universal firstPersonSg-Generic)
(genlPreds secondPersonSg-Past simplePast-Generic)
(genlPreds pluralVerb-Past simplePast-Generic)
(genlPreds thirdPersonSg-Past simplePast-Generic)
(genlPreds firstPersonSg-Past simplePast-Generic)
(genlPreds thirdPersonSg-Present simplePresent-Generic)
(genlPreds nonThirdSg-Present simplePresent-Generic)
(genlPreds simplePast-Generic pastTense-Generic)
(genlPreds simplePresent-Generic presentTense-Generic)
(genlPreds pastPerfect-Generic pastTense-Generic)
(genlPreds presentPerfect-Generic presentTense-Generic)
(genlPreds futurePerfect-Generic futureTense-Generic)
(genlPreds simpleFuture-Generic futureTense-Generic)
(genlPreds simpleAspect-Generic tensed)
(genlPreds simplePresent-Generic simpleAspect-Generic)
(genlPreds simplePast-Generic simpleAspect-Generic)
(genlPreds simpleFuture-Generic simpleAspect-Generic)
(genls IncomeMeasurePredicate RelationalNounSlot)
(genls PrepositionalPhrase PrepositionalPhrase)
(genls (PhraseFn WHAdverb) (PhraseFn Adverb))
(genls (PhraseFn AdverbOfTime) (PhraseFn Adverb))
(genls (PhraseFn AdverbOfPlace) (PhraseFn Adverb))
(genls (PhraseFn ProperNoun) NounPhrase)
(genls (PhraseFn ProperNoun) (PhraseFn Noun))
(genlPreds acronymString abbreviationString)
(genlPreds airportHasIATACode abbreviationString)
(genlPreds growthInhibitedPopulation playsPassiveSubjectRole)
(genls ItalianWord LexicalWord)
(genls NLPhrase SententialConstituent)
