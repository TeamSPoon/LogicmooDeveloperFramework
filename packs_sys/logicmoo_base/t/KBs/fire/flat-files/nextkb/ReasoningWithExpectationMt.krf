
 (in-microtheory ReasoningWithExpectationMt)
 (isa expected-ToBe Gen-HypotheticalSyllogism)
 (isa expected-ToBe Gen-Exportation)
 (isa expected-ToBe Mod-Univ-FactoringOutFrom-Conj)
 (isa expected-ToBe Gen-Univ-DistributingOver-Conj)
 (isa expectationConcerning QueryDedicatedPredicate)
 (isa expected-ToBe ClosedUnderBeckersRule)
 (isa amenable-ToBe Gen-Univ-DistributingOver-Cond)
 (isa expected-ToBe ModalScheme-K)
 (arg2Format expectationConcerning SetTheFormat)
 (isa expected-ToBe Gen-Mod-HypotheticalSyllogism)
 (isa expected-ToBe ClosedUnderEquivalents-RE)
 (argQuotedIsa amenable-ToBe 1 CycLSentence-Assertible)
 (isa expected-ToBe Mod-Univ-DistributingOver-FactoringOutFrom-Conj)
 (isa expected-ToBe Gen-Univ-DistributingOver-Conj-1)
 (isa expected-ToBe Gen-DeMorgan)
 (isa amenable-ToBe Gen-Commutativity-Disj)
 (isa expected-ToBe Mod-Univ-DistributingOver-Conj)
 (isa expected-ToBe ClosedUnderReplacementOfGen-Eq)
 (isa expected-ToBe CommonUnaryModalOperator)
 (isa expected-ToBe Mod-Univ-Elimination)
 (arg1QuotedIsa amenable-ToBe CycLSentence-Assertible)
 (isa amenable-ToBe Mod-Exist-DistributingOver-FactoringOutFrom-Disj)
 (isa expected-ToBe Mod-Univ-Exist-DistributingOver-Cond-Dual)
 (argQuotedIsa expected-ToBe 1 CycLSentence-Assertible)
 (isa expected-ToBe Mod-FactoringOutFrom-Conj)
 (isa expected-ToBe Gen-Disj-Introduction)
 (isa expected-ToBe Gen-Exist-DistributingOver-Conj)
 (isa expected-ToBe Mod-Univ-DistributingOver-Cond)
 (argIsa expectationConcerning 1 Individual)
 (isa amenable-ToBe Gen-ConditionalExchange)
 (isa amenable-ToBe Mod-Exist-DistributingOver-Conj)
 (isa expected-ToBe Gen-Exist-DistributingOver-Disj)
 (isa expected-ToBe Gen-Truth-Constant)
 (isa expected-ToBe Mod-Univ-DistributingOver-Cond-Dual)
 (isa amenable-ToBe Gen-EqualityReplacement)
 (isa expected-ToBe Mod-Exist-DistributingOver-Conj)
 (isa amenable-ToBe Mod-Exist-DistributingOver-Disj)
 (isa amenable-ToBe CommonUnaryModalOperator)
 (isa expected-ToBe Mod-DistributingOver-FactoringOutFrom-Conj)
 (isa amenable-ToBe Gen-Exist-DistributingOver-Conj)
 (isa amenable-ToBe Gen-Exist-DistributingOver-Disj)
 (isa expected-ToBe Gen-Univ-Exist-DistributingOver-Cond)
 (isa amenable-ToBe Mod-DistributingOver-FactoringOutFrom-Disj)
 (isa expected-ToBe Gen-Dilemma)
 (isa expected-ToBe Gen-Exist-Introduction)
 (comment expectationConcerning
 "(#$expectationConcerning THING PROP) means that PROP is one of the expectations that Cyc has concerning THING is PROP.")
 (isa expected-ToBe ModalScheme-D)
 (isa amenable-ToBe Gen-Conj-Elimination)
 (isa expected-ToBe ModalScheme-K-Dual)
 (isa amenable-ToBe Gen-Exist-FactoringOutFrom-Disj)
 (isa amenable-ToBe Mod-DistributingOver-Disj)
 (isa amenable-ToBe Gen-Disj-Introduction)
 (isa amenable-ToBe Gen-Conj-Introduction)
 (isa amenable-ToBe Gen-Equality)
 (isa expected-ToBe Gen-Equality)
 (isa expected-ToBe ClosedUnderGeneralizations-RN)
 (arg1Isa expectationConcerning Individual)
 (isa expected-ToBe Gen-ConditionalExchange)
 (argQuotedIsa expectationConcerning 2 CycLSentence-Assertible)
 (isa expected-ToBe Gen-Commutativity-Conj)
 (isa expected-ToBe Gen-Univ-FactoringOutFrom-Conj)
 (isa amenable-ToBe Gen-Exportation)
 (isa expected-ToBe Mod-Exist-Introduction)
 (isa amenable-ToBe Gen-Contraposition)
 (isa expected-ToBe Mod-HypotheticalSyllogism)
 (isa expected-ToBe Gen-Conj-Introduction)
 (isa expected-ToBe Gen-Univ-DistributingOver-Cond)
 (arg2QuotedIsa expectationConcerning CycLSentence-Assertible)
 (isa expected-ToBe ModalScheme-K-DualContrap)
 (isa expected-ToBe Gen-DoubleNegation)
 (isa amenable-ToBe Mod-Univ-DistributingOver-Conj)
 (isa expected-ToBe ExtensionOf-K-Normal)
 (isa expected-ToBe Gen-ModalScheme-K)
 (isa expected-ToBe Mod-Exist-FactoringOutFrom-Disj)
 (isa amenable-ToBe ClosedUnderGeneralizations-Classical)
 (isa expected-ToBe ClosedUnderConsequences-RC)
 (isa amenable-ToBe Gen-DeMorgan)
 (isa expected-ToBe Mod-DisjunctiveSyllogism)
 (argFormat expectationConcerning 1 SetTheFormat)
 (isa expected-ToBe ClosedUnderGeneralizations-Classical)
 (arg1QuotedIsa expected-ToBe CycLSentence-Assertible)
 (isa amenable-ToBe Gen-Truth-Constant)
 (genlPreds expected-ToBe amenable-ToBe)
 (isa expected-ToBe Mod-FactoringOutFrom-Disj)
 (isa expected-ToBe Gen-Contraposition)
 (isa amenable-ToBe Gen-Commutativity-Conj)
 (isa expected-ToBe Gen-Exist-FactoringOutFrom-Disj)
 (isa amenable-ToBe Gen-Exist-FactoringOutFrom-Disj-1)
 (comment expected-ToBe
 "#$expected-ToBe is a deontic operator in Cyc. For each
         #$CycLSentence-Assertible PROP, (#$expected-ToBe PROP) means that it is
         expected that PROP. #$expected-ToBe is the dual of
         #$amenable-ToBe, i.e., (#$expected-ToBe PROP) is equivalent
         to (#$not (#$amenable-ToBe (#$not PROP))).")
 (isa amenable-ToBe Gen-HypotheticalSyllogism)
 (isa amenable-ToBe Gen-Univ-Elimination)
 (isa amenable-ToBe Mod-DistributingOver-Conj)
 (isa amenable-ToBe ClosedUnderGeneralizations-RN)
 (isa expected-ToBe Gen-Conj-Elimination)
 (isa expected-ToBe Mod-Univ-Exist-DistributingOver-Cond)
 (isa amenable-ToBe ClosedUnderEquivalents-RE)
 (isa amenable-ToBe Mod-Exist-Introduction)
 (isa amenable-ToBe Gen-DoubleNegation)
 (comment amenable-ToBe
 "#$amenable-ToBe is a deontic operator in Cyc. For each          #$ELSentence-Assertible PROP, (#$amenable-ToBe PROP) means that it is          amenable that PROP. #$amenable-ToBe is the dual of          #$expected-ToBe, i.e., (#$amenable-ToBe PROP) is equivalent          to (#$not (#$expected-ToBe (#$not PROP))).")
 (isa expected-ToBe Mod-Dilemma)
 (argFormat expectationConcerning 2 SetTheFormat)
 (isa amenable-ToBe Gen-Exist-Introduction)
 (isa amenable-ToBe Gen-Univ-DistributingOver-Conj-1)
 (isa expected-ToBe ExtensionOf-D-Normal)
 (isa expected-ToBe ExtensionOf-C-Regular)
 (isa expected-ToBe Gen-Commutativity-Disj)
 (isa amenable-ToBe ClosedUnderConsequences-RC)
 (isa expected-ToBe Mod-FactoringOutFrom-Conj-Dual)
 (isa amenable-ToBe Gen-Univ-Exist-DistributingOver-Cond)
 (isa expected-ToBe Gen-Univ-Elimination)
 (arg1Format expectationConcerning SetTheFormat)
 (isa amenable-ToBe Mod-Univ-Elimination)
 (isa expected-ToBe Mod-DisjunctiveSyllogism-Dual)
 (isa expected-ToBe Gen-EqualityReplacement)
 (isa amenable-ToBe Mod-FactoringOutFrom-Disj)
 (isa expected-ToBe ClosedUnderConsequences-StrongVersion)
 (isa amenable-ToBe Mod-Exist-FactoringOutFrom-Disj)
 (isa amenable-ToBe Gen-Univ-DistributingOver-Conj)
 (isa amenable-ToBe Gen-Univ-FactoringOutFrom-Conj)
 (isa expected-ToBe Mod-DistributingOver-Conj)
 (isa amenable-ToBe Gen-Dilemma)
 (isa expected-ToBe Gen-Exist-FactoringOutFrom-Disj-1)