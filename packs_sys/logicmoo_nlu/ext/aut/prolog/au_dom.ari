:- visible findall/3.
:- visible(all).
:- visible(arity_builtins).

abbrev([belief], believe).
abbrev([knew], know).
abbrev([knows], know).
abbrev([knowing], know).
abbrev([knowledge], know).
abbrev([get,information], know).
abbrev([get,info], know).

abbrev([believes], believe).
abbrev([wants], want).
abbrev([believed], believe).
abbrev([wanted], want).
abbrev([pretended], pretend).
abbrev([pretending], pretend).
abbrev([pretent], pretend).
abbrev([pretends], pretend).
abbrev([tell], inform).
abbrev([informing], inform).
abbrev([informs], inform).
abbrev([informing], inform).
abbrev([telling], inform).
abbrev([tells], inform).
abbrev([let,_,know], inform).
abbrev([told], inform).
abbrev([say], inform).
abbrev([saying], inform).
abbrev([said], inform).
abbrev([look, for], search).
abbrev([it,seems], believe).
abbrev([it,seemed], believe).
abbrev([seemed], believe).
abbrev([intention], believe).
abbrev([thought], believe).

abbrev([think], believe). abbrev([thinks], believe). abbrev([thinking], believe).
abbrev([going,to], want).
%%%!!!!!!!
abbrev([avoid], not). abbrev([escape], not).
abbrev([speculate], believe).

want(mike,not know(mike,inform(peter,mike,smth))):-iassert(`This knowledge is expected to be unpleasent for Mike.`).

%* For what reason does Mike want to avoid knowledge of what Peter told to Mike


agent(mike). agent(peter).

know(mike, location(token)).
                          
know(mike, know(peter, not know(mike, location(token)))):-iassert(`Mike thinks: "since it's OK with Peter that I don't know the location, I assume that I should not ask Peter for the location".`).
%* suppose mike knows that peter knows that mike does not know the location

know(peter, know(mike, not know(peter, location(token)))):-iassert(`Since Peter knows that Mike knows that Peter does not know the location, Peter expects the Mike will let him know the location without a specific request.`).
%*what would peter expect if he would know that mike knows that peter does not know the location
%%%bug: not allowed knows...knows...

want(mike, not know(peter, location(token))):- iassert(`So Mike decides not to tell Peter about it`).
%guess what did mike do such that he would want that peter did not know the location
want(peter,not know(mike, know(peter, location(token)))):-iassert(`Then Peter does not show Mike that he knows the location, he behaves as if he did not know the location.`).
%not 
want(mike,know(peter,location(token))):- iassert(`Then Mike should not tell Peter anything about the location or show it.`), fail.

know(peter, not know(mike,location(token))) :- iassert(`If Peter wants Mike to know the location, Peter will tell it, and if Peter does not want to, he will say nothing.`).
 
want(peter,not know(mike,not know(peter,location(token)))) :- iassert(`So Peter avoids talking on the subject.`).
%*Did Peter want Mike not to know that Peter does not know
% peter want mike to know that peter does not know
%  peter know that mike not know
% is it true that peter want that mike do not know
%is it true that mike does not want that peter know the location
% why would mike want peter to know the location

believe(peter,not know(mike,location(token))) :- iassert(`Being not sure whether Mikes knows the location, Peter decides to ask Mike first about his knowledge, and then disclose the location if necessary.`).
%*what peter believe mike to not know

%bug may be: know peter that know mike not believe peter

know(peter,know(mike,not believe(peter,location(token)))):- iassert(`Peter would expect Mike to keep convincing Peter concerning the token location.`).
%peter know that mike know that peter does not believe

want(mike,believe(mike,not know(peter,location(token)))):- iassert(` Mike prefers not  to change his belief and keeps saying to himself that Peter does not know the location.`).
%does mike want to believe that peter does not know

want(peter,know(mike,believe(peter, location(token)))):-iassert(`Then Peter is going to tell Mike about his current belief, which can be changed at any time later.`).
%%what peter want mike to know about peter belief

want(mike,not believe(peter,know(mike,location(token)))):-iassert(`Mike wants to conceal his knowledge of the token location from Peter.`).
%%mike want that peter does not believe that mike know

%% Nobody can pretend about a foreign mental state (only the own mental state and any physical state).
%% 
%% exception: % I want both of us to pretend that you know

want(mike,pretend(mike,peter,know(mike,location(token)))):- iassert(`Since Mike wants to pretend that he knows the token location, he does not ask Peter about it, though both of them actually know that Mike has no idea about its location. Note that any pretend is oriented to particular agents.`).
%did mike want to pretend that peter know the location

pretend(peter,mike,believe(peter,know(mike,location(token)))):-iassert(`To pretend for Mike that Peter believes that Mike knows the location, Peter asks Mike if he knows the location before telling him the actual location.`).

pretend(peter,mike,believe(peter,know(mike,location(token)))):-iassert(`To pretend for Mike that Peter believes that Mike knows the location, Peter avoids asking Mike about his knowledge not to stress its absense.`).

%does peter pretend that peter believe that mike know the location

pretend(peter,mike,not want(peter,know(mike,location(token)))):-iassert(`Before telling Mike about the token location, Peter is showing to Mike that he is trying to cover the token, attracting his attention (curiosity).`).

%how can Peter pretend that Peter does not want that mike know the location

%%%% jul 16
pretend(mike, peter,believe(mike,know(peter, location(token)))) :- iassert(`Since Mike pretends he believes that Peter knows the token location, he will ask Peter to bring it in`).
% what mike pretend to believe about what peter know

know(mike,believe(peter,not pretend(mike,peter, location(token)))) :- iassert(`Peter trusts Mike concerning the location.`).

%does mike know that peter believe that mike does not pretend
believe(peter,want(mike,pretend(mike,peter, not location(token)))) :- iassert(`...And Peter decides not to let Mike do so and tell him the real location.`).
% *did peter believe that mike wanted to be pretend something

want(mike,pretend(peter,mike,want(peter, location(token)))) :- iassert(` ...And Mike encouraged Peter to look for the token.`).
%did mike want peter to pretend that he wants something

%jul22
want(mike,inform(peter,mike,location(token))):-iassert(`Mike wanted to know the location of the token, therefore he wanted Peter to inform him about it, so he asked him.`).
%what mike want peter tell to mike

want(mike,inform(peter,mike,not know(peter,location(token)))):-iassert(`Just to tell to Mike something`).
%what did mike want peter to tell to mike that peter not know
%what did mike want that peter tell to mike that peter did not know

want(mike,inform(peter,mike,not know(mike,_6294))):-iassert(`This makes sense in case Peter does know smth Mike does not know.`).
% what did mike want that peter tell to mike that he did not know

pretend(mike,peter,not inform(mike,peter,want(mike,_9068))):-iassert(`Ignoring the information from Mike concerning his intentions, Peter did exactly he wanted. `).
%*did mike pretend that mike did not tell peter what mike want

pretend(peter,mike,want(peter,know(mike,location(token)))):-iassert(`Peter is provoking: "ask me, ask me! (but I will never respond!!)". `).
%*does peter pretend that he wants mike to know

%% mike told me he was impressed by a book, and I asked him to help mke finding it, though I was 
%% not interested

%%%% typical way to extract a secret facts: pretend that I don't want to know though I do want
%%%% to know
%can't be
%want(peter,inform(peter,mike,believe(mike,location(token)))):-iassert(`Therefore Peter actually influenced the belief of Mike.`).
%*what did peter want to tell mike about his belief

% can't be
%pretend(mike,peter,inform(mike,peter,believe(peter,smth))):- iassert(` How could Mike pretend that he had informed Peter about something, more concretely: his own (Peter's) belief. Mike could write it on a piece of paper.`).
%*did mike pretend to peter that mike had inform peter about his belief

want(mike,pretend(mike,peter, inform(mike,peter,smth))):- iassert(` Mike whispered something, and then he pretended that he expected a response back from Peter. Actually, Mike wanted to conceal some information from Peter and tries to avoid confession.`).
%*did mike want to pretend to peter that mike will let peter know smth 
%% I did't want to tell you where I was going, but then I was surprised why you did not join the trip,
%% since I believed you would like it
%%
% %% usually linked with the internal intention NOT to share information

believe(peter,pretend(mike,peter,not inform(mike,peter,smth))):- iassert(` There was a striking news. Mike send Peter an e.mail saying that his friend got married. When Peter was visiting Mike, he pretended that he did not send this e.mail and this news will be impressive for Peter, being claimed.`).
% %% usually linked with the internal intention to ACTUALLY share information
%% usually for the others , not for the info addressee.

%*what was Peter's belief about Mike's pretending that he did not inform Peter

%%!! failure: what knowledge does mike want to obtain after believing in what peter told ¦


%%% jul 30
%pretend that I know that you know but NOT
%I pretend that you know

want(mike,not pretend(peter,mike,know(peter, smth))):- 
  iassert(` A teacher and a student: stop pretending you actually know something.`).
  
%what did mike want that peter would not pretend about
%%% I know that you are going to pretend and I know what is actually the truth


%I know that you do not know what I want to tell you   
% iassert ++I either ask you what you want to tell or just wait till you start talking

pretend(mike,peter,want(mike,know(mike,smth))):- iassert(` Then Mike should ask and leave as only Peter start answering.`).
%% did mike pretend that he wanted to know smth


%aug12

%Tell me a story, where first person does not want the second person
%to pretend that the second person does not tell smth to the first person

%does mike want that peter do not pretend that he does not told mike smth
%want(mike,not pretend(peter,mike,not know(peter,_7450)))

%2)
%want(mike,not pretend(peter,mike,not tell(peter,mike,_7450)))

%3)
%first is told that she was decieved by the second one and reports to the third
%one the fact the first knows not to be the truth.

%tell(inquis, girl, decieve(lover, girl, love(lover, another_girl))),
%report(girl, inquis, write(lover, pasquile)), 
%know(girl, write(lover, pasquile)).
%4) dva slugi 
%want(1,not pretend(2,1, tell(2,1,_7450))).
%know(1, pretend(2, 1,tell(2,1, smth))).
%5)
%pretend(girl, not want(girl, know(girl, smth))).
% want(girl, know(girl, smth))).
 
%believe(girl, must(server, make(server, girl, read(girl, letter)))).

%6)pretend(king, want(king, know(king, smth))).
%not want(king, know(king, smth)).
%not know(secretary, pretend(king, want(king, know..
%want(king, pretend(actress, love(...

%7) want(king, tell(actress, king, love(actress, king))).
%pretend(king,...

%know(king, not (love(actress, king))).
%know(king, know(actress, not (love(actress, king))).

%8)
%want(1, pretend(2, 1,smth) ),
%want(1, smth).

%9)
%want(1, pretend(2, not know(2, smth)))
want(husband, pretend(lover, husband, not know(lover, wife))).
pretend(1,2, believe(1, pretend(2,1,smth))).

%10) 
%pretend(1,2, not understand(1,2, pretend(2,1,smth))).


%11)
%believe(guests, not pretend(husband, want(wife, guests))).

%12
%  pretend(husband, server, want(husband, smth)).
%  believe(server, want(husband, lover(husband, server))).

%william congreve
%%%%%%%%%%%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

know(peter, location(token)):- fail.

%know(mike, not know(peter, location(token))).
want(mike, know(peter, location(token))).
believe(mike, not know(peter, location(token))).
believe(mike, want(peter, know(peter, location(token)))).

want(peter,not believe(peter,pretend(mike,peter,smth))):-iassert(`Because Peter likes to speculate about smth real.`).
%*Why does Peter want to avoid thinking about the pretend of Mike

pretend(peter,mike,know(peter,inform(mike,peter,smth))):-iassert(`Actually, Peter did not hear what Mike told him but was ashamed to ask again.`).
%*What kind of Peter's pretending was based on his knowledge of what Mike told to Peter


inform(A,B, What):- Inform= ( know(A, What),
   believe(A, not know(B, What)),
   want(A, know(B, What)),
   believe(A, want(B, know(B, What))) ), 
   Inform,  assert(accum(Inform)).

know(mike, picture).
   believe(mike, not know(peter, picture)).
   want(mike, know(peter, picture)).
   believe(mike, want(peter, know(peter, picture))).

want(A, inform(A,B,What)):- inform(A,B, What), not want(A, not know(B, What)).
%%%%%%
%bugs:
%repetative know : not _> second
%inform peter-> inform(peter, __, J).
%enu(`who, know, that, peter, know, that, me, not, know`, O), writeln(O).



                    

    
                                   
