
INPUT TEXT:
John can have a card.
John is a customer.
If someone can have a card and is a customer then he/she must wait.
Every clerk must have a card.
Bill is a clerk.
Bill cannot wait.
No customer must buy a car.

RULES:
-group([ can( [ pred_mod(wait,named('Bill'),[])])]).
-group([ must( [ pred_mod(buy,Customer_Buy,gv(0),[]), 
                 object(gv(0),car,countable,na,eq,1)])]) <- [object(Customer_Buy,customer,countable,na,eq,1)].
can([ pred_mod(have,named('John'),v(0),[]), 
      object(v(0),card,countable,na,eq,1)]).
group([must([pred_mod(wait,Customer_Have_Wait1272,[])])]) <- [can([ pred_mod(have,Customer_Have_Wait1272,Size_Pred_mod1276,[]), 
                                                                    object(Size_Pred_mod1276,card,countable,na,eq,1)]), object(Customer_Have_Wait1272,ObjectHave_Wait12721282,ObjectHave_Wait12721281,ObjectHave_Wait12721280,ObjectHave_Wait1272,Object1290), object(Customer_Have_Wait1272,customer,countable,na,eq,1)].
group([ must( [ pred_mod(have,Clerk_Have1285,gv(1),[]), 
                object(gv(1),card,countable,na,eq,1)])]) <- [object(Clerk_Have1285,clerk,countable,na,eq,1)].
object(named('Bill'),'Bill',named,na,eq,1).
object(named('Bill'),clerk,countable,na,eq,1).
object(named('John'),'John',named,na,eq,1).
object(named('John'),customer,countable,na,eq,1).

SIMPLE RULES:
-can(wait(named('Bill'),[])).
-must([ buy(Customer_Gv1313,gv(0),[]), 
        car(gv(0))]) <- [customer(Customer_Gv1313)].
can([ have(named('John'),v(0),[]), 
      card(v(0))]).
must(wait(Customer_Something_Wait1315,[])) <- [can([ have(Customer_Something_Wait1315,Size_HaveWait1315,[]), 
                                                     card(Size_HaveWait1315)]), something(Customer_Something_Wait1315), customer(Customer_Something_Wait1315)].
must([ have(Clerk_Gv1319,gv(1),[]), 
       card(gv(1))]) <- [clerk(Clerk_Gv1319)].
clerk(named('Bill')).
customer(named('John')).

ANSWERSET #1:
-group([ can( [ pred_mod(wait,named('Bill'),[])])]).
-group([ must( [ pred_mod(buy,named('John'),gv(0),[]), 
                 object(gv(0),car,countable,na,eq,1)])]).
can([ pred_mod(have,named('John'),v(0),[]), 
      object(v(0),card,countable,na,eq,1)]).
group([ must( [ pred_mod(wait,named('John'),[])])]).
group([ must( [ pred_mod(have,named('Bill'),gv(1),[]), 
                object(gv(1),card,countable,na,eq,1)])]).
object(named('Bill'),'Bill',named,na,eq,1).
object(named('Bill'),clerk,countable,na,eq,1).
object(named('John'),'John',named,na,eq,1).
object(named('John'),customer,countable,na,eq,1).

ANSWERTEXT #1:
John is a customer.
Bill is a clerk.
It is false that it is possible that Bill waits.
It is false that it is necessary that John buys a car.
It is possible that John has a card.
It is necessary that John waits.
It is necessary that Bill has a card.

