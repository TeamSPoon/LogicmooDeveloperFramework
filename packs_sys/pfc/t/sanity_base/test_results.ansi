

ALL TESTs




Running Matching Tests: ./test_prolog.sh -k *_01*.p* *_02*.p* *_03*.p* *_04*.p* *_05*.p* *_06*.p* *_07*.p* *_08*.p* *_09*.p* *_10*.p* *_11*.p* *_12*.p*


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['abc_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(2) , 
  support_fact = mfl4(_19436,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/abc_01.pfc',15) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b(2))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b(2):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/abc_01.pfc',15) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k abc_01.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['attvar_01.pl'])" -g "test_completed"
sk1_in(A) :-
    attr_bind([put_attr(A, sk1, 'SKF-666')], true).

:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k attvar_01.pl (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bc_01a_1.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_88212)<-bc_p(_88212) , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = bc_q(_88212)<-bc_p(_88212) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     header_sane, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc', 27) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     header_sane, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc', 27) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1348),'$pt'(header_sane,bc_p(_1348),rhs([bc_q(_1348)]))) , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = '$bt'(bc_q(_1348),'$pt'(header_sane,bc_p(_1348),rhs([bc_q(_1348)]))) , 
  support_fact = bc_q(_1524)<-bc_p(_1524) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     header_sane, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc', 27) , 
  none is support_status
header_sane : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(header_sane,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = bc_q(_39588)<-bc_p(_39588) , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = bc_q(_39588)<-bc_p(_39588) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     header_sane, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc', 29) , 
  support_trig=ax , 
  exact is support_status
:- dynamic bc_p/1.


:- dynamic'$pt'/3.
:- multifile'$pt'/3.
:- public'$pt'/3.
:- module_transparent'$pt'/3.

'$pt'(A, B, C) :-
    zwc,
    inherit_above(header_sane, '$pt'(A, B, C)).

:- dynamic'$bt'/2.
:- multifile'$bt'/2.
:- public'$bt'/2.
:- module_transparent'$bt'/2.

'$bt'(A, B) :-
    zwc,
    inherit_above(header_sane, '$bt'(A, B)).
'$bt'(bc_q(A), '$pt'(header_sane, bc_p(A), rhs([bc_q(A)]))).

:- dynamic bc_q/1.



 /* found 0 for header_sane:(clause_u(bc_q(_28810),_28832),(compound(_28832)->true;true)). 
 */ 
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_29946,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',43) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_50536,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',44) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( bc_p(b))
:- dynamic bc_p/1.

bc_p(a).
bc_p(b).

:- dynamic bc_q/1.


%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'bc_01a_1.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['bc_01a_1.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('bc_01a_1.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x5581499d6e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x5581499d6e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',1629148130.6421387),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'('<garbage_collected>','<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'('<garbage_collected>','<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'('<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'('<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(bc_q(b))).   %  init.pl:3573: 
(39)$[system] catch(header_sane:mpred_test(bc_q(b)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[header_sane] pfc_test:mpred_test('<garbage_collected>').   %  pfc_test.pl:47: 
(41)[header_sane] pfc_lib:with_no_breaks('<garbage_collected>').   %  mpred_core.pl:4215: 
(42)[header_sane] locally_each:locally_tl(no_breaks,'<garbage_collected>').   %  redo_locally.pl:133: 
(43)[locally_each] locally_each:locally('<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:131: 
(44)[locally_each] locally_each:wtl(t_l,no_breaks,'<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:181: 
(45)[locally_each] locally_each:wtl(t_l,'<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:186: 
(46)[locally_each] locally_each:wtl_how('<garbage_collected>','<garbage_collected>','<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:199: 
(47)[each_call_cleanup] each_call_cleanup:each_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  each_call.pl:142: 
(48)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  each_call.pl:111: 
(49)[system] setup_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(bc_q(b))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup] '<meta-call>'('<garbage_collected>').  no(clause) 
(52)[header_sane] pfc_lib:with_mpred_trace_exec('<garbage_collected>').   %  mpred_core.pl:4263: 
(53)$[pfc_lib] pfc_lib:show_if_debug('<garbage_collected>').   %  mpred_core.pl:4284: 
(54)$[pfc_lib] pfc_lib:call_u('<garbage_collected>').   %  mpred_core.pl:2934: 
(55)$[pfc_lib] pfc_lib:call_u_mp(header_sane,'<garbage_collected>').   %  mpred_core.pl:2943: 
(56)$[pfc_lib] pfc_lib:call_mp(header_sane,'<garbage_collected>').   %  mpred_core.pl:3009: 
(57)$[system] call('<garbage_collected>').   %  init.pl:483: 
(58)<*>[header_sane]# must_sanity:mpred_test_fok(bc_q(b)).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(header_sane:bc_q(b)).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(header_sane:bc_q(b)).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(header_sane:bc_q(b))).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'bc_01a_1.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['bc_01a_1.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('bc_01a_1.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x5581499d6e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x5581499d6e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',1629148130.6421387),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'('<garbage_collected>','<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'('<garbage_collected>','<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'('<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'('<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(bc_q(b))).   %  init.pl:3573: 
(39)$[system] catch(header_sane:mpred_test(bc_q(b)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[header_sane] pfc_test:mpred_test('<garbage_collected>').   %  pfc_test.pl:47: 
(41)[header_sane] pfc_lib:with_no_breaks('<garbage_collected>').   %  mpred_core.pl:4215: 
(42)[header_sane] locally_each:locally_tl(no_breaks,'<garbage_collected>').   %  redo_locally.pl:133: 
(43)[locally_each] locally_each:locally('<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:131: 
(44)[locally_each] locally_each:wtl(t_l,no_breaks,'<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:181: 
(45)[locally_each] locally_each:wtl(t_l,'<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:186: 
(46)[locally_each] locally_each:wtl_how('<garbage_collected>','<garbage_collected>','<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:199: 
(47)[each_call_cleanup] each_call_cleanup:each_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  each_call.pl:142: 
(48)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  each_call.pl:111: 
(49)[system] setup_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(bc_q(b))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup] '<meta-call>'('<garbage_collected>').  no(clause) 
(52)[header_sane] pfc_lib:with_mpred_trace_exec('<garbage_collected>').   %  mpred_core.pl:4263: 
(53)$[pfc_lib] pfc_lib:show_if_debug('<garbage_collected>').   %  mpred_core.pl:4284: 
(54)$[pfc_lib] pfc_lib:call_u('<garbage_collected>').   %  mpred_core.pl:2934: 
(55)$[pfc_lib] pfc_lib:call_u_mp(header_sane,'<garbage_collected>').   %  mpred_core.pl:2943: 
(56)$[pfc_lib] pfc_lib:call_mp(header_sane,'<garbage_collected>').   %  mpred_core.pl:3009: 
(57)$[system] call('<garbage_collected>').   %  init.pl:483: 
(58)[header_sane]# must_sanity:mpred_test_fok(bc_q(b)).   %  must_sanity.pl:58: 
(59)[header_sane]# must_sanity:mpred_test_fok(bc_q(b)).   %  must_sanity.pl:59: 
(60)<*>$[header_sane]# '<meta-call>'((mpred_test_fok(bc_q(b))*->true;rtrace(mpred_test_fok(bc_q(b))),throw(mpred_test_fok(bc_q(b))))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(header_sane:bc_q(b)).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(header_sane:bc_q(b)).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(header_sane:bc_q(b))).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'bc_01a_1.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['bc_01a_1.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('bc_01a_1.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x5581499d6e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x5581499d6e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',1629148130.6421387),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'('<garbage_collected>','<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'('<garbage_collected>','<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'('<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'('<garbage_collected>','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(bc_q(b))).   %  init.pl:3573: 
(39)$[system] catch(header_sane:mpred_test(bc_q(b)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[header_sane] pfc_test:mpred_test('<garbage_collected>').   %  pfc_test.pl:47: 
(41)[header_sane] pfc_lib:with_no_breaks('<garbage_collected>').   %  mpred_core.pl:4215: 
(42)[header_sane] locally_each:locally_tl(no_breaks,'<garbage_collected>').   %  redo_locally.pl:133: 
(43)[locally_each] locally_each:locally('<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:131: 
(44)[locally_each] locally_each:wtl(t_l,no_breaks,'<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:181: 
(45)[locally_each] locally_each:wtl(t_l,'<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:186: 
(46)[locally_each] locally_each:wtl_how('<garbage_collected>','<garbage_collected>','<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:199: 
(47)[each_call_cleanup] each_call_cleanup:each_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  each_call.pl:142: 
(48)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  each_call.pl:111: 
(49)[system] setup_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(bc_q(b))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup] '<meta-call>'('<garbage_collected>').  no(clause) 
(52)[header_sane] pfc_lib:with_mpred_trace_exec('<garbage_collected>').   %  mpred_core.pl:4263: 
(53)$[pfc_lib] pfc_lib:show_if_debug('<garbage_collected>').   %  mpred_core.pl:4284: 
(54)$[pfc_lib] pfc_lib:call_u('<garbage_collected>').   %  mpred_core.pl:2934: 
(55)$[pfc_lib] pfc_lib:call_u_mp(header_sane,'<garbage_collected>').   %  mpred_core.pl:2943: 
(56)$[pfc_lib] pfc_lib:call_mp(header_sane,'<garbage_collected>').   %  mpred_core.pl:3009: 
(57)$[system] call('<garbage_collected>').   %  init.pl:483: 
(58)[header_sane]# must_sanity:mpred_test_fok(bc_q(b)).   %  must_sanity.pl:58: 
(59)[header_sane]# must_sanity:mpred_test_fok(bc_q(b)).   %  must_sanity.pl:59: 
(60)$[header_sane]# '<meta-call>'((mpred_test_fok(bc_q(b))*->true;rtrace(mpred_test_fok(bc_q(b))),throw(mpred_test_fok(bc_q(b))))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(header_sane:mpred_test_fok(bc_q(b))).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,header_sane:mpred_test_fok(bc_q(b)),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((header_sane:mpred_test_fok(bc_q(b)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((header_sane:mpred_test_fok(bc_q(b)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((header_sane:mpred_test_fok(bc_q(b)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(header_sane:bc_q(b)).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(header_sane:bc_q(b)).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(header_sane:bc_q(b))).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(header_sane:bc_q(b))).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
:- dynamic bc_q/1.


%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'bc_01a_1.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['bc_01a_1.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('bc_01a_1.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x5581499d6e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x5581499d6e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',1629148130.6421387),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(clause_u(bc_q(A),true))).   %  init.pl:3573: 
(39)$[system] catch(header_sane:mpred_test(clause_u(bc_q(A),true)),error(B,C),system:'$exception_in_directive'(error(B,C))).   %  init.pl:546: 
(40)[header_sane] pfc_test:mpred_test(clause_u(bc_q(A),true)).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(header_sane:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(header_sane,mpred_test_fok(clause_u(bc_q(A),true))).   %  mpred_core.pl:3009: 
(57)$[system]# call(header_sane:mpred_test_fok(clause_u(bc_q(A),true))).   %  init.pl:483: 
(58)<*>[header_sane]# must_sanity:mpred_test_fok(clause_u(bc_q(A),true)).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(header_sane:clause_u(bc_q(A),true)).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(header_sane:clause_u(bc_q(A),true)).   %  pfc_test.pl:62: 
(62)[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))),log_failure_red)).  no(clause) 
(65)[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)))).   %  butterfly_console.pl:212: 
(72)[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1))).   %  first.pl:498: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(89)[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'bc_01a_1.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['bc_01a_1.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('bc_01a_1.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x5581499d6e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x5581499d6e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',1629148130.6421387),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(clause_u(bc_q(A),true))).   %  init.pl:3573: 
(39)$[system] catch(header_sane:mpred_test(clause_u(bc_q(A),true)),error(B,C),system:'$exception_in_directive'(error(B,C))).   %  init.pl:546: 
(40)[header_sane] pfc_test:mpred_test(clause_u(bc_q(A),true)).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(header_sane:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(header_sane,mpred_test_fok(clause_u(bc_q(A),true))).   %  mpred_core.pl:3009: 
(57)$[system]# call(header_sane:mpred_test_fok(clause_u(bc_q(A),true))).   %  init.pl:483: 
(58)[header_sane]# must_sanity:mpred_test_fok(clause_u(bc_q(A),true)).   %  must_sanity.pl:58: 
(59)[header_sane]# must_sanity:mpred_test_fok(clause_u(bc_q(A),true)).   %  must_sanity.pl:59: 
(60)<*>$[header_sane]# '<meta-call>'((mpred_test_fok(clause_u(bc_q(A),true))*->true;rtrace(mpred_test_fok(clause_u(bc_q(A),true))),throw(mpred_test_fok(clause_u(bc_q(A),true))))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(header_sane:clause_u(bc_q(A),true)).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(header_sane:clause_u(bc_q(A),true)).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(header_sane:clause_u(bc_q(A),true))).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'bc_01a_1.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['bc_01a_1.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('bc_01a_1.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x5581499d6e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',<clause>(0x5581499d6e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x5581499d6e80),'bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x5581499d6e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',1629148130.6421387),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(clause_u(bc_q(A),true))).   %  init.pl:3573: 
(39)$[system] catch(header_sane:mpred_test(clause_u(bc_q(A),true)),error(B,C),system:'$exception_in_directive'(error(B,C))).   %  init.pl:546: 
(40)[header_sane] pfc_test:mpred_test(clause_u(bc_q(A),true)).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(header_sane:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((header_sane:with_mpred_trace_exec(mpred_test_fok(clause_u(bc_q(A),true))),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(header_sane,mpred_test_fok(clause_u(bc_q(A),true))).   %  mpred_core.pl:3009: 
(57)$[system]# call(header_sane:mpred_test_fok(clause_u(bc_q(A),true))).   %  init.pl:483: 
(58)[header_sane]# must_sanity:mpred_test_fok(clause_u(bc_q(A),true)).   %  must_sanity.pl:58: 
(59)[header_sane]# must_sanity:mpred_test_fok(clause_u(bc_q(A),true)).   %  must_sanity.pl:59: 
(60)$[header_sane]# '<meta-call>'((mpred_test_fok(clause_u(bc_q(A),true))*->true;rtrace(mpred_test_fok(clause_u(bc_q(A),true))),throw(mpred_test_fok(clause_u(bc_q(A),true))))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(header_sane:mpred_test_fok(clause_u(bc_q(A),true))).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,header_sane:mpred_test_fok(clause_u(bc_q(A),true)),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((header_sane:mpred_test_fok(clause_u(bc_q(A),true)),deterministic(B)),(notrace(B==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((header_sane:mpred_test_fok(clause_u(bc_q(A),true)),deterministic(B)),(notrace(B==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),C,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((header_sane:mpred_test_fok(clause_u(bc_q(A),true)),deterministic(B)),(notrace(B==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(header_sane:clause_u(bc_q(A),true)).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(header_sane:clause_u(bc_q(A),true)).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(header_sane:clause_u(bc_q(A),true))).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(header_sane:clause_u(bc_q(A),true))).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Fileinfo: unk: -1

header_sane:(bc_q(Q) <- bc_p(P)).
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc:69

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [interpreted,visible,dynamic,number_of_clauses(0),number_of_rules(0),last_modified_generation(0),defined,size(112)]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc:69
header_sane : '$bt'(bc_q(Q),'$pt'(header_sane,bc_p(P),rhs([bc_q(Q2)]))).
% Fileinfo: unk: -1

header_sane : '$spft'(header_sane,(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',27),ax).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc:69
header_sane : '$spft'(header_sane,
	'$bt'(bc_q(Q),'$pt'(header_sane,bc_p(P),rhs([ bc_q(Q3)]))),
	(bc_q(Q4) <- bc_p(P5)),
	mfl4([ 'N'=N],header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc',27)).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc:69
system:test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc':66/goal_failed(directive,header_sane:mpred_test(clause_u(bc_q(Q),true))),
	     warning,
	     ['Goal (~w) failed: ~p'-[directive,header_sane:mpred_test(clause_u(bc_q(Q2),true))]]).
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_3181266)<-bc_p(_3181266). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_3181266)<-bc_p(_3181266). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_3183904)<-bc_p(_3183904). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_3183904)<-bc_p(_3183904). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(b). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(b). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic bc_q/1.


:- dynamic bc_q/1.


% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc:69

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [interpreted,visible,dynamic,number_of_clauses(0),number_of_rules(0),last_modified_generation(0),defined,size(112)]).
 */
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc:69
system:test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc':66/goal_failed(directive,header_sane:mpred_test(clause_u(bc_q(Q),true))),
	     warning,
	     ['Goal (~w) failed: ~p'-[directive,header_sane:mpred_test(clause_u(bc_q(Q2),true))]]).
:- dynamic test_results/3.

test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc':60/goal_failed(directive, header_sane:mpred_test(bc_q(b))), warning, ['Goal (~w) failed: ~p'-[directive, header_sane:mpred_test(bc_q(b))]]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a_1.pfc':66/goal_failed(directive, header_sane:mpred_test(clause_u(bc_q(A), true))), warning, ['Goal (~w) failed: ~p'-[directive, header_sane:mpred_test(clause_u(bc_q(A), true))]]).

swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bc_01a.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_20592)<-bc_p(_20592) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_20592)<-bc_p(_20592) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc', 27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc', 27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bc_q,1,pfcRHS),rhs([mpred_prop(baseKB,bc_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc', 27) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc', 27) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bc_q,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  support_fact = bc_q(_1504)<-bc_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc', 27) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_q(Q)) , 
  support_fact = '$bt'(bc_q(_2048),'$pt'(baseKB,bc_p(_2048),rhs([bc_q(_2048)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))), 
                   ( ( nonvar( bc_q(Q)) , 
                       must( get_bc_clause(bc_q(Q),(bc_q(Q2):-awc,!,mpred_bc_and_with_pfc(bc_q(Q3)))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_q(Q))) }, 
                            bc_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_q(Q2)))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = bc_q(_23942)<-bc_p(_23942) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_23942)<-bc_p(_23942) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc', 29) , 
  support_trig=ax , 
  exact is support_status
:- dynamic bc_p/1.


:- dynamic'$pt'/3.
:- multifile'$pt'/3.
:- public'$pt'/3.
:- module_transparent'$pt'/3.

'$pt'(baseKB, pfcSanityA, rhs([pfcSanityB])).
'$pt'(baseKB, mtHybrid(A),  (A\=baseKB*->rhs([genlMt(A, baseKB), {ensure_abox(A), (A==user->dmsg_pretty(warn(mtHybrid(A)));true)}]))).
'$pt'(baseKB, genlMt(A, B),  (A\=baseKB*->rhs([{doall((predicate_m_f_a_decl(B, C, D, E), ain(baseKB:mpred_prop(B, C, D, E))))}]))).
'$pt'(baseKB, predicateTriggerType(A), rhs([(mpred_prop(B, C, D, A), genlMt(E, B)/(E\=baseKB)==>{nop(dmsg_pretty(E:call(A, E:C/D))), show_failure(on_x_fail(E:call(A, E:C/D)))})])).
'$pt'(baseKB, mpred_prop(A, B, C, kb_local), '$pt'(baseKB, genlMt(D, A),  (D\=baseKB*->rhs([{nop(dmsg_pretty(D:call(kb_local, D:B/C))), show_failure(on_x_fail(D:call(kb_local, D:B/C)))}])))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/1))), show_failure(on_x_fail(A:call(kb_local, A:t/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/2))), show_failure(on_x_fail(A:call(kb_local, A:t/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/3))), show_failure(on_x_fail(A:call(kb_local, A:t/3)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/4))), show_failure(on_x_fail(A:call(kb_local, A:t/4)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/5))), show_failure(on_x_fail(A:call(kb_local, A:t/5)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/6))), show_failure(on_x_fail(A:call(kb_local, A:t/6)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/7))), show_failure(on_x_fail(A:call(kb_local, A:t/7)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/8))), show_failure(on_x_fail(A:call(kb_local, A:t/8)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/9))), show_failure(on_x_fail(A:call(kb_local, A:t/9)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/10))), show_failure(on_x_fail(A:call(kb_local, A:t/10)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:t/11))), show_failure(on_x_fail(A:call(kb_local, A:t/11)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:mpred_f/5))), show_failure(on_x_fail(A:call(kb_local, A:mpred_f/5)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:mpred_f/6))), show_failure(on_x_fail(A:call(kb_local, A:mpred_f/6)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_local, A:mpred_f/7))), show_failure(on_x_fail(A:call(kb_local, A:mpred_f/7)))}]))).
'$pt'(baseKB, mpred_prop(A, B, C, kb_shared), '$pt'(baseKB, genlMt(D, A),  (D\=baseKB*->rhs([{nop(dmsg_pretty(D:call(kb_shared, D:B/C))), show_failure(on_x_fail(D:call(kb_shared, D:B/C)))}])))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:never_assert_u/1))), show_failure(on_x_fail(A:call(kb_shared, A:never_assert_u/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:never_assert_u/2))), show_failure(on_x_fail(A:call(kb_shared, A:never_assert_u/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:never_retract_u/1))), show_failure(on_x_fail(A:call(kb_shared, A:never_retract_u/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:never_retract_u/2))), show_failure(on_x_fail(A:call(kb_shared, A:never_retract_u/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:mtExact/1))), show_failure(on_x_fail(A:call(kb_shared, A:mtExact/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:col_as_unary/1))), show_failure(on_x_fail(A:call(kb_shared, A:col_as_unary/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:comment/2))), show_failure(on_x_fail(A:call(kb_shared, A:comment/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:feature_setting/2))), show_failure(on_x_fail(A:call(kb_shared, A:feature_setting/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:hybrid_support/2))), show_failure(on_x_fail(A:call(kb_shared, A:hybrid_support/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:predicateConventionMt/2))), show_failure(on_x_fail(A:call(kb_shared, A:predicateConventionMt/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:startup_option/2))), show_failure(on_x_fail(A:call(kb_shared, A:startup_option/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:tooSlow/0))), show_failure(on_x_fail(A:call(kb_shared, A:tooSlow/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:ttRelationType/1))), show_failure(on_x_fail(A:call(kb_shared, A:ttRelationType/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:singleValuedInArg/2))), show_failure(on_x_fail(A:call(kb_shared, A:singleValuedInArg/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:functorIsMacro/1))), show_failure(on_x_fail(A:call(kb_shared, A:functorIsMacro/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:support_hilog/2))), show_failure(on_x_fail(A:call(kb_shared, A:support_hilog/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:mpred_undo_sys/3))), show_failure(on_x_fail(A:call(kb_shared, A:mpred_undo_sys/3)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:genlPreds/2))), show_failure(on_x_fail(A:call(kb_shared, A:genlPreds/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:alwaysGaf/1))), show_failure(on_x_fail(A:call(kb_shared, A:alwaysGaf/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:rtReformulatorDirectivePredicate/1))), show_failure(on_x_fail(A:call(kb_shared, A:rtReformulatorDirectivePredicate/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:rtAvoidForwardChain/1))), show_failure(on_x_fail(A:call(kb_shared, A:rtAvoidForwardChain/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:pfcControlled/1))), show_failure(on_x_fail(A:call(kb_shared, A:pfcControlled/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:prologOnly/1))), show_failure(on_x_fail(A:call(kb_shared, A:prologOnly/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:quasiQuote/1))), show_failure(on_x_fail(A:call(kb_shared, A:quasiQuote/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:functorDeclares/1))), show_failure(on_x_fail(A:call(kb_shared, A:functorDeclares/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:mtNonAssertable/1))), show_failure(on_x_fail(A:call(kb_shared, A:mtNonAssertable/1)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:do_import_modules/0))), show_failure(on_x_fail(A:call(kb_shared, A:do_import_modules/0)))}]))).
'$pt'(baseKB, mpred_prop(A, B, C, kb_global), '$pt'(baseKB, genlMt(D, A),  (D\=baseKB*->rhs([{nop(dmsg_pretty(D:call(kb_global, D:B/C))), show_failure(on_x_fail(D:call(kb_global, D:B/C)))}])))).
'$pt'(baseKB, mpred_prop(A, B, C, kbi_define), '$pt'(baseKB, genlMt(D, A),  (D\=baseKB*->rhs([{nop(dmsg_pretty(D:call(kbi_define, D:B/C))), show_failure(on_x_fail(D:call(kbi_define, D:B/C)))}])))).
'$pt'(baseKB, genlMt(A, B),  (is_ftNonvar(A), is_ftNonvar(B), B\==baseKB, mtProlog(B)*->rhs([{B\==user, catch(add_import_module(A, B, end), error(_, _), dmsg_pretty(error(add_import_module(A, B, end))))}]))).
'$pt'(baseKB, mtHybrid(A), rhs([{decl_assertable_module(A)}])).
'$pt'(baseKB, predicateConventionMt(A, B),  (arity(A, C)*->rhs([{kb_global(B:A/C)}]))).
'$pt'(baseKB, arity(A, B),  (predicateConventionMt(A, C)*->rhs([{kb_global(C:A/B)}]))).
'$pt'(baseKB, ttTypeType(A), rhs([functorDeclares(A)])).
'$pt'(baseKB, ttRelationType(A), rhs([{decl_rt(A)}, functorDeclares(A)])).
'$pt'(baseKB, functorDeclares(A), rhs([arityMax(A, 1), functorIsMacro(A)])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:compilerDirective/1))), show_failure(on_x_fail(A:call(kb_shared, A:compilerDirective/1)))}]))).
'$pt'(baseKB, compilerDirective(A), rhs([{kb_shared(A/0)}])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:hardCodedExpansion/0))), show_failure(on_x_fail(A:call(kb_shared, A:hardCodedExpansion/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:codeTooSlow/0))), show_failure(on_x_fail(A:call(kb_shared, A:codeTooSlow/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:pfc_checking/0))), show_failure(on_x_fail(A:call(kb_shared, A:pfc_checking/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:pass2/0))), show_failure(on_x_fail(A:call(kb_shared, A:pass2/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:redundantMaybe/0))), show_failure(on_x_fail(A:call(kb_shared, A:redundantMaybe/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:isRedundant/0))), show_failure(on_x_fail(A:call(kb_shared, A:isRedundant/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:isRuntime/0))), show_failure(on_x_fail(A:call(kb_shared, A:isRuntime/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:do_and_undo/2))), show_failure(on_x_fail(A:call(kb_shared, A:do_and_undo/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:tFunction/1))), show_failure(on_x_fail(A:call(kb_shared, A:tFunction/1)))}]))).
'$pt'(baseKB, prologHybrid(A),  (arity(A, B)*->rhs([{kb_shared(A/B)}]))).
'$pt'(baseKB, arity(A, B),  (prologHybrid(A)*->rhs([{kb_shared(A/B)}]))).
'$pt'(baseKB, pfcControlled(A),  (arity(A, B)*->rhs([hybrid_support(A, B)]))).
'$pt'(baseKB, arity(A, B),  (pfcControlled(A)*->rhs([hybrid_support(A, B)]))).
'$pt'(baseKB, pfc_checking, rhs([(mpred_prop(A, B, C, pfcPosTrigger)==>{A:warn_if_static(B, C)})])).
'$pt'(baseKB, pfc_checking, rhs([(mpred_prop(A, B, C, pfcNegTrigger)==>{A:warn_if_static(B, C)})])).
'$pt'(baseKB, pfc_checking, rhs([(mpred_prop(A, B, C, pfcBcTrigger)==>{A:warn_if_static(B, C)})])).
'$pt'(baseKB, mpred_prop(A, B, C, D),  (\+ground(B/C)*->rhs([{trace_or_throw_ex(mpred_prop(A, B, C, D))}]))).
'$pt'(baseKB, mpred_prop(A, B, C, pfcCreates), rhs([{kb_shared(A:B/C)}, {A:warn_if_static(B, C)}])).
'$pt'(baseKB, mpred_prop(A, B, C, pfcControlled), rhs([{kb_shared(A:B/C)}])).
'$pt'(baseKB, mpred_prop(A, B, C, pfcWatches), rhs([{kb_shared(A:B/C)}])).
'$pt'(baseKB, mpred_prop(A, B, C, pfcPosTrigger), rhs([mpred_prop(A, B, C, pfcWatches)])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:pfcSanityA/0))), show_failure(on_x_fail(A:call(kb_shared, A:pfcSanityA/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:ttTypeType/1))), show_failure(on_x_fail(A:call(kb_shared, A:ttTypeType/1)))}]))).
'$pt'(baseKB, mpred_prop(A, B, C, pfcNegTrigger), rhs([mpred_prop(A, B, C, pfcWatches)])).
'$pt'(baseKB, mpred_prop(A, B, C, pfcBcTrigger), rhs([mpred_prop(A, B, C, pfcCreates)])).
'$pt'(baseKB, mpred_prop(A, B, C, pfcLHS), rhs([arity(B, C), functorIsMacro(B), mpred_prop(A, B, C, pfcWatches)])).
'$pt'(baseKB, mpred_prop(A, B, C, pfcRHS), rhs([mpred_prop(A, B, C, pfcCreates)])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:pfcSanityB/0))), show_failure(on_x_fail(A:call(kb_shared, A:pfcSanityB/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:arityMax/2))), show_failure(on_x_fail(A:call(kb_shared, A:arityMax/2)))}]))).
'$pt'(baseKB, mpred_prop(A, B, C, pfcCallCode),  (predicate_is_undefined_fa(B, C)*->rhs([mpred_prop(A, B, C, needsDefined)]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:nondet/0))), show_failure(on_x_fail(A:call(kb_shared, A:nondet/0)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:typeCheckDecl/2))), show_failure(on_x_fail(A:call(kb_shared, A:typeCheckDecl/2)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:warningsAbout/2))), show_failure(on_x_fail(A:call(kb_shared, A:warningsAbout/2)))}]))).
'$pt'(baseKB, warningsAbout(A, B), rhs([{wdmsg_pfc(error(warningsAbout(A, B))), break}])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:'$bt'/2))), show_failure(on_x_fail(A:call(kb_shared, A:'$bt'/2)))}]))).
'$pt'(baseKB, '$bt'(A, _),  (nonvar(A), must(get_bc_clause(A, B))*->rhs([{ignore(kb_shared(A))}, B]))).
'$pt'(baseKB, mpred_prop(A, B, C, D),  (genlPreds(D, E)*->rhs([mpred_prop(A, B, C, E)]))).
'$pt'(baseKB, genlPreds(A, B),  (mpred_prop(C, D, E, A)*->rhs([mpred_prop(C, D, E, B)]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:mpred_do_and_undo_method/2))), show_failure(on_x_fail(A:call(kb_shared, A:mpred_do_and_undo_method/2)))}]))).
'$pt'(baseKB, mpred_undo_sys(A, B, C), rhs([(A==>{B}), mpred_do_and_undo_method(B, C)])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:conflict/1))), show_failure(on_x_fail(A:call(kb_shared, A:conflict/1)))}]))).
'$pt'(baseKB, conflict(A), rhs([{must(with_mpred_trace_exec((resolveConflict(A), \+conflict(A))))}])).
'$pt'(baseKB, A,  (mpred_positive_fact(A)*->rhs([\+ ~A]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:nesc/1))), show_failure(on_x_fail(A:call(kb_shared, A:nesc/1)))}]))).
'$pt'(baseKB, nesc(~A),  (mpred_positive_fact(A)*->rhs([~A,  (A==> \+A)]))).
'$pt'(baseKB, nesc(A),  (mpred_positive_fact(A)*->rhs([A,  (~A==> \+ ~A)]))).
'$pt'(baseKB, nesc(A), rhs([A])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:preventedWhen/2))), show_failure(on_x_fail(A:call(kb_shared, A:preventedWhen/2)))}]))).
'$pt'(baseKB, preventedWhen(A, B), rhs([(A/mpred_positive_fact(A), B==>nesc(~A))])).
'$pt'(baseKB, preventedWhen(A, {B}),  (mpred_positive_fact(A)*->rhs([(~A:-cwc, B)]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:mdefault/1))), show_failure(on_x_fail(A:call(kb_shared, A:mdefault/1)))}]))).
'$pt'(baseKB, mdefault((A<-B)),  (mpred_literal(A)*->rhs([(A<-B, \+ ~A)]))).
'$pt'(baseKB, mdefault((A==>B)),  (nonvar(B)*->rhs([(A==>mdefault(B))]))).
'$pt'(baseKB, mdefault(~A),  (mpred_positive_fact(A)*->rhs([(\+A==> ~A)]))).
'$pt'(baseKB, mdefault(A),  (mpred_positive_fact(A), if_missing_mask(A, B, C)*->rhs([(\+B/(ground(B), C), \+ ~A==>A)]))).
'$pt'(baseKB, mdefault(A),  (mpred_positive_fact(A), if_missing_mask(A, B, C)*->rhs([(B/(ground(B), C, \+B=A)==> \+A)]))).
'$pt'(baseKB, mpred_sv(A, B), rhs([arity(A, B), hybrid_support(A, B), singleValuedInArg(A, B)])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:mpred_sv_shared/2))), show_failure(on_x_fail(A:call(kb_shared, A:mpred_sv_shared/2)))}]))).
'$pt'(baseKB, mpred_sv_shared(A, B), rhs([{kb_shared(A/B)}, mpred_sv(A, B)])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:singleValuedInArgDefault/3))), show_failure(on_x_fail(A:call(kb_shared, A:singleValuedInArgDefault/3)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:prologSingleValued/1))), show_failure(on_x_fail(A:call(kb_shared, A:prologSingleValued/1)))}]))).
'$pt'(baseKB, prologSingleValued(A), '$pt'(baseKB, arity(A, B),  (\+singleValuedInArg(A, _)*->rhs([singleValuedInArg(A, B)])))).
'$pt'(baseKB, singleValuedInArg(A, _), rhs([prologSingleValued(A)])).
'$pt'(baseKB, arity(mpred_sv, A),  (\+singleValuedInArg(mpred_sv, _)*->rhs([singleValuedInArg(mpred_sv, A)]))).
'$pt'(baseKB, arity(singleValuedInArg, A),  (\+singleValuedInArg(singleValuedInArg, _)*->rhs([singleValuedInArg(singleValuedInArg, A)]))).
'$pt'(baseKB, arity(singleValuedInArgDefault, A),  (\+singleValuedInArg(singleValuedInArgDefault, _)*->rhs([singleValuedInArg(singleValuedInArgDefault, A)]))).
'$pt'(baseKB, singleValuedInArgDefault(A, B, C),  (ground(C)*->rhs([singleValuedInArg(A, B)]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:singleValuedInArgAX/3))), show_failure(on_x_fail(A:call(kb_shared, A:singleValuedInArgAX/3)))}]))).
'$pt'(baseKB, singleValuedInArg(A, B),  (arity(A, C)*->rhs([singleValuedInArgAX(A, C, B)]))).
'$pt'(baseKB, arity(A, B),  (singleValuedInArg(A, C)*->rhs([singleValuedInArgAX(A, B, C)]))).
'$pt'(baseKB, singleValuedInArgAX(A, B, C),  (functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)*->rhs([(D, {E\=isMissing, call(dif:dif(F, E)), call_u(G), ground(G)}, G==> \+G, D)]))).
'$pt'(baseKB, mpred_sv(A, B),  (B\=isMissing, call(dif:dif(C, B)), call_u(mpred_sv(A, C)), ground(mpred_sv(A, C))*->'$pt'(baseKB, mpred_sv(A, C), rhs([\+mpred_sv(A, C), mpred_sv(A, B)])))).
'$pt'(baseKB, singleValuedInArg(A, B),  (B\=isMissing, call(dif:dif(C, B)), call_u(singleValuedInArg(A, C)), ground(singleValuedInArg(A, C))*->'$pt'(baseKB, singleValuedInArg(A, C), rhs([\+singleValuedInArg(A, C), singleValuedInArg(A, B)])))).
'$pt'(baseKB, singleValuedInArgDefault(A, B, C),  (C\=isMissing, call(dif:dif(D, C)), call_u(singleValuedInArgDefault(A, B, D)), ground(singleValuedInArgDefault(A, B, D))*->'$pt'(baseKB, singleValuedInArgDefault(A, B, D), rhs([\+singleValuedInArgDefault(A, B, D), singleValuedInArgDefault(A, B, C)])))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:unused/0))), show_failure(on_x_fail(A:call(kb_shared, A:unused/0)))}]))).
'$pt'(baseKB, unused, rhs([(singleValuedInArgAX(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D/ground(D)==>{E\==isMissing, call(dif:dif(F, E)), call_u(G), ground(G), ignore(retract(G))}))])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:singleValuedInArgAX_maybe/3))), show_failure(on_x_fail(A:call(kb_shared, A:singleValuedInArgAX_maybe/3)))}]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:single_override_maybe/2))), show_failure(on_x_fail(A:call(kb_shared, A:single_override_maybe/2)))}]))).
'$pt'(baseKB, unused, rhs([(singleValuedInArgAX_maybe(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D/ground(D)==>{E\==isMissing, call(dif:dif(F, E)), call_u(G), ground(G)}, \+G, D, single_override_maybe(D, G)))])).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:single_override/2))), show_failure(on_x_fail(A:call(kb_shared, A:single_override/2)))}]))).
'$pt'(baseKB, single_override(A, B),  (ignore(retract(B))*->rhs([(\+A==> \+single_override(A, B), {mpred_supported(B)}, B)]))).
'$pt'(baseKB, genlMt(A, baseKB),  (A\=baseKB*->rhs([{nop(dmsg_pretty(A:call(kb_shared, A:bc_q/1))), show_failure(on_x_fail(A:call(kb_shared, A:bc_q/1)))}]))).

:- dynamic'$bt'/2.
:- multifile'$bt'/2.
:- public'$bt'/2.
:- module_transparent'$bt'/2.

'$bt'(bc_q(A), '$pt'(baseKB, bc_p(A), rhs([bc_q(A)]))).

:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

:(baseKB,
  ( clause_u(bc_q(_15940),  (awc, !, mpred_bc_and_with_pfc(bc_q(_15940)))),
    (   compound((awc, !, mpred_bc_and_with_pfc(bc_q(_15940))))
    ->  true
    ;   true
    )
  )).

 /* found 1 for baseKB:(clause_u(bc_q(_14678),_14700),(compound(_14700)->true;true)). 
 */ 
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_15816,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_71132,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',44) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(b))
:- dynamic bc_p/1.

bc_p(a).
bc_p(b).

:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_79570,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  support_fact = mfl4(_62566,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(b) , 
  support_fact = bc_p(b) , 
  support_trig = '$pt'(baseKB,bc_p(b),rhs([bc_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(b))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for bc_q(b):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 bc_p(b) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:44] [0m[36m
    1.2 bc_q(W4)<-bc_p(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:27] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',44) [0m[36m
    1.4 mfl4([ 'N'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',27) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).
bc_q(b).

% Fileinfo: unk: -1

baseKB:(bc_q(Q) <- bc_p(P)).
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:69

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(2),
     	      number_of_rules(1),
     	      last_modified_generation(55847),
     	      defined,
     	      size(408)
     	    ]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:69
baseKB:bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1)).
% Fileinfo: unk: -1

baseKB : '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q2)]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:69
baseKB : '$spft'(baseKB,(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',27),ax).
% Fileinfo: unk: -1
baseKB : '$spft'(baseKB,
	'$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q3)]))),
	(bc_q(Q4) <- bc_p(P5)),
	mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',27)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:69
baseKB : '$spft'(baseKB,
	(bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1))),
	'$bt'(bc_q(Q2),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q4)]))),
	'$pt'(baseKB,
	      '$bt'(bc_q(Q5),'$pt'(baseKB,bc_p(P6),rhs([ bc_q(Q7)]))),
	      (nonvar(bc_q(Q8)),must(get_bc_clause(bc_q(Q9),(bc_q(Q10):-awc,!,mpred_bc_and_with_pfc(bc_q(Q11)))))*->rhs([ 
  { ignore( kb_shared( bc_q(Q12))) }, 
  bc_q(Q13) :- 
    awc , 
    ! , 
    mpred_bc_and_with_pfc( bc_q(Q14))])))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:69
baseKB : '$spft'(baseKB,'$pt'(baseKB,bc_p(b),rhs([ bc_q(b)])),(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc',27)).
success(mpred_undo1_pt_unfwc_2,retract_u('$pt'(baseKB,bc_p(b),rhs([bc_q(b)]))))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_102804)<-bc_p(_102804). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_102804)<-bc_p(_102804). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_105442)<-bc_p(_105442). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_105442)<-bc_p(_105442). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(b). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(b). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.


:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.


% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01a.pfc:69

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(0),
     	      number_of_rules(0),
     	      last_modified_generation(58230),
     	      defined,
     	      size(112)
     	    ]).
 */
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bc_01a.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bc_01b.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_21974)<-bc_p(_21974) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_21974)<-bc_p(_21974) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bc_q,1,pfcRHS),rhs([mpred_prop(baseKB,bc_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc', 19) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bc_q,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  support_fact = bc_q(_1504)<-bc_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_q(Q)) , 
  support_fact = '$bt'(bc_q(_2048),'$pt'(baseKB,bc_p(_2048),rhs([bc_q(_2048)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))), 
                   ( ( nonvar( bc_q(Q)) , 
                       must( get_bc_clause(bc_q(Q),(bc_q(Q2):-awc,!,mpred_bc_and_with_pfc(bc_q(Q3)))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_q(Q))) }, 
                            bc_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_q(Q2)))
:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_109092,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_35372,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(b))
:- dynamic bc_p/1.

bc_p(a).
bc_p(b).

:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_44248,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  support_fact = mfl4(_27174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(b) , 
  support_fact = bc_p(b) , 
  support_trig = '$pt'(baseKB,bc_p(b),rhs([bc_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(b))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for bc_q(b):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 bc_p(b) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:23] [0m[36m
    1.2 bc_q(W4)<-bc_p(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:19] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',23) [0m[36m
    1.4 mfl4([ 'N'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',19) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).
bc_q(b).

% Fileinfo: unk: -1

baseKB:(bc_q(Q) <- bc_p(P)).
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:43

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(2),
     	      number_of_rules(1),
     	      last_modified_generation(55610),
     	      defined,
     	      size(408)
     	    ]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:43
baseKB:bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1)).
% Fileinfo: unk: -1

baseKB : '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q2)]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:43
baseKB : '$spft'(baseKB,(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',19),ax).
% Fileinfo: unk: -1
baseKB : '$spft'(baseKB,
	'$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q3)]))),
	(bc_q(Q4) <- bc_p(P5)),
	mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',19)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:43
baseKB : '$spft'(baseKB,
	(bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1))),
	'$bt'(bc_q(Q2),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q4)]))),
	'$pt'(baseKB,
	      '$bt'(bc_q(Q5),'$pt'(baseKB,bc_p(P6),rhs([ bc_q(Q7)]))),
	      (nonvar(bc_q(Q8)),must(get_bc_clause(bc_q(Q9),(bc_q(Q10):-awc,!,mpred_bc_and_with_pfc(bc_q(Q11)))))*->rhs([ 
  { ignore( kb_shared( bc_q(Q12))) }, 
  bc_q(Q13) :- 
    awc , 
    ! , 
    mpred_bc_and_with_pfc( bc_q(Q14))])))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:43
baseKB : '$spft'(baseKB,'$pt'(baseKB,bc_p(b),rhs([ bc_q(b)])),(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc',19)).
success(mpred_undo1_pt_unfwc_2,retract_u('$pt'(baseKB,bc_p(b),rhs([bc_q(b)]))))
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01b.pfc:43

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(0),
     	      number_of_rules(0),
     	      last_modified_generation(58051),
     	      defined,
     	      size(112)
     	    ]).
 */
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bc_01b.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bc_01c.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_21974)<-bc_p(_21974) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_21974)<-bc_p(_21974) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bc_q,1,pfcRHS),rhs([mpred_prop(baseKB,bc_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc', 19) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bc_q,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  support_fact = bc_q(_1504)<-bc_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_q(Q)) , 
  support_fact = '$bt'(bc_q(_2048),'$pt'(baseKB,bc_p(_2048),rhs([bc_q(_2048)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))), 
                   ( ( nonvar( bc_q(Q)) , 
                       must( get_bc_clause(bc_q(Q),(bc_q(Q2):-awc,!,mpred_bc_and_with_pfc(bc_q(Q3)))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_q(Q))) }, 
                            bc_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_q(Q2)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_21188,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc',21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_76762,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(b))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_80716,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  support_fact = mfl4(_64024,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(b) , 
  support_fact = bc_p(b) , 
  support_trig = '$pt'(baseKB,bc_p(b),rhs([bc_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(b))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for bc_q(b):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 bc_p(b) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc:22] [0m[36m
    1.2 bc_q(W4)<-bc_p(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc:19] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc',22) [0m[36m
    1.4 mfl4([ 'N'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01c.pfc',19) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0msuccess(mpred_undo1_pt_unfwc_2,retract_u('$pt'(baseKB,bc_p(b),rhs([bc_q(b)]))))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_53648):-awc,!,mpred_bc_and_with_pfc(bc_q(_53648)). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for bc_q(_53648):-awc,!,mpred_bc_and_with_pfc(bc_q(_53648)). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bc_01c.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bc_01d.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_01_d_q(_21974)<-bc_01_d_p(_21974) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_01_d_q(_21974)<-bc_01_d_p(_21974) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc', 18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_01_d_q(Q)<-bc_01_d_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc', 18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_01_d_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_01_d_q,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,bc_01_d_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc', 18) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc', 18) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_01_d_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_01_d_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_01_d_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_01_d_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_01_d_q,1,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,bc_01_d_q,1,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_01_d_q(_1330),'$pt'(baseKB,bc_01_d_p(_1330),rhs([bc_01_d_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_01_d_q(_1330),'$pt'(baseKB,bc_01_d_p(_1330),rhs([bc_01_d_q(_1330)]))) , 
  support_fact = bc_01_d_q(_1504)<-bc_01_d_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc', 18) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_01_d_q(Q),'$pt'(baseKB,bc_01_d_p(P),rhs([bc_01_d_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_01_d_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_01_d_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_01_d_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_01_d_q(Q)) , 
  support_fact = '$bt'(bc_01_d_q(_2048),'$pt'(baseKB,bc_01_d_p(_2048),rhs([bc_01_d_q(_2048)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_01_d_q(Q),'$pt'(baseKB,bc_01_d_p(P),rhs([bc_01_d_q(Q3)]))), 
                   ( ( nonvar( bc_01_d_q(Q)) , 
                       must( get_bc_clause( bc_01_d_q(Q), 
                               bc_01_d_q(Q2) :- 
                                 awc , 
                                 ! , 
                                 mpred_bc_and_with_pfc( bc_01_d_q(Q3))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_01_d_q(Q))) }, 
                            bc_01_d_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_01_d_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_01_d_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_01_d_q(Q2)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_01_d_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_01_d_p(a) , 
  support_fact = mfl4(_56988,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_01_d_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_01_d_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_01_d_p(b) , 
  support_fact = mfl4(_112034,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_01_d_p(b))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_1660,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_01_d_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_01_d_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_01_d_p,1,kb_shared) , 
  support_fact = mfl4(_103314,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_01_d_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_01_d_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_01_d_q(b) , 
  support_fact = bc_01_d_p(b) , 
  support_trig = '$pt'(baseKB,bc_01_d_p(b),rhs([bc_01_d_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_01_d_q(b))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for bc_01_d_q(b):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 bc_01_d_p(b) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc:21] [0m[36m
    1.2 bc_01_d_q(W4)<-bc_01_d_p(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc:18] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',21) [0m[36m
    1.4 mfl4([ 'N'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  identical is assertion_status , 
  post1 = bc_01_d_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_01_d_p(a) , 
  support_fact = mfl4(_79828,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',37) , 
  support_trig=ax , 
  exact is support_status

User added facts in [baseKB]: 280
  nondet
  pfcSanityA
  alwaysGaf(alwaysGaf)
  alwaysGaf(pfcLHS)
  alwaysGaf(pfcRHS)
  bc_01_d_p(a)
  bc_01_d_p(b)
  compilerDirective(codeTooSlow)
  compilerDirective(hardCodedExpansion)
  compilerDirective(isRedundant)
  compilerDirective(isRuntime)
  compilerDirective(pass2)
  compilerDirective(pfc_checking)
  compilerDirective(redundantMaybe)
  compilerDirective(tooSlow)
  functorDeclares(compilerDirective)
  functorIsMacro(functorIsMacro)
  meta_argtypes(mdefault(ftAssertable))
  meta_argtypes(mpred_undo_sys(ftAssertion,ftCallable,ftCallable))
  meta_argtypes(singleValuedInArgDefault(prologSingleValued,ftInt,ftTerm))
  mtHybrid(baseKB)
  pfcControlled(mpred_undo_sys)
  predicateTriggerType(kb_global)
  predicateTriggerType(kb_local)
  predicateTriggerType(kb_shared)
  predicateTriggerType(kbi_define)
  prologBuiltin(var)
  prologDynamic(term_expansion)
  prologHybrid(singleValuedInArgDefault)
  prologHybrid(warningsAbout)
  quasiQuote(xQuoteFn)
  rtArgsVerbatum('$VAR')
  rtArgsVerbatum('$spft')
  rtArgsVerbatum(<-)
  rtArgsVerbatum(=..)
  rtArgsVerbatum('NART')
  rtArgsVerbatum(added)
  rtArgsVerbatum(ain)
  rtArgsVerbatum(call)
  rtArgsVerbatum(call_u)
  rtArgsVerbatum(clause_asserted_i)
  rtArgsVerbatum(listing)
  rtArgsVerbatum(loop_check_term)
  rtArgsVerbatum(loop_check_term_key)
  rtArgsVerbatum(member)
  rtArgsVerbatum(mpred_action)
  rtArgsVerbatum(mpred_prop)
  rtArgsVerbatum(mpred_rem)
  rtArgsVerbatum(ruleRewrite)
  rtArgsVerbatum(second_order)
  rtArgsVerbatum(warningsAbout)
  rtArgsVerbatum(with_current_why)
  rtArgsVerbatum(xQuoteFn)
  rtNotForUnboundPredicates(call)
  rtNotForUnboundPredicates(member)
  rtNotForUnboundPredicates(t)
  rtNotForUnboundPredicates(~)
  ttModuleType(tSourceCode)
  ttModuleType(tSourceData)
  ttRelationType(pfcControlled)
  ttRelationType(pfcMustFC)
  ttRelationType(predCanHaveSingletons)
  ttRelationType(prologBuiltin)
  ttRelationType(prologDynamic)
  ttRelationType(prologEquality)
  ttRelationType(prologHybrid)
  ttRelationType(prologIsFlag)
  ttRelationType(prologKIF)
  ttRelationType(prologListValued)
  ttRelationType(prologMultiValued)
  ttRelationType(prologNegByFailure)
  ttRelationType(prologOrdered)
  ttRelationType(prologPTTP)
  ttRelationType(prologSideEffects)
  ttRelationType(prologSingleValued)
  ttRelationType(rtArgsVerbatum)
  ttRelationType(rtAvoidForwardChain)
  ttRelationType(rtNotForUnboundPredicates)
  ttRelationType(rtSymmetricBinaryPredicate)
  ttRelationType(singleValuedHybrid)
  ttRelationType(tFunction)
  ttTypeType(ttModuleType)
  ttTypeType(ttRelationType)
  ttTypeType(ttTypeType)
  ~singleValuedInArg(arity,_2496)
  ~singleValuedInArg(support_hilog,_2486)
  arity(alwaysGaf,1)
  arity(arity,2)
  arity(comment,2)
  arity(do_and_undo,2)
  arity(functorIsMacro,1)
  arity(mpred_sv,2)
  arity(quasiQuote,1)
  arity(rtArgsVerbatum,1)
  arity(singleValuedInArgDefault,3)
  comment(codeTooSlow,"A faster more incomplete version is filling in for it")
  comment(hardCodedExpansion,"Is Already Implemented From Code")
  comment(isRedundant,"Redundant")
  comment(isRuntime,"Only use rule/fact at runtime")
  comment(pass2,"Probably not needed at first")
  comment(pfc_checking,"Checks for common Pfc Errors")
  comment(redundantMaybe,"Probably redundant")
  comment(tSourceCode,"Source code files containing callable features")
  comment(tSourceData,"Source data files containing world state information")
  comment(tooSlow,"Slow and Probably not needed at first")
  do_and_undo(mpred_post_exactly,mpred_remove_exactly)
  genlPreds(pfcControlled,prologHybrid)
  genlPreds(pfcMustFC,pfcControlled)
  genlPreds(pfcRHS,pfcControlled)
  genlPreds(prologSideEffects,rtNotForUnboundPredicates)
  mpred_sv_shared(mpred_sv,2)
  mpred_sv_shared(singleValuedInArg,2)
  mpred_sv_shared(singleValuedInArgDefault,3)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',never)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',never)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',never)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_module_inheritance.pfc.pl',never)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',never)
  mudToCyc(tSourceCode,tComputerCode)
  mudToCyc(tSourceData,iboPropositionalInformationThing)
  mudToCyc(ttModuleType,'MicrotheoryType')
  never_assert_u(baseKB:mtProlog(baseKB),must(mtHybrid(baseKB)))
  predicateConventionMt(genlMt,baseKB)
  predicateConventionMt(mtHybrid,baseKB)
  predicateConventionMt(mtProlog,baseKB)
  singleValuedInArg(singleValuedInArgDefault,3)
  typeCheckDecl(pfcControlled(_3022),callable(_3022))
  typeCheckDecl(prologHybrid(_3036),callable(_3036))
  typeGenls(ttModuleType,tMicrotheory)
  mpred_prop(baseKB,'$bt',2,pfcLHS)
  mpred_prop(baseKB,'$bt',2,pfcPosTrigger)
  mpred_prop(baseKB,=,2,pfcCallCode)
  mpred_prop(baseKB,==,2,pfcCallCode)
  mpred_prop(baseKB,\=,2,pfcCallCode)
  mpred_prop(baseKB,\==,2,pfcCallCode)
  mpred_prop(baseKB,alwaysGaf,1,kb_shared)
  mpred_prop(baseKB,arg,3,pfcCallCode)
  mpred_prop(baseKB,arityMax,2,pfcRHS)
  mpred_prop(baseKB,bc_01_d_p,1,kb_shared)
  mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger)
  mpred_prop(baseKB,bc_01_d_q,1,pfcRHS)
  mpred_prop(baseKB,break,0,pfcCallCode)
  mpred_prop(baseKB,call,1,pfcCallCode)
  mpred_prop(baseKB,call_u,1,pfcCallCode)
  mpred_prop(baseKB,catch,3,pfcCallCode)
  mpred_prop(baseKB,col_as_unary,1,kb_shared)
  mpred_prop(baseKB,comment,2,kb_shared)
  mpred_prop(baseKB,compilerDirective,1,kb_shared)
  mpred_prop(baseKB,compilerDirective,1,pfcLHS)
  mpred_prop(baseKB,compilerDirective,1,pfcPosTrigger)
  mpred_prop(baseKB,conflict,1,kb_shared)
  mpred_prop(baseKB,conflict,1,pfcLHS)
  mpred_prop(baseKB,conflict,1,pfcPosTrigger)
  mpred_prop(baseKB,decl_assertable_module,1,pfcCallCode)
  mpred_prop(baseKB,decl_rt,1,pfcCallCode)
  mpred_prop(baseKB,dmsg_pretty,1,pfcCallCode)
  mpred_prop(baseKB,do_and_undo,2,kb_shared)
  mpred_prop(baseKB,do_import_modules,0,kb_shared)
  mpred_prop(baseKB,doall,1,pfcCallCode)
  mpred_prop(baseKB,ensure_abox,1,pfcCallCode)
  mpred_prop(baseKB,feature_setting,2,kb_shared)
  mpred_prop(baseKB,functor,3,pfcCallCode)
  mpred_prop(baseKB,functorDeclares,1,kb_shared)
  mpred_prop(baseKB,functorDeclares,1,pfcLHS)
  mpred_prop(baseKB,functorDeclares,1,pfcPosTrigger)
  mpred_prop(baseKB,functorDeclares,1,pfcRHS)
  mpred_prop(baseKB,functorIsMacro,1,kb_shared)
  mpred_prop(baseKB,functorIsMacro,1,pfcRHS)
  mpred_prop(baseKB,genlMt,2,pfcLHS)
  mpred_prop(baseKB,genlMt,2,pfcPosTrigger)
  mpred_prop(baseKB,genlMt,2,pfcRHS)
  mpred_prop(baseKB,genlPreds,2,kb_shared)
  mpred_prop(baseKB,genlPreds,2,pfcCallCode)
  mpred_prop(baseKB,genlPreds,2,pfcLHS)
  mpred_prop(baseKB,genlPreds,2,pfcPosTrigger)
  mpred_prop(baseKB,ground,1,pfcCallCode)
  mpred_prop(baseKB,hybrid_support,2,kb_shared)
  mpred_prop(baseKB,hybrid_support,2,pfcRHS)
  mpred_prop(baseKB,if_missing_mask,3,pfcCallCode)
  mpred_prop(baseKB,ignore,1,pfcCallCode)
  mpred_prop(baseKB,is_ftNonvar,1,pfcCallCode)
  mpred_prop(baseKB,kb_global,1,pfcCallCode)
  mpred_prop(baseKB,kb_shared,1,pfcCallCode)
  mpred_prop(baseKB,mdefault,1,pfcLHS)
  mpred_prop(baseKB,mdefault,1,pfcPosTrigger)
  mpred_prop(baseKB,mdefault,1,pfcRHS)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcRHS)
  mpred_prop(baseKB,mpred_literal,1,pfcCallCode)
  mpred_prop(baseKB,mpred_positive_fact,1,pfcCallCode)
  mpred_prop(baseKB,mpred_prop,4,pfcCallCode)
  mpred_prop(baseKB,mpred_prop,4,pfcLHS)
  mpred_prop(baseKB,mpred_prop,4,pfcPosTrigger)
  mpred_prop(baseKB,mpred_prop,4,pfcRHS)
  mpred_prop(baseKB,mpred_supported,1,pfcCallCode)
  mpred_prop(baseKB,mpred_sv,2,pfcLHS)
  mpred_prop(baseKB,mpred_sv,2,pfcPosTrigger)
  mpred_prop(baseKB,mpred_sv,2,pfcRHS)
  mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS)
  mpred_prop(baseKB,mpred_sv_shared,2,pfcPosTrigger)
  mpred_prop(baseKB,mpred_undo_sys,3,kb_shared)
  mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS)
  mpred_prop(baseKB,mpred_undo_sys,3,pfcPosTrigger)
  mpred_prop(baseKB,mtExact,1,kb_shared)
  mpred_prop(baseKB,mtHybrid,1,pfcLHS)
  mpred_prop(baseKB,mtHybrid,1,pfcPosTrigger)
  mpred_prop(baseKB,mtNonAssertable,1,kb_shared)
  mpred_prop(baseKB,mtProlog,1,pfcCallCode)
  mpred_prop(baseKB,must,1,pfcCallCode)
  mpred_prop(baseKB,nesc,1,pfcLHS)
  mpred_prop(baseKB,nesc,1,pfcPosTrigger)
  mpred_prop(baseKB,nesc,1,pfcRHS)
  mpred_prop(baseKB,nondet,0,kb_shared)
  mpred_prop(baseKB,nonvar,1,pfcCallCode)
  mpred_prop(baseKB,nop,1,pfcCallCode)
  mpred_prop(baseKB,pfcControlled,1,kb_shared)
  mpred_prop(baseKB,pfcControlled,1,pfcCallCode)
  mpred_prop(baseKB,pfcControlled,1,pfcLHS)
  mpred_prop(baseKB,pfcControlled,1,pfcPosTrigger)
  mpred_prop(baseKB,pfcSanityA,0,pfcLHS)
  mpred_prop(baseKB,pfcSanityA,0,pfcPosTrigger)
  mpred_prop(baseKB,pfcSanityB,0,pfcRHS)
  mpred_prop(baseKB,pfc_checking,0,pfcLHS)
  mpred_prop(baseKB,pfc_checking,0,pfcPosTrigger)
  mpred_prop(baseKB,predicateConventionMt,2,kb_shared)
  mpred_prop(baseKB,predicateConventionMt,2,pfcCallCode)
  mpred_prop(baseKB,predicateConventionMt,2,pfcLHS)
  mpred_prop(baseKB,predicateConventionMt,2,pfcPosTrigger)
  mpred_prop(baseKB,predicateTriggerType,1,pfcLHS)
  mpred_prop(baseKB,predicateTriggerType,1,pfcPosTrigger)
  mpred_prop(baseKB,predicate_is_undefined_fa,2,pfcCallCode)
  mpred_prop(baseKB,preventedWhen,2,pfcLHS)
  mpred_prop(baseKB,preventedWhen,2,pfcPosTrigger)
  mpred_prop(baseKB,prologHybrid,1,pfcCallCode)
  mpred_prop(baseKB,prologHybrid,1,pfcLHS)
  mpred_prop(baseKB,prologHybrid,1,pfcPosTrigger)
  mpred_prop(baseKB,prologOnly,1,kb_shared)
  mpred_prop(baseKB,prologSingleValued,1,pfcLHS)
  mpred_prop(baseKB,prologSingleValued,1,pfcPosTrigger)
  mpred_prop(baseKB,prologSingleValued,1,pfcRHS)
  mpred_prop(baseKB,quasiQuote,1,kb_shared)
  mpred_prop(baseKB,replace_arg,4,pfcCallCode)
  mpred_prop(baseKB,rtAvoidForwardChain,1,kb_shared)
  mpred_prop(baseKB,rtReformulatorDirectivePredicate,1,kb_shared)
  mpred_prop(baseKB,show_failure,1,pfcCallCode)
  mpred_prop(baseKB,singleValuedInArg,2,kb_shared)
  mpred_prop(baseKB,singleValuedInArg,2,pfcCallCode)
  mpred_prop(baseKB,singleValuedInArg,2,pfcLHS)
  mpred_prop(baseKB,singleValuedInArg,2,pfcPosTrigger)
  mpred_prop(baseKB,singleValuedInArg,2,pfcRHS)
  mpred_prop(baseKB,singleValuedInArgAX,3,kb_shared)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcPosTrigger)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcRHS)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcRHS)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcPosTrigger)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcRHS)
  mpred_prop(baseKB,single_override,2,pfcLHS)
  mpred_prop(baseKB,single_override,2,pfcPosTrigger)
  mpred_prop(baseKB,single_override,2,pfcRHS)
  mpred_prop(baseKB,single_override_maybe,2,pfcRHS)
  mpred_prop(baseKB,startup_option,2,kb_shared)
  mpred_prop(baseKB,support_hilog,2,kb_shared)
  mpred_prop(baseKB,tFunction,1,kb_shared)
  mpred_prop(baseKB,tooSlow,0,kb_shared)
  mpred_prop(baseKB,trace_or_throw_ex,1,pfcCallCode)
  mpred_prop(baseKB,true,0,pfcCallCode)
  mpred_prop(baseKB,ttRelationType,1,kb_shared)
  mpred_prop(baseKB,ttRelationType,1,pfcLHS)
  mpred_prop(baseKB,ttRelationType,1,pfcPosTrigger)
  mpred_prop(baseKB,ttTypeType,1,pfcLHS)
  mpred_prop(baseKB,ttTypeType,1,pfcPosTrigger)
  mpred_prop(baseKB,typeCheckDecl,2,kb_shared)
  mpred_prop(baseKB,unused,0,pfcLHS)
  mpred_prop(baseKB,unused,0,pfcPosTrigger)
  mpred_prop(baseKB,warn_if_static,2,pfcCallCode)
  mpred_prop(baseKB,warningsAbout,2,kb_shared)
  mpred_prop(baseKB,warningsAbout,2,pfcLHS)
  mpred_prop(baseKB,warningsAbout,2,pfcPosTrigger)
  mpred_prop(baseKB,wdmsg_pfc,1,pfcCallCode)

System added facts in [baseKB]: 261
  pfcSanityB
  bc_01_d_q(b)
  functorDeclares(pfcControlled)
  functorDeclares(pfcMustFC)
  functorDeclares(predCanHaveSingletons)
  functorDeclares(prologBuiltin)
  functorDeclares(prologDynamic)
  functorDeclares(prologEquality)
  functorDeclares(prologHybrid)
  functorDeclares(prologIsFlag)
  functorDeclares(prologKIF)
  functorDeclares(prologListValued)
  functorDeclares(prologMultiValued)
  functorDeclares(prologNegByFailure)
  functorDeclares(prologOrdered)
  functorDeclares(prologPTTP)
  functorDeclares(prologSideEffects)
  functorDeclares(prologSingleValued)
  functorDeclares(rtArgsVerbatum)
  functorDeclares(rtAvoidForwardChain)
  functorDeclares(rtNotForUnboundPredicates)
  functorDeclares(rtSymmetricBinaryPredicate)
  functorDeclares(singleValuedHybrid)
  functorDeclares(tFunction)
  functorDeclares(ttModuleType)
  functorDeclares(ttRelationType)
  functorDeclares(ttTypeType)
  functorIsMacro('$bt')
  functorIsMacro(compilerDirective)
  functorIsMacro(conflict)
  functorIsMacro(functorDeclares)
  functorIsMacro(genlMt)
  functorIsMacro(genlPreds)
  functorIsMacro(mdefault)
  functorIsMacro(mpred_prop)
  functorIsMacro(mpred_sv)
  functorIsMacro(mpred_sv_shared)
  functorIsMacro(mpred_undo_sys)
  functorIsMacro(mtHybrid)
  functorIsMacro(nesc)
  functorIsMacro(pfcControlled)
  functorIsMacro(pfcMustFC)
  functorIsMacro(pfcSanityA)
  functorIsMacro(pfc_checking)
  functorIsMacro(predCanHaveSingletons)
  functorIsMacro(predicateConventionMt)
  functorIsMacro(predicateTriggerType)
  functorIsMacro(preventedWhen)
  functorIsMacro(prologBuiltin)
  functorIsMacro(prologDynamic)
  functorIsMacro(prologEquality)
  functorIsMacro(prologHybrid)
  functorIsMacro(prologIsFlag)
  functorIsMacro(prologKIF)
  functorIsMacro(prologListValued)
  functorIsMacro(prologMultiValued)
  functorIsMacro(prologNegByFailure)
  functorIsMacro(prologOrdered)
  functorIsMacro(prologPTTP)
  functorIsMacro(prologSideEffects)
  functorIsMacro(prologSingleValued)
  functorIsMacro(rtArgsVerbatum)
  functorIsMacro(rtAvoidForwardChain)
  functorIsMacro(rtNotForUnboundPredicates)
  functorIsMacro(rtSymmetricBinaryPredicate)
  functorIsMacro(singleValuedHybrid)
  functorIsMacro(singleValuedInArg)
  functorIsMacro(singleValuedInArgAX)
  functorIsMacro(singleValuedInArgDefault)
  functorIsMacro(single_override)
  functorIsMacro(tFunction)
  functorIsMacro(ttModuleType)
  functorIsMacro(ttRelationType)
  functorIsMacro(ttTypeType)
  functorIsMacro(unused)
  functorIsMacro(warningsAbout)
  prologSingleValued(mpred_sv)
  prologSingleValued(singleValuedInArg)
  prologSingleValued(singleValuedInArgDefault)
  arity('$bt',2)
  arity(compilerDirective,1)
  arity(conflict,1)
  arity(functorDeclares,1)
  arity(genlMt,2)
  arity(genlPreds,2)
  arity(mdefault,1)
  arity(member,2)
  arity(mpred_prop,4)
  arity(mpred_sv_shared,2)
  arity(mpred_undo_sys,3)
  arity(mtHybrid,1)
  arity(nesc,1)
  arity(pfcControlled,1)
  arity(pfcSanityA,0)
  arity(pfc_checking,0)
  arity(predicateConventionMt,2)
  arity(predicateTriggerType,1)
  arity(preventedWhen,2)
  arity(prologHybrid,1)
  arity(prologSingleValued,1)
  arity(singleValuedInArg,2)
  arity(singleValuedInArgAX,3)
  arity(single_override,2)
  arity(term_expansion,2)
  arity(ttRelationType,1)
  arity(ttTypeType,1)
  arity(unused,0)
  arity(var,1)
  arity(warningsAbout,2)
  arityMax(compilerDirective,1)
  arityMax(pfcControlled,1)
  arityMax(pfcMustFC,1)
  arityMax(predCanHaveSingletons,1)
  arityMax(prologBuiltin,1)
  arityMax(prologDynamic,1)
  arityMax(prologEquality,1)
  arityMax(prologHybrid,1)
  arityMax(prologIsFlag,1)
  arityMax(prologKIF,1)
  arityMax(prologListValued,1)
  arityMax(prologMultiValued,1)
  arityMax(prologNegByFailure,1)
  arityMax(prologOrdered,1)
  arityMax(prologPTTP,1)
  arityMax(prologSideEffects,1)
  arityMax(prologSingleValued,1)
  arityMax(rtArgsVerbatum,1)
  arityMax(rtAvoidForwardChain,1)
  arityMax(rtNotForUnboundPredicates,1)
  arityMax(rtSymmetricBinaryPredicate,1)
  arityMax(singleValuedHybrid,1)
  arityMax(tFunction,1)
  arityMax(ttModuleType,1)
  arityMax(ttRelationType,1)
  arityMax(ttTypeType,1)
  hybrid_support(mpred_sv,2)
  hybrid_support(mpred_undo_sys,3)
  hybrid_support(nesc,1)
  hybrid_support(singleValuedInArg,2)
  hybrid_support(singleValuedInArgAX,3)
  hybrid_support(singleValuedInArgDefault,3)
  hybrid_support(single_override,2)
  mpred_sv(mpred_sv,2)
  mpred_sv(singleValuedInArg,2)
  mpred_sv(singleValuedInArgDefault,3)
  singleValuedInArg(mpred_sv,2)
  singleValuedInArg(singleValuedInArg,2)
  singleValuedInArgAX(mpred_sv,2,2)
  singleValuedInArgAX(singleValuedInArg,2,2)
  singleValuedInArgAX(singleValuedInArgDefault,3,3)
  mpred_prop(baseKB,'$bt',2,kb_shared)
  mpred_prop(baseKB,'$bt',2,pfcWatches)
  mpred_prop(baseKB,arityMax,2,kb_shared)
  mpred_prop(baseKB,arityMax,2,pfcControlled)
  mpred_prop(baseKB,arityMax,2,pfcCreates)
  mpred_prop(baseKB,arityMax,2,prologHybrid)
  mpred_prop(baseKB,bc_01_d_p,1,pfcWatches)
  mpred_prop(baseKB,bc_01_d_q,1,kb_shared)
  mpred_prop(baseKB,bc_01_d_q,1,pfcControlled)
  mpred_prop(baseKB,bc_01_d_q,1,pfcCreates)
  mpred_prop(baseKB,bc_01_d_q,1,prologHybrid)
  mpred_prop(baseKB,codeTooSlow,0,kb_shared)
  mpred_prop(baseKB,compilerDirective,1,pfcWatches)
  mpred_prop(baseKB,conflict,1,pfcWatches)
  mpred_prop(baseKB,functorDeclares,1,pfcControlled)
  mpred_prop(baseKB,functorDeclares,1,pfcCreates)
  mpred_prop(baseKB,functorDeclares,1,pfcWatches)
  mpred_prop(baseKB,functorDeclares,1,prologHybrid)
  mpred_prop(baseKB,functorIsMacro,1,pfcControlled)
  mpred_prop(baseKB,functorIsMacro,1,pfcCreates)
  mpred_prop(baseKB,functorIsMacro,1,prologHybrid)
  mpred_prop(baseKB,genlMt,2,pfcControlled)
  mpred_prop(baseKB,genlMt,2,pfcCreates)
  mpred_prop(baseKB,genlMt,2,pfcWatches)
  mpred_prop(baseKB,genlMt,2,prologHybrid)
  mpred_prop(baseKB,genlPreds,2,pfcWatches)
  mpred_prop(baseKB,hardCodedExpansion,0,kb_shared)
  mpred_prop(baseKB,hybrid_support,2,pfcControlled)
  mpred_prop(baseKB,hybrid_support,2,pfcCreates)
  mpred_prop(baseKB,hybrid_support,2,prologHybrid)
  mpred_prop(baseKB,isRedundant,0,kb_shared)
  mpred_prop(baseKB,isRuntime,0,kb_shared)
  mpred_prop(baseKB,mdefault,1,kb_shared)
  mpred_prop(baseKB,mdefault,1,pfcControlled)
  mpred_prop(baseKB,mdefault,1,pfcCreates)
  mpred_prop(baseKB,mdefault,1,pfcWatches)
  mpred_prop(baseKB,mdefault,1,prologHybrid)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,kb_shared)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcControlled)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcCreates)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,prologHybrid)
  mpred_prop(baseKB,mpred_prop,4,pfcControlled)
  mpred_prop(baseKB,mpred_prop,4,pfcCreates)
  mpred_prop(baseKB,mpred_prop,4,pfcWatches)
  mpred_prop(baseKB,mpred_prop,4,prologHybrid)
  mpred_prop(baseKB,mpred_sv,2,pfcControlled)
  mpred_prop(baseKB,mpred_sv,2,pfcCreates)
  mpred_prop(baseKB,mpred_sv,2,pfcWatches)
  mpred_prop(baseKB,mpred_sv,2,prologHybrid)
  mpred_prop(baseKB,mpred_sv_shared,2,kb_shared)
  mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)
  mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)
  mpred_prop(baseKB,mtHybrid,1,pfcWatches)
  mpred_prop(baseKB,nesc,1,kb_shared)
  mpred_prop(baseKB,nesc,1,pfcControlled)
  mpred_prop(baseKB,nesc,1,pfcCreates)
  mpred_prop(baseKB,nesc,1,pfcWatches)
  mpred_prop(baseKB,nesc,1,prologHybrid)
  mpred_prop(baseKB,pass2,0,kb_shared)
  mpred_prop(baseKB,pfcControlled,1,pfcWatches)
  mpred_prop(baseKB,pfcSanityA,0,kb_shared)
  mpred_prop(baseKB,pfcSanityA,0,pfcWatches)
  mpred_prop(baseKB,pfcSanityB,0,kb_shared)
  mpred_prop(baseKB,pfcSanityB,0,pfcControlled)
  mpred_prop(baseKB,pfcSanityB,0,pfcCreates)
  mpred_prop(baseKB,pfcSanityB,0,prologHybrid)
  mpred_prop(baseKB,pfc_checking,0,kb_shared)
  mpred_prop(baseKB,pfc_checking,0,pfcWatches)
  mpred_prop(baseKB,predicateConventionMt,2,pfcWatches)
  mpred_prop(baseKB,predicateTriggerType,1,pfcWatches)
  mpred_prop(baseKB,preventedWhen,2,kb_shared)
  mpred_prop(baseKB,preventedWhen,2,pfcWatches)
  mpred_prop(baseKB,prologHybrid,1,pfcWatches)
  mpred_prop(baseKB,prologSingleValued,1,kb_shared)
  mpred_prop(baseKB,prologSingleValued,1,pfcControlled)
  mpred_prop(baseKB,prologSingleValued,1,pfcCreates)
  mpred_prop(baseKB,prologSingleValued,1,pfcWatches)
  mpred_prop(baseKB,prologSingleValued,1,prologHybrid)
  mpred_prop(baseKB,redundantMaybe,0,kb_shared)
  mpred_prop(baseKB,singleValuedInArg,2,pfcControlled)
  mpred_prop(baseKB,singleValuedInArg,2,pfcCreates)
  mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)
  mpred_prop(baseKB,singleValuedInArg,2,prologHybrid)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcControlled)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcCreates)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)
  mpred_prop(baseKB,singleValuedInArgAX,3,prologHybrid)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,kb_shared)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcControlled)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcCreates)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,prologHybrid)
  mpred_prop(baseKB,singleValuedInArgDefault,3,kb_shared)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcControlled)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcCreates)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)
  mpred_prop(baseKB,singleValuedInArgDefault,3,prologHybrid)
  mpred_prop(baseKB,single_override,2,kb_shared)
  mpred_prop(baseKB,single_override,2,pfcControlled)
  mpred_prop(baseKB,single_override,2,pfcCreates)
  mpred_prop(baseKB,single_override,2,pfcWatches)
  mpred_prop(baseKB,single_override,2,prologHybrid)
  mpred_prop(baseKB,single_override_maybe,2,kb_shared)
  mpred_prop(baseKB,single_override_maybe,2,pfcControlled)
  mpred_prop(baseKB,single_override_maybe,2,pfcCreates)
  mpred_prop(baseKB,single_override_maybe,2,prologHybrid)
  mpred_prop(baseKB,ttRelationType,1,pfcWatches)
  mpred_prop(baseKB,ttTypeType,1,kb_shared)
  mpred_prop(baseKB,ttTypeType,1,pfcWatches)
  mpred_prop(baseKB,unused,0,kb_shared)
  mpred_prop(baseKB,unused,0,pfcWatches)
  mpred_prop(baseKB,warningsAbout,2,pfcWatches)

Forward Rules (60) in [baseKB]...
  pfcSanityA==>pfcSanityB
  mtHybrid(_44948)/(_44948\=baseKB)==>genlMt(_44948,baseKB),{ensure_abox(_44948),(_44948==user->dmsg_pretty(warn(mtHybrid(_44948)));true)}
  genlMt(_44874,_44876)/(_44874\=baseKB)==>{doall((predicate_m_f_a_decl(_44876,_44902,_44904,_44906),ain(baseKB:mpred_prop(_44876,_44902,_44904,_44906))))}
  predicateTriggerType(_44738)==>(mpred_prop(_44754,_44756,_44758,_44738),genlMt(_44770,_44754)/(_44770\=baseKB)==>{nop(dmsg_pretty(_44770:call(_44738,_44770:_44756/_44758))),show_failure(on_x_fail(_44770:call(_44738,_44770:_44756/_44758)))})
  mpred_prop(_44624,_44626,_44628,kb_local),genlMt(_44640,_44624)/(_44640\=baseKB)==>{nop(dmsg_pretty(_44640:call(kb_local,_44640:_44626/_44628))),show_failure(on_x_fail(_44640:call(kb_local,_44640:_44626/_44628)))}
  mpred_prop(_44504,_44506,_44508,kb_shared),genlMt(_44520,_44504)/(_44520\=baseKB)==>{nop(dmsg_pretty(_44520:call(kb_shared,_44520:_44506/_44508))),show_failure(on_x_fail(_44520:call(kb_shared,_44520:_44506/_44508)))}
  mpred_prop(_44384,_44386,_44388,kb_global),genlMt(_44400,_44384)/(_44400\=baseKB)==>{nop(dmsg_pretty(_44400:call(kb_global,_44400:_44386/_44388))),show_failure(on_x_fail(_44400:call(kb_global,_44400:_44386/_44388)))}
  mpred_prop(_44264,_44266,_44268,kbi_define),genlMt(_44280,_44264)/(_44280\=baseKB)==>{nop(dmsg_pretty(_44280:call(kbi_define,_44280:_44266/_44268))),show_failure(on_x_fail(_44280:call(kbi_define,_44280:_44266/_44268)))}
  genlMt(_44150,_44152)/(is_ftNonvar(_44150),is_ftNonvar(_44152),_44152\==baseKB,mtProlog(_44152))==>{_44152\==user,catch(add_import_module(_44150,_44152,end),error(_44224,_44226),dmsg_pretty(error(add_import_module(_44150,_44152,end))))}
  mtHybrid(_44120)==>{decl_assertable_module(_44120)}
  predicateConventionMt(_44076,_44078),arity(_44076,_44084)==>{kb_global(_44078:_44076/_44084)}
  ttTypeType(_44050)==>functorDeclares(_44050)
  ttRelationType(_44016)==>{decl_rt(_44016)},functorDeclares(_44016)
  functorDeclares(_43984)==>arityMax(_43984,1),functorIsMacro(_43984)
  compilerDirective(_43954)==>{kb_shared(_43954/0)}
  prologHybrid(_43918),arity(_43918,_43924)==>{kb_shared(_43918/_43924)}
  pfcControlled(_43884),arity(_43884,_43890)==>hybrid_support(_43884,_43890)
  pfc_checking==>(mpred_prop(_43840,_43842,_43844,pfcPosTrigger)==>{_43840:warn_if_static(_43842,_43844)})
  pfc_checking==>(mpred_prop(_43796,_43798,_43800,pfcNegTrigger)==>{_43796:warn_if_static(_43798,_43800)})
  pfc_checking==>(mpred_prop(_43752,_43754,_43756,pfcBcTrigger)==>{_43752:warn_if_static(_43754,_43756)})
  mpred_prop(_43692,_43694,_43696,_43698)/(\+ground(_43694/_43696))==>{trace_or_throw_ex(mpred_prop(_43692,_43694,_43696,_43698))}
  mpred_prop(_43622,_43624,_43626,pfcCreates)==>{kb_shared(_43622:_43624/_43626)},{_43622:warn_if_static(_43624,_43626)}
  mpred_prop(_43580,_43582,_43584,pfcControlled)==>{kb_shared(_43580:_43582/_43584)}
  mpred_prop(_43538,_43540,_43542,pfcWatches)==>{kb_shared(_43538:_43540/_43542)}
  mpred_prop(_43506,_43508,_43510,pfcPosTrigger)==>mpred_prop(_43506,_43508,_43510,pfcWatches)
  mpred_prop(_43474,_43476,_43478,pfcNegTrigger)==>mpred_prop(_43474,_43476,_43478,pfcWatches)
  mpred_prop(_43442,_43444,_43446,pfcBcTrigger)==>mpred_prop(_43442,_43444,_43446,pfcCreates)
  mpred_prop(_43388,_43390,_43392,pfcLHS)==>arity(_43390,_43392),functorIsMacro(_43390),mpred_prop(_43388,_43390,_43392,pfcWatches)
  mpred_prop(_43356,_43358,_43360,pfcRHS)==>mpred_prop(_43356,_43358,_43360,pfcCreates)
  mpred_prop(_43318,_43320,_43322,pfcCallCode)/predicate_is_undefined_fa(_43320,_43322)==>mpred_prop(_43318,_43320,_43322,needsDefined)
  warningsAbout(_43270,_43272)==>{wdmsg_pfc(error(warningsAbout(_43270,_43272))),break}
  '$bt'(_43214,_43216)/(nonvar(_43214),must(get_bc_clause(_43214,_43236)))==>{ignore(kb_shared(_43214))},_43236
  mpred_prop(_43170,_43172,_43174,_43176),genlPreds(_43176,_43182)==>mpred_prop(_43170,_43172,_43174,_43182)
  mpred_undo_sys(_43122,_43124,_43126)==>(_43122==>{_43124}),mpred_do_and_undo_method(_43124,_43126)
  conflict(_43076)==>{must(with_mpred_trace_exec((resolveConflict(_43076),\+conflict(_43076))))}
  _43046/mpred_positive_fact(_43046)==> \+ ~_43046
  ~_43008/mpred_positive_fact(_43008)==> \+_43008,nesc(~_43008)
  nesc(~_42962)/mpred_positive_fact(_42962)==> ~_42962,(_42962==> \+_42962)
  nesc(_42908)/mpred_positive_fact(_42908)==>_42908,(~_42908==> \+ ~_42908)
  nesc(_42882)==>_42882
  preventedWhen(_42838,_42840)==>(_42838/mpred_positive_fact(_42838),_42840==>nesc(~_42838))
  preventedWhen(_42796,{_42802})/mpred_positive_fact(_42796)==>(~_42796:-cwc,_42802)
  mdefault((_42748<-_42750))/mpred_literal(_42748)==>(_42748<-_42750,\+ ~_42748)
  mdefault((_42706==>_42708))/nonvar(_42708)==>(_42706==>mdefault(_42708))
  mdefault(~_42662)/mpred_positive_fact(_42662)==>(\+_42662==> ~_42662)
  mdefault(_42578)/(mpred_positive_fact(_42578),if_missing_mask(_42578,_42594,_42596))==>(\+_42594/(ground(_42594),_42596),\+ ~_42578==>_42578)
  mdefault(_42496)/(mpred_positive_fact(_42496),if_missing_mask(_42496,_42512,_42514))==>(_42512/(ground(_42512),_42514,\+_42512=_42496)==> \+_42496)
  mpred_sv(_42442,_42444)==>arity(_42442,_42444),hybrid_support(_42442,_42444),singleValuedInArg(_42442,_42444)
  mpred_sv_shared(_42398,_42400)==>{kb_shared(_42398/_42400)},mpred_sv(_42398,_42400)
  prologSingleValued(_42354),arity(_42354,_42366)/(\+singleValuedInArg(_42354,_42376))==>singleValuedInArg(_42354,_42366)
  singleValuedInArg(_42326,_42328)==>prologSingleValued(_42326)
  singleValuedInArgDefault(_42296,_42298,_42300)/ground(_42300)==>singleValuedInArg(_42296,_42298)
  singleValuedInArg(_42258,_42260),arity(_42258,_42266)==>singleValuedInArgAX(_42258,_42266,_42260)
  singleValuedInArgAX(_42110,_42112,_42114),{functor(_42128,_42110,_42112),arg(_42114,_42128,_42146),replace_arg(_42128,_42114,_42154,_42156)}==>(_42128,{_42146\=isMissing,call(dif:dif(_42154,_42146)),call_u(_42156),ground(_42156)},_42156==> \+_42156,_42128)
  mpred_sv(_41988,_41990),{_41990\=isMissing,call(dif:dif(_42032,_41990)),call_u(mpred_sv(_41988,_42032)),ground(mpred_sv(_41988,_42032))},mpred_sv(_41988,_42032)==> \+mpred_sv(_41988,_42032),mpred_sv(_41988,_41990)
  singleValuedInArg(_41866,_41868),{_41868\=isMissing,call(dif:dif(_41910,_41868)),call_u(singleValuedInArg(_41866,_41910)),ground(singleValuedInArg(_41866,_41910))},singleValuedInArg(_41866,_41910)==> \+singleValuedInArg(_41866,_41910),singleValuedInArg(_41866,_41868)
  singleValuedInArgDefault(_41732,_41734,_41736),{_41736\=isMissing,call(dif:dif(_41778,_41736)),call_u(singleValuedInArgDefault(_41732,_41734,_41778)),ground(singleValuedInArgDefault(_41732,_41734,_41778))},singleValuedInArgDefault(_41732,_41734,_41778)==> \+singleValuedInArgDefault(_41732,_41734,_41778),singleValuedInArgDefault(_41732,_41734,_41736)
  unused==>(singleValuedInArgAX(_41582,_41584,_41586),{functor(_41600,_41582,_41584),arg(_41586,_41600,_41618),replace_arg(_41600,_41586,_41626,_41628)}==>(_41600/ground(_41600)==>{_41618\==isMissing,call(dif:dif(_41626,_41618)),call_u(_41628),ground(_41628),ignore(retract(_41628))}))
  unused==>(singleValuedInArgAX_maybe(_41412,_41414,_41416),{functor(_41430,_41412,_41414),arg(_41416,_41430,_41448),replace_arg(_41430,_41416,_41456,_41458)}==>(_41430/ground(_41430)==>{_41448\==isMissing,call(dif:dif(_41456,_41448)),call_u(_41458),ground(_41458)},\+_41458,_41430,single_override_maybe(_41430,_41458)))
  single_override(_41330,_41332),{ignore(retract(_41332))}==>(\+_41330==> \+single_override(_41330,_41332),{mpred_supported(_41332)},_41332)

No Bi-conditional Rules in [baseKB]...

Backward Rules (1) in [baseKB]...
  bc_01_d_q(_54156)<-bc_01_d_p(_54156)

Positive triggers (142) in [baseKB]...
  '$pt'(baseKB,pfcSanityA,rhs([pfcSanityB]))
  '$pt'(baseKB,mtHybrid(_67754),(_67754\=baseKB*->rhs([ genlMt(BaseKB,baseKB), 
                                                        { ensure_abox(Abox), 
                                                          ( _67754==user ->  
                                                                 
                                                              dmsg_pretty( warn( mtHybrid(Hybrid)))) }])))
  '$pt'(baseKB,genlMt(_67668,_67670),(_67668\=baseKB*->rhs([ { doall( ( predicate_m_f_a_decl(M_f_a_decl2,M_f_a_decl1,M_f_a_decl,Decl) , 
                                                                        ain( baseKB : mpred_prop(Mpred_prop5,Mpred_prop4,Mpred_prop,Prop)))) }])))
  '$pt'(baseKB,predicateTriggerType(_14136),rhs([ ( ( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop) , 
                                                      genlMt(GenlMt,GenlMt10)/(BaseKB\=baseKB)) ==> 
                                                    { nop( dmsg_pretty( Call :  
                                                                             
                                                                          call(Kw,_64890:_64896/_64898))), 
                                                      show_failure( on_x_fail( Call8 :  
                                                                                    
                                                                                 call(Kw7,_79074:_79080/_79082))) })]))
  '$pt'(baseKB,mpred_prop(_14002,_14004,_14006,kb_local),'$pt'(baseKB,genlMt(_14020,_14002),(_14020\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                             
                                                                                                                                          call(kb_local,_117784:_117790/_117792))), 
                                                                                                                      show_failure( on_x_fail( Call1 :  
                                                                                                                                                    
                                                                                                                                                 call(kb_local,_24356:_24362/_24364))) }]))))
  '$pt'(baseKB,genlMt(_13886,baseKB),(_13886\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_59802:t/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_73768:t/1))) }])))
  '$pt'(baseKB,genlMt(_13770,baseKB),(_13770\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_109184:t/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_123150:t/2))) }])))
  '$pt'(baseKB,genlMt(_13654,baseKB),(_13654\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_46436:t/3))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_60402:t/3))) }])))
  '$pt'(baseKB,genlMt(_13538,baseKB),(_13538\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_95818:t/4))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_109784:t/4))) }])))
  '$pt'(baseKB,genlMt(_13422,baseKB),(_13422\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_36936:t/5))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_50902:t/5))) }])))
  '$pt'(baseKB,genlMt(_13306,baseKB),(_13306\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_86318:t/6))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_100284:t/6))) }])))
  '$pt'(baseKB,genlMt(_13190,baseKB),(_13190\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_27586:t/7))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_41552:t/7))) }])))
  '$pt'(baseKB,genlMt(_13074,baseKB),(_13074\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_76968:t/8))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_90934:t/8))) }])))
  '$pt'(baseKB,genlMt(_12958,baseKB),(_12958\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_19576:t/9))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_33542:t/9))) }])))
  '$pt'(baseKB,genlMt(_12842,baseKB),(_12842\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_68958:t/10))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_82924:t/10))) }])))
  '$pt'(baseKB,genlMt(_12726,baseKB),(_12726\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_118340:t/11))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_23120:t/11))) }])))
  '$pt'(baseKB,genlMt(_12610,baseKB),(_12610\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_58536:mpred_f/5))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_72504:mpred_f/5))) }])))
  '$pt'(baseKB,genlMt(_12494,baseKB),(_12494\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_107924:mpred_f/6))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_121892:mpred_f/6))) }])))
  '$pt'(baseKB,genlMt(_12378,baseKB),(_12378\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_46436:mpred_f/7))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_60404:mpred_f/7))) }])))
  '$pt'(baseKB,mpred_prop(_12244,_12246,_12248,kb_shared),'$pt'(baseKB,genlMt(_12262,_12244),(_12262\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                              
                                                                                                                                           call(kb_shared,_99776:_99782/_99784))), 
                                                                                                                       show_failure( on_x_fail( Call1 :  
                                                                                                                                                     
                                                                                                                                                  call(kb_shared,_115268:_115274/_115276))) }]))))
  '$pt'(baseKB,genlMt(_12128,baseKB),(_12128\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_42316:never_assert_u/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_56560:never_assert_u/1))) }])))
  '$pt'(baseKB,genlMt(_12012,baseKB),(_12012\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_92708:never_assert_u/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_106952:never_assert_u/2))) }])))
  '$pt'(baseKB,genlMt(_11896,baseKB),(_11896\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_33828:never_retract_u/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_48072:never_retract_u/1))) }])))
  '$pt'(baseKB,genlMt(_11780,baseKB),(_11780\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_84220:never_retract_u/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_98464:never_retract_u/2))) }])))
  '$pt'(baseKB,genlMt(_11664,baseKB),(_11664\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_26642:mtExact/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_40880:mtExact/1))) }])))
  '$pt'(baseKB,genlMt(_11548,baseKB),(_11548\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_77020:col_as_unary/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_91262:col_as_unary/1))) }])))
  '$pt'(baseKB,genlMt(_11432,baseKB),(_11432\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_20826:comment/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_35064:comment/2))) }])))
  '$pt'(baseKB,genlMt(_11316,baseKB),(_11316\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_71204:feature_setting/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_85448:feature_setting/2))) }])))
  '$pt'(baseKB,genlMt(_11200,baseKB),(_11200\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_121596:hybrid_support/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_26462:hybrid_support/2))) }])))
  '$pt'(baseKB,genlMt(_11084,baseKB),(_11084\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_62610:predicateConventionMt/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_76860:predicateConventionMt/2))) }])))
  '$pt'(baseKB,genlMt(_10968,baseKB),(_10968\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_113014:startup_option/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_19234:startup_option/2))) }])))
  '$pt'(baseKB,genlMt(_10852,baseKB),(_10852\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_55382:tooSlow/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_69620:tooSlow/0))) }])))
  '$pt'(baseKB,genlMt(_10736,baseKB),(_10736\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_105760:ttRelationType/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_120004:ttRelationType/1))) }])))
  '$pt'(baseKB,genlMt(_10620,baseKB),(_10620\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_47120:singleValuedInArg/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_61368:singleValuedInArg/2))) }])))
  '$pt'(baseKB,genlMt(_10504,baseKB),(_10504\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_97520:functorIsMacro/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_111764:functorIsMacro/1))) }])))
  '$pt'(baseKB,genlMt(_10388,baseKB),(_10388\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_38672:support_hilog/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_52916:support_hilog/2))) }])))
  '$pt'(baseKB,genlMt(_10272,baseKB),(_10272\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_89062:mpred_undo_sys/3))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_103306:mpred_undo_sys/3))) }])))
  '$pt'(baseKB,genlMt(_10156,baseKB),(_10156\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_30738:genlPreds/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_44980:genlPreds/2))) }])))
  '$pt'(baseKB,genlMt(_10040,baseKB),(_10040\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_81124:alwaysGaf/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_95366:alwaysGaf/1))) }])))
  '$pt'(baseKB,genlMt(_9924,baseKB),(_9924\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_23552:rtReformulatorDirectivePredicate/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_37812:rtReformulatorDirectivePredicate/1))) }])))
  '$pt'(baseKB,genlMt(_9808,baseKB),(_9808\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_73980:rtAvoidForwardChain/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_88228:rtAvoidForwardChain/1))) }])))
  '$pt'(baseKB,genlMt(_9692,baseKB),(_9692\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_19630:pfcControlled/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_33874:pfcControlled/1))) }])))
  '$pt'(baseKB,genlMt(_9576,baseKB),(_9576\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_70020:prologOnly/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_84262:prologOnly/1))) }])))
  '$pt'(baseKB,genlMt(_9460,baseKB),(_9460\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_120408:quasiQuote/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_26462:quasiQuote/1))) }])))
  '$pt'(baseKB,genlMt(_9344,baseKB),(_9344\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_62608:functorDeclares/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_76852:functorDeclares/1))) }])))
  '$pt'(baseKB,genlMt(_9228,baseKB),(_9228\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_113000:mtNonAssertable/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_20484:mtNonAssertable/1))) }])))
  '$pt'(baseKB,genlMt(_9112,baseKB),(_9112\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_56632:do_import_modules/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_70880:do_import_modules/0))) }])))
  '$pt'(baseKB,mpred_prop(_8978,_8980,_8982,kb_global),'$pt'(baseKB,genlMt(_8996,_8978),(_8996\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                        
                                                                                                                                     call(kb_global,_110264:_110270/_110272))), 
                                                                                                                 show_failure( on_x_fail( Call1 :  
                                                                                                                                               
                                                                                                                                            call(kb_global,_20012:_20018/_20020))) }]))))
  '$pt'(baseKB,mpred_prop(_8844,_8846,_8848,kbi_define),'$pt'(baseKB,genlMt(_8862,_8844),(_8862\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                         
                                                                                                                                      call(kbi_define,_60130:_60136/_60138))), 
                                                                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                                                                
                                                                                                                                             call(kbi_define,_75892:_75898/_75900))) }]))))
  '$pt'(baseKB,genlMt(_8718,_8720),(is_ftNonvar(_8718),is_ftNonvar(_8720),_8720\==baseKB,mtProlog(_8720)*->rhs([ { User\==user, 
                                                                                                                   catch( add_import_module(Add_import_module,End,end), 
                                                                                                                     error(Error,Error6), 
                                                                                                                     dmsg_pretty( error( add_import_module(Add_import_module5,End4,end)))) }])))
  '$pt'(baseKB,mtHybrid(_8682),rhs([ { decl_assertable_module(Module) }]))
  '$pt'(baseKB,predicateConventionMt(_8620,_8622),(arity(_8620,_8634)*->rhs([ { kb_global( _118646 :  
                                                                                                
                                                                                             _118652/_118654) }])))
  '$pt'(baseKB,arity(_8558,_8560),(predicateConventionMt(_8558,_8572)*->rhs([ { kb_global( _22012 :  
                                                                                                
                                                                                             _22018/_22020) }])))
  '$pt'(baseKB,ttTypeType(_8526),rhs([ functorDeclares(FunctorDeclares)]))
  '$pt'(baseKB,ttRelationType(_8480),rhs([ { decl_rt(Rt) }, 
                                           functorDeclares(_8480)]))
  '$pt'(baseKB,functorDeclares(_8436),rhs([ arityMax(_35712,1), 
                                            functorIsMacro(_8436)]))
  '$pt'(baseKB,genlMt(_8320,baseKB),(_8320\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_71366:compilerDirective/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_85614:compilerDirective/1))) }])))
  '$pt'(baseKB,compilerDirective(_8278),rhs([ { kb_shared( _96898/0) }]))
  '$pt'(baseKB,genlMt(_8162,baseKB),(_8162\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_26642:hardCodedExpansion/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_40890:hardCodedExpansion/0))) }])))
  '$pt'(baseKB,genlMt(_8046,baseKB),(_8046\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_77044:codeTooSlow/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_91286:codeTooSlow/0))) }])))
  '$pt'(baseKB,genlMt(_7930,baseKB),(_7930\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_21384:pfc_checking/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_35626:pfc_checking/0))) }])))
  '$pt'(baseKB,genlMt(_7814,baseKB),(_7814\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_71772:pass2/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_86010:pass2/0))) }])))
  '$pt'(baseKB,genlMt(_7698,baseKB),(_7698\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_122148:redundantMaybe/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_27730:redundantMaybe/0))) }])))
  '$pt'(baseKB,genlMt(_7582,baseKB),(_7582\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_63878:isRedundant/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_78120:isRedundant/0))) }])))
  '$pt'(baseKB,genlMt(_7466,baseKB),(_7466\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_114266:isRuntime/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_23264:isRuntime/0))) }])))
  '$pt'(baseKB,genlMt(_7350,baseKB),(_7350\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_59408:do_and_undo/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_73650:do_and_undo/2))) }])))
  '$pt'(baseKB,genlMt(_7234,baseKB),(_7234\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_109796:tFunction/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_19234:tFunction/1))) }])))
  '$pt'(baseKB,prologHybrid(_7180),(arity(_7180,_7192)*->rhs([ { kb_shared( _29774/_29776) }])))
  '$pt'(baseKB,arity(_7126,_7128),(prologHybrid(_7126)*->rhs([ { kb_shared( _38632/_38634) }])))
  '$pt'(baseKB,pfcControlled(_7080),(arity(_7080,_7092)*->rhs([ hybrid_support(Hybrid_support,Support)])))
  '$pt'(baseKB,arity(_7034,_7036),(pfcControlled(_7034)*->rhs([ hybrid_support(Hybrid_support,Support)])))
  '$pt'(baseKB,pfc_checking,rhs([ ( mpred_prop(Mpred_prop2,Mpred_prop,PfcPosTrigger,pfcPosTrigger) ==> 
                                    { Warn_if_static4 :  
                                           
                                        warn_if_static(Warn_if_static,Static) })]))
  '$pt'(baseKB,pfc_checking,rhs([ ( mpred_prop(Mpred_prop2,Mpred_prop,PfcNegTrigger,pfcNegTrigger) ==> 
                                    { Warn_if_static4 :  
                                           
                                        warn_if_static(Warn_if_static,Static) })]))
  '$pt'(baseKB,pfc_checking,rhs([ ( mpred_prop(Mpred_prop2,Mpred_prop,PfcBcTrigger,pfcBcTrigger) ==> 
                                    { Warn_if_static4 :  
                                           
                                        warn_if_static(Warn_if_static,Static) })]))
  '$pt'(baseKB,mpred_prop(_6794,_6796,_6798,_6800),(\+ground(_6796/_6798)*->rhs([ { trace_or_throw_ex( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)) }])))
  '$pt'(baseKB,mpred_prop(_6718,_6720,_6722,pfcCreates),rhs([ { kb_shared( _18484 :  
                                                                                
                                                                             _18490/_18492) }, 
                                                              { Warn_if_static1 :  
                                                                     
                                                                  warn_if_static(Warn_if_static,Static) }]))
  '$pt'(baseKB,mpred_prop(_6664,_6666,_6668,pfcControlled),rhs([ { kb_shared( _39374 :  
                                                                                   
                                                                                _39380/_39382) }]))
  '$pt'(baseKB,mpred_prop(_6610,_6612,_6614,pfcWatches),rhs([ { kb_shared( _51926 :  
                                                                                
                                                                             _51932/_51934) }]))
  '$pt'(baseKB,mpred_prop(_6566,_6568,_6570,pfcPosTrigger),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)]))
  '$pt'(baseKB,genlMt(_6450,baseKB),(_6450\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_95234:pfcSanityA/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_109476:pfcSanityA/0))) }])))
  '$pt'(baseKB,genlMt(_6334,baseKB),(_6334\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_38672:ttTypeType/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_52914:ttTypeType/1))) }])))
  '$pt'(baseKB,mpred_prop(_6290,_6292,_6294,pfcNegTrigger),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)]))
  '$pt'(baseKB,mpred_prop(_6246,_6248,_6250,pfcBcTrigger),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)]))
  '$pt'(baseKB,mpred_prop(_6180,_6182,_6184,pfcLHS),rhs([ arity(Arity,Arity1), 
                                                          functorIsMacro(_6182), 
                                                          mpred_prop(_6180,_6182,_6184,pfcWatches)]))
  '$pt'(baseKB,mpred_prop(_6136,_6138,_6140,pfcRHS),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)]))
  '$pt'(baseKB,genlMt(_6020,baseKB),(_6020\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_118198:pfcSanityB/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_26462:pfcSanityB/0))) }])))
  '$pt'(baseKB,genlMt(_5904,baseKB),(_5904\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_62608:arityMax/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_76850:arityMax/2))) }])))
  '$pt'(baseKB,mpred_prop(_5848,_5850,_5852,pfcCallCode),(predicate_is_undefined_fa(_5850,_5852)*->rhs([ mpred_prop(Mpred_prop2,Mpred_prop,NeedsDefined,needsDefined)])))
  '$pt'(baseKB,genlMt(_5732,baseKB),(_5732\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_120760:nondet/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_27730:nondet/0))) }])))
  '$pt'(baseKB,genlMt(_5616,baseKB),(_5616\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_63870:typeCheckDecl/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_78114:typeCheckDecl/2))) }])))
  '$pt'(baseKB,genlMt(_5500,baseKB),(_5500\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_114260:warningsAbout/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_23264:warningsAbout/2))) }])))
  '$pt'(baseKB,warningsAbout(_5446,_5448),rhs([ { wdmsg_pfc( error( warningsAbout(WarningsAbout,WarningsAbout1))), 
                                                  break }]))
  '$pt'(baseKB,genlMt(_5330,baseKB),(_5330\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_70558:'$bt'/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_84796:'$bt'/2))) }])))
  '$pt'(baseKB,'$bt'(_5256,_5258),(nonvar(_5256),must(get_bc_clause(_5256,_5284))*->rhs([ { ignore( kb_shared(Shared)) }, 
                                                                                          _5284])))
  '$pt'(baseKB,mpred_prop(_5200,_5202,_5204,_5206),(genlPreds(_5206,_5218)*->rhs([ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)])))
  '$pt'(baseKB,genlPreds(_5144,_5146),(mpred_prop(_5156,_5158,_5160,_5144)*->rhs([ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)])))
  '$pt'(baseKB,genlMt(_5028,baseKB),(_5028\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_37440:mpred_do_and_undo_method/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_51694:mpred_do_and_undo_method/2))) }])))
  '$pt'(baseKB,mpred_undo_sys(_4974,_4976,_4978),rhs([ _57584==>{_57590}, 
                                                       mpred_do_and_undo_method(_4976,_4978)]))
  '$pt'(baseKB,genlMt(_4858,baseKB),(_4858\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_93534:conflict/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_107776:conflict/1))) }])))
  '$pt'(baseKB,conflict(_4800),rhs([ { must( with_mpred_trace_exec( resolveConflict(ResolveConflict),\+conflict(Conflict))) }]))
  '$pt'(baseKB,_4752,(mpred_positive_fact(_4752)*->rhs([ \+( ~_17520)])))
  '$pt'(baseKB,genlMt(_4642,baseKB),(_4642\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_51958:nesc/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_66194:nesc/1))) }])))
  '$pt'(baseKB,nesc(~_4584),(mpred_positive_fact(_4584)*->rhs([ ~_70680, 
                                                                _4584==> \+_4584])))
  '$pt'(baseKB,nesc(_4518),(mpred_positive_fact(_4518)*->rhs([ _74300, 
                                                               ~_4518==> \+ ~_4518])))
  '$pt'(baseKB,nesc(_4490),rhs([_4490]))
  '$pt'(baseKB,genlMt(_4374,baseKB),(_4374\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_111840:preventedWhen/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_20484:preventedWhen/2))) }])))
  '$pt'(baseKB,preventedWhen(_4314,_4316),rhs([ Mpred_positive_fact/mpred_positive_fact(Fact),_29606==>nesc(~_29624)]))
  '$pt'(baseKB,preventedWhen(_4254,{_4260}),(mpred_positive_fact(_4254)*->rhs([ ~_35874 :- 
                                                                                  cwc , 
                                                                                  Cwc])))
  '$pt'(baseKB,genlMt(_4138,baseKB),(_4138\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_72148:mdefault/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_86390:mdefault/1))) }])))
  '$pt'(baseKB,mdefault((_4078<-_4080)),(mpred_literal(_4078)*->rhs([ _92952<-_92958,\+ ~_92968])))
  '$pt'(baseKB,mdefault((_4024==>_4026)),(nonvar(_4026)*->rhs([ Mdefault==>mdefault(Mdefault1)])))
  '$pt'(baseKB,mdefault(~_3968),(mpred_positive_fact(_3968)*->rhs([ \+_102110==> ~_102114])))
  '$pt'(baseKB,mdefault(_3872),(mpred_positive_fact(_3872),if_missing_mask(_3872,_3894,_3896)*->rhs([ \+_109838/(ground(Ground1),Ground),\+ ~_109858==>_109824])))
  '$pt'(baseKB,mdefault(_3778),(mpred_positive_fact(_3778),if_missing_mask(_3778,_3800,_3802)*->rhs([ _117576/(ground(Ground),_117592,\+_117602=_117604)==> \+_117608])))
  '$pt'(baseKB,mpred_sv(_3718,_3720),rhs([ arity(Arity,Arity1), 
                                           hybrid_support(_3718,_3720), 
                                           singleValuedInArg(_3718,_3720)]))
  '$pt'(baseKB,genlMt(_3602,baseKB),(_3602\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_48224:mpred_sv_shared/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_62468:mpred_sv_shared/2))) }])))
  '$pt'(baseKB,mpred_sv_shared(_3546,_3548),rhs([ { kb_shared( _73012/_73014) }, 
                                                  mpred_sv(_3546,_3548)]))
  '$pt'(baseKB,genlMt(_3430,baseKB),(_3430\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_108706:singleValuedInArgDefault/3))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_19234:singleValuedInArgDefault/3))) }])))
  '$pt'(baseKB,genlMt(_3314,baseKB),(_3314\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_55394:prologSingleValued/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_69642:prologSingleValued/1))) }])))
  '$pt'(baseKB,prologSingleValued(_3250),'$pt'(baseKB,arity(_3250,_3264),(\+singleValuedInArg(_3250,_3280)*->rhs([ singleValuedInArg(SingleValuedInArg,SingleValuedInArg1)]))))
  '$pt'(baseKB,singleValuedInArg(_3216,_3218),rhs([ prologSingleValued(PrologSingleValued)]))
  '$pt'(baseKB,arity(mpred_sv,_3166),(\+singleValuedInArg(mpred_sv,_3182)*->rhs([ singleValuedInArg(mpred_sv,SingleValuedInArg_Mpred_sv)])))
  '$pt'(baseKB,arity(singleValuedInArg,_3114),(\+singleValuedInArg(singleValuedInArg,_3130)*->rhs([ singleValuedInArg(singleValuedInArg,SingleValuedInArg)])))
  '$pt'(baseKB,arity(singleValuedInArgDefault,_3062),(\+singleValuedInArg(singleValuedInArgDefault,_3078)*->rhs([ singleValuedInArg(singleValuedInArgDefault,SingleValuedInArgDefault)])))
  '$pt'(baseKB,singleValuedInArgDefault(_3012,_3014,_3016),(ground(_3016)*->rhs([ singleValuedInArg(SingleValuedInArg,SingleValuedInArg1)])))
  '$pt'(baseKB,genlMt(_2896,baseKB),(_2896\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_33828:singleValuedInArgAX/3))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_48076:singleValuedInArgAX/3))) }])))
  '$pt'(baseKB,singleValuedInArg(_2846,_2848),(arity(_2846,_2860)*->rhs([ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)])))
  '$pt'(baseKB,arity(_2796,_2798),(singleValuedInArg(_2796,_2810)*->rhs([ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)])))
  '$pt'(baseKB,singleValuedInArgAX(_2640,_2642,_2644),(functor(_2660,_2640,_2642),arg(_2644,_2660,_2678),replace_arg(_2660,_2644,_2686,_2688)*->rhs(
                            [ ( (   _82406  ,
                                  { Missing\=isMissing, 
                                    call( dif : dif(Dif,Dif2)), 
                                    call_u(U), 
                                    ground(Ground) } , 
                                  _80886) ==> 
                                \+_80948,_80944)])))
  '$pt'(baseKB,mpred_sv(_2508,_2510),(_2510\=isMissing,call(dif:dif(_2548,_2510)),call_u(mpred_sv(_2508,_2548)),ground(mpred_sv(_2508,_2548))*->'$pt'(baseKB,mpred_sv(_2508,_2548),rhs(
                                                               [ \+( mpred_sv(Mpred_sv,Sv)), 
                                                                 mpred_sv(_2508,_2510)]))))
  '$pt'(baseKB,singleValuedInArg(_2376,_2378),(_2378\=isMissing,call(dif:dif(_2416,_2378)),call_u(singleValuedInArg(_2376,_2416)),ground(singleValuedInArg(_2376,_2416))*->'$pt'(baseKB,singleValuedInArg(_2376,_2416),rhs(
                                                                                                   [ \+( singleValuedInArg(SingleValuedInArg,SingleValuedInArg1)), 
                                                                                                     singleValuedInArg(_2376,_2378)]))))
  '$pt'(baseKB,singleValuedInArgDefault(_2232,_2234,_2236),(_2236\=isMissing,call(dif:dif(_2274,_2236)),call_u(singleValuedInArgDefault(_2232,_2234,_2274)),ground(singleValuedInArgDefault(_2232,_2234,_2274))*->'$pt'(baseKB,singleValuedInArgDefault(_2232,_2234,_2274),rhs(
                               [ \+( singleValuedInArgDefault(SingleValuedInArgDefault1,SingleValuedInArgDefault,SingleValuedInArgDefault2)), 
                                 singleValuedInArgDefault(_2232,_2234,_2236)]))))
  '$pt'(baseKB,genlMt(_2116,baseKB),(_2116\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_47120:unused/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_61358:unused/0))) }])))
  '$pt'(baseKB,unused,rhs([ (   ( singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX12) , 
                                  { functor(Functor3,Functor,Functor13), 
                                    arg(Arg5,Arg,Arg14), 
                                    replace_arg(Replace_arg8,Replace_arg7,Replace_arg,Arg15) })  ==>
                              Ground/ground(Ground16) ==> 
                              { Missing\==isMissing, 
                                call( dif : dif(Dif,Dif17)), 
                                call_u(U), 
                                ground(Ground19), 
                                ignore( retract(Retract)) })]))
  '$pt'(baseKB,genlMt(_1832,baseKB),(_1832\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_43782:singleValuedInArgAX_maybe/3))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_58036:singleValuedInArgAX_maybe/3))) }])))
  '$pt'(baseKB,genlMt(_1716,baseKB),(_1716\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_94196:single_override_maybe/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_108446:single_override_maybe/2))) }])))
  '$pt'(baseKB,unused,rhs([ (   ( singleValuedInArgAX_maybe(SingleValuedInArgAX_maybe1,SingleValuedInArgAX_maybe,Maybe) , 
                                  { functor(Functor3,Functor,Functor15), 
                                    arg(Arg5,Arg,Arg16), 
                                    replace_arg(Replace_arg8,Replace_arg7,Replace_arg,Arg17) })  ==>
                              Ground/ground(Ground18) ==> 
                              (   { Missing\==isMissing, 
                                    call( dif : dif(Dif,Dif19)), 
                                    call_u(U), 
                                    ground(Ground21) }  ,
                                \+_49274 , 
                                Single_override_maybe13 , 
                                single_override_maybe(Single_override_maybe,Maybe22)))]))
  '$pt'(baseKB,genlMt(_1418,baseKB),(_1418\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_100360:single_override/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_114608:single_override/2))) }])))
  '$pt'(baseKB,single_override(_1334,_1336),(ignore(retract(_1336))*->rhs([ ( \+_22126 ==> 
                                                                              (   \+( single_override(Single_override,Override))  ,
                                                                                { mpred_supported(Supported) } , 
                                                                                _22148))])))
  '$pt'(baseKB,genlMt(_1218,baseKB),(_1218\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_62538:bc_01_d_q/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_76780:bc_01_d_q/1))) }])))
  '$pt'(baseKB,genlMt(_1102,baseKB),(_1102\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_112924:bc_01_d_p/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_23264:bc_01_d_p/1))) }])))
  '$pt'(baseKB,bc_01_d_p(b),rhs([ bc_01_d_q(b)]))

Negative triggers (1) in [baseKB]...
  '$nt'(_28314,(call_u_no_bc(_28328),mpred_positive_fact(_28328)),rhs([ \+_30288, 
                                                                        nesc( ~_32646)]))

Goal triggers (1) in [baseKB]...
  '$bt'(bc_01_d_q(_33848),'$pt'(baseKB,bc_01_d_p(_33848),rhs([ bc_01_d_q(Q)])))

Supports in [baseKB]...
  (bc_01_d_q(_84824):-bc_01_d_p(_84824))>=(mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18),ax)
  mtHybrid(baseKB)>=(mfl4(_84796,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132),ax)
  (assert_if_newt(_84714):-cwc,(clause_asserted_i(_84714)->true;call(assert,_84714)))>=(mfl4([ 'G'=G],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',143),ax)
  (pfcSanityA==>pfcSanityB)>=(mfl4(_84686,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',74),ax)
  mpred_prop(baseKB,pfcSanityB,0,pfcRHS)>=(mfl4(_84652,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',74),ax)
  mpred_prop(baseKB,pfcSanityA,0,pfcLHS)>=(mfl4(_84614,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',74),ax)
  mpred_prop(baseKB,pfcSanityA,0,pfcPosTrigger)>=(mfl4(_84576,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',74),ax)
  '$pt'(baseKB,pfcSanityA,rhs([pfcSanityB]))>=((pfcSanityA==>pfcSanityB),mfl4(_84538,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',74))
  pfcSanityA>=(mfl4(_84486,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',76),ax)
  pfcSanityB>=(pfcSanityA,'$pt'(baseKB,pfcSanityA,rhs([pfcSanityB])))
  mpred_prop(baseKB,mtExact,1,kb_shared)>=(mfl4(_84422,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',83),ax)
  mpred_prop(baseKB,col_as_unary,1,kb_shared)>=(mfl4(_84384,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',85),ax)
  mpred_prop(baseKB,comment,2,kb_shared)>=(mfl4(_84346,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',86),ax)
  mpred_prop(baseKB,feature_setting,2,kb_shared)>=(mfl4(_84308,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',87),ax)
  mpred_prop(baseKB,hybrid_support,2,kb_shared)>=(mfl4(_84270,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',88),ax)
  mpred_prop(baseKB,predicateConventionMt,2,kb_shared)>=(mfl4(_84232,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',93),ax)
  mpred_prop(baseKB,startup_option,2,kb_shared)>=(mfl4(_84194,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',94),ax)
  mpred_prop(baseKB,tooSlow,0,kb_shared)>=(mfl4(_84156,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',95),ax)
  mpred_prop(baseKB,ttRelationType,1,kb_shared)>=(mfl4(_84118,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',96),ax)
  mpred_prop(baseKB,singleValuedInArg,2,kb_shared)>=(mfl4(_84080,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',97),ax)
  mpred_prop(baseKB,functorIsMacro,1,kb_shared)>=(mfl4(_84042,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',99),ax)
  mpred_prop(baseKB,support_hilog,2,kb_shared)>=(mfl4(_84004,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',100),ax)
  mpred_prop(baseKB,mpred_undo_sys,3,kb_shared)>=(mfl4(_83966,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',101),ax)
  mpred_prop(baseKB,genlPreds,2,kb_shared)>=(mfl4(_83928,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',102),ax)
  mpred_prop(baseKB,alwaysGaf,1,kb_shared)>=(mfl4(_83890,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',106),ax)
  mpred_prop(baseKB,rtReformulatorDirectivePredicate,1,kb_shared)>=(mfl4(_83852,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',108),ax)
  mpred_prop(baseKB,rtAvoidForwardChain,1,kb_shared)>=(mfl4(_83814,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',110),ax)
  mpred_prop(baseKB,pfcControlled,1,kb_shared)>=(mfl4(_83776,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',112),ax)
  mpred_prop(baseKB,prologOnly,1,kb_shared)>=(mfl4(_83738,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',114),ax)
  mpred_prop(baseKB,quasiQuote,1,kb_shared)>=(mfl4(_83700,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',115),ax)
  mpred_prop(baseKB,functorDeclares,1,kb_shared)>=(mfl4(_83662,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',144),ax)
  mpred_prop(baseKB,mtNonAssertable,1,kb_shared)>=(mfl4(_83624,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',145),ax)
  mpred_prop(baseKB,do_import_modules,0,kb_shared)>=(mfl4(_83586,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',149),ax)
  (mtHybrid(_83464)/(_83464\=baseKB)==>genlMt(_83464,baseKB),{ensure_abox(_83464),(_83464==user->dmsg_pretty(warn(mtHybrid(_83464)));true)})>=(mfl4(
                            [ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,genlMt,2,pfcRHS)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,ensure_abox,1,pfcCallCode)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,==,2,pfcCallCode)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,dmsg_pretty,1,pfcCallCode)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,true,0,pfcCallCode)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,mtHybrid,1,pfcLHS)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,\=,2,pfcCallCode)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  mpred_prop(baseKB,mtHybrid,1,pfcPosTrigger)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155),ax)
  '$pt'(baseKB,mtHybrid(_82852),(_82852\=baseKB*->rhs([ genlMt(BaseKB,baseKB), 
                                                        { ensure_abox(Abox), 
                                                          ( _82852==user ->  
                                                                 
                                                              dmsg_pretty( warn( mtHybrid(Hybrid)))) }])))>=((mtHybrid(_82952)/(_82952\=baseKB)==>genlMt(_82952,baseKB),{ensure_abox(_82952),(_82952==user->dmsg_pretty(warn(mtHybrid(_82952)));true)}),mfl4(
             [ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',155))
  predicateTriggerType(kb_local)>=(mfl4(_82822,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',159),ax)
  predicateTriggerType(kb_shared)>=(mfl4(_82790,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',160),ax)
  predicateTriggerType(kb_global)>=(mfl4(_82758,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',161),ax)
  predicateTriggerType(kbi_define)>=(mfl4(_82726,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',162),ax)
  (genlMt(_82572,_82574)/(_82572\=baseKB)==>{doall((predicate_m_f_a_decl(_82574,_82600,_82602,_82604),ain(baseKB:mpred_prop(_82574,_82600,_82602,_82604))))})>=(mfl4(
                                             [ 'C'=C, 
                                               'M'=_82574, 
                                               'F'=_82600, 
                                               'A'=_82602, 
                                               'Type'=_82604],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',166),ax)
  mpred_prop(baseKB,doall,1,pfcCallCode)>=(mfl4([ 'C'=C, 
                                                  'M'=_82508, 
                                                  'F'=_82520, 
                                                  'A'=_82532, 
                                                  'Type'=_82544],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',166),ax)
  mpred_prop(baseKB,genlMt,2,pfcLHS)>=(mfl4([ 'C'=C, 
                                              'M'=_82410, 
                                              'F'=_82422, 
                                              'A'=_82434, 
                                              'Type'=_82446],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',166),ax)
  mpred_prop(baseKB,genlMt,2,pfcPosTrigger)>=(mfl4([ 'C'=C, 
                                                     'M'=_82312, 
                                                     'F'=_82324, 
                                                     'A'=_82336, 
                                                     'Type'=_82348],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',166),ax)
  '$pt'(baseKB,genlMt(_82038,_82040),(_82038\=baseKB*->rhs([ { doall( ( predicate_m_f_a_decl(M_f_a_decl2,M_f_a_decl1,M_f_a_decl,Decl) , 
                                                                        ain( baseKB : mpred_prop(Mpred_prop5,Mpred_prop4,Mpred_prop,Prop)))) }])))>=((genlMt(_82128,_82130)/(_82128\=baseKB)==>{doall((predicate_m_f_a_decl(_82130,_82156,_82158,_82160),ain(baseKB:mpred_prop(_82130,_82156,_82158,_82160))))}),mfl4(
                                                                      [ 'C'=C, 
                                                                        'M'=_82214, 
                                                                        'F'=_82226, 
                                                                        'A'=_82238, 
                                                                        'Type'=_82250],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',166))
  (predicateTriggerType(_81824)==>(mpred_prop(_81840,_81842,_81844,_81824),genlMt(_81856,_81840)/(_81856\=baseKB)==>{nop(dmsg_pretty(_81856:call(_81824,_81856:_81842/_81844))),show_failure(on_x_fail(_81856:call(_81824,_81856:_81842/_81844)))}))>=(mfl4(
            [ 'Type'=Type, 
              'M'=_81840, 
              'F'=_81842, 
              'A'=_81844, 
              'C'=_81856],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  mpred_prop(baseKB,mpred_prop,4,pfcRHS)>=(mfl4([ 'Type'=Type, 
                                                  'M'=_81766, 
                                                  'F'=_81778, 
                                                  'A'=_81790, 
                                                  'C'=_81802],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  mpred_prop(baseKB,nop,1,pfcCallCode)>=(mfl4([ 'Type'=Type, 
                                                'M'=_81668, 
                                                'F'=_81680, 
                                                'A'=_81692, 
                                                'C'=_81704],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  mpred_prop(baseKB,show_failure,1,pfcCallCode)>=(mfl4([ 'Type'=Type, 
                                                         'M'=_81570, 
                                                         'F'=_81582, 
                                                         'A'=_81594, 
                                                         'C'=_81606],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  mpred_prop(baseKB,predicateTriggerType,1,pfcLHS)>=(mfl4([ 'Type'=Type, 
                                                            'M'=_81472, 
                                                            'F'=_81484, 
                                                            'A'=_81496, 
                                                            'C'=_81508],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  mpred_prop(baseKB,predicateTriggerType,1,pfcPosTrigger)>=(mfl4([ 'Type'=Type, 
                                                                   'M'=_81374, 
                                                                   'F'=_81386, 
                                                                   'A'=_81398, 
                                                                   'C'=_81410],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  '$pt'(baseKB,predicateTriggerType(_80988),rhs([ ( ( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop) , 
                                                      genlMt(GenlMt,GenlMt10)/(BaseKB\=baseKB)) ==> 
                                                    { nop( dmsg_pretty( Call :  
                                                                             
                                                                          call(Kw,_457026:_457032/_457034))), 
                                                      show_failure( on_x_fail( Call8 :  
                                                                                    
                                                                                 call(Kw7,_471216:_471222/_471224))) })]))>=((predicateTriggerType(_81128)==>(mpred_prop(_81144,_81146,_81148,_81128),genlMt(_81160,_81144)/(_81160\=baseKB)==>{nop(dmsg_pretty(_81160:call(_81128,_81160:_81146/_81148))),show_failure(on_x_fail(_81160:call(_81128,_81160:_81146/_81148)))})),mfl4(
             [ 'Type'=Type, 
               'M'=_81276, 
               'F'=_81288, 
               'A'=_81300, 
               'C'=_81312],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169))
  (mpred_prop(_80720,_80722,_80724,kb_local),genlMt(_80736,_80720)/(_80736\=baseKB)==>{nop(dmsg_pretty(_80736:call(kb_local,_80736:_80722/_80724))),show_failure(on_x_fail(_80736:call(kb_local,_80736:_80722/_80724)))})>=(predicateTriggerType(kb_local),'$pt'(baseKB,predicateTriggerType(_80840),rhs(
                                                         [ ( ( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop) , 
                                                               genlMt(GenlMt,GenlMt10)/(BaseKB\=baseKB)) ==> 
                                                             { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(Kw,_105644:_105650/_105652))), 
                                                               show_failure( on_x_fail( Call8 :  
                                                                                             
                                                                                          call(Kw7,_119834:_119840/_119842))) })])))
  mpred_prop(baseKB,mpred_prop,4,pfcLHS)>=(mfl4([ 'Type'=Type, 
                                                  'M'=_80650, 
                                                  'F'=_80662, 
                                                  'A'=_80674, 
                                                  'C'=_80686],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  mpred_prop(baseKB,mpred_prop,4,pfcPosTrigger)>=(mfl4([ 'Type'=Type, 
                                                         'M'=_80552, 
                                                         'F'=_80564, 
                                                         'A'=_80576, 
                                                         'C'=_80588],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169),ax)
  '$pt'(baseKB,mpred_prop(_80184,_80186,_80188,kb_local),'$pt'(baseKB,genlMt(_80202,_80184),(_80202\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                             
                                                                                                                                          call(kb_local,_175780:_175786/_175788))), 
                                                                                                                      show_failure( on_x_fail( Call1 :  
                                                                                                                                                    
                                                                                                                                                 call(kb_local,_191004:_191010/_191012))) }]))))>=((mpred_prop(_80322,_80324,_80326,kb_local),genlMt(_80338,_80322)/(_80338\=baseKB)==>{nop(dmsg_pretty(_80338:call(kb_local,_80338:_80324/_80326))),show_failure(on_x_fail(_80338:call(kb_local,_80338:_80324/_80326)))}),mfl4(
                                                        [ 'Type'=Type, 
                                                          'M'=_80454, 
                                                          'F'=_80466, 
                                                          'A'=_80478, 
                                                          'C'=_80490],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169))
  '$pt'(baseKB,genlMt(_79918,baseKB),(_79918\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_235742:t/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_249708:t/1))) }])))>=(mpred_prop(baseKB,t,1,kb_local),'$pt'(baseKB,mpred_prop(_80044,_80046,_80048,kb_local),'$pt'(baseKB,genlMt(_80062,_80044),(_80062\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_288438:_288444/_288446))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_303662:_303668/_303670))) }])))))
  '$pt'(baseKB,genlMt(_79652,baseKB),(_79652\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_339088:t/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_353054:t/2))) }])))>=(mpred_prop(baseKB,t,2,kb_local),'$pt'(baseKB,mpred_prop(_79778,_79780,_79782,kb_local),'$pt'(baseKB,genlMt(_79796,_79778),(_79796\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_391784:_391790/_391792))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_407008:_407014/_407016))) }])))))
  '$pt'(baseKB,genlMt(_79386,baseKB),(_79386\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_442434:t/3))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_456400:t/3))) }])))>=(mpred_prop(baseKB,t,3,kb_local),'$pt'(baseKB,mpred_prop(_79512,_79514,_79516,kb_local),'$pt'(baseKB,genlMt(_79530,_79512),(_79530\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_495130:_495136/_495138))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_510354:_510360/_510362))) }])))))
  '$pt'(baseKB,genlMt(_79120,baseKB),(_79120\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_119594:t/4))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_133560:t/4))) }])))>=(mpred_prop(baseKB,t,4,kb_local),'$pt'(baseKB,mpred_prop(_79246,_79248,_79250,kb_local),'$pt'(baseKB,genlMt(_79264,_79246),(_79264\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_172290:_172296/_172298))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_187514:_187520/_187522))) }])))))
  '$pt'(baseKB,genlMt(_78854,baseKB),(_78854\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_222940:t/5))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_236906:t/5))) }])))>=(mpred_prop(baseKB,t,5,kb_local),'$pt'(baseKB,mpred_prop(_78980,_78982,_78984,kb_local),'$pt'(baseKB,genlMt(_78998,_78980),(_78998\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_275636:_275642/_275644))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_290860:_290866/_290868))) }])))))
  '$pt'(baseKB,genlMt(_78588,baseKB),(_78588\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_326286:t/6))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_340252:t/6))) }])))>=(mpred_prop(baseKB,t,6,kb_local),'$pt'(baseKB,mpred_prop(_78714,_78716,_78718,kb_local),'$pt'(baseKB,genlMt(_78732,_78714),(_78732\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_378982:_378988/_378990))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_394206:_394212/_394214))) }])))))
  '$pt'(baseKB,genlMt(_78322,baseKB),(_78322\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_429632:t/7))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_443598:t/7))) }])))>=(mpred_prop(baseKB,t,7,kb_local),'$pt'(baseKB,mpred_prop(_78448,_78450,_78452,kb_local),'$pt'(baseKB,genlMt(_78466,_78448),(_78466\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_482328:_482334/_482336))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_497552:_497558/_497560))) }])))))
  '$pt'(baseKB,genlMt(_78056,baseKB),(_78056\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_107984:t/8))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_121950:t/8))) }])))>=(mpred_prop(baseKB,t,8,kb_local),'$pt'(baseKB,mpred_prop(_78182,_78184,_78186,kb_local),'$pt'(baseKB,genlMt(_78200,_78182),(_78200\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_160680:_160686/_160688))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_175904:_175910/_175912))) }])))))
  '$pt'(baseKB,genlMt(_77790,baseKB),(_77790\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_211330:t/9))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_225296:t/9))) }])))>=(mpred_prop(baseKB,t,9,kb_local),'$pt'(baseKB,mpred_prop(_77916,_77918,_77920,kb_local),'$pt'(baseKB,genlMt(_77934,_77916),(_77934\=baseKB*->rhs(
                               [ { nop( dmsg_pretty( Call :  
                                                          
                                                       call(kb_local,_264026:_264032/_264034))), 
                                   show_failure( on_x_fail( Call1 :  
                                                                 
                                                              call(kb_local,_279250:_279256/_279258))) }])))))
  '$pt'(baseKB,genlMt(_77524,baseKB),(_77524\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_314676:t/10))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_328642:t/10))) }])))>=(mpred_prop(baseKB,t,10,kb_local),'$pt'(baseKB,mpred_prop(_77650,_77652,_77654,kb_local),'$pt'(baseKB,genlMt(_77668,_77650),(_77668\=baseKB*->rhs(
                                 [ { nop( dmsg_pretty( Call :  
                                                            
                                                         call(kb_local,_367374:_367380/_367382))), 
                                     show_failure( on_x_fail( Call1 :  
                                                                   
                                                                call(kb_local,_382598:_382604/_382606))) }])))))
  '$pt'(baseKB,genlMt(_77258,baseKB),(_77258\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_418024:t/11))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_431990:t/11))) }])))>=(mpred_prop(baseKB,t,11,kb_local),'$pt'(baseKB,mpred_prop(_77384,_77386,_77388,kb_local),'$pt'(baseKB,genlMt(_77402,_77384),(_77402\=baseKB*->rhs(
                                 [ { nop( dmsg_pretty( Call :  
                                                            
                                                         call(kb_local,_470722:_470728/_470730))), 
                                     show_failure( on_x_fail( Call1 :  
                                                                   
                                                                call(kb_local,_485946:_485952/_485954))) }])))))
  '$pt'(baseKB,genlMt(_76992,baseKB),(_76992\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_97978:mpred_f/5))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_111946:mpred_f/5))) }])))>=(mpred_prop(baseKB,mpred_f,5,kb_local),'$pt'(baseKB,mpred_prop(_77118,_77120,_77122,kb_local),'$pt'(baseKB,genlMt(_77136,_77118),(_77136\=baseKB*->rhs(
                                           [ { nop( dmsg_pretty( Call :  
                                                                      
                                                                   call(kb_local,_150680:_150686/_150688))), 
                                               show_failure( on_x_fail( Call1 :  
                                                                             
                                                                          call(kb_local,_165904:_165910/_165912))) }])))))
  '$pt'(baseKB,genlMt(_76726,baseKB),(_76726\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_201332:mpred_f/6))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_215300:mpred_f/6))) }])))>=(mpred_prop(baseKB,mpred_f,6,kb_local),'$pt'(baseKB,mpred_prop(_76852,_76854,_76856,kb_local),'$pt'(baseKB,genlMt(_76870,_76852),(_76870\=baseKB*->rhs(
                                           [ { nop( dmsg_pretty( Call :  
                                                                      
                                                                   call(kb_local,_254034:_254040/_254042))), 
                                               show_failure( on_x_fail( Call1 :  
                                                                             
                                                                          call(kb_local,_269258:_269264/_269266))) }])))))
  '$pt'(baseKB,genlMt(_76460,baseKB),(_76460\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_local,_304686:mpred_f/7))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_local,_318654:mpred_f/7))) }])))>=(mpred_prop(baseKB,mpred_f,7,kb_local),'$pt'(baseKB,mpred_prop(_76586,_76588,_76590,kb_local),'$pt'(baseKB,genlMt(_76604,_76586),(_76604\=baseKB*->rhs(
                                           [ { nop( dmsg_pretty( Call :  
                                                                      
                                                                   call(kb_local,_357388:_357394/_357396))), 
                                               show_failure( on_x_fail( Call1 :  
                                                                             
                                                                          call(kb_local,_372612:_372618/_372620))) }])))))
  (mpred_prop(_76192,_76194,_76196,kb_shared),genlMt(_76208,_76192)/(_76208\=baseKB)==>{nop(dmsg_pretty(_76208:call(kb_shared,_76208:_76194/_76196))),show_failure(on_x_fail(_76208:call(kb_shared,_76208:_76194/_76196)))})>=(predicateTriggerType(kb_shared),'$pt'(baseKB,predicateTriggerType(_76312),rhs(
                                                             [ ( ( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop) , 
                                                                   genlMt(GenlMt,GenlMt10)/(BaseKB\=baseKB)) ==> 
                                                                 { nop( dmsg_pretty( Call :  
                                                                                          
                                                                                       call(Kw,_422010:_422016/_422018))), 
                                                                   show_failure( on_x_fail( Call8 :  
                                                                                                 
                                                                                              call(Kw7,_436200:_436206/_436208))) })])))
  '$pt'(baseKB,mpred_prop(_75858,_75860,_75862,kb_shared),'$pt'(baseKB,genlMt(_75876,_75858),(_75876\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                              
                                                                                                                                           call(kb_shared,_475638:_475644/_475646))), 
                                                                                                                       show_failure( on_x_fail( Call1 :  
                                                                                                                                                     
                                                                                                                                                  call(kb_shared,_491132:_491138/_491140))) }]))))>=((mpred_prop(_75996,_75998,_76000,kb_shared),genlMt(_76012,_75996)/(_76012\=baseKB)==>{nop(dmsg_pretty(_76012:call(kb_shared,_76012:_75998/_76000))),show_failure(on_x_fail(_76012:call(kb_shared,_76012:_75998/_76000)))}),mfl4(
                                                             [ 'Type'=Type, 
                                                               'M'=_76128, 
                                                               'F'=_76140, 
                                                               'A'=_76152, 
                                                               'C'=_76164],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169))
  '$pt'(baseKB,genlMt(_75592,baseKB),(_75592\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_112010:never_assert_u/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_126254:never_assert_u/1))) }])))>=(mpred_prop(baseKB,never_assert_u,1,kb_shared),'$pt'(baseKB,mpred_prop(_75718,_75720,_75722,kb_shared),'$pt'(baseKB,genlMt(_75736,_75718),(_75736\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_165716:_165722/_165724))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_181210:_181216/_181218))) }])))))
  '$pt'(baseKB,genlMt(_75326,baseKB),(_75326\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_217364:never_assert_u/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_231608:never_assert_u/2))) }])))>=(mpred_prop(baseKB,never_assert_u,2,kb_shared),'$pt'(baseKB,mpred_prop(_75452,_75454,_75456,kb_shared),'$pt'(baseKB,genlMt(_75470,_75452),(_75470\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_271070:_271076/_271078))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_286564:_286570/_286572))) }])))))
  '$pt'(baseKB,genlMt(_75060,baseKB),(_75060\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_322718:never_retract_u/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_336966:never_retract_u/1))) }])))>=(mpred_prop(baseKB,never_retract_u,1,kb_shared),'$pt'(baseKB,mpred_prop(_75186,_75188,_75190,kb_shared),'$pt'(baseKB,genlMt(_75204,_75186),(_75204\=baseKB*->rhs(
                                                              [ { nop( dmsg_pretty( Call :  
                                                                                         
                                                                                      call(kb_shared,_376432:_376438/_376440))), 
                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                
                                                                                             call(kb_shared,_391926:_391932/_391934))) }])))))
  '$pt'(baseKB,genlMt(_74794,baseKB),(_74794\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_428082:never_retract_u/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_442330:never_retract_u/2))) }])))>=(mpred_prop(baseKB,never_retract_u,2,kb_shared),'$pt'(baseKB,mpred_prop(_74920,_74922,_74924,kb_shared),'$pt'(baseKB,genlMt(_74938,_74920),(_74938\=baseKB*->rhs(
                                                              [ { nop( dmsg_pretty( Call :  
                                                                                         
                                                                                      call(kb_shared,_481796:_481802/_481804))), 
                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                
                                                                                             call(kb_shared,_497290:_497296/_497298))) }])))))
  '$pt'(baseKB,genlMt(_74528,baseKB),(_74528\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_108398:mtExact/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_122640:mtExact/1))) }])))>=(mpred_prop(baseKB,mtExact,1,kb_shared),'$pt'(baseKB,mpred_prop(_74654,_74656,_74658,kb_shared),'$pt'(baseKB,genlMt(_74672,_74654),(_74672\=baseKB*->rhs(
                                              [ { nop( dmsg_pretty( Call :  
                                                                         
                                                                      call(kb_shared,_162098:_162104/_162106))), 
                                                  show_failure( on_x_fail( Call1 :  
                                                                                
                                                                             call(kb_shared,_177592:_177598/_177600))) }])))))
  '$pt'(baseKB,genlMt(_74262,baseKB),(_74262\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_213744:col_as_unary/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_227988:col_as_unary/1))) }])))>=(mpred_prop(baseKB,col_as_unary,1,kb_shared),'$pt'(baseKB,mpred_prop(_74388,_74390,_74392,kb_shared),'$pt'(baseKB,genlMt(_74406,_74388),(_74406\=baseKB*->rhs(
                                                        [ { nop( dmsg_pretty( Call :  
                                                                                   
                                                                                call(kb_shared,_267448:_267454/_267456))), 
                                                            show_failure( on_x_fail( Call1 :  
                                                                                          
                                                                                       call(kb_shared,_282942:_282948/_282950))) }])))))
  '$pt'(baseKB,genlMt(_73996,baseKB),(_73996\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_319096:comment/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_333338:comment/2))) }])))>=(mpred_prop(baseKB,comment,2,kb_shared),'$pt'(baseKB,mpred_prop(_74122,_74124,_74126,kb_shared),'$pt'(baseKB,genlMt(_74140,_74122),(_74140\=baseKB*->rhs(
                                              [ { nop( dmsg_pretty( Call :  
                                                                         
                                                                      call(kb_shared,_372796:_372802/_372804))), 
                                                  show_failure( on_x_fail( Call1 :  
                                                                                
                                                                             call(kb_shared,_388290:_388296/_388298))) }])))))
  '$pt'(baseKB,genlMt(_73730,baseKB),(_73730\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_424442:feature_setting/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_438690:feature_setting/2))) }])))>=(mpred_prop(baseKB,feature_setting,2,kb_shared),'$pt'(baseKB,mpred_prop(_73856,_73858,_73860,kb_shared),'$pt'(baseKB,genlMt(_73874,_73856),(_73874\=baseKB*->rhs(
                                                              [ { nop( dmsg_pretty( Call :  
                                                                                         
                                                                                      call(kb_shared,_478156:_478162/_478164))), 
                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                
                                                                                             call(kb_shared,_493650:_493656/_493658))) }])))))
  '$pt'(baseKB,genlMt(_73464,baseKB),(_73464\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_105308:hybrid_support/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_119552:hybrid_support/2))) }])))>=(mpred_prop(baseKB,hybrid_support,2,kb_shared),'$pt'(baseKB,mpred_prop(_73590,_73592,_73594,kb_shared),'$pt'(baseKB,genlMt(_73608,_73590),(_73608\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_159014:_159020/_159022))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_174508:_174514/_174516))) }])))))
  '$pt'(baseKB,genlMt(_73198,baseKB),(_73198\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_210662:predicateConventionMt/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_224912:predicateConventionMt/2))) }])))>=(mpred_prop(baseKB,predicateConventionMt,2,kb_shared),'$pt'(baseKB,mpred_prop(_73324,_73326,_73328,kb_shared),'$pt'(baseKB,genlMt(_73342,_73324),(_73342\=baseKB*->rhs(
                                                                          [ { nop( dmsg_pretty( Call :  
                                                                                                     
                                                                                                  call(kb_shared,_264382:_264388/_264390))), 
                                                                              show_failure( on_x_fail( Call1 :  
                                                                                                            
                                                                                                         call(kb_shared,_279876:_279882/_279884))) }])))))
  '$pt'(baseKB,genlMt(_72932,baseKB),(_72932\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_316034:startup_option/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_330278:startup_option/2))) }])))>=(mpred_prop(baseKB,startup_option,2,kb_shared),'$pt'(baseKB,mpred_prop(_73058,_73060,_73062,kb_shared),'$pt'(baseKB,genlMt(_73076,_73058),(_73076\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_369740:_369746/_369748))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_385234:_385240/_385242))) }])))))
  '$pt'(baseKB,genlMt(_72666,baseKB),(_72666\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_421388:tooSlow/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_435630:tooSlow/0))) }])))>=(mpred_prop(baseKB,tooSlow,0,kb_shared),'$pt'(baseKB,mpred_prop(_72792,_72794,_72796,kb_shared),'$pt'(baseKB,genlMt(_72810,_72792),(_72810\=baseKB*->rhs(
                                              [ { nop( dmsg_pretty( Call :  
                                                                         
                                                                      call(kb_shared,_475088:_475094/_475096))), 
                                                  show_failure( on_x_fail( Call1 :  
                                                                                
                                                                             call(kb_shared,_490582:_490588/_490590))) }])))))
  '$pt'(baseKB,genlMt(_72400,baseKB),(_72400\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_102426:ttRelationType/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_116670:ttRelationType/1))) }])))>=(mpred_prop(baseKB,ttRelationType,1,kb_shared),'$pt'(baseKB,mpred_prop(_72526,_72528,_72530,kb_shared),'$pt'(baseKB,genlMt(_72544,_72526),(_72544\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_156132:_156138/_156140))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_171626:_171632/_171634))) }])))))
  '$pt'(baseKB,genlMt(_72134,baseKB),(_72134\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_207780:singleValuedInArg/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_222028:singleValuedInArg/2))) }])))>=(mpred_prop(baseKB,singleValuedInArg,2,kb_shared),'$pt'(baseKB,mpred_prop(_72260,_72262,_72264,kb_shared),'$pt'(baseKB,genlMt(_72278,_72260),(_72278\=baseKB*->rhs(
                                                                  [ { nop( dmsg_pretty( Call :  
                                                                                             
                                                                                          call(kb_shared,_261496:_261502/_261504))), 
                                                                      show_failure( on_x_fail( Call1 :  
                                                                                                    
                                                                                                 call(kb_shared,_276990:_276996/_276998))) }])))))
  '$pt'(baseKB,genlMt(_71868,baseKB),(_71868\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_313146:functorIsMacro/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_327390:functorIsMacro/1))) }])))>=(mpred_prop(baseKB,functorIsMacro,1,kb_shared),'$pt'(baseKB,mpred_prop(_71994,_71996,_71998,kb_shared),'$pt'(baseKB,genlMt(_72012,_71994),(_72012\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_366852:_366858/_366860))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_382346:_382352/_382354))) }])))))
  '$pt'(baseKB,genlMt(_71602,baseKB),(_71602\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_418500:support_hilog/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_432744:support_hilog/2))) }])))>=(mpred_prop(baseKB,support_hilog,2,kb_shared),'$pt'(baseKB,mpred_prop(_71728,_71730,_71732,kb_shared),'$pt'(baseKB,genlMt(_71746,_71728),(_71746\=baseKB*->rhs(
                                                          [ { nop( dmsg_pretty( Call :  
                                                                                     
                                                                                  call(kb_shared,_472206:_472212/_472214))), 
                                                              show_failure( on_x_fail( Call1 :  
                                                                                            
                                                                                         call(kb_shared,_487700:_487706/_487708))) }])))))
  '$pt'(baseKB,genlMt(_71336,baseKB),(_71336\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_101212:mpred_undo_sys/3))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_115456:mpred_undo_sys/3))) }])))>=(mpred_prop(baseKB,mpred_undo_sys,3,kb_shared),'$pt'(baseKB,mpred_prop(_71462,_71464,_71466,kb_shared),'$pt'(baseKB,genlMt(_71480,_71462),(_71480\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_154918:_154924/_154926))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_170412:_170418/_170420))) }])))))
  '$pt'(baseKB,genlMt(_71070,baseKB),(_71070\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_206566:genlPreds/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_220808:genlPreds/2))) }])))>=(mpred_prop(baseKB,genlPreds,2,kb_shared),'$pt'(baseKB,mpred_prop(_71196,_71198,_71200,kb_shared),'$pt'(baseKB,genlMt(_71214,_71196),(_71214\=baseKB*->rhs(
                                                  [ { nop( dmsg_pretty( Call :  
                                                                             
                                                                          call(kb_shared,_260268:_260274/_260276))), 
                                                      show_failure( on_x_fail( Call1 :  
                                                                                    
                                                                                 call(kb_shared,_275762:_275768/_275770))) }])))))
  '$pt'(baseKB,genlMt(_70804,baseKB),(_70804\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_311914:alwaysGaf/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_326156:alwaysGaf/1))) }])))>=(mpred_prop(baseKB,alwaysGaf,1,kb_shared),'$pt'(baseKB,mpred_prop(_70930,_70932,_70934,kb_shared),'$pt'(baseKB,genlMt(_70948,_70930),(_70948\=baseKB*->rhs(
                                                  [ { nop( dmsg_pretty( Call :  
                                                                             
                                                                          call(kb_shared,_365616:_365622/_365624))), 
                                                      show_failure( on_x_fail( Call1 :  
                                                                                    
                                                                                 call(kb_shared,_381110:_381116/_381118))) }])))))
  '$pt'(baseKB,genlMt(_70538,baseKB),(_70538\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_417262:rtReformulatorDirectivePredicate/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_431522:rtReformulatorDirectivePredicate/1))) }])))>=(mpred_prop(baseKB,rtReformulatorDirectivePredicate,1,kb_shared),'$pt'(baseKB,mpred_prop(_70664,_70666,_70668,kb_shared),'$pt'(baseKB,genlMt(_70682,_70664),(_70682\=baseKB*->rhs(
                                                                                                [ { nop( dmsg_pretty( Call :  
                                                                                                                           
                                                                                                                        call(kb_shared,_471004:_471010/_471012))), 
                                                                                                    show_failure( on_x_fail( Call1 :  
                                                                                                                                  
                                                                                                                               call(kb_shared,_486498:_486504/_486506))) }])))))
  '$pt'(baseKB,genlMt(_70272,baseKB),(_70272\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_98122:rtAvoidForwardChain/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_112370:rtAvoidForwardChain/1))) }])))>=(mpred_prop(baseKB,rtAvoidForwardChain,1,kb_shared),'$pt'(baseKB,mpred_prop(_70398,_70400,_70402,kb_shared),'$pt'(baseKB,genlMt(_70416,_70398),(_70416\=baseKB*->rhs(
                                                                      [ { nop( dmsg_pretty( Call :  
                                                                                                 
                                                                                              call(kb_shared,_151838:_151844/_151846))), 
                                                                          show_failure( on_x_fail( Call1 :  
                                                                                                        
                                                                                                     call(kb_shared,_167332:_167338/_167340))) }])))))
  '$pt'(baseKB,genlMt(_70006,baseKB),(_70006\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_203490:pfcControlled/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_217734:pfcControlled/1))) }])))>=(mpred_prop(baseKB,pfcControlled,1,kb_shared),'$pt'(baseKB,mpred_prop(_70132,_70134,_70136,kb_shared),'$pt'(baseKB,genlMt(_70150,_70132),(_70150\=baseKB*->rhs(
                                                          [ { nop( dmsg_pretty( Call :  
                                                                                     
                                                                                  call(kb_shared,_257196:_257202/_257204))), 
                                                              show_failure( on_x_fail( Call1 :  
                                                                                            
                                                                                         call(kb_shared,_272690:_272696/_272698))) }])))))
  '$pt'(baseKB,genlMt(_69740,baseKB),(_69740\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_308844:prologOnly/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_323086:prologOnly/1))) }])))>=(mpred_prop(baseKB,prologOnly,1,kb_shared),'$pt'(baseKB,mpred_prop(_69866,_69868,_69870,kb_shared),'$pt'(baseKB,genlMt(_69884,_69866),(_69884\=baseKB*->rhs(
                                                    [ { nop( dmsg_pretty( Call :  
                                                                               
                                                                            call(kb_shared,_362546:_362552/_362554))), 
                                                        show_failure( on_x_fail( Call1 :  
                                                                                      
                                                                                   call(kb_shared,_378040:_378046/_378048))) }])))))
  '$pt'(baseKB,genlMt(_69474,baseKB),(_69474\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_414192:quasiQuote/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_428434:quasiQuote/1))) }])))>=(mpred_prop(baseKB,quasiQuote,1,kb_shared),'$pt'(baseKB,mpred_prop(_69600,_69602,_69604,kb_shared),'$pt'(baseKB,genlMt(_69618,_69600),(_69618\=baseKB*->rhs(
                                                    [ { nop( dmsg_pretty( Call :  
                                                                               
                                                                            call(kb_shared,_467894:_467900/_467902))), 
                                                        show_failure( on_x_fail( Call1 :  
                                                                                      
                                                                                   call(kb_shared,_483388:_483394/_483396))) }])))))
  '$pt'(baseKB,genlMt(_69208,baseKB),(_69208\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_98122:functorDeclares/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_112366:functorDeclares/1))) }])))>=(mpred_prop(baseKB,functorDeclares,1,kb_shared),'$pt'(baseKB,mpred_prop(_69334,_69336,_69338,kb_shared),'$pt'(baseKB,genlMt(_69352,_69334),(_69352\=baseKB*->rhs(
                                                              [ { nop( dmsg_pretty( Call :  
                                                                                         
                                                                                      call(kb_shared,_151832:_151838/_151840))), 
                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                
                                                                                             call(kb_shared,_167326:_167332/_167334))) }])))))
  '$pt'(baseKB,genlMt(_68942,baseKB),(_68942\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_203482:mtNonAssertable/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_217730:mtNonAssertable/1))) }])))>=(mpred_prop(baseKB,mtNonAssertable,1,kb_shared),'$pt'(baseKB,mpred_prop(_69068,_69070,_69072,kb_shared),'$pt'(baseKB,genlMt(_69086,_69068),(_69086\=baseKB*->rhs(
                                                              [ { nop( dmsg_pretty( Call :  
                                                                                         
                                                                                      call(kb_shared,_257196:_257202/_257204))), 
                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                
                                                                                             call(kb_shared,_272690:_272696/_272698))) }])))))
  '$pt'(baseKB,genlMt(_68676,baseKB),(_68676\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_308846:do_import_modules/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_323094:do_import_modules/0))) }])))>=(mpred_prop(baseKB,do_import_modules,0,kb_shared),'$pt'(baseKB,mpred_prop(_68802,_68804,_68806,kb_shared),'$pt'(baseKB,genlMt(_68820,_68802),(_68820\=baseKB*->rhs(
                                                                  [ { nop( dmsg_pretty( Call :  
                                                                                             
                                                                                          call(kb_shared,_362562:_362568/_362570))), 
                                                                      show_failure( on_x_fail( Call1 :  
                                                                                                    
                                                                                                 call(kb_shared,_378056:_378062/_378064))) }])))))
  (mpred_prop(_68408,_68410,_68412,kb_global),genlMt(_68424,_68408)/(_68424\=baseKB)==>{nop(dmsg_pretty(_68424:call(kb_global,_68424:_68410/_68412))),show_failure(on_x_fail(_68424:call(kb_global,_68424:_68410/_68412)))})>=(predicateTriggerType(kb_global),'$pt'(baseKB,predicateTriggerType(_68528),rhs(
                                                             [ ( ( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop) , 
                                                                   genlMt(GenlMt,GenlMt10)/(BaseKB\=baseKB)) ==> 
                                                                 { nop( dmsg_pretty( Call :  
                                                                                          
                                                                                       call(Kw,_427462:_427468/_427470))), 
                                                                   show_failure( on_x_fail( Call8 :  
                                                                                                 
                                                                                              call(Kw7,_441652:_441658/_441660))) })])))
  '$pt'(baseKB,mpred_prop(_68074,_68076,_68078,kb_global),'$pt'(baseKB,genlMt(_68092,_68074),(_68092\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                              
                                                                                                                                           call(kb_global,_481090:_481096/_481098))), 
                                                                                                                       show_failure( on_x_fail( Call1 :  
                                                                                                                                                     
                                                                                                                                                  call(kb_global,_496584:_496590/_496592))) }]))))>=((mpred_prop(_68212,_68214,_68216,kb_global),genlMt(_68228,_68212)/(_68228\=baseKB)==>{nop(dmsg_pretty(_68228:call(kb_global,_68228:_68214/_68216))),show_failure(on_x_fail(_68228:call(kb_global,_68228:_68214/_68216)))}),mfl4(
                                                             [ 'Type'=Type, 
                                                               'M'=_68344, 
                                                               'F'=_68356, 
                                                               'A'=_68368, 
                                                               'C'=_68380],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169))
  (mpred_prop(_67806,_67808,_67810,kbi_define),genlMt(_67822,_67806)/(_67822\=baseKB)==>{nop(dmsg_pretty(_67822:call(kbi_define,_67822:_67808/_67810))),show_failure(on_x_fail(_67822:call(kbi_define,_67822:_67808/_67810)))})>=(predicateTriggerType(kbi_define),'$pt'(baseKB,predicateTriggerType(_67926),rhs(
                                                                 [ ( ( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop) , 
                                                                       genlMt(GenlMt,GenlMt10)/(BaseKB\=baseKB)) ==> 
                                                                     { nop( dmsg_pretty( Call :  
                                                                                              
                                                                                           call(Kw,_130538:_130544/_130546))), 
                                                                       show_failure( on_x_fail( Call8 :  
                                                                                                     
                                                                                                  call(Kw7,_144728:_144734/_144736))) })])))
  '$pt'(baseKB,mpred_prop(_67472,_67474,_67476,kbi_define),'$pt'(baseKB,genlMt(_67490,_67472),(_67490\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                                                                               
                                                                                                                                            call(kbi_define,_184886:_184892/_184894))), 
                                                                                                                        show_failure( on_x_fail( Call1 :  
                                                                                                                                                      
                                                                                                                                                   call(kbi_define,_200650:_200656/_200658))) }]))))>=((mpred_prop(_67610,_67612,_67614,kbi_define),genlMt(_67626,_67610)/(_67626\=baseKB)==>{nop(dmsg_pretty(_67626:call(kbi_define,_67626:_67612/_67614))),show_failure(on_x_fail(_67626:call(kbi_define,_67626:_67612/_67614)))}),mfl4(
                                                                  [ 'Type'=Type, 
                                                                    'M'=_67742, 
                                                                    'F'=_67754, 
                                                                    'A'=_67766, 
                                                                    'C'=_67778],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',169))
  (genlMt(_67316,_67318)/(is_ftNonvar(_67316),is_ftNonvar(_67318),_67318\==baseKB,mtProlog(_67318))==>{_67318\==user,catch(add_import_module(_67316,_67318,end),error(_67390,_67392),dmsg_pretty(error(add_import_module(_67316,_67318,end))))})>=(mfl4(
        [ 'C'=C, 
          'P'=_67318],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',181),ax)
  mpred_prop(baseKB,\==,2,pfcCallCode)>=(mfl4([ 'C'=C, 
                                                'P'=_67288],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',181),ax)
  mpred_prop(baseKB,catch,3,pfcCallCode)>=(mfl4([ 'C'=C, 
                                                  'P'=_67226],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',181),ax)
  mpred_prop(baseKB,is_ftNonvar,1,pfcCallCode)>=(mfl4([ 'C'=C, 
                                                        'P'=_67164],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',181),ax)
  mpred_prop(baseKB,mtProlog,1,pfcCallCode)>=(mfl4([ 'C'=C, 
                                                     'P'=_67102],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',181),ax)
  '$pt'(baseKB,genlMt(_66784,_66786),(is_ftNonvar(_66784),is_ftNonvar(_66786),_66786\==baseKB,mtProlog(_66786)*->rhs([ { User\==user, 
                                                                                                                         catch( add_import_module(Add_import_module,End,end), 
                                                                                                                           error(Error,Error6), 
                                                                                                                           dmsg_pretty( error( add_import_module(Add_import_module5,End4,end)))) }])))>=((genlMt(_66914,_66916)/(is_ftNonvar(_66914),is_ftNonvar(_66916),_66916\==baseKB,mtProlog(_66916))==>{_66916\==user,catch(add_import_module(_66914,_66916,end),error(_66988,_66990),dmsg_pretty(error(add_import_module(_66914,_66916,end))))}),mfl4(
                                                                                     [ 'C'=C, 
                                                                                       'P'=_67040],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',181))
  (mtHybrid(_66724)==>{decl_assertable_module(_66724)})>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',190),ax)
  mpred_prop(baseKB,decl_assertable_module,1,pfcCallCode)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',190),ax)
  '$pt'(baseKB,mtHybrid(_66588),rhs([ { decl_assertable_module(Module) }]))>=((mtHybrid(_66622)==>{decl_assertable_module(_66622)}),mfl4(
                 [ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',190))
  predicateConventionMt(genlMt,baseKB)>=(mfl4(_66558,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',194),ax)
  predicateConventionMt(mtHybrid,baseKB)>=(mfl4(_66524,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',195),ax)
  predicateConventionMt(mtProlog,baseKB)>=(mfl4(_66490,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',196),ax)
  (predicateConventionMt(_66382,_66384),arity(_66382,_66390)==>{kb_global(_66384:_66382/_66390)})>=(mfl4([ 'F'=F, 
                                                                                                           'MT'=_66384, 
                                                                                                           'A'=_66390],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199),ax)
  mpred_prop(baseKB,kb_global,1,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                      'MT'=_66342, 
                                                      'A'=_66354],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199),ax)
  mpred_prop(baseKB,predicateConventionMt,2,pfcLHS)>=(mfl4([ 'F'=F, 
                                                             'MT'=_66268, 
                                                             'A'=_66280],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199),ax)
  mpred_prop(baseKB,predicateConventionMt,2,pfcPosTrigger)>=(mfl4([ 'F'=F, 
                                                                    'MT'=_66194, 
                                                                    'A'=_66206],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199),ax)
  '$pt'(baseKB,predicateConventionMt(_65992,_65994),(arity(_65992,_66006)*->rhs([ { kb_global( _312644 :  
                                                                                                    
                                                                                                 _312650/_312652) }])))>=((predicateConventionMt(_66058,_66060),arity(_66058,_66066)==>{kb_global(_66060:_66058/_66066)}),mfl4(
                                                                                                       [ 'F'=F, 
                                                                                                         'MT'=_66120, 
                                                                                                         'A'=_66132],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199))
  mpred_prop(baseKB,predicateConventionMt,2,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                                  'MT'=_65956, 
                                                                  'A'=_65968],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199),ax)
  '$pt'(baseKB,arity(_65754,_65756),(predicateConventionMt(_65754,_65768)*->rhs([ { kb_global( _336758 :  
                                                                                                    
                                                                                                 _336764/_336766) }])))>=((predicateConventionMt(_65820,_65822),arity(_65820,_65828)==>{kb_global(_65822:_65820/_65828)}),mfl4(
                                                                                                       [ 'F'=F, 
                                                                                                         'MT'=_65882, 
                                                                                                         'A'=_65894],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',199))
  ttTypeType(ttTypeType)>=(mfl4(_65724,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',203),ax)
  ttTypeType(ttRelationType)>=(mfl4(_65692,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',204),ax)
  (ttTypeType(_65634)==>functorDeclares(_65634))>=(mfl4([ 'TT'=TT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',205),ax)
  mpred_prop(baseKB,functorDeclares,1,pfcRHS)>=(mfl4([ 'TT'=TT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',205),ax)
  mpred_prop(baseKB,ttTypeType,1,pfcLHS)>=(mfl4([ 'TT'=TT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',205),ax)
  mpred_prop(baseKB,ttTypeType,1,pfcPosTrigger)>=(mfl4([ 'TT'=TT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',205),ax)
  '$pt'(baseKB,ttTypeType(_65406),rhs([ functorDeclares(FunctorDeclares)]))>=((ttTypeType(_65436)==>functorDeclares(_65436)),mfl4(
          [ 'TT'=TT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',205))
  functorDeclares(ttTypeType)>=(ttTypeType(ttTypeType),'$pt'(baseKB,ttTypeType(_65368),rhs([ functorDeclares(FunctorDeclares)])))
  functorDeclares(ttRelationType)>=(ttTypeType(ttRelationType),'$pt'(baseKB,ttTypeType(_65316),rhs([ functorDeclares(FunctorDeclares)])))
  ttTypeType(ttModuleType)>=(mfl4(_65272,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',207),ax)
  functorDeclares(ttModuleType)>=(ttTypeType(ttModuleType),'$pt'(baseKB,ttTypeType(ttModuleType),rhs([ functorDeclares(ttModuleType)])))
  mudToCyc(ttModuleType,'MicrotheoryType')>=(mfl4(_65188,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',207),ax)
  typeGenls(ttModuleType,tMicrotheory)>=(mfl4(_65154,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',208),ax)
  ttModuleType(tSourceCode)>=(mfl4(_65120,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',210),ax)
  mudToCyc(tSourceCode,tComputerCode)>=(mfl4(_65088,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',210),ax)
  comment(tSourceCode,"Source code files containing callable features")>=(mfl4(_65054,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',210),ax)
  ttModuleType(tSourceData)>=(mfl4(_65004,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',211),ax)
  mudToCyc(tSourceData,iboPropositionalInformationThing)>=(mfl4(_64972,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',211),ax)
  comment(tSourceData,"Source data files containing world state information")>=(mfl4(_64938,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',211),ax)
  (ttRelationType(_64846)==>{decl_rt(_64846)},functorDeclares(_64846))>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',213),ax)
  mpred_prop(baseKB,decl_rt,1,pfcCallCode)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',213),ax)
  mpred_prop(baseKB,ttRelationType,1,pfcLHS)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',213),ax)
  mpred_prop(baseKB,ttRelationType,1,pfcPosTrigger)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',213),ax)
  '$pt'(baseKB,ttRelationType(_64590),rhs([ { decl_rt(Rt) }, 
                                            functorDeclares(_64590)]))>=((ttRelationType(_64634)==>{decl_rt(_64634)},functorDeclares(_64634)),mfl4(
                           [ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',213))
  (functorDeclares(_64522)==>arityMax(_64522,1),functorIsMacro(_64522))>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',216),ax)
  mpred_prop(baseKB,arityMax,2,pfcRHS)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',216),ax)
  mpred_prop(baseKB,functorIsMacro,1,pfcRHS)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',216),ax)
  mpred_prop(baseKB,functorDeclares,1,pfcLHS)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',216),ax)
  mpred_prop(baseKB,functorDeclares,1,pfcPosTrigger)>=(mfl4([ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',216),ax)
  '$pt'(baseKB,functorDeclares(_64220),rhs([ arityMax(_415628,1), 
                                             functorIsMacro(_64220)]))>=((functorDeclares(_64262)==>arityMax(_64262,1),functorIsMacro(_64262)),mfl4(
                            [ 'RT'=RT],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',216))
  arityMax(ttTypeType,1)>=(functorDeclares(ttTypeType),'$pt'(baseKB,functorDeclares(_64170),rhs([ arityMax(_423618,1), 
                                                                                                  functorIsMacro(_64170)])))
  functorIsMacro(ttTypeType)>=(functorDeclares(ttTypeType),'$pt'(baseKB,functorDeclares(_64104),rhs([ arityMax(_428248,1), 
                                                                                                      functorIsMacro(_64104)])))
  arityMax(ttRelationType,1)>=(functorDeclares(ttRelationType),'$pt'(baseKB,functorDeclares(_64040),rhs([ arityMax(_432878,1), 
                                                                                                          functorIsMacro(_64040)])))
  functorIsMacro(ttRelationType)>=(functorDeclares(ttRelationType),'$pt'(baseKB,functorDeclares(_63974),rhs([ arityMax(_437510,1), 
                                                                                                              functorIsMacro(_63974)])))
  arityMax(ttModuleType,1)>=(functorDeclares(ttModuleType),'$pt'(baseKB,functorDeclares(_63910),rhs([ arityMax(_442142,1), 
                                                                                                      functorIsMacro(_63910)])))
  functorIsMacro(ttModuleType)>=(functorDeclares(ttModuleType),'$pt'(baseKB,functorDeclares(_63844),rhs([ arityMax(_446772,1), 
                                                                                                          functorIsMacro(_63844)])))
  mpred_prop(baseKB,compilerDirective,1,kb_shared)>=(mfl4(_63800,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',222),ax)
  '$pt'(baseKB,genlMt(_63526,baseKB),(_63526\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_482454:compilerDirective/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_496702:compilerDirective/1))) }])))>=(mpred_prop(baseKB,compilerDirective,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,compilerDirective,1,kb_shared),'$pt'(baseKB,genlMt(_63526,baseKB),(_63526\=baseKB*->rhs(
                                                                        [ { nop( dmsg_pretty( Call :  
                                                                                                   
                                                                                                call(kb_shared,_112010:compilerDirective/1))), 
                                                                            show_failure( on_x_fail( Call1 :  
                                                                                                          
                                                                                                       call(kb_shared,_126258:compilerDirective/1))) }])))))
  functorDeclares(compilerDirective)>=(mfl4(_63496,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',223),ax)
  arityMax(compilerDirective,1)>=(functorDeclares(compilerDirective),'$pt'(baseKB,functorDeclares(compilerDirective),rhs(
 [ arityMax(compilerDirective,1), 
   functorIsMacro(compilerDirective)])))
  functorIsMacro(compilerDirective)>=(functorDeclares(compilerDirective),'$pt'(baseKB,functorDeclares(compilerDirective),rhs(
     [ arityMax(compilerDirective,1), 
       functorIsMacro(compilerDirective)])))
  (compilerDirective(_63298)==>{kb_shared(_63298/0)})>=(mfl4([ 'F'=F],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',225),ax)
  mpred_prop(baseKB,kb_shared,1,pfcCallCode)>=(mfl4([ 'F'=F],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',225),ax)
  mpred_prop(baseKB,compilerDirective,1,pfcLHS)>=(mfl4([ 'F'=F],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',225),ax)
  mpred_prop(baseKB,compilerDirective,1,pfcPosTrigger)>=(mfl4([ 'F'=F],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',225),ax)
  '$pt'(baseKB,compilerDirective(_63050),rhs([ { kb_shared( _157380/0) }]))>=((compilerDirective(_63090)==>{kb_shared(_63090/0)}),mfl4(
               [ 'F'=F],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',225))
  compilerDirective(hardCodedExpansion)>=(mfl4(_63020,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',227),ax)
  mpred_prop(baseKB,hardCodedExpansion,0,kb_shared)>=((mfl4(_62978,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',227),ax),mfl4(_62988,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',227))
  '$pt'(baseKB,genlMt(_62698,baseKB),(_62698\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_195102:hardCodedExpansion/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_209350:hardCodedExpansion/0))) }])))>=(mpred_prop(baseKB,hardCodedExpansion,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,hardCodedExpansion,0,kb_shared),'$pt'(baseKB,genlMt(_62698,baseKB),(_62698\=baseKB*->rhs(
                                                                           [ { nop( dmsg_pretty( Call :  
                                                                                                      
                                                                                                   call(kb_shared,_245586:hardCodedExpansion/0))), 
                                                                               show_failure( on_x_fail( Call1 :  
                                                                                                             
                                                                                                          call(kb_shared,_259834:hardCodedExpansion/0))) }])))))
  comment(hardCodedExpansion,"Is Already Implemented From Code")>=(mfl4(_62668,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',227),ax)
  compilerDirective(codeTooSlow)>=(mfl4(_62620,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',228),ax)
  mpred_prop(baseKB,codeTooSlow,0,kb_shared)>=((mfl4(_62578,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',228),ax),mfl4(_62588,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',228))
  '$pt'(baseKB,genlMt(_62298,baseKB),(_62298\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_296028:codeTooSlow/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_310270:codeTooSlow/0))) }])))>=(mpred_prop(baseKB,codeTooSlow,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,codeTooSlow,0,kb_shared),'$pt'(baseKB,genlMt(_62298,baseKB),(_62298\=baseKB*->rhs(
                                                      [ { nop( dmsg_pretty( Call :  
                                                                                 
                                                                              call(kb_shared,_346498:codeTooSlow/0))), 
                                                          show_failure( on_x_fail( Call1 :  
                                                                                        
                                                                                     call(kb_shared,_360740:codeTooSlow/0))) }])))))
  comment(codeTooSlow,"A faster more incomplete version is filling in for it")>=(mfl4(_62268,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',228),ax)
  compilerDirective(pfc_checking)>=(mfl4(_62216,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',229),ax)
  mpred_prop(baseKB,pfc_checking,0,kb_shared)>=((mfl4(_62174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',229),ax),mfl4(_62184,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',229))
  '$pt'(baseKB,genlMt(_61894,baseKB),(_61894\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_396922:pfc_checking/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_411166:pfc_checking/0))) }])))>=(mpred_prop(baseKB,pfc_checking,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,pfc_checking,0,kb_shared),'$pt'(baseKB,genlMt(_61894,baseKB),(_61894\=baseKB*->rhs(
                                                         [ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_447394:pfc_checking/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_461638:pfc_checking/0))) }])))))
  comment(pfc_checking,"Checks for common Pfc Errors")>=(mfl4(_61864,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',229),ax)
  compilerDirective(pass2)>=(mfl4(_61818,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',230),ax)
  mpred_prop(baseKB,pass2,0,kb_shared)>=((mfl4(_61776,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',230),ax),mfl4(_61786,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',230))
  '$pt'(baseKB,genlMt(_61496,baseKB),(_61496\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_497820:pass2/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_93804:pass2/0))) }])))>=(mpred_prop(baseKB,pass2,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,pass2,0,kb_shared),'$pt'(baseKB,genlMt(_61496,baseKB),(_61496\=baseKB*->rhs(
                                   [ { nop( dmsg_pretty( Call :  
                                                              
                                                           call(kb_shared,_130024:pass2/0))), 
                                       show_failure( on_x_fail( Call1 :  
                                                                     
                                                                  call(kb_shared,_144262:pass2/0))) }])))))
  comment(pass2,"Probably not needed at first")>=(mfl4(_61466,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',230),ax)
  compilerDirective(tooSlow)>=(mfl4(_61420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',231),ax)
  comment(tooSlow,"Slow and Probably not needed at first")>=(mfl4(_61388,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',231),ax)
  compilerDirective(redundantMaybe)>=(mfl4(_61340,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',232),ax)
  mpred_prop(baseKB,redundantMaybe,0,kb_shared)>=((mfl4(_61298,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',232),ax),mfl4(_61308,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',232))
  '$pt'(baseKB,genlMt(_61018,baseKB),(_61018\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_180456:redundantMaybe/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_194700:redundantMaybe/0))) }])))>=(mpred_prop(baseKB,redundantMaybe,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,redundantMaybe,0,kb_shared),'$pt'(baseKB,genlMt(_61018,baseKB),(_61018\=baseKB*->rhs(
                                                               [ { nop( dmsg_pretty( Call :  
                                                                                          
                                                                                       call(kb_shared,_230930:redundantMaybe/0))), 
                                                                   show_failure( on_x_fail( Call1 :  
                                                                                                 
                                                                                              call(kb_shared,_245174:redundantMaybe/0))) }])))))
  comment(redundantMaybe,"Probably redundant")>=(mfl4(_60988,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',232),ax)
  compilerDirective(isRedundant)>=(mfl4(_60944,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',233),ax)
  mpred_prop(baseKB,isRedundant,0,kb_shared)>=((mfl4(_60902,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',233),ax),mfl4(_60912,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',233))
  '$pt'(baseKB,genlMt(_60622,baseKB),(_60622\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_281360:isRedundant/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_295602:isRedundant/0))) }])))>=(mpred_prop(baseKB,isRedundant,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,isRedundant,0,kb_shared),'$pt'(baseKB,genlMt(_60622,baseKB),(_60622\=baseKB*->rhs(
                                                      [ { nop( dmsg_pretty( Call :  
                                                                                 
                                                                              call(kb_shared,_331830:isRedundant/0))), 
                                                          show_failure( on_x_fail( Call1 :  
                                                                                        
                                                                                     call(kb_shared,_346072:isRedundant/0))) }])))))
  comment(isRedundant,"Redundant")>=(mfl4(_60592,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',233),ax)
  compilerDirective(isRuntime)>=(mfl4(_60550,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',234),ax)
  mpred_prop(baseKB,isRuntime,0,kb_shared)>=((mfl4(_60508,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',234),ax),mfl4(_60518,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',234))
  '$pt'(baseKB,genlMt(_60228,baseKB),(_60228\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_382254:isRuntime/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_396496:isRuntime/0))) }])))>=(mpred_prop(baseKB,isRuntime,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,isRuntime,0,kb_shared),'$pt'(baseKB,genlMt(_60228,baseKB),(_60228\=baseKB*->rhs(
                                                [ { nop( dmsg_pretty( Call :  
                                                                           
                                                                        call(kb_shared,_432724:isRuntime/0))), 
                                                    show_failure( on_x_fail( Call1 :  
                                                                                  
                                                                               call(kb_shared,_446966:isRuntime/0))) }])))))
  comment(isRuntime,"Only use rule/fact at runtime")>=(mfl4(_60198,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',234),ax)
  ttRelationType(prologBuiltin)>=(mfl4([ 'PredType'=prologBuiltin],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologBuiltin)>=(ttRelationType(prologBuiltin),'$pt'(baseKB,ttRelationType(prologBuiltin),rhs([ { decl_rt(prologBuiltin) }, 
                                                                                                                  functorDeclares(prologBuiltin)])))
  arityMax(prologBuiltin,1)>=(functorDeclares(prologBuiltin),'$pt'(baseKB,functorDeclares(prologBuiltin),rhs([ arityMax(prologBuiltin,1), 
                                                                                                               functorIsMacro(prologBuiltin)])))
  functorIsMacro(prologBuiltin)>=(functorDeclares(prologBuiltin),'$pt'(baseKB,functorDeclares(prologBuiltin),rhs([ arityMax(prologBuiltin,1), 
                                                                                                                   functorIsMacro(prologBuiltin)])))
  ttRelationType(prologDynamic)>=(mfl4([ 'PredType'=prologDynamic],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologDynamic)>=(ttRelationType(prologDynamic),'$pt'(baseKB,ttRelationType(prologDynamic),rhs([ { decl_rt(prologDynamic) }, 
                                                                                                                  functorDeclares(prologDynamic)])))
  arityMax(prologDynamic,1)>=(functorDeclares(prologDynamic),'$pt'(baseKB,functorDeclares(prologDynamic),rhs([ arityMax(prologDynamic,1), 
                                                                                                               functorIsMacro(prologDynamic)])))
  functorIsMacro(prologDynamic)>=(functorDeclares(prologDynamic),'$pt'(baseKB,functorDeclares(prologDynamic),rhs([ arityMax(prologDynamic,1), 
                                                                                                                   functorIsMacro(prologDynamic)])))
  ttRelationType(prologHybrid)>=(mfl4([ 'PredType'=prologHybrid],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologHybrid)>=(ttRelationType(prologHybrid),'$pt'(baseKB,ttRelationType(prologHybrid),rhs([ { decl_rt(prologHybrid) }, 
                                                                                                               functorDeclares(prologHybrid)])))
  arityMax(prologHybrid,1)>=(functorDeclares(prologHybrid),'$pt'(baseKB,functorDeclares(prologHybrid),rhs([ arityMax(prologHybrid,1), 
                                                                                                            functorIsMacro(prologHybrid)])))
  functorIsMacro(prologHybrid)>=(functorDeclares(prologHybrid),'$pt'(baseKB,functorDeclares(prologHybrid),rhs([ arityMax(prologHybrid,1), 
                                                                                                                functorIsMacro(prologHybrid)])))
  ttRelationType(singleValuedHybrid)>=(mfl4([ 'PredType'=singleValuedHybrid],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(singleValuedHybrid)>=(ttRelationType(singleValuedHybrid),'$pt'(baseKB,ttRelationType(singleValuedHybrid),rhs(
       [ { decl_rt(singleValuedHybrid) }, 
         functorDeclares(singleValuedHybrid)])))
  arityMax(singleValuedHybrid,1)>=(functorDeclares(singleValuedHybrid),'$pt'(baseKB,functorDeclares(singleValuedHybrid),rhs(
    [ arityMax(singleValuedHybrid,1), 
      functorIsMacro(singleValuedHybrid)])))
  functorIsMacro(singleValuedHybrid)>=(functorDeclares(singleValuedHybrid),'$pt'(baseKB,functorDeclares(singleValuedHybrid),rhs(
        [ arityMax(singleValuedHybrid,1), 
          functorIsMacro(singleValuedHybrid)])))
  ttRelationType(prologKIF)>=(mfl4([ 'PredType'=prologKIF],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologKIF)>=(ttRelationType(prologKIF),'$pt'(baseKB,ttRelationType(prologKIF),rhs([ { decl_rt(prologKIF) }, 
                                                                                                      functorDeclares(prologKIF)])))
  arityMax(prologKIF,1)>=(functorDeclares(prologKIF),'$pt'(baseKB,functorDeclares(prologKIF),rhs([ arityMax(prologKIF,1), 
                                                                                                   functorIsMacro(prologKIF)])))
  functorIsMacro(prologKIF)>=(functorDeclares(prologKIF),'$pt'(baseKB,functorDeclares(prologKIF),rhs([ arityMax(prologKIF,1), 
                                                                                                       functorIsMacro(prologKIF)])))
  ttRelationType(prologPTTP)>=(mfl4([ 'PredType'=prologPTTP],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologPTTP)>=(ttRelationType(prologPTTP),'$pt'(baseKB,ttRelationType(prologPTTP),rhs([ { decl_rt(prologPTTP) }, 
                                                                                                         functorDeclares(prologPTTP)])))
  arityMax(prologPTTP,1)>=(functorDeclares(prologPTTP),'$pt'(baseKB,functorDeclares(prologPTTP),rhs([ arityMax(prologPTTP,1), 
                                                                                                      functorIsMacro(prologPTTP)])))
  functorIsMacro(prologPTTP)>=(functorDeclares(prologPTTP),'$pt'(baseKB,functorDeclares(prologPTTP),rhs([ arityMax(prologPTTP,1), 
                                                                                                          functorIsMacro(prologPTTP)])))
  ttRelationType(pfcMustFC)>=(mfl4([ 'PredType'=pfcMustFC],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(pfcMustFC)>=(ttRelationType(pfcMustFC),'$pt'(baseKB,ttRelationType(pfcMustFC),rhs([ { decl_rt(pfcMustFC) }, 
                                                                                                      functorDeclares(pfcMustFC)])))
  arityMax(pfcMustFC,1)>=(functorDeclares(pfcMustFC),'$pt'(baseKB,functorDeclares(pfcMustFC),rhs([ arityMax(pfcMustFC,1), 
                                                                                                   functorIsMacro(pfcMustFC)])))
  functorIsMacro(pfcMustFC)>=(functorDeclares(pfcMustFC),'$pt'(baseKB,functorDeclares(pfcMustFC),rhs([ arityMax(pfcMustFC,1), 
                                                                                                       functorIsMacro(pfcMustFC)])))
  ttRelationType(prologListValued)>=(mfl4([ 'PredType'=prologListValued],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologListValued)>=(ttRelationType(prologListValued),'$pt'(baseKB,ttRelationType(prologListValued),rhs(
 [ { decl_rt(prologListValued) }, 
   functorDeclares(prologListValued)])))
  arityMax(prologListValued,1)>=(functorDeclares(prologListValued),'$pt'(baseKB,functorDeclares(prologListValued),rhs([ arityMax(prologListValued,1), 
                                                                                                                        functorIsMacro(prologListValued)])))
  functorIsMacro(prologListValued)>=(functorDeclares(prologListValued),'$pt'(baseKB,functorDeclares(prologListValued),rhs(
  [ arityMax(prologListValued,1), 
    functorIsMacro(prologListValued)])))
  ttRelationType(prologMultiValued)>=(mfl4([ 'PredType'=prologMultiValued],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologMultiValued)>=(ttRelationType(prologMultiValued),'$pt'(baseKB,ttRelationType(prologMultiValued),rhs(
    [ { decl_rt(prologMultiValued) }, 
      functorDeclares(prologMultiValued)])))
  arityMax(prologMultiValued,1)>=(functorDeclares(prologMultiValued),'$pt'(baseKB,functorDeclares(prologMultiValued),rhs(
 [ arityMax(prologMultiValued,1), 
   functorIsMacro(prologMultiValued)])))
  functorIsMacro(prologMultiValued)>=(functorDeclares(prologMultiValued),'$pt'(baseKB,functorDeclares(prologMultiValued),rhs(
     [ arityMax(prologMultiValued,1), 
       functorIsMacro(prologMultiValued)])))
  ttRelationType(prologSingleValued)>=(mfl4([ 'PredType'=prologSingleValued],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologSingleValued)>=(ttRelationType(prologSingleValued),'$pt'(baseKB,ttRelationType(prologSingleValued),rhs(
       [ { decl_rt(prologSingleValued) }, 
         functorDeclares(prologSingleValued)])))
  arityMax(prologSingleValued,1)>=(functorDeclares(prologSingleValued),'$pt'(baseKB,functorDeclares(prologSingleValued),rhs(
    [ arityMax(prologSingleValued,1), 
      functorIsMacro(prologSingleValued)])))
  functorIsMacro(prologSingleValued)>=(functorDeclares(prologSingleValued),'$pt'(baseKB,functorDeclares(prologSingleValued),rhs(
        [ arityMax(prologSingleValued,1), 
          functorIsMacro(prologSingleValued)])))
  ttRelationType(prologOrdered)>=(mfl4([ 'PredType'=prologOrdered],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologOrdered)>=(ttRelationType(prologOrdered),'$pt'(baseKB,ttRelationType(prologOrdered),rhs([ { decl_rt(prologOrdered) }, 
                                                                                                                  functorDeclares(prologOrdered)])))
  arityMax(prologOrdered,1)>=(functorDeclares(prologOrdered),'$pt'(baseKB,functorDeclares(prologOrdered),rhs([ arityMax(prologOrdered,1), 
                                                                                                               functorIsMacro(prologOrdered)])))
  functorIsMacro(prologOrdered)>=(functorDeclares(prologOrdered),'$pt'(baseKB,functorDeclares(prologOrdered),rhs([ arityMax(prologOrdered,1), 
                                                                                                                   functorIsMacro(prologOrdered)])))
  ttRelationType(prologEquality)>=(mfl4([ 'PredType'=prologEquality],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologEquality)>=(ttRelationType(prologEquality),'$pt'(baseKB,ttRelationType(prologEquality),rhs([ { decl_rt(prologEquality) }, 
                                                                                                                     functorDeclares(prologEquality)])))
  arityMax(prologEquality,1)>=(functorDeclares(prologEquality),'$pt'(baseKB,functorDeclares(prologEquality),rhs([ arityMax(prologEquality,1), 
                                                                                                                  functorIsMacro(prologEquality)])))
  functorIsMacro(prologEquality)>=(functorDeclares(prologEquality),'$pt'(baseKB,functorDeclares(prologEquality),rhs([ arityMax(prologEquality,1), 
                                                                                                                      functorIsMacro(prologEquality)])))
  ttRelationType(rtArgsVerbatum)>=(mfl4([ 'PredType'=rtArgsVerbatum],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(rtArgsVerbatum)>=(ttRelationType(rtArgsVerbatum),'$pt'(baseKB,ttRelationType(rtArgsVerbatum),rhs([ { decl_rt(rtArgsVerbatum) }, 
                                                                                                                     functorDeclares(rtArgsVerbatum)])))
  arityMax(rtArgsVerbatum,1)>=(functorDeclares(rtArgsVerbatum),'$pt'(baseKB,functorDeclares(rtArgsVerbatum),rhs([ arityMax(rtArgsVerbatum,1), 
                                                                                                                  functorIsMacro(rtArgsVerbatum)])))
  functorIsMacro(rtArgsVerbatum)>=(functorDeclares(rtArgsVerbatum),'$pt'(baseKB,functorDeclares(rtArgsVerbatum),rhs([ arityMax(rtArgsVerbatum,1), 
                                                                                                                      functorIsMacro(rtArgsVerbatum)])))
  ttRelationType(prologSideEffects)>=(mfl4([ 'PredType'=prologSideEffects],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologSideEffects)>=(ttRelationType(prologSideEffects),'$pt'(baseKB,ttRelationType(prologSideEffects),rhs(
    [ { decl_rt(prologSideEffects) }, 
      functorDeclares(prologSideEffects)])))
  arityMax(prologSideEffects,1)>=(functorDeclares(prologSideEffects),'$pt'(baseKB,functorDeclares(prologSideEffects),rhs(
 [ arityMax(prologSideEffects,1), 
   functorIsMacro(prologSideEffects)])))
  functorIsMacro(prologSideEffects)>=(functorDeclares(prologSideEffects),'$pt'(baseKB,functorDeclares(prologSideEffects),rhs(
     [ arityMax(prologSideEffects,1), 
       functorIsMacro(prologSideEffects)])))
  ttRelationType(rtNotForUnboundPredicates)>=(mfl4([ 'PredType'=rtNotForUnboundPredicates],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(rtNotForUnboundPredicates)>=(ttRelationType(rtNotForUnboundPredicates),'$pt'(baseKB,ttRelationType(rtNotForUnboundPredicates),rhs(
                            [ { decl_rt(rtNotForUnboundPredicates) }, 
                              functorDeclares(rtNotForUnboundPredicates)])))
  arityMax(rtNotForUnboundPredicates,1)>=(functorDeclares(rtNotForUnboundPredicates),'$pt'(baseKB,functorDeclares(rtNotForUnboundPredicates),rhs(
                         [ arityMax(rtNotForUnboundPredicates,1), 
                           functorIsMacro(rtNotForUnboundPredicates)])))
  functorIsMacro(rtNotForUnboundPredicates)>=(functorDeclares(rtNotForUnboundPredicates),'$pt'(baseKB,functorDeclares(rtNotForUnboundPredicates),rhs(
                             [ arityMax(rtNotForUnboundPredicates,1), 
                               functorIsMacro(rtNotForUnboundPredicates)])))
  ttRelationType(rtAvoidForwardChain)>=(mfl4([ 'PredType'=rtAvoidForwardChain],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(rtAvoidForwardChain)>=(ttRelationType(rtAvoidForwardChain),'$pt'(baseKB,ttRelationType(rtAvoidForwardChain),rhs(
          [ { decl_rt(rtAvoidForwardChain) }, 
            functorDeclares(rtAvoidForwardChain)])))
  arityMax(rtAvoidForwardChain,1)>=(functorDeclares(rtAvoidForwardChain),'$pt'(baseKB,functorDeclares(rtAvoidForwardChain),rhs(
       [ arityMax(rtAvoidForwardChain,1), 
         functorIsMacro(rtAvoidForwardChain)])))
  functorIsMacro(rtAvoidForwardChain)>=(functorDeclares(rtAvoidForwardChain),'$pt'(baseKB,functorDeclares(rtAvoidForwardChain),rhs(
           [ arityMax(rtAvoidForwardChain,1), 
             functorIsMacro(rtAvoidForwardChain)])))
  ttRelationType(rtSymmetricBinaryPredicate)>=(mfl4([ 'PredType'=rtSymmetricBinaryPredicate],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(rtSymmetricBinaryPredicate)>=(ttRelationType(rtSymmetricBinaryPredicate),'$pt'(baseKB,ttRelationType(rtSymmetricBinaryPredicate),rhs(
                               [ { decl_rt(rtSymmetricBinaryPredicate) }, 
                                 functorDeclares(rtSymmetricBinaryPredicate)])))
  arityMax(rtSymmetricBinaryPredicate,1)>=(functorDeclares(rtSymmetricBinaryPredicate),'$pt'(baseKB,functorDeclares(rtSymmetricBinaryPredicate),rhs(
                            [ arityMax(rtSymmetricBinaryPredicate,1), 
                              functorIsMacro(rtSymmetricBinaryPredicate)])))
  functorIsMacro(rtSymmetricBinaryPredicate)>=(functorDeclares(rtSymmetricBinaryPredicate),'$pt'(baseKB,functorDeclares(rtSymmetricBinaryPredicate),rhs(
                                [ arityMax(rtSymmetricBinaryPredicate,1), 
                                  functorIsMacro(rtSymmetricBinaryPredicate)])))
  ttRelationType(predCanHaveSingletons)>=(mfl4([ 'PredType'=predCanHaveSingletons],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(predCanHaveSingletons)>=(ttRelationType(predCanHaveSingletons),'$pt'(baseKB,ttRelationType(predCanHaveSingletons),rhs(
                [ { decl_rt(predCanHaveSingletons) }, 
                  functorDeclares(predCanHaveSingletons)])))
  arityMax(predCanHaveSingletons,1)>=(functorDeclares(predCanHaveSingletons),'$pt'(baseKB,functorDeclares(predCanHaveSingletons),rhs(
             [ arityMax(predCanHaveSingletons,1), 
               functorIsMacro(predCanHaveSingletons)])))
  functorIsMacro(predCanHaveSingletons)>=(functorDeclares(predCanHaveSingletons),'$pt'(baseKB,functorDeclares(predCanHaveSingletons),rhs(
                 [ arityMax(predCanHaveSingletons,1), 
                   functorIsMacro(predCanHaveSingletons)])))
  ttRelationType(pfcControlled)>=(mfl4([ 'PredType'=pfcControlled],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(pfcControlled)>=(ttRelationType(pfcControlled),'$pt'(baseKB,ttRelationType(pfcControlled),rhs([ { decl_rt(pfcControlled) }, 
                                                                                                                  functorDeclares(pfcControlled)])))
  arityMax(pfcControlled,1)>=(functorDeclares(pfcControlled),'$pt'(baseKB,functorDeclares(pfcControlled),rhs([ arityMax(pfcControlled,1), 
                                                                                                               functorIsMacro(pfcControlled)])))
  functorIsMacro(pfcControlled)>=(functorDeclares(pfcControlled),'$pt'(baseKB,functorDeclares(pfcControlled),rhs([ arityMax(pfcControlled,1), 
                                                                                                                   functorIsMacro(pfcControlled)])))
  ttRelationType(prologNegByFailure)>=(mfl4([ 'PredType'=prologNegByFailure],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologNegByFailure)>=(ttRelationType(prologNegByFailure),'$pt'(baseKB,ttRelationType(prologNegByFailure),rhs(
       [ { decl_rt(prologNegByFailure) }, 
         functorDeclares(prologNegByFailure)])))
  arityMax(prologNegByFailure,1)>=(functorDeclares(prologNegByFailure),'$pt'(baseKB,functorDeclares(prologNegByFailure),rhs(
    [ arityMax(prologNegByFailure,1), 
      functorIsMacro(prologNegByFailure)])))
  functorIsMacro(prologNegByFailure)>=(functorDeclares(prologNegByFailure),'$pt'(baseKB,functorDeclares(prologNegByFailure),rhs(
        [ arityMax(prologNegByFailure,1), 
          functorIsMacro(prologNegByFailure)])))
  ttRelationType(prologIsFlag)>=(mfl4([ 'PredType'=prologIsFlag],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(prologIsFlag)>=(ttRelationType(prologIsFlag),'$pt'(baseKB,ttRelationType(prologIsFlag),rhs([ { decl_rt(prologIsFlag) }, 
                                                                                                               functorDeclares(prologIsFlag)])))
  arityMax(prologIsFlag,1)>=(functorDeclares(prologIsFlag),'$pt'(baseKB,functorDeclares(prologIsFlag),rhs([ arityMax(prologIsFlag,1), 
                                                                                                            functorIsMacro(prologIsFlag)])))
  functorIsMacro(prologIsFlag)>=(functorDeclares(prologIsFlag),'$pt'(baseKB,functorDeclares(prologIsFlag),rhs([ arityMax(prologIsFlag,1), 
                                                                                                                functorIsMacro(prologIsFlag)])))
  ttRelationType(tFunction)>=(mfl4([ 'PredType'=tFunction],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',237),ax)
  functorDeclares(tFunction)>=(ttRelationType(tFunction),'$pt'(baseKB,ttRelationType(tFunction),rhs([ { decl_rt(tFunction) }, 
                                                                                                      functorDeclares(tFunction)])))
  arityMax(tFunction,1)>=(functorDeclares(tFunction),'$pt'(baseKB,functorDeclares(tFunction),rhs([ arityMax(tFunction,1), 
                                                                                                   functorIsMacro(tFunction)])))
  functorIsMacro(tFunction)>=(functorDeclares(tFunction),'$pt'(baseKB,functorDeclares(tFunction),rhs([ arityMax(tFunction,1), 
                                                                                                       functorIsMacro(tFunction)])))
  mpred_prop(baseKB,do_and_undo,2,kb_shared)>=(mfl4(_54872,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',283),ax)
  '$pt'(baseKB,genlMt(_54598,baseKB),(_54598\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_344510:do_and_undo/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_358752:do_and_undo/2))) }])))>=(mpred_prop(baseKB,do_and_undo,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,do_and_undo,2,kb_shared),'$pt'(baseKB,genlMt(_54598,baseKB),(_54598\=baseKB*->rhs(
                                                      [ { nop( dmsg_pretty( Call :  
                                                                                 
                                                                              call(kb_shared,_394980:do_and_undo/2))), 
                                                          show_failure( on_x_fail( Call1 :  
                                                                                        
                                                                                     call(kb_shared,_409222:do_and_undo/2))) }])))))
  mpred_prop(baseKB,tFunction,1,kb_shared)>=(mfl4(_54568,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',284),ax)
  '$pt'(baseKB,genlMt(_54294,baseKB),(_54294\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_445380:tFunction/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_459622:tFunction/1))) }])))>=(mpred_prop(baseKB,tFunction,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,tFunction,1,kb_shared),'$pt'(baseKB,genlMt(_54294,baseKB),(_54294\=baseKB*->rhs(
                                                [ { nop( dmsg_pretty( Call :  
                                                                           
                                                                        call(kb_shared,_495850:tFunction/1))), 
                                                    show_failure( on_x_fail( Call1 :  
                                                                                  
                                                                               call(kb_shared,_95054:tFunction/1))) }])))))
  (do_and_undo(_54156,_54158):-cwc,atom(_54156),atom_concat(assert,_54186,_54156),!,atom_concat(delete,_54186,_54158),current_predicate(_54158/_54218))>=(mfl4(
                                       [ 'A'=A, 
                                         'U'=_54158, 
                                         'Suffix'=_54186],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',286),ax)
  (do_and_undo(_54038,_54040):-cwc,atom(_54038),atom_concat(def,_54068,_54038),atom_concat(un,_54038,_54040),current_predicate(_54040/_54094))>=(mfl4(
                              [ 'A'=A, 
                                'U'=_54040],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',287),ax)
  (do_and_undo(_53808,_53810):-cwc,strip_module(_53808,_53828,_53830),compound(_53830),_53830=..[_53856|_53858],lookup_u(do_and_undo(_53856,_53874)),_53884=..[_53874|_53858],_53810=_53828:_53884)>=(mfl4(
                                                                                   [ 'A'=A, 'U'=_53810,'M'=_53828,'P'=_53830,'F'=_53856,'ARGS'=_53858,'UF'=_53874
                                                                                     , 
                                                                                     'UA'=_53884],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',288),ax)
  (ll:-cwc,call(listing,[ isa/2, 
                          mtHybrid/1, 
                          col_as_unary/1, 
                          tRRP2/1, 
                          tRR/1, 
                          tRRP/1]))>=(mfl4(_53780,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',289),ax)
  arity(arity,2)>=(mfl4(_53662,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',293),ax)
  arity(do_and_undo,2)>=(mfl4(_53628,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',294),ax)
  arity(functorIsMacro,1)>=(mfl4(_53594,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',297),ax)
  functorIsMacro(functorIsMacro)>=(mfl4(_53560,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',299),ax)
  (prologHybrid(_53474),arity(_53474,_53480)==>{kb_shared(_53474/_53480)})>=(mfl4([ 'F'=F, 
                                                                                    'A'=_53480],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',301),ax)
  mpred_prop(baseKB,prologHybrid,1,pfcLHS)>=(mfl4([ 'F'=F, 
                                                    'A'=_53446],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',301),ax)
  mpred_prop(baseKB,prologHybrid,1,pfcPosTrigger)>=(mfl4([ 'F'=F, 
                                                           'A'=_53384],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',301),ax)
  '$pt'(baseKB,prologHybrid(_53210),(arity(_53210,_53222)*->rhs([ { kb_shared( _142602/_142604) }])))>=((prologHybrid(_53268),arity(_53268,_53274)==>{kb_shared(_53268/_53274)}),mfl4(
                                                              [ 'F'=F, 
                                                                'A'=_53322],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',301))
  mpred_prop(baseKB,prologHybrid,1,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                         'A'=_53186],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',301),ax)
  '$pt'(baseKB,arity(_53012,_53014),(prologHybrid(_53012)*->rhs([ { kb_shared( _160464/_160466) }])))>=((prologHybrid(_53070),arity(_53070,_53076)==>{kb_shared(_53070/_53076)}),mfl4(
                                                              [ 'F'=F, 
                                                                'A'=_53124],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',301))
  (pfcControlled(_52936),arity(_52936,_52942)==>hybrid_support(_52936,_52942))>=(mfl4([ 'P'=P, 
                                                                                        'A'=_52942],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313),ax)
  mpred_prop(baseKB,hybrid_support,2,pfcRHS)>=(mfl4([ 'P'=P, 
                                                      'A'=_52908],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313),ax)
  mpred_prop(baseKB,pfcControlled,1,pfcLHS)>=(mfl4([ 'P'=P, 
                                                     'A'=_52846],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313),ax)
  mpred_prop(baseKB,pfcControlled,1,pfcPosTrigger)>=(mfl4([ 'P'=P, 
                                                            'A'=_52784],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313),ax)
  '$pt'(baseKB,pfcControlled(_52626),(arity(_52626,_52638)*->rhs([ hybrid_support(Hybrid_support,Support)])))>=((pfcControlled(_52676),arity(_52676,_52682)==>hybrid_support(_52676,_52682)),mfl4(
                                                                          [ 'P'=P, 
                                                                            'A'=_52722],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313))
  mpred_prop(baseKB,pfcControlled,1,pfcCallCode)>=(mfl4([ 'P'=P, 
                                                          'A'=_52602],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313),ax)
  '$pt'(baseKB,arity(_52444,_52446),(pfcControlled(_52444)*->rhs([ hybrid_support(Hybrid_support,Support)])))>=((pfcControlled(_52494),arity(_52494,_52500)==>hybrid_support(_52494,_52500)),mfl4(
                                                                          [ 'P'=P, 
                                                                            'A'=_52540],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',313))
  rtArgsVerbatum(mpred_prop)>=(mfl4(_52414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',316),ax)
  rtArgsVerbatum(listing)>=(mfl4(_52382,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',317),ax)
  rtNotForUnboundPredicates(~)>=(mfl4(_52350,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',319),ax)
  rtNotForUnboundPredicates(t)>=(mfl4(_52318,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',320),ax)
  rtNotForUnboundPredicates(call)>=(mfl4(_52286,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',321),ax)
  (pfc_checking==>(mpred_prop(_52186,_52188,_52190,pfcPosTrigger)==>{_52186:warn_if_static(_52188,_52190)}))>=(mfl4([ 'M'=M, 
                                                                                                                      'F'=_52188, 
                                                                                                                      'A'=_52190],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',332),ax)
  mpred_prop(baseKB,warn_if_static,2,pfcCallCode)>=(mfl4([ 'M'=M, 
                                                           'F'=_52146, 
                                                           'A'=_52158],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',332),ax)
  mpred_prop(baseKB,pfc_checking,0,pfcLHS)>=(mfl4([ 'M'=M, 
                                                    'F'=_52072, 
                                                    'A'=_52084],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',332),ax)
  mpred_prop(baseKB,pfc_checking,0,pfcPosTrigger)>=(mfl4([ 'M'=M, 
                                                           'F'=_51998, 
                                                           'A'=_52010],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',332),ax)
  '$pt'(baseKB,pfc_checking,rhs([ ( mpred_prop(Mpred_prop2,Mpred_prop,PfcPosTrigger,pfcPosTrigger) ==> 
                                    { Warn_if_static4 :  
                                           
                                        warn_if_static(Warn_if_static,Static) })]))>=((pfc_checking==>(mpred_prop(_51868,_51870,_51872,pfcPosTrigger)==>{_51868:warn_if_static(_51870,_51872)})),mfl4(
                                                                              [ 'M'=M, 
                                                                                'F'=_51924, 
                                                                                'A'=_51936],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',332))
  (pfc_checking==>(mpred_prop(_51710,_51712,_51714,pfcNegTrigger)==>{_51710:warn_if_static(_51712,_51714)}))>=(mfl4([ 'M'=M, 
                                                                                                                      'F'=_51712, 
                                                                                                                      'A'=_51714],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',333),ax)
  '$pt'(baseKB,pfc_checking,rhs([ ( mpred_prop(Mpred_prop2,Mpred_prop,PfcNegTrigger,pfcNegTrigger) ==> 
                                    { Warn_if_static4 :  
                                           
                                        warn_if_static(Warn_if_static,Static) })]))>=((pfc_checking==>(mpred_prop(_51614,_51616,_51618,pfcNegTrigger)==>{_51614:warn_if_static(_51616,_51618)})),mfl4(
                                                                              [ 'M'=M, 
                                                                                'F'=_51670, 
                                                                                'A'=_51682],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',333))
  (pfc_checking==>(mpred_prop(_51456,_51458,_51460,pfcBcTrigger)==>{_51456:warn_if_static(_51458,_51460)}))>=(mfl4([ 'M'=M, 
                                                                                                                     'F'=_51458, 
                                                                                                                     'A'=_51460],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',334),ax)
  '$pt'(baseKB,pfc_checking,rhs([ ( mpred_prop(Mpred_prop2,Mpred_prop,PfcBcTrigger,pfcBcTrigger) ==> 
                                    { Warn_if_static4 :  
                                           
                                        warn_if_static(Warn_if_static,Static) })]))>=((pfc_checking==>(mpred_prop(_51360,_51362,_51364,pfcBcTrigger)==>{_51360:warn_if_static(_51362,_51364)})),mfl4(
                                                                             [ 'M'=M, 
                                                                               'F'=_51416, 
                                                                               'A'=_51428],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',334))
  (mpred_prop(_51174,_51176,_51178,_51180)/(\+ground(_51176/_51178))==>{trace_or_throw_ex(mpred_prop(_51174,_51176,_51178,_51180))})>=(mfl4(
                    [ 'M'=M, 
                      'F'=_51176, 
                      'A'=_51178, 
                      'What'=_51180],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',335),ax)
  mpred_prop(baseKB,trace_or_throw_ex,1,pfcCallCode)>=(mfl4([ 'M'=M, 
                                                              'F'=_51122, 
                                                              'A'=_51134, 
                                                              'What'=_51146],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',335),ax)
  mpred_prop(baseKB,ground,1,pfcCallCode)>=(mfl4([ 'M'=M, 
                                                   'F'=_51036, 
                                                   'A'=_51048, 
                                                   'What'=_51060],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',335),ax)
  '$pt'(baseKB,mpred_prop(_50802,_50804,_50806,_50808),(\+ground(_50804/_50806)*->rhs([ { trace_or_throw_ex( mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)) }])))>=((mpred_prop(_50878,_50880,_50882,_50884)/(\+ground(_50880/_50882))==>{trace_or_throw_ex(mpred_prop(_50878,_50880,_50882,_50884))}),mfl4(
                                                                  [ 'M'=M, 
                                                                    'F'=_50950, 
                                                                    'A'=_50962, 
                                                                    'What'=_50974],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',335))
  (mpred_prop(_50678,_50680,_50682,pfcCreates)==>{kb_shared(_50678:_50680/_50682)},{_50678:warn_if_static(_50680,_50682)})>=(mfl4(
          [ 'M'=M, 
            'F'=_50680, 
            'A'=_50682],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',338),ax)
  '$pt'(baseKB,mpred_prop(_50488,_50490,_50492,pfcCreates),rhs([ { kb_shared( _368696 :  
                                                                                   
                                                                                _368702/_368704) }, 
                                                                 { Warn_if_static1 :  
                                                                        
                                                                     warn_if_static(Warn_if_static,Static) }]))>=((mpred_prop(_50562,_50564,_50566,pfcCreates)==>{kb_shared(_50562:_50564/_50566)},{_50562:warn_if_static(_50564,_50566)}),mfl4(
                                                                                                                        [ 
  'M'=M, 
  'F'=_50644, 
  'A'=_50656],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',338))
  (mpred_prop(_50386,_50388,_50390,pfcControlled)==>{kb_shared(_50386:_50388/_50390)})>=(mfl4([ 'M'=M, 
                                                                                                'F'=_50388, 
                                                                                                'A'=_50390],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',342),ax)
  '$pt'(baseKB,mpred_prop(_50240,_50242,_50244,pfcControlled),rhs([ { kb_shared( _401230 :  
                                                                                      
                                                                                   _401236/_401238) }]))>=((mpred_prop(_50292,_50294,_50296,pfcControlled)==>{kb_shared(_50292:_50294/_50296)}),mfl4(
                                                                             [ 'M'=M, 
                                                                               'F'=_50352, 
                                                                               'A'=_50364],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',342))
  (mpred_prop(_50138,_50140,_50142,pfcWatches)==>{kb_shared(_50138:_50140/_50142)})>=(mfl4([ 'M'=M, 
                                                                                             'F'=_50140, 
                                                                                             'A'=_50142],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',343),ax)
  '$pt'(baseKB,mpred_prop(_49992,_49994,_49996,pfcWatches),rhs([ { kb_shared( _425340 :  
                                                                                   
                                                                                _425346/_425348) }]))>=((mpred_prop(_50044,_50046,_50048,pfcWatches)==>{kb_shared(_50044:_50046/_50048)}),mfl4(
                                                                       [ 'M'=M, 
                                                                         'F'=_50104, 
                                                                         'A'=_50116],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',343))
  (mpred_prop(_49900,_49902,_49904,pfcPosTrigger)==>mpred_prop(_49900,_49902,_49904,pfcWatches))>=(mfl4([ 'M'=M, 
                                                                                                          'F'=_49902, 
                                                                                                          'A'=_49904],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',346),ax)
  '$pt'(baseKB,mpred_prop(_49774,_49776,_49778,pfcPosTrigger),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)]))>=((mpred_prop(_49816,_49818,_49820,pfcPosTrigger)==>mpred_prop(_49816,_49818,_49820,pfcWatches)),mfl4(
                                                                                                              [ 'M'=M, 
                                                                                                                'F'=_49866, 
                                                                                                                'A'=_49878],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',346))
  mpred_prop(baseKB,pfcSanityA,0,pfcWatches)>=(mpred_prop(baseKB,pfcSanityA,0,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_49724,_49726,_49728,pfcPosTrigger),rhs(
                                     [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,pfcSanityA,0,kb_shared)>=((mfl4([ 'M'=M, 
                                                      'F'=_49616, 
                                                      'A'=_49628],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',346),ax),mfl4(
                                              [ 'M'=M, 
                                                'F'=_49616, 
                                                'A'=_49628],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',346))
  '$pt'(baseKB,genlMt(_49306,baseKB),(_49306\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_94200:pfcSanityA/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_108442:pfcSanityA/0))) }])))>=(mpred_prop(baseKB,pfcSanityA,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,pfcSanityA,0,kb_shared),'$pt'(baseKB,genlMt(_49306,baseKB),(_49306\=baseKB*->rhs(
                                                   [ { nop( dmsg_pretty( Call :  
                                                                              
                                                                           call(kb_shared,_144670:pfcSanityA/0))), 
                                                       show_failure( on_x_fail( Call1 :  
                                                                                     
                                                                                  call(kb_shared,_158912:pfcSanityA/0))) }])))))
  mpred_prop(baseKB,mtHybrid,1,pfcWatches)>=(mpred_prop(baseKB,mtHybrid,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_49256,_49258,_49260,pfcPosTrigger),rhs(
                                 [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,genlMt,2,pfcWatches)>=(mpred_prop(baseKB,genlMt,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_49180,_49182,_49184,pfcPosTrigger),rhs(
                             [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,predicateTriggerType,1,pfcWatches)>=(mpred_prop(baseKB,predicateTriggerType,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_49104,_49106,_49108,pfcPosTrigger),rhs(
                                                         [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,mpred_prop,4,pfcWatches)>=(mpred_prop(baseKB,mpred_prop,4,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_49028,_49030,_49032,pfcPosTrigger),rhs(
                                     [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,predicateConventionMt,2,pfcWatches)>=(mpred_prop(baseKB,predicateConventionMt,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48952,_48954,_48956,pfcPosTrigger),rhs(
                                                           [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,ttTypeType,1,pfcWatches)>=(mpred_prop(baseKB,ttTypeType,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48876,_48878,_48880,pfcPosTrigger),rhs(
                                     [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,ttTypeType,1,kb_shared)>=((mfl4([ 'M'=M, 
                                                      'F'=_48768, 
                                                      'A'=_48780],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',346),ax),mfl4(
                                              [ 'M'=M, 
                                                'F'=_48768, 
                                                'A'=_48780],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',346))
  '$pt'(baseKB,genlMt(_48458,baseKB),(_48458\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_252080:ttTypeType/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_266322:ttTypeType/1))) }])))>=(mpred_prop(baseKB,ttTypeType,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,ttTypeType,1,kb_shared),'$pt'(baseKB,genlMt(_48458,baseKB),(_48458\=baseKB*->rhs(
                                                   [ { nop( dmsg_pretty( Call :  
                                                                              
                                                                           call(kb_shared,_302550:ttTypeType/1))), 
                                                       show_failure( on_x_fail( Call1 :  
                                                                                     
                                                                                  call(kb_shared,_316792:ttTypeType/1))) }])))))
  mpred_prop(baseKB,ttRelationType,1,pfcWatches)>=(mpred_prop(baseKB,ttRelationType,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48408,_48410,_48412,pfcPosTrigger),rhs(
                                             [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,functorDeclares,1,pfcWatches)>=(mpred_prop(baseKB,functorDeclares,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48332,_48334,_48336,pfcPosTrigger),rhs(
                                               [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,compilerDirective,1,pfcWatches)>=(mpred_prop(baseKB,compilerDirective,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48256,_48258,_48260,pfcPosTrigger),rhs(
                                                   [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,prologHybrid,1,pfcWatches)>=(mpred_prop(baseKB,prologHybrid,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48180,_48182,_48184,pfcPosTrigger),rhs(
                                         [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,pfcControlled,1,pfcWatches)>=(mpred_prop(baseKB,pfcControlled,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48104,_48106,_48108,pfcPosTrigger),rhs(
                                           [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  mpred_prop(baseKB,pfc_checking,0,pfcWatches)>=(mpred_prop(baseKB,pfc_checking,0,pfcPosTrigger),'$pt'(baseKB,mpred_prop(_48028,_48030,_48032,pfcPosTrigger),rhs(
                                         [ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)])))
  (mpred_prop(_47910,_47912,_47914,pfcNegTrigger)==>mpred_prop(_47910,_47912,_47914,pfcWatches))>=(mfl4([ 'M'=M, 
                                                                                                          'F'=_47912, 
                                                                                                          'A'=_47914],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',347),ax)
  '$pt'(baseKB,mpred_prop(_47784,_47786,_47788,pfcNegTrigger),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcWatches,pfcWatches)]))>=((mpred_prop(_47826,_47828,_47830,pfcNegTrigger)==>mpred_prop(_47826,_47828,_47830,pfcWatches)),mfl4(
                                                                                                              [ 'M'=M, 
                                                                                                                'F'=_47876, 
                                                                                                                'A'=_47888],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',347))
  (mpred_prop(_47692,_47694,_47696,pfcBcTrigger)==>mpred_prop(_47692,_47694,_47696,pfcCreates))>=(mfl4([ 'M'=M, 
                                                                                                         'F'=_47694, 
                                                                                                         'A'=_47696],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',348),ax)
  '$pt'(baseKB,mpred_prop(_47566,_47568,_47570,pfcBcTrigger),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)]))>=((mpred_prop(_47608,_47610,_47612,pfcBcTrigger)==>mpred_prop(_47608,_47610,_47612,pfcCreates)),mfl4(
                                                                                                            [ 'M'=M, 
                                                                                                              'F'=_47658, 
                                                                                                              'A'=_47670],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',348))
  (mpred_prop(_47452,_47454,_47456,pfcLHS)==>arity(_47454,_47456),functorIsMacro(_47454),mpred_prop(_47452,_47454,_47456,pfcWatches))>=(mfl4(
                     [ 'M'=M, 
                       'F'=_47454, 
                       'A'=_47456],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',349),ax)
  '$pt'(baseKB,mpred_prop(_47282,_47284,_47286,pfcLHS),rhs([ arity(Arity,Arity1), 
                                                             functorIsMacro(_47284), 
                                                             mpred_prop(_47282,_47284,_47286,pfcWatches)]))>=((mpred_prop(_47346,_47348,_47350,pfcLHS)==>arity(_47348,_47350),functorIsMacro(_47348),mpred_prop(_47346,_47348,_47350,pfcWatches)),mfl4(
       [ 'M'=M, 
         'F'=_47418, 
         'A'=_47430],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',349))
  arity(pfcSanityA,0)>=(mpred_prop(baseKB,pfcSanityA,0,pfcLHS),'$pt'(baseKB,mpred_prop(_47210,_47212,_47214,pfcLHS),rhs([ 
  arity(Arity,Arity1), 
  functorIsMacro(_47212), 
  mpred_prop(_47210,_47212,_47214,pfcWatches)])))
  functorIsMacro(pfcSanityA)>=(mpred_prop(baseKB,pfcSanityA,0,pfcLHS),'$pt'(baseKB,mpred_prop(_47116,_47118,_47120,pfcLHS),rhs(
       [ arity(Arity,Arity1), 
         functorIsMacro(_47118), 
         mpred_prop(_47116,_47118,_47120,pfcWatches)])))
  mpred_prop(baseKB,pfcSanityA,0,pfcWatches)>=(mpred_prop(baseKB,pfcSanityA,0,pfcLHS),'$pt'(baseKB,mpred_prop(_47024,_47026,_47028,pfcLHS),rhs(
                       [ arity(Arity,Arity1), 
                         functorIsMacro(_47026), 
                         mpred_prop(_47024,_47026,_47028,pfcWatches)])))
  arity(mtHybrid,1)>=(mpred_prop(baseKB,mtHybrid,1,pfcLHS),'$pt'(baseKB,mpred_prop(_46926,_46928,_46930,pfcLHS),rhs([ arity(Arity,Arity1), 
                                                                                                                      functorIsMacro(_46928), 
                                                                                                                      mpred_prop(_46926,_46928,_46930,pfcWatches)])))
  functorIsMacro(mtHybrid)>=(mpred_prop(baseKB,mtHybrid,1,pfcLHS),'$pt'(baseKB,mpred_prop(_46832,_46834,_46836,pfcLHS),rhs(
   [ arity(Arity,Arity1), 
     functorIsMacro(_46834), 
     mpred_prop(_46832,_46834,_46836,pfcWatches)])))
  mpred_prop(baseKB,mtHybrid,1,pfcWatches)>=(mpred_prop(baseKB,mtHybrid,1,pfcLHS),'$pt'(baseKB,mpred_prop(_46740,_46742,_46744,pfcLHS),rhs(
                   [ arity(Arity,Arity1), 
                     functorIsMacro(_46742), 
                     mpred_prop(_46740,_46742,_46744,pfcWatches)])))
  arity(genlMt,2)>=(mpred_prop(baseKB,genlMt,2,pfcLHS),'$pt'(baseKB,mpred_prop(_46642,_46644,_46646,pfcLHS),rhs([ arity(Arity,Arity1), 
                                                                                                                  functorIsMacro(_46644), 
                                                                                                                  mpred_prop(_46642,_46644,_46646,pfcWatches)])))
  functorIsMacro(genlMt)>=(mpred_prop(baseKB,genlMt,2,pfcLHS),'$pt'(baseKB,mpred_prop(_46548,_46550,_46552,pfcLHS),rhs([ 
 arity(Arity,Arity1), 
 functorIsMacro(_46550), 
 mpred_prop(_46548,_46550,_46552,pfcWatches)])))
  mpred_prop(baseKB,genlMt,2,pfcWatches)>=(mpred_prop(baseKB,genlMt,2,pfcLHS),'$pt'(baseKB,mpred_prop(_46456,_46458,_46460,pfcLHS),rhs(
               [ arity(Arity,Arity1), 
                 functorIsMacro(_46458), 
                 mpred_prop(_46456,_46458,_46460,pfcWatches)])))
  arity(predicateTriggerType,1)>=(mpred_prop(baseKB,predicateTriggerType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_46358,_46360,_46362,pfcLHS),rhs(
                    [ arity(Arity,Arity1), 
                      functorIsMacro(_46360), 
                      mpred_prop(_46358,_46360,_46362,pfcWatches)])))
  functorIsMacro(predicateTriggerType)>=(mpred_prop(baseKB,predicateTriggerType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_46264,_46266,_46268,pfcLHS),rhs(
                           [ arity(Arity,Arity1), 
                             functorIsMacro(_46266), 
                             mpred_prop(_46264,_46266,_46268,pfcWatches)])))
  mpred_prop(baseKB,predicateTriggerType,1,pfcWatches)>=(mpred_prop(baseKB,predicateTriggerType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_46172,_46174,_46176,pfcLHS),rhs(
                                           [ arity(Arity,Arity1), 
                                             functorIsMacro(_46174), 
                                             mpred_prop(_46172,_46174,_46176,pfcWatches)])))
  arity(mpred_prop,4)>=(mpred_prop(baseKB,mpred_prop,4,pfcLHS),'$pt'(baseKB,mpred_prop(_46074,_46076,_46078,pfcLHS),rhs([ 
  arity(Arity,Arity1), 
  functorIsMacro(_46076), 
  mpred_prop(_46074,_46076,_46078,pfcWatches)])))
  functorIsMacro(mpred_prop)>=(mpred_prop(baseKB,mpred_prop,4,pfcLHS),'$pt'(baseKB,mpred_prop(_45980,_45982,_45984,pfcLHS),rhs(
       [ arity(Arity,Arity1), 
         functorIsMacro(_45982), 
         mpred_prop(_45980,_45982,_45984,pfcWatches)])))
  mpred_prop(baseKB,mpred_prop,4,pfcWatches)>=(mpred_prop(baseKB,mpred_prop,4,pfcLHS),'$pt'(baseKB,mpred_prop(_45888,_45890,_45892,pfcLHS),rhs(
                       [ arity(Arity,Arity1), 
                         functorIsMacro(_45890), 
                         mpred_prop(_45888,_45890,_45892,pfcWatches)])))
  arity(predicateConventionMt,2)>=(mpred_prop(baseKB,predicateConventionMt,2,pfcLHS),'$pt'(baseKB,mpred_prop(_45790,_45792,_45794,pfcLHS),rhs(
                      [ arity(Arity,Arity1), 
                        functorIsMacro(_45792), 
                        mpred_prop(_45790,_45792,_45794,pfcWatches)])))
  functorIsMacro(predicateConventionMt)>=(mpred_prop(baseKB,predicateConventionMt,2,pfcLHS),'$pt'(baseKB,mpred_prop(_45696,_45698,_45700,pfcLHS),rhs(
                             [ arity(Arity,Arity1), 
                               functorIsMacro(_45698), 
                               mpred_prop(_45696,_45698,_45700,pfcWatches)])))
  mpred_prop(baseKB,predicateConventionMt,2,pfcWatches)>=(mpred_prop(baseKB,predicateConventionMt,2,pfcLHS),'$pt'(baseKB,mpred_prop(_45604,_45606,_45608,pfcLHS),rhs(
                                             [ arity(Arity,Arity1), 
                                               functorIsMacro(_45606), 
                                               mpred_prop(_45604,_45606,_45608,pfcWatches)])))
  arity(ttTypeType,1)>=(mpred_prop(baseKB,ttTypeType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_45506,_45508,_45510,pfcLHS),rhs([ 
  arity(Arity,Arity1), 
  functorIsMacro(_45508), 
  mpred_prop(_45506,_45508,_45510,pfcWatches)])))
  functorIsMacro(ttTypeType)>=(mpred_prop(baseKB,ttTypeType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_45412,_45414,_45416,pfcLHS),rhs(
       [ arity(Arity,Arity1), 
         functorIsMacro(_45414), 
         mpred_prop(_45412,_45414,_45416,pfcWatches)])))
  mpred_prop(baseKB,ttTypeType,1,pfcWatches)>=(mpred_prop(baseKB,ttTypeType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_45320,_45322,_45324,pfcLHS),rhs(
                       [ arity(Arity,Arity1), 
                         functorIsMacro(_45322), 
                         mpred_prop(_45320,_45322,_45324,pfcWatches)])))
  arity(ttRelationType,1)>=(mpred_prop(baseKB,ttRelationType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_45222,_45224,_45226,pfcLHS),rhs(
        [ arity(Arity,Arity1), 
          functorIsMacro(_45224), 
          mpred_prop(_45222,_45224,_45226,pfcWatches)])))
  functorIsMacro(ttRelationType)>=(mpred_prop(baseKB,ttRelationType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_45128,_45130,_45132,pfcLHS),rhs(
               [ arity(Arity,Arity1), 
                 functorIsMacro(_45130), 
                 mpred_prop(_45128,_45130,_45132,pfcWatches)])))
  mpred_prop(baseKB,ttRelationType,1,pfcWatches)>=(mpred_prop(baseKB,ttRelationType,1,pfcLHS),'$pt'(baseKB,mpred_prop(_45036,_45038,_45040,pfcLHS),rhs(
                               [ arity(Arity,Arity1), 
                                 functorIsMacro(_45038), 
                                 mpred_prop(_45036,_45038,_45040,pfcWatches)])))
  arity(functorDeclares,1)>=(mpred_prop(baseKB,functorDeclares,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44938,_44940,_44942,pfcLHS),rhs(
          [ arity(Arity,Arity1), 
            functorIsMacro(_44940), 
            mpred_prop(_44938,_44940,_44942,pfcWatches)])))
  functorIsMacro(functorDeclares)>=(mpred_prop(baseKB,functorDeclares,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44844,_44846,_44848,pfcLHS),rhs(
                 [ arity(Arity,Arity1), 
                   functorIsMacro(_44846), 
                   mpred_prop(_44844,_44846,_44848,pfcWatches)])))
  mpred_prop(baseKB,functorDeclares,1,pfcWatches)>=(mpred_prop(baseKB,functorDeclares,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44752,_44754,_44756,pfcLHS),rhs(
                                 [ arity(Arity,Arity1), 
                                   functorIsMacro(_44754), 
                                   mpred_prop(_44752,_44754,_44756,pfcWatches)])))
  arity(compilerDirective,1)>=(mpred_prop(baseKB,compilerDirective,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44654,_44656,_44658,pfcLHS),rhs(
              [ arity(Arity,Arity1), 
                functorIsMacro(_44656), 
                mpred_prop(_44654,_44656,_44658,pfcWatches)])))
  functorIsMacro(compilerDirective)>=(mpred_prop(baseKB,compilerDirective,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44560,_44562,_44564,pfcLHS),rhs(
                     [ arity(Arity,Arity1), 
                       functorIsMacro(_44562), 
                       mpred_prop(_44560,_44562,_44564,pfcWatches)])))
  mpred_prop(baseKB,compilerDirective,1,pfcWatches)>=(mpred_prop(baseKB,compilerDirective,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44468,_44470,_44472,pfcLHS),rhs(
                                     [ arity(Arity,Arity1), 
                                       functorIsMacro(_44470), 
                                       mpred_prop(_44468,_44470,_44472,pfcWatches)])))
  arity(prologHybrid,1)>=(mpred_prop(baseKB,prologHybrid,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44370,_44372,_44374,pfcLHS),rhs(
    [ arity(Arity,Arity1), 
      functorIsMacro(_44372), 
      mpred_prop(_44370,_44372,_44374,pfcWatches)])))
  functorIsMacro(prologHybrid)>=(mpred_prop(baseKB,prologHybrid,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44276,_44278,_44280,pfcLHS),rhs(
           [ arity(Arity,Arity1), 
             functorIsMacro(_44278), 
             mpred_prop(_44276,_44278,_44280,pfcWatches)])))
  mpred_prop(baseKB,prologHybrid,1,pfcWatches)>=(mpred_prop(baseKB,prologHybrid,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44184,_44186,_44188,pfcLHS),rhs(
                           [ arity(Arity,Arity1), 
                             functorIsMacro(_44186), 
                             mpred_prop(_44184,_44186,_44188,pfcWatches)])))
  arity(pfcControlled,1)>=(mpred_prop(baseKB,pfcControlled,1,pfcLHS),'$pt'(baseKB,mpred_prop(_44086,_44088,_44090,pfcLHS),rhs(
      [ arity(Arity,Arity1), 
        functorIsMacro(_44088), 
        mpred_prop(_44086,_44088,_44090,pfcWatches)])))
  functorIsMacro(pfcControlled)>=(mpred_prop(baseKB,pfcControlled,1,pfcLHS),'$pt'(baseKB,mpred_prop(_43992,_43994,_43996,pfcLHS),rhs(
             [ arity(Arity,Arity1), 
               functorIsMacro(_43994), 
               mpred_prop(_43992,_43994,_43996,pfcWatches)])))
  mpred_prop(baseKB,pfcControlled,1,pfcWatches)>=(mpred_prop(baseKB,pfcControlled,1,pfcLHS),'$pt'(baseKB,mpred_prop(_43900,_43902,_43904,pfcLHS),rhs(
                             [ arity(Arity,Arity1), 
                               functorIsMacro(_43902), 
                               mpred_prop(_43900,_43902,_43904,pfcWatches)])))
  arity(pfc_checking,0)>=(mpred_prop(baseKB,pfc_checking,0,pfcLHS),'$pt'(baseKB,mpred_prop(_43802,_43804,_43806,pfcLHS),rhs(
    [ arity(Arity,Arity1), 
      functorIsMacro(_43804), 
      mpred_prop(_43802,_43804,_43806,pfcWatches)])))
  functorIsMacro(pfc_checking)>=(mpred_prop(baseKB,pfc_checking,0,pfcLHS),'$pt'(baseKB,mpred_prop(_43708,_43710,_43712,pfcLHS),rhs(
           [ arity(Arity,Arity1), 
             functorIsMacro(_43710), 
             mpred_prop(_43708,_43710,_43712,pfcWatches)])))
  mpred_prop(baseKB,pfc_checking,0,pfcWatches)>=(mpred_prop(baseKB,pfc_checking,0,pfcLHS),'$pt'(baseKB,mpred_prop(_43616,_43618,_43620,pfcLHS),rhs(
                           [ arity(Arity,Arity1), 
                             functorIsMacro(_43618), 
                             mpred_prop(_43616,_43618,_43620,pfcWatches)])))
  (mpred_prop(_43498,_43500,_43502,pfcRHS)==>mpred_prop(_43498,_43500,_43502,pfcCreates))>=(mfl4([ 'M'=M, 
                                                                                                   'F'=_43500, 
                                                                                                   'A'=_43502],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',350),ax)
  '$pt'(baseKB,mpred_prop(_43372,_43374,_43376,pfcRHS),rhs([ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)]))>=((mpred_prop(_43414,_43416,_43418,pfcRHS)==>mpred_prop(_43414,_43416,_43418,pfcCreates)),mfl4(
                                                                                                [ 'M'=M, 
                                                                                                  'F'=_43464, 
                                                                                                  'A'=_43476],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',350))
  mpred_prop(baseKB,pfcSanityB,0,pfcCreates)>=(mpred_prop(baseKB,pfcSanityB,0,pfcRHS),'$pt'(baseKB,mpred_prop(_43322,_43324,_43326,pfcRHS),rhs(
                       [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  mpred_prop(baseKB,pfcSanityB,0,kb_shared)>=((mfl4([ 'M'=M, 
                                                      'F'=_43214, 
                                                      'A'=_43226],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',350),ax),mfl4(
                                              [ 'M'=M, 
                                                'F'=_43214, 
                                                'A'=_43226],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',350))
  '$pt'(baseKB,genlMt(_42904,baseKB),(_42904\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_334894:pfcSanityB/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_349136:pfcSanityB/0))) }])))>=(mpred_prop(baseKB,pfcSanityB,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,pfcSanityB,0,kb_shared),'$pt'(baseKB,genlMt(_42904,baseKB),(_42904\=baseKB*->rhs(
                                                   [ { nop( dmsg_pretty( Call :  
                                                                              
                                                                           call(kb_shared,_385364:pfcSanityB/0))), 
                                                       show_failure( on_x_fail( Call1 :  
                                                                                     
                                                                                  call(kb_shared,_399606:pfcSanityB/0))) }])))))
  mpred_prop(baseKB,genlMt,2,pfcCreates)>=(mpred_prop(baseKB,genlMt,2,pfcRHS),'$pt'(baseKB,mpred_prop(_42854,_42856,_42858,pfcRHS),rhs(
               [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  mpred_prop(baseKB,mpred_prop,4,pfcCreates)>=(mpred_prop(baseKB,mpred_prop,4,pfcRHS),'$pt'(baseKB,mpred_prop(_42778,_42780,_42782,pfcRHS),rhs(
                       [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  mpred_prop(baseKB,functorDeclares,1,pfcCreates)>=(mpred_prop(baseKB,functorDeclares,1,pfcRHS),'$pt'(baseKB,mpred_prop(_42702,_42704,_42706,pfcRHS),rhs(
                                 [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  mpred_prop(baseKB,arityMax,2,pfcCreates)>=(mpred_prop(baseKB,arityMax,2,pfcRHS),'$pt'(baseKB,mpred_prop(_42626,_42628,_42630,pfcRHS),rhs(
                   [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  mpred_prop(baseKB,arityMax,2,kb_shared)>=((mfl4([ 'M'=M, 
                                                    'F'=_42518, 
                                                    'A'=_42530],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',350),ax),mfl4(
                                            [ 'M'=M, 
                                              'F'=_42518, 
                                              'A'=_42530],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',350))
  '$pt'(baseKB,genlMt(_42208,baseKB),(_42208\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_477590:arityMax/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_491832:arityMax/2))) }])))>=(mpred_prop(baseKB,arityMax,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,arityMax,2,kb_shared),'$pt'(baseKB,genlMt(_42208,baseKB),(_42208\=baseKB*->rhs(
                                             [ { nop( dmsg_pretty( Call :  
                                                                        
                                                                     call(kb_shared,_116886:arityMax/2))), 
                                                 show_failure( on_x_fail( Call1 :  
                                                                               
                                                                            call(kb_shared,_131128:arityMax/2))) }])))))
  mpred_prop(baseKB,functorIsMacro,1,pfcCreates)>=(mpred_prop(baseKB,functorIsMacro,1,pfcRHS),'$pt'(baseKB,mpred_prop(_42158,_42160,_42162,pfcRHS),rhs(
                               [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  mpred_prop(baseKB,hybrid_support,2,pfcCreates)>=(mpred_prop(baseKB,hybrid_support,2,pfcRHS),'$pt'(baseKB,mpred_prop(_42082,_42084,_42086,pfcRHS),rhs(
                               [ mpred_prop(Mpred_prop2,Mpred_prop,PfcCreates,pfcCreates)])))
  (mpred_prop(_41958,_41960,_41962,pfcCallCode)/predicate_is_undefined_fa(_41960,_41962)==>mpred_prop(_41958,_41960,_41962,needsDefined))>=(mfl4(
                         [ 'M'=M, 
                           'F'=_41960, 
                           'A'=_41962],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',354),ax)
  mpred_prop(baseKB,predicate_is_undefined_fa,2,pfcCallCode)>=(mfl4([ 'M'=M, 
                                                                      'F'=_41918, 
                                                                      'A'=_41930],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',354),ax)
  '$pt'(baseKB,mpred_prop(_41728,_41730,_41732,pfcCallCode),(predicate_is_undefined_fa(_41730,_41732)*->rhs([ mpred_prop(Mpred_prop2,Mpred_prop,NeedsDefined,needsDefined)])))>=((mpred_prop(_41788,_41790,_41792,pfcCallCode)/predicate_is_undefined_fa(_41790,_41792)==>mpred_prop(_41788,_41790,_41792,needsDefined)),mfl4(
                                                                              [ 'M'=M, 
                                                                                'F'=_41844, 
                                                                                'A'=_41856],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',354))
  genlPreds(pfcRHS,pfcControlled)>=(mfl4(_41698,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',360),ax)
  genlPreds(prologSideEffects,rtNotForUnboundPredicates)>=(mfl4(_41664,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',362),ax)
  mpred_prop(baseKB,nondet,0,kb_shared)>=(mfl4(_41630,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',364),ax)
  '$pt'(baseKB,genlMt(_41356,baseKB),(_41356\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_207792:nondet/0))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_222030:nondet/0))) }])))>=(mpred_prop(baseKB,nondet,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,nondet,0,kb_shared),'$pt'(baseKB,genlMt(_41356,baseKB),(_41356\=baseKB*->rhs(
                                       [ { nop( dmsg_pretty( Call :  
                                                                  
                                                               call(kb_shared,_258252:nondet/0))), 
                                           show_failure( on_x_fail( Call1 :  
                                                                         
                                                                      call(kb_shared,_272490:nondet/0))) }])))))
  mpred_prop(baseKB,typeCheckDecl,2,kb_shared)>=(mfl4(_41326,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',365),ax)
  '$pt'(baseKB,genlMt(_41052,baseKB),(_41052\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_308638:typeCheckDecl/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_322882:typeCheckDecl/2))) }])))>=(mpred_prop(baseKB,typeCheckDecl,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,typeCheckDecl,2,kb_shared),'$pt'(baseKB,genlMt(_41052,baseKB),(_41052\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_359112:typeCheckDecl/2))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_373356:typeCheckDecl/2))) }])))))
  nondet>=(mfl4(_41022,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',367),ax)
  mpred_prop(baseKB,warningsAbout,2,kb_shared)>=(mfl4(_40994,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',370),ax)
  '$pt'(baseKB,genlMt(_40720,baseKB),(_40720\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_409528:warningsAbout/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_423772:warningsAbout/2))) }])))>=(mpred_prop(baseKB,warningsAbout,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,warningsAbout,2,kb_shared),'$pt'(baseKB,genlMt(_40720,baseKB),(_40720\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_460002:warningsAbout/2))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_474246:warningsAbout/2))) }])))))
  arity(warningsAbout,2)>=((mfl4(_40680,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',372),ax),mfl4(_40690,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',372))
  prologHybrid(warningsAbout)>=(mfl4(_40640,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',372),ax)
  rtArgsVerbatum(warningsAbout)>=(mfl4(_40608,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',372),ax)
  (warningsAbout(_40516,_40518)==>{wdmsg_pfc(error(warningsAbout(_40516,_40518))),break})>=(mfl4([ 'Msg'=Msg, 
                                                                                                   'Why'=_40518],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',373),ax)
  mpred_prop(baseKB,wdmsg_pfc,1,pfcCallCode)>=(mfl4([ 'Msg'=Msg, 
                                                      'Why'=_40494],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',373),ax)
  mpred_prop(baseKB,break,0,pfcCallCode)>=(mfl4([ 'Msg'=Msg, 
                                                  'Why'=_40432],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',373),ax)
  mpred_prop(baseKB,warningsAbout,2,pfcLHS)>=(mfl4([ 'Msg'=Msg, 
                                                     'Why'=_40370],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',373),ax)
  arity(warningsAbout,2)>=(mpred_prop(baseKB,warningsAbout,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,warningsAbout,2,pfcLHS),rhs(
        [ arity(warningsAbout,2), 
          functorIsMacro(warningsAbout), 
          mpred_prop(baseKB,warningsAbout,2,pfcWatches)])))
  functorIsMacro(warningsAbout)>=(mpred_prop(baseKB,warningsAbout,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,warningsAbout,2,pfcLHS),rhs(
               [ arity(warningsAbout,2), 
                 functorIsMacro(warningsAbout), 
                 mpred_prop(baseKB,warningsAbout,2,pfcWatches)])))
  mpred_prop(baseKB,warningsAbout,2,pfcWatches)>=(mpred_prop(baseKB,warningsAbout,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,warningsAbout,2,pfcLHS),rhs(
                               [ arity(warningsAbout,2), 
                                 functorIsMacro(warningsAbout), 
                                 mpred_prop(baseKB,warningsAbout,2,pfcWatches)])))
  mpred_prop(baseKB,warningsAbout,2,pfcPosTrigger)>=(mfl4([ 'Msg'=Msg, 
                                                            'Why'=_40024],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',373),ax)
  mpred_prop(baseKB,warningsAbout,2,pfcWatches)>=(mpred_prop(baseKB,warningsAbout,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,warningsAbout,2,pfcPosTrigger),rhs(
                                             [ mpred_prop(baseKB,warningsAbout,2,pfcWatches)])))
  '$pt'(baseKB,warningsAbout(_39774,_39776),rhs([ { wdmsg_pfc( error( warningsAbout(WarningsAbout,WarningsAbout1))), 
                                                    break }]))>=((warningsAbout(_39826,_39828)==>{wdmsg_pfc(error(warningsAbout(_39826,_39828))),break}),mfl4(
                                      [ 'Msg'=Msg, 
                                        'Why'=_39886],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',373))
  (t(_39660):-cwc,call(into_plist_arities(3,10,_39660,[_39690|_39692])),mpred_plist_t(_39690,_39692))>=(mfl4([ 'CALL'=CALL, 
                                                                                                               'P'=_39690, 
                                                                                                               'LIST'=_39692],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',383),ax)
  (t(_39534,_39536):-cwc,atom(_39534),!,_39568=..[_39534,_39536],call_u(_39568))>=(mfl4([ 'A'=A, 
                                                                                          'B'=_39536, 
                                                                                          'ABC'=_39568],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',392),ax)
  (t(_39450,_39452):-cwc,mpred_fa_call(_39450,1,call(_39450,_39452)))>=(mfl4([ 'P'=P, 
                                                                               'A1'=_39452],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',395),ax)
  (t(_39350,_39352,_39354):-cwc,mpred_fa_call(_39350,2,call(_39350,_39352,_39354)))>=(mfl4([ 'P'=P, 
                                                                                             'A1'=_39352, 
                                                                                             'A2'=_39354],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',402),ax)
  (t(_39234,_39236,_39238,_39240):-cwc,mpred_fa_call(_39234,3,call(_39234,_39236,_39238,_39240)))>=(mfl4([ 'P'=P, 
                                                                                                           'A1'=_39236, 
                                                                                                           'A2'=_39238, 
                                                                                                           'A3'=_39240],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',411),ax)
  (t(_39102,_39104,_39106,_39108,_39110):-cwc,mpred_fa_call(_39102,4,call(_39102,_39104,_39106,_39108,_39110)))>=(mfl4([ 
 'P'=P, 
 'A1'=_39104, 
 'A2'=_39106, 
 'A3'=_39108, 
 'A4'=_39110],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',419),ax)
  (t(_38954,_38956,_38958,_38960,_38962,_38964):-cwc,mpred_fa_call(_38954,5,call(_38954,_38956,_38958,_38960,_38962,_38964)))>=(mfl4(
             [ 'P'=P, 
               'A1'=_38956, 
               'A2'=_38958, 
               'A3'=_38960, 
               'A4'=_38962, 
               'A5'=_38964],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',428),ax)
  (t(_38790,_38792,_38794,_38796,_38798,_38800,_38802):-cwc,mpred_fa_call(_38790,6,call(_38790,_38792,_38794,_38796,_38798,_38800,_38802)))>=(mfl4(
                           [ 'P'=P, 
                             'A1'=_38792, 
                             'A2'=_38794, 
                             'A3'=_38796, 
                             'A4'=_38798, 
                             'A5'=_38800, 
                             'A6'=_38802],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',437),ax)
  (t(_38610,_38612,_38614,_38616,_38618,_38620,_38622,_38624):-cwc,mpred_fa_call(_38610,7,call(_38610,_38612,_38614,_38616,_38618,_38620,_38622,_38624)))>=(mfl4(
                                         [ 'P'=P, 'A1'=_38612,'A2'=_38614,'A3'=_38616,'A4'=_38618,'A5'=_38620,'A6'=_38622
                                           , 
                                           'A7'=_38624],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',446),ax)
  typeCheckDecl(prologHybrid(_38556),callable(_38556))>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',452),ax)
  typeCheckDecl(pfcControlled(_38502),callable(_38502))>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',453),ax)
  arity(comment,2)>=(mfl4(_38474,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',456),ax)
  arity(alwaysGaf,1)>=(mfl4(_38440,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',460),ax)
  alwaysGaf(alwaysGaf)>=(mfl4(_38406,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',461),ax)
  alwaysGaf(pfcRHS)>=(mfl4(_38374,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',462),ax)
  alwaysGaf(pfcLHS)>=(mfl4(_38342,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',463),ax)
  (arity(_38234,_38236):-cwc,is_ftNameArity(_38234,_38236),current_predicate(_38234/_38236),_38236>1)>=(mfl4([ 'F'=F, 
                                                                                                               'A'=_38236],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',470),ax)
  (arity(_38168,1):-cwc,call_u(ttRelationType(_38168)))>=(mfl4([ 'F'=F],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',471),ax)
  arity(rtArgsVerbatum,1)>=(mfl4(_38140,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',474),ax)
  arity(quasiQuote,1)>=(mfl4(_38106,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',475),ax)
  rtArgsVerbatum('$spft')>=(mfl4(_38072,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',476),ax)
  quasiQuote(xQuoteFn)>=(mfl4(_38040,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',481),ax)
  rtArgsVerbatum(with_current_why)>=(mfl4(_38008,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',483),ax)
  rtArgsVerbatum(loop_check_term)>=(mfl4(_37976,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',484),ax)
  rtArgsVerbatum(loop_check_term_key)>=(mfl4(_37944,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',485),ax)
  rtArgsVerbatum(xQuoteFn)>=(mfl4(_37912,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',486),ax)
  rtArgsVerbatum('$VAR')>=(mfl4(_37880,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',487),ax)
  rtArgsVerbatum('NART')>=(mfl4(_37848,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',488),ax)
  (rtArgsVerbatum(_37770):-cwc,atom(_37770),atom_concat(_37790,'Fn',_37770))>=(mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',489),ax)
  rtArgsVerbatum(ain)>=(mfl4(_37742,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',490),ax)
  rtArgsVerbatum(ruleRewrite)>=(mfl4(_37710,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',491),ax)
  rtArgsVerbatum(mpred_action)>=(mfl4(_37678,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',492),ax)
  rtArgsVerbatum(mpred_rem)>=(mfl4(_37646,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',495),ax)
  rtArgsVerbatum(added)>=(mfl4(_37614,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',496),ax)
  rtArgsVerbatum(call)>=(mfl4(_37582,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',497),ax)
  rtArgsVerbatum(call_u)>=(mfl4(_37550,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',498),ax)
  rtArgsVerbatum(clause_asserted_i)>=(mfl4(_37518,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',499),ax)
  rtArgsVerbatum(member)>=(mfl4(_37486,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',500),ax)
  rtArgsVerbatum(<-)>=(mfl4(_37454,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',501),ax)
  rtArgsVerbatum(=..)>=(mfl4(_37422,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',502),ax)
  rtArgsVerbatum(second_order)>=(mfl4(_37390,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',504),ax)
  ('$bt'(_37284,_37286)/(nonvar(_37284),must(get_bc_clause(_37284,_37306)))==>{ignore(kb_shared(_37284))},_37306)>=(mfl4(
 [ 'P'=P, 
   'Post'=_37306],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521),ax)
  mpred_prop(baseKB,'$bt',2,pfcLHS)>=(mfl4([ 'P'=P, 
                                             'Post'=_37256],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521),ax)
  arity('$bt',2)>=(mpred_prop(baseKB,'$bt',2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,'$bt',2,pfcLHS),rhs([ arity('$bt',2), 
                                                                                                          functorIsMacro('$bt'), 
                                                                                                          mpred_prop(baseKB,'$bt',2,pfcWatches)])))
  functorIsMacro('$bt')>=(mpred_prop(baseKB,'$bt',2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,'$bt',2,pfcLHS),rhs([ arity('$bt',2), 
                                                                                                                 functorIsMacro('$bt'), 
                                                                                                                 mpred_prop(baseKB,'$bt',2,pfcWatches)])))
  mpred_prop(baseKB,'$bt',2,pfcWatches)>=(mpred_prop(baseKB,'$bt',2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,'$bt',2,pfcLHS),rhs(
       [ arity('$bt',2), 
         functorIsMacro('$bt'), 
         mpred_prop(baseKB,'$bt',2,pfcWatches)])))
  mpred_prop(baseKB,'$bt',2,kb_shared)>=((mfl4([ 'P'=P, 
                                                 'Post'=_36876],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521),ax),mfl4(
                                            [ 'P'=P, 
                                              'Post'=_36876],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521))
  '$pt'(baseKB,genlMt(_36566,baseKB),(_36566\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_259764:'$bt'/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_274002:'$bt'/2))) }])))>=(mpred_prop(baseKB,'$bt',2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,'$bt',2,kb_shared),'$pt'(baseKB,genlMt(_36566,baseKB),(_36566\=baseKB*->rhs(
                                    [ { nop( dmsg_pretty( Call :  
                                                               
                                                            call(kb_shared,_310224:'$bt'/2))), 
                                        show_failure( on_x_fail( Call1 :  
                                                                      
                                                                   call(kb_shared,_324462:'$bt'/2))) }])))))
  mpred_prop(baseKB,nonvar,1,pfcCallCode)>=(mfl4([ 'P'=P, 
                                                   'Post'=_36542],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521),ax)
  mpred_prop(baseKB,must,1,pfcCallCode)>=(mfl4([ 'P'=P, 
                                                 'Post'=_36480],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521),ax)
  mpred_prop(baseKB,'$bt',2,pfcPosTrigger)>=(mfl4([ 'P'=P, 
                                                    'Post'=_36418],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521),ax)
  mpred_prop(baseKB,'$bt',2,pfcWatches)>=(mpred_prop(baseKB,'$bt',2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,'$bt',2,pfcPosTrigger),rhs(
                     [ mpred_prop(baseKB,'$bt',2,pfcWatches)])))
  '$pt'(baseKB,'$bt'(_36128,_36130),(nonvar(_36128),must(get_bc_clause(_36128,_36156))*->rhs([ { ignore( kb_shared(Shared)) }, 
                                                                                               _36156])))>=(('$bt'(_36206,_36208)/(nonvar(_36206),must(get_bc_clause(_36206,_36228)))==>{ignore(kb_shared(_36206))},_36228),mfl4(
                                                                                                         [ 'P'=P, 
                                                                                                           'Post'=_36280],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',521))
  genlPreds(pfcMustFC,pfcControlled)>=(mfl4(_36098,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',530),ax)
  genlPreds(pfcControlled,prologHybrid)>=(mfl4(_36064,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',533),ax)
  (mpred_prop(_35938,_35940,_35942,_35944),genlPreds(_35944,_35950)==>mpred_prop(_35938,_35940,_35942,_35950))>=(mfl4([ 'M'=M, 
                                                                                                                        'F'=_35940, 
                                                                                                                        'A'=_35942, 
                                                                                                                        'R1'=_35944, 
                                                                                                                        'R2'=_35950],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535),ax)
  mpred_prop(baseKB,genlPreds,2,pfcCallCode)>=(mfl4([ 'M'=M, 
                                                      'F'=_35874, 
                                                      'A'=_35886, 
                                                      'R1'=_35898, 
                                                      'R2'=_35910],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535),ax)
  '$pt'(baseKB,mpred_prop(_35660,_35662,_35664,_35666),(genlPreds(_35666,_35678)*->rhs([ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)])))>=((mpred_prop(_35720,_35722,_35724,_35726),genlPreds(_35726,_35732)==>mpred_prop(_35720,_35722,_35724,_35732)),mfl4(
                     [ 'M'=M, 
                       'F'=_35776, 
                       'A'=_35788, 
                       'R1'=_35800, 
                       'R2'=_35812],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535))
  mpred_prop(baseKB,pfcSanityB,0,pfcControlled)>=(mpred_prop(baseKB,pfcSanityB,0,pfcRHS),'$pt'(baseKB,mpred_prop(_35598,_35600,_35602,_35604),(genlPreds(_35604,_35616)*->rhs(
                                                      [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,pfcSanityB,0,prologHybrid)>=(mpred_prop(baseKB,pfcSanityB,0,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,pfcSanityB,0,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                               [ mpred_prop(baseKB,pfcSanityB,0,prologHybrid)]))))
  mpred_prop(baseKB,genlMt,2,pfcControlled)>=(mpred_prop(baseKB,genlMt,2,pfcRHS),'$pt'(baseKB,mpred_prop(_35422,_35424,_35426,_35428),(genlPreds(_35428,_35440)*->rhs(
                                              [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,genlMt,2,prologHybrid)>=(mpred_prop(baseKB,genlMt,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,genlMt,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                   [ mpred_prop(baseKB,genlMt,2,prologHybrid)]))))
  mpred_prop(baseKB,mpred_prop,4,pfcControlled)>=(mpred_prop(baseKB,mpred_prop,4,pfcRHS),'$pt'(baseKB,mpred_prop(_35246,_35248,_35250,_35252),(genlPreds(_35252,_35264)*->rhs(
                                                      [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,mpred_prop,4,prologHybrid)>=(mpred_prop(baseKB,mpred_prop,4,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,mpred_prop,4,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                               [ mpred_prop(baseKB,mpred_prop,4,prologHybrid)]))))
  mpred_prop(baseKB,functorDeclares,1,pfcControlled)>=(mpred_prop(baseKB,functorDeclares,1,pfcRHS),'$pt'(baseKB,mpred_prop(_35070,_35072,_35074,_35076),(genlPreds(_35076,_35088)*->rhs(
                                                                [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,functorDeclares,1,prologHybrid)>=(mpred_prop(baseKB,functorDeclares,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,functorDeclares,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                              [ mpred_prop(baseKB,functorDeclares,1,prologHybrid)]))))
  mpred_prop(baseKB,arityMax,2,pfcControlled)>=(mpred_prop(baseKB,arityMax,2,pfcRHS),'$pt'(baseKB,mpred_prop(_34894,_34896,_34898,_34900),(genlPreds(_34900,_34912)*->rhs(
                                                  [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,arityMax,2,prologHybrid)>=(mpred_prop(baseKB,arityMax,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,arityMax,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                         [ mpred_prop(baseKB,arityMax,2,prologHybrid)]))))
  mpred_prop(baseKB,functorIsMacro,1,pfcControlled)>=(mpred_prop(baseKB,functorIsMacro,1,pfcRHS),'$pt'(baseKB,mpred_prop(_34718,_34720,_34722,_34724),(genlPreds(_34724,_34736)*->rhs(
                                                              [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,functorIsMacro,1,prologHybrid)>=(mpred_prop(baseKB,functorIsMacro,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,functorIsMacro,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                           [ mpred_prop(baseKB,functorIsMacro,1,prologHybrid)]))))
  mpred_prop(baseKB,hybrid_support,2,pfcControlled)>=(mpred_prop(baseKB,hybrid_support,2,pfcRHS),'$pt'(baseKB,mpred_prop(_34542,_34544,_34546,_34548),(genlPreds(_34548,_34560)*->rhs(
                                                              [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,hybrid_support,2,prologHybrid)>=(mpred_prop(baseKB,hybrid_support,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,hybrid_support,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                           [ mpred_prop(baseKB,hybrid_support,2,prologHybrid)]))))
  mpred_prop(baseKB,genlPreds,2,pfcLHS)>=(mfl4([ 'M'=M, 
                                                 'F'=_34368, 
                                                 'A'=_34380, 
                                                 'R1'=_34392, 
                                                 'R2'=_34404],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535),ax)
  arity(genlPreds,2)>=(mpred_prop(baseKB,genlPreds,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,genlPreds,2,pfcLHS),rhs([ arity(genlPreds,2), 
                                                                                                                      functorIsMacro(genlPreds), 
                                                                                                                      mpred_prop(baseKB,genlPreds,2,pfcWatches)])))
  functorIsMacro(genlPreds)>=(mpred_prop(baseKB,genlPreds,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,genlPreds,2,pfcLHS),rhs(
   [ arity(genlPreds,2), 
     functorIsMacro(genlPreds), 
     mpred_prop(baseKB,genlPreds,2,pfcWatches)])))
  mpred_prop(baseKB,genlPreds,2,pfcWatches)>=(mpred_prop(baseKB,genlPreds,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,genlPreds,2,pfcLHS),rhs(
                   [ arity(genlPreds,2), 
                     functorIsMacro(genlPreds), 
                     mpred_prop(baseKB,genlPreds,2,pfcWatches)])))
  mpred_prop(baseKB,mpred_prop,4,pfcCallCode)>=(mfl4([ 'M'=M, 
                                                       'F'=_33986, 
                                                       'A'=_33998, 
                                                       'R1'=_34010, 
                                                       'R2'=_34022],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535),ax)
  mpred_prop(baseKB,genlPreds,2,pfcPosTrigger)>=(mfl4([ 'M'=M, 
                                                        'F'=_33888, 
                                                        'A'=_33900, 
                                                        'R1'=_33912, 
                                                        'R2'=_33924],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535),ax)
  mpred_prop(baseKB,genlPreds,2,pfcWatches)>=(mpred_prop(baseKB,genlPreds,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,genlPreds,2,pfcPosTrigger),rhs(
                                 [ mpred_prop(baseKB,genlPreds,2,pfcWatches)])))
  '$pt'(baseKB,genlPreds(_33598,_33600),(mpred_prop(_33610,_33612,_33614,_33598)*->rhs([ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)])))>=((mpred_prop(_33658,_33660,_33662,_33664),genlPreds(_33664,_33670)==>mpred_prop(_33658,_33660,_33662,_33670)),mfl4(
                     [ 'M'=M, 
                       'F'=_33714, 
                       'A'=_33726, 
                       'R1'=_33738, 
                       'R2'=_33750],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',535))
  mpred_prop(baseKB,pfcSanityB,0,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33536,_33538),(mpred_prop(_33548,_33550,_33552,_33536)*->rhs(
                                               [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,genlMt,2,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33452,_33454),(mpred_prop(_33464,_33466,_33468,_33452)*->rhs(
                                           [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,mpred_prop,4,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33368,_33370),(mpred_prop(_33380,_33382,_33384,_33368)*->rhs(
                                               [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,functorDeclares,1,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33284,_33286),(mpred_prop(_33296,_33298,_33300,_33284)*->rhs(
                                                    [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,arityMax,2,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33200,_33202),(mpred_prop(_33212,_33214,_33216,_33200)*->rhs(
                                             [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,functorIsMacro,1,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33116,_33118),(mpred_prop(_33128,_33130,_33132,_33116)*->rhs(
                                                   [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,hybrid_support,2,pfcControlled)>=(genlPreds(pfcRHS,pfcControlled),'$pt'(baseKB,genlPreds(_33032,_33034),(mpred_prop(_33044,_33046,_33048,_33032)*->rhs(
                                                   [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,pfcSanityB,0,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32948,_32950),(mpred_prop(_32960,_32962,_32964,_32948)*->rhs(
                                                    [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,genlMt,2,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32864,_32866),(mpred_prop(_32876,_32878,_32880,_32864)*->rhs(
                                                [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,mpred_prop,4,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32780,_32782),(mpred_prop(_32792,_32794,_32796,_32780)*->rhs(
                                                    [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,functorDeclares,1,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32696,_32698),(mpred_prop(_32708,_32710,_32712,_32696)*->rhs(
                                                         [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,arityMax,2,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32612,_32614),(mpred_prop(_32624,_32626,_32628,_32612)*->rhs(
                                                  [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,functorIsMacro,1,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32528,_32530),(mpred_prop(_32540,_32542,_32544,_32528)*->rhs(
                                                        [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  mpred_prop(baseKB,hybrid_support,2,prologHybrid)>=(genlPreds(pfcControlled,prologHybrid),'$pt'(baseKB,genlPreds(_32444,_32446),(mpred_prop(_32456,_32458,_32460,_32444)*->rhs(
                                                        [ mpred_prop(Mpred_prop2,Mpred_prop1,Mpred_prop,Prop)]))))
  do_and_undo(mpred_post_exactly,mpred_remove_exactly)>=(mfl4(_32392,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',537),ax)
  (without_depth_limit(_32294):-cwc,call_with_depth_limit(_32294,72057594037927935,_32314),sanity(_32314\==depth_limit_exceeded))>=(mfl4(
                 [ 'G'=G, 
                   'Result'=_32314],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',546),ax)
  arity(mpred_undo_sys,3)>=((mfl4(_32256,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',552),ax),mfl4(_32266,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',552))
  meta_argtypes(mpred_undo_sys(ftAssertion,ftCallable,ftCallable))>=(mfl4(_32216,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',552),ax)
  pfcControlled(mpred_undo_sys)>=(mfl4(_32176,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',552),ax)
  hybrid_support(mpred_undo_sys,3)>=(pfcControlled(mpred_undo_sys),'$pt'(baseKB,pfcControlled(mpred_undo_sys),(arity(mpred_undo_sys,3)*->rhs(
                     [ hybrid_support(mpred_undo_sys,3)]))))
  (mpred_undo_sys(_32004,_32006,_32008)==>(_32004==>{_32006}),mpred_do_and_undo_method(_32006,_32008))>=(mfl4([ 'P'=P, 
                                                                                                                'WhenAdded'=_32006, 
                                                                                                                'WhenRemoved'=_32008],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554),ax)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcRHS)>=(mfl4([ 'P'=P, 
                                                                'WhenAdded'=_31970, 
                                                                'WhenRemoved'=_31982],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554),ax)
  mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcCreates)>=(mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcRHS),rhs(
                                                                [ mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcCreates)])))
  mpred_prop(baseKB,mpred_do_and_undo_method,2,kb_shared)>=((mfl4([ 'P'=P, 
                                                                    'WhenAdded'=_31774, 
                                                                    'WhenRemoved'=_31786],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554),ax),mfl4(
                                                                      [ 'P'=P, 
                                                                        'WhenAdded'=_31774, 
                                                                        'WhenRemoved'=_31786],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554))
  '$pt'(baseKB,genlMt(_31464,baseKB),(_31464\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_281428:mpred_do_and_undo_method/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_295682:mpred_do_and_undo_method/2))) }])))>=(mpred_prop(baseKB,mpred_do_and_undo_method,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,mpred_do_and_undo_method,2,kb_shared),'$pt'(baseKB,genlMt(_31464,baseKB),(_31464\=baseKB*->rhs(
                                                                                             [ { nop( dmsg_pretty( Call :  
                                                                                                                        
                                                                                                                     call(kb_shared,_331924:mpred_do_and_undo_method/2))), 
                                                                                                 show_failure( on_x_fail( Call1 :  
                                                                                                                               
                                                                                                                            call(kb_shared,_346178:mpred_do_and_undo_method/2))) }])))))
  mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcControlled)>=(mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                                      [ mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcControlled)]))))
  mpred_prop(baseKB,mpred_do_and_undo_method,2,prologHybrid)>=(mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,mpred_do_and_undo_method,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
 [ mpred_prop(baseKB,mpred_do_and_undo_method,2,prologHybrid)]))))
  mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS)>=(mfl4([ 'P'=P, 
                                                      'WhenAdded'=_31252, 
                                                      'WhenRemoved'=_31264],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554),ax)
  arity(mpred_undo_sys,3)>=(mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS),rhs(
           [ arity(mpred_undo_sys,3), 
             functorIsMacro(mpred_undo_sys), 
             mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)])))
  functorIsMacro(mpred_undo_sys)>=(mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS),rhs(
                  [ arity(mpred_undo_sys,3), 
                    functorIsMacro(mpred_undo_sys), 
                    mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)])))
  mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)>=(mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_undo_sys,3,pfcLHS),rhs(
                                  [ arity(mpred_undo_sys,3), 
                                    functorIsMacro(mpred_undo_sys), 
                                    mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)])))
  mpred_prop(baseKB,mpred_undo_sys,3,pfcPosTrigger)>=(mfl4([ 'P'=P, 
                                                             'WhenAdded'=_30894, 
                                                             'WhenRemoved'=_30906],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554),ax)
  mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)>=(mpred_prop(baseKB,mpred_undo_sys,3,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,mpred_undo_sys,3,pfcPosTrigger),rhs(
                                                [ mpred_prop(baseKB,mpred_undo_sys,3,pfcWatches)])))
  '$pt'(baseKB,mpred_undo_sys(_30632,_30634,_30636),rhs([ _384588==>{_384594}, 
                                                          mpred_do_and_undo_method(_30634,_30636)]))>=((mpred_undo_sys(_30684,_30686,_30688)==>(_30684==>{_30686}),mpred_do_and_undo_method(_30686,_30688)),mfl4(
                                                                                         [ 'P'=P, 
                                                                                           'WhenAdded'=_30744, 
                                                                                           'WhenRemoved'=_30756],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',554))
  ~singleValuedInArg(arity,_30592)>=(mfl4(_30602,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',567),ax)
  ~singleValuedInArg(support_hilog,_30554)>=(mfl4(_30564,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',568),ax)
  mpred_prop(baseKB,conflict,1,kb_shared)>=(mfl4(_30526,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',575),ax)
  '$pt'(baseKB,genlMt(_30252,baseKB),(_30252\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_426410:conflict/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_440652:conflict/1))) }])))>=(mpred_prop(baseKB,conflict,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,conflict,1,kb_shared),'$pt'(baseKB,genlMt(_30252,baseKB),(_30252\=baseKB*->rhs(
                                             [ { nop( dmsg_pretty( Call :  
                                                                        
                                                                     call(kb_shared,_476878:conflict/1))), 
                                                 show_failure( on_x_fail( Call1 :  
                                                                               
                                                                            call(kb_shared,_491120:conflict/1))) }])))))
  (conflict(_30170)==>{must(with_mpred_trace_exec((resolveConflict(_30170),\+conflict(_30170))))})>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',577),ax)
  mpred_prop(baseKB,conflict,1,pfcLHS)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',577),ax)
  arity(conflict,1)>=(mpred_prop(baseKB,conflict,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,conflict,1,pfcLHS),rhs([ arity(conflict,1), 
                                                                                                                   functorIsMacro(conflict), 
                                                                                                                   mpred_prop(baseKB,conflict,1,pfcWatches)])))
  functorIsMacro(conflict)>=(mpred_prop(baseKB,conflict,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,conflict,1,pfcLHS),rhs([ 
  arity(conflict,1), 
  functorIsMacro(conflict), 
  mpred_prop(baseKB,conflict,1,pfcWatches)])))
  mpred_prop(baseKB,conflict,1,pfcWatches)>=(mpred_prop(baseKB,conflict,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,conflict,1,pfcLHS),rhs(
                [ arity(conflict,1), 
                  functorIsMacro(conflict), 
                  mpred_prop(baseKB,conflict,1,pfcWatches)])))
  mpred_prop(baseKB,conflict,1,pfcPosTrigger)>=(mfl4([ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',577),ax)
  mpred_prop(baseKB,conflict,1,pfcWatches)>=(mpred_prop(baseKB,conflict,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,conflict,1,pfcPosTrigger),rhs(
                              [ mpred_prop(baseKB,conflict,1,pfcWatches)])))
  '$pt'(baseKB,conflict(_29580),rhs([ { must( with_mpred_trace_exec( resolveConflict(ResolveConflict),\+conflict(Conflict))) }]))>=((conflict(_29636)==>{must(with_mpred_trace_exec((resolveConflict(_29636),\+conflict(_29636))))}),mfl4(
                                                                                                                  [ 'C'=C],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',577))
  (pfcSelect(conflict(_29500)):-cwc,que(conflict(_29500),_29512))>=(mfl4([ 'X'=X, 
                                                                           '_Why'=_29512],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',582),ax)
  arity(member,2)>=((mfl4(_29458,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',587),ax),mfl4(_29468,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',587))
  rtNotForUnboundPredicates(member)>=(mfl4(_29418,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',587),ax)
  (never_assert_u(~_29346,is_ftVar(~_29346)):-cwc,is_ftVar(_29346))>=(mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',595),ax)
  (never_assert_u(mpred_unload_option(never,_29270),is_ftVar(mpred_unload_option(never,_29270))):-cwc,is_ftVar(_29270))>=(mfl4(
       [ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',597),ax)
  (never_assert_u(prologSingleValued(_29198),var_prologSingleValued(_29198)):-cwc,is_ftVar(_29198))>=(mfl4([ 'BAD'=BAD],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',599),ax)
  never_assert_u(baseKB:mtProlog(baseKB),must(mtHybrid(baseKB)))>=(mfl4(_29164,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',600),ax)
  (never_assert_u(_29050,never_assert_u(_29050)):-cwc,loop_check_term(never_assert_u(_29050),info(never_assert_u(_29050),'system_base.pfc.pl':601),fail))>=(mfl4(
                                         [ 'A'=A],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',601),ax)
  (never_retract_u(~_28982,is_ftVar(~_28982)):-cwc,is_ftVar(_28982))>=(mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',608),ax)
  (never_retract_u(_28910,never_retract_u(_28910)):-cwc,never_retract_u(_28910))>=(mfl4([ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',610),ax)
  (never_retract_u(_28822):-cwc,loop_check_term(never_retract_u(_28822,_28842),info(never_retract_u(_28822,_28842),'system_base.pfc.pl':613),fail))>=(mfl4(
                                   [ 'X'=X],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',613),ax)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',never)>=(mfl4([ 'F'='/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl'],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',619),ax)
  (_28712/mpred_positive_fact(_28712)==> \+ ~_28712)>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',638),ax)
  mpred_prop(baseKB,mpred_positive_fact,1,pfcCallCode)>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',638),ax)
  '$pt'(baseKB,_28558,(mpred_positive_fact(_28558)*->rhs([ \+( ~_166124)])))>=((_28604/mpred_positive_fact(_28604)==> \+ ~_28604),mfl4(
               [ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',638))
  (~_28490/mpred_positive_fact(_28490)==> \+_28490,nesc(~_28490))>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',639),ax)
  mpred_prop(baseKB,nesc,1,pfcRHS)>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',639),ax)
  mpred_prop(baseKB,nesc,1,pfcCreates)>=(mpred_prop(baseKB,nesc,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcRHS),rhs(
    [ mpred_prop(baseKB,nesc,1,pfcCreates)])))
  mpred_prop(baseKB,nesc,1,kb_shared)>=((mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',639),ax),mfl4(
                                   [ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',639))
  '$pt'(baseKB,genlMt(_28016,baseKB),(_28016\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_218960:nesc/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_233198:nesc/1))) }])))>=(mpred_prop(baseKB,nesc,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,kb_shared),'$pt'(baseKB,genlMt(_28016,baseKB),(_28016\=baseKB*->rhs(
                                 [ { nop( dmsg_pretty( Call :  
                                                            
                                                         call(kb_shared,_269418:nesc/1))), 
                                     show_failure( on_x_fail( Call1 :  
                                                                   
                                                                call(kb_shared,_283656:nesc/1))) }])))))
  mpred_prop(baseKB,nesc,1,pfcControlled)>=(mpred_prop(baseKB,nesc,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                          [ mpred_prop(baseKB,nesc,1,pfcControlled)]))))
  mpred_prop(baseKB,nesc,1,prologHybrid)>=(mpred_prop(baseKB,nesc,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                             [ mpred_prop(baseKB,nesc,1,prologHybrid)]))))
  '$nt'(_27704,(call_u_no_bc(_27718),mpred_positive_fact(_27718)),rhs([ \+_292612, 
                                                                        nesc( ~_294970)]))>=((~_27772/mpred_positive_fact(_27772)==> \+_27772,nesc(~_27772)),mfl4(
                                          [ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',639))
  (nesc(~_27636)/mpred_positive_fact(_27636)==> ~_27636,(_27636==> \+_27636))>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',640),ax)
  mpred_prop(baseKB,nesc,1,pfcLHS)>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',640),ax)
  arity(nesc,1)>=(mpred_prop(baseKB,nesc,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcLHS),rhs([ arity(nesc,1), 
                                                                                                       functorIsMacro(nesc), 
                                                                                                       mpred_prop(baseKB,nesc,1,pfcWatches)])))
  hybrid_support(nesc,1)>=(arity(nesc,1),'$pt'(baseKB,arity(nesc,1),(pfcControlled(nesc)*->rhs([ hybrid_support(nesc,1)]))))
  functorIsMacro(nesc)>=(mpred_prop(baseKB,nesc,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcLHS),rhs([ arity(nesc,1), 
                                                                                                              functorIsMacro(nesc), 
                                                                                                              mpred_prop(baseKB,nesc,1,pfcWatches)])))
  mpred_prop(baseKB,nesc,1,pfcWatches)>=(mpred_prop(baseKB,nesc,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcLHS),rhs(
    [ arity(nesc,1), 
      functorIsMacro(nesc), 
      mpred_prop(baseKB,nesc,1,pfcWatches)])))
  mpred_prop(baseKB,nesc,1,pfcPosTrigger)>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',640),ax)
  mpred_prop(baseKB,nesc,1,pfcWatches)>=(mpred_prop(baseKB,nesc,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,nesc,1,pfcPosTrigger),rhs(
                  [ mpred_prop(baseKB,nesc,1,pfcWatches)])))
  '$pt'(baseKB,nesc(~_26962),(mpred_positive_fact(_26962)*->rhs([ ~_329094, 
                                                                  _26962==> \+_26962])))>=((nesc(~_27028)/mpred_positive_fact(_27028)==> ~_27028,(_27028==> \+_27028)),mfl4(
                                                    [ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',640))
  '$pt'(baseKB,nesc(_26818),(mpred_positive_fact(_26818)*->rhs([ _335962, 
                                                                 ~_26818==> \+ ~_26818])))>=((nesc(_26884)/mpred_positive_fact(_26884)==>_26884,(~_26884==> \+ ~_26884)),mfl4(
                                                      [ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',642))
  (nesc(_26762)==>_26762)>=(mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',645),ax)
  '$pt'(baseKB,nesc(_26696),rhs([_26696]))>=((nesc(_26718)==>_26718),mfl4([ 'P'=P],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',645))
  (preventedWhen(_26600,_26602)==>(_26600/mpred_positive_fact(_26600),_26602==>nesc(~_26600)))>=(mfl4([ 'P'=P, 
                                                                                                        'Cond'=_26602],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',648),ax)
  mpred_prop(baseKB,preventedWhen,2,pfcLHS)>=(mfl4([ 'P'=P, 
                                                     'Cond'=_26578],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',648),ax)
  arity(preventedWhen,2)>=(mpred_prop(baseKB,preventedWhen,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,preventedWhen,2,pfcLHS),rhs(
        [ arity(preventedWhen,2), 
          functorIsMacro(preventedWhen), 
          mpred_prop(baseKB,preventedWhen,2,pfcWatches)])))
  functorIsMacro(preventedWhen)>=(mpred_prop(baseKB,preventedWhen,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,preventedWhen,2,pfcLHS),rhs(
               [ arity(preventedWhen,2), 
                 functorIsMacro(preventedWhen), 
                 mpred_prop(baseKB,preventedWhen,2,pfcWatches)])))
  mpred_prop(baseKB,preventedWhen,2,pfcWatches)>=(mpred_prop(baseKB,preventedWhen,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,preventedWhen,2,pfcLHS),rhs(
                               [ arity(preventedWhen,2), 
                                 functorIsMacro(preventedWhen), 
                                 mpred_prop(baseKB,preventedWhen,2,pfcWatches)])))
  mpred_prop(baseKB,preventedWhen,2,kb_shared)>=((mfl4([ 'P'=P, 
                                                         'Cond'=_26198],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',648),ax),mfl4(
                                                    [ 'P'=P, 
                                                      'Cond'=_26198],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',648))
  '$pt'(baseKB,genlMt(_25888,baseKB),(_25888\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_415432:preventedWhen/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_429676:preventedWhen/2))) }])))>=(mpred_prop(baseKB,preventedWhen,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,preventedWhen,2,kb_shared),'$pt'(baseKB,genlMt(_25888,baseKB),(_25888\=baseKB*->rhs(
                                                            [ { nop( dmsg_pretty( Call :  
                                                                                       
                                                                                    call(kb_shared,_465906:preventedWhen/2))), 
                                                                show_failure( on_x_fail( Call1 :  
                                                                                              
                                                                                           call(kb_shared,_480150:preventedWhen/2))) }])))))
  mpred_prop(baseKB,preventedWhen,2,pfcPosTrigger)>=(mfl4([ 'P'=P, 
                                                            'Cond'=_25864],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',648),ax)
  mpred_prop(baseKB,preventedWhen,2,pfcWatches)>=(mpred_prop(baseKB,preventedWhen,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,preventedWhen,2,pfcPosTrigger),rhs(
                                             [ mpred_prop(baseKB,preventedWhen,2,pfcWatches)])))
  '$pt'(baseKB,preventedWhen(_25602,_25604),rhs([ Mpred_positive_fact/mpred_positive_fact(Fact),_92694==>nesc(~_92712)]))>=((preventedWhen(_25660,_25662)==>(_25660/mpred_positive_fact(_25660),_25662==>nesc(~_25660))),mfl4(
                                                                                                      [ 'P'=P, 
                                                                                                        'Cond'=_25726],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',648))
  (preventedWhen(_25512,{_25518})/mpred_positive_fact(_25512)==>(~_25512:-cwc,_25518))>=(mfl4([ 'P'=P, 
                                                                                                'Cond'=_25518],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',650),ax)
  '$pt'(baseKB,preventedWhen(_25360,{_25366}),(mpred_positive_fact(_25360)*->rhs([ ~_107984 :- 
                                                                                     cwc , 
                                                                                     Cwc])))>=((preventedWhen(_25424,{_25430})/mpred_positive_fact(_25424)==>(~_25424:-cwc,_25430)),mfl4(
                                                                 [ 'P'=P, 
                                                                   'Cond'=_25484],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',650))
  arity(term_expansion,2)>=((mfl4(_25320,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',669),ax),mfl4(_25330,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',669))
  prologDynamic(term_expansion)>=(mfl4(_25280,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',669),ax)
  arity(var,1)>=((mfl4(_25238,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',670),ax),mfl4(_25248,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',670))
  prologBuiltin(var)>=(mfl4(_25198,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_base.pfc.pl',670),ax)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',never)>=(mfl4([ 
 'F'='/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl'],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',162),ax)
  mtHybrid(baseKB)>=(mfl4(_25120,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',40),ax)
  mtHybrid(baseKB)>=(mfl4(_25088,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',45),ax)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',never)>=(mfl4([ 
 'F'='/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl'],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',47),ax)
  arity(mdefault,1)>=((mfl4(_25000,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',49),ax),mfl4(_25010,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',49))
  meta_argtypes(mdefault(ftAssertable))>=(mfl4(_24960,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',49),ax)
  (mdefault((_24864<-_24866))/mpred_literal(_24864)==>(_24864<-_24866,\+ ~_24864))>=(mfl4([ 'Q'=Q, 
                                                                                            'P'=_24866],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52),ax)
  mpred_prop(baseKB,mdefault,1,pfcLHS)>=(mfl4([ 'Q'=Q, 
                                                'P'=_24832],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52),ax)
  arity(mdefault,1)>=(mpred_prop(baseKB,mdefault,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcLHS),rhs([ arity(mdefault,1), 
                                                                                                                   functorIsMacro(mdefault), 
                                                                                                                   mpred_prop(baseKB,mdefault,1,pfcWatches)])))
  functorIsMacro(mdefault)>=(mpred_prop(baseKB,mdefault,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcLHS),rhs([ 
  arity(mdefault,1), 
  functorIsMacro(mdefault), 
  mpred_prop(baseKB,mdefault,1,pfcWatches)])))
  mpred_prop(baseKB,mdefault,1,pfcWatches)>=(mpred_prop(baseKB,mdefault,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcLHS),rhs(
                [ arity(mdefault,1), 
                  functorIsMacro(mdefault), 
                  mpred_prop(baseKB,mdefault,1,pfcWatches)])))
  mpred_prop(baseKB,mdefault,1,kb_shared)>=((mfl4([ 'Q'=Q, 
                                                    'P'=_24452],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52),ax),mfl4(
                                               [ 'Q'=Q, 
                                                 'P'=_24452],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52))
  '$pt'(baseKB,genlMt(_24142,baseKB),(_24142\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_185254:mdefault/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_199496:mdefault/1))) }])))>=(mpred_prop(baseKB,mdefault,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,kb_shared),'$pt'(baseKB,genlMt(_24142,baseKB),(_24142\=baseKB*->rhs(
                                             [ { nop( dmsg_pretty( Call :  
                                                                        
                                                                     call(kb_shared,_235722:mdefault/1))), 
                                                 show_failure( on_x_fail( Call1 :  
                                                                               
                                                                            call(kb_shared,_249964:mdefault/1))) }])))))
  mpred_prop(baseKB,mpred_literal,1,pfcCallCode)>=(mfl4([ 'Q'=Q, 
                                                          'P'=_24118],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52),ax)
  mpred_prop(baseKB,mdefault,1,pfcPosTrigger)>=(mfl4([ 'Q'=Q, 
                                                       'P'=_24056],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52),ax)
  mpred_prop(baseKB,mdefault,1,pfcWatches)>=(mpred_prop(baseKB,mdefault,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcPosTrigger),rhs(
                              [ mpred_prop(baseKB,mdefault,1,pfcWatches)])))
  '$pt'(baseKB,mdefault((_23790<-_23792)),(mpred_literal(_23790)*->rhs([ _267688<-_267694,\+ ~_267704])))>=((mdefault((_23858<-_23860))/mpred_literal(_23858)==>(_23858<-_23860,\+ ~_23858)),mfl4(
                                                                          [ 'Q'=Q, 
                                                                            'P'=_23918],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',52))
  (mdefault((_23706==>_23708))/nonvar(_23708)==>(_23706==>mdefault(_23708)))>=(mfl4([ 'P'=P, 
                                                                                      'Q'=_23708],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55),ax)
  mpred_prop(baseKB,mdefault,1,pfcRHS)>=(mfl4([ 'P'=P, 
                                                'Q'=_23674],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55),ax)
  mpred_prop(baseKB,mdefault,1,pfcCreates)>=(mpred_prop(baseKB,mdefault,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcRHS),rhs(
                [ mpred_prop(baseKB,mdefault,1,pfcCreates)])))
  mpred_prop(baseKB,mdefault,1,pfcControlled)>=(mpred_prop(baseKB,mdefault,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                      [ mpred_prop(baseKB,mdefault,1,pfcControlled)]))))
  mpred_prop(baseKB,mdefault,1,prologHybrid)>=(mpred_prop(baseKB,mdefault,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,mdefault,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                         [ mpred_prop(baseKB,mdefault,1,prologHybrid)]))))
  '$pt'(baseKB,mdefault((_23252==>_23254)),(nonvar(_23254)*->rhs([ Mdefault==>mdefault(Mdefault1)])))>=((mdefault((_23310==>_23312))/nonvar(_23312)==>(_23310==>mdefault(_23312))),mfl4(
                                                                [ 'P'=P, 
                                                                  'Q'=_23360],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55))
  (mdefault(~_23178)/mpred_positive_fact(_23178)==>(\+_23178==> ~_23178))>=(mfl4([ 'Q'=Q],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',58),ax)
  '$pt'(baseKB,mdefault(~_23046),(mpred_positive_fact(_23046)*->rhs([ \+_304786==> ~_304790])))>=((mdefault(~_23106)/mpred_positive_fact(_23106)==>(\+_23106==> ~_23106)),mfl4(
                                                       [ 'Q'=Q],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',58))
  (mdefault(_22908)/(mpred_positive_fact(_22908),if_missing_mask(_22908,_22924,_22926))==>(\+_22924/(ground(_22924),_22926),\+ ~_22908==>_22908))>=(mfl4(
                                 [ 'Q'=Q, 
                                   'R'=_22924, 
                                   'Test'=_22926],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62),ax)
  mpred_prop(baseKB,if_missing_mask,3,pfcCallCode)>=(mfl4([ 'Q'=Q, 
                                                            'R'=_22868, 
                                                            'Test'=_22880],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62),ax)
  '$pt'(baseKB,mdefault(_22606),(mpred_positive_fact(_22606),if_missing_mask(_22606,_22628,_22630)*->rhs([ \+_327344/(ground(Ground1),Ground),\+ ~_327364==>_327330])))>=((mdefault(_22702)/(mpred_positive_fact(_22702),if_missing_mask(_22702,_22718,_22720))==>(\+_22718/(ground(_22718),_22720),\+ ~_22702==>_22702)),mfl4(
                                                                               [ 'Q'=Q, 
                                                                                 'R'=_22794, 
                                                                                 'Test'=_22806],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62))
  (mdefault(_22470)/(mpred_positive_fact(_22470),if_missing_mask(_22470,_22486,_22488))==>(_22486/(ground(_22486),_22488,\+_22486=_22470)==> \+_22470))>=(mfl4(
                                       [ 'Q'=Q, 
                                         'R'=_22486, 
                                         'Test'=_22488],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',65),ax)
  mpred_prop(baseKB,=,2,pfcCallCode)>=(mfl4([ 'Q'=Q, 
                                              'R'=_22430, 
                                              'Test'=_22442],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',65),ax)
  '$pt'(baseKB,mdefault(_22164),(mpred_positive_fact(_22164),if_missing_mask(_22164,_22186,_22188)*->rhs([ _352646/(ground(Ground),_352662,\+_352672=_352674)==> \+_352678])))>=((mdefault(_22262)/(mpred_positive_fact(_22262),if_missing_mask(_22262,_22278,_22280))==>(_22278/(ground(_22278),_22280,\+_22278=_22262)==> \+_22262)),mfl4(
                                                                                            [ 'Q'=Q, 
                                                                                              'R'=_22356, 
                                                                                              'Test'=_22368],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',65))
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_module_inheritance.pfc.pl',never)>=(mfl4(
         [ 'F'='/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_module_inheritance.pfc.pl'],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_module_inheritance.pfc.pl',2),ax)
  mtHybrid(baseKB)>=(mfl4(_22088,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',3),ax)
  mpred_unload_option('/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',never)>=(mfl4(
   [ 'F'='/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl'],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',5),ax)
  arity(mpred_sv,2)>=(mfl4(_22010,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',13),ax)
  (mpred_sv(_21910,_21912)==>arity(_21910,_21912),hybrid_support(_21910,_21912),singleValuedInArg(_21910,_21912))>=(mfl4(
 [ 'Pred'=Pred, 
   'Arity'=_21912],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',14),ax)
  mpred_prop(baseKB,singleValuedInArg,2,pfcRHS)>=(mfl4([ 'Pred'=Pred, 
                                                         'Arity'=_21888],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',14),ax)
  mpred_prop(baseKB,singleValuedInArg,2,pfcCreates)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcRHS),rhs(
                                           [ mpred_prop(baseKB,singleValuedInArg,2,pfcCreates)])))
  mpred_prop(baseKB,singleValuedInArg,2,pfcControlled)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                 [ mpred_prop(baseKB,singleValuedInArg,2,pfcControlled)]))))
  mpred_prop(baseKB,singleValuedInArg,2,prologHybrid)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                                    [ mpred_prop(baseKB,singleValuedInArg,2,prologHybrid)]))))
  mpred_prop(baseKB,mpred_sv,2,pfcLHS)>=(mfl4([ 'Pred'=Pred, 
                                                'Arity'=_21574],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',14),ax)
  arity(mpred_sv,2)>=(mpred_prop(baseKB,mpred_sv,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcLHS),rhs([ arity(mpred_sv,2), 
                                                                                                                   functorIsMacro(mpred_sv), 
                                                                                                                   mpred_prop(baseKB,mpred_sv,2,pfcWatches)])))
  functorIsMacro(mpred_sv)>=(mpred_prop(baseKB,mpred_sv,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcLHS),rhs([ 
  arity(mpred_sv,2), 
  functorIsMacro(mpred_sv), 
  mpred_prop(baseKB,mpred_sv,2,pfcWatches)])))
  mpred_prop(baseKB,mpred_sv,2,pfcWatches)>=(mpred_prop(baseKB,mpred_sv,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcLHS),rhs(
                [ arity(mpred_sv,2), 
                  functorIsMacro(mpred_sv), 
                  mpred_prop(baseKB,mpred_sv,2,pfcWatches)])))
  mpred_prop(baseKB,mpred_sv,2,pfcPosTrigger)>=(mfl4([ 'Pred'=Pred, 
                                                       'Arity'=_21228],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',14),ax)
  mpred_prop(baseKB,mpred_sv,2,pfcWatches)>=(mpred_prop(baseKB,mpred_sv,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcPosTrigger),rhs(
                              [ mpred_prop(baseKB,mpred_sv,2,pfcWatches)])))
  '$pt'(baseKB,mpred_sv(_20966,_20968),rhs([ arity(Arity,Arity1), 
                                             hybrid_support(_20966,_20968), 
                                             singleValuedInArg(_20966,_20968)]))>=((mpred_sv(_21024,_21026)==>arity(_21024,_21026),hybrid_support(_21024,_21026),singleValuedInArg(_21024,_21026)),mfl4(
                                                                                [ 'Pred'=Pred, 
                                                                                  'Arity'=_21090],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',14))
  (mpred_sv_shared(_20874,_20876)==>{kb_shared(_20874/_20876)},mpred_sv(_20874,_20876))>=(mfl4([ 'Pred'=Pred, 
                                                                                                 'Arity'=_20876],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17),ax)
  mpred_prop(baseKB,mpred_sv,2,pfcRHS)>=(mfl4([ 'Pred'=Pred, 
                                                'Arity'=_20852],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17),ax)
  mpred_prop(baseKB,mpred_sv,2,pfcCreates)>=(mpred_prop(baseKB,mpred_sv,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcRHS),rhs(
                [ mpred_prop(baseKB,mpred_sv,2,pfcCreates)])))
  mpred_prop(baseKB,mpred_sv,2,pfcControlled)>=(mpred_prop(baseKB,mpred_sv,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                      [ mpred_prop(baseKB,mpred_sv,2,pfcControlled)]))))
  mpred_prop(baseKB,mpred_sv,2,prologHybrid)>=(mpred_prop(baseKB,mpred_sv,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                         [ mpred_prop(baseKB,mpred_sv,2,prologHybrid)]))))
  mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS)>=(mfl4([ 'Pred'=Pred, 
                                                       'Arity'=_20538],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17),ax)
  arity(mpred_sv_shared,2)>=(mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS),rhs(
              [ arity(mpred_sv_shared,2), 
                functorIsMacro(mpred_sv_shared), 
                mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)])))
  functorIsMacro(mpred_sv_shared)>=(mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS),rhs(
                     [ arity(mpred_sv_shared,2), 
                       functorIsMacro(mpred_sv_shared), 
                       mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)])))
  mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)>=(mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv_shared,2,pfcLHS),rhs(
                                     [ arity(mpred_sv_shared,2), 
                                       functorIsMacro(mpred_sv_shared), 
                                       mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)])))
  mpred_prop(baseKB,mpred_sv_shared,2,kb_shared)>=((mfl4([ 'Pred'=Pred, 
                                                           'Arity'=_20158],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17),ax),mfl4(
                                                              [ 'Pred'=Pred, 
                                                                'Arity'=_20158],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17))
  '$pt'(baseKB,genlMt(_19848,baseKB),(_19848\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_98122:mpred_sv_shared/2))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_112366:mpred_sv_shared/2))) }])))>=(mpred_prop(baseKB,mpred_sv_shared,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv_shared,2,kb_shared),'$pt'(baseKB,genlMt(_19848,baseKB),(_19848\=baseKB*->rhs(
                                                                  [ { nop( dmsg_pretty( Call :  
                                                                                             
                                                                                          call(kb_shared,_148600:mpred_sv_shared/2))), 
                                                                      show_failure( on_x_fail( Call1 :  
                                                                                                    
                                                                                                 call(kb_shared,_162848:mpred_sv_shared/2))) }])))))
  mpred_prop(baseKB,mpred_sv_shared,2,pfcPosTrigger)>=(mfl4([ 'Pred'=Pred, 
                                                              'Arity'=_19824],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17),ax)
  mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)>=(mpred_prop(baseKB,mpred_sv_shared,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,mpred_sv_shared,2,pfcPosTrigger),rhs(
                                                   [ mpred_prop(baseKB,mpred_sv_shared,2,pfcWatches)])))
  '$pt'(baseKB,mpred_sv_shared(_19570,_19572),rhs([ { kb_shared( _180494/_180496) }, 
                                                    mpred_sv(_19570,_19572)]))>=((mpred_sv_shared(_19624,_19626)==>{kb_shared(_19624/_19626)},mpred_sv(_19624,_19626)),mfl4(
                                                    [ 'Pred'=Pred, 
                                                      'Arity'=_19686],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',17))
  mpred_sv_shared(mpred_sv,2)>=(mfl4(_19540,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',18),ax)
  mpred_sv(mpred_sv,2)>=(mpred_sv_shared(mpred_sv,2),'$pt'(baseKB,mpred_sv_shared(mpred_sv,2),rhs([ { kb_shared( mpred_sv/2) }, 
                                                                                                    mpred_sv(mpred_sv,2)])))
  arity(mpred_sv,2)>=(mpred_sv(mpred_sv,2),'$pt'(baseKB,mpred_sv(mpred_sv,2),rhs([ arity(mpred_sv,2), 
                                                                                   hybrid_support(mpred_sv,2), 
                                                                                   singleValuedInArg(mpred_sv,2)])))
  hybrid_support(mpred_sv,2)>=(mpred_sv(mpred_sv,2),'$pt'(baseKB,mpred_sv(mpred_sv,2),rhs([ arity(mpred_sv,2), 
                                                                                            hybrid_support(mpred_sv,2), 
                                                                                            singleValuedInArg(mpred_sv,2)])))
  singleValuedInArg(mpred_sv,2)>=(mpred_sv(mpred_sv,2),'$pt'(baseKB,mpred_sv(mpred_sv,2),rhs([ arity(mpred_sv,2), 
                                                                                               hybrid_support(mpred_sv,2), 
                                                                                               singleValuedInArg(mpred_sv,2)])))
  mpred_sv_shared(singleValuedInArg,2)>=(mfl4(_19174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',19),ax)
  mpred_sv(singleValuedInArg,2)>=(mpred_sv_shared(singleValuedInArg,2),'$pt'(baseKB,mpred_sv_shared(singleValuedInArg,2),rhs(
     [ { kb_shared( singleValuedInArg/2) }, 
       mpred_sv(singleValuedInArg,2)])))
  arity(singleValuedInArg,2)>=(mpred_sv(singleValuedInArg,2),'$pt'(baseKB,mpred_sv(singleValuedInArg,2),rhs([ arity(singleValuedInArg,2), 
                                                                                                              hybrid_support(singleValuedInArg,2), 
                                                                                                              singleValuedInArg(singleValuedInArg,2)])))
  hybrid_support(singleValuedInArg,2)>=(arity(singleValuedInArg,2),'$pt'(baseKB,arity(singleValuedInArg,2),(pfcControlled(singleValuedInArg)*->rhs(
                           [ hybrid_support(singleValuedInArg,2)]))))
  hybrid_support(singleValuedInArg,2)>=(mpred_sv(singleValuedInArg,2),'$pt'(baseKB,mpred_sv(singleValuedInArg,2),rhs([ arity(singleValuedInArg,2), 
                                                                                                                       hybrid_support(singleValuedInArg,2), 
                                                                                                                       singleValuedInArg(singleValuedInArg,2)])))
  singleValuedInArg(singleValuedInArg,2)>=(mpred_sv(singleValuedInArg,2),'$pt'(baseKB,mpred_sv(singleValuedInArg,2),rhs([ 
  arity(singleValuedInArg,2), 
  hybrid_support(singleValuedInArg,2), 
  singleValuedInArg(singleValuedInArg,2)])))
  mpred_sv_shared(singleValuedInArgDefault,3)>=(mfl4(_18738,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',20),ax)
  mpred_prop(baseKB,singleValuedInArgDefault,3,kb_shared)>=((mfl4(_18694,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',20),ax),mfl4(_18704,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',20))
  '$pt'(baseKB,genlMt(_18414,baseKB),(_18414\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_261918:singleValuedInArgDefault/3))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_276172:singleValuedInArgDefault/3))) }])))>=(mpred_prop(baseKB,singleValuedInArgDefault,3,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,kb_shared),'$pt'(baseKB,genlMt(_18414,baseKB),(_18414\=baseKB*->rhs(
                                                                                             [ { nop( dmsg_pretty( Call :  
                                                                                                                        
                                                                                                                     call(kb_shared,_312414:singleValuedInArgDefault/3))), 
                                                                                                 show_failure( on_x_fail( Call1 :  
                                                                                                                               
                                                                                                                            call(kb_shared,_326668:singleValuedInArgDefault/3))) }])))))
  mpred_sv(singleValuedInArgDefault,3)>=(mpred_sv_shared(singleValuedInArgDefault,3),'$pt'(baseKB,mpred_sv_shared(singleValuedInArgDefault,3),rhs(
                          [ { kb_shared( singleValuedInArgDefault/3) }, 
                            mpred_sv(singleValuedInArgDefault,3)])))
  arity(singleValuedInArgDefault,3)>=(mpred_sv(singleValuedInArgDefault,3),'$pt'(baseKB,mpred_sv(singleValuedInArgDefault,3),rhs(
         [ arity(singleValuedInArgDefault,3), 
           hybrid_support(singleValuedInArgDefault,3), 
           singleValuedInArg(singleValuedInArgDefault,3)])))
  hybrid_support(singleValuedInArgDefault,3)>=(mpred_sv(singleValuedInArgDefault,3),'$pt'(baseKB,mpred_sv(singleValuedInArgDefault,3),rhs(
                  [ arity(singleValuedInArgDefault,3), 
                    hybrid_support(singleValuedInArgDefault,3), 
                    singleValuedInArg(singleValuedInArgDefault,3)])))
  singleValuedInArg(singleValuedInArgDefault,3)>=(mpred_sv(singleValuedInArgDefault,3),'$pt'(baseKB,mpred_sv(singleValuedInArgDefault,3),rhs(
                     [ arity(singleValuedInArgDefault,3), 
                       hybrid_support(singleValuedInArgDefault,3), 
                       singleValuedInArg(singleValuedInArgDefault,3)])))
  (prologSingleValued(_17990),arity(_17990,_18002)/(\+singleValuedInArg(_17990,_18012))==>singleValuedInArg(_17990,_18002))>=(mfl4(
           [ 'Pred'=Pred, 
             'Arity'=_18002],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22),ax)
  mpred_prop(baseKB,prologSingleValued,1,pfcLHS)>=(mfl4([ 'Pred'=Pred, 
                                                          'Arity'=_17962],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22),ax)
  arity(prologSingleValued,1)>=(mpred_prop(baseKB,prologSingleValued,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcLHS),rhs(
                       [ arity(prologSingleValued,1), 
                         functorIsMacro(prologSingleValued), 
                         mpred_prop(baseKB,prologSingleValued,1,pfcWatches)])))
  functorIsMacro(prologSingleValued)>=(mpred_prop(baseKB,prologSingleValued,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcLHS),rhs(
                              [ arity(prologSingleValued,1), 
                                functorIsMacro(prologSingleValued), 
                                mpred_prop(baseKB,prologSingleValued,1,pfcWatches)])))
  mpred_prop(baseKB,prologSingleValued,1,pfcWatches)>=(mpred_prop(baseKB,prologSingleValued,1,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcLHS),rhs(
                                              [ arity(prologSingleValued,1), 
                                                functorIsMacro(prologSingleValued), 
                                                mpred_prop(baseKB,prologSingleValued,1,pfcWatches)])))
  mpred_prop(baseKB,prologSingleValued,1,kb_shared)>=((mfl4([ 'Pred'=Pred, 
                                                              'Arity'=_17582],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22),ax),mfl4(
                                                                 [ 'Pred'=Pred, 
                                                                   'Arity'=_17582],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22))
  '$pt'(baseKB,genlMt(_17272,baseKB),(_17272\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_416458:prologSingleValued/1))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_430706:prologSingleValued/1))) }])))>=(mpred_prop(baseKB,prologSingleValued,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,kb_shared),'$pt'(baseKB,genlMt(_17272,baseKB),(_17272\=baseKB*->rhs(
                                                                           [ { nop( dmsg_pretty( Call :  
                                                                                                      
                                                                                                   call(kb_shared,_466942:prologSingleValued/1))), 
                                                                               show_failure( on_x_fail( Call1 :  
                                                                                                             
                                                                                                          call(kb_shared,_481190:prologSingleValued/1))) }])))))
  mpred_prop(baseKB,singleValuedInArg,2,pfcCallCode)>=(mfl4([ 'Pred'=Pred, 
                                                              'Arity'=_17248],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22),ax)
  mpred_prop(baseKB,prologSingleValued,1,pfcPosTrigger)>=(mfl4([ 'Pred'=Pred, 
                                                                 'Arity'=_17186],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22),ax)
  mpred_prop(baseKB,prologSingleValued,1,pfcWatches)>=(mpred_prop(baseKB,prologSingleValued,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcPosTrigger),rhs(
                                                            [ mpred_prop(baseKB,prologSingleValued,1,pfcWatches)])))
  '$pt'(baseKB,prologSingleValued(_16918),'$pt'(baseKB,arity(_16918,_16932),(\+singleValuedInArg(_16918,_16948)*->rhs([ singleValuedInArg(SingleValuedInArg,SingleValuedInArg1)]))))>=((prologSingleValued(_16986),arity(_16986,_16998)/(\+singleValuedInArg(_16986,_17008))==>singleValuedInArg(_16986,_16998)),mfl4(
                                                                      [ 'Pred'=Pred, 
                                                                        'Arity'=_17048],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',22))
  arity(singleValuedInArgDefault,3)>=(mfl4(_16888,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',42),ax)
  arity(singleValuedInArgDefault,3)>=((mfl4(_16844,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',43),ax),mfl4(_16854,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',43))
  meta_argtypes(singleValuedInArgDefault(prologSingleValued,ftInt,ftTerm))>=(mfl4(_16804,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',43),ax)
  prologHybrid(singleValuedInArgDefault)>=(mfl4(_16764,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',43),ax)
  singleValuedInArg(singleValuedInArgDefault,3)>=(mfl4(_16732,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',44),ax)
  (singleValuedInArg(_16670,_16672)==>prologSingleValued(_16670))>=(mfl4([ 'Pred'=Pred],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',46),ax)
  mpred_prop(baseKB,prologSingleValued,1,pfcRHS)>=(mfl4([ 'Pred'=Pred],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',46),ax)
  mpred_prop(baseKB,prologSingleValued,1,pfcCreates)>=(mpred_prop(baseKB,prologSingleValued,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcRHS),rhs(
                                              [ mpred_prop(baseKB,prologSingleValued,1,pfcCreates)])))
  mpred_prop(baseKB,prologSingleValued,1,pfcControlled)>=(mpred_prop(baseKB,prologSingleValued,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                    [ mpred_prop(baseKB,prologSingleValued,1,pfcControlled)]))))
  mpred_prop(baseKB,prologSingleValued,1,prologHybrid)>=(mpred_prop(baseKB,prologSingleValued,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,prologSingleValued,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                                       [ mpred_prop(baseKB,prologSingleValued,1,prologHybrid)]))))
  mpred_prop(baseKB,singleValuedInArg,2,pfcLHS)>=(mfl4([ 'Pred'=Pred],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',46),ax)
  arity(singleValuedInArg,2)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcLHS),rhs(
                    [ arity(singleValuedInArg,2), 
                      functorIsMacro(singleValuedInArg), 
                      mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)])))
  functorIsMacro(singleValuedInArg)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcLHS),rhs(
                           [ arity(singleValuedInArg,2), 
                             functorIsMacro(singleValuedInArg), 
                             mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)])))
  mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcLHS),rhs(
                                           [ arity(singleValuedInArg,2), 
                                             functorIsMacro(singleValuedInArg), 
                                             mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)])))
  mpred_prop(baseKB,singleValuedInArg,2,pfcPosTrigger)>=(mfl4([ 'Pred'=Pred],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',46),ax)
  mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)>=(mpred_prop(baseKB,singleValuedInArg,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArg,2,pfcPosTrigger),rhs(
                                                         [ mpred_prop(baseKB,singleValuedInArg,2,pfcWatches)])))
  '$pt'(baseKB,singleValuedInArg(_15826,_15828),rhs([ prologSingleValued(PrologSingleValued)]))>=((singleValuedInArg(_15858,_15860)==>prologSingleValued(_15858)),mfl4(
                                               [ 'Pred'=Pred],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',46))
  prologSingleValued(mpred_sv)>=(singleValuedInArg(mpred_sv,2),'$pt'(baseKB,singleValuedInArg(_15786,_15788),rhs([ prologSingleValued(PrologSingleValued)])))
  '$pt'(baseKB,arity(mpred_sv,_15646),(\+singleValuedInArg(mpred_sv,_15662)*->rhs([ singleValuedInArg(mpred_sv,SingleValuedInArg_Mpred_sv)])))>=(prologSingleValued(mpred_sv),'$pt'(baseKB,prologSingleValued(mpred_sv),'$pt'(baseKB,arity(mpred_sv,_15646),(\+singleValuedInArg(mpred_sv,_15662)*->rhs(
                                                        [ singleValuedInArg(mpred_sv,SingleValuedInArg_Mpred_sv)])))))
  prologSingleValued(singleValuedInArg)>=(singleValuedInArg(singleValuedInArg,2),'$pt'(baseKB,singleValuedInArg(_15604,_15606),rhs(
           [ prologSingleValued(PrologSingleValued)])))
  '$pt'(baseKB,arity(singleValuedInArg,_15464),(\+singleValuedInArg(singleValuedInArg,_15480)*->rhs([ singleValuedInArg(singleValuedInArg,SingleValuedInArg)])))>=(prologSingleValued(singleValuedInArg),'$pt'(baseKB,prologSingleValued(singleValuedInArg),'$pt'(baseKB,arity(singleValuedInArg,_15464),(\+singleValuedInArg(singleValuedInArg,_15480)*->rhs(
                                                                                                              [ singleValuedInArg(singleValuedInArg,SingleValuedInArg)])))))
  prologSingleValued(singleValuedInArgDefault)>=(singleValuedInArg(singleValuedInArgDefault,3),'$pt'(baseKB,singleValuedInArg(_15422,_15424),rhs(
                         [ prologSingleValued(PrologSingleValued)])))
  '$pt'(baseKB,arity(singleValuedInArgDefault,_15282),(\+singleValuedInArg(singleValuedInArgDefault,_15298)*->rhs([ singleValuedInArg(singleValuedInArgDefault,SingleValuedInArgDefault)])))>=(prologSingleValued(singleValuedInArgDefault),'$pt'(baseKB,prologSingleValued(singleValuedInArgDefault),'$pt'(baseKB,arity(singleValuedInArgDefault,_15282),(\+singleValuedInArg(singleValuedInArgDefault,_15298)*->rhs(
                                              [ singleValuedInArg(singleValuedInArgDefault,SingleValuedInArgDefault)])))))
  (singleValuedInArgDefault(_15190,_15192,_15194)/ground(_15194)==>singleValuedInArg(_15190,_15192))>=(mfl4([ 'SingleValued'=SingleValued, 
                                                                                                              'ArgN'=_15192, 
                                                                                                              'S1'=_15194],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',48),ax)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS)>=(mfl4([ 'SingleValued'=SingleValued, 
                                                                'ArgN'=_15150, 
                                                                'S1'=_15162],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',48),ax)
  arity(singleValuedInArgDefault,3)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS),rhs(
                                         [ arity(singleValuedInArgDefault,3), 
                                           functorIsMacro(singleValuedInArgDefault), 
                                           mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)])))
  functorIsMacro(singleValuedInArgDefault)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS),rhs(
                                                [ arity(singleValuedInArgDefault,3), 
                                                  functorIsMacro(singleValuedInArgDefault), 
                                                  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)])))
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcLHS),rhs(
                                                                [ arity(singleValuedInArgDefault,3), 
                                                                  functorIsMacro(singleValuedInArgDefault), 
                                                                  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)])))
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcPosTrigger)>=(mfl4([ 'SingleValued'=SingleValued, 
                                                                       'ArgN'=_14792, 
                                                                       'S1'=_14804],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',48),ax)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcPosTrigger),rhs(
                                                                              [ mpred_prop(baseKB,singleValuedInArgDefault,3,pfcWatches)])))
  '$pt'(baseKB,singleValuedInArgDefault(_14542,_14544,_14546),(ground(_14546)*->rhs([ singleValuedInArg(SingleValuedInArg,SingleValuedInArg1)])))>=((singleValuedInArgDefault(_14594,_14596,_14598)/ground(_14598)==>singleValuedInArg(_14594,_14596)),mfl4(
            [ 'SingleValued'=SingleValued, 
              'ArgN'=_14642, 
              'S1'=_14654],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',48))
  mpred_prop(baseKB,singleValuedInArgAX,3,kb_shared)>=(mfl4(_14512,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',50),ax)
  '$pt'(baseKB,genlMt(_14238,baseKB),(_14238\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                      
                                                                                   call(kb_shared,_278522:singleValuedInArgAX/3))), 
                                                               show_failure( on_x_fail( Call1 :  
                                                                                             
                                                                                          call(kb_shared,_292770:singleValuedInArgAX/3))) }])))>=(mpred_prop(baseKB,singleValuedInArgAX,3,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,kb_shared),'$pt'(baseKB,genlMt(_14238,baseKB),(_14238\=baseKB*->rhs(
                                                                              [ { nop( dmsg_pretty( Call :  
                                                                                                         
                                                                                                      call(kb_shared,_329006:singleValuedInArgAX/3))), 
                                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                                
                                                                                                             call(kb_shared,_343254:singleValuedInArgAX/3))) }])))))
  (singleValuedInArg(_14146,_14148),arity(_14146,_14154)==>singleValuedInArgAX(_14146,_14154,_14148))>=(mfl4([ 'F'=F, 
                                                                                                               'N'=_14148, 
                                                                                                               'A'=_14154],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',52),ax)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcRHS)>=(mfl4([ 'F'=F, 
                                                           'N'=_14106, 
                                                           'A'=_14118],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',52),ax)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcCreates)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcRHS),rhs(
                                                 [ mpred_prop(baseKB,singleValuedInArgAX,3,pfcCreates)])))
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcControlled)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                       [ mpred_prop(baseKB,singleValuedInArgAX,3,pfcControlled)]))))
  mpred_prop(baseKB,singleValuedInArgAX,3,prologHybrid)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                                          [ mpred_prop(baseKB,singleValuedInArgAX,3,prologHybrid)]))))
  '$pt'(baseKB,singleValuedInArg(_13676,_13678),(arity(_13676,_13690)*->rhs([ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)])))>=((singleValuedInArg(_13730,_13732),arity(_13730,_13738)==>singleValuedInArgAX(_13730,_13738,_13732)),mfl4(
                                [ 'F'=F, 
                                  'N'=_13780, 
                                  'A'=_13792],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',52))
  singleValuedInArgAX(mpred_sv,2,2)>=(singleValuedInArg(mpred_sv,2),'$pt'(baseKB,singleValuedInArg(_13620,_13622),(arity(_13620,_13634)*->rhs(
                      [ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)]))))
  singleValuedInArgAX(singleValuedInArg,2,2)>=(singleValuedInArg(singleValuedInArg,2),'$pt'(baseKB,singleValuedInArg(_13544,_13546),(arity(_13544,_13558)*->rhs(
                                        [ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)]))))
  singleValuedInArgAX(singleValuedInArgDefault,3,3)>=(singleValuedInArg(singleValuedInArgDefault,3),'$pt'(baseKB,singleValuedInArg(_13468,_13470),(arity(_13468,_13482)*->rhs(
                                                      [ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)]))))
  '$pt'(baseKB,arity(_13308,_13310),(singleValuedInArg(_13308,_13322)*->rhs([ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)])))>=((singleValuedInArg(_13362,_13364),arity(_13362,_13370)==>singleValuedInArgAX(_13362,_13370,_13364)),mfl4(
                                [ 'F'=F, 
                                  'N'=_13412, 
                                  'A'=_13424],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',52))
  singleValuedInArgAX(mpred_sv,2,2)>=(arity(mpred_sv,2),'$pt'(baseKB,arity(_13252,_13254),(singleValuedInArg(_13252,_13266)*->rhs(
          [ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)]))))
  singleValuedInArgAX(singleValuedInArg,2,2)>=(arity(singleValuedInArg,2),'$pt'(baseKB,arity(_13176,_13178),(singleValuedInArg(_13176,_13190)*->rhs(
                            [ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)]))))
  singleValuedInArgAX(singleValuedInArgDefault,3,3)>=(arity(singleValuedInArgDefault,3),'$pt'(baseKB,arity(_13100,_13102),(singleValuedInArg(_13100,_13114)*->rhs(
                                          [ singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX2)]))))
  (singleValuedInArgAX(_12830,_12832,_12834),{functor(_12848,_12830,_12832),arg(_12834,_12848,_12866),replace_arg(_12848,_12834,_12874,_12876)}==>(_12848,{_12866\=isMissing,call(dif:dif(_12874,_12866)),call_u(_12876),ground(_12876)},_12876==> \+_12876,_12848))>=(mfl4(
                            [ 'F'=F, 
                              'A'=_12832, 
                              'N'=_12834, 
                              'P'=_12848, 
                              'P_SLOT'=_12866, 
                              'Q_SLOT'=_12874, 
                              'Q'=_12876],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,call,1,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                 'A'=_12742, 
                                                 'N'=_12754, 
                                                 'P'=_12766, 
                                                 'P_SLOT'=_12778, 
                                                 'Q_SLOT'=_12790, 
                                                 'Q'=_12802],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,call_u,1,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                   'A'=_12620, 
                                                   'N'=_12632, 
                                                   'P'=_12644, 
                                                   'P_SLOT'=_12656, 
                                                   'Q_SLOT'=_12668, 
                                                   'Q'=_12680],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS)>=(mfl4([ 'F'=F, 
                                                           'A'=_12498, 
                                                           'N'=_12510, 
                                                           'P'=_12522, 
                                                           'P_SLOT'=_12534, 
                                                           'Q_SLOT'=_12546, 
                                                           'Q'=_12558],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  arity(singleValuedInArgAX,3)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS),rhs(
                          [ arity(singleValuedInArgAX,3), 
                            functorIsMacro(singleValuedInArgAX), 
                            mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)])))
  hybrid_support(singleValuedInArgAX,3)>=(arity(singleValuedInArgAX,3),'$pt'(baseKB,arity(singleValuedInArgAX,3),(pfcControlled(singleValuedInArgAX)*->rhs(
                                   [ hybrid_support(singleValuedInArgAX,3)]))))
  functorIsMacro(singleValuedInArgAX)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS),rhs(
                                 [ arity(singleValuedInArgAX,3), 
                                   functorIsMacro(singleValuedInArgAX), 
                                   mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)])))
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcLHS),rhs(
                                                 [ arity(singleValuedInArgAX,3), 
                                                   functorIsMacro(singleValuedInArgAX), 
                                                   mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)])))
  mpred_prop(baseKB,functor,3,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                    'A'=_12022, 
                                                    'N'=_12034, 
                                                    'P'=_12046, 
                                                    'P_SLOT'=_12058, 
                                                    'Q_SLOT'=_12070, 
                                                    'Q'=_12082],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,arg,3,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                'A'=_11900, 
                                                'N'=_11912, 
                                                'P'=_11924, 
                                                'P_SLOT'=_11936, 
                                                'Q_SLOT'=_11948, 
                                                'Q'=_11960],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,replace_arg,4,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                        'A'=_11778, 
                                                        'N'=_11790, 
                                                        'P'=_11802, 
                                                        'P_SLOT'=_11814, 
                                                        'Q_SLOT'=_11826, 
                                                        'Q'=_11838],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcPosTrigger)>=(mfl4([ 'F'=F, 
                                                                  'A'=_11656, 
                                                                  'N'=_11668, 
                                                                  'P'=_11680, 
                                                                  'P_SLOT'=_11692, 
                                                                  'Q_SLOT'=_11704, 
                                                                  'Q'=_11716],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)>=(mpred_prop(baseKB,singleValuedInArgAX,3,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX,3,pfcPosTrigger),rhs(
                                                               [ mpred_prop(baseKB,singleValuedInArgAX,3,pfcWatches)])))
  '$pt'(baseKB,singleValuedInArgAX(_11138,_11140,_11142),(functor(_11158,_11138,_11140),arg(_11142,_11158,_11176),replace_arg(_11158,_11142,_11184,_11186)*->rhs(
                                         [ ( (   _148778  ,
                                               { Missing\=isMissing, 
                                                 call( dif : dif(Dif,Dif2)), 
                                                 call_u(U), 
                                                 ground(Ground) } , 
                                               _147258) ==> 
                                             \+_147320,_147316)])))>=((singleValuedInArgAX(_11298,_11300,_11302),{functor(_11316,_11298,_11300),arg(_11302,_11316,_11334),replace_arg(_11316,_11302,_11342,_11344)}==>(_11316,{_11334\=isMissing,call(dif:dif(_11342,_11334)),call_u(_11344),ground(_11344)},_11344==> \+_11344,_11316)),mfl4(
                                                                                              [ 'F'=F, 
                                                                                                'A'=_11458, 
                                                                                                'N'=_11470, 
                                                                                                'P'=_11482, 
                                                                                                'P_SLOT'=_11494, 
                                                                                                'Q_SLOT'=_11506, 
                                                                                                'Q'=_11518],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55))
  (mpred_sv(_10850,_10852),{_10852\=isMissing,call(dif:dif(_10894,_10852)),call_u(mpred_sv(_10850,_10894)),ground(mpred_sv(_10850,_10894))},mpred_sv(_10850,_10894)==> \+mpred_sv(_10850,_10894),mpred_sv(_10850,_10852))>=(singleValuedInArgAX(mpred_sv,2,2),'$pt'(baseKB,singleValuedInArgAX(_10976,_10978,_10980),(functor(_10996,_10976,_10978),arg(_10980,_10996,_11014),replace_arg(_10996,_10980,_11022,_11024)*->rhs(
                                                     [ ( (   _183498  ,
                                                           { Missing\=isMissing, 
                                                             call( dif : dif(Dif,Dif2)), 
                                                             call_u(U), 
                                                             ground(Ground) } , 
                                                           _181978) ==> 
                                                         \+_182040,_182036)]))))
  '$pt'(baseKB,mpred_sv(_10492,_10494),(_10494\=isMissing,call(dif:dif(_10532,_10494)),call_u(mpred_sv(_10492,_10532)),ground(mpred_sv(_10492,_10532))*->'$pt'(baseKB,mpred_sv(_10492,_10532),rhs(
                                                                          [ \+( mpred_sv(Mpred_sv,Sv)), 
                                                                            mpred_sv(_10492,_10494)]))))>=((mpred_sv(_10628,_10630),{_10630\=isMissing,call(dif:dif(_10672,_10630)),call_u(mpred_sv(_10628,_10672)),ground(mpred_sv(_10628,_10672))},mpred_sv(_10628,_10672)==> \+mpred_sv(_10628,_10672),mpred_sv(_10628,_10630)),mfl4(
                                                                                        [ 'F'=F, 
                                                                                          'A'=_10762, 
                                                                                          'N'=_10774, 
                                                                                          'P'=_10786, 
                                                                                          'P_SLOT'=_10798, 
                                                                                          'Q_SLOT'=_10810, 
                                                                                          'Q'=_10822],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55))
  (singleValuedInArg(_10204,_10206),{_10206\=isMissing,call(dif:dif(_10248,_10206)),call_u(singleValuedInArg(_10204,_10248)),ground(singleValuedInArg(_10204,_10248))},singleValuedInArg(_10204,_10248)==> \+singleValuedInArg(_10204,_10248),singleValuedInArg(_10204,_10206))>=(singleValuedInArgAX(singleValuedInArg,2,2),'$pt'(baseKB,singleValuedInArgAX(_10330,_10332,_10334),(functor(_10350,_10330,_10332),arg(_10334,_10350,_10368),replace_arg(_10350,_10334,_10376,_10378)*->rhs(
                                                                                                                    [ ( (   _225130  ,
                                                                                                                          { Missing\=isMissing, 
                                                                                                                            call( dif : dif(Dif,Dif2)), 
                                                                                                                            call_u(U), 
                                                                                                                            ground(Ground) } , 
                                                                                                                          _223610) ==> 
                                                                                                                        \+_223672,_223668)]))))
  '$pt'(baseKB,singleValuedInArg(_9846,_9848),(_9848\=isMissing,call(dif:dif(_9886,_9848)),call_u(singleValuedInArg(_9846,_9886)),ground(singleValuedInArg(_9846,_9886))*->'$pt'(baseKB,singleValuedInArg(_9846,_9886),rhs(
                                                                                                   [ \+( singleValuedInArg(SingleValuedInArg,SingleValuedInArg1)), 
                                                                                                     singleValuedInArg(_9846,_9848)]))))>=((singleValuedInArg(_9982,_9984),{_9984\=isMissing,call(dif:dif(_10026,_9984)),call_u(singleValuedInArg(_9982,_10026)),ground(singleValuedInArg(_9982,_10026))},singleValuedInArg(_9982,_10026)==> \+singleValuedInArg(_9982,_10026),singleValuedInArg(_9982,_9984)),mfl4(
                                            [ 'F'=F, 
                                              'A'=_10116, 
                                              'N'=_10128, 
                                              'P'=_10140, 
                                              'P_SLOT'=_10152, 
                                              'Q_SLOT'=_10164, 
                                              'Q'=_10176],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55))
  (singleValuedInArgDefault(_9546,_9548,_9550),{_9550\=isMissing,call(dif:dif(_9592,_9550)),call_u(singleValuedInArgDefault(_9546,_9548,_9592)),ground(singleValuedInArgDefault(_9546,_9548,_9592))},singleValuedInArgDefault(_9546,_9548,_9592)==> \+singleValuedInArgDefault(_9546,_9548,_9592),singleValuedInArgDefault(_9546,_9548,_9550))>=(singleValuedInArgAX(singleValuedInArgDefault,3,3),'$pt'(baseKB,singleValuedInArgAX(_9684,_9686,_9688),(functor(_9704,_9684,_9686),arg(_9688,_9704,_9722),replace_arg(_9704,_9688,_9730,_9732)*->rhs(
                                                     [ ( (   _268880  ,
                                                           { Missing\=isMissing, 
                                                             call( dif : dif(Dif,Dif2)), 
                                                             call_u(U), 
                                                             ground(Ground) } , 
                                                           _267360) ==> 
                                                         \+_267422,_267418)]))))
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcRHS)>=(mfl4([ 'F'=F, 
                                                                'A'=_9458, 
                                                                'N'=_9470, 
                                                                'P'=_9482, 
                                                                'P_SLOT'=_9494, 
                                                                'Q_SLOT'=_9506, 
                                                                'Q'=_9518],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55),ax)
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcCreates)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcRHS),rhs(
                                                                [ mpred_prop(baseKB,singleValuedInArgDefault,3,pfcCreates)])))
  mpred_prop(baseKB,singleValuedInArgDefault,3,pfcControlled)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                                      [ mpred_prop(baseKB,singleValuedInArgDefault,3,pfcControlled)]))))
  mpred_prop(baseKB,singleValuedInArgDefault,3,prologHybrid)>=(mpred_prop(baseKB,singleValuedInArgDefault,3,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgDefault,3,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
 [ mpred_prop(baseKB,singleValuedInArgDefault,3,prologHybrid)]))))
  '$pt'(baseKB,singleValuedInArgDefault(_8790,_8792,_8794),(_8794\=isMissing,call(dif:dif(_8832,_8794)),call_u(singleValuedInArgDefault(_8790,_8792,_8832)),ground(singleValuedInArgDefault(_8790,_8792,_8832))*->'$pt'(baseKB,singleValuedInArgDefault(_8790,_8792,_8832),rhs(
                               [ \+( singleValuedInArgDefault(SingleValuedInArgDefault1,SingleValuedInArgDefault,SingleValuedInArgDefault2)), 
                                 singleValuedInArgDefault(_8790,_8792,_8794)]))))>=((singleValuedInArgDefault(_8938,_8940,_8942),{_8942\=isMissing,call(dif:dif(_8984,_8942)),call_u(singleValuedInArgDefault(_8938,_8940,_8984)),ground(singleValuedInArgDefault(_8938,_8940,_8984))},singleValuedInArgDefault(_8938,_8940,_8984)==> \+singleValuedInArgDefault(_8938,_8940,_8984),singleValuedInArgDefault(_8938,_8940,_8942)),mfl4(
                                                              [ 'F'=F, 
                                                                'A'=_9084, 
                                                                'N'=_9096, 
                                                                'P'=_9108, 
                                                                'P_SLOT'=_9120, 
                                                                'Q_SLOT'=_9132, 
                                                                'Q'=_9144],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',55))
  (unused==>(singleValuedInArgAX(_8538,_8540,_8542),{functor(_8556,_8538,_8540),arg(_8542,_8556,_8574),replace_arg(_8556,_8542,_8582,_8584)}==>(_8556/ground(_8556)==>{_8574\==isMissing,call(dif:dif(_8582,_8574)),call_u(_8584),ground(_8584),ignore(retract(_8584))})))>=(mfl4(
                                  [ 'F'=F, 
                                    'A'=_8540, 
                                    'N'=_8542, 
                                    'P'=_8556, 
                                    'P_SLOT'=_8574, 
                                    'Q_SLOT'=_8582, 
                                    'Q'=_8584],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63),ax)
  mpred_prop(baseKB,ignore,1,pfcCallCode)>=(mfl4([ 'F'=F, 
                                                   'A'=_8444, 
                                                   'N'=_8456, 
                                                   'P'=_8468, 
                                                   'P_SLOT'=_8480, 
                                                   'Q_SLOT'=_8492, 
                                                   'Q'=_8504],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63),ax)
  mpred_prop(baseKB,unused,0,pfcLHS)>=(mfl4([ 'F'=F, 
                                              'A'=_8322, 
                                              'N'=_8334, 
                                              'P'=_8346, 
                                              'P_SLOT'=_8358, 
                                              'Q_SLOT'=_8370, 
                                              'Q'=_8382],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63),ax)
  arity(unused,0)>=(mpred_prop(baseKB,unused,0,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,unused,0,pfcLHS),rhs([ arity(unused,0), 
                                                                                                             functorIsMacro(unused), 
                                                                                                             mpred_prop(baseKB,unused,0,pfcWatches)])))
  functorIsMacro(unused)>=(mpred_prop(baseKB,unused,0,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,unused,0,pfcLHS),rhs([ arity(unused,0), 
                                                                                                                    functorIsMacro(unused), 
                                                                                                                    mpred_prop(baseKB,unused,0,pfcWatches)])))
  mpred_prop(baseKB,unused,0,pfcWatches)>=(mpred_prop(baseKB,unused,0,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,unused,0,pfcLHS),rhs(
          [ arity(unused,0), 
            functorIsMacro(unused), 
            mpred_prop(baseKB,unused,0,pfcWatches)])))
  mpred_prop(baseKB,unused,0,kb_shared)>=((mfl4([ 'F'=F, 
                                                  'A'=_7822, 
                                                  'N'=_7834, 
                                                  'P'=_7846, 
                                                  'P_SLOT'=_7858, 
                                                  'Q_SLOT'=_7870, 
                                                  'Q'=_7882],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63),ax),mfl4(
                                                [ 'F'=F, 
                                                  'A'=_7822, 
                                                  'N'=_7834, 
                                                  'P'=_7846, 
                                                  'P_SLOT'=_7858, 
                                                  'Q_SLOT'=_7870, 
                                                  'Q'=_7882],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63))
  '$pt'(baseKB,genlMt(_7512,baseKB),(_7512\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_422120:unused/0))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_436358:unused/0))) }])))>=(mpred_prop(baseKB,unused,0,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,unused,0,kb_shared),'$pt'(baseKB,genlMt(_7512,baseKB),(_7512\=baseKB*->rhs(
                                   [ { nop( dmsg_pretty( Call :  
                                                              
                                                           call(kb_shared,_472580:unused/0))), 
                                       show_failure( on_x_fail( Call1 :  
                                                                     
                                                                  call(kb_shared,_93804:unused/0))) }])))))
  mpred_prop(baseKB,unused,0,pfcPosTrigger)>=(mfl4([ 'F'=F, 
                                                     'A'=_7428, 
                                                     'N'=_7440, 
                                                     'P'=_7452, 
                                                     'P_SLOT'=_7464, 
                                                     'Q_SLOT'=_7476, 
                                                     'Q'=_7488],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63),ax)
  mpred_prop(baseKB,unused,0,pfcWatches)>=(mpred_prop(baseKB,unused,0,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,unused,0,pfcPosTrigger),rhs(
                        [ mpred_prop(baseKB,unused,0,pfcWatches)])))
  '$pt'(baseKB,unused,rhs([ (   ( singleValuedInArgAX(SingleValuedInArgAX1,SingleValuedInArgAX,SingleValuedInArgAX12) , 
                                  { functor(Functor3,Functor,Functor13), 
                                    arg(Arg5,Arg,Arg14), 
                                    replace_arg(Replace_arg8,Replace_arg7,Replace_arg,Arg15) })  ==>
                              Ground/ground(Ground16) ==> 
                              { Missing\==isMissing, 
                                call( dif : dif(Dif,Dif17)), 
                                call_u(U), 
                                ground(Ground19), 
                                ignore( retract(Retract)) })]))>=((unused==>(singleValuedInArgAX(_7068,_7070,_7072),{functor(_7086,_7068,_7070),arg(_7072,_7086,_7104),replace_arg(_7086,_7072,_7112,_7114)}==>(_7086/ground(_7086)==>{_7104\==isMissing,call(dif:dif(_7112,_7104)),call_u(_7114),ground(_7114),ignore(retract(_7114))}))),mfl4(
                                                                                                [ 'F'=F, 
                                                                                                  'A'=_7230, 
                                                                                                  'N'=_7242, 
                                                                                                  'P'=_7254, 
                                                                                                  'P_SLOT'=_7266, 
                                                                                                  'Q_SLOT'=_7278, 
                                                                                                  'Q'=_7290],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',63))
  (unused==>(singleValuedInArgAX_maybe(_6624,_6626,_6628),{functor(_6642,_6624,_6626),arg(_6628,_6642,_6660),replace_arg(_6642,_6628,_6668,_6670)}==>(_6642/ground(_6642)==>{_6660\==isMissing,call(dif:dif(_6668,_6660)),call_u(_6670),ground(_6670)},\+_6670,_6642,single_override_maybe(_6642,_6670))))>=(mfl4(
                                                                  [ 'F'=F, 
                                                                    'A'=_6626, 
                                                                    'N'=_6628, 
                                                                    'P'=_6642, 
                                                                    'P_SLOT'=_6660, 
                                                                    'Q_SLOT'=_6668, 
                                                                    'Q'=_6670],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71),ax)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcRHS)>=(mfl4([ 'F'=F, 
                                                                 'A'=_6530, 
                                                                 'N'=_6542, 
                                                                 'P'=_6554, 
                                                                 'P_SLOT'=_6566, 
                                                                 'Q_SLOT'=_6578, 
                                                                 'Q'=_6590],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71),ax)
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcCreates)>=(mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcRHS),rhs(
                                                                   [ mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcCreates)])))
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,kb_shared)>=((mfl4([ 'F'=F, 
                                                                     'A'=_6238, 
                                                                     'N'=_6250, 
                                                                     'P'=_6262, 
                                                                     'P_SLOT'=_6274, 
                                                                     'Q_SLOT'=_6286, 
                                                                     'Q'=_6298],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71),ax),mfl4(
                                                                   [ 'F'=F, 
                                                                     'A'=_6238, 
                                                                     'N'=_6250, 
                                                                     'P'=_6262, 
                                                                     'P_SLOT'=_6274, 
                                                                     'Q_SLOT'=_6286, 
                                                                     'Q'=_6298],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71))
  '$pt'(baseKB,genlMt(_5928,baseKB),(_5928\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_250484:singleValuedInArgAX_maybe/3))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_264738:singleValuedInArgAX_maybe/3))) }])))>=(mpred_prop(baseKB,singleValuedInArgAX_maybe,3,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX_maybe,3,kb_shared),'$pt'(baseKB,genlMt(_5928,baseKB),(_5928\=baseKB*->rhs(
                                                                                            [ { nop( dmsg_pretty( Call :  
                                                                                                                       
                                                                                                                    call(kb_shared,_300982:singleValuedInArgAX_maybe/3))), 
                                                                                                show_failure( on_x_fail( Call1 :  
                                                                                                                              
                                                                                                                           call(kb_shared,_315236:singleValuedInArgAX_maybe/3))) }])))))
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcControlled)>=(mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                                         [ mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcControlled)]))))
  mpred_prop(baseKB,singleValuedInArgAX_maybe,3,prologHybrid)>=(mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,singleValuedInArgAX_maybe,3,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
    [ mpred_prop(baseKB,singleValuedInArgAX_maybe,3,prologHybrid)]))))
  mpred_prop(baseKB,single_override_maybe,2,pfcRHS)>=(mfl4([ 'F'=F, 
                                                             'A'=_5668, 
                                                             'N'=_5680, 
                                                             'P'=_5692, 
                                                             'P_SLOT'=_5704, 
                                                             'Q_SLOT'=_5716, 
                                                             'Q'=_5728],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71),ax)
  mpred_prop(baseKB,single_override_maybe,2,pfcCreates)>=(mpred_prop(baseKB,single_override_maybe,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,single_override_maybe,2,pfcRHS),rhs(
                                                       [ mpred_prop(baseKB,single_override_maybe,2,pfcCreates)])))
  mpred_prop(baseKB,single_override_maybe,2,kb_shared)>=((mfl4([ 'F'=F, 
                                                                 'A'=_5376, 
                                                                 'N'=_5388, 
                                                                 'P'=_5400, 
                                                                 'P_SLOT'=_5412, 
                                                                 'Q_SLOT'=_5424, 
                                                                 'Q'=_5436],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71),ax),mfl4(
                                                               [ 'F'=F, 
                                                                 'A'=_5376, 
                                                                 'N'=_5388, 
                                                                 'P'=_5400, 
                                                                 'P_SLOT'=_5412, 
                                                                 'Q_SLOT'=_5424, 
                                                                 'Q'=_5436],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71))
  '$pt'(baseKB,genlMt(_5066,baseKB),(_5066\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_390614:single_override_maybe/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_404864:single_override_maybe/2))) }])))>=(mpred_prop(baseKB,single_override_maybe,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,single_override_maybe,2,kb_shared),'$pt'(baseKB,genlMt(_5066,baseKB),(_5066\=baseKB*->rhs(
                                                                                [ { nop( dmsg_pretty( Call :  
                                                                                                           
                                                                                                        call(kb_shared,_441102:single_override_maybe/2))), 
                                                                                    show_failure( on_x_fail( Call1 :  
                                                                                                                  
                                                                                                               call(kb_shared,_455352:single_override_maybe/2))) }])))))
  mpred_prop(baseKB,single_override_maybe,2,pfcControlled)>=(mpred_prop(baseKB,single_override_maybe,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,single_override_maybe,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                                             [ mpred_prop(baseKB,single_override_maybe,2,pfcControlled)]))))
  mpred_prop(baseKB,single_override_maybe,2,prologHybrid)>=(mpred_prop(baseKB,single_override_maybe,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,single_override_maybe,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                                                [ mpred_prop(baseKB,single_override_maybe,2,prologHybrid)]))))
  '$pt'(baseKB,unused,rhs([ (   ( singleValuedInArgAX_maybe(SingleValuedInArgAX_maybe1,SingleValuedInArgAX_maybe,Maybe) , 
                                  { functor(Functor3,Functor,Functor15), 
                                    arg(Arg5,Arg,Arg16), 
                                    replace_arg(Replace_arg8,Replace_arg7,Replace_arg,Arg17) })  ==>
                              Ground/ground(Ground18) ==> 
                              (   { Missing\==isMissing, 
                                    call( dif : dif(Dif,Dif19)), 
                                    call_u(U), 
                                    ground(Ground21) }  ,
                                \+_110542 , 
                                Single_override_maybe13 , 
                                single_override_maybe(Single_override_maybe,Maybe22)))]))>=((unused==>(singleValuedInArgAX_maybe(_4630,_4632,_4634),{functor(_4648,_4630,_4632),arg(_4634,_4648,_4666),replace_arg(_4648,_4634,_4674,_4676)}==>(_4648/ground(_4648)==>{_4666\==isMissing,call(dif:dif(_4674,_4666)),call_u(_4676),ground(_4676)},\+_4676,_4648,single_override_maybe(_4648,_4676)))),mfl4(
                                  [ 'F'=F, 
                                    'A'=_4806, 
                                    'N'=_4818, 
                                    'P'=_4830, 
                                    'P_SLOT'=_4842, 
                                    'Q_SLOT'=_4854, 
                                    'Q'=_4866],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',71))
  (single_override(_4320,_4322),{ignore(retract(_4322))}==>(\+_4320==> \+single_override(_4320,_4322),{mpred_supported(_4322)},_4322))>=(mfl4(
                      [ 'P'=P, 
                        'Q'=_4322],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78),ax)
  mpred_prop(baseKB,single_override,2,pfcRHS)>=(mfl4([ 'P'=P, 
                                                       'Q'=_4292],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78),ax)
  mpred_prop(baseKB,single_override,2,pfcCreates)>=(mpred_prop(baseKB,single_override,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcRHS),rhs(
                                     [ mpred_prop(baseKB,single_override,2,pfcCreates)])))
  mpred_prop(baseKB,single_override,2,kb_shared)>=((mfl4([ 'P'=P, 
                                                           'Q'=_4120],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78),ax),mfl4(
                                                         [ 'P'=P, 
                                                           'Q'=_4120],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78))
  '$pt'(baseKB,genlMt(_3810,baseKB),(_3810\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_193544:single_override/2))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_207792:single_override/2))) }])))>=(mpred_prop(baseKB,single_override,2,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,kb_shared),'$pt'(baseKB,genlMt(_3810,baseKB),(_3810\=baseKB*->rhs(
                                                              [ { nop( dmsg_pretty( Call :  
                                                                                         
                                                                                      call(kb_shared,_244026:single_override/2))), 
                                                                  show_failure( on_x_fail( Call1 :  
                                                                                                
                                                                                             call(kb_shared,_258274:single_override/2))) }])))))
  mpred_prop(baseKB,single_override,2,pfcControlled)>=(mpred_prop(baseKB,single_override,2,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                                           [ mpred_prop(baseKB,single_override,2,pfcControlled)]))))
  mpred_prop(baseKB,single_override,2,prologHybrid)>=(mpred_prop(baseKB,single_override,2,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                                              [ mpred_prop(baseKB,single_override,2,prologHybrid)]))))
  mpred_prop(baseKB,mpred_supported,1,pfcCallCode)>=(mfl4([ 'P'=P, 
                                                            'Q'=_3610],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78),ax)
  mpred_prop(baseKB,single_override,2,pfcLHS)>=(mfl4([ 'P'=P, 
                                                       'Q'=_3548],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78),ax)
  arity(single_override,2)>=(mpred_prop(baseKB,single_override,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcLHS),rhs(
              [ arity(single_override,2), 
                functorIsMacro(single_override), 
                mpred_prop(baseKB,single_override,2,pfcWatches)])))
  hybrid_support(single_override,2)>=(arity(single_override,2),'$pt'(baseKB,arity(single_override,2),(pfcControlled(single_override)*->rhs(
                   [ hybrid_support(single_override,2)]))))
  functorIsMacro(single_override)>=(mpred_prop(baseKB,single_override,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcLHS),rhs(
                     [ arity(single_override,2), 
                       functorIsMacro(single_override), 
                       mpred_prop(baseKB,single_override,2,pfcWatches)])))
  mpred_prop(baseKB,single_override,2,pfcWatches)>=(mpred_prop(baseKB,single_override,2,pfcLHS),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcLHS),rhs(
                                     [ arity(single_override,2), 
                                       functorIsMacro(single_override), 
                                       mpred_prop(baseKB,single_override,2,pfcWatches)])))
  mpred_prop(baseKB,single_override,2,pfcPosTrigger)>=(mfl4([ 'P'=P, 
                                                              'Q'=_3132],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78),ax)
  mpred_prop(baseKB,single_override,2,pfcWatches)>=(mpred_prop(baseKB,single_override,2,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,single_override,2,pfcPosTrigger),rhs(
                                                   [ mpred_prop(baseKB,single_override,2,pfcWatches)])))
  '$pt'(baseKB,single_override(_2818,_2820),(ignore(retract(_2820))*->rhs([ ( \+_307164 ==> 
                                                                              (   \+( single_override(Single_override,Override))  ,
                                                                                { mpred_supported(Supported) } , 
                                                                                _307186))])))>=((single_override(_2906,_2908),{ignore(retract(_2908))}==>(\+_2906==> \+single_override(_2906,_2908),{mpred_supported(_2908)},_2908)),mfl4(
                                                                                                                  [ 'P'=P, 
                                                                                                                    'Q'=_2994],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_singleValued.pfc.pl',78))
  mtHybrid(baseKB)>=(mfl4([ 'Mod'=(+), 
                            'SM'=baseKB, 
                            'TM'=user, 
                            'CM'=baseKB, 
                            'File'='/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfc.pl', 
                            'Why'=pfc_mod],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfc.pl',69),ax)
  (bc_01_d_q(_2658)<-bc_01_d_p(_2658))>=(mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18),ax)
  mpred_prop(baseKB,bc_01_d_q,1,pfcRHS)>=(mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18),ax)
  mpred_prop(baseKB,bc_01_d_q,1,pfcCreates)>=(mpred_prop(baseKB,bc_01_d_q,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,bc_01_d_q,1,pfcRHS),rhs(
                   [ mpred_prop(baseKB,bc_01_d_q,1,pfcCreates)])))
  mpred_prop(baseKB,bc_01_d_q,1,kb_shared)>=((mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18),ax),mfl4(
                               [ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18))
  '$pt'(baseKB,genlMt(_2190,baseKB),(_2190\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_375636:bc_01_d_q/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_389878:bc_01_d_q/1))) }])))>=(mpred_prop(baseKB,bc_01_d_q,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,bc_01_d_q,1,kb_shared),'$pt'(baseKB,genlMt(_2190,baseKB),(_2190\=baseKB*->rhs(
                                            [ { nop( dmsg_pretty( Call :  
                                                                       
                                                                    call(kb_shared,_426106:bc_01_d_q/1))), 
                                                show_failure( on_x_fail( Call1 :  
                                                                              
                                                                           call(kb_shared,_440348:bc_01_d_q/1))) }])))))
  mpred_prop(baseKB,bc_01_d_q,1,pfcControlled)>=(mpred_prop(baseKB,bc_01_d_q,1,pfcRHS),'$pt'(baseKB,mpred_prop(baseKB,bc_01_d_q,1,pfcRHS),(genlPreds(pfcRHS,pfcControlled)*->rhs(
                                                         [ mpred_prop(baseKB,bc_01_d_q,1,pfcControlled)]))))
  mpred_prop(baseKB,bc_01_d_q,1,prologHybrid)>=(mpred_prop(baseKB,bc_01_d_q,1,pfcControlled),'$pt'(baseKB,mpred_prop(baseKB,bc_01_d_q,1,pfcControlled),(genlPreds(pfcControlled,prologHybrid)*->rhs(
                                                                            [ mpred_prop(baseKB,bc_01_d_q,1,prologHybrid)]))))
  '$bt'(bc_01_d_q(_1922),'$pt'(baseKB,bc_01_d_p(_1922),rhs([ bc_01_d_q(Q)])))>=((bc_01_d_q(_1964)<-bc_01_d_p(_1964)),mfl4(
  [ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18))
  (bc_01_d_q(_1668):-awc,!,mpred_bc_and_with_pfc(bc_01_d_q(_1668)))>=('$bt'(bc_01_d_q(_1704),'$pt'(baseKB,bc_01_d_p(_1704),rhs(
       [ bc_01_d_q(Q)]))),'$pt'(baseKB,'$bt'(bc_01_d_q(_1668),'$pt'(baseKB,bc_01_d_p(_1668),rhs([ bc_01_d_q(Q)]))),(nonvar(bc_01_d_q(_1668)),must(get_bc_clause(bc_01_d_q(_1668),(bc_01_d_q(_1668):-awc,!,mpred_bc_and_with_pfc(bc_01_d_q(_1668)))))*->rhs(
           [ { ignore( kb_shared( bc_01_d_q(Q))) }, 
             bc_01_d_q(Q) :- 
               awc , 
               ! , 
               mpred_bc_and_with_pfc( bc_01_d_q(Q))]))))
  bc_01_d_p(a)>=(mfl4(_1640,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',20),ax)
  bc_01_d_p(b)>=(mfl4(_1608,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',21),ax)
  mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger)>=(mfl4(_1576,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',30),ax)
  mpred_prop(baseKB,bc_01_d_p,1,pfcWatches)>=(mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger),'$pt'(baseKB,mpred_prop(baseKB,bc_01_d_p,1,pfcPosTrigger),rhs(
                                 [ mpred_prop(baseKB,bc_01_d_p,1,pfcWatches)])))
  mpred_prop(baseKB,bc_01_d_p,1,kb_shared)>=(mfl4(_1462,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',30),ax)
  '$pt'(baseKB,genlMt(_1188,baseKB),(_1188\=baseKB*->rhs([ { nop( dmsg_pretty( Call :  
                                                                                    
                                                                                 call(kb_shared,_116886:bc_01_d_p/1))), 
                                                             show_failure( on_x_fail( Call1 :  
                                                                                           
                                                                                        call(kb_shared,_131128:bc_01_d_p/1))) }])))>=(mpred_prop(baseKB,bc_01_d_p,1,kb_shared),'$pt'(baseKB,mpred_prop(baseKB,bc_01_d_p,1,kb_shared),'$pt'(baseKB,genlMt(_1188,baseKB),(_1188\=baseKB*->rhs(
                                            [ { nop( dmsg_pretty( Call :  
                                                                       
                                                                    call(kb_shared,_167356:bc_01_d_p/1))), 
                                                show_failure( on_x_fail( Call1 :  
                                                                              
                                                                           call(kb_shared,_181598:bc_01_d_p/1))) }])))))
  '$pt'(baseKB,bc_01_d_p(b),rhs([ bc_01_d_q(b)]))>=((bc_01_d_q(_1138)<-bc_01_d_p(_1138)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01d.pfc',18))
  bc_01_d_q(b)>=(bc_01_d_p(b),'$pt'(baseKB,bc_01_d_p(b),rhs([ bc_01_d_q(b)]))):- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bc_01d.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bc_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_21984)<-bc_p(_21984) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_21984)<-bc_p(_21984) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bc_q,1,pfcRHS),rhs([mpred_prop(baseKB,bc_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc', 19) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bc_q,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  support_fact = bc_q(_1504)<-bc_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_q(Q)) , 
  support_fact = '$bt'(bc_q(_2048),'$pt'(baseKB,bc_p(_2048),rhs([bc_q(_2048)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))), 
                   ( ( nonvar( bc_q(Q)) , 
                       must( get_bc_clause(bc_q(Q),(bc_q(Q2):-awc,!,mpred_bc_and_with_pfc(bc_q(Q3)))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_q(Q))) }, 
                            bc_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_q(Q2)))
:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_108834,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_35636,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc',23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(b))
:- dynamic bc_p/1.

bc_p(a).
bc_p(b).

:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_45050,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  support_fact = mfl4(_27580,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bc_01.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(b) , 
  support_fact = bc_p(b) , 
  support_trig = '$pt'(baseKB,bc_p(b),rhs([bc_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(b))
:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).
bc_q(b).

:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bc_01.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['birds_01a.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_22024,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',10) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_66328,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',10) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   default_01a(P)/mpred_literal(P)  ==>
            \+( ~P) ==> 
            _83086) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   default_01a(P)/mpred_literal(P)  ==>
         \+( ~P) ==> 
         _83086) , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 12) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   default_01a(A)/mpred_literal(Literal)  ==>
                       \+( ~_3300) ==> 
                       _2124))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,default_01a,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,default_01a,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 12) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,default_01a,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(default_01a,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(default_01a,1) , 
  support_fact = mpred_prop(baseKB,default_01a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,default_01a,1,pfcLHS), 
                   rhs( [ arity(default_01a,1), 
                          functorIsMacro(default_01a), 
                          mpred_prop(baseKB,default_01a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(default_01a,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(default_01a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(default_01a) , 
  support_fact = mpred_prop(baseKB,default_01a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,default_01a,1,pfcLHS), 
                   rhs( [ arity(default_01a,1), 
                          functorIsMacro(default_01a), 
                          mpred_prop(baseKB,default_01a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(default_01a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,default_01a,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,default_01a,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,default_01a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,default_01a,1,pfcLHS), 
                   rhs( [ arity(default_01a,1), 
                          functorIsMacro(default_01a), 
                          mpred_prop(baseKB,default_01a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,default_01a,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,default_01a,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,default_01a,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'P'=P], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 12) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 12) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,default_01a,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,default_01a,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,default_01a,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 12) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,default_01a,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,default_01a,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,default_01a,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,default_01a,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,default_01a,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,default_01a,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,default_01a,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,default_01a,1,pfcLHS), 
                 rhs( [ arity(default_01a,1), 
                        functorIsMacro(default_01a), 
                        mpred_prop(baseKB,default_01a,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   default_01a((P==>Q))/mpred_literal(Q)  ==>
            _46422,\+ ~_46444 ==> 
            _46444) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   default_01a((P==>Q))/mpred_literal(Q)  ==>
         _46422,\+ ~_46444 ==> 
         _46444) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   default_01a((_94158==>_94160))/mpred_literal(Literal)  ==>
                       _88448,\+ ~_88458 ==> 
                       _88444))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = default_01a( bird(X)==>fly(X)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = default_01a( bird(X)==>fly(X)) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( default_01a( bird(Bird)==>fly(Fly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bird(_1486),\+ ~fly(_1486)==>fly(_1486) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bird(_1486),\+ ~fly(_1486)==>fly(_1486) , 
  support_fact = default_01a( bird(Bird)==>fly(Fly)) , 
  support_trig = '$pt'( baseKB, 
                   default_01a( bird(Bird)==>fly(Fly)), 
                   mpred_literal(fly(_1486))*->rhs([(bird(_1486),\+ ~fly(_1486)==>fly(_1486))])) , 
  none is support_status
baseKB : mpred_fwc1( bird(Bird),\+ ~fly(Fly)==>fly(Fly3))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,fly,1,pfcRHS),rhs([mpred_prop(baseKB,fly,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,fly,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,fly,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(bird,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(bird,1) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcLHS), 
                   rhs( [ arity(bird,1), 
                          functorIsMacro(bird), 
                          mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(bird,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(bird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(bird) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcLHS), 
                   rhs( [ arity(bird,1), 
                          functorIsMacro(bird), 
                          mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcLHS), 
                   rhs( [ arity(bird,1), 
                          functorIsMacro(bird), 
                          mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(fly,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(fly,1) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcLHS), 
                   rhs( [ arity(fly,1), 
                          functorIsMacro(fly), 
                          mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(fly,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(fly,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(fly,1) , 
  support_fact = arity(fly,1) , 
  support_trig = '$pt'(baseKB,arity(fly,1),(pfcControlled(fly)*->rhs([hybrid_support(fly,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(fly,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(fly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(fly) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcLHS), 
                   rhs( [ arity(fly,1), 
                          functorIsMacro(fly), 
                          mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcLHS), 
                   rhs( [ arity(fly,1), 
                          functorIsMacro(fly), 
                          mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,bird,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,bird,1,pfcLHS), 
                 rhs( [ arity(bird,1), 
                        functorIsMacro(bird), 
                        mpred_prop(baseKB,bird,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( zisa(_108766,_108788) ==> 
            ( { P1=..[C1,X], 
                _108854=..[_108788,_108832] } , 
              _108810==>_108854)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( zisa(_108766,_108788) ==> 
         ( { P1=..[C1,X], 
             _564=..[_552,_560] } , 
           _556==>_564)) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'P1'=P1, 
                      'X'=X, 
                      'P2'=P2], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ( zisa(Zisa,Zisa6) ==> 
                       ( { _49748=..[_49754,_49760], 
                           _41078=..[_41084,_41090] } , 
                         _41096==>_41098)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,=..,2,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,=..,2,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'P1'=P1, 
                      'X'=X, 
                      'P2'=P2], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,=..,2,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,zisa,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,zisa,2,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'P1'=P1, 
                      'X'=X, 
                      'P2'=P2], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,zisa,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(zisa,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(zisa,2) , 
  support_fact = mpred_prop(baseKB,zisa,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,zisa,2,pfcLHS), 
                   rhs( [ arity(zisa,2), 
                          functorIsMacro(zisa), 
                          mpred_prop(baseKB,zisa,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(zisa,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(zisa) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(zisa) , 
  support_fact = mpred_prop(baseKB,zisa,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,zisa,2,pfcLHS), 
                   rhs( [ arity(zisa,2), 
                          functorIsMacro(zisa), 
                          mpred_prop(baseKB,zisa,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(zisa))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,zisa,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,zisa,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,zisa,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,zisa,2,pfcLHS), 
                   rhs( [ arity(zisa,2), 
                          functorIsMacro(zisa), 
                          mpred_prop(baseKB,zisa,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,zisa,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,zisa,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,zisa,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'C1'=C1, 
                        'C2'=C2, 
                        'P1'=P1, 
                        'X'=X, 
                        'P2'=P2], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 26) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'P1'=P1, 
                      'X'=X, 
                      'P2'=P2], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 26) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,zisa,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,zisa,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,zisa,2,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'P1'=P1, 
                      'X'=X, 
                      'P2'=P2], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,zisa,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,zisa,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,zisa,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,zisa,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,zisa,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,zisa,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,zisa,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,zisa,2,pfcLHS), 
                 rhs( [ arity(zisa,2), 
                        functorIsMacro(zisa), 
                        mpred_prop(baseKB,zisa,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = zisa(canary,bird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = zisa(canary,bird) , 
  support_fact = mfl4(_73656,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( zisa(canary,bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = canary(_1284)==>bird(_1284) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = canary(_1284)==>bird(_1284) , 
  support_fact = zisa(canary,bird) , 
  support_trig = '$pt'( baseKB, 
                   zisa(canary,bird), 
                   rhs( [ { canary(Canary)=..[canary,_115684], 
                            bird(Bird)=..[bird,_109440] }, 
                          canary(Canary2)==>bird(Bird3)])) , 
  none is support_status
baseKB : mpred_fwc1( canary(Canary)==>bird(Bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcRHS) , 
  support_fact = mfl4(_5040,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bird,1,pfcRHS),rhs([mpred_prop(baseKB,bird,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bird,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bird,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,canary,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,canary,1,pfcLHS) , 
  support_fact = mfl4(_109012,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,canary,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(canary,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(canary,1) , 
  support_fact = mpred_prop(baseKB,canary,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,canary,1,pfcLHS), 
                   rhs( [ arity(canary,1), 
                          functorIsMacro(canary), 
                          mpred_prop(baseKB,canary,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(canary,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(canary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(canary) , 
  support_fact = mpred_prop(baseKB,canary,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,canary,1,pfcLHS), 
                   rhs( [ arity(canary,1), 
                          functorIsMacro(canary), 
                          mpred_prop(baseKB,canary,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(canary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,canary,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,canary,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,canary,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,canary,1,pfcLHS), 
                   rhs( [ arity(canary,1), 
                          functorIsMacro(canary), 
                          mpred_prop(baseKB,canary,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,canary,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,canary,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,canary,1,kb_shared) , 
  support_fact = mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31),ax , 
  support_trig = mfl4(_774,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,canary,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,canary,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,canary,1,pfcPosTrigger) , 
  support_fact = mfl4(_27490,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,canary,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,canary,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,canary,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,canary,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,canary,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,canary,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,canary,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,canary,1,pfcLHS), 
                 rhs( [ arity(canary,1), 
                        functorIsMacro(canary), 
                        mpred_prop(baseKB,canary,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = zisa(penguin,bird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = zisa(penguin,bird) , 
  support_fact = mfl4(_89320,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',32) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( zisa(penguin,bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = penguin(_1178)==>bird(_1178) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = penguin(_1178)==>bird(_1178) , 
  support_fact = zisa(penguin,bird) , 
  support_trig = '$pt'( baseKB, 
                   zisa(penguin,bird), 
                   rhs( [ { penguin(Penguin)=..[penguin,_9716], 
                            bird(Bird)=..[bird,_3292] }, 
                          penguin(Penguin2)==>bird(Bird3)])) , 
  none is support_status
baseKB : mpred_fwc1( penguin(Penguin)==>bird(Bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_fact = mfl4(_21934,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',32) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(penguin,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(penguin,1) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcLHS), 
                   rhs( [ arity(penguin,1), 
                          functorIsMacro(penguin), 
                          mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(penguin,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(penguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(penguin) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcLHS), 
                   rhs( [ arity(penguin,1), 
                          functorIsMacro(penguin), 
                          mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(penguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcLHS), 
                   rhs( [ arity(penguin,1), 
                          functorIsMacro(penguin), 
                          mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,kb_shared) , 
  support_fact = mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',32),ax , 
  support_trig = mfl4(_774,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',32) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcPosTrigger) , 
  support_fact = mfl4(_78112,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',32) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,penguin,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,penguin,1,pfcLHS), 
                 rhs( [ arity(penguin,1), 
                        functorIsMacro(penguin), 
                        mpred_prop(baseKB,penguin,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = penguin(_1492)==> ~fly(_1492) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = penguin(_1492)==> ~fly(_1492) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc', 35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( penguin(Penguin)==> ~fly(Fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = penguin(chilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = penguin(chilly) , 
  support_fact = mfl4(_94156,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',39) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( penguin(chilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bird(chilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bird(chilly) , 
  support_fact = penguin(chilly) , 
  support_trig = '$pt'(baseKB,penguin(chilly),rhs([bird(chilly)])) , 
  none is support_status
baseKB : mpred_fwc1( bird(chilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcNegTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcNegTrigger) , 
  support_fact = mfl4(_108598,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',39) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcNegTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcNegTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcNegTrigger), 
                   rhs([mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,fly,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,fly,1,pfcLHS), 
                 rhs( [ arity(fly,1), 
                        functorIsMacro(fly), 
                        mpred_prop(baseKB,fly,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = fly(chilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = fly(chilly) , 
  support_fact = \+( ~( fly(chilly))) , 
  support_trig = '$nt'(~fly(chilly),call_u_no_bc(~fly(chilly)),rhs([fly(chilly)])) , 
  none is support_status
baseKB : mpred_fwc1( fly(chilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~( fly(chilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~( fly(chilly)) , 
  support_fact = penguin(chilly) , 
  support_trig = '$pt'(baseKB,penguin(chilly),rhs([~fly(chilly)])) , 
  none is support_status
baseKB : mpred_fwc1( ~( fly(chilly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = canary(tweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = canary(tweety) , 
  support_fact = mfl4(_63386,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( canary(tweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bird(tweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bird(tweety) , 
  support_fact = canary(tweety) , 
  support_trig = '$pt'(baseKB,canary(tweety),rhs([bird(tweety)])) , 
  none is support_status
baseKB : mpred_fwc1( bird(tweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = fly(tweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = fly(tweety) , 
  support_fact = \+( ~( fly(tweety))) , 
  support_trig = '$nt'(~fly(tweety),call_u_no_bc(~fly(tweety)),rhs([fly(tweety)])) , 
  none is support_status
baseKB : mpred_fwc1( fly(tweety))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for penguin(chilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',39) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for ~fly(chilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 penguin(chilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:39] [0m[36m
    1.2 penguin(W4)==> ~fly(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:35] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',39) [0m[36m
    1.4 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',35) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for fly(tweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~fly(tweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 bird(tweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:_120392] [0m[36m
    1.3 bird(W4),\+ ~fly(W4)==>fly(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1680] [0m[36m
    1.4 canary(tweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:43] [0m[36m
    1.5 canary(W4)==>bird(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_3688] [0m[36m
    1.6 default_01a((bird(W4)==>fly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:21] [0m[36m
    1.7 default_01a((W4==>X4))/mpred_literal(X4)==>(W4,\+ ~X4==>X4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:14] [0m[36m
    1.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',43) [0m[36m
    1.9 zisa(canary,bird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:31] [0m[36m
    1.10 zisa(W4,X4)==>{Y4=..[W4,Z4],A5=..[X4,Z4]},(Y4==>A5) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc:26] [0m[36m
    1.11 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',21) [0m[36m
    1.12 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',14) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',31) [0m[36m
    1.14 mfl4([ 'C1'=_, 
       'C2'=_, 
       'P1'=_, 
       'X'=_, 
       'P2'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01a.pfc',26) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic fly/1.
:- multifile fly/1.
:- public fly/1.
:- module_transparent fly/1.

fly(tweety).

:- dynamic (~)/1.
:- multifile (~)/1.
:- public (~)/1.
:- module_transparent (~)/1.

~singleValuedInArg(arity, _).
~singleValuedInArg(support_hilog, _).
~A :-
    cwc,
    neg_in_code(A).
~fly(chilly).

:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k birds_01a.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['birds_01b.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_25574,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',28) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_69878,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',28) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(_86764)==>{kb_local(_86764/2)},(t(_86764,ext,_86786)<==>instanceOf(_86786,_86764)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(_86764)==>{kb_local(_86764/2)},(t(_86764,ext,_86786)<==>instanceOf(_86786,_86764)) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ( tType(Type) ==> 
                       ( { kb_local( _7380/2) } , 
                         t(Ext,ext,T)<==>instanceOf(InstanceOf,InstanceOf6))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,kb_local,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,kb_local,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,kb_local,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,<==>,2,pfcRHS),rhs([mpred_prop(baseKB,<==>,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'COL'=COL, 
                        'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,<==>,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,<==>,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,<==>,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,<==>,2,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,<==>,2,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tType,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tType,1) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcLHS), 
                   rhs( [ arity(tType,1), 
                          functorIsMacro(tType), 
                          mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tType,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tType) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcLHS), 
                   rhs( [ arity(tType,1), 
                          functorIsMacro(tType), 
                          mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tType))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcLHS), 
                   rhs( [ arity(tType,1), 
                          functorIsMacro(tType), 
                          mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'COL'=COL, 
                        'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tType,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tType,1,pfcLHS), 
                 rhs( [ arity(tType,1), 
                        functorIsMacro(tType), 
                        mpred_prop(baseKB,tType,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tFly) , 
  support_fact = mfl4(_101836,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,kb_local) , 
  support_fact = mfl4(_416,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33),ax , 
  support_trig = mfl4(_774,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(ext,_1174)<==>instanceOf(_1174,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(ext,_1174)<==>instanceOf(_1174,tFly) , 
  support_fact = tType(tFly) , 
  support_trig = '$pt'( baseKB, 
                   tType(tFly), 
                   rhs( [ { kb_local( tFly/2) }, 
                          t(tFly,ext,Ext)<==>instanceOf(Fly,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(ext,Fly_Ext)<==>instanceOf(Fly,tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  support_fact = mfl4(_8936,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,instanceOf,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,kb_shared) , 
  support_fact = mfl4(_408,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33),ax , 
  support_trig = mfl4(_764,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,instanceOf,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,instanceOf,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcLHS) , 
  support_fact = mfl4(_1808,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tFly,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tFly,2) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcLHS), 
                   rhs( [ arity(tFly,2), 
                          functorIsMacro(tFly), 
                          mpred_prop(baseKB,tFly,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tFly,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tFly) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcLHS), 
                   rhs( [ arity(tFly,2), 
                          functorIsMacro(tFly), 
                          mpred_prop(baseKB,tFly,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcLHS), 
                   rhs( [ arity(tFly,2), 
                          functorIsMacro(tFly), 
                          mpred_prop(baseKB,tFly,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcPosTrigger) , 
  support_fact = mfl4(_36616,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tFly,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tFly,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tFly,2,pfcLHS), 
                 rhs( [ arity(tFly,2), 
                        functorIsMacro(tFly), 
                        mpred_prop(baseKB,tFly,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcRHS) , 
  support_fact = mfl4(_60904,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,tFly,2,pfcRHS),rhs([mpred_prop(baseKB,tFly,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tFly,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tFly,2,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_fact = mfl4(_23436,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(instanceOf,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(instanceOf,2) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                   rhs( [ arity(instanceOf,2), 
                          functorIsMacro(instanceOf), 
                          mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(instanceOf,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(instanceOf,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(instanceOf,2) , 
  support_fact = arity(instanceOf,2) , 
  support_trig = '$pt'( baseKB, 
                   arity(instanceOf,2), 
                   pfcControlled(instanceOf)*->rhs([hybrid_support(instanceOf,2)])) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(instanceOf,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(instanceOf) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(instanceOf) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                   rhs( [ arity(instanceOf,2), 
                          functorIsMacro(instanceOf), 
                          mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(instanceOf))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                   rhs( [ arity(instanceOf,2), 
                          functorIsMacro(instanceOf), 
                          mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcPosTrigger) , 
  support_fact = mfl4(_2004,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                 rhs( [ arity(instanceOf,2), 
                        functorIsMacro(instanceOf), 
                        mpred_prop(baseKB,instanceOf,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tCanary) , 
  support_fact = mfl4(_58016,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,kb_local) , 
  support_fact = mfl4(_416,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34),ax , 
  support_trig = mfl4(_858,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tCanary(ext,_1366)<==>instanceOf(_1366,tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tCanary(ext,_1366)<==>instanceOf(_1366,tCanary) , 
  support_fact = tType(tCanary) , 
  support_trig = '$pt'( baseKB, 
                   tType(tCanary), 
                   rhs( [ { kb_local( tCanary/2) }, 
                          t(tCanary,ext,Ext)<==>instanceOf(Canary,tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( tCanary(ext,Canary_Ext)<==>instanceOf(Canary,tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcLHS) , 
  support_fact = mfl4(_87100,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tCanary,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tCanary,2) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcLHS), 
                   rhs( [ arity(tCanary,2), 
                          functorIsMacro(tCanary), 
                          mpred_prop(baseKB,tCanary,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tCanary,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tCanary) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcLHS), 
                   rhs( [ arity(tCanary,2), 
                          functorIsMacro(tCanary), 
                          mpred_prop(baseKB,tCanary,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcLHS), 
                   rhs( [ arity(tCanary,2), 
                          functorIsMacro(tCanary), 
                          mpred_prop(baseKB,tCanary,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcPosTrigger) , 
  support_fact = mfl4(_106918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tCanary,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tCanary,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tCanary,2,pfcLHS), 
                 rhs( [ arity(tCanary,2), 
                        functorIsMacro(tCanary), 
                        mpred_prop(baseKB,tCanary,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcRHS) , 
  support_fact = mfl4(_2434,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,tCanary,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tCanary,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tCanary,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,2,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tCanary,2,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tPenguin) , 
  support_fact = mfl4(_66090,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,kb_local) , 
  support_fact = mfl4(_416,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35),ax , 
  support_trig = mfl4(_858,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tPenguin(ext,_1366)<==>instanceOf(_1366,tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(ext,_1366)<==>instanceOf(_1366,tPenguin) , 
  support_fact = tType(tPenguin) , 
  support_trig = '$pt'( baseKB, 
                   tType(tPenguin), 
                   rhs( [ { kb_local( tPenguin/2) }, 
                          t(tPenguin,ext,Ext)<==>instanceOf(Penguin,tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( tPenguin(ext,Penguin_Ext)<==>instanceOf(Penguin,tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcLHS) , 
  support_fact = mfl4(_106236,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tPenguin,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tPenguin,2) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcLHS), 
                   rhs( [ arity(tPenguin,2), 
                          functorIsMacro(tPenguin), 
                          mpred_prop(baseKB,tPenguin,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tPenguin,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tPenguin) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcLHS), 
                   rhs( [ arity(tPenguin,2), 
                          functorIsMacro(tPenguin), 
                          mpred_prop(baseKB,tPenguin,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcLHS), 
                   rhs( [ arity(tPenguin,2), 
                          functorIsMacro(tPenguin), 
                          mpred_prop(baseKB,tPenguin,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcPosTrigger) , 
  support_fact = mfl4(_2070,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tPenguin,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tPenguin,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tPenguin,2,pfcLHS), 
                 rhs( [ arity(tPenguin,2), 
                        functorIsMacro(tPenguin), 
                        mpred_prop(baseKB,tPenguin,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcRHS) , 
  support_fact = mfl4(_16470,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,tPenguin,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tPenguin,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tPenguin,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,2,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tPenguin,2,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tBird) , 
  support_fact = mfl4(_81330,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,kb_local) , 
  support_fact = mfl4(_416,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36),ax , 
  support_trig = mfl4(_774,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(ext,_1174)<==>instanceOf(_1174,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(ext,_1174)<==>instanceOf(_1174,tBird) , 
  support_fact = tType(tBird) , 
  support_trig = '$pt'( baseKB, 
                   tType(tBird), 
                   rhs( [ { kb_local( tBird/2) }, 
                          t(tBird,ext,Ext)<==>instanceOf(Bird,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(ext,Bird_Ext)<==>instanceOf(Bird,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcLHS) , 
  support_fact = mfl4(_114814,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tBird,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tBird,2) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,2,pfcLHS), 
                   rhs( [ arity(tBird,2), 
                          functorIsMacro(tBird), 
                          mpred_prop(baseKB,tBird,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tBird,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tBird) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,2,pfcLHS), 
                   rhs( [ arity(tBird,2), 
                          functorIsMacro(tBird), 
                          mpred_prop(baseKB,tBird,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,2,pfcLHS), 
                   rhs( [ arity(tBird,2), 
                          functorIsMacro(tBird), 
                          mpred_prop(baseKB,tBird,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcPosTrigger) , 
  support_fact = mfl4(_1880,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tBird,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tBird,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tBird,2,pfcLHS), 
                 rhs( [ arity(tBird,2), 
                        functorIsMacro(tBird), 
                        mpred_prop(baseKB,tBird,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcRHS) , 
  support_fact = mfl4(_22550,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,tBird,2,pfcRHS),rhs([mpred_prop(baseKB,tBird,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tBird,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tBird,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,2,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tBird,2,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   subClassOf(C1,C2)  ==>
            instanceOf(_102502,_102458) ==> 
            instanceOf(_102502,_102480)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   subClassOf(C1,C2)  ==>
         instanceOf(_102502,_102458) ==> 
         instanceOf(_102502,_102480)) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 41) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   subClassOf(SubClassOf,SubClassOf6)  ==>
                       instanceOf(InstanceOf,InstanceOf7) ==> 
                       instanceOf(InstanceOf5,InstanceOf8)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 41) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(subClassOf,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(subClassOf,2) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                   rhs( [ arity(subClassOf,2), 
                          functorIsMacro(subClassOf), 
                          mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(subClassOf,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(subClassOf) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(subClassOf) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                   rhs( [ arity(subClassOf,2), 
                          functorIsMacro(subClassOf), 
                          mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(subClassOf))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                   rhs( [ arity(subClassOf,2), 
                          functorIsMacro(subClassOf), 
                          mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'C1'=C1, 
                        'C2'=C2, 
                        'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 41) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 41) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 41) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                 rhs( [ arity(subClassOf,2), 
                        functorIsMacro(subClassOf), 
                        mpred_prop(baseKB,subClassOf,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = subClassOf(tCanary,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = subClassOf(tCanary,tBird) , 
  support_fact = mfl4(_77174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( subClassOf(tCanary,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(_3518,tCanary)==>instanceOf(_3518,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(_3518,tCanary)==>instanceOf(_3518,tBird) , 
  support_fact = subClassOf(tCanary,tBird) , 
  support_trig = '$pt'( baseKB, 
                   subClassOf(tCanary,tBird), 
                   rhs([(instanceOf(_3518,tCanary)==>instanceOf(_3518,tBird))])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(Canary,tCanary)==>instanceOf(Bird,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = subClassOf(tPenguin,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = subClassOf(tPenguin,tBird) , 
  support_fact = mfl4(_38624,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',44) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( subClassOf(tPenguin,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(_1800,tPenguin)==>instanceOf(_1800,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(_1800,tPenguin)==>instanceOf(_1800,tBird) , 
  support_fact = subClassOf(tPenguin,tBird) , 
  support_trig = '$pt'( baseKB, 
                   subClassOf(tPenguin,tBird), 
                   rhs([(instanceOf(_1800,tPenguin)==>instanceOf(_1800,tBird))])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(Penguin,tPenguin)==>instanceOf(Bird,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tPenguin(ext,iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(ext,iChilly) , 
  support_fact = mfl4(_3754,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',49) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tPenguin(ext,iChilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tPenguin) , 
  support_fact = tPenguin(ext,iChilly) , 
  support_trig = '$pt'(baseKB,tPenguin(ext,iChilly),rhs([instanceOf(iChilly,tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tPenguin))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tPenguin(ext,iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(ext,iChilly) , 
  support_fact = instanceOf(iChilly,tPenguin) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tPenguin),rhs([tPenguin(ext,iChilly)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',49),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tBird) , 
  support_fact = instanceOf(iChilly,tPenguin) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tPenguin),rhs([instanceOf(iChilly,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(ext,iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(ext,iChilly) , 
  support_fact = instanceOf(iChilly,tBird) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tBird),rhs([tBird(ext,iChilly)])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(ext,iChilly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = instanceOf(iChilly,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tBird) , 
  support_fact = tBird(ext,iChilly) , 
  support_trig = '$pt'(baseKB,tBird(ext,iChilly),rhs([instanceOf(iChilly,tBird)])) , 
  ( simular( instanceOf(iChilly,tPenguin),'$pt'(baseKB,instanceOf(iChilly,tPenguin),rhs([instanceOf(iChilly,tBird)]))) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(ext,iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iChilly,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:_28144] [0m[36m
    1.2 tBird(ext,W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_29072] [0m[36m
    1.3 instanceOf(iChilly,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:_30246] [0m[36m
    1.4 instanceOf(W4,tPenguin)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_31174] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:36] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/2)},(t(W4,ext,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:30] [0m[36m
    1.7 tPenguin(ext,iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:49] [0m[36m
    1.8 tPenguin(ext,W4)<==>instanceOf(W4,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_34968] [0m[36m
    1.9 subClassOf(tPenguin,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:44] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:41] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',49) [0m[36m
    1.14 tType(tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:35] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',44) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',41) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',35) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tCanary(ext,iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tCanary(ext,iTweety) , 
  support_fact = mfl4(_52546,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',55) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tCanary(ext,iTweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iTweety,tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tCanary) , 
  support_fact = tCanary(ext,iTweety) , 
  support_trig = '$pt'(baseKB,tCanary(ext,iTweety),rhs([instanceOf(iTweety,tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iTweety,tCanary))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tCanary(ext,iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tCanary(ext,iTweety) , 
  support_fact = instanceOf(iTweety,tCanary) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tCanary),rhs([tCanary(ext,iTweety)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',55),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iTweety,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tBird) , 
  support_fact = instanceOf(iTweety,tCanary) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tCanary),rhs([instanceOf(iTweety,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iTweety,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(ext,iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(ext,iTweety) , 
  support_fact = instanceOf(iTweety,tBird) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tBird),rhs([tBird(ext,iTweety)])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(ext,iTweety))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = instanceOf(iTweety,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tBird) , 
  support_fact = tBird(ext,iTweety) , 
  support_trig = '$pt'(baseKB,tBird(ext,iTweety),rhs([instanceOf(iTweety,tBird)])) , 
  ( simular( instanceOf(iTweety,tCanary),'$pt'(baseKB,instanceOf(iTweety,tCanary),rhs([instanceOf(iTweety,tBird)]))) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(ext,iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:_78646] [0m[36m
    1.2 tBird(ext,W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_79574] [0m[36m
    1.3 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:_80748] [0m[36m
    1.4 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_81676] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:36] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/2)},(t(W4,ext,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:30] [0m[36m
    1.7 tCanary(ext,iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:55] [0m[36m
    1.8 tCanary(ext,W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_85470] [0m[36m
    1.9 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:43] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:41] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',55) [0m[36m
    1.14 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:34] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',43) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',41) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mdefault( tBird(ext,X)==>tFly(ext,X)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mdefault( tBird(ext,X)==>tFly(ext,X)) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mdefault( tBird(ext,Bird_Ext)==>tFly(ext,Fly_Ext2)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(ext,_1720)==>mdefault(tFly(ext,_1720)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(ext,_1720)==>mdefault(tFly(ext,_1720)) , 
  support_fact = mdefault( tBird(ext,Bird_Ext)==>tFly(ext,Fly_Ext2)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tBird(ext,Bird_Ext)==>tFly(ext,Fly_Ext2)), 
                   nonvar(tFly(ext,_1720))*->rhs([(tBird(ext,_1720)==>mdefault(tFly(ext,_1720)))])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(ext,Bird_Ext)==>mdefault(tFly(ext,Fly_Ext2)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mdefault( tFly(ext,iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mdefault( tFly(ext,iChilly)) , 
  support_fact = tBird(ext,iChilly) , 
  support_trig = '$pt'(baseKB,tBird(ext,_4458),rhs([mdefault(tFly(ext,_4458))])) , 
  none is support_status
baseKB : mpred_fwc1( mdefault( tFly(ext,iChilly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( ( \+( ~tFly(ext,iChilly)/(ground(~tFly(ext,iChilly)),\+tFly(ext,iChilly))) , 
              \+( ~( tFly(ext,iChilly)))) ==> 
            tFly(ext,iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( ( \+( ~tFly(ext,iChilly)/(ground(~tFly(ext,iChilly)),\+tFly(ext,iChilly))) , 
           \+( ~( tFly(ext,iChilly)))) ==> 
         tFly(ext,iChilly)) , 
  support_fact = mdefault( tFly(ext,iChilly)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(ext,iChilly)), 
                   ( ( mpred_positive_fact( tFly(ext,iChilly)) , 
                       if_missing_mask(tFly(ext,iChilly),~tFly(ext,iChilly),\+tFly(ext,iChilly))) *-> 
                     rhs([(\+ ~tFly(ext,iChilly)/(ground(~tFly(ext,iChilly)),\+tFly(ext,iChilly)),\+ ~tFly(ext,iChilly)==>tFly(ext,iChilly))]))) , 
  none is support_status
baseKB : mpred_fwc1( ( \+ ~tFly(ext,iChilly)/(ground(~tFly(ext,iChilly)),\+tFly(ext,iChilly)),\+ ~tFly(ext,iChilly) ==> 
                       tFly(ext,iChilly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcNegTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcNegTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc', 60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,2,pfcNegTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tFly,2,pfcNegTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,2,pfcNegTrigger), 
                   rhs([mpred_prop(baseKB,tFly,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tFly,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tFly,2,pfcLHS), 
                 rhs( [ arity(tFly,2), 
                        functorIsMacro(tFly), 
                        mpred_prop(baseKB,tFly,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(ext,iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(ext,iChilly) , 
  support_fact = \+( ~( tFly(ext,iChilly))) , 
  support_trig = '$nt'(~tFly(ext,iChilly),call_u_no_bc(~tFly(ext,iChilly)),rhs([tFly(ext,iChilly)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(ext,iChilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tFly) , 
  support_fact = tFly(ext,iChilly) , 
  support_trig = '$pt'(baseKB,tFly(ext,iChilly),rhs([instanceOf(iChilly,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tFly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tFly(ext,iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(ext,iChilly) , 
  support_fact = instanceOf(iChilly,tFly) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tFly),rhs([tFly(ext,iChilly)])) , 
  ( simular( ( \+( ~( tFly(ext,iChilly))) , 
               '$nt'(~tFly(ext,iChilly),call_u_no_bc(~tFly(ext,iChilly)),rhs([tFly(ext,iChilly)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( ( ~( tFly(ext,iChilly)) / 
              (   ground( ~( tFly(ext,iChilly)))  ,
                \+( tFly(ext,iChilly)) , 
                \+( ~( tFly(ext,iChilly)) =  
                         
                      tFly(ext,iChilly)))) ==> 
            \+( tFly(ext,iChilly))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( ( ~( tFly(ext,iChilly)) / 
           (   ground( ~( tFly(ext,iChilly)))  ,
             \+( tFly(ext,iChilly)) , 
             \+( ~( tFly(ext,iChilly)) =  
                      
                   tFly(ext,iChilly)))) ==> 
         \+( tFly(ext,iChilly))) , 
  support_fact = mdefault( tFly(ext,iChilly)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(ext,iChilly)), 
                   ( ( mpred_positive_fact( tFly(ext,iChilly)) , 
                       if_missing_mask(tFly(ext,iChilly),~tFly(ext,iChilly),\+tFly(ext,iChilly))) *-> 
                     rhs([(~tFly(ext,iChilly)/(ground(~tFly(ext,iChilly)),\+tFly(ext,iChilly),\+ ~tFly(ext,iChilly)=tFly(ext,iChilly))==> \+tFly(ext,iChilly))]))) , 
  none is support_status
baseKB : mpred_fwc1( ( ( ~( tFly(ext,iChilly)) / 
                         (   ground( ~( tFly(ext,iChilly)))  ,
                           \+( tFly(ext,iChilly)) , 
                           \+( ~( tFly(ext,iChilly)) =  
                                    
                                 tFly(ext,iChilly)))) ==> 
                       \+( tFly(ext,iChilly))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mdefault( tFly(ext,iTweety)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mdefault( tFly(ext,iTweety)) , 
  support_fact = tBird(ext,iTweety) , 
  support_trig = '$pt'(baseKB,tBird(ext,_2634),rhs([mdefault(tFly(ext,_2634))])) , 
  none is support_status
baseKB : mpred_fwc1( mdefault( tFly(ext,iTweety)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( ( \+( ~tFly(ext,iTweety)/(ground(~tFly(ext,iTweety)),\+tFly(ext,iTweety))) , 
              \+( ~( tFly(ext,iTweety)))) ==> 
            tFly(ext,iTweety)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( ( \+( ~tFly(ext,iTweety)/(ground(~tFly(ext,iTweety)),\+tFly(ext,iTweety))) , 
           \+( ~( tFly(ext,iTweety)))) ==> 
         tFly(ext,iTweety)) , 
  support_fact = mdefault( tFly(ext,iTweety)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(ext,iTweety)), 
                   ( ( mpred_positive_fact( tFly(ext,iTweety)) , 
                       if_missing_mask(tFly(ext,iTweety),~tFly(ext,iTweety),\+tFly(ext,iTweety))) *-> 
                     rhs([(\+ ~tFly(ext,iTweety)/(ground(~tFly(ext,iTweety)),\+tFly(ext,iTweety)),\+ ~tFly(ext,iTweety)==>tFly(ext,iTweety))]))) , 
  none is support_status
baseKB : mpred_fwc1( ( \+ ~tFly(ext,iTweety)/(ground(~tFly(ext,iTweety)),\+tFly(ext,iTweety)),\+ ~tFly(ext,iTweety) ==> 
                       tFly(ext,iTweety)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(ext,iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(ext,iTweety) , 
  support_fact = \+( ~( tFly(ext,iTweety))) , 
  support_trig = '$nt'(~tFly(ext,iTweety),call_u_no_bc(~tFly(ext,iTweety)),rhs([tFly(ext,iTweety)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(ext,iTweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iTweety,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tFly) , 
  support_fact = tFly(ext,iTweety) , 
  support_trig = '$pt'(baseKB,tFly(ext,iTweety),rhs([instanceOf(iTweety,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iTweety,tFly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tFly(ext,iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(ext,iTweety) , 
  support_fact = instanceOf(iTweety,tFly) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tFly),rhs([tFly(ext,iTweety)])) , 
  ( simular( ( \+( ~( tFly(ext,iTweety))) , 
               '$nt'(~tFly(ext,iTweety),call_u_no_bc(~tFly(ext,iTweety)),rhs([tFly(ext,iTweety)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( ( ~( tFly(ext,iTweety)) / 
              (   ground( ~( tFly(ext,iTweety)))  ,
                \+( tFly(ext,iTweety)) , 
                \+( ~( tFly(ext,iTweety)) =  
                         
                      tFly(ext,iTweety)))) ==> 
            \+( tFly(ext,iTweety))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( ( ~( tFly(ext,iTweety)) / 
           (   ground( ~( tFly(ext,iTweety)))  ,
             \+( tFly(ext,iTweety)) , 
             \+( ~( tFly(ext,iTweety)) =  
                      
                   tFly(ext,iTweety)))) ==> 
         \+( tFly(ext,iTweety))) , 
  support_fact = mdefault( tFly(ext,iTweety)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(ext,iTweety)), 
                   ( ( mpred_positive_fact( tFly(ext,iTweety)) , 
                       if_missing_mask(tFly(ext,iTweety),~tFly(ext,iTweety),\+tFly(ext,iTweety))) *-> 
                     rhs([(~tFly(ext,iTweety)/(ground(~tFly(ext,iTweety)),\+tFly(ext,iTweety),\+ ~tFly(ext,iTweety)=tFly(ext,iTweety))==> \+tFly(ext,iTweety))]))) , 
  none is support_status
baseKB : mpred_fwc1( ( ( ~( tFly(ext,iTweety)) / 
                         (   ground( ~( tFly(ext,iTweety)))  ,
                           \+( tFly(ext,iTweety)) , 
                           \+( ~( tFly(ext,iTweety)) =  
                                    
                                 tFly(ext,iTweety)))) ==> 
                       \+( tFly(ext,iTweety))))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(ext,iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:_75692] [0m[36m
    1.2 tBird(ext,W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_76620] [0m[36m
    1.3 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:_77794] [0m[36m
    1.4 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_78722] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:36] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/2)},(t(W4,ext,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:30] [0m[36m
    1.7 tCanary(ext,iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:55] [0m[36m
    1.8 tCanary(ext,W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_82516] [0m[36m
    1.9 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:43] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:41] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',36) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',55) [0m[36m
    1.14 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc:34] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',43) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',41) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01b.pfc',34) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k birds_01b.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['birds_01c.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~_16920,_16920==>contrradiction , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~_16920,_16920==>contrradiction , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 6) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~_43506,_43502==>contrradiction)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,contrradiction,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,contrradiction,0,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 6) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,contrradiction,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,contrradiction,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,contrradiction,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,contrradiction,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,contrradiction,0,pfcRHS), 
                   rhs([mpred_prop(baseKB,contrradiction,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,contrradiction,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,contrradiction,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,contrradiction,0,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'P'=P], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 6) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 6) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,contrradiction,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,contrradiction,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,contrradiction,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,contrradiction,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,contrradiction,0,pfcRHS), 
                   ( genlPreds(pfcRHS,pfcControlled) *-> 
                     rhs([mpred_prop(baseKB,contrradiction,0,pfcControlled)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,contrradiction,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,contrradiction,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,contrradiction,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,contrradiction,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,contrradiction,0,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,contrradiction,0,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,contrradiction,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bird(_18160),\+ ~fly(_18160)==>fly(_18160) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bird(_18160),\+ ~fly(_18160)==>fly(_18160) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bird(Bird),\+ ~fly(Fly)==>fly(Fly3))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,fly,1,pfcRHS),rhs([mpred_prop(baseKB,fly,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,fly,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,fly,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(bird,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(bird,1) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcLHS), 
                   rhs( [ arity(bird,1), 
                          functorIsMacro(bird), 
                          mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(bird,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(bird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(bird) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcLHS), 
                   rhs( [ arity(bird,1), 
                          functorIsMacro(bird), 
                          mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcLHS), 
                   rhs( [ arity(bird,1), 
                          functorIsMacro(bird), 
                          mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(fly,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(fly,1) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcLHS), 
                   rhs( [ arity(fly,1), 
                          functorIsMacro(fly), 
                          mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(fly,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(fly,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(fly,1) , 
  support_fact = arity(fly,1) , 
  support_trig = '$pt'(baseKB,arity(fly,1),(pfcControlled(fly)*->rhs([hybrid_support(fly,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(fly,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(fly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(fly) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcLHS), 
                   rhs( [ arity(fly,1), 
                          functorIsMacro(fly), 
                          mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,fly,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,fly,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,fly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,fly,1,pfcLHS), 
                   rhs( [ arity(fly,1), 
                          functorIsMacro(fly), 
                          mpred_prop(baseKB,fly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,fly,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 8) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bird,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,bird,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,bird,1,pfcLHS), 
                 rhs( [ arity(bird,1), 
                        functorIsMacro(bird), 
                        mpred_prop(baseKB,bird,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = penguin(_95400)==>bird(_95400) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = penguin(_95400)==>bird(_95400) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 10) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( penguin(Penguin)==>bird(Bird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 10) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bird,1,pfcRHS),rhs([mpred_prop(baseKB,bird,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bird,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bird,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bird,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bird,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 10) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(penguin,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(penguin,1) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcLHS), 
                   rhs( [ arity(penguin,1), 
                          functorIsMacro(penguin), 
                          mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(penguin,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(penguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(penguin) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcLHS), 
                   rhs( [ arity(penguin,1), 
                          functorIsMacro(penguin), 
                          mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(penguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcLHS), 
                   rhs( [ arity(penguin,1), 
                          functorIsMacro(penguin), 
                          mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 10) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 10) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 10) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,penguin,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,penguin,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,penguin,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,penguin,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,penguin,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,penguin,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,penguin,1,pfcLHS), 
                 rhs( [ arity(penguin,1), 
                        functorIsMacro(penguin), 
                        mpred_prop(baseKB,penguin,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = penguin(_86890)==> ~fly(_86890) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = penguin(_86890)==> ~fly(_86890) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 12) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( penguin(Penguin)==> ~fly(Fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bird(_57456),injured(_57456)==> ~fly(_57456) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bird(_57456),injured(_57456)==> ~fly(_57456) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bird(Bird),injured(Injured)==> ~fly(Fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,injured,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,needsDefined) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,needsDefined) , 
  support_fact = mpred_prop(baseKB,injured,1,pfcCallCode) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,injured,1,pfcCallCode), 
                   predicate_is_undefined_fa(injured,1)*->rhs([mpred_prop(baseKB,injured,1,needsDefined)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,injured,1,needsDefined))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,injured,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(injured,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(injured,1) , 
  support_fact = mpred_prop(baseKB,injured,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,injured,1,pfcLHS), 
                   rhs( [ arity(injured,1), 
                          functorIsMacro(injured), 
                          mpred_prop(baseKB,injured,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(injured,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(injured) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(injured) , 
  support_fact = mpred_prop(baseKB,injured,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,injured,1,pfcLHS), 
                   rhs( [ arity(injured,1), 
                          functorIsMacro(injured), 
                          mpred_prop(baseKB,injured,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(injured))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,injured,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,injured,1,pfcLHS), 
                   rhs( [ arity(injured,1), 
                          functorIsMacro(injured), 
                          mpred_prop(baseKB,injured,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,injured,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,injured,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bird,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bird,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bird,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,injured,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,injured,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,injured,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,injured,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,injured,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,injured,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,injured,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,injured,1,pfcLHS), 
                 rhs( [ arity(injured,1), 
                        functorIsMacro(injured), 
                        mpred_prop(baseKB,injured,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bird(_70944),dead(_70944)==> ~fly(_70944) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bird(_70944),dead(_70944)==> ~fly(_70944) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bird(Bird),dead(Dead)==> ~fly(Fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dead,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,needsDefined) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,needsDefined) , 
  support_fact = mpred_prop(baseKB,dead,1,pfcCallCode) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dead,1,pfcCallCode), 
                   predicate_is_undefined_fa(dead,1)*->rhs([mpred_prop(baseKB,dead,1,needsDefined)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dead,1,needsDefined))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dead,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(dead,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(dead,1) , 
  support_fact = mpred_prop(baseKB,dead,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dead,1,pfcLHS), 
                   rhs( [ arity(dead,1), 
                          functorIsMacro(dead), 
                          mpred_prop(baseKB,dead,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(dead,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(dead) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(dead) , 
  support_fact = mpred_prop(baseKB,dead,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dead,1,pfcLHS), 
                   rhs( [ arity(dead,1), 
                          functorIsMacro(dead), 
                          mpred_prop(baseKB,dead,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(dead))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,dead,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dead,1,pfcLHS), 
                   rhs( [ arity(dead,1), 
                          functorIsMacro(dead), 
                          mpred_prop(baseKB,dead,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dead,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 16) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dead,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01c.pfc', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dead,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,dead,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dead,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,dead,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dead,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,dead,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,dead,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,dead,1,pfcLHS), 
                 rhs( [ arity(dead,1), 
                        functorIsMacro(dead), 
                        mpred_prop(baseKB,dead,1,pfcWatches)])))) is 
    support_status)
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k birds_01c.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['birds_01d.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_25574,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',28) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_69878,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',28) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( tType(_86820) ==> 
            (   { kb_local( COL/1) }  ,
              functorDeclares(_86820) , 
              t(_86820,_86842)<==>instanceOf(_86842,_86820))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( tType(_86820) ==> 
         (   { kb_local( COL/1) }  ,
           functorDeclares(_86820) , 
           t(_86820,_86842)<==>instanceOf(_86842,_86820))) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ( tType(Type) ==> 
                       (   { kb_local( _22864/1) }  ,
                         functorDeclares(FunctorDeclares) , 
                         t(T,T6)<==>instanceOf(InstanceOf,InstanceOf7))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,kb_local,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,kb_local,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,kb_local,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,<==>,2,pfcRHS),rhs([mpred_prop(baseKB,<==>,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'COL'=COL, 
                        'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,<==>,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,<==>,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,<==>,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,<==>,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,<==>,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,<==>,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,<==>,2,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,<==>,2,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,<==>,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tType,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tType,1) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcLHS), 
                   rhs( [ arity(tType,1), 
                          functorIsMacro(tType), 
                          mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tType,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tType) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcLHS), 
                   rhs( [ arity(tType,1), 
                          functorIsMacro(tType), 
                          mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tType))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcLHS), 
                   rhs( [ arity(tType,1), 
                          functorIsMacro(tType), 
                          mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'COL'=COL, 
                        'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'COL'=COL, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tType,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tType,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tType,1,pfcLHS), 
                 rhs( [ arity(tType,1), 
                        functorIsMacro(tType), 
                        mpred_prop(baseKB,tType,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tType) , 
  support_fact = mfl4(_19264,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tType))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorDeclares(tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorDeclares(tType) , 
  support_fact = tType(tType) , 
  support_trig = '$pt'( baseKB, 
                   tType(tType), 
                   rhs( [ { kb_local( tType/1) }, 
                          functorDeclares(tType), 
                          t(tType,Type)<==>instanceOf(Type1,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( functorDeclares(tType))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arityMax(tType,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arityMax(tType,1) , 
  support_fact = functorDeclares(tType) , 
  support_trig = '$pt'(baseKB,functorDeclares(tType),rhs([arityMax(tType,1),functorIsMacro(tType)])) , 
  none is support_status
baseKB : mpred_fwc1( arityMax(tType,1))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = functorIsMacro(tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tType) , 
  support_fact = functorDeclares(tType) , 
  support_trig = '$pt'(baseKB,functorDeclares(tType),rhs([arityMax(tType,1),functorIsMacro(tType)])) , 
  ( simular( ( mpred_prop(baseKB,tType,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tType,1,pfcLHS), 
                 rhs( [ arity(tType,1), 
                        functorIsMacro(tType), 
                        mpred_prop(baseKB,tType,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(_1382)<==>instanceOf(_1382,tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(_1382)<==>instanceOf(_1382,tType) , 
  support_fact = tType(tType) , 
  support_trig = '$pt'( baseKB, 
                   tType(tType), 
                   rhs( [ { kb_local( tType/1) }, 
                          functorDeclares(tType), 
                          t(tType,Type)<==>instanceOf(Type1,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( tType(Type1)<==>instanceOf(Type,tType))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  support_fact = mfl4(_52686,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,instanceOf,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,kb_shared) , 
  support_fact = mfl4(_412,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34),ax , 
  support_trig = mfl4(_856,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,instanceOf,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,instanceOf,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(tType,tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(tType,tType) , 
  support_fact = tType(tType) , 
  support_trig = '$pt'(baseKB,tType(_2166),rhs([instanceOf(_2166,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(tType,tType))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcRHS) , 
  support_fact = mfl4(_43634,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,tType,1,pfcRHS),rhs([mpred_prop(baseKB,tType,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tType,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tType,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tType,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tType,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tType,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tType,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tType,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_fact = mfl4(_9230,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(instanceOf,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(instanceOf,2) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                   rhs( [ arity(instanceOf,2), 
                          functorIsMacro(instanceOf), 
                          mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(instanceOf,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(instanceOf,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(instanceOf,2) , 
  support_fact = arity(instanceOf,2) , 
  support_trig = '$pt'( baseKB, 
                   arity(instanceOf,2), 
                   pfcControlled(instanceOf)*->rhs([hybrid_support(instanceOf,2)])) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(instanceOf,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(instanceOf) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(instanceOf) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                   rhs( [ arity(instanceOf,2), 
                          functorIsMacro(instanceOf), 
                          mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(instanceOf))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                   rhs( [ arity(instanceOf,2), 
                          functorIsMacro(instanceOf), 
                          mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcPosTrigger) , 
  support_fact = mfl4(_112066,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,instanceOf,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,instanceOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,instanceOf,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,instanceOf,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,instanceOf,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,instanceOf,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,instanceOf,2,pfcLHS), 
                 rhs( [ arity(instanceOf,2), 
                        functorIsMacro(instanceOf), 
                        mpred_prop(baseKB,instanceOf,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tType(tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tType) , 
  support_fact = instanceOf(tType,tType) , 
  support_trig = '$pt'(baseKB,instanceOf(_8914,tType),rhs([tType(_8914)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',34),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tFly) , 
  support_fact = mfl4(_98034,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,kb_local) , 
  support_fact = mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35),ax , 
  support_trig = mfl4(_782,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorDeclares(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorDeclares(tFly) , 
  support_fact = tType(tFly) , 
  support_trig = '$pt'( baseKB, 
                   tType(tFly), 
                   rhs( [ { kb_local( tFly/1) }, 
                          functorDeclares(tFly), 
                          t(tFly,Fly)<==>instanceOf(Fly1,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( functorDeclares(tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arityMax(tFly,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arityMax(tFly,1) , 
  support_fact = functorDeclares(tFly) , 
  support_trig = '$pt'(baseKB,functorDeclares(tFly),rhs([arityMax(tFly,1),functorIsMacro(tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( arityMax(tFly,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tFly) , 
  support_fact = functorDeclares(tFly) , 
  support_trig = '$pt'(baseKB,functorDeclares(tFly),rhs([arityMax(tFly,1),functorIsMacro(tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(_1190)<==>instanceOf(_1190,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(_1190)<==>instanceOf(_1190,tFly) , 
  support_fact = tType(tFly) , 
  support_trig = '$pt'( baseKB, 
                   tType(tFly), 
                   rhs( [ { kb_local( tFly/1) }, 
                          functorDeclares(tFly), 
                          t(tFly,Fly)<==>instanceOf(Fly1,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(Fly1)<==>instanceOf(Fly,tFly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcLHS) , 
  support_fact = mfl4(_29812,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tFly,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tFly,1) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcLHS), 
                   rhs( [ arity(tFly,1), 
                          functorIsMacro(tFly), 
                          mpred_prop(baseKB,tFly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tFly,1))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = functorIsMacro(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tFly) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcLHS), 
                   rhs( [ arity(tFly,1), 
                          functorIsMacro(tFly), 
                          mpred_prop(baseKB,tFly,1,pfcWatches)])) , 
  ( simular( ( functorDeclares(tFly) , 
               '$pt'(baseKB,functorDeclares(tFly),rhs([arityMax(tFly,1),functorIsMacro(tFly)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcLHS), 
                   rhs( [ arity(tFly,1), 
                          functorIsMacro(tFly), 
                          mpred_prop(baseKB,tFly,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcPosTrigger) , 
  support_fact = mfl4(_27044,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tFly,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tFly,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tFly,1,pfcLHS), 
                 rhs( [ arity(tFly,1), 
                        functorIsMacro(tFly), 
                        mpred_prop(baseKB,tFly,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcRHS) , 
  support_fact = mfl4(_56644,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,tFly,1,pfcRHS),rhs([mpred_prop(baseKB,tFly,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tFly,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tFly,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(tFly,tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(tFly,tType) , 
  support_fact = tType(tFly) , 
  support_trig = '$pt'(baseKB,tType(tFly),rhs([instanceOf(tFly,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(tFly,tType))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tType(tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tFly) , 
  support_fact = instanceOf(tFly,tType) , 
  support_trig = '$pt'(baseKB,instanceOf(tFly,tType),rhs([tType(tFly)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tCanary) , 
  support_fact = mfl4(_83974,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,kb_local) , 
  support_fact = mfl4(_422,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36),ax , 
  support_trig = mfl4(_784,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorDeclares(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorDeclares(tCanary) , 
  support_fact = tType(tCanary) , 
  support_trig = '$pt'( baseKB, 
                   tType(tCanary), 
                   rhs( [ { kb_local( tCanary/1) }, 
                          functorDeclares(tCanary), 
                          t(tCanary,Canary)<==>instanceOf(Canary1,tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( functorDeclares(tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arityMax(tCanary,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arityMax(tCanary,1) , 
  support_fact = functorDeclares(tCanary) , 
  support_trig = '$pt'( baseKB, 
                   functorDeclares(tCanary), 
                   rhs( [ arityMax(tCanary,1), 
                          functorIsMacro(tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( arityMax(tCanary,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tCanary) , 
  support_fact = functorDeclares(tCanary) , 
  support_trig = '$pt'( baseKB, 
                   functorDeclares(tCanary), 
                   rhs( [ arityMax(tCanary,1), 
                          functorIsMacro(tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tCanary(_1190)<==>instanceOf(_1190,tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tCanary(_1190)<==>instanceOf(_1190,tCanary) , 
  support_fact = tType(tCanary) , 
  support_trig = '$pt'( baseKB, 
                   tType(tCanary), 
                   rhs( [ { kb_local( tCanary/1) }, 
                          functorDeclares(tCanary), 
                          t(tCanary,Canary)<==>instanceOf(Canary1,tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( tCanary(Canary1)<==>instanceOf(Canary,tCanary))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcLHS) , 
  support_fact = mfl4(_29780,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tCanary,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tCanary,1) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcLHS), 
                   rhs( [ arity(tCanary,1), 
                          functorIsMacro(tCanary), 
                          mpred_prop(baseKB,tCanary,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tCanary,1))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = functorIsMacro(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tCanary) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcLHS), 
                   rhs( [ arity(tCanary,1), 
                          functorIsMacro(tCanary), 
                          mpred_prop(baseKB,tCanary,1,pfcWatches)])) , 
  ( simular( ( functorDeclares(tCanary) , 
               '$pt'(baseKB,functorDeclares(tCanary),rhs([arityMax(tCanary,1),functorIsMacro(tCanary)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcLHS), 
                   rhs( [ arity(tCanary,1), 
                          functorIsMacro(tCanary), 
                          mpred_prop(baseKB,tCanary,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcPosTrigger) , 
  support_fact = mfl4(_27400,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tCanary,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tCanary,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tCanary,1,pfcLHS), 
                 rhs( [ arity(tCanary,1), 
                        functorIsMacro(tCanary), 
                        mpred_prop(baseKB,tCanary,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcRHS) , 
  support_fact = mfl4(_58788,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,tCanary,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tCanary,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tCanary,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tCanary,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tCanary,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tCanary,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tCanary,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tCanary,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(tCanary,tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(tCanary,tType) , 
  support_fact = tType(tCanary) , 
  support_trig = '$pt'(baseKB,tType(tCanary),rhs([instanceOf(tCanary,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(tCanary,tType))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tType(tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tCanary) , 
  support_fact = instanceOf(tCanary,tType) , 
  support_trig = '$pt'(baseKB,instanceOf(tCanary,tType),rhs([tType(tCanary)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tPenguin) , 
  support_fact = mfl4(_103320,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,kb_local) , 
  support_fact = mfl4(_422,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37),ax , 
  support_trig = mfl4(_784,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorDeclares(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorDeclares(tPenguin) , 
  support_fact = tType(tPenguin) , 
  support_trig = '$pt'( baseKB, 
                   tType(tPenguin), 
                   rhs( [ { kb_local( tPenguin/1) }, 
                          functorDeclares(tPenguin), 
                          t(tPenguin,Penguin)<==>instanceOf(Penguin1,tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( functorDeclares(tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arityMax(tPenguin,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arityMax(tPenguin,1) , 
  support_fact = functorDeclares(tPenguin) , 
  support_trig = '$pt'( baseKB, 
                   functorDeclares(tPenguin), 
                   rhs( [ arityMax(tPenguin,1), 
                          functorIsMacro(tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( arityMax(tPenguin,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tPenguin) , 
  support_fact = functorDeclares(tPenguin) , 
  support_trig = '$pt'( baseKB, 
                   functorDeclares(tPenguin), 
                   rhs( [ arityMax(tPenguin,1), 
                          functorIsMacro(tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tPenguin(_1190)<==>instanceOf(_1190,tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(_1190)<==>instanceOf(_1190,tPenguin) , 
  support_fact = tType(tPenguin) , 
  support_trig = '$pt'( baseKB, 
                   tType(tPenguin), 
                   rhs( [ { kb_local( tPenguin/1) }, 
                          functorDeclares(tPenguin), 
                          t(tPenguin,Penguin)<==>instanceOf(Penguin1,tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( tPenguin(Penguin1)<==>instanceOf(Penguin,tPenguin))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcLHS) , 
  support_fact = mfl4(_66062,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tPenguin,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tPenguin,1) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcLHS), 
                   rhs( [ arity(tPenguin,1), 
                          functorIsMacro(tPenguin), 
                          mpred_prop(baseKB,tPenguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tPenguin,1))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = functorIsMacro(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tPenguin) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcLHS), 
                   rhs( [ arity(tPenguin,1), 
                          functorIsMacro(tPenguin), 
                          mpred_prop(baseKB,tPenguin,1,pfcWatches)])) , 
  ( simular( ( functorDeclares(tPenguin) , 
               '$pt'(baseKB,functorDeclares(tPenguin),rhs([arityMax(tPenguin,1),functorIsMacro(tPenguin)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcLHS), 
                   rhs( [ arity(tPenguin,1), 
                          functorIsMacro(tPenguin), 
                          mpred_prop(baseKB,tPenguin,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcPosTrigger) , 
  support_fact = mfl4(_55432,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tPenguin,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tPenguin,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tPenguin,1,pfcLHS), 
                 rhs( [ arity(tPenguin,1), 
                        functorIsMacro(tPenguin), 
                        mpred_prop(baseKB,tPenguin,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcRHS) , 
  support_fact = mfl4(_77316,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,tPenguin,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tPenguin,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tPenguin,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tPenguin,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tPenguin,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tPenguin,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tPenguin,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tPenguin,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(tPenguin,tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(tPenguin,tType) , 
  support_fact = tType(tPenguin) , 
  support_trig = '$pt'(baseKB,tType(tPenguin),rhs([instanceOf(tPenguin,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(tPenguin,tType))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tType(tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tPenguin) , 
  support_fact = instanceOf(tPenguin,tType) , 
  support_trig = '$pt'(baseKB,instanceOf(tPenguin,tType),rhs([tType(tPenguin)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tType(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tBird) , 
  support_fact = mfl4(_3546,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tType(tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,kb_local) , 
  support_fact = ( mfl4(_3546,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) , 
                   ax) , 
  support_trig = mfl4(_4446,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorDeclares(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorDeclares(tBird) , 
  support_fact = tType(tBird) , 
  support_trig = '$pt'( baseKB, 
                   tType(tBird), 
                   rhs( [ { kb_local( tBird/1) }, 
                          functorDeclares(tBird), 
                          t(tBird,Bird)<==>instanceOf(Bird1,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( functorDeclares(tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arityMax(tBird,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arityMax(tBird,1) , 
  support_fact = functorDeclares(tBird) , 
  support_trig = '$pt'(baseKB,functorDeclares(tBird),rhs([arityMax(tBird,1),functorIsMacro(tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( arityMax(tBird,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tBird) , 
  support_fact = functorDeclares(tBird) , 
  support_trig = '$pt'(baseKB,functorDeclares(tBird),rhs([arityMax(tBird,1),functorIsMacro(tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(_1382)<==>instanceOf(_1382,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(_1382)<==>instanceOf(_1382,tBird) , 
  support_fact = tType(tBird) , 
  support_trig = '$pt'( baseKB, 
                   tType(tBird), 
                   rhs( [ { kb_local( tBird/1) }, 
                          functorDeclares(tBird), 
                          t(tBird,Bird)<==>instanceOf(Bird1,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(Bird1)<==>instanceOf(Bird,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcLHS) , 
  support_fact = mfl4(_45254,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(tBird,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(tBird,1) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,1,pfcLHS), 
                   rhs( [ arity(tBird,1), 
                          functorIsMacro(tBird), 
                          mpred_prop(baseKB,tBird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(tBird,1))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = functorIsMacro(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(tBird) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,1,pfcLHS), 
                   rhs( [ arity(tBird,1), 
                          functorIsMacro(tBird), 
                          mpred_prop(baseKB,tBird,1,pfcWatches)])) , 
  ( simular( ( functorDeclares(tBird) , 
               '$pt'(baseKB,functorDeclares(tBird),rhs([arityMax(tBird,1),functorIsMacro(tBird)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,1,pfcLHS), 
                   rhs( [ arity(tBird,1), 
                          functorIsMacro(tBird), 
                          mpred_prop(baseKB,tBird,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcPosTrigger) , 
  support_fact = mfl4(_35644,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,tBird,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tBird,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tBird,1,pfcLHS), 
                 rhs( [ arity(tBird,1), 
                        functorIsMacro(tBird), 
                        mpred_prop(baseKB,tBird,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcRHS) , 
  support_fact = mfl4(_61448,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,tBird,1,pfcRHS),rhs([mpred_prop(baseKB,tBird,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,tBird,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tBird,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tBird,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,tBird,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tBird,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,tBird,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tBird,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(tBird,tType) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(tBird,tType) , 
  support_fact = tType(tBird) , 
  support_trig = '$pt'(baseKB,tType(tBird),rhs([instanceOf(tBird,tType)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(tBird,tType))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tType(tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tType(tBird) , 
  support_fact = instanceOf(tBird,tType) , 
  support_trig = '$pt'(baseKB,instanceOf(tBird,tType),rhs([tType(tBird)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   subClassOf(C1,C2)  ==>
            instanceOf(_112662,_112618) ==> 
            instanceOf(_112662,_112640)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   subClassOf(C1,C2)  ==>
         instanceOf(_928,_920) ==> 
         instanceOf(_928,_924)) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   subClassOf(SubClassOf,SubClassOf6)  ==>
                       instanceOf(InstanceOf,InstanceOf7) ==> 
                       instanceOf(InstanceOf5,InstanceOf8)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(subClassOf,2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(subClassOf,2) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                   rhs( [ arity(subClassOf,2), 
                          functorIsMacro(subClassOf), 
                          mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(subClassOf,2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(subClassOf) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(subClassOf) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                   rhs( [ arity(subClassOf,2), 
                          functorIsMacro(subClassOf), 
                          mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(subClassOf))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                   rhs( [ arity(subClassOf,2), 
                          functorIsMacro(subClassOf), 
                          mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'C1'=C1, 
                        'C2'=C2, 
                        'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 43) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 43) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'C1'=C1, 
                      'C2'=C2, 
                      'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,subClassOf,2,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,subClassOf,2,pfcWatches) , 
  support_fact = mpred_prop(baseKB,subClassOf,2,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,subClassOf,2,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,subClassOf,2,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,subClassOf,2,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,subClassOf,2,pfcLHS), 
                 rhs( [ arity(subClassOf,2), 
                        functorIsMacro(subClassOf), 
                        mpred_prop(baseKB,subClassOf,2,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = subClassOf(tCanary,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = subClassOf(tCanary,tBird) , 
  support_fact = mfl4(_75644,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( subClassOf(tCanary,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(_1616,tCanary)==>instanceOf(_1616,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(_1616,tCanary)==>instanceOf(_1616,tBird) , 
  support_fact = subClassOf(tCanary,tBird) , 
  support_trig = '$pt'( baseKB, 
                   subClassOf(tCanary,tBird), 
                   rhs([(instanceOf(_1616,tCanary)==>instanceOf(_1616,tBird))])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(Canary,tCanary)==>instanceOf(Bird,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = subClassOf(tPenguin,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = subClassOf(tPenguin,tBird) , 
  support_fact = mfl4(_41924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',49) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( subClassOf(tPenguin,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(_1808,tPenguin)==>instanceOf(_1808,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(_1808,tPenguin)==>instanceOf(_1808,tBird) , 
  support_fact = subClassOf(tPenguin,tBird) , 
  support_trig = '$pt'( baseKB, 
                   subClassOf(tPenguin,tBird), 
                   rhs([(instanceOf(_1808,tPenguin)==>instanceOf(_1808,tBird))])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(Penguin,tPenguin)==>instanceOf(Bird,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tPenguin(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(iChilly) , 
  support_fact = mfl4(_11918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tPenguin(iChilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tPenguin) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tPenguin) , 
  support_fact = tPenguin(iChilly) , 
  support_trig = '$pt'(baseKB,tPenguin(iChilly),rhs([instanceOf(iChilly,tPenguin)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tPenguin))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tPenguin(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(iChilly) , 
  support_fact = instanceOf(iChilly,tPenguin) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tPenguin),rhs([tPenguin(iChilly)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tBird) , 
  support_fact = instanceOf(iChilly,tPenguin) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tPenguin),rhs([instanceOf(iChilly,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(iChilly) , 
  support_fact = instanceOf(iChilly,tBird) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tBird),rhs([tBird(iChilly)])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(iChilly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = instanceOf(iChilly,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tBird) , 
  support_fact = tBird(iChilly) , 
  support_trig = '$pt'(baseKB,tBird(iChilly),rhs([instanceOf(iChilly,tBird)])) , 
  ( simular( instanceOf(iChilly,tPenguin),'$pt'(baseKB,instanceOf(iChilly,tPenguin),rhs([instanceOf(iChilly,tBird)]))) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iChilly,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_36994] [0m[36m
    1.2 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_37912] [0m[36m
    1.3 instanceOf(iChilly,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_39086] [0m[36m
    1.4 instanceOf(W4,tPenguin)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_40006] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.7 tPenguin(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:54] [0m[36m
    1.8 tPenguin(W4)<==>instanceOf(W4,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_43814] [0m[36m
    1.9 subClassOf(tPenguin,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:49] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) [0m[36m
    1.14 tType(tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:37] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',49) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tCanary(iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tCanary(iTweety) , 
  support_fact = mfl4(_61394,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tCanary(iTweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iTweety,tCanary) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tCanary) , 
  support_fact = tCanary(iTweety) , 
  support_trig = '$pt'(baseKB,tCanary(iTweety),rhs([instanceOf(iTweety,tCanary)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iTweety,tCanary))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tCanary(iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tCanary(iTweety) , 
  support_fact = instanceOf(iTweety,tCanary) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tCanary),rhs([tCanary(iTweety)])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61),ax) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iTweety,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tBird) , 
  support_fact = instanceOf(iTweety,tCanary) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tCanary),rhs([instanceOf(iTweety,tBird)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iTweety,tBird))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(iTweety) , 
  support_fact = instanceOf(iTweety,tBird) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tBird),rhs([tBird(iTweety)])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(iTweety))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = instanceOf(iTweety,tBird) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tBird) , 
  support_fact = tBird(iTweety) , 
  support_trig = '$pt'(baseKB,tBird(iTweety),rhs([instanceOf(iTweety,tBird)])) , 
  ( simular( instanceOf(iTweety,tCanary),'$pt'(baseKB,instanceOf(iTweety,tCanary),rhs([instanceOf(iTweety,tBird)]))) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_83854] [0m[36m
    1.2 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_84772] [0m[36m
    1.3 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_85946] [0m[36m
    1.4 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_86866] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.7 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    1.8 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_90674] [0m[36m
    1.9 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    1.14 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mdefault( tBird(X)==>tFly(X)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mdefault( tBird(X)==>tFly(X)) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 66) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mdefault( tBird(Bird)==>tFly(Fly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tBird(_1720)==>mdefault(tFly(_1720)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(_1720)==>mdefault(tFly(_1720)) , 
  support_fact = mdefault( tBird(Bird)==>tFly(Fly)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tBird(Bird)==>tFly(Fly)), 
                   nonvar(tFly(_1720))*->rhs([(tBird(_1720)==>mdefault(tFly(_1720)))])) , 
  none is support_status
baseKB : mpred_fwc1( tBird(Bird)==>mdefault(tFly(Fly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mdefault( tFly(iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mdefault( tFly(iChilly)) , 
  support_fact = tBird(iChilly) , 
  support_trig = '$pt'(baseKB,tBird(_2592),rhs([mdefault(tFly(_2592))])) , 
  none is support_status
baseKB : mpred_fwc1( mdefault( tFly(iChilly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( \+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly) ==> 
            tFly(iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = \+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly)==>tFly(iChilly) , 
  support_fact = mdefault( tFly(iChilly)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(iChilly)), 
                   ( ( mpred_positive_fact( tFly(iChilly)) , 
                       if_missing_mask(tFly(iChilly),tFly(iChilly),\+tFly(iChilly))) *-> 
                     rhs([(\+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly)==>tFly(iChilly))]))) , 
  none is support_status
baseKB : mpred_fwc1( \+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly)==>tFly(iChilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 66) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcNegTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcNegTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 66) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,tFly,1,pfcNegTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,tFly,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,tFly,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,tFly,1,pfcNegTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,tFly,1,pfcNegTrigger), 
                   rhs([mpred_prop(baseKB,tFly,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,tFly,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,tFly,1,pfcLHS), 
                 rhs( [ arity(tFly,1), 
                        functorIsMacro(tFly), 
                        mpred_prop(baseKB,tFly,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(iChilly) , 
  support_fact = \+( ~( tFly(iChilly))) , 
  support_trig = '$nt'(~tFly(iChilly),call_u_no_bc(~tFly(iChilly)),rhs([tFly(iChilly)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(iChilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tFly) , 
  support_fact = tFly(iChilly) , 
  support_trig = '$pt'(baseKB,tFly(iChilly),rhs([instanceOf(iChilly,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tFly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tFly(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(iChilly) , 
  support_fact = instanceOf(iChilly,tFly) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tFly),rhs([tFly(iChilly)])) , 
  ( simular( \+ ~tFly(iChilly),'$nt'(~tFly(iChilly),call_u_no_bc(~tFly(iChilly)),rhs([tFly(iChilly)]))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly),\+tFly(iChilly)=tFly(iChilly)) ==> 
            \+( tFly(iChilly))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly),\+tFly(iChilly)=tFly(iChilly)) ==> 
         \+( tFly(iChilly))) , 
  support_fact = mdefault( tFly(iChilly)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(iChilly)), 
                   ( ( mpred_positive_fact( tFly(iChilly)) , 
                       if_missing_mask(tFly(iChilly),tFly(iChilly),\+tFly(iChilly))) *-> 
                     rhs([(tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly),\+tFly(iChilly)=tFly(iChilly))==> \+tFly(iChilly))]))) , 
  none is support_status
baseKB : mpred_fwc1( ( tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly),\+tFly(iChilly)=tFly(iChilly)) ==> 
                       \+( tFly(iChilly))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mdefault( tFly(iTweety)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mdefault( tFly(iTweety)) , 
  support_fact = tBird(iTweety) , 
  support_trig = '$pt'(baseKB,tBird(_2592),rhs([mdefault(tFly(_2592))])) , 
  none is support_status
baseKB : mpred_fwc1( mdefault( tFly(iTweety)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety) ==> 
            tFly(iTweety)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety) , 
  support_fact = mdefault( tFly(iTweety)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(iTweety)), 
                   ( ( mpred_positive_fact( tFly(iTweety)) , 
                       if_missing_mask(tFly(iTweety),tFly(iTweety),\+tFly(iTweety))) *-> 
                     rhs([(\+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety))]))) , 
  none is support_status
baseKB : mpred_fwc1( \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(iTweety) , 
  support_fact = \+( ~( tFly(iTweety))) , 
  support_trig = '$nt'(~tFly(iTweety),call_u_no_bc(~tFly(iTweety)),rhs([tFly(iTweety)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(iTweety))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iTweety,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iTweety,tFly) , 
  support_fact = tFly(iTweety) , 
  support_trig = '$pt'(baseKB,tFly(iTweety),rhs([instanceOf(iTweety,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iTweety,tFly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tFly(iTweety) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(iTweety) , 
  support_fact = instanceOf(iTweety,tFly) , 
  support_trig = '$pt'(baseKB,instanceOf(iTweety,tFly),rhs([tFly(iTweety)])) , 
  ( simular( \+ ~tFly(iTweety),'$nt'(~tFly(iTweety),call_u_no_bc(~tFly(iTweety)),rhs([tFly(iTweety)]))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ( tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety),\+tFly(iTweety)=tFly(iTweety)) ==> 
            \+( tFly(iTweety))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ( tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety),\+tFly(iTweety)=tFly(iTweety)) ==> 
         \+( tFly(iTweety))) , 
  support_fact = mdefault( tFly(iTweety)) , 
  support_trig = '$pt'( baseKB, 
                   mdefault( tFly(iTweety)), 
                   ( ( mpred_positive_fact( tFly(iTweety)) , 
                       if_missing_mask(tFly(iTweety),tFly(iTweety),\+tFly(iTweety))) *-> 
                     rhs([(tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety),\+tFly(iTweety)=tFly(iTweety))==> \+tFly(iTweety))]))) , 
  none is support_status
baseKB : mpred_fwc1( ( tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety),\+tFly(iTweety)=tFly(iTweety)) ==> 
                       \+( tFly(iTweety))))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_10860] [0m[36m
    1.2 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_11778] [0m[36m
    1.3 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_12952] [0m[36m
    1.4 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_13872] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.7 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    1.8 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_17680] [0m[36m
    1.9 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    1.14 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tFly(iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_98604] [0m[36m
    1.4 mdefault(tFly(iTweety)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_99778] [0m[36m
    1.5 mdefault(W4)/(mpred_positive_fact(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/(ground(X4),Y4),\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:62] [0m[36m
    1.6 tBird(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_101970] [0m[36m
    1.7 tBird(W4)==>mdefault(tFly(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_102890] [0m[36m
    1.8 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62) [0m[36m
    1.9 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_109108] [0m[36m
    1.10 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_2666] [0m[36m
    1.11 mdefault((tBird(W4)==>tFly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:66] [0m[36m
    1.12 mdefault((W4==>X4))/nonvar(X4)==>(W4==>mdefault(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:55] [0m[36m
    1.13 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_5634] [0m[36m
    1.14 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_6554] [0m[36m
    1.15 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.16 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.17 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',66) [0m[36m
    1.18 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55) [0m[36m
    1.19 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    1.20 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_16630] [0m[36m
    1.21 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    1.22 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.23 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.24 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.25 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    1.26 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    1.27 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    1.28 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.29 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 instanceOf(iTweety,tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_30848] [0m[36m
    2.2 tFly(W4)<==>instanceOf(W4,tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_31766] [0m[36m
    2.3 tFly(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_32940] [0m[36m
    2.4 tType(tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:35] [0m[36m
    2.5 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    2.6 \+ ~tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    2.7 \+tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    2.8 \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_37154] [0m[36m
    2.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) [0m[36m
    2.10 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    2.11 mdefault(tFly(iTweety)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_42468] [0m[36m
    2.12 mdefault(W4)/(mpred_positive_fact(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/(ground(X4),Y4),\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:62] [0m[36m
    2.13 tBird(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_44660] [0m[36m
    2.14 tBird(W4)==>mdefault(tFly(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_45580] [0m[36m
    2.15 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62) [0m[36m
    2.16 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_51798] [0m[36m
    2.17 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_52716] [0m[36m
    2.18 mdefault((tBird(W4)==>tFly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:66] [0m[36m
    2.19 mdefault((W4==>X4))/nonvar(X4)==>(W4==>mdefault(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:55] [0m[36m
    2.20 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_55690] [0m[36m
    2.21 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_56610] [0m[36m
    2.22 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    2.23 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',66) [0m[36m
    2.24 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55) [0m[36m
    2.25 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    2.26 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_65716] [0m[36m
    2.27 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    2.28 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    2.29 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    2.30 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    2.31 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    2.32 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    2.33 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    2.34 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_110926] [0m[36m
    1.2 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1652] [0m[36m
    1.3 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_2820] [0m[36m
    1.4 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_3740] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.7 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    1.8 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_7548] [0m[36m
    1.9 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    1.14 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic tFly/1.
:- multifile tFly/1.
:- public tFly/1.
:- module_transparent tFly/1.

tFly(iChilly).
tFly(iTweety).

:- dynamic tBird/1.
:- multifile tBird/1.
:- public tBird/1.
:- module_transparent tBird/1.

tBird(iChilly).
tBird(iTweety).

:- dynamic instanceOf/2.
:- multifile instanceOf/2.
:- public instanceOf/2.
:- module_transparent instanceOf/2.

instanceOf(tType, tType).
instanceOf(tFly, tType).
instanceOf(tCanary, tType).
instanceOf(tPenguin, tType).
instanceOf(tBird, tType).
instanceOf(iChilly, tPenguin).
instanceOf(iChilly, tBird).
instanceOf(iTweety, tCanary).
instanceOf(iTweety, tBird).
instanceOf(iChilly, tFly).
instanceOf(iTweety, tFly).

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tFly(iTweety):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_51296] [0m[36m
    1.4 mdefault(tFly(iTweety)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_52470] [0m[36m
    1.5 mdefault(W4)/(mpred_positive_fact(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/(ground(X4),Y4),\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:62] [0m[36m
    1.6 tBird(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_54662] [0m[36m
    1.7 tBird(W4)==>mdefault(tFly(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_55582] [0m[36m
    1.8 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62) [0m[36m
    1.9 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_61800] [0m[36m
    1.10 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_62718] [0m[36m
    1.11 mdefault((tBird(W4)==>tFly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:66] [0m[36m
    1.12 mdefault((W4==>X4))/nonvar(X4)==>(W4==>mdefault(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:55] [0m[36m
    1.13 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_65692] [0m[36m
    1.14 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_66612] [0m[36m
    1.15 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.16 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.17 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',66) [0m[36m
    1.18 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55) [0m[36m
    1.19 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    1.20 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_76688] [0m[36m
    1.21 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    1.22 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.23 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.24 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.25 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    1.26 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    1.27 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    1.28 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.29 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 instanceOf(iTweety,tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_90906] [0m[36m
    2.2 tFly(W4)<==>instanceOf(W4,tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_91824] [0m[36m
    2.3 tFly(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_92998] [0m[36m
    2.4 tType(tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:35] [0m[36m
    2.5 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    2.6 \+ ~tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    2.7 \+tFly(iTweety) [0m[90m % [/boot/init.pl:512] [0m[36m
    2.8 \+tFly(iTweety)/(ground(tFly(iTweety)),\+tFly(iTweety)),\+ ~tFly(iTweety)==>tFly(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_97212] [0m[36m
    2.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) [0m[36m
    2.10 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    2.11 mdefault(tFly(iTweety)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_102526] [0m[36m
    2.12 mdefault(W4)/(mpred_positive_fact(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/(ground(X4),Y4),\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:62] [0m[36m
    2.13 tBird(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_104718] [0m[36m
    2.14 tBird(W4)==>mdefault(tFly(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_105638] [0m[36m
    2.15 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62) [0m[36m
    2.16 instanceOf(iTweety,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_111856] [0m[36m
    2.17 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_1674] [0m[36m
    2.18 mdefault((tBird(W4)==>tFly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:66] [0m[36m
    2.19 mdefault((W4==>X4))/nonvar(X4)==>(W4==>mdefault(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:55] [0m[36m
    2.20 instanceOf(iTweety,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_4642] [0m[36m
    2.21 instanceOf(W4,tCanary)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_5562] [0m[36m
    2.22 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    2.23 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',66) [0m[36m
    2.24 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55) [0m[36m
    2.25 tCanary(iTweety) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:61] [0m[36m
    2.26 tCanary(W4)<==>instanceOf(W4,tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_14668] [0m[36m
    2.27 subClassOf(tCanary,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:47] [0m[36m
    2.28 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    2.29 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    2.30 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',61) [0m[36m
    2.31 tType(tCanary) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:36] [0m[36m
    2.32 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',47) [0m[36m
    2.33 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    2.34 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tFly(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~tFly(iChilly) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+tFly(iChilly) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly)==>tFly(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_91734] [0m[36m
    1.4 mdefault(tFly(iChilly)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_92908] [0m[36m
    1.5 mdefault(W4)/(mpred_positive_fact(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/(ground(X4),Y4),\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:62] [0m[36m
    1.6 tBird(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_95100] [0m[36m
    1.7 tBird(W4)==>mdefault(tFly(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_96020] [0m[36m
    1.8 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62) [0m[36m
    1.9 instanceOf(iChilly,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_102238] [0m[36m
    1.10 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_103156] [0m[36m
    1.11 mdefault((tBird(W4)==>tFly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:66] [0m[36m
    1.12 mdefault((W4==>X4))/nonvar(X4)==>(W4==>mdefault(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:55] [0m[36m
    1.13 instanceOf(iChilly,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_106130] [0m[36m
    1.14 instanceOf(W4,tPenguin)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_107050] [0m[36m
    1.15 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.16 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.17 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',66) [0m[36m
    1.18 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55) [0m[36m
    1.19 tPenguin(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:54] [0m[36m
    1.20 tPenguin(W4)<==>instanceOf(W4,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_2394] [0m[36m
    1.21 subClassOf(tPenguin,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:49] [0m[36m
    1.22 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.23 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.24 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.25 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) [0m[36m
    1.26 tType(tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:37] [0m[36m
    1.27 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',49) [0m[36m
    1.28 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.29 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 instanceOf(iChilly,tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_16606] [0m[36m
    2.2 tFly(W4)<==>instanceOf(W4,tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_17524] [0m[36m
    2.3 tFly(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_18698] [0m[36m
    2.4 tType(tFly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:35] [0m[36m
    2.5 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    2.6 \+ ~tFly(iChilly) [0m[90m % [/boot/init.pl:512] [0m[36m
    2.7 \+tFly(iChilly) [0m[90m % [/boot/init.pl:512] [0m[36m
    2.8 \+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly)==>tFly(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_22912] [0m[36m
    2.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',35) [0m[36m
    2.10 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    2.11 mdefault(tFly(iChilly)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_28226] [0m[36m
    2.12 mdefault(W4)/(mpred_positive_fact(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/(ground(X4),Y4),\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:62] [0m[36m
    2.13 tBird(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_30418] [0m[36m
    2.14 tBird(W4)==>mdefault(tFly(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_31338] [0m[36m
    2.15 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',62) [0m[36m
    2.16 instanceOf(iChilly,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_37556] [0m[36m
    2.17 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_38474] [0m[36m
    2.18 mdefault((tBird(W4)==>tFly(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:66] [0m[36m
    2.19 mdefault((W4==>X4))/nonvar(X4)==>(W4==>mdefault(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl:55] [0m[36m
    2.20 instanceOf(iChilly,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_41448] [0m[36m
    2.21 instanceOf(W4,tPenguin)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_42368] [0m[36m
    2.22 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    2.23 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',66) [0m[36m
    2.24 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_mdefault.pfc.pl',55) [0m[36m
    2.25 tPenguin(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:54] [0m[36m
    2.26 tPenguin(W4)<==>instanceOf(W4,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_51474] [0m[36m
    2.27 subClassOf(tPenguin,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:49] [0m[36m
    2.28 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    2.29 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    2.30 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) [0m[36m
    2.31 tType(tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:37] [0m[36m
    2.32 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',49) [0m[36m
    2.33 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    2.34 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = never_retract_u( tBird(iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = never_retract_u( tBird(iChilly)) , 
  support_fact = mfl4(_62346,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',84) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( never_retract_u( tBird(iChilly)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tPenguin(_888)==> ~tFly(_888) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tPenguin(_888)==> ~tFly(_888) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc', 88) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( tPenguin(Penguin)==> ~tFly(Fly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = tFly(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(iChilly) , 
  support_fact = \+( ~( tFly(iChilly))) , 
  support_trig = '$nt'(~tFly(iChilly),call_u_no_bc(~tFly(iChilly)),rhs([tFly(iChilly)])) , 
  none is support_status
baseKB : mpred_fwc1( tFly(iChilly))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = instanceOf(iChilly,tFly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = instanceOf(iChilly,tFly) , 
  support_fact = tFly(iChilly) , 
  support_trig = '$pt'(baseKB,tFly(iChilly),rhs([instanceOf(iChilly,tFly)])) , 
  none is support_status
baseKB : mpred_fwc1( instanceOf(iChilly,tFly))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tFly(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tFly(iChilly) , 
  support_fact = instanceOf(iChilly,tFly) , 
  support_trig = '$pt'(baseKB,instanceOf(iChilly,tFly),rhs([tFly(iChilly)])) , 
  ( simular( \+ ~tFly(iChilly),'$nt'(~tFly(iChilly),call_u_no_bc(~tFly(iChilly)),rhs([tFly(iChilly)]))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~( tFly(iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~( tFly(iChilly)) , 
  support_fact = tPenguin(iChilly) , 
  support_trig = '$pt'(baseKB,tPenguin(_2000),rhs([~tFly(_2000)])) , 
  none is support_status
baseKB : mpred_fwc1( ~( tFly(iChilly)))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for ~tFly(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 tPenguin(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:54] [0m[36m
    1.2 tPenguin(W4)==> ~tFly(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:88] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) [0m[36m
    1.4 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',88) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  identical is assertion_status , 
  post1 = tBird(iChilly) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = tBird(iChilly) , 
  support_fact = mfl4(_81732,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',96) , 
  support_trig=ax , 
  ( simular( instanceOf(iChilly,tBird),'$pt'(baseKB,instanceOf(iChilly,tBird),rhs([tBird(iChilly)]))) is 
    support_status)
:- dynamic tBird/1.
:- multifile tBird/1.
:- public tBird/1.
:- module_transparent tBird/1.

tBird(iChilly).
tBird(iTweety).

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for ~tFly(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 tPenguin(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:54] [0m[36m
    1.2 tPenguin(W4)==> ~tFly(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:88] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) [0m[36m
    1.4 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',88) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 instanceOf(iChilly,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_30338] [0m[36m
    1.2 tBird(W4)<==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_31256] [0m[36m
    1.3 instanceOf(iChilly,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:_32430] [0m[36m
    1.4 instanceOf(W4,tPenguin)==>instanceOf(W4,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_33350] [0m[36m
    1.5 tType(tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:38] [0m[36m
    1.6 tType(W4)==>{kb_local(W4/1)},functorDeclares(W4),(t(W4,X4)<==>instanceOf(X4,W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:30] [0m[36m
    1.7 tPenguin(iChilly) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:54] [0m[36m
    1.8 tPenguin(W4)<==>instanceOf(W4,tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_37158] [0m[36m
    1.9 subClassOf(tPenguin,tBird) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:49] [0m[36m
    1.10 subClassOf(W4,X4)==>(instanceOf(Y4,W4)==>instanceOf(Y4,X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:43] [0m[36m
    1.11 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',38) [0m[36m
    1.12 mfl4([ 'COL'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',30) [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',54) [0m[36m
    1.14 tType(tPenguin) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc:37] [0m[36m
    1.15 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',49) [0m[36m
    1.16 mfl4([ 'C1'=_, 
       'C2'=_, 
       'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',43) [0m[36m
    1.17 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',37) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',96) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  identical is assertion_status , 
  post1 = never_retract_u( tBird(iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = never_retract_u( tBird(iChilly)) , 
  support_fact = mfl4(_51798,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',117) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~( tPenguin(iChilly)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~( tPenguin(iChilly)) , 
  support_fact = mfl4(_69536,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',120) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~( tPenguin(iChilly)))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',96) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for tBird(iChilly):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',96) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(tFly(iChilly)).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(tFly(iChilly))).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:tFly(iChilly)).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:tFly(iChilly)).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(tFly(iChilly)).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(tFly(iChilly))).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:'<garbage_collected>'.   %  must_sanity.pl:59: 
(60)<*>$[baseKB] '<meta-call>'('<garbage_collected>').  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok('<garbage_collected>').   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0('<garbage_collected>').   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure('<garbage_collected>').   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex('<garbage_collected>').   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'('<garbage_collected>').  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break('<garbage_collected>').   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly('<garbage_collected>').   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(tFly(iChilly)).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(tFly(iChilly))).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:'<garbage_collected>'.   %  must_sanity.pl:59: 
(60)$[baseKB] '<meta-call>'('<garbage_collected>').  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(tFly(iChilly))).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(tFly(iChilly)),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:tFly(iChilly)).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:tFly(iChilly)).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
baseKB : mpred_fwc1( tBird(iChilly))
baseKB : mpred_fwc1( instanceOf(iChilly,tBird))
baseKB : mpred_fwc1( mdefault( tFly(iChilly)))
baseKB : mpred_fwc1( \+tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly)),\+ ~tFly(iChilly)==>tFly(iChilly))
baseKB : mpred_fwc1( ( tFly(iChilly)/(ground(tFly(iChilly)),\+tFly(iChilly),\+tFly(iChilly)=tFly(iChilly)) ==> 
                       \+( tFly(iChilly))))
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(tFly(iChilly)).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(tFly(iChilly))).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:tFly(iChilly)).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:tFly(iChilly)).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(tFly(iChilly)).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(tFly(iChilly))).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:59: 
(60)<*>$[baseKB]# '<meta-call>'((mpred_test_fok(tFly(iChilly))*->true;rtrace(mpred_test_fok(tFly(iChilly))),throw(mpred_test_fok(tFly(iChilly))))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(baseKB:tFly(iChilly)).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(baseKB:tFly(iChilly)).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1362),b_setval('$dump_frame',1362),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(tFly(iChilly))),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(tFly(iChilly)),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(tFly(iChilly)).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly)))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(tFly(iChilly))).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(tFly(iChilly)).   %  must_sanity.pl:59: 
(60)$[baseKB]# '<meta-call>'((mpred_test_fok(tFly(iChilly))*->true;rtrace(mpred_test_fok(tFly(iChilly))),throw(mpred_test_fok(tFly(iChilly))))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(tFly(iChilly))).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(tFly(iChilly)),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:tFly(iChilly)).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:tFly(iChilly)).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:tFly(iChilly))).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1840),b_setval('$dump_frame',1840),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(\+ ~tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(\+ ~tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(\+ ~tFly(iChilly)).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(\+ ~tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(\+ ~tFly(iChilly))).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(\+ ~tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:(\+ ~tFly(iChilly))).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:(\+ ~tFly(iChilly))).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1127),b_setval('$dump_frame',1127),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(\+ ~tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(\+ ~tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(\+ ~tFly(iChilly)).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(\+ ~tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(\+ ~tFly(iChilly))).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(\+ ~tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(\+ ~tFly(iChilly)).   %  must_sanity.pl:59: 
(60)<*>$[baseKB]# '<meta-call>'((mpred_test_fok(\+ ~tFly(iChilly))*->true;rtrace(mpred_test_fok(\+ ~tFly(iChilly))),throw(mpred_test_fok(\+ ~tFly(iChilly))))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(baseKB:(\+ ~tFly(iChilly))).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(baseKB:(\+ ~tFly(iChilly))).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1181),b_setval('$dump_frame',1181),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'birds_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['birds_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('birds_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55762b61ee80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',<clause>(0x55762b61ee80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55762b61ee80),'birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55762b61ee80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(\+ ~tFly(iChilly))).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(\+ ~tFly(iChilly)),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(\+ ~tFly(iChilly)).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(\+ ~tFly(iChilly))),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(\+ ~tFly(iChilly))).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(\+ ~tFly(iChilly))).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(\+ ~tFly(iChilly)).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(\+ ~tFly(iChilly)).   %  must_sanity.pl:59: 
(60)$[baseKB]# '<meta-call>'((mpred_test_fok(\+ ~tFly(iChilly))*->true;rtrace(mpred_test_fok(\+ ~tFly(iChilly))),throw(mpred_test_fok(\+ ~tFly(iChilly))))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(\+ ~tFly(iChilly))).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(\+ ~tFly(iChilly)),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(\+ ~tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(\+ ~tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(\+ ~tFly(iChilly)),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:(\+ ~tFly(iChilly))).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:(\+ ~tFly(iChilly))).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:(\+ ~tFly(iChilly)))).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1659),b_setval('$dump_frame',1659),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
:- dynamic test_results/3.

test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc':131/goal_failed(directive, baseKB:mpred_test(tFly(iChilly))), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(tFly(iChilly))]]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc':136/goal_failed(directive, baseKB:mpred_test(tFly(iChilly))), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(tFly(iChilly))]]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/birds_01d.pfc':138/goal_failed(directive, baseKB:mpred_test(\+ ~tFly(iChilly))), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(\+ ~tFly(iChilly))]]).

swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bwd_01a.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_21848,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_76998)<-bc_p(_76998) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_76998)<-bc_p(_76998) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bc_q,1,pfcRHS),rhs([mpred_prop(baseKB,bc_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc', 21) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc', 21) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bc_q,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  support_fact = bc_q(_1504)<-bc_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc', 21) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_q(Q)) , 
  support_fact = '$bt'(bc_q(_1754),'$pt'(baseKB,bc_p(_1754),rhs([bc_q(_1754)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))), 
                   ( ( nonvar( bc_q(Q)) , 
                       must( get_bc_clause(bc_q(Q),(bc_q(Q2):-awc,!,mpred_bc_and_with_pfc(bc_q(Q3)))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_q(Q))) }, 
                            bc_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_q(Q2)))
:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_35504,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',24) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(b))
:- dynamic bc_p/1.

bc_p(a).
bc_p(b).

:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_44360,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  support_fact = mfl4(_27174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(b) , 
  support_fact = bc_p(b) , 
  support_trig = '$pt'(baseKB,bc_p(b),rhs([bc_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(b))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for bc_q(b):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 bc_p(b) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:24] [0m[36m
    1.2 bc_q(W4)<-bc_p(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:21] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',24) [0m[36m
    1.4 mfl4([ 'N'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',21) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).
bc_q(b).

% Fileinfo: unk: -1

baseKB:(bc_q(Q) <- bc_p(P)).
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:44

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(2),
     	      number_of_rules(1),
     	      last_modified_generation(55608),
     	      defined,
     	      size(408)
     	    ]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:44
baseKB:bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1)).
% Fileinfo: unk: -1

baseKB : '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q2)]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:44
baseKB : '$spft'(baseKB,(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',21),ax).
% Fileinfo: unk: -1
baseKB : '$spft'(baseKB,
	'$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q3)]))),
	(bc_q(Q4) <- bc_p(P5)),
	mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',21)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:44
baseKB : '$spft'(baseKB,
	(bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1))),
	'$bt'(bc_q(Q2),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q4)]))),
	'$pt'(baseKB,
	      '$bt'(bc_q(Q5),'$pt'(baseKB,bc_p(P6),rhs([ bc_q(Q7)]))),
	      (nonvar(bc_q(Q8)),must(get_bc_clause(bc_q(Q9),(bc_q(Q10):-awc,!,mpred_bc_and_with_pfc(bc_q(Q11)))))*->rhs([ 
  { ignore( kb_shared( bc_q(Q12))) }, 
  bc_q(Q13) :- 
    awc , 
    ! , 
    mpred_bc_and_with_pfc( bc_q(Q14))])))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:44
baseKB : '$spft'(baseKB,'$pt'(baseKB,bc_p(b),rhs([ bc_q(b)])),(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc',21)).
success(mpred_undo1_pt_unfwc_2,retract_u('$pt'(baseKB,bc_p(b),rhs([bc_q(b)]))))
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01a.pfc:44

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(0),
     	      number_of_rules(0),
     	      last_modified_generation(58057),
     	      defined,
     	      size(112)
     	    ]).
 */
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bwd_01a.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['bwd_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(_21974)<-bc_p(_21974) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(_21974)<-bc_p(_21974) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q)<-bc_p(P))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc', 19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,bc_q,1,pfcRHS),rhs([mpred_prop(baseKB,bc_q,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc', 19) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,bc_q,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_q,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,bc_q,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_q,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,bc_q,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_q,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = '$bt'(bc_q(_1330),'$pt'(baseKB,bc_p(_1330),rhs([bc_q(_1330)]))) , 
  support_fact = bc_q(_1504)<-bc_p(_1504) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc', 19) , 
  none is support_status
baseKB : mpred_fwc1( '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(Q) :- 
            awc , 
            ! , 
            mpred_bc_and_with_pfc( bc_q(Q)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(Q) :- 
         awc , 
         ! , 
         mpred_bc_and_with_pfc( bc_q(Q)) , 
  support_fact = '$bt'(bc_q(_2048),'$pt'(baseKB,bc_p(_2048),rhs([bc_q(_2048)]))) , 
  support_trig = '$pt'( baseKB, 
                   '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q3)]))), 
                   ( ( nonvar( bc_q(Q)) , 
                       must( get_bc_clause(bc_q(Q),(bc_q(Q2):-awc,!,mpred_bc_and_with_pfc(bc_q(Q3)))))) *-> 
                     rhs( [ { ignore( kb_shared( bc_q(Q))) }, 
                            bc_q(Q2) :- 
                              awc , 
                              ! , 
                              mpred_bc_and_with_pfc( bc_q(Q3))]))) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(Q) :- 
                       awc , 
                       ! , 
                       mpred_bc_and_with_pfc( bc_q(Q2)))
:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(a) , 
  support_fact = mfl4(_109092,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_p(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_p(b) , 
  support_fact = mfl4(_35922,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( bc_p(b))
:- dynamic bc_p/1.

bc_p(a).
bc_p(b).

:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).

call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_fact = mfl4(_44242,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,bc_p,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,bc_p,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,bc_p,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,bc_p,1,kb_shared) , 
  support_fact = mfl4(_27174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,bc_p,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = bc_q(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = bc_q(b) , 
  support_fact = bc_p(b) , 
  support_trig = '$pt'(baseKB,bc_p(b),rhs([bc_q(b)])) , 
  none is support_status
baseKB : mpred_fwc1( bc_q(b))
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for bc_q(b):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 bc_p(b) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:23] [0m[36m
    1.2 bc_q(W4)<-bc_p(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:19] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',23) [0m[36m
    1.4 mfl4([ 'N'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',19) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic bc_q/1.
:- multifile bc_q/1.
:- public bc_q/1.
:- module_transparent bc_q/1.

bc_q(A) :-
    awc,
    !,
    mpred_bc_and_with_pfc(bc_q(A)).
bc_q(b).

% Fileinfo: unk: -1

baseKB:(bc_q(Q) <- bc_p(P)).
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:45

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(2),
     	      number_of_rules(1),
     	      last_modified_generation(55632),
     	      defined,
     	      size(408)
     	    ]).
 */
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:45
baseKB:bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1)).
% Fileinfo: unk: -1

baseKB : '$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([bc_q(Q2)]))).
% Fileinfo: unk: -1

% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:45
baseKB : '$spft'(baseKB,(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',19),ax).
% Fileinfo: unk: -1
baseKB : '$spft'(baseKB,
	'$bt'(bc_q(Q),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q3)]))),
	(bc_q(Q4) <- bc_p(P5)),
	mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',19)).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:45
baseKB : '$spft'(baseKB,
	(bc_q(Q) :- awc,!,mpred_bc_and_with_pfc(bc_q(Q1))),
	'$bt'(bc_q(Q2),'$pt'(baseKB,bc_p(P),rhs([ bc_q(Q4)]))),
	'$pt'(baseKB,
	      '$bt'(bc_q(Q5),'$pt'(baseKB,bc_p(P6),rhs([ bc_q(Q7)]))),
	      (nonvar(bc_q(Q8)),must(get_bc_clause(bc_q(Q9),(bc_q(Q10):-awc,!,mpred_bc_and_with_pfc(bc_q(Q11)))))*->rhs([ 
  { ignore( kb_shared( bc_q(Q12))) }, 
  bc_q(Q13) :- 
    awc , 
    ! , 
    mpred_bc_and_with_pfc( bc_q(Q14))])))).
% Fileinfo: unk: -1
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:45
baseKB : '$spft'(baseKB,'$pt'(baseKB,bc_p(b),rhs([ bc_q(b)])),(bc_q(Q)<-bc_p(P)),mfl4([ 'N'=N],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc',19)).
success(mpred_undo1_pt_unfwc_2,retract_u('$pt'(baseKB,bc_p(b),rhs([bc_q(b)]))))
% From /opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/bwd_01.pfc:45

 /*  portray_hb1(print_tree_stop,
     	    '$predicate_property'(bc_q(Q)),
     	    [ interpreted,
     	      visible,
     	      public,
     	      dynamic,
     	      multifile,
     	      discontiguous,
     	      transparent,
     	      number_of_clauses(0),
     	      number_of_rules(0),
     	      last_modified_generation(58067),
     	      defined,
     	      size(112)
     	    ]).
 */
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k bwd_01.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['circle_01a.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b11 , 
  support_fact = mfl4(_20398,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_fact = mfl4(_40348,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b11,0,pfcRHS),rhs([mpred_prop(baseKB,b11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,kb_shared) , 
  support_fact = ( mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_fact = mfl4(_23460,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a11,0) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a11) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,kb_shared) , 
  support_fact = ( mfl4(_406,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_908,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_fact = mfl4(_50042,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a11,0,pfcLHS), 
                 rhs( [ arity(a11,0), 
                        functorIsMacro(a11), 
                        mpred_prop(baseKB,a11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b11==>c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b11==>c11 , 
  support_fact = mfl4(_85786,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b11==>c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_fact = mfl4(_105736,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c11,0,pfcRHS),rhs([mpred_prop(baseKB,c11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,kb_shared) , 
  support_fact = ( mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) , 
                   ax) , 
  support_trig = mfl4(_924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,c11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,c11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_fact = mfl4(_94362,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b11,0) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b11,0) , 
  support_fact = arity(b11,0) , 
  support_trig = '$pt'(baseKB,arity(b11,0),(pfcControlled(b11)*->rhs([hybrid_support(b11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b11) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_fact = mfl4(_35586,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b11,0,pfcLHS), 
                 rhs( [ arity(b11,0), 
                        functorIsMacro(b11), 
                        mpred_prop(baseKB,b11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c11==>a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c11==>a11 , 
  support_fact = mfl4(_74606,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( c11==>a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_fact = mfl4(_94556,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,a11,0,pfcRHS),rhs([mpred_prop(baseKB,a11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,a11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,a11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_fact = mfl4(_57272,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(c11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(c11,0) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(c11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(c11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(c11,0) , 
  support_fact = arity(c11,0) , 
  support_trig = '$pt'(baseKB,arity(c11,0),(pfcControlled(c11)*->rhs([hybrid_support(c11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(c11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(c11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(c11) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(c11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  support_fact = mfl4(_1424,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,c11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,c11,0,pfcLHS), 
                 rhs( [ arity(c11,0), 
                        functorIsMacro(c11), 
                        mpred_prop(baseKB,c11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact = mfl4(_35596,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b11])) , 
  none is support_status
baseKB : mpred_fwc1(b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b11 , 
  support_trig = '$pt'(baseKB,b11,rhs([c11])) , 
  none is support_status
baseKB : mpred_fwc1(c11)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact=c11 , 
  support_trig = '$pt'(baseKB,c11,rhs([a11])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',20),ax) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for a11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',20) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:_14352] [0m[36m
    2.2 c11==>a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:18] [0m[36m
    2.3 b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:_15990] [0m[36m
    2.4 b11==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:17] [0m[36m
    2.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',18) [0m[36m
    2.6 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:20] [0m[36m
    2.7 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:16] [0m[36m
    2.8 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) [0m[36m
    2.9 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',20) [0m[36m
    2.10 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:20] [0m[36m
    1.2 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:16] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',20) [0m[36m
    1.4 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for c11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:_31950] [0m[36m
    1.2 b11==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:17] [0m[36m
    1.3 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:20] [0m[36m
    1.4 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:16] [0m[36m
    1.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',20) [0m[36m
    1.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',16) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~a11 , 
  support_fact = mfl4(_90932,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',28) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact = mfl4(_23446,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b11 , 
  support_trig = '$pt'(baseKB,b11,rhs([c11])) , 
  none is support_status
baseKB : mpred_fwc1(c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact=c11 , 
  support_trig = '$pt'(baseKB,c11,rhs([a11])) , 
  none is support_status
baseKB : mpred_fwc1(a11)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b11])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',35),ax) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for a11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:_8546] [0m[36m
    1.2 c11==>a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:18] [0m[36m
    1.3 b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:35] [0m[36m
    1.4 b11==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc:17] [0m[36m
    1.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',18) [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',35) [0m[36m
    1.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01a.pfc',17) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k circle_01a.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['circle_01b.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b11 , 
  support_fact = mfl4(_20398,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_fact = mfl4(_40348,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b11,0,pfcRHS),rhs([mpred_prop(baseKB,b11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,kb_shared) , 
  support_fact = ( mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_fact = mfl4(_22998,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a11,0) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a11) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,kb_shared) , 
  support_fact = ( mfl4(_406,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_908,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_fact = mfl4(_44954,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a11,0,pfcLHS), 
                 rhs( [ arity(a11,0), 
                        functorIsMacro(a11), 
                        mpred_prop(baseKB,a11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b11==>c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b11==>c11 , 
  support_fact = mfl4(_81130,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b11==>c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_fact = mfl4(_101080,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c11,0,pfcRHS),rhs([mpred_prop(baseKB,c11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,kb_shared) , 
  support_fact = ( mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) , 
                   ax) , 
  support_trig = mfl4(_924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,c11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,c11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_fact = mfl4(_88504,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b11,0) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b11,0) , 
  support_fact = arity(b11,0) , 
  support_trig = '$pt'(baseKB,arity(b11,0),(pfcControlled(b11)*->rhs([hybrid_support(b11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b11) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_fact = mfl4(_29506,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b11,0,pfcLHS), 
                 rhs( [ arity(b11,0), 
                        functorIsMacro(b11), 
                        mpred_prop(baseKB,b11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c11==>a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c11==>a11 , 
  support_fact = mfl4(_72588,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( c11==>a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_fact = mfl4(_92538,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,a11,0,pfcRHS),rhs([mpred_prop(baseKB,a11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,a11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,a11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_fact = mfl4(_54756,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(c11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(c11,0) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(c11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(c11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(c11,0) , 
  support_fact = arity(c11,0) , 
  support_trig = '$pt'(baseKB,arity(c11,0),(pfcControlled(c11)*->rhs([hybrid_support(c11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(c11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(c11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(c11) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(c11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  support_fact = mfl4(_1424,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,c11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,c11,0,pfcLHS), 
                 rhs( [ arity(c11,0), 
                        functorIsMacro(c11), 
                        mpred_prop(baseKB,c11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact = mfl4(_27942,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b11])) , 
  none is support_status
baseKB : mpred_fwc1(b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b11 , 
  support_trig = '$pt'(baseKB,b11,rhs([c11])) , 
  none is support_status
baseKB : mpred_fwc1(c11)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact=c11 , 
  support_trig = '$pt'(baseKB,c11,rhs([a11])) , 
  ( simular( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',20),ax) is 
    support_status)
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for c11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc:_129758] [0m[36m
    1.2 b11==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc:17] [0m[36m
    1.3 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc:20] [0m[36m
    1.4 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc:16] [0m[36m
    1.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',17) [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',20) [0m[36m
    1.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',16) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~b11 , 
  support_fact = mfl4(_2626,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01b.pfc',25) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~b11)
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k circle_01b.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['circle_01c.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b11 , 
  support_fact = mfl4(_20398,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_fact = mfl4(_40348,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b11,0,pfcRHS),rhs([mpred_prop(baseKB,b11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,kb_shared) , 
  support_fact = ( mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_fact = mfl4(_24372,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a11,0) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a11) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,kb_shared) , 
  support_fact = ( mfl4(_406,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_908,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_fact = mfl4(_44878,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a11,0,pfcLHS), 
                 rhs( [ arity(a11,0), 
                        functorIsMacro(a11), 
                        mpred_prop(baseKB,a11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b11==>c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b11==>c11 , 
  support_fact = mfl4(_80872,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b11==>c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_fact = mfl4(_100822,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c11,0,pfcRHS),rhs([mpred_prop(baseKB,c11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,kb_shared) , 
  support_fact = ( mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) , 
                   ax) , 
  support_trig = mfl4(_924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,c11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,c11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_fact = mfl4(_88990,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b11,0) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b11,0) , 
  support_fact = arity(b11,0) , 
  support_trig = '$pt'(baseKB,arity(b11,0),(pfcControlled(b11)*->rhs([hybrid_support(b11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b11) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_fact = mfl4(_29506,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b11,0,pfcLHS), 
                 rhs( [ arity(b11,0), 
                        functorIsMacro(b11), 
                        mpred_prop(baseKB,b11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b22 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b22 , 
  support_fact = mfl4(_72846,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b22)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcRHS) , 
  support_fact = mfl4(_92796,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b22,0,pfcRHS),rhs([mpred_prop(baseKB,b22,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,kb_shared) , 
  support_fact = ( mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',19) , 
                   ax) , 
  support_trig = mfl4(_924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',19) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b22,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b22,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b22==>c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b22==>c11 , 
  support_fact = mfl4(_87306,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b22==>c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_fact = mfl4(_107650,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b22,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b22,0) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcLHS), 
                   rhs( [ arity(b22,0), 
                          functorIsMacro(b22), 
                          mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b22,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b22,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b22,0) , 
  support_fact = arity(b22,0) , 
  support_trig = '$pt'(baseKB,arity(b22,0),(pfcControlled(b22)*->rhs([hybrid_support(b22,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b22,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b22) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b22) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcLHS), 
                   rhs( [ arity(b22,0), 
                          functorIsMacro(b22), 
                          mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b22))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcLHS), 
                   rhs( [ arity(b22,0), 
                          functorIsMacro(b22), 
                          mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcPosTrigger) , 
  support_fact = mfl4(_46418,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b22,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b22,0,pfcLHS), 
                 rhs( [ arity(b22,0), 
                        functorIsMacro(b22), 
                        mpred_prop(baseKB,b22,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact = mfl4(_82156,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b11])) , 
  none is support_status
baseKB : mpred_fwc1(b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b11 , 
  support_trig = '$pt'(baseKB,b11,rhs([c11])) , 
  none is support_status
baseKB : mpred_fwc1(c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b22 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b22 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b22])) , 
  none is support_status
baseKB : mpred_fwc1(b22)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b22 , 
  support_trig = '$pt'(baseKB,b22,rhs([c11])) , 
  simular((b11,'$pt'(baseKB,b11,rhs([c11]))))is support_status
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for c11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:_104810] [0m[36m
    1.2 b11==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:17] [0m[36m
    1.3 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:22] [0m[36m
    1.4 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:16] [0m[36m
    1.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',17) [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',22) [0m[36m
    1.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',16) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 b22 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:_109386] [0m[36m
    2.2 b22==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:20] [0m[36m
    2.3 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:22] [0m[36m
    2.4 a11==>b22 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc:19] [0m[36m
    2.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',20) [0m[36m
    2.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',22) [0m[36m
    2.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',19) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01c.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01c.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01c.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x557484030e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x557484030e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01c.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01c.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01c.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x557484030e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x557484030e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:'<garbage_collected>'.   %  must_sanity.pl:59: 
(60)<*>$[baseKB] '<meta-call>'('<garbage_collected>').  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok('<garbage_collected>').   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0('<garbage_collected>').   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure('<garbage_collected>').   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex('<garbage_collected>').   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'('<garbage_collected>').  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break('<garbage_collected>').   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly('<garbage_collected>').   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'('<garbage_collected>').  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly('<garbage_collected>').   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,'<garbage_collected>').   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace('<garbage_collected>').   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg('<garbage_collected>').   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally('<garbage_collected>','<garbage_collected>').   %  redo_locally.pl:131: 
(78)[locally_each] locally_each:wtl(dmsg,'<garbage_collected>',dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),'<garbage_collected>').   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01c.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01c.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01c.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x557484030e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x557484030e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:'<garbage_collected>'.   %  must_sanity.pl:59: 
(60)$[baseKB] '<meta-call>'('<garbage_collected>').  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(c11)).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(c11),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c11==>a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c11==>a11 , 
  support_fact = mfl4(_1334318,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( c11==>a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_fact = mfl4(_1354268,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,a11,0,pfcRHS),rhs([mpred_prop(baseKB,a11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,a11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,a11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_fact = mfl4(_1824542,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(c11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(c11,0) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(c11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(c11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(c11,0) , 
  support_fact = arity(c11,0) , 
  support_trig = '$pt'(baseKB,arity(c11,0),(pfcControlled(c11)*->rhs([hybrid_support(c11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(c11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(c11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(c11) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(c11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcLHS), 
                   rhs( [ arity(c11,0), 
                          functorIsMacro(c11), 
                          mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  support_fact = mfl4(_309126,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,c11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,c11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,c11,0,pfcLHS), 
                 rhs( [ arity(c11,0), 
                        functorIsMacro(c11), 
                        mpred_prop(baseKB,c11,0,pfcWatches)])))) is 
    support_status)
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01c.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01c.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01c.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x557484030e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x557484030e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01c.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01c.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01c.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x557484030e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x557484030e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:59: 
(60)<*>$[baseKB]# '<meta-call>'((mpred_test_fok(c11)*->true;rtrace(mpred_test_fok(c11)),throw(mpred_test_fok(c11)))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01c.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01c.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01c.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x557484030e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',<clause>(0x557484030e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x557484030e80),'circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x557484030e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:59: 
(60)$[baseKB]# '<meta-call>'((mpred_test_fok(c11)*->true;rtrace(mpred_test_fok(c11)),throw(mpred_test_fok(c11)))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(c11)).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(c11),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
:- dynamic test_results/3.

test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc':29/goal_failed(directive, baseKB:mpred_test(c11)), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(c11)]]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01c.pfc':32/goal_failed(directive, baseKB:mpred_test(c11)), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(c11)]]).

swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['circle_01d.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b11 , 
  support_fact = mfl4(_20398,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_fact = mfl4(_40348,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b11,0,pfcRHS),rhs([mpred_prop(baseKB,b11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,kb_shared) , 
  support_fact = ( mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_fact = mfl4(_36312,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a11,0) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a11) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,kb_shared) , 
  support_fact = ( mfl4(_406,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
                   ax) , 
  support_trig = mfl4(_908,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_fact = mfl4(_49698,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a11,0,pfcLHS), 
                 rhs( [ arity(a11,0), 
                        functorIsMacro(a11), 
                        mpred_prop(baseKB,a11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b11==>c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b11==>c11 , 
  support_fact = mfl4(_85966,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b11==>c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_fact = mfl4(_105916,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c11,0,pfcRHS),rhs([mpred_prop(baseKB,c11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,kb_shared) , 
  support_fact = ( mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) , 
                   ax) , 
  support_trig = mfl4(_924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,c11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,c11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,c11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_fact = mfl4(_94358,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b11,0) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b11,0) , 
  support_fact = arity(b11,0) , 
  support_trig = '$pt'(baseKB,arity(b11,0),(pfcControlled(b11)*->rhs([hybrid_support(b11,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b11) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcLHS), 
                   rhs( [ arity(b11,0), 
                          functorIsMacro(b11), 
                          mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_fact = mfl4(_35328,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,b11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b11,0,pfcLHS), 
                 rhs( [ arity(b11,0), 
                        functorIsMacro(b11), 
                        mpred_prop(baseKB,b11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b22 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b22 , 
  support_fact = mfl4(_74606,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b22)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcRHS) , 
  support_fact = mfl4(_94556,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b22,0,pfcRHS),rhs([mpred_prop(baseKB,b22,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,kb_shared) , 
  support_fact = ( mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',19) , 
                   ax) , 
  support_trig = mfl4(_924,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',19) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b22,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b22,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b22==>c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b22==>c11 , 
  support_fact = mfl4(_103798,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b22==>c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_fact = mfl4(_1348,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b22,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b22,0) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcLHS), 
                   rhs( [ arity(b22,0), 
                          functorIsMacro(b22), 
                          mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b22,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b22,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b22,0) , 
  support_fact = arity(b22,0) , 
  support_trig = '$pt'(baseKB,arity(b22,0),(pfcControlled(b22)*->rhs([hybrid_support(b22,0)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b22,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b22) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b22) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcLHS), 
                   rhs( [ arity(b22,0), 
                          functorIsMacro(b22), 
                          mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b22))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcLHS), 
                   rhs( [ arity(b22,0), 
                          functorIsMacro(b22), 
                          mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcPosTrigger) , 
  support_fact = mfl4(_86672,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b22,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b22,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b22,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b22,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,b22,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b22,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b22,0,pfcLHS), 
                 rhs( [ arity(b22,0), 
                        functorIsMacro(b22), 
                        mpred_prop(baseKB,b22,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact = mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b11])) , 
  none is support_status
baseKB : mpred_fwc1(b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b11 , 
  support_trig = '$pt'(baseKB,b11,rhs([c11])) , 
  none is support_status
baseKB : mpred_fwc1(c11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b22 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b22 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b22])) , 
  none is support_status
baseKB : mpred_fwc1(b22)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1=c11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=c11 , 
  support_fact=b22 , 
  support_trig = '$pt'(baseKB,b22,rhs([c11])) , 
  simular((b11,'$pt'(baseKB,b11,rhs([c11]))))is support_status
[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for c11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:_14882] [0m[36m
    1.2 b11==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:17] [0m[36m
    1.3 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:22] [0m[36m
    1.4 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:16] [0m[36m
    1.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',17) [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',22) [0m[36m
    1.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',16) [0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    2.1 b22 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:_19458] [0m[36m
    2.2 b22==>c11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:20] [0m[36m
    2.3 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:22] [0m[36m
    2.4 a11==>b22 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc:19] [0m[36m
    2.5 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',20) [0m[36m
    2.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',22) [0m[36m
    2.7 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',19) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~b11 , 
  support_fact = mfl4(_15010,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~b11)
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55c1d9cbce80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55c1d9cbce80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(61)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(62)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(64)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(65)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(68)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(69)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  dmsg.pl:1649: 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)))).   %  butterfly_console.pl:212: 
(71)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(72)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  first.pl:498: 
(74)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  dmsg.pl:450: 
(75)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1))).   %  redo_locally.pl:131: 
(76)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(78)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(79)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(80)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(82)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1)).   %  redo_locally.pl:131: 
(83)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(84)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(86)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(87)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(88)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(89)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1308),b_setval('$dump_frame',1308),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55c1d9cbce80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55c1d9cbce80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:59: 
(60)<*>$[baseKB]# '<meta-call>'((mpred_test_fok(c11)*->true;rtrace(mpred_test_fok(c11)),throw(mpred_test_fok(c11)))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1361),b_setval('$dump_frame',1361),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55c1d9cbce80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55c1d9cbce80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-mpred_test(c11)),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(mpred_test(c11),'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(41)[baseKB]# pfc_lib:with_no_breaks(with_mpred_trace_exec(mpred_test_fok(c11))).   %  mpred_core.pl:4215: 
(42)[baseKB]# locally_each:locally_tl(no_breaks,with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:133: 
(43)[locally_each]# locally_each:locally(t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11))).   %  redo_locally.pl:131: 
(44)[locally_each]# locally_each:wtl(t_l,no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:181: 
(45)[locally_each]# locally_each:wtl(t_l,t_l:no_breaks,baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),baseKB:ecc).   %  redo_locally.pl:186: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(47)[each_call_cleanup]# each_call_cleanup:each_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:142: 
(48)$[each_call_cleanup]# each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  each_call.pl:111: 
(49)[system]# setup_call_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:650: 
(50)$[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(52)[baseKB]# pfc_lib:with_mpred_trace_exec(mpred_test_fok(c11)).   %  mpred_core.pl:4263: 
(53)$[pfc_lib]# pfc_lib:show_if_debug(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:4284: 
(54)$[pfc_lib]# pfc_lib:call_u(baseKB:mpred_test_fok(c11)).   %  mpred_core.pl:2934: 
(55)$[pfc_lib]# pfc_lib:call_u_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:2943: 
(56)$[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:59: 
(60)$[baseKB]# '<meta-call>'((mpred_test_fok(c11)*->true;rtrace(mpred_test_fok(c11)),throw(mpred_test_fok(c11)))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(c11)).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(c11),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1838),b_setval('$dump_frame',1838),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55c1d9cbce80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55c1d9cbce80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)<*>[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(60)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(62)[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(63)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(65)[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(66)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(67)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)))).   %  butterfly_console.pl:212: 
(72)[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(73)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1))).   %  first.pl:498: 
(77)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(81)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(85)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(89)[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(90)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(937),b_setval('$dump_frame',937),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55c1d9cbce80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55c1d9cbce80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:59: 
(60)<*>$[baseKB]# '<meta-call>'((mpred_test_fok(c11)*->true;rtrace(mpred_test_fok(c11)),throw(mpred_test_fok(c11)))).  no(clause) 
(61)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(62)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(63)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(64)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(65)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(66)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(67)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(68)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(69)$[pfc_test] '<meta-call>'((log_failure_red,dumpST,log_failure_red)).  no(clause) 
(70)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(71)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)))).   %  dmsg.pl:1649: 
(72)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)))).   %  butterfly_console.pl:212: 
(73)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(74)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(75)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1))).   %  first.pl:498: 
(76)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)).   %  dmsg.pl:450: 
(77)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1))).   %  redo_locally.pl:131: 
(78)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(79)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(80)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(81)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(83)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(84)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1)).   %  redo_locally.pl:131: 
(85)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(86)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(87)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(88)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(89)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(90)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(91)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(92)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1180),b_setval('$dump_frame',1180),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'circle_01d.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['circle_01d.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('circle_01d.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x55c1d9cbce80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',<clause>(0x55c1d9cbce80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x55c1d9cbce80),'circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x55c1d9cbce80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(38)<*>$[system] '$execute_directive_3'(mpred_test(c11)).   %  init.pl:3573: 
(39)$[system] catch(baseKB:mpred_test(c11),error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[baseKB] pfc_test:mpred_test(c11).   %  pfc_test.pl:47: 
(46)[locally_each]# locally_each:wtl_how(baseKB:ecc,locally_each:clause_true(t_l,t_l:no_breaks),locally_each:key_asserta(t_l,t_l:no_breaks),baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),locally_each:key_erase(t_l)).   %  redo_locally.pl:199: 
(50)[system]# setup_call_catcher_cleanup(locally_each:key_asserta(t_l,t_l:no_breaks),each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail))),B,each_call_cleanup:mquietly(locally_each:key_erase(t_l))).   %  init.pl:646: 
(51)$[each_call_cleanup]# '<meta-call>'(each_call_cleanup:((baseKB:with_mpred_trace_exec(mpred_test_fok(c11)),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(t_l)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),true));locally_each:key_asserta(t_l,t_l:no_breaks),notrace(nb_setarg(1,mquietly(locally_each:key_erase(t_l)),locally_each:key_erase(t_l))),notrace(fail)))).  no(clause) 
(56)[pfc_lib]# pfc_lib:call_mp(baseKB,mpred_test_fok(c11)).   %  mpred_core.pl:3009: 
(57)$[system]# call(baseKB:mpred_test_fok(c11)).   %  init.pl:483: 
(58)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:58: 
(59)[baseKB]# must_sanity:mpred_test_fok(c11).   %  must_sanity.pl:59: 
(60)$[baseKB]# '<meta-call>'((mpred_test_fok(c11)*->true;rtrace(mpred_test_fok(c11)),throw(mpred_test_fok(c11)))).  no(clause) 
(61)$[rtrace] rtrace:rtrace(baseKB:mpred_test_fok(c11)).   %  rtrace.pl:406: 
(62)$[rtrace] must_sanity:scce_orig(restart_rtrace,baseKB:mpred_test_fok(c11),tAt_normal).   %  must_sanity.pl:262: 
(63)$[system] setup_call_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:650: 
(64)$[system] setup_call_catcher_cleanup(rtrace:restart_rtrace,rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail))),B,rtrace:mquietly_if(true,tAt_normal)).   %  init.pl:646: 
(65)$[rtrace] '<meta-call>'(rtrace:((baseKB:mpred_test_fok(c11),deterministic(A)),(notrace(A==true)->!;tAt_normal,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),false));restart_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_normal),true)),notrace(fail)))).  no(clause) 
(66)[pfc_test] pfc_test:mpred_test_fok(baseKB:c11).   %  pfc_test.pl:57: 
(67)[pfc_test] pfc_test:mpred_test_fok0(baseKB:c11).   %  pfc_test.pl:62: 
(68)[pfc_test] pfc_lib:log_failure(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4202: 
(69)$[pfc_test] pfc_lib:quietly_ex((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).   %  mpred_core.pl:480: 
(70)$[pfc_test] '<meta-call>'((log_failure_red,maybe_mpred_break(failed_mpred_test(baseKB:c11)),log_failure_red)).  no(clause) 
(71)[pfc_test] pfc_lib:maybe_mpred_break(failed_mpred_test(baseKB:c11)).   %  mpred_core.pl:4220: 
(72)$[pfc_test] pfc_lib:break_ex.   %  mpred_core.pl:4217: 
(73)$[pfc_test] rtrace:quietly((log_failure_red,dumpST,log_failure_red)).   %  rtrace.pl:217: 
(74)$[pfc_test] must_sanity:scce_orig(notrace(visible(-all)),(log_failure_red,dumpST,log_failure_red),tAt_rtrace).   %  must_sanity.pl:262: 
(75)$[system] setup_call_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:650: 
(76)$[system] setup_call_catcher_cleanup(pfc_test:notrace(visible(-all)),pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail))),B,pfc_test:mquietly_if(true,tAt_rtrace)).   %  init.pl:646: 
(77)$[pfc_test] '<meta-call>'(pfc_test:(((log_failure_red,dumpST,log_failure_red),deterministic(A)),(notrace(A==true)->!;tAt_rtrace,notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),false));notrace(visible(-all)),notrace(nb_setarg(1,mquietly_if(true,tAt_rtrace),true)),notrace(fail)))).  no(clause) 
(78)[pfc_test] dumpst:dumpST.   %  dumpst.pl:150: 
(79)[dmsg] dmsg:no_bfly(pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)))).   %  dmsg.pl:1649: 
(80)[butterfly] butterfly:in_bfly(f,pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)))).   %  butterfly_console.pl:212: 
(81)[system] setup_call_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1))),butterfly:bfly_set(butterfly,f)).   %  init.pl:650: 
(82)$[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),pfc_test:zotrace(with_all_dmsg((prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(83)$[pfc_test] first:zotrace(with_all_dmsg((prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1))).   %  first.pl:498: 
(84)[dmsg] dmsg:with_all_dmsg(pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)).   %  dmsg.pl:450: 
(85)[locally_each] locally_each:locally(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1))).   %  redo_locally.pl:131: 
(86)[locally_each]# locally_each:wtl(dmsg,set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)),dmsg:ecc).   %  redo_locally.pl:152: 
(87)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(88)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  each_call.pl:111: 
(89)[system] setup_call_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:650: 
(90)$[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(91)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(92)[locally_each] locally_each:locally(tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1)).   %  redo_locally.pl:131: 
(93)[locally_each]# locally_each:wtl(tlbugger,dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),pfc_test:ecc).   %  redo_locally.pl:181: 
(94)[locally_each]# locally_each:wtl(tlbugger,tlbugger:dmsg_match(show,A),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),pfc_test:ecc).   %  redo_locally.pl:186: 
(95)[locally_each]# locally_each:wtl_how(pfc_test:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(96)[each_call_cleanup] each_call_cleanup:each_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:142: 
(97)$[each_call_cleanup] each_call_cleanup:trusted_redo_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),locally_each:key_erase(tlbugger)).   %  each_call.pl:111: 
(98)[system] setup_call_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:650: 
(99)$[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(100)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((pfc_test:(prolog_current_frame(1657),b_setval('$dump_frame',1657),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO__________________DUMP_BREAK/0%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%% find log_failure_red in srcs %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~_3027394,_3027394==>{wdmsg(conflict((~_3027394,_3027394))),break} , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~_3027394,_3027394==>{wdmsg(conflict((~_3027394,_3027394))),break} , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc', 39) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~_3058100,_3058096==>{wdmsg(conflict((~_3058128,_3058124))),break})
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,wdmsg,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,wdmsg,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc', 39) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,wdmsg,1,pfcCallCode))
:- dynamic test_results/3.

test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc':33/goal_failed(directive, baseKB:mpred_test(c11)), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(c11)]]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/circle_01d.pfc':37/goal_failed(directive, baseKB:mpred_test(c11)), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:mpred_test(c11)]]).

swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['clause_fwd_01a.pfc.pl'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_test_cf(P) :- 
            dmsg_pretty( :-( mpred_test(P))) , 
            mpred_test_fok(_19608) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_test_cf(P) :- 
         dmsg_pretty( :-( mpred_test(P))) , 
         mpred_test_fok(_19608) , 
  support_fact = mfl4( 
                    [ 'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 11) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_test_cf(Cf) :- 
                       dmsg_pretty( :-( mpred_test(Test))) , 
                       mpred_test_fok(Fok))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=foo , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=foo , 
  support_fact = mfl4(_116930,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(foo)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,kb_local) , 
  support_fact = mfl4(_36784,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,zz,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,zz,1,kb_local) , 
  support_fact = mfl4(_30452,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,zz,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,kb_local) , 
  support_fact = mfl4(_17560,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,kb_local) , 
  support_fact = mfl4(_512,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,kb_local) , 
  support_fact = mfl4(_111438,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',20) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,late_aa_HB,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,late_aa_HB,2,kb_local) , 
  support_fact = mfl4(_88880,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,late_aa_HB,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,late_aa,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,late_aa,1,kb_local) , 
  support_fact = mfl4(_61878,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',22) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,late_aa,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,late_zz_H,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,late_zz_H,1,kb_local) , 
  support_fact = mfl4(_56512,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',24) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,late_zz_H,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_yy_H,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_yy_H,1,kb_local) , 
  support_fact = mfl4(_46066,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_yy_H,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,yy,1,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,yy,1,kb_local) , 
  support_fact = mfl4(_36876,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',28) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,yy,1,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (aa(_29530):-_29552)==>early_aa_H(_29530) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (aa(_29530):-_29552)==>early_aa_H(_29530) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (aa(Aa3):-Aa)==>early_aa_H(H))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa_H,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa_H,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_aa_H,1,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(aa,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(aa,1) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(aa,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(aa) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(aa) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(aa))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,aa,1,pfcPosTrigger),rhs([mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,aa,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,aa,1,pfcLHS), 
                 rhs( [ arity(aa,1), 
                        functorIsMacro(aa), 
                        mpred_prop(baseKB,aa,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (aa(_105414):-_105436)==>early_aa_HB(_105414,_105436) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (aa(_105414):-_105436)==>early_aa_HB(_105414,_105436) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 32) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (aa(Aa4):-Aa)==>early_aa_HB(Early_aa_HB,HB))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 32) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa_HB,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa_HB,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_aa_HB,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = aa(_78468)==>early_aa(_78468) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = aa(_78468)==>early_aa(_78468) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( aa(Aa)==>early_aa(Aa2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl', 33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,early_aa,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = aa(1) :-  
               
            writeln( 1+1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = aa(1) :-  
            
         writeln( 1+1) , 
  support_fact = mfl4(_21356,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',35) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( aa(1) :-  
                          
                       writeln( 1+1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = early_aa_H(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = early_aa_H(1) , 
  support_fact = aa(1) :-  
                      
                   writeln( 1+1) , 
  support_trig = '$pt'(baseKB,(aa(1):-writeln(1+1)),rhs([early_aa_H(1)])) , 
  none is support_status
baseKB : mpred_fwc1( early_aa_H(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = early_aa_HB(1,writeln(1+1)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = early_aa_HB(1,writeln(1+1)) , 
  support_fact = aa(1) :-  
                      
                   writeln( 1+1) , 
  support_trig = '$pt'(baseKB,(aa(1):-writeln(1+1)),rhs([early_aa_HB(1,writeln(1+1))])) , 
  none is support_status
baseKB : mpred_fwc1( early_aa_HB(1,writeln(1+1)))
1+1
baseKB : mpred_fwc1( aa(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = early_aa(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = early_aa(1) , 
  support_fact = aa(1) , 
  support_trig = '$pt'(baseKB,aa(1),rhs([early_aa(1)])) , 
  none is support_status
baseKB : mpred_fwc1( early_aa(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = aa(2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = aa(2) , 
  support_fact = mfl4(_94212,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01a.pfc.pl',36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( aa(2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = early_aa(2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = early_aa(2) , 
  support_fact = aa(2) , 
  support_trig = '$pt'(baseKB,aa(2),rhs([early_aa(2)])) , 
  none is support_status
baseKB : mpred_fwc1( early_aa(2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['clause_fwd_01b.pfc.pl'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,2,kb_local) , 
  support_fact = mfl4(_17846,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl',11) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (aa(_458):-_462)==>early_aa_H(_458) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (aa(_458):-_462)==>early_aa_H(_458) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (aa(Aa3):-Aa)==>early_aa_H(H))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa_H,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N, 
                        '_B'=_B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa_H,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_aa_H,1,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(aa,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(aa,1) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(aa,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(aa) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(aa) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(aa))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N, 
                        '_B'=_B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,aa,1,pfcPosTrigger),rhs([mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,aa,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,aa,1,pfcLHS), 
                 rhs( [ arity(aa,1), 
                        functorIsMacro(aa), 
                        mpred_prop(baseKB,aa,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (aa(_20818):-_20840)==>early_aa_HB(_20818,_20840) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (aa(_20818):-_20840)==>early_aa_HB(_20818,_20840) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (aa(Aa4):-Aa)==>early_aa_HB(Early_aa_HB,HB))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa_HB,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N, 
                        'B'=B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 14) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 14) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa_HB,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_aa_HB,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = aa(_968)==>early_aa(_968) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = aa(_968)==>early_aa(_968) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( aa(Aa)==>early_aa(Aa2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 16) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,early_aa,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (~_108322:-_108344)==>early_not_HB(_108322,_108344) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (~_108322:-_108344)==>early_not_HB(_108322,_108344) , 
  support_fact = mfl4( 
                    [ 'H'=H, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (~_8380:-_8376)==>early_not_HB(Early_not_HB,HB))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'H'=H, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_not_HB,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_not_HB,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'H'=H, 
                        'B'=B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 17) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'H'=H, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01b.pfc.pl', 17) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_not_HB,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_not_HB,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_not_HB,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_not_HB,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_not_HB,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,prologHybrid))
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['clause_fwd_01c.pfc.pl'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,2,kb_local) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,2,kb_local) , 
  support_fact = mfl4(_17846,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl',11) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,2,kb_local))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (aa(_458):-_462)==>early_aa_H(_458) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (aa(_458):-_462)==>early_aa_H(_458) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (aa(Aa3):-Aa)==>early_aa_H(H))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa_H,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N, 
                        '_B'=_B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa_H,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_H,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_H,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa_H,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_H,1,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_aa_H,1,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_H,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(aa,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(aa,1) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(aa,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(aa) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(aa) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(aa))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,aa,1,pfcLHS), 
                   rhs( [ arity(aa,1), 
                          functorIsMacro(aa), 
                          mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N, 
                        '_B'=_B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      '_B'=_B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 13) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,aa,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,aa,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,aa,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,aa,1,pfcPosTrigger),rhs([mpred_prop(baseKB,aa,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,aa,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,aa,1,pfcLHS), 
                 rhs( [ arity(aa,1), 
                        functorIsMacro(aa), 
                        mpred_prop(baseKB,aa,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (aa(_22348):-_22370)==>early_aa_HB(_22348,_22370) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (aa(_22348):-_22370)==>early_aa_HB(_22348,_22370) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (aa(Aa4):-Aa)==>early_aa_HB(Early_aa_HB,HB))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 14) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa_HB,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N, 
                        'B'=B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 14) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 14) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa_HB,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa_HB,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa_HB,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa_HB,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa_HB,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_aa_HB,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa_HB,2,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = aa(_968)==>early_aa(_968) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = aa(_968)==>early_aa(_968) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( aa(Aa)==>early_aa(Aa2))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 16) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_aa,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'N'=N], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 16) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'N'=N], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 16) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_aa,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_aa,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_aa,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_aa,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_aa,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,early_aa,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_aa,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (~_106718:-_106740)==>early_not_HB(_106718,_106740) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (~_106718:-_106740)==>early_not_HB(_106718,_106740) , 
  support_fact = mfl4( 
                    [ 'H'=H, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (~_7540:-_7536)==>early_not_HB(Early_not_HB,HB))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'H'=H, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 17) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,pfcCreates) , 
  support_fact = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_not_HB,2,pfcRHS), 
                   rhs([mpred_prop(baseKB,early_not_HB,2,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'H'=H, 
                        'B'=B], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 17) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'H'=H, 
                      'B'=B], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/clause_fwd_01c.pfc.pl', 17) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,pfcControlled) , 
  support_fact = mpred_prop(baseKB,early_not_HB,2,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_not_HB,2,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,early_not_HB,2,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,early_not_HB,2,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,early_not_HB,2,prologHybrid) , 
  support_fact = mpred_prop(baseKB,early_not_HB,2,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,early_not_HB,2,pfcControlled), 
                   ( genlPreds(pfcControlled,prologHybrid) *-> 
                     rhs([mpred_prop(baseKB,early_not_HB,2,prologHybrid)]))) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,early_not_HB,2,prologHybrid))
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['conan_01.pfc.pl'])" -g "test_completed"
:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k conan_01.pfc.pl (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['df_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_22024,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',13) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_66328,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',13) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_99646,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',29) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(most,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(most,1) , 
  support_fact = mfl4(_6174,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',31),ax , 
  support_trig = mfl4(_7070,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',31) , 
  none is support_status
baseKB : mpred_fwc1( arity(most,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = meta_argtypes( most(ftAssertable)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = meta_argtypes( most(ftAssertable)) , 
  support_fact = mfl4(_420,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',31) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( meta_argtypes( most(ftAssertable)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = most((_76444<-_76466))/mpred_literal(_76444)==>(_76444<-_76466,\+ ~_76444) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = most((_76444<-_76466))/mpred_literal(_76444)==>(_76444<-_76466,\+ ~_76444) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( most((_108446<-_108448))/mpred_literal(Literal)==>(_108456<-_108462,\+ ~_108472))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcLHS))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = arity(most,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(most,1) , 
  support_fact = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcLHS), 
                   rhs( [ arity(most,1), 
                          functorIsMacro(most), 
                          mpred_prop(baseKB,most,1,pfcWatches)])) , 
  ( simular( (   mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',31)  ,
               ax , 
               mfl4(BaseKB3,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',31))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(most) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(most) , 
  support_fact = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcLHS), 
                   rhs( [ arity(most,1), 
                          functorIsMacro(most), 
                          mpred_prop(baseKB,most,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(most))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcLHS), 
                   rhs( [ arity(most,1), 
                          functorIsMacro(most), 
                          mpred_prop(baseKB,most,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'Q'=Q, 
                        'P'=P], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 34) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 34) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 34) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,most,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,most,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,most,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,most,1,pfcLHS), 
                 rhs( [ arity(most,1), 
                        functorIsMacro(most), 
                        mpred_prop(baseKB,most,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most((P==>Q))/nonvar(Q)  ==>
            _89224 ==> 
            most(_89246)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most((P==>Q))/nonvar(Q)  ==>
         _89224 ==> 
         most(_89246)) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 37) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   most((_9368==>_9370))/nonvar(Nonvar)  ==>
                       Most ==> 
                       most(Most4)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 37) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,most,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,most,1,pfcRHS),rhs([mpred_prop(baseKB,most,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,most,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,most,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,most,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,most,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most(~Q)/mpred_positive_literal(Q)  ==>
            \+_19590 ==> 
            ~_19590) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most(~Q)/mpred_positive_literal(Q)  ==>
         \+_19590 ==> 
         ~_19590) , 
  support_fact = mfl4( 
                    [ 'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 40) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   most(~_60510)/mpred_positive_literal(Literal)  ==>
                       \+_56970 ==> 
                       ~_56974))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 40) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
            \+_64682/_64704,\+ ~_64660 ==> 
            _64660) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
         \+_64682/_64704,\+ ~_64660 ==> 
         _64660) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'R'=R, 
                      'Test'=Test], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 43) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   ( most(Most) / 
                           ( mpred_positive_literal(Literal) , 
                             if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
                       \+_113952/_113954,\+ ~_113962 ==> 
                       _113938))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
            _62754/(\+_62754=_62732,_62776) ==> 
            \+_62732) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
         _62754/(\+_62754=_62732,_62776) ==> 
         \+_62732) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'R'=R, 
                      'Test'=Test], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 46) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   ( most(Most) / 
                           ( mpred_positive_literal(Literal) , 
                             if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
                       _112206/(\+_112222=_112224,_112214) ==> 
                       \+_112228))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a(_62988)==>c(_62988) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a(_62988)==>c(_62988) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a(A)==>c(C))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,c,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c,1,pfcRHS),rhs([mpred_prop(baseKB,c,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,c,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,c,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,c,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,c,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a,1) , 
  support_fact = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a,1,pfcLHS), 
                   rhs( [ arity(a,1), 
                          functorIsMacro(a), 
                          mpred_prop(baseKB,a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a) , 
  support_fact = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a,1,pfcLHS), 
                   rhs( [ arity(a,1), 
                          functorIsMacro(a), 
                          mpred_prop(baseKB,a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a,1,pfcLHS), 
                   rhs( [ arity(a,1), 
                          functorIsMacro(a), 
                          mpred_prop(baseKB,a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 59) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,a,1,pfcPosTrigger),rhs([mpred_prop(baseKB,a,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a,1,pfcLHS), 
                 rhs( [ arity(a,1), 
                        functorIsMacro(a), 
                        mpred_prop(baseKB,a,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = most( c(X)==>b(X)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = most( c(X)==>b(X)) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( most( c(C)==>b(B)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c(_1490)==>most(b(_1490)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c(_1490)==>most(b(_1490)) , 
  support_fact = most( c(C)==>b(B)) , 
  support_trig = '$pt'( baseKB, 
                   most( c(C)==>b(B)), 
                   nonvar(b(_1490))*->rhs([(c(_1490)==>most(b(_1490)))])) , 
  none is support_status
baseKB : mpred_fwc1( c(C)==>most(b(B)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(c,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(c,1) , 
  support_fact = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcLHS), 
                   rhs( [ arity(c,1), 
                          functorIsMacro(c), 
                          mpred_prop(baseKB,c,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(c,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(c,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(c,1) , 
  support_fact = arity(c,1) , 
  support_trig = '$pt'(baseKB,arity(c,1),(pfcControlled(c)*->rhs([hybrid_support(c,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(c,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(c) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(c) , 
  support_fact = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcLHS), 
                   rhs( [ arity(c,1), 
                          functorIsMacro(c), 
                          mpred_prop(baseKB,c,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(c))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcLHS), 
                   rhs( [ arity(c,1), 
                          functorIsMacro(c), 
                          mpred_prop(baseKB,c,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc', 60) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c,1,pfcPosTrigger),rhs([mpred_prop(baseKB,c,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,c,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,c,1,pfcLHS), 
                 rhs( [ arity(c,1), 
                        functorIsMacro(c), 
                        mpred_prop(baseKB,c,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a(1) , 
  support_fact = mfl4(_416,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c(1) , 
  support_fact = a(1) , 
  support_trig = '$pt'(baseKB,a(1),rhs([c(1)])) , 
  none is support_status
baseKB : mpred_fwc1( c(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = most( b(1)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = most( b(1)) , 
  support_fact = c(1) , 
  support_trig = '$pt'(baseKB,c(1),rhs([most(b(1))])) , 
  none is support_status
baseKB : mpred_fwc1( most( b(1)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) , 
  support_fact = most( b(1)) , 
  support_trig = '$pt'( baseKB, 
                   most( b(1)), 
                   ( mpred_positive_literal(b(1)),if_missing_mask(b(1),b(1),\+b(1)) *-> 
                     rhs([(\+b(1)/(\+b(1)),\+ ~b(1)==>b(1))]))) , 
  none is support_status
baseKB : mpred_fwc1( \+b(1)/(\+b(1)),\+ ~b(1)==>b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_fact = mfl4(_23574,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcRHS),rhs([mpred_prop(baseKB,b,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,kb_shared) , 
  support_fact = mfl4(_408,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61),ax , 
  support_trig = mfl4(_764,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_fact = mfl4(_38190,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b,1) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b,1) , 
  support_fact = arity(b,1) , 
  support_trig = '$pt'(baseKB,arity(b,1),(pfcControlled(b)*->rhs([hybrid_support(b,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcCallCode) , 
  support_fact = mfl4(_80088,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  support_fact = mfl4(_61588,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcNegTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcNegTrigger),rhs([mpred_prop(baseKB,b,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b,1,pfcLHS), 
                 rhs( [ arity(b,1), 
                        functorIsMacro(b), 
                        mpred_prop(baseKB,b,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1) , 
  support_fact = \+( ~( b(1))) , 
  support_trig = '$nt'(~b(1),call_u_no_bc(~b(1)),rhs([b(1)])) , 
  none is support_status
baseKB : mpred_fwc1( b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1) , 
  support_fact = most( b(1)) , 
  support_trig = '$pt'( baseKB, 
                   most( b(1)), 
                   ( mpred_positive_literal(b(1)),if_missing_mask(b(1),b(1),\+b(1)) *-> 
                     rhs([(b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1))]))) , 
  none is support_status
baseKB : mpred_fwc1( b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  support_fact = mfl4(_110768,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcPosTrigger),rhs([mpred_prop(baseKB,b,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b,1,pfcLHS), 
                 rhs( [ arity(b,1), 
                        functorIsMacro(b), 
                        mpred_prop(baseKB,b,1,pfcWatches)])))) is 
    support_status)
:- dynamic a/1.
:- multifile a/1.
:- public a/1.
:- module_transparent a/1.

a(1).

:- dynamic b/1.
:- multifile b/1.
:- public b/1.
:- module_transparent b/1.

b(1).

:- dynamic c/1.
:- multifile c/1.
:- public c/1.
:- module_transparent c/1.

c(1).

:- dynamic (==>)/2.
:- multifile (==>)/2.
:- public (==>)/2.
:- module_transparent (==>)/2.

pfcSanityA==>pfcSanityB.
mtHybrid(A)/(A\=baseKB)==>genlMt(A, baseKB), {ensure_abox(A), (A==user->dmsg_pretty(warn(mtHybrid(A)));true)}.
genlMt(A, B)/(A\=baseKB)==>{doall((predicate_m_f_a_decl(B, C, D, E), ain(baseKB:mpred_prop(B, C, D, E))))}.
predicateTriggerType(A)==>(mpred_prop(B, C, D, A), genlMt(E, B)/(E\=baseKB)==>{nop(dmsg_pretty(E:call(A, E:C/D))), show_failure(on_x_fail(E:call(A, E:C/D)))}).
mpred_prop(A, B, C, kb_local), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kb_local, D:B/C))), show_failure(on_x_fail(D:call(kb_local, D:B/C)))}.
mpred_prop(A, B, C, kb_shared), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kb_shared, D:B/C))), show_failure(on_x_fail(D:call(kb_shared, D:B/C)))}.
mpred_prop(A, B, C, kb_global), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kb_global, D:B/C))), show_failure(on_x_fail(D:call(kb_global, D:B/C)))}.
mpred_prop(A, B, C, kbi_define), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kbi_define, D:B/C))), show_failure(on_x_fail(D:call(kbi_define, D:B/C)))}.
genlMt(A, B)/(is_ftNonvar(A), is_ftNonvar(B), B\==baseKB, mtProlog(B))==>{B\==user, catch(add_import_module(A, B, end), error(_, _), dmsg_pretty(error(add_import_module(A, B, end))))}.
mtHybrid(A)==>{decl_assertable_module(A)}.
predicateConventionMt(A, B), arity(A, C)==>{kb_global(B:A/C)}.
ttTypeType(A)==>functorDeclares(A).
ttRelationType(A)==>{decl_rt(A)}, functorDeclares(A).
functorDeclares(A)==>arityMax(A, 1), functorIsMacro(A).
compilerDirective(A)==>{kb_shared(A/0)}.
prologHybrid(A), arity(A, B)==>{kb_shared(A/B)}.
pfcControlled(A), arity(A, B)==>hybrid_support(A, B).
pfc_checking==>(mpred_prop(A, B, C, pfcPosTrigger)==>{A:warn_if_static(B, C)}).
pfc_checking==>(mpred_prop(A, B, C, pfcNegTrigger)==>{A:warn_if_static(B, C)}).
pfc_checking==>(mpred_prop(A, B, C, pfcBcTrigger)==>{A:warn_if_static(B, C)}).
mpred_prop(A, B, C, D)/(\+ground(B/C))==>{trace_or_throw_ex(mpred_prop(A, B, C, D))}.
mpred_prop(A, B, C, pfcCreates)==>{kb_shared(A:B/C)}, {A:warn_if_static(B, C)}.
mpred_prop(A, B, C, pfcControlled)==>{kb_shared(A:B/C)}.
mpred_prop(A, B, C, pfcWatches)==>{kb_shared(A:B/C)}.
mpred_prop(A, B, C, pfcPosTrigger)==>mpred_prop(A, B, C, pfcWatches).
mpred_prop(A, B, C, pfcNegTrigger)==>mpred_prop(A, B, C, pfcWatches).
mpred_prop(A, B, C, pfcBcTrigger)==>mpred_prop(A, B, C, pfcCreates).
mpred_prop(A, B, C, pfcLHS)==>arity(B, C), functorIsMacro(B), mpred_prop(A, B, C, pfcWatches).
mpred_prop(A, B, C, pfcRHS)==>mpred_prop(A, B, C, pfcCreates).
mpred_prop(A, B, C, pfcCallCode)/predicate_is_undefined_fa(B, C)==>mpred_prop(A, B, C, needsDefined).
warningsAbout(A, B)==>{wdmsg_pfc(error(warningsAbout(A, B))), break}.
'$bt'(A, _)/(nonvar(A), must(get_bc_clause(A, B)))==>{ignore(kb_shared(A))}, B.
mpred_prop(A, B, C, D), genlPreds(D, E)==>mpred_prop(A, B, C, E).
mpred_undo_sys(A, B, C)==>(A==>{B}), mpred_do_and_undo_method(B, C).
conflict(A)==>{must(with_mpred_trace_exec((resolveConflict(A), \+conflict(A))))}.
A/mpred_positive_fact(A)==> \+ ~A.
~A/mpred_positive_fact(A)==> \+A, nesc(~A).
nesc(~A)/mpred_positive_fact(A)==> ~A, (A==> \+A).
nesc(A)/mpred_positive_fact(A)==>A, (~A==> \+ ~A).
nesc(A)==>A.
preventedWhen(A, B)==>(A/mpred_positive_fact(A), B==>nesc(~A)).
preventedWhen(A, {B})/mpred_positive_fact(A)==>(~A:-cwc, B).
mdefault((A<-B))/mpred_literal(A)==>(A<-B, \+ ~A).
mdefault((A==>B))/nonvar(B)==>(A==>mdefault(B)).
mdefault(~A)/mpred_positive_fact(A)==>(\+A==> ~A).
mdefault(A)/(mpred_positive_fact(A), if_missing_mask(A, B, C))==>(\+B/(ground(B), C), \+ ~A==>A).
mdefault(A)/(mpred_positive_fact(A), if_missing_mask(A, B, C))==>(B/(ground(B), C, \+B=A)==> \+A).
mpred_sv(A, B)==>arity(A, B), hybrid_support(A, B), singleValuedInArg(A, B).
mpred_sv_shared(A, B)==>{kb_shared(A/B)}, mpred_sv(A, B).
prologSingleValued(A), arity(A, B)/(\+singleValuedInArg(A, _))==>singleValuedInArg(A, B).
singleValuedInArg(A, _)==>prologSingleValued(A).
singleValuedInArgDefault(A, B, C)/ground(C)==>singleValuedInArg(A, B).
singleValuedInArg(A, B), arity(A, C)==>singleValuedInArgAX(A, C, B).
singleValuedInArgAX(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D, {E\=isMissing, call(dif:dif(F, E)), call_u(G), ground(G)}, G==> \+G, D).
mpred_sv(A, B), {B\=isMissing, call(dif:dif(C, B)), call_u(mpred_sv(A, C)), ground(mpred_sv(A, C))}, mpred_sv(A, C)==> \+mpred_sv(A, C), mpred_sv(A, B).
singleValuedInArg(A, B), {B\=isMissing, call(dif:dif(C, B)), call_u(singleValuedInArg(A, C)), ground(singleValuedInArg(A, C))}, singleValuedInArg(A, C)==> \+singleValuedInArg(A, C), singleValuedInArg(A, B).
singleValuedInArgDefault(A, B, C), {C\=isMissing, call(dif:dif(D, C)), call_u(singleValuedInArgDefault(A, B, D)), ground(singleValuedInArgDefault(A, B, D))}, singleValuedInArgDefault(A, B, D)==> \+singleValuedInArgDefault(A, B, D), singleValuedInArgDefault(A, B, C).
unused==>(singleValuedInArgAX(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D/ground(D)==>{E\==isMissing, call(dif:dif(F, E)), call_u(G), ground(G), ignore(retract(G))})).
unused==>(singleValuedInArgAX_maybe(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D/ground(D)==>{E\==isMissing, call(dif:dif(F, E)), call_u(G), ground(G)}, \+G, D, single_override_maybe(D, G))).
single_override(A, B), {ignore(retract(B))}==>(\+A==> \+single_override(A, B), {mpred_supported(B)}, B).
most((A<-B))/mpred_literal(A)==>(A<-B, \+ ~A).
most((A==>B))/nonvar(B)==>(A==>most(B)).
most(~A)/mpred_positive_literal(A)==>(\+A==> ~A).
most(A)/(mpred_positive_literal(A), if_missing_mask(A, B, C))==>(\+B/C, \+ ~A==>A).
most(A)/(mpred_positive_literal(A), if_missing_mask(A, B, C))==>(B/(\+B=A, C)==> \+A).
a(A)==>c(A).
c(A)==>most(b(A)).
\+b(1)/(\+b(1)), \+ ~b(1)==>b(1).
b(1)/(\+b(1)=b(1), \+b(1))==> \+b(1).

:- dynamic most/1.
:- multifile most/1.
:- public most/1.
:- module_transparent most/1.

most((c(A)==>b(A))).
most(b(1)).

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b(1):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_47468] [0m[36m
    1.4 most(b(1)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:_48642] [0m[36m
    1.5 most(W4)/(mpred_positive_literal(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/Y4,\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:43] [0m[36m
    1.6 c(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:_50502] [0m[36m
    1.7 c(W4)==>most(b(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_51386] [0m[36m
    1.8 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',43) [0m[36m
    1.9 a(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:61] [0m[36m
    1.10 a(W4)==>c(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:59] [0m[36m
    1.11 most((c(W4)==>b(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:60] [0m[36m
    1.12 most((W4==>X4))/nonvar(X4)==>(W4==>most(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:37] [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) [0m[36m
    1.14 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',59) [0m[36m
    1.15 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',60) [0m[36m
    1.16 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',37) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b(1):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_85696] [0m[36m
    1.4 most(b(1)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:_86870] [0m[36m
    1.5 most(W4)/(mpred_positive_literal(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/Y4,\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:43] [0m[36m
    1.6 c(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:_88730] [0m[36m
    1.7 c(W4)==>most(b(W4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_89614] [0m[36m
    1.8 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',43) [0m[36m
    1.9 a(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:61] [0m[36m
    1.10 a(W4)==>c(W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:59] [0m[36m
    1.11 most((c(W4)==>b(W4))) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:60] [0m[36m
    1.12 most((W4==>X4))/nonvar(X4)==>(W4==>most(X4)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc:37] [0m[36m
    1.13 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',61) [0m[36m
    1.14 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',59) [0m[36m
    1.15 mfl4([ 'X'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',60) [0m[36m
    1.16 mfl4([ 'P'=_, 
       'Q'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',37) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1) , 
  support_fact = \+( ~( b(1))) , 
  support_trig = '$nt'(~b(1),call_u_no_bc(~b(1)),rhs([b(1)])) , 
  none is support_status
baseKB : mpred_fwc1( b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~( b(1)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~( b(1)) , 
  support_fact = mfl4(_854,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc',74) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~( b(1)))
:- dynamic test_results/3.

test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc':63/error(existence_error(procedure, pt), context(toplevel, 'DWIM could not correct goal')), error, ['~p: '-[toplevel], '~w `~p\' does not exist'-[procedure, pt], ' (~w)'-['DWIM could not correct goal']]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_01.pfc':63/goal_failed(directive, baseKB:listing([a/1, b/1, c/1,  (==>)/2, most/1, pt, nt, bct])), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:listing([a/1, b/1, c/1,  (==>)/2, most/1, pt, nt, bct])]]).

swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dia_pfc_mod_01a.pl'])" -g "test_completed"
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dia_pfc_mod_01b.pl'])" -g "test_completed"
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dia_pfc_mod_01c.pl'])" -g "test_completed"
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dia_pfc_mod_01.pl'])" -g "test_completed"
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dl_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_23246,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc',17) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_67550,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc',17) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_100580,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi',11) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(most,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(most,1) , 
  support_fact = ( mfl4(_8618,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi',15) , 
                   ax) , 
  support_trig = mfl4(_9514,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi',15) , 
  none is support_status
baseKB : mpred_fwc1( arity(most,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = meta_argtypes( most(ftAssertable)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = meta_argtypes( most(ftAssertable)) , 
  support_fact = mfl4(_988,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi',15) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( meta_argtypes( most(ftAssertable)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = most((_81996<-_82018))/mpred_literal(_81996)==>(_81996<-_82018,\+ ~_81996) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = most((_81996<-_82018))/mpred_literal(_81996)==>(_81996<-_82018,\+ ~_81996) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( most((_113998<-_114000))/mpred_literal(Literal)==>(_114008<-_114014,\+ ~_114024))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcLHS))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = arity(most,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(most,1) , 
  support_fact = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcLHS), 
                   rhs( [ arity(most,1), 
                          functorIsMacro(most), 
                          mpred_prop(baseKB,most,1,pfcWatches)])) , 
  ( simular( (   mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi',15)  ,
               ax , 
               mfl4(BaseKB3,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi',15))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(most) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(most) , 
  support_fact = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcLHS), 
                   rhs( [ arity(most,1), 
                          functorIsMacro(most), 
                          mpred_prop(baseKB,most,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(most))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,most,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcLHS), 
                   rhs( [ arity(most,1), 
                          functorIsMacro(most), 
                          mpred_prop(baseKB,most,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'Q'=Q, 
                        'P'=P], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 18) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 18) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,most,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,most,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,most,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,most,1,pfcLHS), 
                 rhs( [ arity(most,1), 
                        functorIsMacro(most), 
                        mpred_prop(baseKB,most,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most((P==>Q))/nonvar(Q)  ==>
            _96284 ==> 
            most(_96306)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most((P==>Q))/nonvar(Q)  ==>
         _96284 ==> 
         most(_96306)) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   most((_13648==>_13650))/nonvar(Nonvar)  ==>
                       Most ==> 
                       most(Most4)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 21) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,most,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,most,1,pfcRHS),rhs([mpred_prop(baseKB,most,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,most,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,most,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,most,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,most,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,most,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,most,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,most,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,most,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most(~Q)/mpred_positive_literal(Q)  ==>
            \+_33168 ==> 
            ~_33168) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most(~Q)/mpred_positive_literal(Q)  ==>
         \+_33168 ==> 
         ~_33168) , 
  support_fact = mfl4( 
                    [ 'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 24) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   most(~_74088)/mpred_positive_literal(Literal)  ==>
                       \+_70548 ==> 
                       ~_70552))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 24) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
            \+_71082/_71104,\+ ~_71060 ==> 
            _71060) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
         \+_71082/_71104,\+ ~_71060 ==> 
         _71060) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'R'=R, 
                      'Test'=Test], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   ( most(Most) / 
                           ( mpred_positive_literal(Literal) , 
                             if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
                       \+_120352/_120354,\+ ~_120362 ==> 
                       _120338))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
            _71064/(_71086,\+_71064=_71042) ==> 
            \+_71042) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   most(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
         _71064/(_71086,\+_71064=_71042) ==> 
         \+_71042) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'R'=R, 
                      'Test'=Test], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/df_include.pi', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   ( most(Most) / 
                           ( mpred_positive_literal(Literal) , 
                             if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
                       _120516/(_120522,\+_120532=_120534) ==> 
                       \+_120538))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a(_71896)==>c(_71896) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a(_71896)==>c(_71896) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a(A)==>c(C))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,c,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c,1,pfcRHS),rhs([mpred_prop(baseKB,c,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,c,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,c,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,c,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,c,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a,1) , 
  support_fact = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a,1,pfcLHS), 
                   rhs( [ arity(a,1), 
                          functorIsMacro(a), 
                          mpred_prop(baseKB,a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a) , 
  support_fact = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a,1,pfcLHS), 
                   rhs( [ arity(a,1), 
                          functorIsMacro(a), 
                          mpred_prop(baseKB,a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a,1,pfcLHS), 
                   rhs( [ arity(a,1), 
                          functorIsMacro(a), 
                          mpred_prop(baseKB,a,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 23) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,a,1,pfcPosTrigger),rhs([mpred_prop(baseKB,a,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a,1,pfcLHS), 
                 rhs( [ arity(a,1), 
                        functorIsMacro(a), 
                        mpred_prop(baseKB,a,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a(1) , 
  support_fact = mfl4(_64768,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc',24) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c(1) , 
  support_fact = a(1) , 
  support_trig = '$pt'(baseKB,a(1),rhs([c(1)])) , 
  none is support_status
baseKB : mpred_fwc1( c(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = most( c(X)==>b(X)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = most( c(X)==>b(X)) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( most( c(C)==>b(B)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = c(_1932)==>most(b(_1932)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = c(_1932)==>most(b(_1932)) , 
  support_fact = most( c(C)==>b(B)) , 
  support_trig = '$pt'( baseKB, 
                   most( c(C)==>b(B)), 
                   nonvar(b(_1932))*->rhs([(c(_1932)==>most(b(_1932)))])) , 
  none is support_status
baseKB : mpred_fwc1( c(C)==>most(b(B)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(c,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(c,1) , 
  support_fact = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcLHS), 
                   rhs( [ arity(c,1), 
                          functorIsMacro(c), 
                          mpred_prop(baseKB,c,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(c,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(c,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(c,1) , 
  support_fact = arity(c,1) , 
  support_trig = '$pt'(baseKB,arity(c,1),(pfcControlled(c)*->rhs([hybrid_support(c,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(c,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(c) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(c) , 
  support_fact = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcLHS), 
                   rhs( [ arity(c,1), 
                          functorIsMacro(c), 
                          mpred_prop(baseKB,c,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(c))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,c,1,pfcLHS), 
                   rhs( [ arity(c,1), 
                          functorIsMacro(c), 
                          mpred_prop(baseKB,c,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,c,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,c,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,c,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,c,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,c,1,pfcPosTrigger),rhs([mpred_prop(baseKB,c,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,c,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,c,1,pfcLHS), 
                 rhs( [ arity(c,1), 
                        functorIsMacro(c), 
                        mpred_prop(baseKB,c,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = most( b(1)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = most( b(1)) , 
  support_fact = c(1) , 
  support_trig = '$pt'(baseKB,c(_2794),rhs([most(b(_2794))])) , 
  none is support_status
baseKB : mpred_fwc1( most( b(1)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) , 
  support_fact = most( b(1)) , 
  support_trig = '$pt'( baseKB, 
                   most( b(1)), 
                   ( mpred_positive_literal(b(1)),if_missing_mask(b(1),b(1),\+b(1)) *-> 
                     rhs([(\+b(1)/(\+b(1)),\+ ~b(1)==>b(1))]))) , 
  none is support_status
baseKB : mpred_fwc1( \+b(1)/(\+b(1)),\+ ~b(1)==>b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcRHS),rhs([mpred_prop(baseKB,b,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'X'=X], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b,1) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b,1) , 
  support_fact = arity(b,1) , 
  support_trig = '$pt'(baseKB,arity(b,1),(pfcControlled(b)*->rhs([hybrid_support(b,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcNegTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcNegTrigger),rhs([mpred_prop(baseKB,b,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b,1,pfcLHS), 
                 rhs( [ arity(b,1), 
                        functorIsMacro(b), 
                        mpred_prop(baseKB,b,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1) , 
  support_fact = \+( ~( b(1))) , 
  support_trig = '$nt'(~b(1),call_u_no_bc(~b(1)),rhs([b(1)])) , 
  none is support_status
baseKB : mpred_fwc1( b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1)/(\+b(1),\+b(1)=b(1))==> \+b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1)/(\+b(1),\+b(1)=b(1))==> \+b(1) , 
  support_fact = most( b(1)) , 
  support_trig = '$pt'( baseKB, 
                   most( b(1)), 
                   ( mpred_positive_literal(b(1)),if_missing_mask(b(1),b(1),\+b(1)) *-> 
                     rhs([(b(1)/(\+b(1),\+b(1)=b(1))==> \+b(1))]))) , 
  none is support_status
baseKB : mpred_fwc1( b(1)/(\+b(1),\+b(1)=b(1))==> \+b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'X'=X], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc', 26) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcPosTrigger),rhs([mpred_prop(baseKB,b,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b,1,pfcLHS), 
                 rhs( [ arity(b,1), 
                        functorIsMacro(b), 
                        mpred_prop(baseKB,b,1,pfcWatches)])))) is 
    support_status)
:- dynamic a/1.
:- multifile a/1.
:- public a/1.
:- module_transparent a/1.

a(1).

:- dynamic b/1.
:- multifile b/1.
:- public b/1.
:- module_transparent b/1.

b(1).

:- dynamic c/1.
:- multifile c/1.
:- public c/1.
:- module_transparent c/1.

c(1).

:- dynamic (==>)/2.
:- multifile (==>)/2.
:- public (==>)/2.
:- module_transparent (==>)/2.

pfcSanityA==>pfcSanityB.
mtHybrid(A)/(A\=baseKB)==>genlMt(A, baseKB), {ensure_abox(A), (A==user->dmsg_pretty(warn(mtHybrid(A)));true)}.
genlMt(A, B)/(A\=baseKB)==>{doall((predicate_m_f_a_decl(B, C, D, E), ain(baseKB:mpred_prop(B, C, D, E))))}.
predicateTriggerType(A)==>(mpred_prop(B, C, D, A), genlMt(E, B)/(E\=baseKB)==>{nop(dmsg_pretty(E:call(A, E:C/D))), show_failure(on_x_fail(E:call(A, E:C/D)))}).
mpred_prop(A, B, C, kb_local), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kb_local, D:B/C))), show_failure(on_x_fail(D:call(kb_local, D:B/C)))}.
mpred_prop(A, B, C, kb_shared), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kb_shared, D:B/C))), show_failure(on_x_fail(D:call(kb_shared, D:B/C)))}.
mpred_prop(A, B, C, kb_global), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kb_global, D:B/C))), show_failure(on_x_fail(D:call(kb_global, D:B/C)))}.
mpred_prop(A, B, C, kbi_define), genlMt(D, A)/(D\=baseKB)==>{nop(dmsg_pretty(D:call(kbi_define, D:B/C))), show_failure(on_x_fail(D:call(kbi_define, D:B/C)))}.
genlMt(A, B)/(is_ftNonvar(A), is_ftNonvar(B), B\==baseKB, mtProlog(B))==>{B\==user, catch(add_import_module(A, B, end), error(_, _), dmsg_pretty(error(add_import_module(A, B, end))))}.
mtHybrid(A)==>{decl_assertable_module(A)}.
predicateConventionMt(A, B), arity(A, C)==>{kb_global(B:A/C)}.
ttTypeType(A)==>functorDeclares(A).
ttRelationType(A)==>{decl_rt(A)}, functorDeclares(A).
functorDeclares(A)==>arityMax(A, 1), functorIsMacro(A).
compilerDirective(A)==>{kb_shared(A/0)}.
prologHybrid(A), arity(A, B)==>{kb_shared(A/B)}.
pfcControlled(A), arity(A, B)==>hybrid_support(A, B).
pfc_checking==>(mpred_prop(A, B, C, pfcPosTrigger)==>{A:warn_if_static(B, C)}).
pfc_checking==>(mpred_prop(A, B, C, pfcNegTrigger)==>{A:warn_if_static(B, C)}).
pfc_checking==>(mpred_prop(A, B, C, pfcBcTrigger)==>{A:warn_if_static(B, C)}).
mpred_prop(A, B, C, D)/(\+ground(B/C))==>{trace_or_throw_ex(mpred_prop(A, B, C, D))}.
mpred_prop(A, B, C, pfcCreates)==>{kb_shared(A:B/C)}, {A:warn_if_static(B, C)}.
mpred_prop(A, B, C, pfcControlled)==>{kb_shared(A:B/C)}.
mpred_prop(A, B, C, pfcWatches)==>{kb_shared(A:B/C)}.
mpred_prop(A, B, C, pfcPosTrigger)==>mpred_prop(A, B, C, pfcWatches).
mpred_prop(A, B, C, pfcNegTrigger)==>mpred_prop(A, B, C, pfcWatches).
mpred_prop(A, B, C, pfcBcTrigger)==>mpred_prop(A, B, C, pfcCreates).
mpred_prop(A, B, C, pfcLHS)==>arity(B, C), functorIsMacro(B), mpred_prop(A, B, C, pfcWatches).
mpred_prop(A, B, C, pfcRHS)==>mpred_prop(A, B, C, pfcCreates).
mpred_prop(A, B, C, pfcCallCode)/predicate_is_undefined_fa(B, C)==>mpred_prop(A, B, C, needsDefined).
warningsAbout(A, B)==>{wdmsg_pfc(error(warningsAbout(A, B))), break}.
'$bt'(A, _)/(nonvar(A), must(get_bc_clause(A, B)))==>{ignore(kb_shared(A))}, B.
mpred_prop(A, B, C, D), genlPreds(D, E)==>mpred_prop(A, B, C, E).
mpred_undo_sys(A, B, C)==>(A==>{B}), mpred_do_and_undo_method(B, C).
conflict(A)==>{must(with_mpred_trace_exec((resolveConflict(A), \+conflict(A))))}.
A/mpred_positive_fact(A)==> \+ ~A.
~A/mpred_positive_fact(A)==> \+A, nesc(~A).
nesc(~A)/mpred_positive_fact(A)==> ~A, (A==> \+A).
nesc(A)/mpred_positive_fact(A)==>A, (~A==> \+ ~A).
nesc(A)==>A.
preventedWhen(A, B)==>(A/mpred_positive_fact(A), B==>nesc(~A)).
preventedWhen(A, {B})/mpred_positive_fact(A)==>(~A:-cwc, B).
mdefault((A<-B))/mpred_literal(A)==>(A<-B, \+ ~A).
mdefault((A==>B))/nonvar(B)==>(A==>mdefault(B)).
mdefault(~A)/mpred_positive_fact(A)==>(\+A==> ~A).
mdefault(A)/(mpred_positive_fact(A), if_missing_mask(A, B, C))==>(\+B/(ground(B), C), \+ ~A==>A).
mdefault(A)/(mpred_positive_fact(A), if_missing_mask(A, B, C))==>(B/(ground(B), C, \+B=A)==> \+A).
mpred_sv(A, B)==>arity(A, B), hybrid_support(A, B), singleValuedInArg(A, B).
mpred_sv_shared(A, B)==>{kb_shared(A/B)}, mpred_sv(A, B).
prologSingleValued(A), arity(A, B)/(\+singleValuedInArg(A, _))==>singleValuedInArg(A, B).
singleValuedInArg(A, _)==>prologSingleValued(A).
singleValuedInArgDefault(A, B, C)/ground(C)==>singleValuedInArg(A, B).
singleValuedInArg(A, B), arity(A, C)==>singleValuedInArgAX(A, C, B).
singleValuedInArgAX(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D, {E\=isMissing, call(dif:dif(F, E)), call_u(G), ground(G)}, G==> \+G, D).
mpred_sv(A, B), {B\=isMissing, call(dif:dif(C, B)), call_u(mpred_sv(A, C)), ground(mpred_sv(A, C))}, mpred_sv(A, C)==> \+mpred_sv(A, C), mpred_sv(A, B).
singleValuedInArg(A, B), {B\=isMissing, call(dif:dif(C, B)), call_u(singleValuedInArg(A, C)), ground(singleValuedInArg(A, C))}, singleValuedInArg(A, C)==> \+singleValuedInArg(A, C), singleValuedInArg(A, B).
singleValuedInArgDefault(A, B, C), {C\=isMissing, call(dif:dif(D, C)), call_u(singleValuedInArgDefault(A, B, D)), ground(singleValuedInArgDefault(A, B, D))}, singleValuedInArgDefault(A, B, D)==> \+singleValuedInArgDefault(A, B, D), singleValuedInArgDefault(A, B, C).
unused==>(singleValuedInArgAX(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D/ground(D)==>{E\==isMissing, call(dif:dif(F, E)), call_u(G), ground(G), ignore(retract(G))})).
unused==>(singleValuedInArgAX_maybe(A, B, C), {functor(D, A, B), arg(C, D, E), replace_arg(D, C, F, G)}==>(D/ground(D)==>{E\==isMissing, call(dif:dif(F, E)), call_u(G), ground(G)}, \+G, D, single_override_maybe(D, G))).
single_override(A, B), {ignore(retract(B))}==>(\+A==> \+single_override(A, B), {mpred_supported(B)}, B).
most((A<-B))/mpred_literal(A)==>(A<-B, \+ ~A).
most((A==>B))/nonvar(B)==>(A==>most(B)).
most(~A)/mpred_positive_literal(A)==>(\+A==> ~A).
most(A)/(mpred_positive_literal(A), if_missing_mask(A, B, C))==>(\+B/C, \+ ~A==>A).
most(A)/(mpred_positive_literal(A), if_missing_mask(A, B, C))==>(B/(C, \+B=A)==> \+A).
a(A)==>c(A).
c(A)==>most(b(A)).
\+b(1)/(\+b(1)), \+ ~b(1)==>b(1).
b(1)/(\+b(1), \+b(1)=b(1))==> \+b(1).

:- dynamic most/1.
:- multifile most/1.
:- public most/1.
:- module_transparent most/1.

most((c(A)==>b(A))).
most(b(1)).

:- dynamic test_results/3.

test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc':28/error(existence_error(procedure, pt), context(toplevel, 'DWIM could not correct goal')), error, ['~p: '-[toplevel], '~w `~p\' does not exist'-[procedure, pt], ' (~w)'-['DWIM could not correct goal']]).
test_results('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dl_01.pfc':28/goal_failed(directive, baseKB:listing([a/1, b/1, c/1,  (==>)/2, most/1, pt, nt, bct])), warning, ['Goal (~w) failed: ~p'-[directive, baseKB:listing([a/1, b/1, c/1,  (==>)/2, most/1, pt, nt, bct])]]).

swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dmost_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_81710,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',20) , 
  support_trig=ax , 
  ( simular( ( mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl',132) , 
               ax)) is 
    support_status)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mtHybrid(baseKB) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mtHybrid(baseKB) , 
  support_fact = mfl4(_1026,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',20) , 
  support_trig=ax , 
  exact is support_status
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(dmost,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(dmost,1) , 
  support_fact = ( mfl4(_14696,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',24) , 
                   ax) , 
  support_trig = mfl4(_15592,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',24) , 
  none is support_status
baseKB : mpred_fwc1( arity(dmost,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = meta_argtypes( dmost(ftAssertable)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = meta_argtypes( dmost(ftAssertable)) , 
  support_fact = mfl4(_862,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',24) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( meta_argtypes( dmost(ftAssertable)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = dmost((_85110<-_85132))/mpred_literal(_85110)==>(_85110<-_85132,\+ ~_85110) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = dmost((_85110<-_85132))/mpred_literal(_85110)==>(_85110<-_85132,\+ ~_85110) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( dmost((_117202<-_117204))/mpred_literal(Literal)==>(_117212<-_117218,\+ ~_117228))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcLHS) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,pfcLHS))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = arity(dmost,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(dmost,1) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dmost,1,pfcLHS), 
                   rhs( [ arity(dmost,1), 
                          functorIsMacro(dmost), 
                          mpred_prop(baseKB,dmost,1,pfcWatches)])) , 
  ( simular( (   mfl4(BaseKB,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',24)  ,
               ax , 
               mfl4(BaseKB3,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',24))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(dmost) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(dmost) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dmost,1,pfcLHS), 
                   rhs( [ arity(dmost,1), 
                          functorIsMacro(dmost), 
                          mpred_prop(baseKB,dmost,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(dmost))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dmost,1,pfcLHS), 
                   rhs( [ arity(dmost,1), 
                          functorIsMacro(dmost), 
                          mpred_prop(baseKB,dmost,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,kb_shared) , 
  support_fact = ( mfl4( 
                      [ 'Q'=Q, 
                        'P'=P], 
                       baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 27) , 
                   ax) , 
  support_trig = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 27) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcPosTrigger) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'P'=P], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 27) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dmost,1,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,dmost,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,dmost,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,dmost,1,pfcLHS), 
                 rhs( [ arity(dmost,1), 
                        functorIsMacro(dmost), 
                        mpred_prop(baseKB,dmost,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   dmost((P==>Q))/nonvar(Q)  ==>
            _96578 ==> 
            dmost(_96600)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   dmost((P==>Q))/nonvar(Q)  ==>
         _96578 ==> 
         dmost(_96600)) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   dmost((_13816==>_13818))/nonvar(Nonvar)  ==>
                       Dmost ==> 
                       dmost(Dmost4)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcRHS) , 
  support_fact = mfl4( 
                    [ 'P'=P, 
                      'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 30) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,dmost,1,pfcRHS),rhs([mpred_prop(baseKB,dmost,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dmost,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,dmost,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,dmost,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,dmost,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,dmost,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,dmost,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,dmost,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,dmost,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   dmost(~Q)/mpred_positive_literal(Q)  ==>
            \+_33598 ==> 
            ~_33598) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   dmost(~Q)/mpred_positive_literal(Q)  ==>
         \+_33598 ==> 
         ~_33598) , 
  support_fact = mfl4( 
                    [ 'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   dmost(~_74698)/mpred_positive_literal(Literal)  ==>
                       \+_71068 ==> 
                       ~_71072))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode) , 
  support_fact = mfl4( 
                    [ 'Q'=Q], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 33) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,mpred_positive_literal,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   dmost(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
            \+_71622/_71644,\+ ~_71600 ==> 
            _71600) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   dmost(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
         \+_71622/_71644,\+ ~_71600 ==> 
         _71600) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'R'=R, 
                      'Test'=Test], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 36) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   ( dmost(Dmost) / 
                           ( mpred_positive_literal(Literal) , 
                             if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
                       \+_121006/_121008,\+ ~_121016 ==> 
                       _120992))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = (   dmost(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
            _71410/(\+_71410=_71388,_71432) ==> 
            \+_71388) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = (   dmost(Q)/(mpred_positive_literal(Q),if_missing_mask(Q,R,Test))  ==>
         _71410/(\+_71410=_71388,_71432) ==> 
         \+_71388) , 
  support_fact = mfl4( 
                    [ 'Q'=Q, 
                      'R'=R, 
                      'Test'=Test], 
                     baseKB, '/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc', 39) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( (   ( dmost(Dmost) / 
                           ( mpred_positive_literal(Literal) , 
                             if_missing_mask(If_missing_mask4,If_missing_mask,Mask)))  ==>
                       _120976/(\+_120992=_120994,_120984) ==> 
                       \+_120998))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = dmost( b(1)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = dmost( b(1)) , 
  support_fact = mfl4(_72186,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( dmost( b(1)))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) , 
  support_fact = dmost( b(1)) , 
  support_trig = '$pt'( baseKB, 
                   dmost( b(1)), 
                   ( mpred_positive_literal(b(1)),if_missing_mask(b(1),b(1),\+b(1)) *-> 
                     rhs([(\+b(1)/(\+b(1)),\+ ~b(1)==>b(1))]))) , 
  none is support_status
baseKB : mpred_fwc1( \+b(1)/(\+b(1)),\+ ~b(1)==>b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_fact = mfl4(_92364,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcRHS),rhs([mpred_prop(baseKB,b,1,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,kb_shared) , 
  support_fact = mfl4(_854,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48),ax , 
  support_trig = mfl4(_1210,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b,1,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b,1,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b,1,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b,1,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_fact = mfl4(_75916,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(b,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(b,1) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(b,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = hybrid_support(b,1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = hybrid_support(b,1) , 
  support_fact = arity(b,1) , 
  support_trig = '$pt'(baseKB,arity(b,1),(pfcControlled(b)*->rhs([hybrid_support(b,1)]))) , 
  none is support_status
baseKB : mpred_fwc1( hybrid_support(b,1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(b) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(b) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(b))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b,1,pfcLHS), 
                   rhs( [ arity(b,1), 
                          functorIsMacro(b), 
                          mpred_prop(baseKB,b,1,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcCallCode) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcCallCode) , 
  support_fact = mfl4(_116820,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcCallCode))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  support_fact = mfl4(_91094,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcNegTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcNegTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcNegTrigger),rhs([mpred_prop(baseKB,b,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b,1,pfcLHS), 
                 rhs( [ arity(b,1), 
                        functorIsMacro(b), 
                        mpred_prop(baseKB,b,1,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1) , 
  support_fact = \+( ~( b(1))) , 
  support_trig = '$nt'(~b(1),call_u_no_bc(~b(1)),rhs([b(1)])) , 
  none is support_status
baseKB : mpred_fwc1( b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1) , 
  support_fact = dmost( b(1)) , 
  support_trig = '$pt'( baseKB, 
                   dmost( b(1)), 
                   ( mpred_positive_literal(b(1)),if_missing_mask(b(1),b(1),\+b(1)) *-> 
                     rhs([(b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1))]))) , 
  none is support_status
baseKB : mpred_fwc1( b(1)/(\+b(1)=b(1),\+b(1))==> \+b(1))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  support_fact = mfl4(_20044,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b,1,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,b,1,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b,1,pfcWatches) , 
  support_fact = mpred_prop(baseKB,b,1,pfcPosTrigger) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b,1,pfcPosTrigger),rhs([mpred_prop(baseKB,b,1,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,b,1,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,b,1,pfcLHS), 
                 rhs( [ arity(b,1), 
                        functorIsMacro(b), 
                        mpred_prop(baseKB,b,1,pfcWatches)])))) is 
    support_status)
:- dynamic b/1.
:- multifile b/1.
:- public b/1.
:- module_transparent b/1.

b(1).

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for dmost(b(1)):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b(1):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_26490] [0m[36m
    1.4 dmost(b(1)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc:48] [0m[36m
    1.5 dmost(W4)/(mpred_positive_literal(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/Y4,\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc:36] [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) [0m[36m
    1.7 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b(2) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = b(2) , 
  support_fact = mfl4(_35436,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',56) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( b(2))
:- dynamic b/1.
:- multifile b/1.
:- public b/1.
:- module_transparent b/1.

b(1).
b(2).

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for \+b(1). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m No justifications for \+b(1). 

[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b(2):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',56) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0mcall_mpred_post4 :- 
  unique is assertion_status , 
  post1 = ~( b(2)) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = ~( b(2)) , 
  support_fact = mfl4(_93228,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',64) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( ~( b(2)))
:- dynamic b/1.
:- multifile b/1.
:- public b/1.
:- module_transparent b/1.

b(1).

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b(1):
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 \+ ~b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.2 \+b(1) [0m[90m % [/boot/init.pl:512] [0m[36m
    1.3 \+b(1)/(\+b(1)),\+ ~b(1)==>b(1) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/prolog/pfclib/system_autoexec.pfc.pl:_27644] [0m[36m
    1.4 dmost(b(1)) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc:48] [0m[36m
    1.5 dmost(W4)/(mpred_positive_literal(W4),if_missing_mask(W4,X4,Y4))==>(\+X4/Y4,\+ ~W4==>W4) [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc:36] [0m[36m
    1.6 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',48) [0m[36m
    1.7 mfl4([ 'Q'=_, 
       'R'=_, 
       'Test'=_],baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/dmost_01.pfc',36) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k dmost_01.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['dupe_chain_01.pfc.pl'])" -g "test_completed"
...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['fc_01.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = a11==>b11 , 
  support_fact = mfl4(_18002,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( a11==>b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_fact = mfl4(_37952,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcCreates) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'(baseKB,mpred_prop(baseKB,b11,0,pfcRHS),rhs([mpred_prop(baseKB,b11,0,pfcCreates)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,kb_shared) , 
  support_fact = mfl4(_414,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18),ax , 
  support_trig = mfl4(_918,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcRHS), 
                   genlPreds(pfcRHS,pfcControlled)*->rhs([mpred_prop(baseKB,b11,0,pfcControlled)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,pfcControlled))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,b11,0,prologHybrid) , 
  support_fact = mpred_prop(baseKB,b11,0,pfcControlled) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,b11,0,pfcControlled), 
                   genlPreds(pfcControlled,prologHybrid)*->rhs([mpred_prop(baseKB,b11,0,prologHybrid)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,b11,0,prologHybrid))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_fact = mfl4(_8274,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a11,0) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = arity(a11,0) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( arity(a11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a11) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = functorIsMacro(a11) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( functorIsMacro(a11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,kb_shared) , 
  support_fact = mfl4(_406,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18),ax , 
  support_trig = mfl4(_908,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_fact = mfl4(_21956,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1( mpred_prop(baseKB,a11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0 = mpred_prop(baseKB,a11,0,pfcWatches) , 
  support_fact = mpred_prop(baseKB,a11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(baseKB,a11,0,pfcPosTrigger), 
                   rhs([mpred_prop(baseKB,a11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(baseKB,a11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(baseKB,a11,0,pfcLHS), 
                 rhs( [ arity(a11,0), 
                        functorIsMacro(a11), 
                        mpred_prop(baseKB,a11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=a11 , 
  support_fact = mfl4(_64186,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',19) , 
  support_trig=ax , 
  none is support_status
baseKB : mpred_fwc1(a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=baseKB , 
  mz=baseKB , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(baseKB,a11,rhs([b11])) , 
  none is support_status
baseKB : mpred_fwc1(b11)
:- dynamic a11/0.
:- multifile a11/0.
:- public a11/0.
:- module_transparent a11/0.

a11.

[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc:19] [0m[36m
    1.2 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc:18] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',19) [0m[36m
    1.4 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[33m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m
Justifications for b11:
[31m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[36m    1.1 a11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc:19] [0m[36m
    1.2 a11==>b11 [0m[90m % [/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc:18] [0m[36m
    1.3 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',19) [0m[36m
    1.4 mfl4(_,baseKB,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01.pfc',18) [0m
[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m[32m%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[0m:- dynamic test_results/3.




SUCCESS: ./test_prolog.sh -k fc_01.pfc (returned 7)


swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['fc_01r.pfc'])" -g "test_completed"
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = a11==>b11 , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = a11==>b11 , 
  support_fact = mfl4(_45572,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( a11==>b11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,b11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,b11,0,pfcRHS) , 
  support_fact = mfl4(_66232,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,b11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,b11,0,pfcCreates) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,b11,0,pfcCreates) , 
  support_fact = mpred_prop(header_sane,b11,0,pfcRHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(header_sane,b11,0,pfcRHS), 
                   rhs([mpred_prop(header_sane,b11,0,pfcCreates)])) , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,b11,0,pfcCreates))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,b11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,b11,0,kb_shared) , 
  support_fact = ( mfl4(_418,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
                   ax) , 
  support_trig = mfl4(_922,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,b11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,a11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,a11,0,pfcLHS) , 
  support_fact = mfl4(_59528,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,a11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = arity(a11,0) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = arity(a11,0) , 
  support_fact = mpred_prop(header_sane,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(header_sane,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(header_sane,a11,0,pfcWatches)])) , 
  none is support_status
header_sane : mpred_fwc1( arity(a11,0))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = functorIsMacro(a11) , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = functorIsMacro(a11) , 
  support_fact = mpred_prop(header_sane,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(header_sane,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(header_sane,a11,0,pfcWatches)])) , 
  none is support_status
header_sane : mpred_fwc1( functorIsMacro(a11))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,a11,0,pfcWatches) , 
  support_fact = mpred_prop(header_sane,a11,0,pfcLHS) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(header_sane,a11,0,pfcLHS), 
                   rhs( [ arity(a11,0), 
                          functorIsMacro(a11), 
                          mpred_prop(header_sane,a11,0,pfcWatches)])) , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,a11,0,pfcWatches))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,a11,0,kb_shared) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,a11,0,kb_shared) , 
  support_fact = ( mfl4(_410,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
                   ax) , 
  support_trig = mfl4(_912,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,a11,0,kb_shared))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,a11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,a11,0,pfcPosTrigger) , 
  support_fact = mfl4(_83906,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',22) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,a11,0,pfcPosTrigger))
call_mpred_post4 :- 
  identical is assertion_status , 
  post1 = mpred_prop(header_sane,a11,0,pfcWatches) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,a11,0,pfcWatches) , 
  support_fact = mpred_prop(header_sane,a11,0,pfcPosTrigger) , 
  support_trig = '$pt'( baseKB, 
                   mpred_prop(header_sane,a11,0,pfcPosTrigger), 
                   rhs([mpred_prop(header_sane,a11,0,pfcWatches)])) , 
  ( simular( ( mpred_prop(header_sane,a11,0,pfcLHS) , 
               '$pt'( baseKB, 
                 mpred_prop(header_sane,a11,0,pfcLHS), 
                 rhs( [ arity(a11,0), 
                        functorIsMacro(a11), 
                        mpred_prop(header_sane,a11,0,pfcWatches)])))) is 
    support_status)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = b11==>a11 , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0 = b11==>a11 , 
  support_fact = mfl4(_107568,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',23) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( b11==>a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,a11,0,pfcRHS) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,a11,0,pfcRHS) , 
  support_fact = mfl4(_1292,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',23) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,a11,0,pfcRHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,b11,0,pfcLHS) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,b11,0,pfcLHS) , 
  support_fact = mfl4(_16868,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',23) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,b11,0,pfcLHS))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1 = mpred_prop(header_sane,b11,0,pfcPosTrigger) , 
  fix_mp=baseKB , 
  mz=header_sane , 
  p0 = mpred_prop(header_sane,b11,0,pfcPosTrigger) , 
  support_fact = mfl4(_63744,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',23) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1( mpred_prop(header_sane,b11,0,pfcPosTrigger))
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=a11 , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0=a11 , 
  support_fact = mfl4(_82540,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',24) , 
  support_trig=ax , 
  none is support_status
header_sane : mpred_fwc1(a11)
call_mpred_post4 :- 
  unique is assertion_status , 
  post1=b11 , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0=b11 , 
  support_fact=a11 , 
  support_trig = '$pt'(header_sane,a11,rhs([b11])) , 
  none is support_status
header_sane : mpred_fwc1(b11)
call_mpred_post4 :- 
  identical is assertion_status , 
  post1=a11 , 
  fix_mp=header_sane , 
  mz=header_sane , 
  p0=a11 , 
  support_fact=b11 , 
  support_trig = '$pt'(header_sane,b11,rhs([a11])) , 
  ( simular( ( mfl4(Header_sane,header_sane,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',24) , 
               ax)) is 
    support_status)
header_sane: 1 ?- 
(0)$[system] '$c_call_prolog'.  no(clause) 
(1)$[$toplevel] '$initialise'.   %  toplevel.pl:486: 
(2)$[system] catch('$toplevel':initialise_prolog,A,'$toplevel':initialise_error(A)).   %  init.pl:546: 
(3)[$toplevel] initialise_prolog.   %  toplevel.pl:494: 
(5)[$toplevel] run_init_goals('<garbage_collected>').   %  toplevel.pl:547: 
(7)<*>$[$toplevel] run_init_goal('<garbage_collected>','([\'fc_01r.pfc\'])').   %  toplevel.pl:577: 
(8)$[system] catch_with_backtrace('<garbage_collected>','<garbage_collected>','<garbage_collected>').   %  init.pl:613: 
(9)$[system] catch(user:['fc_01r.pfc'],A,'$toplevel':true).   %  init.pl:546: 
(17)$[system] '$load_file'('fc_01r.pfc',user,'<garbage_collected>').   %  init.pl:2353: 
(20)$[system] '$sig_atomic'(setup_call_cleanup(with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',<clause>(0x561120392e80),[expand(false),expand(true)])),'$mt_do_load'(<clause>(0x561120392e80),'fc_01r.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',user,[expand(false),expand(true)]),'$mt_end_load'(<clause>(0x561120392e80)))).  no(clause) 
(21)$[system] '$c_call_prolog'.  no(clause) 
(23)$[system] setup_call_catcher_cleanup(system:with_mutex('$load_file','$mt_start_load'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',<clause>(0x561120392e80),[expand(false),expand(true)])),system:'$mt_do_load'(<clause>(0x561120392e80),'fc_01r.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',user,[expand(false),expand(true)]),A,system:'$mt_end_load'(<clause>(0x561120392e80))).   %  init.pl:646: 
(25)$[system] '$qdo_load_file'('fc_01r.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',user,[expand(false),expand(true)]).   %  init.pl:2546: 
(28)<*>$[system] '$do_load_file_2'('fc_01r.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',user,compiled,[expand(false),expand(true)]).   %  init.pl:2592: 
(32)$[system] setup_call_catcher_cleanup(system:'$start_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',1627717798.8010414),system:'$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',A,[expand(false),expand(true)]),B,system:'$end_consult'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',lexstate(202,swi),user)).   %  init.pl:646: 
(33)<*>$[system] '$load_file'('/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc','/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',A,[expand(false),expand(true)]).   %  init.pl:3006: 
(34)$[system] '$compile_term'((:-break),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc').   %  init.pl:3073: 
(35)$[system] '$compile_term'((:-break),A,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc',-).   %  init.pl:3083: 
(36)$[system] '$execute_directive'(break,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc').   %  init.pl:3548: 
(37)$[system] '$execute_directive_2'(break,'/opt/logicmoo_workspace_linux/packs_sys/pfc/t/sanity_base/fc_01r.pfc').   %  init.pl:3570: 
(38)<*>$[system] '$execute_directive_3'(break).   %  init.pl:3573: 
(39)$[system] catch(header_sane:break,error(A,B),system:'$exception_in_directive'(error(A,B))).   %  init.pl:546: 
(40)[system] break.  no(clause) 
(41)$[system] '$c_call_prolog'.  no(clause) 
(42)$[$toplevel] '$query_loop'.   %  toplevel.pl:812: 
(44)<*>$[$toplevel] '$execute_goal2'(header_sane:dumpST,[],true).   %  toplevel.pl:1087: 
(45)$[$toplevel] residue_vars(header_sane:header_sane:dumpST,[],header_sane:A).   %  toplevel.pl:1108: 
(46)$[$tabling] '$wfs_call'('$toplevel':stop_backtrace(header_sane:header_sane:dumpST),header_sane:A).   %  tabling.pl:934: 
(47)$[$toplevel] stop_backtrace(header_sane:header_sane:dumpST).   %  toplevel.pl:1111: 
(48)$[$toplevel] toplevel_call(header_sane:header_sane:dumpST).   %  toplevel.pl:1115: 
(51)[butterfly] butterfly:in_bfly(f,header_sane:zotrace(with_all_dmsg((prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1)))).   %  butterfly_console.pl:212: 
(53)[system] setup_call_catcher_cleanup(butterfly:bfly_set(butterfly,f),header_sane:zotrace(with_all_dmsg((prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1))),A,butterfly:bfly_set(butterfly,f)).   %  init.pl:646: 
(54)$[header_sane] first:zotrace(with_all_dmsg((prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1))).   %  first.pl:498: 
(58)[locally_each] locally_each:wtl_how(locally_each:trusted_redo_call_cleanup,locally_each:(always==[never,error,warning,info,filter,always]),dmsg:set_prolog_flag(dmsg_level,always),dmsg:locally(tlbugger:dmsg_match(show,A),header_sane:(prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1)),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])).   %  redo_locally.pl:199: 
(61)[system] setup_call_catcher_cleanup(dmsg:set_prolog_flag(dmsg_level,always),each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),header_sane:(prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail))),C,each_call_cleanup:mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))).   %  init.pl:646: 
(62)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((dmsg:locally(tlbugger:dmsg_match(show,A),header_sane:(prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1)),deterministic(B)),(notrace(B==true)->!;mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),true));dmsg:set_prolog_flag(dmsg_level,always),notrace(nb_setarg(1,mquietly(dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always])),dmsg:set_prolog_flag(dmsg_level,[never,error,warning,info,filter,always]))),notrace(fail)))).  no(clause) 
(66)[locally_each]# locally_each:wtl_how(header_sane:ecc,locally_each:clause_true(tlbugger,tlbugger:dmsg_match(show,A)),locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),header_sane:(prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1),locally_each:key_erase(tlbugger)).   %  redo_locally.pl:199: 
(70)[system] setup_call_catcher_cleanup(locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),each_call_cleanup:((header_sane:(prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1),deterministic(B)),(notrace(B==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,A)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail))),C,each_call_cleanup:mquietly(locally_each:key_erase(tlbugger))).   %  init.pl:646: 
(71)$[each_call_cleanup] '<meta-call>'(each_call_cleanup:((header_sane:(prolog_current_frame(877),b_setval('$dump_frame',877),dumpST1),deterministic(A)),(notrace(A==true)->!;mquietly(locally_each:key_erase(tlbugger)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),true));locally_each:key_asserta(tlbugger,tlbugger:dmsg_match(show,B)),notrace(nb_setarg(1,mquietly(locally_each:key_erase(tlbugger)),locally_each:key_erase(tlbugger))),notrace(fail)))).  no(clause) 
true.

header_sane: 2 ?- 

...keep going...
swipl -g 'set_prolog_flag(runtime_testing,5)' -g "(['fc_01s.pfc'])" -g "test_completed"
