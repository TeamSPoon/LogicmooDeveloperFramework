;; -*- mode: emacs-lisp; lexical-binding:t; coding: utf-8-emacs; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue Jul 20 10:10:01 2021
;; Desktop file format version 208
;; Emacs version 28.0.50

;; Global section:
(setq desktop-saved-frameset [frameset 1 (24822 41209 273840 357000) (desktop . "208") "root@e41e66344b8e" nil nil ((((minibuffer . t) (undecorated) (override-redirect) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-11-*-*-*-m-0-iso10646-1") (font-parameter . "Monospace 11") (border-width . 0) (internal-border-width . 0) (child-frame-border-width) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "black") (background-color . "white") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "white") (scroll-bar-background) (menu-bar-lines . 1) (tab-bar-lines . 0) (tool-bar-lines . 1) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 16) (scroll-bar-height . 16) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen) (visibility . t) (skip-taskbar) (z-group) (display-type . mono) (background-mode . dark) (cursor-color . "white") (environment) (frameset--id . "4BC1-FA12-F19C-FB4C") (frameset--mini t . t) (modeline . t) (unsplittable) (display . "10.0.0.78:0.0") (height . 50) (width . 173) (left . 2309) (top . 1371) (icon-name) (explicit-name)) ((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 56) (min-pixel-width-ignore . 56) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (pixel-width . 1243) (pixel-height . 686) (total-width . 177) (total-height . 49) (normal-height . 1.0) (normal-width . 1.0) (buffer "run_mud_server.pl" (selected . t) (hscroll . 0) (fringes 0 0 nil nil) (margins 3) (scroll-bars nil 3 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 77) (start . 1)) (prev-buffers ("*eww*" 1 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '(#("tree-sit" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("tree-sd" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("tree-sitt" 0 9 (isearch-regexp-function nil isearch-case-fold-search t)) #("keytari" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("keytar" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("dnskeys" 0 3 (isearch-case-fold-search t isearch-regexp-function nil) 3 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("dnd" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("dns" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) #("outlo" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("xel" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("GRam" 0 4 (isearch-regexp-function nil isearch-case-fold-search nil)) #("Gram." 0 5 (isearch-regexp-function nil isearch-case-fold-search nil))))
(setq regexp-search-ring '(#("tar" 0 3 (isearch-case-fold-search t))))
(setq register-alist nil)
(setq file-name-history '("/root"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/opt/logicmoo_workspace/prologmud_server/run_mud_server.pl"
  "run_mud_server.pl"
  'prolog-mode
  '(eldoc-mode lsp-mode dap-mode linum-mode lsp-completion-mode projectile-mode helm-mode vscode-minor-mode flycheck-mode override-global-mode company-mode lsp-modeline-code-actions-mode lsp-modeline-diagnostics-mode lsp-modeline-workspace-status-mode lsp-diagnostics-mode)
  77
  '(nil nil)
  nil
  nil
  '((buffer-display-time 24822 41206 241094 643000) (buffer-file-coding-system . undecided-unix))
  '((mark-ring nil)))

(desktop-create-buffer 208
  nil
  "*eww*"
  'eww-mode
  '(dap-mode linum-mode projectile-mode helm-mode vscode-minor-mode override-global-mode company-mode)
  1
  '(1 nil)
  t
  '(:history ((:url "https://duckduckgo.com/traffic" :title "DuckDuckGo Traffic") (:point 604 :url "https://duckduckgo.com/about" :title "About DuckDuckGo") (:point 15 :url "https://html.duckduckgo.com/html/?q=" :title "DuckDuckGo")))
  '((buffer-display-time 24822 41123 963018 806000) (buffer-file-coding-system . utf-8-unix) (truncate-lines . t) (eww-history-position . 0))
  '((mark-ring (1))))

